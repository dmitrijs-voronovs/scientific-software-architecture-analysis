quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Availability," DEFINES += SOFA_GUI_QTOGREVIEWER; DEFINES += SOFA_GUI_QGLVIEWER. Then, in the main window, you select the kind of viewer you; want. Qt will appear in gray, whereas QGLViewer and Ogre will be; available.; Warning, you must reload the scene when this change is made!. Viewers. The Viewers available now are:. QtViewer: uses openGL, derives a; QGLWidget in order to be embedded within Qt. This class will probably; not be maintained. Use QtGLViewer instead. QtGLViewer: uses the library; QGLViewer. Provides lots of functions to navigate through the scene.; More information at QGLViewer; Website. QtOgreViewer: Embed Ogre within a; Qwidget. Allows to get great visuals, through an intensive use of; shaders, materials.; Shadows are provided, but all the controls (show the mechanical; objects, force fields...) are disabled. ; Warning: Ogre is not provided by Sofa, you have to previously install; Ogre on your computer. ; The support works with Windows, Linux. ; - For Windows, the easiest way to proceed is to download and install; the SDK. ; - For Linux, you have to compile from the source. If Ogre's library; aren't installed in the default directory �/usr/local/lib/Ogre�; then, you have to set the; correct path in �YourSofaDirectory/share/config/plugins_unix.cfg�; To get it: Ogre; Website. QtOgreViewer; To; use this viewer, you must have Ogre installed on your computer. ; The configuration files are located in: �YourSofaDirectory/share/config/�. �plugins.cfg� describes the plugins used by Ogre for; Windows, and �plugins_unix.cfg� for... Linux.; By creating a .scene file with the same name as the simulation, you can; provide additional models, lights, visuals to the simulation( see Ogre; documentation for mode details ). This won't interact with Sofa, but; allows you to get a better render.; Additional textures, materials,; shaders... in Ogre, have to be put in �; YourSofaDirectory/share/textures� or �; YourSofaDirectory/share/materials� or; �YourSofaDirectory/share/shaders� ... T",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:4118,down,download,4118,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,1,['down'],['download']
Availability, HexahedronFEMForceField [#2778]( https://github.com/sofa-framework/sofa/pull/2778 ); - [SofaSimulation] Remove DAGNodeMultiMappingElement [#2694]( https://github.com/sofa-framework/sofa/pull/2694 ); - [SofaSparseSolver] Disable matrix export in SparseLDLSolver [#2725]( https://github.com/sofa-framework/sofa/pull/2725 ); - [SofaSparseSolver] SparseLUSolver and SparseCholeskySolver support fill reducing permutation [#2788]( https://github.com/sofa-framework/sofa/pull/2788 ); - [SofaTest] Move last tests to Sofa.Component [#2996]( https://github.com/sofa-framework/sofa/pull/2996 ); - [SofaTest] Remove last usages and make it optional [#3000]( https://github.com/sofa-framework/sofa/pull/3000 ); - [SofaUserInteraction] remove shadow variable [#2795]( https://github.com/sofa-framework/sofa/pull/2795 ); - [SolidMechanics.FEM.HyperElastic] Reformat and clean TetrahedronHyperelasticityFEMForceField [#3141]( https://github.com/sofa-framework/sofa/pull/3141 ); - [SolidMechanics] TetrahedronFEMForceField: adds error message for Poisson's ratio [#2908]( https://github.com/sofa-framework/sofa/pull/2908 ); - [StateContainer] Remove deprecated code for topologicalChanges in MechanicalObject. [#2867]( https://github.com/sofa-framework/sofa/pull/2867 ); - [Topology.Dynamic] Remove implicit conversion warnings [#2973]( https://github.com/sofa-framework/sofa/pull/2973 ). **Plugins / Projects**; - [Plugins] Create ArticulatedSystem plugin (originally from SofaGeneralRigid) [#2684]( https://github.com/sofa-framework/sofa/pull/2684 ); - [Geomagic] Clean scene and code warnings + minor changes [#2846]( https://github.com/sofa-framework/sofa/pull/2846 ); - [Geomagic] Fix CMake and replace includes from legacy header to new architecture [#3076]( https://github.com/sofa-framework/sofa/pull/3076 ); - [SensableEmulation][CMake] Clean Boost dep [#3067]( https://github.com/sofa-framework/sofa/pull/3067 ); - [SofaAssimp] fix shadow variable [#2844]( https://github.com/sofa-framework/sofa/pull/2844,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:129983,error,error,129983,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability, NodeToggleController [#457]( https://github.com/sofa-framework/sofa/pull/457 ). ### Breaking. **Modules**; - **[SofaBaseMechanics]**[SofaMiscForceField] Homogeneization of mass components in SOFA [#637]( https://github.com/sofa-framework/sofa/pull/637 ); - **[SofaBaseMechanics]** Clean barycentric mapping [#797]( https://github.com/sofa-framework/sofa/pull/797 ); - [SofaBoundaryCondition] Refactor FixedPlaneConstraint (breaking) [#803]( https://github.com/sofa-framework/sofa/pull/803 ); - **[SofaFramework]** [BREAKING] Replacing DataEngine with SimpleDataEngine [#814]( https://github.com/sofa-framework/sofa/pull/814 ); - **[SofaFramework]** [BREAKING] Rename: data tracker has changed [#822]( https://github.com/sofa-framework/sofa/pull/822 ); - [SofaPreconditioner] modularization [#668]( https://github.com/sofa-framework/sofa/pull/668 ); - [SofaSparseSolver] modularization [#668]( https://github.com/sofa-framework/sofa/pull/668 ). ### Improvements. **Architecture**; - [CMake] use ccache if available [#692]( https://github.com/sofa-framework/sofa/pull/692 ); - [Cmake] Add a findCython.cmake [#734]( https://github.com/sofa-framework/sofa/pull/734 ); - [CMake] ADD QtIFW generator + improvements [#796]( https://github.com/sofa-framework/sofa/pull/796 ); - [SofaMacros] ADD CMake macro to create pybind11 & cython targets and modules #859( https://github.com/sofa-framework/sofa/pull/859 ). **Modules**; - [All] Use drawtool everywhere [#704]( https://github.com/sofa-framework/sofa/pull/704 ); - [All] Sofa add mechanical matrix mapper [#721]( https://github.com/sofa-framework/sofa/pull/721 ); - **[SofaBaseTopology]** Add battery of tests on topology containers [#708]( https://github.com/sofa-framework/sofa/pull/708 ); - **[SofaBaseTopology]** Topology change propagation to Mechanical State [#838]( https://github.com/sofa-framework/sofa/pull/838 ); - **[SofaBaseMechanics]** Optimize barycentric mapping initialization [#798]( https://github.com/sofa-framework/sofa/pull/798 ); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:278528,avail,available,278528,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['avail'],['available']
Availability," collision object is mapped to the simulated deformable model using a Mapping, this time a MechanicalMapping: BarycentricMapping. You may wonder what the difference is between this mapping and the one used for the visual model, as we are using the same component! What makes a mapping visual or mechanical?; This is determined by the template used to create the mapping:; Find the BarycentricMapping component using the Filter. From the dropdown menu, select Vec3d, Vec3d.; This mean it transforms a state expressed by Vec3d type into Vec3d. Remember, collision models are only expressed in Vec3d type, so the mapped state must be of Vec3d types.; Open the BarycentricMapping properties and go to the Properties 2/2 tab. Set the Input object to map to ""@.."" and the Output object to map to ""@.""; This corresponds to mapping from the MechanicalObject from one node above to the MechanicalObject of the current node.; Finally, we will remove our old TSphereModel, and replace it with one in the CollisionNode; Delete the current TSphereModel. Add a new TSphereModel to the CollisionNode, and change the Default contact stiffness property to ""1000"".; Results; Run in SOFA. Change to DT to ""0.005"". Animate.; You can see height spheres, corresponding to the height corners of the cube chosen to represent our collision mode. Of course, using four height spheres to do the collision detection is much faster than 171 as in the previous scene. But the behavior is also very different.; Apply a force on one of the spheres by holding down the Shift key, and clicking and dragging a sphere with the mouse.; You will be able to deform the object. This is due to the MechanicalMapping.; We display some debug information about the mechanical mapping using blue lines. Each point of the collision model depends on several points of the simulated object. If a force is applied to one of the collision model's points, the force will be propagated to all the points that depend on it.; Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/6_FullObject.html:2975,down,down,2975,examples/Tutorials/StepByStep/FullObject/6_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/6_FullObject.html,1,['down'],['down']
Availability," cure the violation prior to 30 days after; your receipt of the notice. Termination of your rights under this section does not terminate the; licenses of parties who have received copies or rights from you under; this License. If your rights have been terminated and not permanently; reinstated, you do not qualify to receive new licenses for the same; material under section 10. 9. Acceptance Not Required for Having Copies. You are not required to accept this License in order to receive or; run a copy of the Program. Ancillary propagation of a covered work; occurring solely as a consequence of using peer-to-peer transmission; to receive a copy likewise does not require acceptance. However,; nothing other than this License grants you permission to propagate or; modify any covered work. These actions infringe copyright if you do; not accept this License. Therefore, by modifying or propagating a; covered work, you indicate your acceptance of this License to do so. 10. Automatic Licensing of Downstream Recipients. Each time you convey a covered work, the recipient automatically; receives a license from the original licensors, to run, modify and; propagate that work, subject to this License. You are not responsible; for enforcing compliance by third parties with this License. An ""entity transaction"" is a transaction transferring control of an; organization, or substantially all assets of one, or subdividing an; organization, or merging organizations. If propagation of a covered; work results from an entity transaction, each party to that; transaction who receives a copy of the work also receives whatever; licenses to the work the party's predecessor in interest had or could; give under the previous paragraph, plus a right to possession of the; Corresponding Source of the work from the predecessor in interest, if; the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the; rights granted or affirmed under",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:41590,Down,Downstream,41590,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['Down'],['Downstream']
Availability," documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an API to display primitives on screen. For now, only the OpenGL (fixed-pipeline version) implementation has been made.; - add a Logger; - add the diffusion effect in SOFA (heat transfer); - SOFA_USE_MASK compilation variable to activate or de-activate the masks in SOFA; - DataTracker: simple and elegant way to track Data in Engine; - extlibs: update cimg to version 1.7.3; - Add guidelines for contributions in CONTRIBUTING.md. ### Moved files. - Kernel modules of SOFA (SofaFramework, SofaBase, SofaCommon and SofaSimulation) have been moved to one common module SofaKernel, located at _sofa_root/SofaKernel_. SofaKernel is a pure LGPL module.; - code in _sofa_root/modules/sofa/simulation/_ has been splitted into three modules of SofaKernel: SofaSimulationCommon, SofaSimulationTree, SofaSimulationGraph; - MOVE the SofaPardiso module as a plugin; - Move OglTetrahedralModel into a new plugin called VolumetricRendering. - Minor moves; - Move ColorMap code to helper and let (Ogl)ColorMap from SofaOpenGLVisual doing OpenGL stuff; - Move TorsionForceField and ComplementaryROI into SOFA (those two components where in a deprecated repository _sofa_root/modules/sofa/components/_). - [Compliant]; - moving propagate_constraint_force_visitor",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:341845,mask,masks,341845,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['mask'],['masks']
Availability," floating point operations for addition and multiplication only.; if(SOFACUDA_DOUBLE_PRECISE); set(SOFA_GPU_CUDA_DOUBLE_PRECISE 1) # #cmakedefine; endif(). option(SOFACUDA_PRECISE ""Use IEEE 754-compliant floating point operations."" OFF). include(SofaCUDANvccFlags.cmake). # nvcc uses a ""host code compiler"" to compile CPU code, specified by CUDA_HOST_COMPILER.; # With some versions of CMake, CUDA_HOST_COMPILER defaults to CMAKE_C_COMPILER,; # but few host compilers are actually supported. Workarounds should go here.; if (${CUDA_HOST_COMPILER} MATCHES ""ccache$""); message(STATUS ""SofaCUDA: CUDA host compiler was set to ccache, changing to g++""); set(CUDA_HOST_COMPILER ""g++"" CACHE STRING ""Host side compiler used by NVCC"" FORCE); endif(). # quick and dirty fix for nvcc compatibility with -fno-partial-inlining flag; set(CUDA_PROPAGATE_HOST_FLAGS OFF). if(WIN32); add_definitions(""-DWIN32""); set(WINDOWSOPTIONS ""/MD""); endif(). # Make the compiler definitions available to nvcc; add_definitions(""-DSOFA_BUILD_SOFACUDA""); # Give include directories to nvcc compiler.; # Note: keep cuda_include_directories() before cuda_add_library().; cuda_include_directories(""${CMAKE_CURRENT_SOURCE_DIR}""); cuda_include_directories(""${CMAKE_CURRENT_SOURCE_DIR}/src""); cuda_include_directories(""${CMAKE_BINARY_DIR}/include""); cuda_add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${CUDA_SOURCES} ${README_FILES} OPTIONS ${VERBOSE_PTXAS} ${WINDOWSOPTIONS}). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR};${CMAKE_CURRENT_SOURCE_DIR}/src>""); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""${SOFACUDA_COMPILE_DEFINITIONS}""); target_link_libraries(${PROJECT_NAME}; Sofa.Component.Mass; Sofa.Component.SolidMechanics.FEM.Elastic; Sofa.Component.SolidMechanics.FEM.HyperElastic; Sofa.Component.SolidMechanics.TensorMass; Sofa.Component.MechanicalLoad; Sofa.Component.Collision.Response.Contact; Sofa.Component.Collision.Detection.Alg",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:19108,avail,available,19108,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,1,['avail'],['available']
Availability," https://github.com/sofa-framework/sofa/pull/1311 ); - [SofaCUDA] Compilation without OpenGL [#1242]( https://github.com/sofa-framework/sofa/pull/1242 ). **Examples / Scenes**; - [examples] Add a scene illustrating ShewchukPCG [#1420]( https://github.com/sofa-framework/sofa/pull/1420 ). ### Bug Fixes. **Architecture**; - [CMake] Add SofaNonUniformFem to the dependencies of SofaMisc [#1384]( https://github.com/sofa-framework/sofa/pull/1384 ); - [SofaFramework/CMake] Create configuration type dir before copying lib [#1347]( https://github.com/sofa-framework/sofa/pull/1347 ); - [extlibs/gtest] Add character test in gtest paramName to allow dash character [#1265]( https://github.com/sofa-framework/sofa/pull/1265 ). **Modules**; - [All] Clean warnings for option config, again [#1339]( https://github.com/sofa-framework/sofa/pull/1339 ); - [All] Fix SOFA_LIBSUFFIX used in Debug by PluginManager [#1313]( https://github.com/sofa-framework/sofa/pull/1313 ); - [All] Overridden 'canCreate' methods should always log an error message when they fail [#1294]( https://github.com/sofa-framework/sofa/pull/1294 ); - **[SofaBaseTopology]** Fix GridTopology edge computation [#1323]( https://github.com/sofa-framework/sofa/pull/1323 ); - **[SofaBaseTopology]**[SofaExporter] Fix failing tests due to changes in topology [#1335]( https://github.com/sofa-framework/sofa/pull/1335 ); - [SofaConstraint] Fix test further to #1369 [#1386]( https://github.com/sofa-framework/sofa/pull/1386 ); - **[SofaEigen2Solver]** Fix CMake test on the version of Eigen [#1416]( https://github.com/sofa-framework/sofa/pull/1416 ); - **[SofaEngine]** Fix engine unit tests [#1280]( https://github.com/sofa-framework/sofa/pull/1280 ); - **[SofaEngine]** Fix Engine_test [#1338]( https://github.com/sofa-framework/sofa/pull/1338 ); - **[SofaFramework]** Windows/VS: Remove warnings flags from definitions [#1368]( https://github.com/sofa-framework/sofa/pull/1368 ); - [SofaGuiQt] Fix compilation for SOFA_DUMP_VISITOR_INFO [#1",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:234161,error,error,234161,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability," of an executable work include anything, other; than the work as a whole, that (a) is included in the normal form of; packaging a Major Component, but which is not part of that Major; Component, and (b) serves only to enable use of the work with that; Major Component, or to implement a Standard Interface for which an; implementation is available to the public in source code form. A; ""Major Component"", in this context, means a major essential component; (kernel, window system, and so on) of the specific operating system; (if any) on which the executable work runs, or a compiler used to; produce the work, or an object code interpreter used to run it. The ""Corresponding Source"" for a work in object code form means all; the source code needed to generate, install, and (for an executable; work) run the object code and to modify the work, including scripts to; control those activities. However, it does not include the work's; System Libraries, or general-purpose tools or generally available free; programs which are used unmodified in performing those activities but; which are not part of the work. For example, Corresponding Source; includes interface definition files associated with source files for; the work, and the source code for shared libraries and dynamically; linked subprograms that the work is specifically designed to require,; such as by intimate data communication or control flow between those; subprograms and other parts of the work. The Corresponding Source need not include anything that users; can regenerate automatically from other parts of the Corresponding; Source. The Corresponding Source for a work in source code form is that; same work. 2. Basic Permissions. All rights granted under this License are granted for the term of; copyright on the Program, and are irrevocable provided the stated; conditions are met. This License explicitly affirms your unlimited; permission to run the unmodified Program. The output from running a; covered work is covered by t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:25794,avail,available,25794,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['avail'],['available']
Availability, post-sprint [#476]( https://github.com/sofa-framework/sofa/pull/476 ); - [SofaSimulationCore]; - Add stop in add_mbktomatrixVisitor [#439]( https://github.com/sofa-framework/sofa/pull/439 ). **Other modules**; - [All]; - Fix warnings and strange double incrementation on iterator [#364]( https://github.com/sofa-framework/sofa/pull/364 ); - installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - Fix override warnings [#423]( https://github.com/sofa-framework/sofa/pull/423 ); - FIX Sofa installation failure (tries to install non-existing files) [#470]( https://github.com/sofa-framework/sofa/pull/470 ); - ADD _d suffix for debug libs [#511]( https://github.com/sofa-framework/sofa/pull/511 ); - [SofaBoundaryCondition]; - Fix LinearForceField that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - FIX Removed incorrect warning from LinearForceField [#384]( https://github.com/sofa-framework/sofa/pull/384 ); - [SofaConstraint]; - Fix error due to MacOS >= 10.11 using a relative filename [#325]( https://github.com/sofa-framework/sofa/pull/325 ); - Fix issue in GenericConstraintCorrection [#567]( https://github.com/sofa-framework/sofa/pull/567 ); - [SofaDeformable]; - Fix RestShapeSpringsForceField [#367]( https://github.com/sofa-framework/sofa/pull/367 ); - [SofaExporter]; - FIX allow to extend VTKExporter in a plugin [#309]( https://github.com/sofa-framework/sofa/pull/309 ); - [SofaGeneralEngine]; - Fix some XyzTransformMatrixEngine::update() function [#343]( https://github.com/sofa-framework/sofa/pull/343 ); - [SofaGeneralImplicitOdeSolver]; - fix test [#478]( https://github.com/sofa-framework/sofa/pull/478 ); - [SofaGraphComponent]; - Fix the test that was wrong and thus failing in SceneChecker [#405]( https://github.com/sofa-framework/sofa/pull/405 ); - Fix a crashing bug in SceneCheckAPIChange. [#479]( https://github.com/sofa-framework/sofa/pull/479 ); - FIX SceneChecker & RequiredPlugin [#563,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:315065,error,error,315065,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability," root of the scene graph, and controls; the application by calling class; sofa::simulation::tree:Simulation.; The RealGUI uses an internal timer to repeatedly call; method sofa::simulation::tree:Simulation::animate(GNode* root, double; dt) and then update the viewer. To select the; viewers:. sofa-default.cfg located in; your Sofa main directory allows to define what kind of viewer you are; willing to have. ; By commenting (adding a�#� in front of the line) or uncommenting; (removing the �#�) lines, you can allow multiple kind of viewer.; For example, if you want to have the choice to render the scene with; QtGLViewer and QtOgreViewer, just modify sofa-default.cfg as below:. # DEFINES += SOFA_GUI_QT ; DEFINES += SOFA_GUI_QTOGREVIEWER; DEFINES += SOFA_GUI_QGLVIEWER. Then, in the main window, you select the kind of viewer you; want. Qt will appear in gray, whereas QGLViewer and Ogre will be; available.; Warning, you must reload the scene when this change is made!. Viewers. The Viewers available now are:. QtViewer: uses openGL, derives a; QGLWidget in order to be embedded within Qt. This class will probably; not be maintained. Use QtGLViewer instead. QtGLViewer: uses the library; QGLViewer. Provides lots of functions to navigate through the scene.; More information at QGLViewer; Website. QtOgreViewer: Embed Ogre within a; Qwidget. Allows to get great visuals, through an intensive use of; shaders, materials.; Shadows are provided, but all the controls (show the mechanical; objects, force fields...) are disabled. ; Warning: Ogre is not provided by Sofa, you have to previously install; Ogre on your computer. ; The support works with Windows, Linux. ; - For Windows, the easiest way to proceed is to download and install; the SDK. ; - For Linux, you have to compile from the source. If Ogre's library; aren't installed in the default directory �/usr/local/lib/Ogre�; then, you have to set the; correct path in �YourSofaDirectory/share/config/plugins_unix.cfg�; To get it: Ogre; We",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:3395,avail,available,3395,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,1,['avail'],['available']
Availability,"# SofaMatrix. SofaMatrix is a SOFA plugin containing components related to linear system matrices. ## Components. The plugin contains the following components that can be placed into a SOFA scene:. ### GlobalSystemMatrixExporter. GlobalSystemMatrixExporter is a component to export the matrix of a linear system as a file. #### Filename. A Data ""filename"" is available to specify the name of the exported file.; If ""filename"" is not set, it gets the name of the component. ""filename"" can be an absolute path, or relative to the SOFA executable.; Directories are created if necessary. The extension in ""filename"" defines the file format. A number is added after the filename.; It corresponds to the number of elapsed time steps when the file is exported. Depending on the Data ""exportEveryNumberOfSteps"", the matrix can be export only at specified number of time steps. #### Supported File Format. GlobalSystemMatrixExporter supports the following file formats:; * **txt**: exports a Python-like list of lists, containing all the matrix values including the zeros.; It uses the `operator<<` in `BaseMatrix`.; * **csv**: exports a simple comma-separated values file, containing all the matrix values including the zeros.; * **jpg**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero.; * **png**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero.; * **bmp**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero. #### Link to Linear Solver. GlobalSystemMatrixExporter must have a link to a linear solver (a component inheriting from `sofa::core::behavior::LinearSolver`). The link can be explicit. Example:; ```xml; <GlobalSystemMatrixExporter linearSolver=""@pathToLinearSolver""/>; ```. The link can be implicit. I.e the component will search for a linear solver in the current Node. Example:; ```xml; <SparseLDLSolver/>; <",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md:359,avail,available,359,applications/plugins/SofaMatrix/SofaMatrix.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md,1,['avail'],['available']
Availability,"# Welcome. Welcome to the SOFA Community! Here is a brief summary of how it is structured:. - SOFA Users: people using SOFA by writing scenes or using the SOFA API.; - SOFA Developers: people programming into SOFA, modifying the API, writing plugins.; - SOFA Contributors: (awesome) people proposing their changes in SOFA code via pull-requests.; - SOFA Reviewers: people reviewing and merging the pull-requests. This group is validated by the Scientific and Technical Committee (STC).; - SOFA Consortium: research centers and companies willing to share the cost of development and maintenance of SOFA, hosted by Inria.; - SOFA Consortium Staff: administrators of SOFA and its ecosystem. This group is directed by the Executive Committee (EC). All SOFA Developers are gladly invited to the SOFA-dev meetings. ; They take place remotely every Wednesday at 10 a.m. CET and are animated by the SOFA Reviewers + the Consortium Staff. ; [Subscribe to SOFA-dev mailing-list](https://sympa.inria.fr/sympa/subscribe/sofa-dev) to get the agenda, reports and conference room url. About the steering committees:. - SOFA Scientific and Technical Committee (STC): defines the technical roadmap twice a year, validate the contribution rules, the Reviewers team and discuss every technical point in SOFA.; - SOFA Executive Committee (EC): decides on evolutions of the membership contract, the communication policy and the priorities of the Consortium. A more detailed definition of the committees is available [in the SOFA website](https://www.sofa-framework.org/consortium/presentation/). # Getting started. Please **read carefully** [the GitHub guide on Contributing to Open Source](https://guides.github.com/activities/contributing-to-open-source/). We also recommend you to check this [more detailed documentation on issues and pull requests](https://help.github.com/categories/collaborating-with-issues-and-pull-requests/). # Support - Discussion forum. For any **question** (help needed, problem of understandi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:582,mainten,maintenance,582,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['mainten'],['maintenance']
Availability,( https://github.com/sofa-framework/sofa/pull/2640 ); - [SofaConstraint] Replace raw pointer to Link [#2770]( https://github.com/sofa-framework/sofa/pull/2770 ); - [SofaConstraint] Sanitize [#2577]( https://github.com/sofa-framework/sofa/pull/2577 ); - [SofaCore] Add ObjectFactory_test.cpp [#2696]( https://github.com/sofa-framework/sofa/pull/2696 ); - [SofaCore] Check link to mstate if specified [#2553]( https://github.com/sofa-framework/sofa/pull/2553 ); - [SofaCore] Fix type conversion [#2639]( https://github.com/sofa-framework/sofa/pull/2639 ); - [SofaCore] Name dynamically allocated vec ids [#2811]( https://github.com/sofa-framework/sofa/pull/2811 ); - [SofaCore_test] Minor clean of few unit tests [#2573]( https://github.com/sofa-framework/sofa/pull/2573 ); - [SofaEulerianFluid] Move examples into plugin [#2833]( https://github.com/sofa-framework/sofa/pull/2833 ); - [SofaGeneralEngine] Fix some warnings [#2723]( https://github.com/sofa-framework/sofa/pull/2723 ); - [SofaGuiQt] Error handling when exporting graph [#2771]( https://github.com/sofa-framework/sofa/pull/2771 ); - [SofaGuiQt] Fix english spelling: AdvancedTimer instead of AdvanceTimer [#2816]( https://github.com/sofa-framework/sofa/pull/2816 ); - [SofaGuiQt] Modernize the 'qt::connect' to use the c++ syntax [#2943]( https://github.com/sofa-framework/sofa/pull/2943 ); - [SofaGuiQt] Remove sec unit from GUI [#2742]( https://github.com/sofa-framework/sofa/pull/2742 ); - [SofaGuiQt] Rename attributes to follow SOFA guidelines. [#2944]( https://github.com/sofa-framework/sofa/pull/2944 ); - [SofaKernel] fix shadow variable [#2791]( https://github.com/sofa-framework/sofa/pull/2791 ); - [SofaMiscCollision] Extract OBB/Capsule code into its own plugin [#2820]( https://github.com/sofa-framework/sofa/pull/2820 ); - [SofaMiscFEM] Clean FastTetrahedralCorotationalForceField and add extraData [#2569]( https://github.com/sofa-framework/sofa/pull/2569 ); - [SofaMiscForceField] Fix type conversion in tests [#2714]( http,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:127594,Error,Error,127594,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Error'],['Error']
Availability,( https://github.com/sofa-framework/sofa/pull/311 ); - Fixes #183 : Use the qt menu instead of the native one in Mac OS [#366]( https://github.com/sofa-framework/sofa/pull/366 ); - fix ImageBMP issue + remove Laparoscopic stuff [#499]( https://github.com/sofa-framework/sofa/pull/499 ); - Pickhandler minor fixs [#522]( https://github.com/sofa-framework/sofa/pull/522 ); - Fix: Intel graphics on linux now overrides the core profile context [#526]( https://github.com/sofa-framework/sofa/pull/526 ); - [SofaImplicitField]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SofaPhysicsAPI]; - FIX: compilation due to Sofa main API changes [#549]( https://github.com/sofa-framework/sofa/pull/549 ); - [SofaPython]; - Fix python live coding that is broken [#414]( https://github.com/sofa-framework/sofa/pull/414 ); - FIX crash in python script when visualizing advanced timer output [#458]( https://github.com/sofa-framework/sofa/pull/458 ); - FIX error in script for plotting advancedTimer output [#519]( https://github.com/sofa-framework/sofa/pull/519 ); - Fix python unicode data [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - [SofaSPHFluid]; - Fix invalid plugin initialization. [#467]( https://github.com/sofa-framework/sofa/pull/467 ); - [SofaVolumetricData]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SceneCreator]; - FIX build error with AppleClang 6.0.0.6000051 [#483]( https://github.com/sofa-framework/sofa/pull/483 ); - [THMPGSpatialHashing]; - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ). **Scenes**; - Fix scenes [#310]( https://github.com/sofa-framework/sofa/pull/310 ); - Fix scenes with bad RegularGrid position relative to 270 [#324]( https://github.com/sofa-framework/sofa/pull/324 ); - Fix scenes errors and crashes [#505]( https://github.com/sofa-framework/sofa/pull/505 ); - FIX all scenes failures 17.12 [#565]( https://github.com/sofa-f,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:319984,error,error,319984,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"- [examples] Introduce examples for DistanceMapping and SquareDistanceMapping [#3756](https://github.com/sofa-framework/sofa/pull/3756). ### Bug Fixes. **Architecture**; - [Simulation.Graph] SimpleAPI: Remove reference to Node argument in createChild() [#3620](https://github.com/sofa-framework/sofa/pull/3620) ; - [defaulttype] Fix cuda template instantiation [#3646](https://github.com/sofa-framework/sofa/pull/3646); - [Core] Fix UB (misaligned address) when comparing string [#3664](https://github.com/sofa-framework/sofa/pull/3664) ; - [Helper, GL] Fix various memleaks [#3671](https://github.com/sofa-framework/sofa/pull/3671) ; - [Helper] ArgumentParser: Fix map insertion when parsing more than once [#3672](https://github.com/sofa-framework/sofa/pull/3672) ; - [Defaulttype] Add generic precision aliases for Mat templates [#3675](https://github.com/sofa-framework/sofa/pull/3675) ; - [Config] Disable SOFA_EXTERN_TEMPLATE [#3678](https://github.com/sofa-framework/sofa/pull/3678) ; - [all] Simple robustification [#3685](https://github.com/sofa-framework/sofa/pull/3685) ; - [Helper] Fix FileRepository::relativeToPath [#3693](https://github.com/sofa-framework/sofa/pull/3693) ; - [Core] Fix MSVC warning in Link [#3763](https://github.com/sofa-framework/sofa/pull/3763) ; - [Core] Access cumulative sum of VecIds through proxy class [#3918](https://github.com/sofa-framework/sofa/pull/3918) . **Modules**; - [GUI] Fix CMake Packaging [#3595](https://github.com/sofa-framework/sofa/pull/3595) ; - [Component.Engine] Replace some explicit instanciations on double with SReal [#3629](https://github.com/sofa-framework/sofa/pull/3629) ; - [Topology.Container.Grid] RegularGrid: Fix rounding errors with SReal=float [#3636](https://github.com/sofa-framework/sofa/pull/3636); - [Collision.Geometry] Fix transparency while displaying the Bounding Collision Cubemodel [#3658](https://github.com/sofa-framework/sofa/pull/3658) ; - [MechanicalLoad] Fix ConstantForceField when no force given [#3670](",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:55999,robust,robustification,55999,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['robust'],['robustification']
Availability,". Advanced Shader (7/7). Description; This follows the previous part on Shader, but now we will see how to use it more efficiently.; Key points; We have seen how to call a Shader, but we may need to send uniform values to the Shader in order to change parameters on the fly.; 		This can be done with a set of objects called Ogl{Type}{Size}Variable. They can handle a lot of different formats : vectors, matrices, array of vectors in int and float types (see components/visualmodel/OglVariable.h for a list of available types).; Texture can be also given to the Shader, using OglTexture, which has a lot of parameters available; but the most important one is the texture unit id.; Another problem arises if you want to mix different effects (for example: toon shading and normal mapping).; 		You can write a big Shader that does a lot of things, and activate only what you want with a system of macro.; In your favorite editor, open /Sofa/share/shaders/generalRenderingShader.vert and /Sofa/share/shaders/generalRenderingShader.frag.; In the .frag file, look at line 85. This section defines the variables that are needed to execute the Perlin Noise Bump effect.; Now look at line 369. This section executes the Perlin Noise Bump effect.; Notice for either of these sections to be compiled, the variable PERLIN_NOISE_BUMP must be defined. We can define this variable, and the other variables that are needed for this effect, directly in the scene graph.; In the OglShader component, change to vertFilename and the fragFilename to ""/Sofa/share/shaders/generalrenderingshader.vert"" and ""/Sofa/share/shaders/generalrenderingshader.frag""; Add a OglShaderDefineMacro component, and change the name to ""PHONG"".; This will give the same basic shading as in the last step.; Add a OglShaderDefineMacro component, and change the name to ""PERLIN_NOISE_BUMP"".; Add three OglFloatVariables, and name them ""perlinBumpFrequency"", ""perlinBumpFactor"" and ""perlinBumpPersistance"". Set their Uniform Value properties to """,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/6_Visual.html:509,avail,available,509,examples/Tutorials/StepByStep/Visual/6_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/6_Visual.html,2,['avail'],['available']
Availability,". Creation of a Pendulum (5/8); Description; Now we will create internal forces to add interactions between the particles of our mechanical object. ; The concept of Forces are handled in SOFA by components called ForceFields. We implemented numerous algorithms to simulate Mass Spring systems, Finite Elements, Rigid Bodies, etc. Again, there are examples available for these different types. In this tutorial, we will add a Spring between the two particles.; Key points; We will use a StiffSpringForceField to model our spring. ; Type ""StiffSpring"" in the Filter textbox. You will see StiffSpringForceField in two categories. Both are the same. Drag and drop the StiffSpringForceField from either category over the FirstObject node. Double click the StiffSpringForceField in the Modeler scene graph.; Click on the Property 2/2 tab. In the spring section, increase the 0 to ""1"", and press Display the values. Then, press the Update button found in the bottom left corner of the window. ; The titles of the columns now describe all the parameters needed to create a spring: two indices (Index1, Index2) corresponding to the particles attached by the spring, a stiffness coefficient (Ks), a damping coefficient (Kd), and the rest length of the spring (L).; Type the values ""0"", ""1"", ""100"", ""5"" and ""1"" into the columns Index1, Index2, Ks, Kd and L respectively. Press OK to return to the Modeler. Run the scene in SOFA, and animate.; Results; The two particles are now linked together by a spring. The second particle continues to fall because of gravity, but a spring, displayed by a green line, keeps them close. (Note: If you can't see the green line, make sure ""Force Fields"" is selected in the View tab in SOFA); We have modeled a very basic pendulum with only 5 components. Take some time to customize this scene. Try modifying the parameters of the spring, the position and parameters of the particles of the mechanical object, or adding particles or springs.; Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/4_Pendulum.html:356,avail,available,356,examples/Tutorials/StepByStep/Pendulum/4_Pendulum.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/4_Pendulum.html,1,['avail'],['available']
Availability,". Creation of a Scene (4/9). Description; Now that we have a topology, a mechanical object well initialized, it is time to simulate the deformation of the object. To do so, we add a ForceField to the scene.; You have to choose a ForceField that is compatible with your MechanicalObject. In order to be compatible, the two must use the same template.; Find the MechanicalObject component using the Filter.; Notice that beside MechanicalObject is a dropdown menu with Vec3d selected.; Click the dropdown menu to see the other possible selections.; You will see choices such as Rigid and Vec2f. These are possible templates. Since we didn't concern ourselves with the template when we added the MechanicalObject to our scene, our MechanicalObject uses the default template, Vec3d. This means we won't be able to add ForceFields using Rigid types, for example. Some ForceFields rely on a given topology. Most of the time, their name informs you about the topology the are relying on.; We can see that the SparceGridTopology makes a grid of particles. If these particles were joined by lines going down the rows and columns of these particles, they would become cubes. Cubes have six faces, and are therefore hexahedral. This means that we can use all Hexadedron based ForceFields with the SpaceGridTopology.; Key points; We chose to model our deformation using Finite Elements: HexahedronFEMForceField.; Find and add the HexahedronFEMForceField to the Object node. Go to the Properties 2/2 tab, and change the Young's Modulus from 5000 to ""200"".; Results; Run in SOFA. To get a better view of the animation, change the DT from 0.02 to ""0.001"", and animate.; Now you should see the hexahedra corresponding to the Finite Elements. When you animate, you will be able to see the deformation of the cells of the grid.; Related; Modify the young modulus of the FEM force field: the higher, the stiffer will be the model. ; Modify the poisson ratio (between 0 and 0.5).; Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/3_FullObject.html:1093,down,down,1093,examples/Tutorials/StepByStep/FullObject/3_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/3_FullObject.html,1,['down'],['down']
Availability,". Creation of a Scene (7/9). Description; Like we did in this part of the tutorial, we will map another model to the simulated mechanical object.; 		This time, it won't be only a visual model, but a mechanical object which aims at handling the collisions, and to transmit the forces due to the collision response to the simulated object. ; Once this model is able to transmit the forces, we just need to add some collision models like we did here ; Remember:; ; Visual Mapping: the information is passed Top-Down: the simulated object propagates the positions (method apply) and the velocities (method applyJ) to the mapped model; Mechanical Mapping: the information is passed both ways: the simulated object propagates the positions (method apply) and the velocities (method applyJ) to the mapped model, and on the other site, the mapped model propagates the forces to the simulated object (method applyJT) . Key points; Add a new GNode to the Object node, and rename it ""CollisionNode"".; Now we need to load the model from a mesh file. As a first example we will use a cube as the collision object.; Add a MeshTopology to the CollisionNode, and change the Filename of the mesh to ; /mySofaDirectory/Sofa/share/mesh/cube.obj.; Next we need a MechanicalObject to store the positions, velocities and forces of the collision object; Add a MechanicalObject to the CollisionNode. Change the Scale of the DOFs in 3 dimensions property to ""(6 6 6)"".; The collision object is mapped to the simulated deformable model using a Mapping, this time a MechanicalMapping: BarycentricMapping. You may wonder what the difference is between this mapping and the one used for the visual model, as we are using the same component! What makes a mapping visual or mechanical?; This is determined by the template used to create the mapping:; Find the BarycentricMapping component using the Filter. From the dropdown menu, select Vec3d, Vec3d.; This mean it transforms a state expressed by Vec3d type into Vec3d. Remember, c",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/6_FullObject.html:508,Down,Down,508,examples/Tutorials/StepByStep/FullObject/6_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/6_FullObject.html,1,['Down'],['Down']
Availability,". Creation of a Scene (8/9). Description; In this step of the tutorial we will change the collision model from the cube object to the dragon object, so that the collision model is using the same model as the visual one.; ; In the properties of the CollisionNode, change the Filename of the mesh from /Sofa/share/mesh/cube.onj to /Sofa/share/mesh/dragon.obj. In the properties of the CollisionNode's MechanicalObject, under Transformation, change the Scale of the DOFs in 3 dimensions from (6 6 6) to (1 1 1).; Results; Run in SOFA. Change the DT to 0.005. Animate.; You can see that there are many more sphere to handle the collision. Some are redundant, and useless.; This example demonstrated the need to carefully choose the collision model you want to use. A good approach is to have two versions of your model: a fine version used to do the rendering of the scene, and a much coarser one to handle the collisions quickly.; The presence of spheres may create some artifacts during the collision response, but they are very fast to simulate. Disable the display of the collision models and activate the visual models to really see the efficiency of the spheres.; Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/7_FullObject.html:644,redundant,redundant,644,examples/Tutorials/StepByStep/FullObject/7_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/7_FullObject.html,1,['redundant'],['redundant']
Availability,". Deformable model of the Tongue; Description:. 		We add a deformable model to the tongue. It means the tongue will move and deform depending on the forces applied on it.; 		To do this, we use the component TetrahedralCorotanionalFEMForceField. It uses finite element methods to compute the internal forces.; 		; Key points:. 			To add a deformable model in the scene, we need to create a MechanicalObject. All the forces and displacement are computed using an Euler implicit solver (EulerImplicitSolver) for time integration and a Conjugate Gradient linear solver (CGLinearSolver) to solve a linear system. ; 			We also need a container to store the tetrahedra (TetrahedronSetTopologyContainer). With all these components, we can add a force field to compute internal forces (TetrahedralCorotanionalFEMForceField).; 		. 			The visual model of the tongue is updated because of a mapping (BarycentricMapping) between the deformable model and the visual.; 		; Note:. 			In the current scene, the visual model of the tongue is not displayed, but the deformable model is displayed with the blue tetrahedra.; 		. 			The tetrahedric mesh of the tongue has been generated using the CGAL plugin in SOFA. Read this annex to learn more about mesh generation using CGAL plugin.; 		. 			The mass choosen for the deformable model of the tongue is a DiagonalMass. It has been choosen to show the diversity of masses available in SOFA. This kind of mass computes the mass matrix with non uniform diagonal values, depending on the tetrahedra size.; 		. Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_07.html:1402,avail,available,1402,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_07.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_07.html,1,['avail'],['available']
Availability,". Explicit Euler Solver. Description. 		In Sofa, EulerSolver denotes the ODE solver using the explicit integration scheme for the computing of ; 		the dynamic system. This integration scheme resolves the system in relation to time: given the mechanical state; 		at time Tn, compute the state at time Tn+1=Tn + dt. ; 		; Key points		; 		According to Taylor expansion, the error for the first derivative approximation of a function ; 		f(t) is in relation to dt and f""(t). The term f""(t) can represent the dynamic (forces, acceleraion) of the system. Thus, there are two ; 		important criteria for stabilization when using the explicit EulerSolver:; 		; The time step dt.; The dynamic of the system. 		In this example, if the time step is set higher (dt=0.001), or by using [Shift + leftmouse] to tug the object in order to ; 		dynamically unstabilize the system, the system becomes unstable as showm below :; 		. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ExplicitEuler.html:371,error,error,371,examples/Tutorials/Solvers/ExplicitEuler.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ExplicitEuler.html,1,['error'],['error']
Availability,". Get your bearings in SOFA; Description:. 		Sometimes, we just need to get the orientation of the camera in the scene.; 		That is what the component OglSceneFrame is for.; 		It displays a small frame at the corner of the scene view. Several styles are available. 		. Previous. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Getyourbearings/3_getyourbearings.html:253,avail,available,253,examples/Tutorials/StepByStep/Getyourbearings/3_getyourbearings.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Getyourbearings/3_getyourbearings.html,1,['avail'],['available']
Availability,". Modeler for SOFA. Tool designed to help you create new scenes, and understand how SOFA works. ; . Watch this VIDEO for more information. Complete documentation HERE. Creating a Scene:; The scene graph is fully modifiable. ; To add new components to the scene graph, DRAG from the Sofa Library located on the left of the application, and DROP it inside a Node of the graph.; You can try your scene under construction at any time by using the RunSofa menu, or pressing CTRL+R. Some preset objects are available to quickly add in your scene obstacles, rigid and deformable objects. Right click on a Node and select your preset. Learning SOFA:; * Almost all the components have an example scene to demonstrate how they behave in SOFA. Click on one of them in the Sofa Library, a small description with a clickable link should appear; * A Tutorial application is provided in the menu Tutorials. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/Modeler/Modeler.html:501,avail,available,501,applications/projects/Modeler/Modeler.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/Modeler/Modeler.html,1,['avail'],['available']
Availability,". OdeSolver Tutorial. Truth and initial cylinders; Simulation results. Description. 	In these tutorials, we show the different integration schemes and algorithms available to solve the system of Ordinary Differential Equations (ODE) at each step of the simulation. SOFA provides the following integration schemes:; ; Static integration scheme,; Explicit integration schemes,; Implicit integration schemes. Before going any further, it is important to know that state vectors in SOFA are saved in a component called ""State"" (see chapter ""State"" in the documentation).; For instance, when mechanical models are being solved, the user needs to add a ""MechanicalState"" component in the graph.; Inside the component, the format of storage for the state vector is a structure called MultiVector.; The size and the nature of the degrees of freedom is chosen by setting a ""template"" in the State component. Let us now go into details about the different ODE solvers in SOFA. First, the static integration is an integration which does not take the time into account. Such a static integration can be useful for checking the convergence of algorithms. Furthermore, different dynamic solvers have been implement in SOFA. Unlike static solvers, these solvers do take the dynamics of the system into account. However, depending on the aim of the computation, the solver has to be carefully chosen.; Let us review the basic differences between explicit and implicit solvers. Concerning the explicit solvers, they compute the new state variables from the state variables at the previous step.; The advantage is that explicit solvers can be fast, but the stability of the solver is not always granted. Very small time steps can be required to get satisfactory accuracy.; Moreover, such solvers are not suitable for every simulation. For example, explicit solvers do not compute cyclic loadings correctly, but could be advised in case of soft or high-mass objects. Concerning implicit solvers, they compute the new sta",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html:162,avail,available,162,examples/Tutorials/Solvers/Solvers.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html,1,['avail'],['available']
Availability,". Plugin Image; PluginImage smoothingEngine. This scene shows an example of use of the ImageFilter component. Here we use one of the blur available in the ImageFilter, which is a classical gaussian blur. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/smoothingengine.html:138,avail,available,138,applications/plugins/image/examples/smoothingengine.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/examples/smoothingengine.html,1,['avail'],['available']
Availability,". RungeKutta Solver. Description; 	; 		Like EulerSolver in Sofa, RungeKuttaSolver denotes the ODE solver using the explicit integration scheme for computing of ; 		the dynamic system. This integration scheme explicitely resolves the system in relation to time: given the mechanical state; 		at time Tn, compute the state at time Tn+1=Tn + dt. The difference with RungeKuttaSolver is that this ; 		integration use a more sophisticated algorithm for the computation of the state at time Tn+1. Therefore there is more stability; 		and can use a higher time step than the EulerSolver one. Otherwise, RungeKuttaSolver uses a more general explicit method than EulerSolver.; ; Key points. 		As with every Explicit Integration method, RungeKutta accumulates errors for each time step. Therefore, two criteria must be ; 		controled when using it : ; 		; The time step dt.; The dynamic of the system. 		However, RungeKutta4 is certainly more stable than Explicit Euler: The convergence error in RungeKutta4 is in relation to o(dt4), ; 		but in Explicit Euler it's only o(dt). For this example, RungeKutta can resolve the system with dt=0.001, but not the ExplicitEuler (0.0001). ; . 		Users can try several solvers with different values of the dt parameter to gain an idea of the solver's differences (also test the dependence of the solver ; 		according to the dynamics of the system by using [Shift + left mouse]).; 		. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ExplicitRungeKutta4.html:750,error,errors,750,examples/Tutorials/Solvers/ExplicitRungeKutta4.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ExplicitRungeKutta4.html,2,['error'],"['error', 'errors']"
Availability,". Shadowing (5/7). Description; Casting shadows in SOFA.; Key points; With SpotLight, it is possible to cast shadows simply in SOFA.; 		All we have to do is to put the component OglShadowShader (Shaders in general will be seen later), preferably ; 		in the same Node as the LightManager, i.e. root node of the scene.; First, add a floor by adding a new OglModel to the Dragon node and setting the Path to the model to /Sofa/share/mesh/floor.obj. Set its position to (0 -7 0).; Add a new Spotlight to the Root node. Set its position to (0 60 0) and its direction to (0 -1 0.01).; Add a OglShadowShader component to the Root node.; ; 		Then, you just have to either type the CONTROL+'L' key combination, or set the parameter Enable Shadow in the scene to true in the LightManager.; The only remarkable parameter is shadowTextureSize. The higher this parameter is, the nicer the shadow will be. Be careful with this, because if it is too high it can slow down your computer or even freeze it. It can be considered that 4096 is the maximum reasonable value.; Note:; For now, shadows are rendered ""hardly"" (contours are raw).; 		Don't forget that it uses GPU quite badly, so try to activate shadows only when necessary. ; 		; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/4_Visual.html:952,down,down,952,examples/Tutorials/StepByStep/Visual/4_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/4_Visual.html,1,['down'],['down']
Availability,". Topological Mapping (3/7). Description; In this step we will add a mechanical behavior to the tetrahedral mesh using an ODE solver, finite element and mass. Thus, the cylinder can be deformed by gravity or the user.; Key points. EulerImplicitSolver component is used to solve the mechanical ODE system.; CGLinearSolver component is used to solve the linear system at each step of the ODE system.; TetrahedralCorotationalFEM is used to create tetrahedral finite element on this mechanical system.; DiagonalMass describe a global mass of the mesh elements.; Constraint components are used here to fix on extremity face of the cylinder. Add an EulerImplicitSolver component to the Tetrahedrons Mesh node.; Repeat with a CGLinearSolver component. Change the tolerance property to 1e-09, and in the Property 2/2 tab, change the threshold property to 1e-09.; Add a TetrahedralCorotationalFEMForceField component. Change the FEM Poisson Ratio to ""0.3"", and the FEM Young Modulus to 360.; Add a DiagonalMass component. In the Property 2/2 tab, change the mass density to ""2"".; Add a FixedPlaneProjectiveConstraint component. In the Property 2/2 tab, change the normal direction of the plane to (0 0 1), the minimum plane distance from the origin to ""-0.1"" and the maximum plane distance from the origin to ""0.1"".; Add a FixedConstraint component.; Results; Adding these components create a mechanical behavior for this cylinder. Adding some gravity on the scene, we can see that the cylinder starts to bend.; In this step, as there is no surface for visual model. We can see the finite elements. Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/2_TopoMapping.html:756,toler,tolerance,756,examples/Tutorials/StepByStep/TopologicalMapping/2_TopoMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/2_TopoMapping.html,1,['toler'],['tolerance']
Availability,". Topological Mapping (5/7). Description; This step shows that it is possible to define mechanical behavior directly on a child topology. This can be useful, as often the surface mesh is only a small part of the entire topology.; Key points. Springs are added to the edges on surface of the mesh using TriangularBendingSprings.; TriangleModel components can be added to interact with the model (using Shift and the mouse). Add a TriangularBendingSprings component to the Triangles Mesh node. Change the uniform stiffness for all the springs property to 10.; Results; Run in SOFA and Animate. Deform the cylinder by holding down the Shift key and dragging the triangles with the mouse.; In this step, edges on the surface of the mesh have springs, so the cylinder doesn't bend as much as in the previous steps.; 		The advantage is that elements in the rest of the cylinder are not taken into account, resulting in faster computation. Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/4_TopoMapping.html:623,down,down,623,examples/Tutorials/StepByStep/TopologicalMapping/4_TopoMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/4_TopoMapping.html,1,['down'],['down']
Availability,". Topological Mapping (7/7). Description; This final step is a second pipeline of topological mappings from an hexahedral mesh to a triangular one, going through Quads.; Key points. Dynamic topological components to store the quad mesh. ; Hexa2QuadTopologicalMapping component is used to map Quads on the border of the hexahedral mesh to this container.; Dynamic topological components to store the triangular mesh. ; Quad2TriangleTopologicalMapping component is used to map Quads to Triangles.; Springs are added to the edges of the surface of the mesh using TriangularBendingSprings.; Finally, OglModel is used to visualize the surface mesh. Press the Edit in Modeler button at the top of this window.; Again, a pre-built scene graph opens in the Modeler. You can also look at the details of the scene in the right panel of this window.; Here we see five nodes, each a child of the previous node. This is a good visual representation of the flow of the collision pipeline.; Starting at the root node, we have all the basic components needed for the scene, including the DefaultPipeline.; Next we come to the Hexahedral Mesh, which includes the Ogl solver to determine the forces that the model will experience.; Once the solver determines the movement of the hexahedrons, the Quad Mesh maps that movement to a quad representation of only the surface of the model.; In turn, the Triangles Mesh maps the movement of the quad representation to a triangular representation. Here we also add springs and constraints to the surface.; Finally, all the information that has been passed down the pipeline is used by Visu to create a visualization of the surface of the model.; Results; Run in SOFA and Animate.; This last step shows another example of topological mappings with a mechanical behavior similar to step Change mesh behaviour. Previous. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/6_TopoMapping.html:1580,down,down,1580,examples/Tutorials/StepByStep/TopologicalMapping/6_TopoMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/6_TopoMapping.html,1,['down'],['down']
Availability,". Topology Linear Mesh. Description. 	The aim of this tutorial is to show the importance of topological components. Indeed, in this tutorial, two linear pendulums are represented, implying:; 	; A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A mesh spring forcefield to create springs between points; An ODE scheme and a linear solver to solve the system at each time step. Key points. 	The only difference between the models is the MeshTopology component. In the first case, edges are defined. Thus, meshSpringForceField will know a list of edges where it will create springs. In the other case, no springs are created.; 	. Results. 	Thus, when simulated, the first model will act as a pendulum, whereas in the other case, points will just fall down, as they are not attached together.; 	. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyLinearMesh.html:787,down,down,787,examples/Tutorials/Topologies/TopologyLinearMesh.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyLinearMesh.html,1,['down'],['down']
Availability,". Topology Tutorial. Triangular Topology. Description. 		In these tutorials we will introduce the different topologies that exist in SOFA. Indeed, depending on the number of dimension representing our mechanical object (1D,2D or 3D), a suitable topologies has to be found.; 		For a linear object (1D), beams must be used.; 		For a surface object (2D), the user can choose between different element types such as triangles or quads.; 		And finally, for a volume object (3D), tetrahedral or hexahedral topologies are available.; 		The choice of the element type is very important and has to be done depending on the geometry to mesh and on the aimed simulation. 		Once the type of element has been properly chosen, you need to import the topology of your objects in SOFA.; 		- If you are using an imported mesh, you just need to use the suitable meshLoader or use the MeshTopology to load the whole object topology. 		- Otherwise, you will have to define the following components in your scene file:; 		; SetTopologyContainer,; SetTopologyModifier,; SetTopologyAlgorithms,; SetGeometryAlgorithms. Almost all the topologies implemented in SOFA are linear elements. The implementation of quadratic elements is however possible, but the topology is to be reconsidered. ; Finally, we also introduce in this tutorial the notion of TopologicalMapping. It corresponds to transformation mapping of one topology to another. It is thereby possible to get a tetrahedral mesh based on a hexahedral mesh. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/Topologies.html:515,avail,available,515,examples/Tutorials/Topologies/Topologies.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/Topologies.html,1,['avail'],['available']
Availability,". Tutorial Topology Hexa2TetraTopologicalMapping. Description. 	This tutorial shows a very useful mapping available in SOFA. As its name suggests, this mapping enables you to get a tetrahedral topology from a hexadral one.; 	Therefore, this mapping divides each hexahedron into 6 tetrahedra. This can be very useful to get tetrahedra if you are working with a RegularGrid geometry. . 	By using the Hexa2TetraTopologicalMapping, you will collect all the data concerning the tetrahedra in the following components:; 	; TetrahedronSetTopologyContainer,; TetrahedronSetTopologyModifier,; TetrahedronSetTopologyAlgorithms,; TetrahedronSetGeometryAlgorithms. It must be stressed that the default division of each hexahedron is always made in the same way, so that it can lead to mesh orientation.; 	To avoid this bias effect, a swapping method is proposed just by activating a flag ""swapping"" in order to perform the better division. ; And do not forget that topological changes are not handled in this mapping. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyHexa2TetraTopologicalMapping.html:106,avail,available,106,examples/Tutorials/Topologies/TopologyHexa2TetraTopologicalMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyHexa2TetraTopologicalMapping.html,1,['avail'],['available']
Availability,". ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/.github/PULL_REQUEST_TEMPLATE.md:546,failure,failures,546,.github/PULL_REQUEST_TEMPLATE.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/.github/PULL_REQUEST_TEMPLATE.md,2,['failure'],['failures']
Availability,".06 [#3250](https://github.com/sofa-framework/sofa/pull/3250) ; - [Core][Type] Minor warning fixes [#3283](https://github.com/sofa-framework/sofa/pull/3283) ; - [Sofa.Defaulttype] Move Rigid{Coord, Deriv, Mass} from RigidTypes into their own headers [#3282](https://github.com/sofa-framework/sofa/pull/3282) ; - [Sofa.Core] Add missing #include [#3297](https://github.com/sofa-framework/sofa/pull/3297) ; - [Sofa.Core] Use pragma, single line namespaces and move forward declarations in fwd.h [#3303](https://github.com/sofa-framework/sofa/pull/3303) ; - [Sofa.Core] Remove the use of Link in MechanicalParams & ConstraintParams [#3304](https://github.com/sofa-framework/sofa/pull/3304) ; - [Type] Disable deprecated methods [#3346](https://github.com/sofa-framework/sofa/pull/3346) ; - [Type] Deprecate Color.h [#3347](https://github.com/sofa-framework/sofa/pull/3347) ; - [Type] equalsZero returns bool, not a real [#3371](https://github.com/sofa-framework/sofa/pull/3371) ; - [Helper] Deprecate error-prone resize and add emplace_back [#3373](https://github.com/sofa-framework/sofa/pull/3373) ; - [Simulation] Change LoadFromMemory signature to remove unused parameter Size [#3376](https://github.com/sofa-framework/sofa/pull/3376) ; - [Sofa.Core] VecId: move definition of VecTypeLabels in its own Translation Unit [#3401](https://github.com/sofa-framework/sofa/pull/3401) ; - [Sofa.Core] TagSet: move method definitions in cpp [#3403](https://github.com/sofa-framework/sofa/pull/3403) ; - [Sofa.Config] CMake: Remove ""both"" as a choice for SOFA_FLOATING_POINT_TYPE parameter [#3436](https://github.com/sofa-framework/sofa/pull/3436) ; - [Simulation.Core] Clean Multithreading code [#3448](https://github.com/sofa-framework/sofa/pull/3448) ; - [Core] Minor cleaning [#3492](https://github.com/sofa-framework/sofa/pull/3492) . **Modules**; - [all] Remove code disabled in v21.06 [#3163](https://github.com/sofa-framework/sofa/pull/3163) ; - [Spring] RestSpringsForceField: Unify Vec/Rigid implement",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:85423,error,error-prone,85423,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error-prone']
Availability,".com/sofa-framework/sofa/pull/1798 ). ### Cleanings; **Architecture**; - [CMake] CLEAN old metapackage usage [#1883]( https://github.com/sofa-framework/sofa/pull/1883 ); - [CMake] CLEAN option SOFA_BUILD_WITH_PCH_ENABLED [#1755]( https://github.com/sofa-framework/sofa/pull/1755 ); - [CMake] CLEAN/FIX deprecated things (MSVC mainly) [#2217]( https://github.com/sofa-framework/sofa/pull/2217 ). **Modules**; - [All] Remove commented code & fix trivial issues [#1693]( https://github.com/sofa-framework/sofa/pull/1693 ); - [All] Remove useless pragma guards in cpp files [#1929]( https://github.com/sofa-framework/sofa/pull/1929 ); - [All] CLEAN tests, use CMake weak dependencies [#1886]( https://github.com/sofa-framework/sofa/pull/1886 ); - [All] Disable Drawtool functions using Vec4f [#2197]( https://github.com/sofa-framework/sofa/pull/2197 ); - [All] Rename SOFA_NO_OPENGL + Relocate Sofa.GL + Improve sofa_add_* macros [#1913]( https://github.com/sofa-framework/sofa/pull/1913 ); - [All] Avoid redundant printLog check [#2102]( https://github.com/sofa-framework/sofa/pull/2102 ); - [All] Depreciate one of the missing use of Aspect in Link and update the code base [#1712]( https://github.com/sofa-framework/sofa/pull/1712 ); - [All] Fix warnings [#2196]( https://github.com/sofa-framework/sofa/pull/2196 ); - [All] Fix warnings [#2097]( https://github.com/sofa-framework/sofa/pull/2097 ); - [All] Refactor Read/Write Accessor. [#1807]( https://github.com/sofa-framework/sofa/pull/1807 ); - [All] Refactor vector & vector_device [#1799]( https://github.com/sofa-framework/sofa/pull/1799 ); - [All] Remove last includes of SofaSimulationTree [#1812]( https://github.com/sofa-framework/sofa/pull/1812 ); - [All] Remove un-needed includes. [#1750]( https://github.com/sofa-framework/sofa/pull/1750 ); - [All] Remove unused includes [#1960]( https://github.com/sofa-framework/sofa/pull/1960 ); - [All] Remove warning: unused variable [#1787]( https://github.com/sofa-framework/sofa/pull/1787 ); - ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:196069,redundant,redundant,196069,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['redundant'],['redundant']
Availability,".com/sofa-framework/sofa/pull/4272); - [all] Externalize cxxopts [#4273](https://github.com/sofa-framework/sofa/pull/4273); - [Topology.Mapping] SimpleTesselatedHexaTopologicalMapping: use correct type for Index [#4279](https://github.com/sofa-framework/sofa/pull/4279); - [GUI.Qt] Minor single-line cleaning [#4308](https://github.com/sofa-framework/sofa/pull/4308); - [Core] Minor clean of DefaultAnimationLoop [#4314](https://github.com/sofa-framework/sofa/pull/4314); - [Collections] Remove reference to non-existing SofaSimulation [#4320](https://github.com/sofa-framework/sofa/pull/4320); - [All] Changed default plugins [#4322](https://github.com/sofa-framework/sofa/pull/4322); - [ODESolver.Backward] Convert double to SReal in NewmarkImplicitSolver [#4341](https://github.com/sofa-framework/sofa/pull/4341); - [Sofa.Testing] Do not build Sofa.Testing if SOFA_BUILD_TESTS is OFF [#4459](https://github.com/sofa-framework/sofa/pull/4459); - [Simulation.Common] Fix downstream project compilation with tinyXML2 [#4506](https://github.com/sofa-framework/sofa/pull/4506). ### Refactoring; - [Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code [#3278](https://github.com/sofa-framework/sofa/pull/3278); - [all] Rename DefaultContactManager into CollisionResponse [#3891](https://github.com/sofa-framework/sofa/pull/3891); - [FEM.Elastic] Minor refactor of buildStiffnessMatrix in TetrahedronFEMForceField [#3983](https://github.com/sofa-framework/sofa/pull/3983); - [plugins] Remove PSL files, add ExternalProjectConfig and update CMakeLists [#4047](https://github.com/sofa-framework/sofa/pull/4047); - Revert ""[Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code"" [#4068](https://github.com/sofa-framework/sofa/pull/4068); - [MechanicalLoad] Implement buildStiffnessMatrix for TaitSurfacePressureForceField [#4116](https://github.com/sofa-framework/sofa/pull/4116); - [Constraint.Lagrangian.Solver] Unify lists of constraint corr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:48226,down,downstream,48226,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['down'],['downstream']
Availability,//github.com/sofa-framework/sofa/pull/584 ); - [All] Various small changes in error messages & bugfix from defrost branches [#660]( https://github.com/sofa-framework/sofa/pull/660 ); - [SofaConstraint] FIX: Moving semicolon under preprocessor define [#680]( https://github.com/sofa-framework/sofa/pull/680 ); - **[SofaEngine]** FIX Bug in BoxROI that is not properly initialized [#627]( https://github.com/sofa-framework/sofa/pull/627 ); - **[SofaFramework]** Fix plugin list configuration [#645]( https://github.com/sofa-framework/sofa/pull/645 ); - [SofaGraphComponent] FIX SceneChecker_test + ADD alias test [#711]( https://github.com/sofa-framework/sofa/pull/711 ); - [SofaGraphComponent] FIX SceneCheck build on MacOS [#719]( https://github.com/sofa-framework/sofa/pull/719 ); - [SofaGuiQt] FIX missing resources [#758]( https://github.com/sofa-framework/sofa/pull/758 ); - [SofaGeneralEngine] FIX disabled tests [#675]( https://github.com/sofa-framework/sofa/pull/675 ); - **[SofaHelper]** More robust method to test end of string [#617]( https://github.com/sofa-framework/sofa/pull/617 ); - **[SofaKernel]** FIX macro issue resulted from the #include cleaning. [#672]( https://github.com/sofa-framework/sofa/pull/672 ); - [SofaMiscFem] FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaOpenglVisual] FIX MacOS crash in batch mode [#646]( https://github.com/sofa-framework/sofa/pull/646 ); - **[SofaSimulationGraph]** FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaSparseSolver] FIX SparseLDL crash and add proper SOFA_FLOAT/DOUBLE mangement [#655]( https://github.com/sofa-framework/sofa/pull/655 ). **Plugins / Projects**; - [CGALPlugin] FIX compilation issue with recent version of CGAL (4.11) & Ubunu 18.04 LTS [#664]( https://github.com/sofa-framework/sofa/pull/664 ); - [CImgPlugin] Export CImg_CFLAGS [#595]( https://github.com/sofa-framework/sofa/pull/595 ); - [CImgPlugin] FIX CMakeLists install fail since pluginizat,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:297130,robust,robust,297130,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['robust'],['robust']
Availability,"/mechanicalvisitor/MechanicalPropagateOnlyPositionVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalPropagateOnlyVelocityVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalResetConstraintVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalResetForceVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalSetPositionAndVelocityVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVAllocVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVAvailVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVDotVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVFreeVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVInitVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVMultiOpVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVNormVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVOpVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVReallocVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalVSizeVisitor.cpp; ). sofa_find_package(Sofa.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Core). # is this a compiler/linker version specific problem?; if(CMAKE_SYSTEM_NAME STREQUAL Linux); # target_link_options is available from CMake 3.13; # target_link_options(${PROJECT_NAME} PUBLIC ""-pthread""); SET(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -pthread"" ); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_SIMULATION_CORE_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_SIMULATION_CORE_BUILD_TESTS); add_subdirectory(test); add_subdirectory(simutest); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:13185,avail,available,13185,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['avail'],['available']
Availability,/pull/314 ); - [SofaDeformable]; - issofa_meshspringff [#497]( https://github.com/sofa-framework/sofa/pull/497 ); - issofa_springff [#498]( https://github.com/sofa-framework/sofa/pull/498 ); - [SofaHelper]; - add ability to use NoArgument for BaseCreator and Factory [#385]( https://github.com/sofa-framework/sofa/pull/385 ); - Remove legacy ImageBMP/ImagePNG and ImageQt [#424]( https://github.com/sofa-framework/sofa/pull/424 ); - Improve advanced timer [#468]( https://github.com/sofa-framework/sofa/pull/468 ); - [SofaLoader]; - ADD normals and vectors to Legacy vtk import [#536]( https://github.com/sofa-framework/sofa/pull/536 ); - [SofaSimpleFem]; - Add check of vector size in TetrahedronFEMForceField [#341]( https://github.com/sofa-framework/sofa/pull/341 ). **Other modules**; - [All]; - Fix default value rayleigh params [#350]( https://github.com/sofa-framework/sofa/pull/350 ); - PSL branch prerequisites [#410]( https://github.com/sofa-framework/sofa/pull/410 ); - template alias sptr for downsizing the include graph [#436]( https://github.com/sofa-framework/sofa/pull/436 ); - Removing the typedef files + SOFA_DECL + SOFA_LINK [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - CHANGE USE_MASK option to off by default [#532]( https://github.com/sofa-framework/sofa/pull/532 ); - [SofaBoundaryCondition]; - ADD flag PROJECTVELOCITY [#288]( https://github.com/sofa-framework/sofa/pull/288 ); - make LinearMovementConstraint accept absolute movements [#394]( https://github.com/sofa-framework/sofa/pull/394 ); - [SofaCore]; - Add some read/write free method to construct Data Read/WriteAccessor [#450]( https://github.com/sofa-framework/sofa/pull/450 ); - [SofaDefaulttype]; - MapMapSparseMatrix conversion utils with Eigen Sparse [#452]( https://github.com/sofa-framework/sofa/pull/452 ); - multTranspose method between MapMapSparseMatrix and BaseVector [#456]( https://github.com/sofa-framework/sofa/pull/456 ); - [SofaDeformable]; - Rest shape can now be given using Sin,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:306242,down,downsizing,306242,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['down'],['downsizing']
Availability,/sofa-framework/sofa/pull/1078 ). **Plugins / Projects**; - [CImgPlugin] FIX: messed up package prefix in CImg [#921]( https://github.com/sofa-framework/sofa/pull/921 ); - [Geomagic] FIX compilation error in Geomagic plugin with removal of SOFA_FLOAT/DOUBLE [#898]( https://github.com/sofa-framework/sofa/pull/898 ); - [image] Fix image_gui plugin loading [#1015]( https://github.com/sofa-framework/sofa/pull/1015 ); - [image] Message API is needed even if no python [#1068]( https://github.com/sofa-framework/sofa/pull/1068 ); - [runSofa] FIX the opening of ModifyObject view. [#1010]( https://github.com/sofa-framework/sofa/pull/1010 ); - [runSofa] Fix runSofa -a option with a gui. [#1058]( https://github.com/sofa-framework/sofa/pull/1058 ); - [runSofa] User experience fixes in the ModifyData view. [#1011]( https://github.com/sofa-framework/sofa/pull/1011 ); - [Sensable] Fix the compilation of the Sensable plugin [#1019]( https://github.com/sofa-framework/sofa/pull/1019 ); - [SofaCUDA] Compilation error fix (CudaStandardTetrahedralFEMForceField.cu) [#991]( https://github.com/sofa-framework/sofa/pull/991 ); - [SofaCUDA] Fix several Cuda example scenes [#1000]( https://github.com/sofa-framework/sofa/pull/1000 ); - [SofaCUDA] Fix windows compilation. [#966]( https://github.com/sofa-framework/sofa/pull/966 ); - [SofaPython] FIX allow the derivTypeFromParentValue to work with node. [#984]( https://github.com/sofa-framework/sofa/pull/984 ); - [SofaPython] FIX example broken by PR#459 [#1020]( https://github.com/sofa-framework/sofa/pull/1020 ); - [SofaPython] FIX the broken Binding_Data::setValue() [#1006]( https://github.com/sofa-framework/sofa/pull/1006 ); - [SofaPython] Fix duplicate symbol [#1036]( https://github.com/sofa-framework/sofa/pull/1036 ); - [SofaPython] FIX: removing PythonLibs target from SofaPython [#891]( https://github.com/sofa-framework/sofa/pull/891 ); - [SofaPython] REMOVE: public export of target SofaExporter [#963]( https://github.com/sofa-framework/sofa/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:270010,error,error,270010,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,/sofa/pull/1399 ); - **[SofaKernel]** Update EulerExplicitSolver [#1260]( https://github.com/sofa-framework/sofa/pull/1260 ); - **[SofaKernel]** implement activer's code at CollisionModel. [#1259]( https://github.com/sofa-framework/sofa/pull/1259 ). **Plugins**; - [SofaCUDA] Arch auto-detection for nvcc [#1336]( https://github.com/sofa-framework/sofa/pull/1336 ). ### Improvements. **Architecture**; - [CMake] Create an IDE folder for all relocatable_install targets [#1405]( https://github.com/sofa-framework/sofa/pull/1405 ). **Modules**; - **[SofaBaseVisual]** Add camera gizmo in base camera [#1253]( https://github.com/sofa-framework/sofa/pull/1253 ); - **[SofaCore]** Remove warning in ExecParam [#1325]( https://github.com/sofa-framework/sofa/pull/1325 ); - **[SofaCore]** ADD: DataCallback system in Base [#1406]( https://github.com/sofa-framework/sofa/pull/1406 ); - **[SofaDefaultType]** Add a Ray type. [#1251]( https://github.com/sofa-framework/sofa/pull/1251 ); - **[SofaHelper]** Add the obj id to labels when available [#1256]( https://github.com/sofa-framework/sofa/pull/1256 ); - **[SofaHelper]** Add auto-friendly getWriteAccessors/getReadAcessor... [#1254]( https://github.com/sofa-framework/sofa/pull/1254 ); - **[SofaKernel]** Set the default compilation mode to c++17. [#1249]( https://github.com/sofa-framework/sofa/pull/1249 ); - **[SofaKernel]** Add DataTypeInfo for BoundingBox [#1373]( https://github.com/sofa-framework/sofa/pull/1373 ); - **[SofaKernel]** Cleaner output when the creation of an object fails [#1266]( https://github.com/sofa-framework/sofa/pull/1266 ); - **[SofaSimulationCore]** Add a way to fill a multi vector from a base vector with a MechanicalOperations (mops). [#1248]( https://github.com/sofa-framework/sofa/pull/1248 ). **Plugins / Projects**; - [plugins] Fix warnings for option compilation [#1316]( https://github.com/sofa-framework/sofa/pull/1316 ); - [sofa-launcher] Change doc on sofa-launcher to markdown [#1311]( https://github.com/sofa-f,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:232191,avail,available,232191,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['avail'],['available']
Availability,/sofa/pull/1927 ); - **[SofaSimulationCore]** Reorder according to definition [#2034]( https://github.com/sofa-framework/sofa/pull/2034 ); - **[SofaSimulationCore]** Revert changes in #1927 [#2017]( https://github.com/sofa-framework/sofa/pull/2017 ); - [SofaSimulationGraph] Restore tests [#1988]( https://github.com/sofa-framework/sofa/pull/1988 ); - [SofaSimulationGraph] Reading links fail when owner is invalid [#2166]( https://github.com/sofa-framework/sofa/pull/2166 ); - [SofaSparseSolver] SparseLDLSolver optimizations [#1996]( https://github.com/sofa-framework/sofa/pull/1996 ); - [SofaTopologyMapping] Fix Edge2Quad condition [#2126]( https://github.com/sofa-framework/sofa/pull/2126 ); - [SofaUserInteraction] Fix Bug of removing topological element when a Hexa2TetraTopologicalMapping is in the scene [#1973]( https://github.com/sofa-framework/sofa/pull/1973 ). **Plugins / Projects**; - [CGALPlugin] Fix cgal drawings [#2206]( https://github.com/sofa-framework/sofa/pull/2206 ); - [CGALPlugin] Fix compilation errors related to SOFA.GL and types converted to DataTypes [#2065]( https://github.com/sofa-framework/sofa/pull/2065 ); - [CImgPlugin] Fix unit test [#2147]( https://github.com/sofa-framework/sofa/pull/2147 ); - [Geomagic] Fix Geomagic plugin compilation [#2033]( https://github.com/sofa-framework/sofa/pull/2033 ); - [Geomagic] Fix GeomagicVisualModel compilation [#1776]( https://github.com/sofa-framework/sofa/pull/1776 ); - [Geomagic] Fix compilation of GeomagicVisualModel due to change in MechanicalVisitor [#2113]( https://github.com/sofa-framework/sofa/pull/2113 ); - [LMConstraint] Fix collision model [#1819]( https://github.com/sofa-framework/sofa/pull/1819 ); - [LMConstraint] Fix unload [#1831]( https://github.com/sofa-framework/sofa/pull/1831 ); - [PreassembledMass] FIX typo in PreassembledMass.inl [#1833]( https://github.com/sofa-framework/sofa/pull/1833 ); - [SofaCUDA] Fix CudaFixedConstraint when indices are not contiguous [#1780]( https://github.com/sofa-,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:191985,error,errors,191985,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['errors']
Availability,"/uploads/2022/06/GitHub-PR-review-workflow.png"" alt=""PullRequestProcess"" style=""width:75%""><figcaption align = ""center""><b>Workflow of a PR review</b></figcaption></figure></center>. For more information on forks and pull request, check out [this GitHub guide](https://guides.github.com/activities/forking/). ### SOFA Developer Certificate Of Origin (DCO). SOFA is using the [mechanism of the linux project](https://www.kernel.org/doc/html/latest/process/submitting-patches.html#sign-your-work-the-developer-s-certificate-of-origin) to track and secure all issues related to copyrights: the Developper Certificate of Origin (DCO). If you are contributing code or documentation to the SOFA project, and using the git signed-off-by mechanism, you are agreeing to this certificate. This DCO essentially means that:. - you offer the changes under the same license agreement as the project, and; - you have the right to do that,; - you did not steal somebody else’s work. The original DCO is available online : [http://developercertificate.org](http://developercertificate.org). ```; Developer Certificate of Origin; Version 1.1. Copyright (C) 2004, 2006 The Linux Foundation and its contributors.; 1 Letterman Drive; Suite D4700; San Francisco, CA, 94129. Everyone is permitted to copy and distribute verbatim copies of this; license document, but changing it is not allowed. Developer's Certificate of Origin 1.1. By making a contribution to this project, I certify that:. (a) The contribution was created in whole or in part by me and I; have the right to submit it under the open source license; indicated in the file; or. (b) The contribution is based upon previous work that, to the best; of my knowledge, is covered under an appropriate open source; license and I have the right under that license to submit that; work with modifications, whether created in whole or in part; by me, under the same open source license (unless I am; permitted to submit under a different license), as indicated; in th",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:8223,avail,available,8223,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['avail'],['available']
Availability,"0 components have an associated example; - [SofaKernel]; - replace raw pointers with a smart ones; - add a ComponentState attribute to BaseObject; - BaseData::typeName is now public: useful to debug; - implement DataTrackerEngine, a kind of DataEngine but that is not a BaseObject; - fix SVector<std::string>. The string serialization changed; - [SofaRigid]; - in case jetJs is called several times per step; - [SofaGeneralLoader]; - MeshVTKLoader can now read FIELD data of legacy file. Lookup tables are ignored.; - [SofaPython]; - binding AssembledSystem as a new class in python; - binding VisualModel::exportOBJ; - binding for DataFileNameVector; - add Compliant.getImplicitAssembledSystem(node); - SofaNumpy: bind/share a c++ 1d array as a numpy array; - script.Controller : handle optional arguments before createGraph; - [image]; - raw import: add commented basic size verifications (could be performed in debug); - [Flexible]; - add support for shapefunction viewer; - new feature of strain smoothing; - improve readme file; - [Compliant]; - simulation unit: convert gravity, dt; - MaskMapping: every input are now mapped; - add LinearDiagonalCompliance component; - fix use of VLA in python mappings; - improve readme file. ### Bug Fixes. - fix ConstantForceField::updateForceMask(); - fix ObjExporter memory leak; - [SofaOpenGLVisual] OglTexture: fix possible memory leaks; - [Compliant]; - clean python. ### Cleanings. - clean the compilation when SOFA_NO_OPENGL flag is activated; - clean the config.h (SOFAGUI_HAVE_QWT); - remove boost library links (includes still required). boost chrono is not required anymore.; - remove unused POINT_DATA_VECTOR_ACCESS macro; - make miniflowVR build optional (default OFF); - [SofaKernel]; - remove last direct opengl calls in modules; - add deprecation message on MechanicalObject attributes; - [SofaBaseVisual] clean BaseCamera: remove direct opengl calls; - [SofaHaptics] boost-thread is not used any more, clean cmake; - [SofaGeneralLoader] STLL",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:339408,Mask,MaskMapping,339408,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Mask'],['MaskMapping']
Availability,1449 ); - [SofaDeformable] Update RestShapeSpringsForceField [#1431]( https://github.com/sofa-framework/sofa/pull/1431 ); - [SofaGeneralEngine] Improve mesh barycentric mapper engine [#1487]( https://github.com/sofa-framework/sofa/pull/1487 ); - [SofaGeneralEngine] Remove useless create() function in some components [#1622]( https://github.com/sofa-framework/sofa/pull/1622 ); - [SofaGuiQt] Move libQGLViewer lib into its module [#1617]( https://github.com/sofa-framework/sofa/pull/1617 ); - [SofaHaptics] Small fix on LCPForceFeedback haptic rendering [#1537]( https://github.com/sofa-framework/sofa/pull/1537 ); - **[SofaHelper]** DrawTool uses RGBAColor now (instead of Vec4f) [#1626]( https://github.com/sofa-framework/sofa/pull/1626 ); - **[SofaHelper]** Remove OpenGL dependency in vector_device [#1646]( https://github.com/sofa-framework/sofa/pull/1646 ); - **[SofaKernel]** Clean namespace BarycentricMapper [#1571]( https://github.com/sofa-framework/sofa/pull/1571 ); - **[SofaKernel]** Factorize some code for maintenance [#1569]( https://github.com/sofa-framework/sofa/pull/1569 ); - **[SofaKernel]** Refactor the FileRepository constructors [#1610]( https://github.com/sofa-framework/sofa/pull/1610 ); - **[SofaKernel]** Remove core::Plugin/core::PluginManager [#1612]( https://github.com/sofa-framework/sofa/pull/1612 ); - **[SofaKernel]** Remove parentBaseData in BaseData.h [#1490]( https://github.com/sofa-framework/sofa/pull/1490 ); - **[SofaKernel]** Remove support for BaseData in Link.h [#1503]( https://github.com/sofa-framework/sofa/pull/1503 ); - **[SofaKernel]** Remove un-needed StringUtil.h in Base.h [#1519]( https://github.com/sofa-framework/sofa/pull/1519 ); - **[SofaKernel]** Remove un-needed class reflection system. [#1541]( https://github.com/sofa-framework/sofa/pull/1541 ); - [SofaLoader] Use references in Meshloader [#1627]( https://github.com/sofa-framework/sofa/pull/1627 ); - [modules] Minor fixes [#1441]( https://github.com/sofa-framework/sofa/pull/1441 ),MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:227640,mainten,maintenance,227640,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['mainten'],['maintenance']
Availability,"2246 ); - [CGALPlugin] Fix CGAL compilation with CImgData include [#2345]( https://github.com/sofa-framework/sofa/pull/2345 ); - [CImgPlugin] Add Threads dependency in Cmake [#2302]( https://github.com/sofa-framework/sofa/pull/2302 ); - [Geomagic] Fix compilation of code with openHaptics due to sofa::type namespace missing. [#2229]( https://github.com/sofa-framework/sofa/pull/2229 ); - [image] Ignore python2 scenes in CI [#2526]( https://github.com/sofa-framework/sofa/pull/2526 ); - [image] fix shadow variable [#2515]( https://github.com/sofa-framework/sofa/pull/2515 ); - [image] fix shadow variables [#2528]( https://github.com/sofa-framework/sofa/pull/2528 ); - [SofaCUDA] Fix broken visuals in examples [#2447]( https://github.com/sofa-framework/sofa/pull/2447 ); - [SofaCUDA] Fix compilation [#2446]( https://github.com/sofa-framework/sofa/pull/2446 ); - [SofaCUDA] Fix static variable definition for double-precision [#2440]( https://github.com/sofa-framework/sofa/pull/2440 ); - [SofaCUDA] Redundant namespace [#2538]( https://github.com/sofa-framework/sofa/pull/2538 ); - [SofaGuiGlut] FIX compilation for v21.06 [#2274]( https://github.com/sofa-framework/sofa/pull/2274 ); - [SofaGuiGlut] Fix compilation for v21.12 [#2539]( https://github.com/sofa-framework/sofa/pull/2539 ). **Examples / Scenes**; - [examples] FIX duplicated scene in regression-tests [#2251]( https://github.com/sofa-framework/sofa/pull/2251 ); - [examples] FIX duplicated scene in regression-tests (2) [#2252]( https://github.com/sofa-framework/sofa/pull/2252 ). **Scripts / Tools**. ### Cleanings. **Architecture**; - [CMake] Remove option SOFA_ENABLE_SOFT_DEPS_TO_SOFAPYTHON [#2533]( https://github.com/sofa-framework/sofa/pull/2533 ); - [GitHub] Improve ""bug report"" issue template [#2454]( https://github.com/sofa-framework/sofa/pull/2454 ). **Modules**; - [All] Clean warnings [#1549]( https://github.com/sofa-framework/sofa/pull/1549 ); - [All] Remove several TopologyDataHandler and headers inclusion in com",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:153472,Redundant,Redundant,153472,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Redundant'],['Redundant']
Availability,4) ; - [Mapping.Nonlinear] Fix matrix assembly in RigidMapping [#3803](https://github.com/sofa-framework/sofa/pull/3803) ; - [Visual] VisualModelImpl: Fix updateVisual() [#3815](https://github.com/sofa-framework/sofa/pull/3815) ; - [LinearSolver.Iterative] CMake: Fix package configuration [#3840](https://github.com/sofa-framework/sofa/pull/3840) ; - [Rendering3D] OglModel: Revert back to glBufferSubData [#3841](https://github.com/sofa-framework/sofa/pull/3841) ; - [SolidMechanics.Spring] CMake: Fix package configuration [#3846](https://github.com/sofa-framework/sofa/pull/3846) ; - [Spring] Remove unused dependencies [#3848](https://github.com/sofa-framework/sofa/pull/3848) ; - [FEM.Linear] FIX & Minor refactor of buildStiffnessMatrix in TriangleFEMForceField [#3989](https://github.com/sofa-framework/sofa/pull/3989). **Plugins / Projects**; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid2D [#3561](https://github.com/sofa-framework/sofa/pull/3561) ; - [MultiThreading] ParallelBruteForceBroadPhase: Fix assertion error [#3574](https://github.com/sofa-framework/sofa/pull/3574) ; - [image] Fix Sofa.GUI dependency [#3591](https://github.com/sofa-framework/sofa/pull/3591) ; - [SofaCUDA] Missing support for double precision floating-points [#3603](https://github.com/sofa-framework/sofa/pull/3603) ; - [SofaPhysicsAPI] Fix compilation by replacing use of SofaGUI by sofa::GUI::common [#3612](https://github.com/sofa-framework/sofa/pull/3612) ; - [SofaCUDA] No longer use deprecated texture references in TetraTLED [#3650](https://github.com/sofa-framework/sofa/pull/3650) ; - [MultiThreading] Empty string instead of null pointer in DataExchange [#3686](https://github.com/sofa-framework/sofa/pull/3686) ; - [Geomagic] Fix potential crash at exit when device has not been init [#3698](https://github.com/sofa-framework/sofa/pull/3698) ; - [SofaCUDA] Fix includes pointing to compatibility layer [#3727](https://github.com/sofa-framework/sofa/pull/3727) ; - [plugins] ArticulatedS,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:59708,error,error,59708,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,4560](https://github.com/sofa-framework/sofa/pull/4560); - [README] Update link to Discord [#4562](https://github.com/sofa-framework/sofa/pull/4562); - [plugins] Add SimpleApi as a dependency in SofaCarving_test [#4572](https://github.com/sofa-framework/sofa/pull/4572); - [Constraint.Lagrangian.Solver] Make problemId counter id atomic [#4581](https://github.com/sofa-framework/sofa/pull/4581); - [Collision.Response.Contact] Make contactId thread-safe [#4582](https://github.com/sofa-framework/sofa/pull/4582); - [Collision.Detection] Give current intersection methods as parameter to intersection functions [#4583](https://github.com/sofa-framework/sofa/pull/4583); - [LinearAlgebra] Fix compilation of assert [#4598](https://github.com/sofa-framework/sofa/pull/4598); - [Multithreading] fix multithread packaging [#4619](https://github.com/sofa-framework/sofa/pull/4619); - [GitHub] Add timezone info on cron Actions [#4626](https://github.com/sofa-framework/sofa/pull/4626); - [LinearAlgebra] Trigger error on the Eigen version [#4630](https://github.com/sofa-framework/sofa/pull/4630); - [Core] Missing call to super init [#4634](https://github.com/sofa-framework/sofa/pull/4634); - [Demos] Fix regression for fallingBeamLagrangianCollision.scn [#4643](https://github.com/sofa-framework/sofa/pull/4643); - [Geomagic] Fix compilation. Replace Vector3 by Vec3 [#4661](https://github.com/sofa-framework/sofa/pull/4661); - [CollisionOBBCapsule] Fix duplicated registration in the factory [#4709](https://github.com/sofa-framework/sofa/pull/4709); - [Contact] Fix crash if collision models are not provided [#4710](https://github.com/sofa-framework/sofa/pull/4710); - [Engine.Analyze] Fix initialization of distance type [#4711](https://github.com/sofa-framework/sofa/pull/4711); - [SceneUtility] Initialize pointer to nullptr [#4712](https://github.com/sofa-framework/sofa/pull/4712); - [SofaCUDA] extern template instantiations [#4714](https://github.com/sofa-framework/sofa/pull/4714); - [image_g,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:9752,error,error,9752,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,84]( https://github.com/sofa-framework/sofa/pull/3084 ); - [Lagrangian.Correction] LinearSolverConstraintCorrection: Trivial optimisations for MSVC [#3135]( https://github.com/sofa-framework/sofa/pull/3135 ); - [Mass] Fix point topological changes for UniformMass [#2853]( https://github.com/sofa-framework/sofa/pull/2853 ); - [MeshGmsh]Fixed false error detection in MeshGmsh.cpp file [#3030]( https://github.com/sofa-framework/sofa/pull/3030 ); - [Preconditioner] Fix missing find_package() in the cmake.in [#2841]( https://github.com/sofa-framework/sofa/pull/2841 ); - [S.C.Engine] Remove previous engine files and fix some cmake.in [#2909]( https://github.com/sofa-framework/sofa/pull/2909 ); - [S.C.LinearSolver]fix bug in linearsolvers and preconditioners [#2883]( https://github.com/sofa-framework/sofa/pull/2883 ); - [S.C.Mapping] Fix assertion in BarycentricMapper [#2989]( https://github.com/sofa-framework/sofa/pull/2989 ); - [S.C.Topology.Container.Dynamic] Fix assert error in QuadSetTopologyContainer [#2990]( https://github.com/sofa-framework/sofa/pull/2990 ); - [SceneUtility] MakeDataAliasComponent: Remove alias in destructor [#2832]( https://github.com/sofa-framework/sofa/pull/2832 ); - [Sofa.Component.Diffusion][Sofa.Component.Mass] Fix diffusion [#2798]( https://github.com/sofa-framework/sofa/pull/2798 ); - [Sofa.Component.Engine] Change the default drawSize from 0.0 to 1.0 for ROIs. [#3045]( https://github.com/sofa-framework/sofa/pull/3045 ); - [Sofa.Component] Fix compilation when FLOATING_POINT is set to float [#2907]( https://github.com/sofa-framework/sofa/pull/2907 ); - [Sofa.Component] Put the initilization code in init() instead of the entrypoint initExternalPlugin() [#3112]( https://github.com/sofa-framework/sofa/pull/3112 ); - [Sofa.Core] Remove annoying 'unused' warning in StateAccessor [#2835]( https://github.com/sofa-framework/sofa/pull/2835 ); - [Sofa.DefaultType] Removes definition of GLdouble in SolidTypes [#3060]( https://github.com/sofa-framework,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:107889,error,error,107889,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,": optional dependency to SofaSphFluid found. ""); else(); message(STATUS ""SofaCUDA: optional dependency SofaSphFluid not found. ""); endif(). sofa_find_package(SofaValidation QUIET); if(SofaValidation_FOUND); list(APPEND SOURCE_FILES; sofa/gpu/cuda/CudaExtraMonitor.cpp; ); message(STATUS ""SofaCUDA: found SofaValidation, enabling CudaExtraMonitor (Warning: this component is being deprecated). ""); endif(). option(SOFACUDA_VERBOSE_PTXAS ""???"" OFF); if(SOFACUDA_VERBOSE_PTXAS); set(VERBOSE_PTXAS --ptxas-options=-v); endif(). option(SOFACUDA_CUBLAS ""Activate cublas support in CUDA (requires SOFACUDA_DOUBLE)."" OFF); if(SOFACUDA_CUBLAS); set(SOFA_GPU_CUBLAS 1) # #cmakedefine; list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}); find_package(CUDASparse REQUIRED); endif(). option(SOFACUDA_CUDPP ""Activate CUDPP (for RadixSort)."" OFF); if(SOFACUDA_CUDPP); set(SOFA_GPU_CUDPP 1) # #cmakedefine; endif(). # Note: THRUST is included in CUDA SDK 4.0+, it is recommended to use it if available; option(SOFACUDA_THRUST ""Activate THRUST (for RadixSort)."" ON); if(SOFACUDA_THRUST); set(SOFA_GPU_THRUST 1) # #cmakedefine; endif(). option(SOFACUDA_DOUBLE ""Activate double-precision support in CUDA (requires GT200+ GPU and -arch sm_13 flag."" OFF); if(SOFACUDA_DOUBLE); set(SOFA_GPU_CUDA_DOUBLE 1) # #cmakedefine; endif(). option(SOFACUDA_DOUBLE_PRECISE ""Enable double-precision for sqrt/div... (requires compute capability; >= 2 and CUDA_VERSION > 3.0)"" OFF); # Note: with SOFA_GPU_CUDA_PRECISE and SOFA_GPU_CUDA_DOUBLE you get IEEE; # 754-compliant floating point operations for addition and multiplication only.; if(SOFACUDA_DOUBLE_PRECISE); set(SOFA_GPU_CUDA_DOUBLE_PRECISE 1) # #cmakedefine; endif(). option(SOFACUDA_PRECISE ""Use IEEE 754-compliant floating point operations."" OFF). include(SofaCUDANvccFlags.cmake). # nvcc uses a ""host code compiler"" to compile CPU code, specified by CUDA_HOST_COMPILER.; # With some versions of CMake, CUDA_HOST_COMPILER defaults to CMAKE_C_COMPILER,; # but few hos",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:17584,avail,available,17584,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,1,['avail'],['available']
Availability,"://github.com/sofa-framework/sofa/pull/229 ); - [All]; - check that SofaPython is found before lauching the cmake sofa_set_python_directory command [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - use the cmake install DIRECTORY instead of FILES to preserve the files hierarchy when installing [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - fixing issue related to parsing attributes with atof/atoi [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - unify color datafield [#206]( https://github.com/sofa-framework/sofa/pull/206 ); - Fix CMakeLists bug on Sofa.ini and installedSofa.ini creation [#291]( https://github.com/sofa-framework/sofa/pull/291 ); - Fix a lot of failing tests (#271, #279); - Fix compilation with SOFA_FLOATING_POINT_TYPE as float [#262]( https://github.com/sofa-framework/sofa/pull/262 ); - CMake: Fix and clean boost, when using Sofa as an external lib [#421]( https://github.com/sofa-framework/sofa/pull/421 ); - [SofaKernel]; - Fix the Filemonitor_test random failure on MacOs [#143]( https://github.com/sofa-framework/sofa/pull/143 ); - implement a numerical integration for triangle [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - add brace initializer to helper::vector class [#252]( https://github.com/sofa-framework/sofa/pull/252 ); - Activates thread-safetiness on MessageDispatcher. [#257]( https://github.com/sofa-framework/sofa/pull/257 ); - Fix getRelativePath() in DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - FileRepository::getRelativePath() lowering the case on WIN32 is now a deprecated behavior [#264]( https://github.com/sofa-framework/sofa/pull/264 ); - Fix FileRepository should not be optional [#122]( https://github.com/sofa-framework/sofa/pull/122 ); - FileMonitor: fix the recurrent problem with file 'SofaKernel/framework/framework_test/resources/existing.txt' pointed in Issue #146 [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - Fix wrong inline in exporte",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:331994,failure,failure,331994,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['failure'],['failure']
Availability,://github.com/sofa-framework/sofa/pull/563 ); - [SofaGeneralObjectInteraction]; - Remove stiffness multiplicator in SpringForceField [#290]( https://github.com/sofa-framework/sofa/pull/290 ); - [SofaMiscFem]; - Fix FastTetrahedralCorotationalFF topology change [#554]( https://github.com/sofa-framework/sofa/pull/554 ); - [SofaOpenglVisual]; - Fix a bug crashing sofa when the textures cannot be loaded. [#474]( https://github.com/sofa-framework/sofa/pull/474 ). **Extlibs**; - [CImg]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Eigen]; - Warning fix with eigen when compiling with msvc [#447]( https://github.com/sofa-framework/sofa/pull/447 ); - [libQGLViewer]; - FIX missing headers [#461]( https://github.com/sofa-framework/sofa/pull/461 ); - Update libQGLViewer to 2.7.1 [#545]( https://github.com/sofa-framework/sofa/pull/545 ). **Plugins / Projects**; - [CGALPlugin]; - Fix build problem [#351]( https://github.com/sofa-framework/sofa/pull/351 ); - FIX build error with CGAL > 4.9.1 [#515]( https://github.com/sofa-framework/sofa/pull/515 ); - [CImgPlugin]; - Use sofa cmake command to create proper package [#544]( https://github.com/sofa-framework/sofa/pull/544 ); - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - prevent INT32 redefinition by libjpeg on Windows [#566]( https://github.com/sofa-framework/sofa/pull/566 ); - [ColladaSceneLoader]; - FIX Assimp copy on Windows [#504]( https://github.com/sofa-framework/sofa/pull/504 ); - [Flexible]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [image]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Meshconv]; - fix build if no miniflowVR [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [MultiThreading]; - FIX: examples installation [#299]( https://github.com/sofa-framework/sofa/pull/299 ); - Fix build with Boost 1.64.0 [#359]( https://github.com/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:317069,error,error,317069,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"; author or copyright holder as a result of your choosing to follow a; later version. 15. Disclaimer of Warranty. THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY; APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT; HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY; OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,; THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR; PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM; IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF; ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. Limitation of Liability. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING; WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS; THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY; GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE; USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF; DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD; PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),; EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF; SUCH DAMAGES. 17. Interpretation of Sections 15 and 16. If the disclaimer of warranty and limitation of liability provided; above cannot be given local legal effect according to their terms,; reviewing courts shall apply local law that most closely approximates; an absolute waiver of all civil liability in connection with the; Program, unless a warranty or assumption of liability accompanies a; copy of the Program in return for a fee. END OF TERMS AND CONDITIONS. How to Apply These Terms to Your New Programs. If you develop a new program, and you want it to be of the greatest; possible use to the public, the best way to achieve this is to make it; free software which everyone can redistribute and ch",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:50429,FAILURE,FAILURE,50429,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['FAILURE'],['FAILURE']
Availability,"; l i b Q G L V i e w e r I n s t a l l a t i o n. libQGLViewer requires the Qt library, available from Digia. In order to compile the library from its sources:. - On UNIX platforms, simply type (see doc/installUnix.html for details):. > qmake; > make; > make install [optional]. - For Windows installation, see doc/installWindows.html. See doc/compilation.html for details on compiling programs that use libQGLViewer.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/install.txt:89,avail,available,89,Sofa/GUI/Qt/libQGLViewer/install.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/install.txt,1,['avail'],['available']
Availability,"; l i b Q G L V i e w e r. 	 	 Version 2.8.0. Packaged on March 13, 2022. Copyright (C) 2002-2014 Gilles Debunne. All rights reserved.; http://www.libqglviewer.com; Send e-mail to contact@libqglviewer.com. libQGLViewer is a C++ library based on Qt that eases the creation of OpenGL 3D viewers. It provides some of the typical 3D viewer functionalities, such as the possibility to; move the camera using the mouse, which lacks in most of the other APIs. Other features; include mouse manipulated frames, interpolated keyFrames, object selection, stereo ; display, screenshot saving and much more. It can be used by OpenGL beginners as well as; to create complex applications, being fully customizable and easy to extend. Based on the Qt toolkit, it compiles on any architecture (Unix-Linux, Mac, Windows). ; Full reference documentation and many examples are provided. libQGLViewer does not ; display 3D scenes in various formats, but it can be the base for the coding of such a ; viewer. libQGLViewer uses dual licensing: it is freely available under the terms of the GNU-GPL; license for open source software development, while commercial applications can apply; for a commercial license. The library's main functionalities are:. - A camera trackball to intuitively move the camera in the scene.; - Screenshot saving in different file formats (JPG, PNG, EPS...).; - Easy scene object selection and manipulation using the mouse.; - Definition and replay of keyFrame paths.; - Stereo display (provided that your hardware supports it).; - Clean, well-designed and easily extendable API.; - Many examples and a complete reference documentation. . See the doc/index.html page for details. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/readMe.txt:1035,avail,available,1035,Sofa/GUI/Qt/libQGLViewer/readMe.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/readMe.txt,1,['avail'],['available']
Availability,"C).; - SOFA Consortium: research centers and companies willing to share the cost of development and maintenance of SOFA, hosted by Inria.; - SOFA Consortium Staff: administrators of SOFA and its ecosystem. This group is directed by the Executive Committee (EC). All SOFA Developers are gladly invited to the SOFA-dev meetings. ; They take place remotely every Wednesday at 10 a.m. CET and are animated by the SOFA Reviewers + the Consortium Staff. ; [Subscribe to SOFA-dev mailing-list](https://sympa.inria.fr/sympa/subscribe/sofa-dev) to get the agenda, reports and conference room url. About the steering committees:. - SOFA Scientific and Technical Committee (STC): defines the technical roadmap twice a year, validate the contribution rules, the Reviewers team and discuss every technical point in SOFA.; - SOFA Executive Committee (EC): decides on evolutions of the membership contract, the communication policy and the priorities of the Consortium. A more detailed definition of the committees is available [in the SOFA website](https://www.sofa-framework.org/consortium/presentation/). # Getting started. Please **read carefully** [the GitHub guide on Contributing to Open Source](https://guides.github.com/activities/contributing-to-open-source/). We also recommend you to check this [more detailed documentation on issues and pull requests](https://help.github.com/categories/collaborating-with-issues-and-pull-requests/). # Support - Discussion forum. For any **question** (help needed, problem of understanding SOFA, announcements), create a topic on [the SOFA GitHub Discussions](https://github.com/sofa-framework/sofa/discussions) and benefit from the feedback of the community. When creating a new topic, pay attention to some tips:. - **Check existing topics** using the Search bar. Your question may have been answered already.; - **Be clear** about what your problem is: what was the expected outcome, what happened instead? Detail how someone else can recreate the problem.; - **Addi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:1485,avail,available,1485,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['avail'],['available']
Availability,"Cleanings. **Modules**; - [All] For each data field's with a ""filename"" alias flip it with the data's name. [#1024]( https://github.com/sofa-framework/sofa/pull/1024 ); - [All] Quick changes diffusion and mass [#983]( https://github.com/sofa-framework/sofa/pull/983 ); - [All] Remove duplicate ctor + prettify some code [#1054]( https://github.com/sofa-framework/sofa/pull/1054 ); - [All] Replace serr with the new msg_error() API. [#916]( https://github.com/sofa-framework/sofa/pull/916 ); - [All] Several STC fixes [#1048]( https://github.com/sofa-framework/sofa/pull/1048 ); - [All] Sofa defrost sprint week2 [#884]( https://github.com/sofa-framework/sofa/pull/884 ); - [All] minor cleaning of warnings and bugfix [#886]( https://github.com/sofa-framework/sofa/pull/886 ); - [All] Remove bunch of warnings (again) [#1065]( https://github.com/sofa-framework/sofa/pull/1065 ); - [All] remove #ifdef SOFA_HAVE_GLEW [#1077]( https://github.com/sofa-framework/sofa/pull/1077 ); - **[SofaLoader]** Change error into warning in MeshVTKLoader [#1037]( https://github.com/sofa-framework/sofa/pull/1037 ); - [SofaConstraint] Replaced sout calls by msg_info() in LCPConstraintSolver [#981]( https://github.com/sofa-framework/sofa/pull/981 ); - [SofaGeneralLinearSolver] Clean BTDLinearSolver [#907]( https://github.com/sofa-framework/sofa/pull/907 ); - [SofaHaptics] Replace deprecated INCLUDE_ROOT_DIR in CMakeLists.txt [#1023]( https://github.com/sofa-framework/sofa/pull/1023 ); - **[SofaKernel]** Brainless Warnings cleaning [#971]( https://github.com/sofa-framework/sofa/pull/971 ); - **[SofaKernel]** Minor code refactor in BaseData & new StringUtils functions. [#860]( https://github.com/sofa-framework/sofa/pull/860 ); - **[SofaKernel]** Refactor DataTrackerEngine so it match the DataCallback [#1073]( https://github.com/sofa-framework/sofa/pull/1073 ); - **[SofaKernel]** Remove annoying warning [#1062]( https://github.com/sofa-framework/sofa/pull/1062 ); - **[SofaKernel]** Remove boost::locale de",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:272248,error,error,272248,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"D authoring and content processing tools to be combined into a production pipeline. ; The intermediate language provides comprehensive encoding of visual scenes including: geometry, shaders and effects, physics, animation, kinematics, ; and even multiple version representations of the same asset.COLLADA FX enables leading 3D authoring tools to work effectively together to create shader ; and effects applications and assets to be authored and packaged using OpenGL Shading Language, Cg, CgFX, and DirectX FX. How to use.       To use this plugin, you just have to go in you sofa configuration file (sofa-local.prf or if you have not this file, use sofa-default.prf in the sofa root directory) and uncomment or add this following line :. DEFINES += SOFA_HAVE_PLUGIN_COLLADA. If you are a Visual Studio user you must generate sofa projects again using the corresponding batch file (Project VC*.bat).       Build the ColladaSceneLoader plugin and load the resulting dynamic library with the Sofa plugin manager available in runSofa or in the sofa Modeler (in the main toolbar : Edit / Plugin Manager...).; You are now able to use the new SceneColladaLoader component. In the Modeler, you can find it in the Loader category. To do so, drag and drop the component into your scene graph and fill up the data ""filename"" with ; the path of the collada scene you want to load. If you launch runSofa with your scene you will see your SceneColladaLoader component and a new generated node below which contains the whole collada scene.       For every skinned mesh, the SceneColladaLoader component creates a MechanicalObject containing the bones used to skin the mesh, a SkeletalMotionContraint containing the whole bones animation ; and a SkinningMapping in order to apply the skinning on the mesh.; For every mesh, skinned or not, the loader also creates components needed for visualisation : a MechanicalObject with the mesh vertices, a MeshTopology containing the mesh edges, triangles and ; quads, an Og",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:1472,avail,available,1472,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['avail'],['available']
Availability,"FA_GPU_CUDA_DOUBLE [#2863]( https://github.com/sofa-framework/sofa/pull/2863 ); - [SofaCUDA] Fix some namespace, headers includes and decl exports [#3003]( https://github.com/sofa-framework/sofa/pull/3003 ); - [SofaCUDA] Fix symbol definition at run time and compilation error [#2634]( https://github.com/sofa-framework/sofa/pull/2634 ); - [SofaCUDA] Ignore CudaTLED-related scene on the CI [#2893]( https://github.com/sofa-framework/sofa/pull/2893 ); - [SofaCUDA] Restore CudaHexahedronFEMForceField [#2535]( https://github.com/sofa-framework/sofa/pull/2535 ); - [SofaCUDA] Rework and move benchmark scenes for HexahedronFEMForceField and TetrahedronFEMForceField [#2561]( https://github.com/sofa-framework/sofa/pull/2561 ); - [SofaCUDA] fix HexahedronFEMForceField double compilation [#3081]( https://github.com/sofa-framework/sofa/pull/3081 ); - [SofaCUDA] update .scene-tests files to fix tests on dashboard [#2616]( https://github.com/sofa-framework/sofa/pull/2616 ); - [SofaCUDA] FIX linking error : needed the code of the destructor [#2708]( https://github.com/sofa-framework/sofa/pull/2708 ); - [SofaCUDA] Forward declaration in wrong namespace [#2923]( https://github.com/sofa-framework/sofa/pull/2923 ); - [SofaMatrix] Move CI setting to the plugin folder [#2579]( https://github.com/sofa-framework/sofa/pull/2579 ); - [SofaNewMat] Fix compilation [#2829]( https://github.com/sofa-framework/sofa/pull/2829 ); - [SofaSphFluid] Fix ParticleSource topologicalChanges use new callbacks mechanism [#2868]( https://github.com/sofa-framework/sofa/pull/2868 ); - [image] fix shadow variable [#2606]( https://github.com/sofa-framework/sofa/pull/2606 ); - [image] remove shadow variable [#2910]( https://github.com/sofa-framework/sofa/pull/2910 ); - [runSofa] Clean up in case GUI init fails [#3106]( https://github.com/sofa-framework/sofa/pull/3106 ); - [runSofa] Fix CMake error if all plugins are disabled [#3069]( https://github.com/sofa-framework/sofa/pull/3069 ); - [runSofa] Fix bug which make",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:116421,error,error,116421,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"FIX crash in python script when visualizing advanced timer output [#458]( https://github.com/sofa-framework/sofa/pull/458 ); - FIX error in script for plotting advancedTimer output [#519]( https://github.com/sofa-framework/sofa/pull/519 ); - Fix python unicode data [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - [SofaSPHFluid]; - Fix invalid plugin initialization. [#467]( https://github.com/sofa-framework/sofa/pull/467 ); - [SofaVolumetricData]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SceneCreator]; - FIX build error with AppleClang 6.0.0.6000051 [#483]( https://github.com/sofa-framework/sofa/pull/483 ); - [THMPGSpatialHashing]; - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ). **Scenes**; - Fix scenes [#310]( https://github.com/sofa-framework/sofa/pull/310 ); - Fix scenes with bad RegularGrid position relative to 270 [#324]( https://github.com/sofa-framework/sofa/pull/324 ); - Fix scenes errors and crashes [#505]( https://github.com/sofa-framework/sofa/pull/505 ); - FIX all scenes failures 17.12 [#565]( https://github.com/sofa-framework/sofa/pull/565 ). ### Cleanings. **Kernel modules**; - [All]; - replace a bunch of std::cerr, std::cout, prinf to use msg_* instead [#339]( https://github.com/sofa-framework/sofa/pull/339 ); - More std::cout to msg_* cleaning [#370]( https://github.com/sofa-framework/sofa/pull/370 ); - FIX removed compilation warnings [#386]( https://github.com/sofa-framework/sofa/pull/386 ); - Clean BaseLoader & Remove un-needed #includes [#393]( https://github.com/sofa-framework/sofa/pull/393 ); - Remove last direct calls of OpenGL in modules [#425]( https://github.com/sofa-framework/sofa/pull/425 ); - warning removal [#454]( https://github.com/sofa-framework/sofa/pull/454 ); - Refactor SofaTest to cut dependencies [#471]( https://github.com/sofa-framework/sofa/pull/471 ); - Modularizing config.h [#475]( https://github.com/sofa-framework/sofa/pull/4",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:320857,error,errors,320857,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['errors']
Availability,"FLOAT 0); elseif(${SOFA_FLOATING_POINT_TYPE} STREQUAL float); set(SOFA_DOUBLE 0); set(SOFA_FLOAT 1); endif(). # If you really don't understand the negated logics of SOFA_DOUBLE and; # SOFA_FLOAT please consider using SOFA_WITH_FLOAT and SOFA_WITH_DOUBLE.; # Eg: SOFA_WITH_FLOAT indicate that you need to generate the; # float code and SOFA_WITH_DOUBLE indicates that you; # need to generate the double related code.; if(${SOFA_FLOATING_POINT_TYPE} STREQUAL float); set(SOFA_WITH_FLOAT 1); set(SOFA_WITH_DOUBLE 0); endif(); if(${SOFA_FLOATING_POINT_TYPE} STREQUAL double); set(SOFA_WITH_DOUBLE 1); set(SOFA_WITH_FLOAT 0); endif(). # Options; option(SOFA_DETECTIONOUTPUT_FREEMOTION ""Compile Sofa with the DETECTIONOUTPUT_FREEMOTION macro defined."" OFF); option(SOFA_NO_UPDATE_BBOX ""Compile Sofa with the SOFA_NO_UPDATE_BBOX macro defined."" OFF); option(SOFA_DUMP_VISITOR_INFO ""Compile Sofa with the SOFA_DUMP_VISITOR_INFO macro defined."" OFF); if(MSVC); option(SOFA_VECTORIZE ""(deprecated) Enable the use of SSE2 instructions by the compiler (Only available for MSVC)."" OFF); option(SOFA_ENABLE_SIMD ""Enable the use of SIMD instructions by the compiler (AVX/AVX2 for msvc, march=native for gcc/clang)."" OFF); endif(); option(SOFA_ENABLE_FAST_MATH ""Enable floating-point model to fast (theoretically faster but can bring unexpected results/bugs)."" OFF). ### SOFA_DEV_TOOL; option(SOFA_WITH_DEVTOOLS ""Compile with development extra features."" ON). # Variables to expose in configured files; sofa_set_01(SOFA_NO_UPDATE_BBOX_ VALUE ${SOFA_NO_UPDATE_BBOX}) # build_option_bbox.h.in. # Create build and install versions of etc/sofa.ini:; # - In build dir, sofa.ini contains absolute paths to distant (in source) share/ and examples/ dirs; # - In install dir, sofa.ini (generated later via installedSofa.ini) contains relative paths to local share/ and examples/ dirs; set(SHARE_DIR ""${CMAKE_SOURCE_DIR}/share""); set(EXAMPLES_DIR ""${CMAKE_SOURCE_DIR}/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINA",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:2496,avail,available,2496,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['avail'],['available']
Availability,"HeadlessRecorder is, as its name suggest, a new gui plugin who allow users to records sofa visualisation without any windows (batch only). ⚠ Linux only ⚠. ## Installation. Ubuntu :; ```; $ sudo apt-get install libavcodec-dev libswscale-dev libavutil-dev libavformat-dev ; ```. ## How to use it. Every needed information are available in runSofa helper.; ```; $ ./runSofa -h; ```. Here is an example for recording a 5 seconds video in 1920x1080 ; ```; $ ./runSofa -g hRecorder --video --width=1920 --height=1080 --fps=60 --recordTime=5 -a --filename aFileName; ```; This example will record in a video file named myFileName a footage of the default runSofa scene (aka caduceus). The dimensions of the video will be 1920x1080, the framerate is set to 60fps, the recording time will be 10 seconds and the option -a animate the scene. Here is an example for screenshots 1920x1080 ; ```; $ ./runSofa -g hRecorder --picture --width=1920 --height=1080 --fps=60 --recordTime=10 -a --filename aFileName; ```; ## Information. You have to use an InteractiveCamera component in your scene and correctly place it before recording.; By example you need to add this line to your caduceus scene :; ```; <InteractiveCamera position=""0 30 90"" lookAt=""0 30 0""/>; ```. ### Authors; Douaille Erwan. ### Contact information; douailleerwan@gmail.com; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/HeadlessRecorder/README.md:324,avail,available,324,Sofa/GUI/HeadlessRecorder/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/HeadlessRecorder/README.md,1,['avail'],['available']
Availability,"I place no restrictions on the use of newmat except that I take; no liability for any problems that may arise from its use,; distribution or other dealings with it. You can use it in your commercial projects. You can make and distribute modified or merged versions. You can; include parts of it in your own software. If you distribute modified or merged versions, please make it; clear which parts are mine and which parts are modified. For a substantially modified version, simply note that it is,; in part, derived from my software. A comment in the code will; be sufficient. The software is provided ""as is"", without warranty of any kind. Please understand that there may still be bugs and errors. Use at your own risk. I (Robert Davies) take no responsibility; for any errors or omissions in this package or for any misfortune; that may befall you or others as a result of your use,; distribution or other dealings with it.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaNewmat/extlibs/newmat/COPYING.txt:693,error,errors,693,applications/plugins/SofaNewmat/extlibs/newmat/COPYING.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaNewmat/extlibs/newmat/COPYING.txt,2,['error'],['errors']
Availability,"OptiTrackNatNet from ""options"" configurations; - ignore some OptiTrackNatNet scenes testing. - [SofaPython]; - fix GridTopology type on the python side; - fix OBJ loader; - fix loading a scene from a .py in a Node independently from the awful Simulation singleton.; - fix SofaPython.Tools.localPath in some situations; - fix BaseContext_getObjects so it can select objects from a base class name (and adding an example); - quaternion: fix singularity in from_line function. - [Flexible]; - fix case sensitive issues; - API: fix a bug with colors when reloading a scene; - fix the bulk factor in NeoHookean material; - fix NeoHookean traction test; - testing detachFromGraph; - BaseDeformationMapping: remove debug message, fix usage of sout (no need for testing f_printLog); - fix test compilation w/o image plugin; - fix loadVisual; - fix bug in topologygausspointsampler (computation of volume integrals for irregular hexa). - [Compliant]; - CompliantImplicitSolver: fix Lagrange multipliers clear when reseting the simulation; - auto-fix init errors in RigidMass; - Frame.py: adding tolist() conversion; - fix Jacobian reserved size; - fix contacts and associated test. - [image]; - python tools: fix bug in mhd parsing; - MeshToImage: fix bresenham, be sure dmax>=1; - fix resampling of projection images, and marching cubes default parameter; - fix bug in mhd file loader; - fix rasterization when using vertex colors. ### Cleanings. - warnings were removed; - dead branches were removed; - the ‘using’ directives were removed in header files; - the repository sofa_root/modules/sofa/components has been cleaned (deprecated components removed); - clean many SOFA examples; - removing ""using helper::vector"" from VecTypes.h; - SofaQtGui: Remove qt3 remnants in ui files. - Minor clean; - clean SofaBaseCollision of OpenGL dependency; - cleaning Material::setColor; - Base: write sout as info (rather than warnings); - clean and fix RestShapeSpringsForceField draw functions; - Remove useless tests",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:359754,error,errors,359754,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['errors']
Availability,"README.md; =========. This plugin requires the following dependencies:; - gfortran; - blas; - lapack; - gomp. Download the Pardiso library and license key from https://www.pardiso-project.org. In your home directory, create a file ""pardiso.lic"" which includes the license key. When configuring SOFA in CMake, fill the path variable ""PARDISO_LIB"" with the path to the pardiso library you downloaded.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaPardisoSolver/README.md:110,Down,Download,110,applications/plugins/SofaPardisoSolver/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaPardisoSolver/README.md,2,"['Down', 'down']","['Download', 'downloaded']"
Availability,"This folder contains a small subset of tools, mainly mesh manipulations,; available in FlowVR. See http://flowvr.sf.net/ for the complete package.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaDistanceGrid/extlibs/miniFlowVR/README.txt:74,avail,available,74,applications/plugins/SofaDistanceGrid/extlibs/miniFlowVR/README.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaDistanceGrid/extlibs/miniFlowVR/README.txt,1,['avail'],['available']
Availability,"This is libQGLViewer version 2.8.0. Packaged on March 13, 2022. The complete change log is available in doc/changeLog.html. The latest releases and changeLog are available at:; http://www.libqglviewer.com/changeLog.html; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/changeLog.txt:91,avail,available,91,Sofa/GUI/Qt/libQGLViewer/changeLog.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/changeLog.txt,2,['avail'],['available']
Availability,To install this plugin you need:. - to register on the Geomagic website; - to download and install the Geomagic driver (following the documentation and the instructions of INSTALL); - activate the plugin in cmake-gui; - compile it; - enjoy the power of the Geomagic haptic interfaces with SOFA and give a try to the example scene (examples/DemoGeomagic.scn). And let us know about your Geomagic simulations!,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Geomagic/README.txt:78,down,download,78,applications/plugins/Geomagic/README.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Geomagic/README.txt,1,['down'],['download']
Availability,"VisualNode.; Select the OglModel in the Modeler's scene graph. Press the Copy button, found in the Modeler toolbar, 4th from the left. Select the VisualNode, and press the Paste button, found to the right of the Copy button. Right click the original OglModel, and select Delete.; Now to make the link between the deformation of the simulated particles and a given visual model, we need a mapping. As we only need to update the positions of the visual model at each time step, we will use a Visual Mapping: BarycentricMapping.; Here we really need to pay attention to the template used for this component.; Open the OglModel properties and go to the Infos tab. ; Under instance, you can see that the Template is ExtVec3f. This means we need our BarycentricMapping to map from Vec3d (the template used by the MechanicalObject) to ExtVec3f.; Find the BarycentricMapping component using the Filter. Be sure that the template information to the right reads Vec3d, ExtVec3f. If it doesn't, choose that combination from the drop down menu. Add this component to the VisualModel node. ; Edit the properties of the BarycentricMapping, and open the Property 2/2 tab. Change Input object to map from @ to ""@.."".; This refers to the MechanicalObject placed in the node above (Object node); Change Output object to map to ""@Objective"".; This refers to the OglModel that we named Objective earlier; Result; Run in SOFA and animate; Now not only are the particles of the grid deformed, but this deformation is propagated to the visual model, which remains embedded inside the grid at all times.; Related; As you may have noticed, the visual model is fully independent from the simulated model: We used the same model to create the deformable grid as we did to create the visual model, but nothing stops you from using a different model. Change the visual model or the model used in the SparseGridTopology and see the effect.; To understand how the barycentric mapping works, display the Visual Mappings debug inform",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/4_FullObject.html:1490,down,down,1490,examples/Tutorials/StepByStep/FullObject/4_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/4_FullObject.html,1,['down'],['down']
Availability,"[SofaGuiQt] ADD qt.conf.h for custom qt.conf loading at runtime [#1820]( https://github.com/sofa-framework/sofa/pull/1820 ); - [SofaGuiQt] Fix Export Graph option [#1785]( https://github.com/sofa-framework/sofa/pull/1785 ); - [SofaGuiQt] Clean QtGLViewer with key events [#1850]( https://github.com/sofa-framework/sofa/pull/1850 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test [#1823]( https://github.com/sofa-framework/sofa/pull/1823 ); - [SofaMiscFEM] Minor changes in TrianglePressureFF and TriangularFEMFF [#1779]( https://github.com/sofa-framework/sofa/pull/1779 ); - **[SofaSimpleFem]** Fix nasty bug in HexaFEMForceField' s draw() [#1766]( https://github.com/sofa-framework/sofa/pull/1766 ). **Plugins / Projects**; - [Geomagic] Fix GeomagicVisualModel compilation [#1776]( https://github.com/sofa-framework/sofa/pull/1776 ); - [PreassembledMass] FIX typo in PreassembledMass.inl [#1833]( https://github.com/sofa-framework/sofa/pull/1833 ); - [SofaCUDA] FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - [SofaCUDA] Fix CudaFixedConstraint when indices are not contiguous [#1780]( https://github.com/sofa-framework/sofa/pull/1780 ); - [SofaOpenCL] Fix compilation [#1795]( https://github.com/sofa-framework/sofa/pull/1795 ); - [SofaPardisoSolver] Fix plugin and add example [#1830]( https://github.com/sofa-framework/sofa/pull/1830 ); - [SofaRigid] fixes applyJT of RigidMapping [#1813]( https://github.com/sofa-framework/sofa/pull/1813 ); - [SofaSphFluid] Remove std::execution usage [#1684]( https://github.com/sofa-framework/sofa/pull/1684 ). **Examples / Scenes**; - [Scenes] Fix (new?) failing scenes on the CI [#1798]( https://github.com/sofa-framework/sofa/pull/1798 ). ### Cleanings; **Plugins / Projects**; - [SofaPython] CLEAN PythonEnvironment info messages [#1835]( https://github.com/sofa-framework/sofa/pull/1835 ); - [SofaCUDA] Renaming cudaMatrix methods to use rowSize and colSize [#1788]( https://git",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:213122,error,errors,213122,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['errors']
Availability,] image_gui to compile with Qt6 [#4330](https://github.com/sofa-framework/sofa/pull/4330); - [Haption] Partially fix the plugin [#4338](https://github.com/sofa-framework/sofa/pull/4338); - [github] quick fix for GHD script [#4347](https://github.com/sofa-framework/sofa/pull/4347); - [github] fix stale action [#4348](https://github.com/sofa-framework/sofa/pull/4348); - [GUI] Fix compilation using QDocBrowser [#4354](https://github.com/sofa-framework/sofa/pull/4354); - [VolumetricRendering] Fix the compilation [#4398](https://github.com/sofa-framework/sofa/pull/4398); - [VolumetricRendering] Fix crashes in batch mode [#4436](https://github.com/sofa-framework/sofa/pull/4436); - [LinearSolver.Direct] Fix metis dependency [#4450](https://github.com/sofa-framework/sofa/pull/4450); - [Simulation.Common] Fix tinyXML2 install for windows [#4525](https://github.com/sofa-framework/sofa/pull/4525); - [all] Install FindTinyXML2 [#4545](https://github.com/sofa-framework/sofa/pull/4545); - [cmake] Remove error in Findcxxopt [#4554](https://github.com/sofa-framework/sofa/pull/4554); - [GUI.qt] Set link to tinyxml2 to PRIVATE and fix config file [#4558](https://github.com/sofa-framework/sofa/pull/4558); - [Config] Fix findcxxopt when version is not specified [#4564](https://github.com/sofa-framework/sofa/pull/4564); - [Config] Fix Findmetis module when using config mode [#4570](https://github.com/sofa-framework/sofa/pull/4570); - [all] Fix tinyxml2 dependency [#4574](https://github.com/sofa-framework/sofa/pull/4574). ### Cleaning; - [plugins] Remove fetching of SofaPython [#3855](https://github.com/sofa-framework/sofa/pull/3855); - [Constraint.Lagrangian] Add messages when no compliance is given [#3858](https://github.com/sofa-framework/sofa/pull/3858); - [all] include base class inl file [#3865](https://github.com/sofa-framework/sofa/pull/3865); - [SofaCUDA] No longer use deprecated texture references in HexaTLED [#3868](https://github.com/sofa-framework/sofa/pull/3868); - [SofaCUD,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:39569,error,error,39569,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"are Foundation. If the Program specifies that a proxy can decide which future; versions of the GNU General Public License can be used, that proxy's; public statement of acceptance of a version permanently authorizes you; to choose that version for the Program. Later license versions may give you additional or different; permissions. However, no additional obligations are imposed on any; author or copyright holder as a result of your choosing to follow a; later version. 15. Disclaimer of Warranty. THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY; APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT; HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY; OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,; THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR; PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM; IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF; ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. Limitation of Liability. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING; WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS; THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY; GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE; USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF; DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD; PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),; EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF; SUCH DAMAGES. 17. Interpretation of Sections 15 and 16. If the disclaimer of warranty and limitation of liability provided; above cannot be given local legal effect according to their terms,; reviewing courts shall apply local law that most closely approximates; an absolute waiver of all civil liability in connection w",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:49917,REPAIR,REPAIR,49917,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['REPAIR'],['REPAIR']
Availability,ate [#1733]( https://github.com/sofa-framework/sofa/pull/1733 ); - [SofaGeneralMeshCollision] Direct SAP is written as a narrow phase [#2030]( https://github.com/sofa-framework/sofa/pull/2030 ); - [SofaGuiQt] Add new about window UI and url redirect [#1801]( https://github.com/sofa-framework/sofa/pull/1801 ); - [SofaGuiQt] Qt6 support [#1756]( https://github.com/sofa-framework/sofa/pull/1756 ); - [SofaGuiQt] Tooltips [#2139]( https://github.com/sofa-framework/sofa/pull/2139 ); - [SofaGui] Improve background v20.12 [#1758]( https://github.com/sofa-framework/sofa/pull/1758 ); - **[SofaHelper]** Optimize use of map_ptr_stable_compare [#2105]( https://github.com/sofa-framework/sofa/pull/2105 ); - **[SofaHelper][SofaPython]** ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ); - [SofaImplicitOdeSolver] Rewrite of the static Newton-Raphson ODE solver [#2050]( https://github.com/sofa-framework/sofa/pull/2050 ); - **[SofaKernel]** Write template list in error message [#2207]( https://github.com/sofa-framework/sofa/pull/2207 ); - [SofaMiscFem] Proposal of FEM force field for Reissner-Mindlin Flat Shell Element [#1745]( https://github.com/sofa-framework/sofa/pull/1745 ); - [SofaMiscTopology] Add component TopologyChecker [#1594]( https://github.com/sofa-framework/sofa/pull/1594 ); - [SofaOpenglVisual] Add transparency when we draw triangles (this allows to see inside the volume). [#1742]( https://github.com/sofa-framework/sofa/pull/1742 ); - **[SofaSimulationCore]** Add option to call ODE::solve in parallel in SolveVisitor [#2135]( https://github.com/sofa-framework/sofa/pull/2135 ); - **[SofaSimulationCore]** Launch a new event when textures have been initialized. [#1832]( https://github.com/sofa-framework/sofa/pull/1832 ). **Plugins / Projects**; - [MultiThreading] Parallel BVH narrow phase [#2053]( https://github.com/sofa-framework/sofa/pull/2053 ); - [MultiThreading] Parallel brute force broad phase [#2038]( https,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:179263,error,error,179263,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"ator: CMake 3.1 or higher.; - Compiler: GCC 4.8 or higher, Clang 3.4 or higher, Microsoft Visual C++ 2013 or higher. ### New features for users. - new Geomagic plugin: supporting latest versions of force feedback interfaces from Geomagic; - add ForceMaskOff, a component to locally (in a branch of the scene graph) cancel the force mask; - live-coding for python; - live-coding for GLSL; - new component MakeAlias; - new component MakeDataAlias; - improved error message & console rendering. ### New features for developpers. - Preliminary Markdown support in the msg_* API. You can now write much better formatting & alignement as well as adding URL to documentations related to the error.; - class RichStyleConsoleFormatter which interprete the markdowns in the message and format this to a resizable console with nice alignement.; - class CountingMessageHandler (count the number of message for each message type); - class RoutingMessageHandler (to implement context specific routing of the messages to different handler); - class ExpectMessage and MessageAsATestFailure can be used to check that a component did or didn't send a message and generate a test failure.; - FileMonitor is now implemented on MacOS & Windows (for live-coding features, for example); - RequiredPlugin: modified API to take a list of plugins to load; - Implements the move semantics on sofa::helper::vector. ### Improvements. - **372 new tests**: DAGNode, MeshObj, DiagonalMass, BoxROI, ComplementaryROI, DifferenceEngine, BilateralInteractionConstraint, Quaternion, ImagePNG, etc.; - 184/480 components have an associated example; - [SofaKernel]; - replace raw pointers with a smart ones; - add a ComponentState attribute to BaseObject; - BaseData::typeName is now public: useful to debug; - implement DataTrackerEngine, a kind of DataEngine but that is not a BaseObject; - fix SVector<std::string>. The string serialization changed; - [SofaRigid]; - in case jetJs is called several times per step; - [SofaGeneralLoader];",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:337908,failure,failure,337908,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['failure'],['failure']
Availability,b.com/sofa-framework/sofa/pull/1424 ); - [SofaHeadlessRecorder] Update headless recorder to use the new ffmpeg recorder [#1396]( https://github.com/sofa-framework/sofa/pull/1396 ); - **[SofaHelper]** AdvancedTimer wasn't using the good timer ids for the label assignments [#1244]( https://github.com/sofa-framework/sofa/pull/1244 ); - **[SofaHelper]** Fix unloading with PluginManager [#1274]( https://github.com/sofa-framework/sofa/pull/1274 ); - **[SofaHelper]** Fix fixed_array compilation with VS2019 [#1426]( https://github.com/sofa-framework/sofa/pull/1426 ); - **[SofaKernel]** Fix hexahedra detection in BoxROI [#1417]( https://github.com/sofa-framework/sofa/pull/1417 ); - **[SofaKernel]** Fix minor bug in BoxROI and add warning message in RestShapeSpringsForceField [#1391]( https://github.com/sofa-framework/sofa/pull/1391 ); - **[SofaKernel]** Fixes a bug where the camera was not moving with the Qt viewer [#1377]( https://github.com/sofa-framework/sofa/pull/1377 ); - **[SofaKernel]** Improve error message when a component cannot be created. [#1332]( https://github.com/sofa-framework/sofa/pull/1332 ); - **[SofaKernel]** Remove the installation of external system libraries [#1387]( https://github.com/sofa-framework/sofa/pull/1387 ); - **[SofaKernel]** Set default visibility to SOFA_EXPORT_DYNAMIC_LIBRARY [#1410]( https://github.com/sofa-framework/sofa/pull/1410 ); - [SofaMiscTopology] Fix bug in TopologicalChangeProcessor [#1247]( https://github.com/sofa-framework/sofa/pull/1247 ); - **[SofaSimpleFem]** Small Fix [#1403]( https://github.com/sofa-framework/sofa/pull/1403 ); - **[SofaSimulationCore]** FIX resizing of bboxes in UpdateBoundingBoxVisitor [#1268]( https://github.com/sofa-framework/sofa/pull/1268 ); - [SofaTopologyMapping] Fix Tetra2TriangleTopologicalMapping [#1319]( https://github.com/sofa-framework/sofa/pull/1319 ). **Plugins / Projects**; - [Geomagic] Fix several wrong behaviors in driver code [#1378]( https://github.com/sofa-framework/sofa/pull/1378 ); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:236256,error,error,236256,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"b.com/sofa-framework/sofa/pull/1758 ); - **[SofaHelper]** ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). **Plugins / Projects**; - [SofaPython] ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). ### Bug Fixes; **Architecture**; - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ). **Modules**; - [All] FIX build without SofaPython soft dependencies [#1829]( https://github.com/sofa-framework/sofa/pull/1829 ); - [All] Fix invalid Memory access in MechanicalObject and Compliant_test [#1849]( https://github.com/sofa-framework/sofa/pull/1849 ); - [All] Almost green dashboard [#1669]( https://github.com/sofa-framework/sofa/pull/1669 ); - **[SofaCore_test]** Update the two failling tests so they match the new convention for TypeInfo [#1709]( https://github.com/sofa-framework/sofa/pull/1709 ); - **[SofaDefaultType]** FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - **[SofaBaseMechanics]** fixes reinit of BarycentricMapping [#1815]( https://github.com/sofa-framework/sofa/pull/1815 ); - [SofaGuiCommon] Fix computationTimeSampling [#1698]( https://github.com/sofa-framework/sofa/pull/1698 ); - [SofaGuiCommon] fix BackgroundSetting [#1826]( https://github.com/sofa-framework/sofa/pull/1826 ); - [SofaGuiQt] ADD qt.conf.h for custom qt.conf loading at runtime [#1820]( https://github.com/sofa-framework/sofa/pull/1820 ); - [SofaGuiQt] Fix Export Graph option [#1785]( https://github.com/sofa-framework/sofa/pull/1785 ); - [SofaGuiQt] Clean QtGLViewer with key events [#1850]( https://github.com/sofa-framework/sofa/pull/1850 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test [#1823]( https://github.com/sofa-framework/sofa/pull/1823 ); - [SofaMiscFEM] Minor changes in TrianglePressureFF and TriangularFEMFF [#1779]( https://github.co",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:211704,error,errors,211704,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['errors']
Availability,ce [#3672](https://github.com/sofa-framework/sofa/pull/3672) ; - [Defaulttype] Add generic precision aliases for Mat templates [#3675](https://github.com/sofa-framework/sofa/pull/3675) ; - [Config] Disable SOFA_EXTERN_TEMPLATE [#3678](https://github.com/sofa-framework/sofa/pull/3678) ; - [all] Simple robustification [#3685](https://github.com/sofa-framework/sofa/pull/3685) ; - [Helper] Fix FileRepository::relativeToPath [#3693](https://github.com/sofa-framework/sofa/pull/3693) ; - [Core] Fix MSVC warning in Link [#3763](https://github.com/sofa-framework/sofa/pull/3763) ; - [Core] Access cumulative sum of VecIds through proxy class [#3918](https://github.com/sofa-framework/sofa/pull/3918) . **Modules**; - [GUI] Fix CMake Packaging [#3595](https://github.com/sofa-framework/sofa/pull/3595) ; - [Component.Engine] Replace some explicit instanciations on double with SReal [#3629](https://github.com/sofa-framework/sofa/pull/3629) ; - [Topology.Container.Grid] RegularGrid: Fix rounding errors with SReal=float [#3636](https://github.com/sofa-framework/sofa/pull/3636); - [Collision.Geometry] Fix transparency while displaying the Bounding Collision Cubemodel [#3658](https://github.com/sofa-framework/sofa/pull/3658) ; - [MechanicalLoad] Fix ConstantForceField when no force given [#3670](https://github.com/sofa-framework/sofa/pull/3670) ; - [Collision] Make the (CubeModel) BoundingTree deterministic [#3687](https://github.com/sofa-framework/sofa/pull/3687) ; - [IO.Mesh] Fix UB when filename is empty [#3689](https://github.com/sofa-framework/sofa/pull/3689) ; - [FEM.Elastic] Check for nullptr in BeamFEMForceField [#3690](https://github.com/sofa-framework/sofa/pull/3690) ; - [Spring] Check for nullptr in RestShapeSpringsForceField [#3691](https://github.com/sofa-framework/sofa/pull/3691) ; - [Testing] Fix CMake config after removal of compat [#3694](https://github.com/sofa-framework/sofa/pull/3694) ; - [LinearAlgebra] Fix crash when matrix has no nonzero values [#3700](https://gith,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:56690,error,errors,56690,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['errors']
Availability,cheduler user [#3607](https://github.com/sofa-framework/sofa/pull/3607) . ### Improvements. **Architecture**; - [Helper] Use DataTypeInfo in NameDecoder [#3465](https://github.com/sofa-framework/sofa/pull/3465) ; - [DefaultType] RigidCoord/Deriv become iterable [#3536](https://github.com/sofa-framework/sofa/pull/3536) ; - [Core] Give threads a name on Windows [#3551](https://github.com/sofa-framework/sofa/pull/3551) ; - [Core] Display flags spelling suggestion [#3575](https://github.com/sofa-framework/sofa/pull/3575) ; - [Type] Construct matrices based on initializer-lists [#3584](https://github.com/sofa-framework/sofa/pull/3584) ; - [defaulttype] Template aliases for CRS matrices [#3592](https://github.com/sofa-framework/sofa/pull/3592) ; - [Simulation] SceneCheck can be added in plugins [#3597](https://github.com/sofa-framework/sofa/pull/3597) ; - [Contributing] Update file to mention good first issue [#3625](https://github.com/sofa-framework/sofa/pull/3625) ; - [Simulation] Error when trying to load a non-existing file [#3677](https://github.com/sofa-framework/sofa/pull/3677) ; - [all] Give reason when component cannot be created [#3682](https://github.com/sofa-framework/sofa/pull/3682) ; - [Type] Support structured binding for type::fixed_array [#3753](https://github.com/sofa-framework/sofa/pull/3753) ; - Update CONTRIBUTING.md [#3774](https://github.com/sofa-framework/sofa/pull/3774) . **Modules**; - [Collision.Response.Contact] Implement addKToMatrix for PenalityContactForceField [#3626](https://github.com/sofa-framework/sofa/pull/3626) ; - [Mapping.NonLinear] Implement missing applyJT [#3776](https://github.com/sofa-framework/sofa/pull/3776) ; - [Constraint] Add data to access constraint forces in LCPCS [#3796](https://github.com/sofa-framework/sofa/pull/3796) ; - [Rendering3D] OglModel: Use glMapBufferRange to update buffers [#3822](https://github.com/sofa-framework/sofa/pull/3822) ; - [Logging] Suggestion to better highlight warnings in console [#3914](https,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:53052,Error,Error,53052,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Error'],['Error']
Availability,"cmake_minimum_required(VERSION 3.22); project(QGLViewer VERSION 2.8.0). # Same checks as Sofa.GUI.Qt; # i.e find Qt6, then if not, Qt5, then if not error; find_package(Qt6 COMPONENTS Core CoreTools QUIET); if (NOT Qt6Core_FOUND); find_package(Qt5 COMPONENTS Core QUIET); endif(). if (Qt5Core_FOUND); sofa_find_package(Qt5 COMPONENTS Core Gui Xml OpenGL Widgets REQUIRED); set(QGLViewer_QT_TARGETS Qt5::Core Qt5::Gui Qt5::Xml Qt5::OpenGL Qt5::Widgets); elseif (Qt6Core_FOUND); sofa_find_package(Qt6 COMPONENTS Gui GuiTools Widgets WidgetsTools OpenGLWidgets Xml REQUIRED); set(QGLViewer_QT_TARGETS ${QGLViewer_QT_TARGETS} Qt::Core Qt::Gui Qt::Widgets Qt::OpenGLWidgets Qt::Xml); endif(). set(MOC_HEADER_FILES; camera.h; frame.h; keyFrameInterpolator.h; manipulatedCameraFrame.h; manipulatedFrame.h; qglviewer.h; ); # These header files don't need to be processed by the moc.; set(HEADER_FILES; VRender/AxisAlignedBox.h; VRender/Exporter.h; VRender/NVector3.h; VRender/Optimizer.h; VRender/ParserGL.h; VRender/Primitive.h; VRender/PrimitivePositioning.h; VRender/SortMethod.h; VRender/Types.h; VRender/VRender.h; VRender/Vector2.h; VRender/Vector3.h; VRender/gpc.h; config.h; constraint.h; domUtils.h; mouseGrabber.h; quaternion.h; vec.h; camera.h; frame.h; keyFrameInterpolator.h; manipulatedCameraFrame.h; manipulatedFrame.h; qglviewer.h; ); set(SOURCE_FILES; VRender/BSPSortMethod.cpp; VRender/BackFaceCullingOptimizer.cpp; VRender/EPSExporter.cpp; VRender/Exporter.cpp; VRender/FIGExporter.cpp; VRender/NVector3.cpp; VRender/ParserGL.cpp; VRender/Primitive.cpp; VRender/PrimitivePositioning.cpp; VRender/TopologicalSortMethod.cpp; VRender/VRender.cpp; VRender/Vector2.cpp; VRender/Vector3.cpp; VRender/VisibilityOptimizer.cpp; VRender/gpc.cpp; camera.cpp; constraint.cpp; frame.cpp; keyFrameInterpolator.cpp; manipulatedCameraFrame.cpp; manipulatedFrame.cpp; mouseGrabber.cpp; qglviewer.cpp; quaternion.cpp; saveSnapshot.cpp; vec.cpp; ); set(UI_FILES; ImageInterface.ui; VRenderInterface.ui; ). if (",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt:148,error,error,148,Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt,1,['error'],['error']
Availability,"cmake_minimum_required(VERSION 3.22); project(SofaBase). set(SOFABASE_MODULES; SofaBaseLinearSolver; SofaEigen2Solver; SofaBaseTopology; SofaBaseCollision; SofaBaseMechanics; SofaBaseVisual; SofaBaseUtils; ). foreach(TARGET ${SOFABASE_MODULES}); add_subdirectory(../modules/${TARGET} ${CMAKE_CURRENT_BINARY_DIR}/${TARGET}); set_target_properties(${TARGET} PROPERTIES FOLDER SofaBase); endforeach(). set(SOFABASE_SRC src/${PROJECT_NAME}); set(HEADER_FILES; ${SOFABASE_SRC}/config.h.in; ${SOFABASE_SRC}/initSofaBase.h; ); set(SOURCE_FILES; ${SOFABASE_SRC}/initSofaBase.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFABASE_MODULES}). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER SofaBase). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; # RELOCATABLE ""collections"" # disabled because we need SofaBase to be directly available; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaBase/CMakeLists.txt:1072,avail,available,1072,applications/collections/deprecated/SofaBase/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaBase/CMakeLists.txt,1,['avail'],['available']
Availability,"cmake_minimum_required(VERSION 3.22); project(SofaFramework). # Version; set(SOFAFRAMEWORK_VERSION ""${Sofa_VERSION}""). # Modules; set(SOFAFRAMEWORK_MODULES; Sofa.Type; Sofa.Topology; Sofa.Geometry ; Sofa.Helper; Sofa.LinearAlgebra; Sofa.DefaultType; Sofa.Core; Sofa.Simulation.Core; ). set(SOFAFRAMEWORK_LEGACYMODULES; SofaHelper ; SofaDefaultType; SofaCore ; Sofa.SimulationCore; ). # add subprojects into a IDE folder called SofaFramework; foreach(module ${SOFAFRAMEWORK_MODULES}); sofa_find_package(${module}); endforeach(). foreach(module ${SOFAFRAMEWORK_LEGACYMODULES}); add_subdirectory(../modules/${module} ${CMAKE_CURRENT_BINARY_DIR}/${module}); endforeach(). set(SOFAFRAMEWORK_SRC src/SofaFramework); set(HEADER_FILES; ${SOFAFRAMEWORK_SRC}/config.h.in; ${SOFAFRAMEWORK_SRC}/initSofaFramework.h; ); set(SOURCE_FILES; ${SOFAFRAMEWORK_SRC}/initSofaFramework.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAFRAMEWORK_MODULES} ${SOFAFRAMEWORK_LEGACYMODULES}). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER SofaFramework). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; # RELOCATABLE ""collections"" # disabled because we need SofaFramework to be directly available; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaFramework/CMakeLists.txt:1415,avail,available,1415,applications/collections/deprecated/SofaFramework/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaFramework/CMakeLists.txt,1,['avail'],['available']
Availability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneral). # Send warnings when deprecated CMake project is activated; option(CMAKE_WARN_DEPRECATED ""Send warning when deprecated projects are found"" ON). # Modules; set(SOFAGENERAL_MODULES; SofaBoundaryCondition; SofaGeneralMeshCollision; SofaGeneralVisual; SofaGraphComponent; SofaGeneralAnimationLoop; SofaGeneralDeformable; SofaGeneralEngine; SofaGeneralExplicitOdeSolver; SofaGeneralImplicitOdeSolver; SofaGeneralLinearSolver; SofaGeneralRigid; SofaGeneralTopology; SofaTopologyMapping; SofaUserInteraction; SofaConstraint; SofaGeneralLoader; ). foreach(module ${SOFAGENERAL_MODULES}); sofa_find_package(${module} QUIET); if(NOT ${module}_FOUND); string(TOUPPER module_${module} MODULE_TO_CHECK); list(APPEND LIST_MODULES_TO_CHECK ${MODULE_TO_CHECK}); endif(); endforeach(); if(LIST_MODULES_TO_CHECK); message(FATAL_ERROR; "" If you still want to use ${PROJECT_NAME}, please enable the following CMake option(s): \n""; "" ${LIST_MODULES_TO_CHECK}""; ); endif(). set(SOFAGENERAL_SRC src/${PROJECT_NAME}). set(HEADER_FILES; ${SOFAGENERAL_SRC}/config.h.in; ${SOFAGENERAL_SRC}/initSofaGeneral.h; ). set(SOURCE_FILES; ${SOFAGENERAL_SRC}/initSofaGeneral.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAGENERAL_MODULES}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; # RELOCATABLE ""collections"" # disabled because we need SofaGeneral to be directly available; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaGeneral/CMakeLists.txt:1642,avail,available,1642,applications/collections/deprecated/SofaGeneral/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaGeneral/CMakeLists.txt,1,['avail'],['available']
Availability,"cmake_minimum_required(VERSION 3.22); project(SofaPardisoSolver). set(SOFAPARDISOSOLVER_MAJOR_VERSION 0); set(SOFAPARDISOSOLVER_MINOR_VERSION 1); set(SOFAPARDISOSOLVER_VERSION ${SOFAPARDISOSOLVER_MAJOR_VERSION}.${SOFAPARDISOSOLVER_MINOR_VERSION}). set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""). find_package(SofaFramework REQUIRED); find_package(SofaBase REQUIRED). link_directories(""${CMAKE_CURRENT_SOURCE_DIR}/extlibs""); set(SOFAPARDISOSOLVER_LINK_DIR ""${CMAKE_CURRENT_SOURCE_DIR}/extlibs""). find_package(GFortran REQUIRED); find_package(BLAS REQUIRED); find_package(LAPACK REQUIRED); find_package(OpenMP REQUIRED). set(LINKER_DEPENDENCIES ${LINKER_DEPENDENCIES} SofaBase SofaGeneral); set(COMPILATION_FLAGS -DSOFA_BUILD_SOFAPARDISOSOLVER ). set ( PARDISO_LIB """" CACHE FILE ""set to Pardiso library downloaded from the web"" ). set(HEADER_FILES; SparsePARDISOSolver.h; config.h; ). set(SOURCE_FILES; SparsePARDISOSolver.cpp; initPardisoSolver.cpp; ). set(LINKER_DEPENDENCIES ${LINKER_DEPENDENCIES} SofaMeshCollision SofaBaseVisual SofaBaseLinearSolver Sofa.Core); set(LINKER_DEPENDENCIES ${LINKER_DEPENDENCIES} ${PARDISO_LIB} gfortran blas lapack gomp). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${SOFAPARDISOSOLVER_VERSION}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""${COMPILATION_FLAGS}""). target_link_libraries(${PROJECT_NAME} ${LINKER_DEPENDENCIES}). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${SOFAPARDISOSOLVER_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaPardisoSolver/CMakeLists.txt:834,down,downloaded,834,applications/plugins/SofaPardisoSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaPardisoSolver/CMakeLists.txt,1,['down'],['downloaded']
Availability,"collision algorithm, etc. ; - the synthesis of complex models from simpler ones using a graph description; - the efficient simulation of the dynamics of interacting objects using abstract equation solvers; - the comparison of various algorithms and mathematical models. SOFA is often presented as a standalone software (runSofa) and a simulation tool, but the project is most importantly a bundle of libraries and thus can be used/integrated in any project. . SOFA provides a plugin system allowing the coupling of additional codes to add functionalities. A lot of plugins are already referenced in the [source code](https://github.com/sofa-framework/sofa/tree/master/applications/plugins), under [sofa-framework organisation](https://github.com/orgs/sofa-framework/repositories?q=plugin&sort=name), and on the [Marketplace](https://www.sofa-framework.org/applications/marketplace/). Feel free to contact us to get your own plugins referenced!. ## How to download and install. Please refer to SOFA download page: https://www.sofa-framework.org/download/. ## How to contribute. The SOFA community will be pleased to welcome you! ; Find all the ways to contribute to the project: https://www.sofa-framework.org/community/get-involved/. Before creating any issue or pull request, please read carefully [our CONTRIBUTING rules](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md). ## Information. ### Authors; See [Authors.txt](https://github.com/sofa-framework/sofa/blob/master/Authors.txt). ### Licenses; SOFA is LGPL, except:; - applications/projects (GPL); - applications/tutorials (GPL); - directories with a license file specifying a different license. LGPL refers to the GNU Lesser General Public License as published by the Free Software; Foundation; either version 2.1 of the License, or (at your option) any later ; version. GPL refers to the GNU General Public License as published by the Free Software Foundation;; either version 2 of the License, or (at your option) any later",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md:2819,down,download,2819,README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md,1,['down'],['download']
Availability,"com/sofa-framework/sofa/pull/3143 ). **Plugins / Projects**; - [ArticulatedSystemMapping] Fixed draw method [#3095]( https://github.com/sofa-framework/sofa/pull/3095 ); - [CollisionOBBCapsule] Fix compat for mappers [#2903]( https://github.com/sofa-framework/sofa/pull/2903 ); - [CollisionOBBCapsule] Fix module name [#3107]( https://github.com/sofa-framework/sofa/pull/3107 ); - [CollisionOBBCapsule] Fix return type to support rigid types [#3075]( https://github.com/sofa-framework/sofa/pull/3075 ); - [SofaCUDA] Add matrix3 transpose method on device [#2675]( https://github.com/sofa-framework/sofa/pull/2675 ); - [SofaCUDA] Fail gracefully if no cuda device found [#3087]( https://github.com/sofa-framework/sofa/pull/3087 ); - [SofaCUDA] Fix compilation for SOFA_GPU_CUDA_DOUBLE [#2863]( https://github.com/sofa-framework/sofa/pull/2863 ); - [SofaCUDA] Fix some namespace, headers includes and decl exports [#3003]( https://github.com/sofa-framework/sofa/pull/3003 ); - [SofaCUDA] Fix symbol definition at run time and compilation error [#2634]( https://github.com/sofa-framework/sofa/pull/2634 ); - [SofaCUDA] Ignore CudaTLED-related scene on the CI [#2893]( https://github.com/sofa-framework/sofa/pull/2893 ); - [SofaCUDA] Restore CudaHexahedronFEMForceField [#2535]( https://github.com/sofa-framework/sofa/pull/2535 ); - [SofaCUDA] Rework and move benchmark scenes for HexahedronFEMForceField and TetrahedronFEMForceField [#2561]( https://github.com/sofa-framework/sofa/pull/2561 ); - [SofaCUDA] fix HexahedronFEMForceField double compilation [#3081]( https://github.com/sofa-framework/sofa/pull/3081 ); - [SofaCUDA] update .scene-tests files to fix tests on dashboard [#2616]( https://github.com/sofa-framework/sofa/pull/2616 ); - [SofaCUDA] FIX linking error : needed the code of the destructor [#2708]( https://github.com/sofa-framework/sofa/pull/2708 ); - [SofaCUDA] Forward declaration in wrong namespace [#2923]( https://github.com/sofa-framework/sofa/pull/2923 ); - [SofaMatrix] Move CI",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:115694,error,error,115694,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,com/sofa-framework/sofa/pull/3931); - [all] Add DeprecatedData and RemovedData [#3934](https://github.com/sofa-framework/sofa/pull/3934); - [Helper] add the experimental filesystem library for gcc-8 compilation [#3944](https://github.com/sofa-framework/sofa/pull/3944); - [FEM.Elastic] Implement buildStiffnessMatrix in HexahedralFEMForceField [#3969](https://github.com/sofa-framework/sofa/pull/3969); - [Spring] Implement buildStiffnessMatrix for SpringForceField [#3970](https://github.com/sofa-framework/sofa/pull/3970); - [MechanicalLoad] Implement buildStiffnessMatrix for LinearForceField [#3973](https://github.com/sofa-framework/sofa/pull/3973); - [Collision.Response.Contact] Implement buildStiffnessMatrix in PenalityContactForceField [#3974](https://github.com/sofa-framework/sofa/pull/3974); - [FEM.Elastic] Implement buildStiffnessMatrix for TetrahedralCorotationalFEMForceField [#3981](https://github.com/sofa-framework/sofa/pull/3981); - [LinearSystem.Direct] More details in the error message [#3985](https://github.com/sofa-framework/sofa/pull/3985); - [FEM.Linear] Implement buildStiffnessMatrix and addKToMatrix for TriangularFEMForceField [#3991](https://github.com/sofa-framework/sofa/pull/3991); - [Spring] Implement buildStiffnessMatrix for AngularSpringForceField [#3993](https://github.com/sofa-framework/sofa/pull/3993); - [MechanicalLoad] Implement buildStiffnessMatrix for ConicalForceField [#3997](https://github.com/sofa-framework/sofa/pull/3997); - [MechanicalLoad] Restore computation of derivatives in DiagonalVelocityDampingForceField [#3999](https://github.com/sofa-framework/sofa/pull/3999); - [SofaCUDA] Implement buildStiffnessMatrix and buildDampingMatrix in TLED [#4000](https://github.com/sofa-framework/sofa/pull/4000); - [MechanicalLoad] Implement buildStiffnessMatrix in EdgePressureForceField [#4004](https://github.com/sofa-framework/sofa/pull/4004); - [MechanicalLoad] Implement buildStiffnessMatrix in EllipsoidForceField [#4005](https://github.com/sof,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:27219,error,error,27219,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"compiler [#642]( https://github.com/sofa-framework/sofa/pull/642 ); - **[SofaKernel]** Fix: correct path writing in sofa_set_python_directory macro [#763]( https://github.com/sofa-framework/sofa/pull/763 ); - **[SofaKernel]** Check if Quaternion has norm 1 [#790]( https://github.com/sofa-framework/sofa/pull/790 ); - [SofaPreconditioner] FIX ShewchukPCGLinearSolver [#737]( https://github.com/sofa-framework/sofa/pull/737 ). **Plugins / Projects**; - [CGALPlugin] fix compilation [#783]( https://github.com/sofa-framework/sofa/pull/783 ); - [CGALPlugin] Fix compilation for cgal 4.12+ (cgal::polyhedron_3 is now forward declared) [#812]( https://github.com/sofa-framework/sofa/pull/812 ); - [CImgPlugin] CMake/Mac: lower priority for XCode's libpng [#720]( https://github.com/sofa-framework/sofa/pull/720 ); - [Geomagic] Fix broken behavior [#761]( https://github.com/sofa-framework/sofa/pull/761 ); - [Geomagic] Fix scenes [#858]( https://github.com/sofa-framework/sofa/pull/858 ); - [Multithreading] FIX compiling error on Mac [#727]( https://github.com/sofa-framework/sofa/pull/727 ); - [MultiThreading] Fix Livers scenes crash [#792]( https://github.com/sofa-framework/sofa/pull/792 ); - [runSofa] ADD Modules to plugin_list.conf.default [#753]( https://github.com/sofa-framework/sofa/pull/753 ); - [SofaPython][examples] FIX: Fixing the scene... and the typo in the name [#765]( https://github.com/sofa-framework/sofa/pull/765 ); - [Tutorials] FIX oneTetrahedron and chainHybrid [#773]( https://github.com/sofa-framework/sofa/pull/773 ). **Examples / Scenes**; - [examples] Fix TopologySurfaceDifferentMesh.scn [#716]( https://github.com/sofa-framework/sofa/pull/716 ); - [examples] Fix the examples missing a <RequiredPlugin name=""SofaSparseSolver""/> [#748]( https://github.com/sofa-framework/sofa/pull/748 ); - [examples] Fix scenes having issue with CollisionGroup [#821]( https://github.com/sofa-framework/sofa/pull/821 ). ### Cleanings. **Modules**; - [All] Fix some recent compilation warn",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:286682,error,error,286682,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"complex models from simpler ones using a graph description; - the efficient simulation of the dynamics of interacting objects using abstract equation solvers; - the comparison of various algorithms and mathematical models. SOFA is often presented as a standalone software (runSofa) and a simulation tool, but the project is most importantly a bundle of libraries and thus can be used/integrated in any project. . SOFA provides a plugin system allowing the coupling of additional codes to add functionalities. A lot of plugins are already referenced in the [source code](https://github.com/sofa-framework/sofa/tree/master/applications/plugins), under [sofa-framework organisation](https://github.com/orgs/sofa-framework/repositories?q=plugin&sort=name), and on the [Marketplace](https://www.sofa-framework.org/applications/marketplace/). Feel free to contact us to get your own plugins referenced!. ## How to download and install. Please refer to SOFA download page: https://www.sofa-framework.org/download/. ## How to contribute. The SOFA community will be pleased to welcome you! ; Find all the ways to contribute to the project: https://www.sofa-framework.org/community/get-involved/. Before creating any issue or pull request, please read carefully [our CONTRIBUTING rules](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md). ## Information. ### Authors; See [Authors.txt](https://github.com/sofa-framework/sofa/blob/master/Authors.txt). ### Licenses; SOFA is LGPL, except:; - applications/projects (GPL); - applications/tutorials (GPL); - directories with a license file specifying a different license. LGPL refers to the GNU Lesser General Public License as published by the Free Software; Foundation; either version 2.1 of the License, or (at your option) any later ; version. GPL refers to the GNU General Public License as published by the Free Software Foundation;; either version 2 of the License, or (at your option) any later version. ### Contact; contact@sofa-framework.",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md:2865,down,download,2865,README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md,1,['down'],['download']
Availability,"dashboard servers); # that is using, by default at that time, a libstdc++ that did not fully implement c++11; if(APPLE AND ${CMAKE_SYSTEM_NAME} MATCHES ""Darwin"" AND CMAKE_SYSTEM_VERSION VERSION_LESS ""10.9"" AND ${CMAKE_CXX_COMPILER_ID} MATCHES ""Clang"" ); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-stdlib=libc++""); endif(). if(CMAKE_SYSTEM_NAME STREQUAL Linux AND NOT CMAKE_BUILD_TYPE MATCHES ""Debug""); target_compile_definitions(${PROJECT_NAME} PUBLIC ""NDEBUG""); # On Windows and MacOS, NDEBUG and _DEBUG are automatically; # set in the default c/cxx flags of the right configurations; endif(); if(MSVC); # Increase Number of Sections in .Obj file; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/bigobj""); if(SOFA_VECTORIZE); message(""SOFA_VECTORIZE option is deprecated and has been split between SOFA_ENABLE_SIMD and SOFA_ENABLE_FAST_MATH. These 2 options will be enabled.""); set(SOFA_ENABLE_SIMD ON); set(SOFA_ENABLE_FAST_MATH ON); endif(); # SIMD flags; if(SOFA_ENABLE_SIMD); include(find_avx); MSVC_CHECK_FOR_AVX() # search for availability of AVX2 (otherwise set to AVX); if (HAVE_AVX2_EXTENSIONS); message(""Your CPU supports AVX2 SIMD. Using flags: ${AVX_FLAGS}""); elseif(HAVE_AVX_EXTENSIONS); message(""Your CPU supports only AVX SIMD. Using flags: ${AVX_FLAGS}""); else(); message(""Your CPU does not support AVX SIMD."") # SSE2 is the default when x64 is set; endif(); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""${AVX_FLAGS}""); endif(); if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/fp:fast""); endif(); endif(). # Use Release flags for MinSizeRel and RelWithDebInfo build types:; set_target_properties(${PROJECT_NAME} PROPERTIES; MAP_IMPORTED_CONFIG_MINSIZEREL Release; MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release; ); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:RELEASE>:${SOFACONFIG_COMPILE_OPTIONS_RELEASE}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:DEBUG>:${SOFACONFIG_COMPILE_OPTIONS_DEBUG}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""${SOF",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:12382,avail,availability,12382,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['avail'],['availability']
Availability,"dels are typically defined as a whole and it is not easy to split; them. To overcome this limitation, we define the whole FE model as a common; child of the independent and the mapped particles, using a; MultiMapping, as illustrated in the next figure. The complete FEM,; including elements and masses, is defined at the bottom, while the; independent DOFs are the independent particles and the frames near the; top. The SubsetMultiMapping simply copies values from and to the two; subsets of particles. This way, there is no need to constrain FE vertices on the rigid; objects. They are perfectly attached using a mapping, without; introducing stiffness or hard constraints. The only additional cost is; due to the copies of state vectors through the SubsetMultiMapping. The kinematic hierarchy used to; create the composite object. The implementation in SOFA requires to address some issues:. Multimappings (mappings with several parents) can not generally; match tree structures. A directed acyclic graph (DAG) is required,; therefore the sofa::simulation::Simulation must be an instance of; DAGSimulation. This requires to uncheck the following line in you; sofa-local.prf file:    DEFINES += SOFA_HAVE_DAG; DAG structures can not currently be parsed from xml files. Such a; simulation must be created in C++, as given in this directory, or in; Python (no example available yet). The initialization of the scene is made bottom-up, because the; FEM is given, and the mapped and independent particles are created; based on it. This is opposite to the standard, top-down mapping; initialization of SOFA. Therefore, the mapped and independent particles; must be carefully set before the standard initialization, so that their; top-down propagation to the FE model does not change the position of; the vertices. An example is given in compositeObject.cpp.; To compile it, you need to; activate the tutorials by uncommenting the following line in your; sofa-local.prf: DEFINES += SOFA_HAVE_TUTORIALS . ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/tutorials/compositeObject/doc.html:2882,avail,available,2882,applications/tutorials/compositeObject/doc.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/tutorials/compositeObject/doc.html,3,"['avail', 'down']","['available', 'down']"
Availability,der] ADD frameskip option to headless recorder [#615]( https://github.com/sofa-framework/sofa/pull/615 ); - [HeadlessRecorder] Remove avcodec dependency in HeadlessRecorder.h [#752]( https://github.com/sofa-framework/sofa/pull/752 ); - [runSofa] Save&restore the scenegraph state when live-code & add info panel [#657]( https://github.com/sofa-framework/sofa/pull/657 ); - [SofaPython] PythonScriptDataEngine (PSDE) [#583]( https://github.com/sofa-framework/sofa/pull/583 ); - [SofaPython] Small fix & new features. [#656]( https://github.com/sofa-framework/sofa/pull/656 ). **Tools**; - [tools] FIX sofa-launcher stdout [#592]( https://github.com/sofa-framework/sofa/pull/592 ). ### Bug Fixes. **Modules**; - [All] FIX VS2017 build (Windows) [#630]( https://github.com/sofa-framework/sofa/pull/630 ); - [All] Fix computeBBox() [#634]( https://github.com/sofa-framework/sofa/pull/634 ); - [All] FIX warnings [#584]( https://github.com/sofa-framework/sofa/pull/584 ); - [All] Various small changes in error messages & bugfix from defrost branches [#660]( https://github.com/sofa-framework/sofa/pull/660 ); - [SofaConstraint] FIX: Moving semicolon under preprocessor define [#680]( https://github.com/sofa-framework/sofa/pull/680 ); - **[SofaEngine]** FIX Bug in BoxROI that is not properly initialized [#627]( https://github.com/sofa-framework/sofa/pull/627 ); - **[SofaFramework]** Fix plugin list configuration [#645]( https://github.com/sofa-framework/sofa/pull/645 ); - [SofaGraphComponent] FIX SceneChecker_test + ADD alias test [#711]( https://github.com/sofa-framework/sofa/pull/711 ); - [SofaGraphComponent] FIX SceneCheck build on MacOS [#719]( https://github.com/sofa-framework/sofa/pull/719 ); - [SofaGuiQt] FIX missing resources [#758]( https://github.com/sofa-framework/sofa/pull/758 ); - [SofaGeneralEngine] FIX disabled tests [#675]( https://github.com/sofa-framework/sofa/pull/675 ); - **[SofaHelper]** More robust method to test end of string [#617]( https://github.com/sofa-framework,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:296207,error,error,296207,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"e and; of promoting the sharing and reuse of software generally. 			 NO WARRANTY. 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY; FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN; OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES; PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED; OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF; MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS; TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE; PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,; REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING; WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR; REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,; INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING; OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED; TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY; YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER; PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE; POSSIBILITY OF SUCH DAMAGES. 		 END OF TERMS AND CONDITIONS. 	 How to Apply These Terms to Your New Programs. If you develop a new program, and you want it to be of the greatest; possible use to the public, the best way to achieve this is to make it; free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest; to attach them to the start of each source file to most effectively; convey the exclusion of warranty; and each file should have at least; the ""copyright"" line and a pointer to where the full notice is found. <one line to give the program's name and a brief idea of what it does.>; Copyright (C) <year> <name of author>. Th",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:15853,FAILURE,FAILURE,15853,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['FAILURE'],['FAILURE']
Availability,"e representation, solvers, constraints, collision algorithm, etc. ; - the synthesis of complex models from simpler ones using a graph description; - the efficient simulation of the dynamics of interacting objects using abstract equation solvers; - the comparison of various algorithms and mathematical models. SOFA is often presented as a standalone software (runSofa) and a simulation tool, but the project is most importantly a bundle of libraries and thus can be used/integrated in any project. . SOFA provides a plugin system allowing the coupling of additional codes to add functionalities. A lot of plugins are already referenced in the [source code](https://github.com/sofa-framework/sofa/tree/master/applications/plugins), under [sofa-framework organisation](https://github.com/orgs/sofa-framework/repositories?q=plugin&sort=name), and on the [Marketplace](https://www.sofa-framework.org/applications/marketplace/). Feel free to contact us to get your own plugins referenced!. ## How to download and install. Please refer to SOFA download page: https://www.sofa-framework.org/download/. ## How to contribute. The SOFA community will be pleased to welcome you! ; Find all the ways to contribute to the project: https://www.sofa-framework.org/community/get-involved/. Before creating any issue or pull request, please read carefully [our CONTRIBUTING rules](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md). ## Information. ### Authors; See [Authors.txt](https://github.com/sofa-framework/sofa/blob/master/Authors.txt). ### Licenses; SOFA is LGPL, except:; - applications/projects (GPL); - applications/tutorials (GPL); - directories with a license file specifying a different license. LGPL refers to the GNU Lesser General Public License as published by the Free Software; Foundation; either version 2.1 of the License, or (at your option) any later ; version. GPL refers to the GNU General Public License as published by the Free Software Foundation;; either version 2 of t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md:2776,down,download,2776,README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md,1,['down'],['download']
Availability,"eField and using it in penalty contact response; - add of two file from the SohusimDev plugin. - [image]; - API: Sampler.addMechanicalObject() more versatile; - API: refactor python API; - API: add addClosingVisual(); - add function in python API to retrieve perspective property; - MeshToImageEngine: move getValue out of for loops; - add a python ImagePlaneController; - Data<Image<T>> are now specifically bound in python; - remove pthread and X11 dependencies; - add metaimage tags that may be used to define orientation; - add python function to retrieve image type; - simpler imagePlane python controller; - add a createTransferFunction method; - improved cutplane texture resolution; - half perspective, half orthographic image transforms; - add imageCoordValuesFromPositions engine. ### Bug Fixes. - [PluginManager] crashed when a plugin was removed; - [SofaCUDA] fix the compilation using SofaCUDA on Windows; - unstable behavior of masks - USE-MASK variable added; - fix DAGNode traversal when a visitor is run from a node with a not up-to-date descendancy; - fix flaws in glText (memory leak and an other bug); - EigenBaseSparseMatrix: fix parallel matrix-vector product; - XML export. - Minor fix; - Sofa helper: leak when drawing 3d text; - compilation with SofaDumpVisitor flag enabled; - compilation of BezierTriangleSetGeometryAlgorithms (color changed from Vec3f to Vec4f); - runSofa: viewport aspect issue and loss of interaction in QtGLViewer; - BoxROI: visual bounding box; - SofaMiscForceField on Windows; - VisualVisitor traversal order; - SphereROI: indices out when multiple spheres; - bug in RestShapeSpringsForceField; - Remove VariationalSymplecticSolver.h from the package in SofaCommon (to fix history); - some static analysis warnings and errors (including memory leaks); - MeshROI: remove unnecessary sqrt; - SphereROI: set centers' size to radii if only one radius is provided; - ARTrack plugin compilation; - bug in MeshNewProximityIntersection involving false positiv",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:356049,mask,masks,356049,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['MASK', 'mask']","['MASK', 'masks']"
Availability,e]** Broken URL [#2011]( https://github.com/sofa-framework/sofa/pull/2011 ). **Plugins / Projects**; - [Geomagic] Fix Geomagic plugin compilation [#2033]( https://github.com/sofa-framework/sofa/pull/2033 ). ____________________________________________________________. ## [v20.12.02]( https://github.com/sofa-framework/sofa/tree/v20.12.02 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.01...v20.12.02 ). ### Bug Fixes; **Architecture**; - [CMake] FIX resources and translations install on Windows [#1949]( https://github.com/sofa-framework/sofa/pull/1949 ). **Modules**; - [SofaGeneralExplicitOdeSolver] Fix typo in CentralDifferenceSolver description [#1894]( https://github.com/sofa-framework/sofa/pull/1894 ); - [SofaGuiQt] Fix RealGUI: QDesktopWidget header missing for Qt < 5.11 [#1904]( https://github.com/sofa-framework/sofa/pull/1904 ); - [SofaGuiQt] FIX segfault due to qFatal in GenGraphForm [#1948]( https://github.com/sofa-framework/sofa/pull/1948 ); - **[SofaHelper]** Fix out of bounds error [#1868]( https://github.com/sofa-framework/sofa/pull/1868 ). **Plugins / Projects**; - [SofaCUDA] change the setTopology method signature [#1843]( https://github.com/sofa-framework/sofa/pull/1843 ). **Examples / Scenes**; - [examples] Add missing RequiredPlugin [#1895]( https://github.com/sofa-framework/sofa/pull/1895 ). ____________________________________________________________. ## [v20.12.01]( https://github.com/sofa-framework/sofa/tree/v20.12.01 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.00...v20.12.01 ). ### Improvements; **Modules**; - [SofaGui] Improve background v20.12 [#1758]( https://github.com/sofa-framework/sofa/pull/1758 ); - **[SofaHelper]** ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). **Plugins / Projects**; - [SofaPython] ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). ### Bug Fixes; *,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:210042,error,error,210042,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"edContact [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] EdgeSetController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] GraspingManager [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] InterpolationController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] MechanicalStateControllerOmni [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] NodeToggleController [#457]( https://github.com/sofa-framework/sofa/pull/457 ). ### Breaking. **Modules**; - [SofaConstraint] Update FreeMotionAnimationLoop so that it can compute a linearised version of the constraint force. [#459]( https://github.com/sofa-framework/sofa/pull/459 ); - **[SofaCore]** Update FreeMotionAnimationLoop so that it can compute a linearised version of the constraint force. [#459]( https://github.com/sofa-framework/sofa/pull/459 ); - **[SofaHelper]** Unifying the way we report file related errors [#669]( https://github.com/sofa-framework/sofa/pull/669 ). ### Improvements. **Architecture**; - [CMake] ADD external projects handling [#649]( https://github.com/sofa-framework/sofa/pull/649 ); - [CMake] ADD the CMAKE_WARN_DEPRECATED option in SOFA [#662]( https://github.com/sofa-framework/sofa/pull/662 ); - [CMake] Improve SOFA installation and packaging [#635]( https://github.com/sofa-framework/sofa/pull/635 ); - [CMake] Cleans for packaging [#789]( https://github.com/sofa-framework/sofa/pull/789 ). **Modules**; - [All] Refactoring in Camera, BackgroundSetting and Light [#676]( https://github.com/sofa-framework/sofa/pull/676 ); - **[SofaBaseLinearSolver]** Improve warning emission for CG [#658]( https://github.com/sofa-framework/sofa/pull/658 ); - **[SofaBaseLinearSolver]** Add ability to activate printing of debug information at runtime [#667]( https://github.com/sofa-framework/sofa/pull/667 ); - [SofaGeneralImplicitOdeSolver] FIX data field n",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:293593,error,errors,293593,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['errors']
Availability,eedup ReadAccessor conversion operator [#2583]( https://github.com/sofa-framework/sofa/pull/2583 ); - [SofaMiscFEM] Fix TriangleFEMForceField and TriangularFEMForceField to have the same behavior [#2275]( https://github.com/sofa-framework/sofa/pull/2275 ); - [SofaMiscFem] FIX missing Strain Displacement matrix update in TriangularFEMForceField [#2706]( https://github.com/sofa-framework/sofa/pull/2706 ); - [SofaMiscForceField] Fix error while trying to compile a plugin depending on SofaGuiQt [#2707]( https://github.com/sofa-framework/sofa/pull/2707 ); - [SofaMiscForceField][SofaBaseMechanics] Add compile-time conditions to avoid compiling unrealistic cases [#2514]( https://github.com/sofa-framework/sofa/pull/2514 ); - [SofaMiscSolver] Accumulate mapped forces in NewmarkImplicitSolver [#2578]( https://github.com/sofa-framework/sofa/pull/2578 ); - [SofaSparseSolver] Add cmake configuration for Threads [#2739]( https://github.com/sofa-framework/sofa/pull/2739 ); - [SofaSparseSolver] Fix compilation error due to namespace change [#2543]( https://github.com/sofa-framework/sofa/pull/2543 ); - [SofaUserInteraction] Fix compat alias defined in the same scope [#3032]( https://github.com/sofa-framework/sofa/pull/3032 ); - [SolidMechanics] TopologySubsetIndices for RestShapeSpringsForceField [#3037]( https://github.com/sofa-framework/sofa/pull/3037 ); - [StateContainer] Fix VecId names for != V_COORD [#2872]( https://github.com/sofa-framework/sofa/pull/2872 ); - [Topology.Container] Fix save/restoreLastState in draw method were missing [#3143]( https://github.com/sofa-framework/sofa/pull/3143 ). **Plugins / Projects**; - [ArticulatedSystemMapping] Fixed draw method [#3095]( https://github.com/sofa-framework/sofa/pull/3095 ); - [CollisionOBBCapsule] Fix compat for mappers [#2903]( https://github.com/sofa-framework/sofa/pull/2903 ); - [CollisionOBBCapsule] Fix module name [#3107]( https://github.com/sofa-framework/sofa/pull/3107 ); - [CollisionOBBCapsule] Fix return type to suppo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:114095,error,error,114095,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"es the core profile context [#526]( https://github.com/sofa-framework/sofa/pull/526 ); - [SofaImplicitField]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SofaPhysicsAPI]; - FIX: compilation due to Sofa main API changes [#549]( https://github.com/sofa-framework/sofa/pull/549 ); - [SofaPython]; - Fix python live coding that is broken [#414]( https://github.com/sofa-framework/sofa/pull/414 ); - FIX crash in python script when visualizing advanced timer output [#458]( https://github.com/sofa-framework/sofa/pull/458 ); - FIX error in script for plotting advancedTimer output [#519]( https://github.com/sofa-framework/sofa/pull/519 ); - Fix python unicode data [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - [SofaSPHFluid]; - Fix invalid plugin initialization. [#467]( https://github.com/sofa-framework/sofa/pull/467 ); - [SofaVolumetricData]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SceneCreator]; - FIX build error with AppleClang 6.0.0.6000051 [#483]( https://github.com/sofa-framework/sofa/pull/483 ); - [THMPGSpatialHashing]; - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ). **Scenes**; - Fix scenes [#310]( https://github.com/sofa-framework/sofa/pull/310 ); - Fix scenes with bad RegularGrid position relative to 270 [#324]( https://github.com/sofa-framework/sofa/pull/324 ); - Fix scenes errors and crashes [#505]( https://github.com/sofa-framework/sofa/pull/505 ); - FIX all scenes failures 17.12 [#565]( https://github.com/sofa-framework/sofa/pull/565 ). ### Cleanings. **Kernel modules**; - [All]; - replace a bunch of std::cerr, std::cout, prinf to use msg_* instead [#339]( https://github.com/sofa-framework/sofa/pull/339 ); - More std::cout to msg_* cleaning [#370]( https://github.com/sofa-framework/sofa/pull/370 ); - FIX removed compilation warnings [#386]( https://github.com/sofa-framework/sofa/pull/386 ); - Clean BaseLoader & Remo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:320433,error,error,320433,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,eshold [#556]( https://github.com/sofa-framework/sofa/pull/556 ); - [SofaBaseMechanics]; - Make sure the mechanical object's state vectors size matches their respective argument size [#406]( https://github.com/sofa-framework/sofa/pull/406 ); - [SofaBaseTopology]; - FIX wrong clean in PointSetTopologyModifier [#380]( https://github.com/sofa-framework/sofa/pull/380 ); - [SofaComponentCommon]; - Always register all its components in the object factory [#488]( https://github.com/sofa-framework/sofa/pull/488 ); - [SofaCore]; - FIX CreateString problem on root node [#377]( https://github.com/sofa-framework/sofa/pull/377 ); - FIX don't inline exported functions [#449]( https://github.com/sofa-framework/sofa/pull/449 ); - [SofaDefaultType]; - FIX Mat::transpose() and Mat::invert() [#317]( https://github.com/sofa-framework/sofa/pull/317 ); - Correct CMake include_directories directive for SofaDefaultType target's [#403]( https://github.com/sofa-framework/sofa/pull/403 ); - Fix compilation errors when working with transform class [#506]( https://github.com/sofa-framework/sofa/pull/506 ); - [SofaHelper]; - Fix CUDA compilation with pointer of data [#320]( https://github.com/sofa-framework/sofa/pull/320 ); - FIX livecoding of shaders [#415]( https://github.com/sofa-framework/sofa/pull/415 ); - fixing Polynomial_LD [#442]( https://github.com/sofa-framework/sofa/pull/442 ); - Replacing afficheResult with resultToString [#473]( https://github.com/sofa-framework/sofa/pull/473 ); - FIX Remove override warnings [#520]( https://github.com/sofa-framework/sofa/pull/520 ); - Fix memory leak while capturing screenshot [#533]( https://github.com/sofa-framework/sofa/pull/533 ); - FIX Windows relative path from runSofa [#568]( https://github.com/sofa-framework/sofa/pull/568 ); - [SofaRigid]; - RigidMapping: fixed setRepartition backward compatibility [#441]( https://github.com/sofa-framework/sofa/pull/441 ); - [SofaSimulationCommon]; - Fix a minor regression introduced during the post-sprint,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:313053,error,errors,313053,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['errors']
Availability,ework/sofa/pull/298 ); - [SofaBaseMechanics]; - MechanicalObject: cleaning: symbols & include [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - [SofaPhysicsAPI]; - fix compilation of the project [#167]( https://github.com/sofa-framework/sofa/pull/167 ); - [SofaUserInteraction]; - MouseInteractor: FIX the mouse picking on Mechanical Object [#282]( https://github.com/sofa-framework/sofa/pull/282 ). **Plugins / Projects**; - [image]; - Fixes #135 : Check that SofaPython is found before including python directory [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - Fixes #136 : Use the cmake install DIRECTORY instead of FILES [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - [LeapMotion]; - FIX compilation for LeapMotion plugin due to moved files [#296]( https://github.com/sofa-framework/sofa/pull/296 ); - [runSofa]; - Fix minor consistency issues related to the readOnly flag [#115]( https://github.com/sofa-framework/sofa/pull/115 ); - [SofaTest]; - repair the minor API breaks introduced by PR #213 [#269]( https://github.com/sofa-framework/sofa/pull/269 ). **Scenes**; - Components/engine/GenerateGrid.scn was fixed [#303]( https://github.com/sofa-framework/sofa/pull/303 ). ### Cleanings. **Modules**; - [All]; - clean the consistency issues related to the readOnly flag [#115]( https://github.com/sofa-framework/sofa/pull/115 ); - Clean licenses [#139]( https://github.com/sofa-framework/sofa/pull/139 ); - [SofaKernel]; - clean DefaultPipeline.cpp/h (API BREAKING); - clean the attributes names in BoxROI (API BREAKING); - TetrahedronFEMForceField clean code [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - GridTopology : clean the code & factor the constructor [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - RegularGridTopology : clean the constructor's code & remove NDEBUG code [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - MechanicalObject : removal of code specific to the grid [#270]( https://github.com/sofa,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:334466,repair,repair,334466,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['repair'],['repair']
Availability,fa-framework/sofa/pull/1387 ); - **[SofaKernel]** Set default visibility to SOFA_EXPORT_DYNAMIC_LIBRARY [#1410]( https://github.com/sofa-framework/sofa/pull/1410 ); - [SofaMiscTopology] Fix bug in TopologicalChangeProcessor [#1247]( https://github.com/sofa-framework/sofa/pull/1247 ); - **[SofaSimpleFem]** Small Fix [#1403]( https://github.com/sofa-framework/sofa/pull/1403 ); - **[SofaSimulationCore]** FIX resizing of bboxes in UpdateBoundingBoxVisitor [#1268]( https://github.com/sofa-framework/sofa/pull/1268 ); - [SofaTopologyMapping] Fix Tetra2TriangleTopologicalMapping [#1319]( https://github.com/sofa-framework/sofa/pull/1319 ). **Plugins / Projects**; - [Geomagic] Fix several wrong behaviors in driver code [#1378]( https://github.com/sofa-framework/sofa/pull/1378 ); - [MeshSTEPLoader] FIX OCC version check [#1312]( https://github.com/sofa-framework/sofa/pull/1312 ); - [MeshSTEPLoader] FIX build with OCC >= 7.4 [#1310]( https://github.com/sofa-framework/sofa/pull/1310 ); - [Modeler] FIX link error on Windows [#1282]( https://github.com/sofa-framework/sofa/pull/1282 ); - [SofaMiscCollision] Fix topological changes in TetrahedronCollisionModel [#1354]( https://github.com/sofa-framework/sofa/pull/1354 ); - [SofaSphFluid] Fix broken behavior for ParticleSink and ParticleSource [#1278]( https://github.com/sofa-framework/sofa/pull/1278 ); - [SofaSphFluid] FIX .scene-tests [#1317]( https://github.com/sofa-framework/sofa/pull/1317 ); - [SofaOpenCL] Make it work with 20.06 [#1361]( https://github.com/sofa-framework/sofa/pull/1361 ); - [SofaPython] Restrict the plugin and its dependers to C++11 [#1284]( https://github.com/sofa-framework/sofa/pull/1284 ). **Examples / Scenes**; - [examples] Fix SurfacePressureForceField example [#1273]( https://github.com/sofa-framework/sofa/pull/1273 ); - [examples] Fix caduceus [#1392]( https://github.com/sofa-framework/sofa/pull/1392 ); - [examples] Update the scene StandardTetrahedralFEMForceField.scn [#1064]( https://github.com/sofa-fram,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:237478,error,error,237478,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"fa_add_subdirectory(plugin Sensable Sensable); sofa_add_subdirectory(plugin SensableEmulation SensableEmulation); sofa_add_subdirectory(plugin SofaHAPI SofaHAPI); sofa_add_subdirectory(plugin SofaCarving SofaCarving); sofa_add_subdirectory(plugin LeapMotion LeapMotion); sofa_add_subdirectory(plugin Geomagic Geomagic); sofa_add_subdirectory(plugin SofaAssimp SofaAssimp) # ColladaSceneLoader Depends on Flexible and image; sofa_add_subdirectory(plugin SofaMatrix SofaMatrix ON) # Depends on image, CImgPlugin; sofa_add_subdirectory(plugin BeamAdapter BeamAdapter EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin STLIB STLIB EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SoftRobots SoftRobots EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CollisionAlgorithm CollisionAlgorithm EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ConstraintGeometry ConstraintGeometry EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ShapeMatchingPlugin ShapeMatchingPlugin EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CSparseSolvers CSparseSolvers EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ModelOrderReduction ModelOrderReduction EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin Sofa.Metis Sofa.Metis EXTERNAL GIT_REF v24.06). sofa_add_subdirectory(plugin PSL PSL EXTERNAL GIT_REF v24.06). if((${CMAKE_CXX_COMPILER_ID} STREQUAL ""GNU"") AND (${CMAKE_SYSTEM_NAME} MATCHES ""Linux"")); sofa_add_subdirectory(plugin SofaPardisoSolver SofaPardisoSolver) # SofaPardisoSolver is only available under linux with gcc; endif(). sofa_add_subdirectory(plugin SofaCUDA SofaCUDA). sofa_find_package(Sofa.GL QUIET); if(Sofa.GL_FOUND); sofa_add_subdirectory(plugin SofaSimpleGUI SofaSimpleGUI) # SofaSimpleGUI plugin can't work without OPENGL; sofa_add_subdirectory(plugin VolumetricRendering VolumetricRendering) # VolumetricRendering plugin can't work without OPENGL; else(); message(""Sofa.GL not found; disabling SofaSimpleGUI and VolumetricRendering plugins""); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:3813,avail,available,3813,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,1,['avail'],['available']
Availability,gonalMass_test [#832]( https://github.com/sofa-framework/sofa/pull/832 ); - **[SofaBaseTopology]** Fix SparseGridTopology initialization with an input mesh [#670]( https://github.com/sofa-framework/sofa/pull/670 ); - [SofaBoundaryCondition] FIX AffineMovementConstraint orientation issue [#824]( https://github.com/sofa-framework/sofa/pull/824 ); - [SofaCarving] Modify the CMake config file to allow other plugins link to Sofa Carving [#781]( https://github.com/sofa-framework/sofa/pull/781 ); - **[SofaCore]** FIX: enable ExtVecXf mappings with double floating type [#827]( https://github.com/sofa-framework/sofa/pull/827 ); - [SofaDeformable] Fix MeshSpring ForceField and Loader [#815]( https://github.com/sofa-framework/sofa/pull/815 ); - **[SofaFramework]** Keep SOFA_EXTERN_TEMPLATE macro definition [#870]( https://github.com/sofa-framework/sofa/pull/870 ); - [SofaGui] ADD option to enable VSync (default: OFF) [#722]( https://github.com/sofa-framework/sofa/pull/722 ); - [SofaOpenglVisual] Rollback removal of Ogl components [#905]( https://github.com/sofa-framework/sofa/pull/905 ); - **[SofaKernel]** FIX bug in toEulerVector [#399]( https://github.com/sofa-framework/sofa/pull/399 ); - **[SofaKernel]** FIX segfault created by static initialisers on OSX/clang compiler [#642]( https://github.com/sofa-framework/sofa/pull/642 ); - **[SofaKernel]** Fix: correct path writing in sofa_set_python_directory macro [#763]( https://github.com/sofa-framework/sofa/pull/763 ); - **[SofaKernel]** Check if Quaternion has norm 1 [#790]( https://github.com/sofa-framework/sofa/pull/790 ); - [SofaPreconditioner] FIX ShewchukPCGLinearSolver [#737]( https://github.com/sofa-framework/sofa/pull/737 ). **Plugins / Projects**; - [CGALPlugin] fix compilation [#783]( https://github.com/sofa-framework/sofa/pull/783 ); - [CGALPlugin] Fix compilation for cgal 4.12+ (cgal::polyhedron_3 is now forward declared) [#812]( https://github.com/sofa-framework/sofa/pull/812 ); - [CImgPlugin] CMake/Mac: lower priori,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:285392,Rollback,Rollback,285392,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Rollback'],['Rollback']
Availability,"grams whose distribution conditions are incompatible with these,; write to the author to ask for permission. For software which is; copyrighted by the Free Software Foundation, write to the Free; Software Foundation; we sometimes make exceptions for this. Our; decision will be guided by the two goals of preserving the free status; of all derivatives of our free software and of promoting the sharing; and reuse of software generally. NO WARRANTY. 15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO; WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.; EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR; OTHER PARTIES PROVIDE THE LIBRARY ""AS IS"" WITHOUT WARRANTY OF ANY; KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR; PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE; LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME; THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN; WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY; AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU; FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR; CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE; LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING; RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A; FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF; SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH; DAMAGES. END OF TERMS AND CONDITIONS. How to Apply These Terms to Your New Libraries. If you develop a new library, and you want it to be of the greatest; possible use to the public, we recommend making it free software that; everyone can redistribute and change. You can do so by permitting; redistribution under these terms (or, a",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:23547,REPAIR,REPAIR,23547,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['REPAIR'],['REPAIR']
Availability,"he main window. The possible choices depends on the; configuration file, sofa-default.cfg. The RealGUI gets a pointer to the root of the scene graph, and controls; the application by calling class; sofa::simulation::tree:Simulation.; The RealGUI uses an internal timer to repeatedly call; method sofa::simulation::tree:Simulation::animate(GNode* root, double; dt) and then update the viewer. To select the; viewers:. sofa-default.cfg located in; your Sofa main directory allows to define what kind of viewer you are; willing to have. ; By commenting (adding a�#� in front of the line) or uncommenting; (removing the �#�) lines, you can allow multiple kind of viewer.; For example, if you want to have the choice to render the scene with; QtGLViewer and QtOgreViewer, just modify sofa-default.cfg as below:. # DEFINES += SOFA_GUI_QT ; DEFINES += SOFA_GUI_QTOGREVIEWER; DEFINES += SOFA_GUI_QGLVIEWER. Then, in the main window, you select the kind of viewer you; want. Qt will appear in gray, whereas QGLViewer and Ogre will be; available.; Warning, you must reload the scene when this change is made!. Viewers. The Viewers available now are:. QtViewer: uses openGL, derives a; QGLWidget in order to be embedded within Qt. This class will probably; not be maintained. Use QtGLViewer instead. QtGLViewer: uses the library; QGLViewer. Provides lots of functions to navigate through the scene.; More information at QGLViewer; Website. QtOgreViewer: Embed Ogre within a; Qwidget. Allows to get great visuals, through an intensive use of; shaders, materials.; Shadows are provided, but all the controls (show the mechanical; objects, force fields...) are disabled. ; Warning: Ogre is not provided by Sofa, you have to previously install; Ogre on your computer. ; The support works with Windows, Linux. ; - For Windows, the easiest way to proceed is to download and install; the SDK. ; - For Linux, you have to compile from the source. If Ogre's library; aren't installed in the default directory �/usr/local/l",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:3300,avail,available,3300,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,1,['avail'],['available']
Availability,"he value is zero, and black; pixel means the value is non-zero.; * **bmp**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero. #### Link to Linear Solver. GlobalSystemMatrixExporter must have a link to a linear solver (a component inheriting from `sofa::core::behavior::LinearSolver`). The link can be explicit. Example:; ```xml; <GlobalSystemMatrixExporter linearSolver=""@pathToLinearSolver""/>; ```. The link can be implicit. I.e the component will search for a linear solver in the current Node. Example:; ```xml; <SparseLDLSolver/>; <GlobalSystemMatrixExporter/>; ```. A use case is available in the examples folder. ### GlobalSystemMatrixImage. GlobalSystemMatrixImage is a component to visualize the matrix of a linear system in a; Qt widget. #### Link to Linear Solver. GlobalSystemMatrixImage must have a link to a linear solver (a component inheriting from `sofa::core::behavior::LinearSolver`). The link can be explicit. Example:; ```xml; <GlobalSystemMatrixImage linearSolver=""@pathToLinearSolver""/>; ```. The link can be implicit. I.e the component will search for a linear solver in the current Node. Example:; ```xml; <SparseLDLSolver/>; <GlobalSystemMatrixImage/>; ```. A use case is available in the examples folder. #### Screenshot. ![GlobalSystemMatrixImage](doc/GlobalSystemMatrixImage.png). ### FillReducingOrdering. This component reorders the degrees of freedom in a mesh in order to reduce fill-in in sparse matrix factorization.; Two methods of reordering are available:; 1) Metis; 2) Approximate minimum degree (AMD) from Eigen. The example `FillReducingOrdering.scn` shows how to use this component.; In this simulation, the same object is simulated twice:; 1) No reordering method is applied; 2) A reordering method is applied. It can be observed that the number of non-zero values in the matrix decomposition is about 80% lower when the vertices are reordered.; It results to a faster matrix system resolution.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md:2662,avail,available,2662,applications/plugins/SofaMatrix/SofaMatrix.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md,2,['avail'],['available']
Availability,"hen drawing 3d text; - compilation with SofaDumpVisitor flag enabled; - compilation of BezierTriangleSetGeometryAlgorithms (color changed from Vec3f to Vec4f); - runSofa: viewport aspect issue and loss of interaction in QtGLViewer; - BoxROI: visual bounding box; - SofaMiscForceField on Windows; - VisualVisitor traversal order; - SphereROI: indices out when multiple spheres; - bug in RestShapeSpringsForceField; - Remove VariationalSymplecticSolver.h from the package in SofaCommon (to fix history); - some static analysis warnings and errors (including memory leaks); - MeshROI: remove unnecessary sqrt; - SphereROI: set centers' size to radii if only one radius is provided; - ARTrack plugin compilation; - bug in MeshNewProximityIntersection involving false positive detection with triangles containing an angle > 90°; - path to images for html description pop up window; - OglModel hasTexture; - DataDisplay: normal computation; - DataDisplay: crash when the component was dynamically added to a scene; - visual bug with OglModel when putOnlyTexCoords is enabled with no texture; - Order Independent Transparency for old graphics card; - sofa::gui::glut applying changes in BaseCamera; - computation of the bounding box in PlaneForceField; - SofaHelper: Fix bug with FBO (causing some weird things when using textures); - corrected the visualization of heterogeneous tetrahedra; - SofaOpenGLVisual: Fix Spotlight source drawing + add some log for ShaderElement; - OmniDriverEmu plugin and examples; - scene test: ICPRegistration_ShapeMatching.scn is ignored; - Vec: 'normalized' function constness; - SpotLight: direction normalization; - ProjectionTo{Plane,Line}MultiMapping Jacobian insertion order; - SofaGeneralRigid: bug in ArticulatedSystemMapping; - SofaEngine: BoxROI instantiation; - SofaBaseCollision: Fix computeBBox in SPhereModel; - bug in MechanicalPickParticlesWithTagsVisitor input tags were not respected; - SofaOpenGLVisual: fix light's modelview matrix computation (lookat da",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:356876,error,errors,356876,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['errors']
Availability,"ile drawing bbox (QtViewer); - add of GUIEvent into the STLExporter; - Make the code compatible with ClipPlane (using ClipVertex in shaders, which is deprecated for GLSL > 1.4); - Optimize the callto C-PYTHON side when the functions are not implemented in the python side; - Add color attribute support (and default color if not present in the node); - Reactivate color map in TetraFEM, as it does not depend on SofaOpenGLVisual anymore; - indices data field for UniformMass; - analyze matrix only if number of non-zeroes has changed and no iterative refinement; - update the applyConstraint methods according to the actual API; - Adding ProjectionTo{Plane|Line}MultiMapping where the plane (origin,normal) and the line (origin,direction) are dofs; - add MeshBoundaryROI with an example. - [Tests]; - for (multi)Mapping test, check the size of the mapping output is correct; - adding TestMessageHandler that raises a gtest failure each time an error message is processed; - test for node removal; - test for removal of a node containing an UncoupledConstraintCorrection (for now the test fails because there is a problem with the removal of that component); - add of Multi2Mapping_test; - add DistanceMapping_test. - [SofaPython]; - logger: cleaning emitter; - sml.Mesh: adding load function; - sml: python set for tags is created by objects themselves; - sml: add tag to JointGeneric; - sml: add the printLog flag; - sml: setup units in BaseScene for all sml Scene class; - sml: mesh has a clear id; - sml:insertVisual: bug fix for solid with multiple meshes (just impacting the Display scene); - sml: handy constructor for Dof creation; - sml: like <mesh> <image> can be defined in <solid>; - sml: add a utility function: look into the valueByTag dictionary for a tag contained in tags; - sml: adding a warning if a vertex group is empty; - sml: can have offsets under solids; - sml: remove deprecated setTagFromTag() method; - API: add subsetFromDeformables function; - binding Node::isInitialized;",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:347110,failure,failure,347110,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['error', 'failure']","['error', 'failure']"
Availability,"in two step as shown in the following screenshots [took from Blender (software)] :.       . Animation step 1 : Arm is raised. Animation step 2 : Arm is bent. And now the same scene loaded into Sofa :. Animation step 1 : Arm is raised; Animation step 1-2 : Arm animation interpolated by Sofa(animation speed depends of the animation time step); Animation step 2 : Arm is bent. Another example with a scene containing two meshes, one with the same bones as in the previous example and a sphere without skinning.       . The scene in the Sofa Modeler. The same scene in runSofa.       As you can see in Sofa Modeler, the scene to load a collada file is very simple. We have the SceneColladaLoader to load it and, important thing, we also have an EulerSolver ; which will be used by the potential SkeletalMotionProjectiveConstraints to ""play"" the animation updating positions and velocities.; When you launch runSofa with this scene, a new node will be added which contains the whole collada scene. The name of this node is the name you gave to the ; SceneColladaLoader plus the string ""_scene"". On the right picture, the loader generated two child nodes call ""mesh 0"" which contains a mesh without skinning (the sphere), and ; ""mesh 1"" which contains a mesh with skinning and bones animation directly from the collada file.; The SkeletalMotionProjectiveConstraint automatically interpolates between animation frames, play with the animation time step to slown down or speed up the animation. As you can see on the other example below, the woman's hair does not fit her head very well because its coordinates system belongs to a dummy object not supported for the moment. A skinned and bones animated mesh representing a woman. Intellectual property and rights. Author. Olivier CARRE. Contact. olivier.carre@inria.fr or sofa-devel@lists.gforge.inria.fr; . License. Your can distribute this plugin under the same license as the core of SOFA, or any other license of your choice. Sponsors. Assimp Library. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:4678,down,down,4678,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['down'],['down']
Availability,"ink software (hereafter referred to as ""Your Software""); against the Licensed Software and/or distribute binaries of Your Software; linked against the Licensed Software, provided that:. A) Your Software is licensed under one of the following licenses:. License name Version(s)/Copyright Date; Academic Free License 2.0, 2.1, 3.0; Apache Software License 1.0 or 1.1; Apache License 2.0; Apple Public Source License 2.0; BSD license ""July 22 1999""; Common Development and Distribution; License (CDDL) 1.0; Common Public License 1.0; Eclipse Public License 1.0; GNU Library or ""Lesser""; General Public License (LGPL) 2.0, 2.1, 3.0; Jabber Open Source License 1.0; Mozilla Public License (MPL) 1.0 or 1.1; Open Software License 2.0, 3.0; PHP License 3.0; Python Software Foundation License 2.1.1; Q Public License 1.0; Sleepycat License ""1999""; W3C License ""2001""; X11 License X11R6.6; Zope Public License 2.0, 2.1. and. B) You must, on request, make a complete package including the complete ; source code of Your Software (as defined in the GNU General Public ; License version 2, section 3, but excluding anything excluded by the; special exception in the same section) available to Gilles Debunne; under the same license as that granted to other recipients of the ; source code of Your Software. and. C) Your or any other contributor's rights to:. i) distribute the source code of Your Software to anyone for; any purpose;. and. ii) publicly discuss the development project for Your; Software and its goals in any form and in any forum. are not prohibited by any legal instrument, including but not limited to; contracts, non-disclosure agreements, and employee contracts. 2) The right to link non-Open Source applications with versions of the ; Licensed Software: You may link applications with versions of the Licensed ; Software, provided that such applications have been developed and are deployed; in accordance with the terms and conditions of the libQGLViewer Commercial ; License Agreement.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/GPL_exception.txt:1981,avail,available,1981,Sofa/GUI/Qt/libQGLViewer/GPL_exception.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/GPL_exception.txt,1,['avail'],['available']
Availability,"ion 3 of the GNU General Public License. ""Copyright"" also means copyright-like laws that apply to other kinds of; works, such as semiconductor masks. ""The Program"" refers to any copyrightable work licensed under this; License. Each licensee is addressed as ""you"". ""Licensees"" and; ""recipients"" may be individuals or organizations. To ""modify"" a work means to copy from or adapt all or part of the work; in a fashion requiring copyright permission, other than the making of an; exact copy. The resulting work is called a ""modified version"" of the; earlier work or a work ""based on"" the earlier work. A ""covered work"" means either the unmodified Program or a work based; on the Program. To ""propagate"" a work means to do anything with it that, without; permission, would make you directly or secondarily liable for; infringement under applicable copyright law, except executing it on a; computer or modifying a private copy. Propagation includes copying,; distribution (with or without modification), making available to the; public, and in some countries other activities as well. To ""convey"" a work means any kind of propagation that enables other; parties to make or receive copies. Mere interaction with a user through; a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays ""Appropriate Legal Notices""; to the extent that it includes a convenient and prominently visible; feature that (1) displays an appropriate copyright notice, and (2); tells the user that there is no warranty for the work (except to the; extent that warranties are provided), that licensees may convey the; work under this License, and how to view a copy of this License. If; the interface presents a list of user commands or options, such as a; menu, a prominent item in the list meets this criterion. 1. Source Code. The ""source code"" for a work means the preferred form of the work; for making modifications to it. ""Object code"" means any non-source; form of a work. A ""Sta",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:23526,avail,available,23526,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['avail'],['available']
Availability,"ise set to AVX); if (HAVE_AVX2_EXTENSIONS); message(""Your CPU supports AVX2 SIMD. Using flags: ${AVX_FLAGS}""); elseif(HAVE_AVX_EXTENSIONS); message(""Your CPU supports only AVX SIMD. Using flags: ${AVX_FLAGS}""); else(); message(""Your CPU does not support AVX SIMD."") # SSE2 is the default when x64 is set; endif(); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""${AVX_FLAGS}""); endif(); if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/fp:fast""); endif(); endif(). # Use Release flags for MinSizeRel and RelWithDebInfo build types:; set_target_properties(${PROJECT_NAME} PROPERTIES; MAP_IMPORTED_CONFIG_MINSIZEREL Release; MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release; ); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:RELEASE>:${SOFACONFIG_COMPILE_OPTIONS_RELEASE}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:DEBUG>:${SOFACONFIG_COMPILE_OPTIONS_DEBUG}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""${SOFACONFIG_COMPILE_OPTIONS}""). # target_link_option only available with cmake >= 3.13; if(${CMAKE_VERSION} VERSION_LESS ""3.13.0""); if(NOT SOFACONFIG_LINK_OPTIONS_RELEASE STREQUAL """"); string(REPLACE "";"" "" "" SOFACONFIG_LINK_OPTIONS_RELEASE ""${SOFACONFIG_LINK_OPTIONS_RELEASE}""); set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS_RELEASE ""${SOFACONFIG_LINK_OPTIONS_RELEASE}""); endif(); if(NOT SOFACONFIG_LINK_OPTIONS_DEBUG STREQUAL """"); string(REPLACE "";"" "" "" SOFACONFIG_LINK_OPTIONS_DEBUG ""${SOFACONFIG_LINK_OPTIONS_DEBUG}""); set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS_DEBUG ""${SOFACONFIG_LINK_OPTIONS_DEBUG}""); endif(); if(NOT SOFACONFIG_LINK_OPTIONS STREQUAL """"); string(REPLACE "";"" "" "" SOFACONFIG_LINK_OPTIONS ""${SOFACONFIG_LINK_OPTIONS}""); set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS ""${SOFACONFIG_LINK_OPTIONS}""); endif(); else(); target_link_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:RELEASE>:${SOFACONFIG_LINK_OPTIONS_RELEASE}>""); target_link_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:DEBUG>:${SOFACONFIG_L",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:13411,avail,available,13411,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['avail'],['available']
Availability,"ith iterators; - you deal with long typenames AND or when the variable type is obvious. ## SOFA specific rules; - Tricky code should not be commented but rewritten! In general, the use of comments should be minimized by making the code self-documenting by appropriate name choices and an explicit logical structure.; - The use of magic numbers in the code should be avoided. Numbers other than 0 and 1 should be declared as named constants instead.; - The definition of ε-definition of limit ('epsilon', an arbitrarily small positive quantity) should not be code specific but rather use the class template [`std::numeric_limits`](https://en.cppreference.com/w/cpp/types/numeric_limits/epsilon). Here is an example: `const DataTypes::Real EPSILON = std::numeric_limits<DataTypes::Real>::epsilon();`; `const DataTypes::Real EPSILON = std::numeric_limits<DataTypes::Real>::epsilon();`; - All internal data, needed by your component, and that can’t be recomputed must be put inside a `Data` or a `DataPtr`. This way, your component can be saved. Also, this `Data` will be automatically displayed inside the GUI.; - For messaging in SOFA components, the [dedicated Messaging API](https://www.sofa-framework.org/community/doc/programming-with-sofa/start-coding/message-api/) must be used.; - `msg_info()` will display the message in the console only if the `printLog` flag is activated.; - `msg_warning()` will display the message in the console with an warning message.; - `msg_error()` will display the message in the console with an error message.; - Use `sofa::type::vector` instead of `std::vector`; - Only use `sofa::simulation::tree::GNode` when you need to directly use access to the children or the parent of the node. If not, use the more generic `sofa::simulation::Node`; - When an information, a function or an internal variable from an external component is needed in a component, prefer an explicit Link to connect both components instead of implicitly browsing the graph using `getContext`; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:6789,error,error,6789,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,1,['error'],['error']
Availability,k/sofa/pull/3158 ); - [GUI.Qt] Move default format setup before application creation [#3105]( https://github.com/sofa-framework/sofa/pull/3105 ); - [Helper] Convert path back slashes to slash [#2970]( https://github.com/sofa-framework/sofa/pull/2970 ); - [Helper] Deduce plugin name from path based on known extension [#2961]( https://github.com/sofa-framework/sofa/pull/2961 ); - [Helper] Fix crash when module does not provide a version [#2949]( https://github.com/sofa-framework/sofa/pull/2949 ); - [Helper] Make TagFactory thread safe [#2942]( https://github.com/sofa-framework/sofa/pull/2942 ); - [IO.Mesh] Fix binary loading in case of degenerated triangles [#3084]( https://github.com/sofa-framework/sofa/pull/3084 ); - [Lagrangian.Correction] LinearSolverConstraintCorrection: Trivial optimisations for MSVC [#3135]( https://github.com/sofa-framework/sofa/pull/3135 ); - [Mass] Fix point topological changes for UniformMass [#2853]( https://github.com/sofa-framework/sofa/pull/2853 ); - [MeshGmsh]Fixed false error detection in MeshGmsh.cpp file [#3030]( https://github.com/sofa-framework/sofa/pull/3030 ); - [Preconditioner] Fix missing find_package() in the cmake.in [#2841]( https://github.com/sofa-framework/sofa/pull/2841 ); - [S.C.Engine] Remove previous engine files and fix some cmake.in [#2909]( https://github.com/sofa-framework/sofa/pull/2909 ); - [S.C.LinearSolver]fix bug in linearsolvers and preconditioners [#2883]( https://github.com/sofa-framework/sofa/pull/2883 ); - [S.C.Mapping] Fix assertion in BarycentricMapper [#2989]( https://github.com/sofa-framework/sofa/pull/2989 ); - [S.C.Topology.Container.Dynamic] Fix assert error in QuadSetTopologyContainer [#2990]( https://github.com/sofa-framework/sofa/pull/2990 ); - [SceneUtility] MakeDataAliasComponent: Remove alias in destructor [#2832]( https://github.com/sofa-framework/sofa/pull/2832 ); - [Sofa.Component.Diffusion][Sofa.Component.Mass] Fix diffusion [#2798]( https://github.com/sofa-framework/sofa/pull/2798 ); - [,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:107257,error,error,107257,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"limit the cores used by specific targets"" OFF). # Sofa.Config sets the environment (options, compiler flags, global variables); sofa_add_subdirectory(library Sofa/framework/Config Sofa.Config ON). ### Extlibs; add_subdirectory(extlibs). ### Compatibility; option(SOFA_ENABLE_LEGACY_HEADERS ""Enable the compatibility layer (headers located in legacy folders) and deprecated cmake modules."" ON); if(SOFA_ENABLE_LEGACY_HEADERS); message(""Using legacy headers is enabled.""); endif(); sofa_add_subdirectory(library Sofa/framework/Compat Sofa.Compat ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF). ### SOFA (framework and components); add_subdirectory(Sofa). ### Compatibility; # Deprecated (hollow) framework and component modules.; # All depend on SOFA_ENABLE_LEGACY_HEADERS; # Some still contain (maybe useful) components not moved in Sofa/ yet.; # TODO: finally empty those remnants; add_subdirectory(applications/collections/deprecated). ## Tutorials option; option(SOFA_BUILD_TUTORIALS ""Build (most of) the tutorials available."" OFF). # SceneCreator plugin; # Library used by SOFA_BUILD_TESTS and SOFA_BUILD_TUTORIALS; sofa_add_subdirectory(plugin applications/plugins/SceneCreator SceneCreator OFF; WHEN_TO_SHOW ""NOT SOFA_BUILD_SCENECREATOR AND NOT SOFA_BUILD_TESTS AND NOT SOFA_BUILD_TUTORIALS AND NOT SOFA_BUILD_RELEASE_PACKAGE""; VALUE_IF_HIDDEN ""ON""). ## Plugins; add_subdirectory(applications/plugins). ## Applications; add_subdirectory(applications/projects). # Tutorial add subdirectory; if(SOFA_BUILD_TUTORIALS); add_subdirectory(applications/tutorials); endif(). ## SOFA scenes; option(SOFA_BUILD_ADD_SCENES ""Add SOFA scenes as a project of the build."" OFF); if (SOFA_BUILD_ADD_SCENES); add_subdirectory(examples); endif(). ## SOFA shaders; option(SOFA_BUILD_ADD_SHADERS ""Add SOFA shaders as a project of the build."" OFF); if (SOFA_BUILD_ADD_SHADERS); add_subdirectory(share/shaders); endif(). ## Build external projects at the same time; set(SOFA_EXTERNAL_DIRECTORIES """" C",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:7842,avail,available,7842,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['avail'],['available']
Availability,lper] Introduce narrow_cast [#2590]( https://github.com/sofa-framework/sofa/pull/2590 ); - [Sofa.Helper] Remove some compilation warnings [#2619]( https://github.com/sofa-framework/sofa/pull/2619 ); - [Sofa.LinearAlgebra] Deprecate unused EigenMatrixManipulator [#2793]( https://github.com/sofa-framework/sofa/pull/2793 ); - [Sofa.Type] Quat: Optimize rotate() (and inverseRotate()) [#3138]( https://github.com/sofa-framework/sofa/pull/3138 ); - [Sofa.Type] Fix some compilation warnings [#2589]( https://github.com/sofa-framework/sofa/pull/2589 ); - [Sofa.Type] Make RGBAColor constexpr [#2630]( https://github.com/sofa-framework/sofa/pull/2630 ); - [Sofa.Type] Simplify template rebinding [#2570]( https://github.com/sofa-framework/sofa/pull/2570 ); - [SofaBaseMechanics] Clean AddMToMatrixFunctor [#2755]( https://github.com/sofa-framework/sofa/pull/2755 ); - [SofaBaseMechanics][SofaMiscForcefield] Auto-detect MassType [#2644]( https://github.com/sofa-framework/sofa/pull/2644 ); - [SofaBaseTopology] Clearer error message [#2638]( https://github.com/sofa-framework/sofa/pull/2638 ); - [SofaBaseVisual] Remove unused background setting in BaseCamera [#2637]( https://github.com/sofa-framework/sofa/pull/2637 ); - [SofaBoundaryCondition] Remove optimization based on type of matrix [#2859]( https://github.com/sofa-framework/sofa/pull/2859 ); - [SofaBoundaryCondition] Replace deprecated headers [#2574]( https://github.com/sofa-framework/sofa/pull/2574 ); - [SofaBoundaryCondition] Sanitize [#2559]( https://github.com/sofa-framework/sofa/pull/2559 ); - [SofaConstraint] Clean timers in GenericConstraintSolver [#2769]( https://github.com/sofa-framework/sofa/pull/2769 ); - [SofaConstraint] Clean timers in LCPConstraintSolver [#2640]( https://github.com/sofa-framework/sofa/pull/2640 ); - [SofaConstraint] Replace raw pointer to Link [#2770]( https://github.com/sofa-framework/sofa/pull/2770 ); - [SofaConstraint] Sanitize [#2577]( https://github.com/sofa-framework/sofa/pull/2577 ); - [SofaCor,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:125873,error,error,125873,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"nearAlgebra] Unit tests for RotationMatrix [#3585](https://github.com/sofa-framework/sofa/pull/3585); - [LinearAlgebra] Fix matrix unit test [#3832](https://github.com/sofa-framework/sofa/pull/3832) . **Examples / Scenes**; - [examples] Introduce example and tests for SquareMapping [#3768](https://github.com/sofa-framework/sofa/pull/3768) . ## [v22.12.00]( https://github.com/sofa-framework/sofa/tree/v22.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v22.06..v22.12 ). ### Highlighted contributions. - [Core, Helper] Add spelling suggestion in ObjectFactory [#3042](https://github.com/sofa-framework/sofa/pull/3042) ; - [Constraint.Lagrangian] Add the NNCG as NLCP solver in GenericCS [#3053](https://github.com/sofa-framework/sofa/pull/3053) ; - [CMake] Introduce CMake presets [#3305](https://github.com/sofa-framework/sofa/pull/3305) ; - [all] Type conversion cleaning (+ user-defined literal) [#3314](https://github.com/sofa-framework/sofa/pull/3314) ; - [Core] Convert warning to error in object factory [#3404](https://github.com/sofa-framework/sofa/pull/3404) . ### Breaking. **Architecture**; - [Core] Make some functions non-virtual [#3242](https://github.com/sofa-framework/sofa/pull/3242) ; - [Core] Add some const qualifier to collision methods & use SReal & nodiscard. [#3270](https://github.com/sofa-framework/sofa/pull/3270) ; - [Topology] Improve TopologyHandler registration [#3271](https://github.com/sofa-framework/sofa/pull/3271) ; - [Core] Finally disable deprecated code in BaseData and ExectParam's Aspects. [#3279](https://github.com/sofa-framework/sofa/pull/3279) ; - [Simulation] Separate factory code from TaskScheduler [#3480](https://github.com/sofa-framework/sofa/pull/3480); - [all] Replace all Vector2, Vector3, Vector4 by their short name alias Vec2, Vec3 [#3299](https://github.com/sofa-framework/sofa/pull/3299) ; - [Core] Remove memory leaks [#3183](https://github.com/sofa-framework/sofa/pull/3183) ; - [Core] Avoid extra copy in DataFileN",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:69509,error,error,69509,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch of tests [#286]( https://github.com/sofa-framework/sofa/pull/286 ); - [SofaTest]; - add Backtrace::autodump to all tests to ease debugging [#191]( https://github.com/sofa-framework/sofa/pull/191 ); - add automatic tests for updateForceMask [#209]( https://github.com/sofa-framework/sofa/pull/209 ); - add tests on PluginManager [#240]( https://github.com/sofa-framework/sofa/pull/240 ); - TestMessageHandler : new and robust implementation to connect msg_* message to test failure [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - update to use the new TestMessageHandler where msg_error generates test failures [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - add tests for TestMessageHandler [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - [SofaCUDA]; - FIX NVCC flags for debug build on Windows [#300]( https://github.com/sofa-framework/sofa/pull/300 ). ### Bug Fixes. **Modules**; - Warnings have been fixed [#229]( https://github.com/sofa-framework/sofa/pull/229 ); - [All]; - check that SofaPython is found before lauching the cmake sofa_set_python_directory command [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - use the cmake install DIRECTORY instead of FILES to preserve the files hierarchy when installing [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - fixing issue related to parsing attributes with atof/atoi [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - unify color datafield [#206]( https://github.com/sofa-framework/sofa/pull/206 ); - Fix CMakeLists bug on Sofa.ini and installedS",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:330624,failure,failures,330624,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['failure'],['failures']
Availability,"ngEnabled attribute to the PythonScriptController to control if the script is gather timing statistics; - adding python module to load .obj files; - adding BaseContext_getObject_noWarning that returns None w/o warning if the object is not found; - improving a bit the conversion from a cpp Base* to a PyObject* when the cpp Base* type is (even partially) known.; - adding a test to show how to bind a component outside of SofaPython; - Factory: conversion shortcuts for known types; - PythonScriptController: if the filename is let empty, the controller is supposed to be in an already loaded file, to avoid to read the same file several times; - adding ""loadPlugin"" function to the Sofa python module; - Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name.; - object and type names are now both optional when calling BaseContext_getObjects(); - search direction can now optionally be passed to BaseContext_getObjects(); - at object creation failure, print additional error messages from BaseObjectDescription; - adding special Data types in the PythonFactory, so more specific cases can be added outside of the plugin SofaPython.; - adding Node::addObject_noWarning not to print a warning when adding an object to an already initialized node; - add of a method which compute quaternion from a line define by a director vector; - add of few new features to save and load the current state of simulation. - [Flexible]; - adding FlexibleCorotationalMeshFEMForceField (meta-forcefield). Not optimized but working; - add of RigidScale mapping in addition to their tests and examples; - HexaFEM comparison: each method has its own solver and uses the same decomposition so the only difference came from the deformation tensor used to find the rotation.; - Flexible: WIP adding a meta-forcefield to compute regular corotational FEM. The idea is to use Flexible's components internally without adding extra computation neither extra memory; - API: add",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:350111,failure,failure,350111,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['error', 'failure']","['error', 'failure']"
Availability,"nges and removed un-needed includes; - [SofaPython]; - cleaning data binding [#166]( https://github.com/sofa-framework/sofa/pull/166 ). ### Moved files. - The module handling HighOrderTopologies moved into a [separate repository]( https://github.com/sofa-framework/plugin.HighOrder) [#222](https://github.com/sofa-framework/sofa/pull/222 ). ____________________________________________________________. ## [v16.12]( https://github.com/sofa-framework/sofa/tree/v16.12 ). **Last commit: on Jan 08, 2017** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v16.08...v16.12 ). ### Environment; - **C++11 is now mandatory**. This implies some changes in building tools.; - Generator: CMake 3.1 or higher.; - Compiler: GCC 4.8 or higher, Clang 3.4 or higher, Microsoft Visual C++ 2013 or higher. ### New features for users. - new Geomagic plugin: supporting latest versions of force feedback interfaces from Geomagic; - add ForceMaskOff, a component to locally (in a branch of the scene graph) cancel the force mask; - live-coding for python; - live-coding for GLSL; - new component MakeAlias; - new component MakeDataAlias; - improved error message & console rendering. ### New features for developpers. - Preliminary Markdown support in the msg_* API. You can now write much better formatting & alignement as well as adding URL to documentations related to the error.; - class RichStyleConsoleFormatter which interprete the markdowns in the message and format this to a resizable console with nice alignement.; - class CountingMessageHandler (count the number of message for each message type); - class RoutingMessageHandler (to implement context specific routing of the messages to different handler); - class ExpectMessage and MessageAsATestFailure can be used to check that a component did or didn't send a message and generate a test failure.; - FileMonitor is now implemented on MacOS & Windows (for live-coding features, for example); - RequiredPlugin: modified API to take a list of plugi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:337079,mask,mask,337079,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['error', 'mask']","['error', 'mask']"
Availability,nicalLoad] Restore addKToMatrix and test SurfacePressureForceField [#3935](https://github.com/sofa-framework/sofa/pull/3935); - [Core.Topology] Restore invalid ids in invalid containers [#3962](https://github.com/sofa-framework/sofa/pull/3962); - [Sofa.Component] FIX default color for TetrahedronFEMForceField [#3971](https://github.com/sofa-framework/sofa/pull/3971); - [image] Fix crash in case no parameters provided to TransferFunction [#3976](https://github.com/sofa-framework/sofa/pull/3976); - [Mapping.NonLinear] Fix assert in RigidMapping [#3978](https://github.com/sofa-framework/sofa/pull/3978); - [Diffusion] Fix buildStiffnessMatrix in TetrahedronDiffusionFEMForceField [#4012](https://github.com/sofa-framework/sofa/pull/4012); - [Core] Fix drawing of Objects when hiding Visual Models [#4044](https://github.com/sofa-framework/sofa/pull/4044); - [FEM.Elastic] Compute BBox in triangle FEM [#4061](https://github.com/sofa-framework/sofa/pull/4061); - [FEM.Elastic] Fix typo in error message [#4062](https://github.com/sofa-framework/sofa/pull/4062); - [LinearAlgebra] Fix matrix sizes when filtering [#4063](https://github.com/sofa-framework/sofa/pull/4063); - [MechanicalLoad] Fix compilation further to new RemovedData constructor [#4094](https://github.com/sofa-framework/sofa/pull/4094); - [MechanicalLoad] Fix plane force field buildStiffnessMatrix [#4098](https://github.com/sofa-framework/sofa/pull/4098); - [GUI.Qt] Fix crash if filename is null [#4102](https://github.com/sofa-framework/sofa/pull/4102); - [Tutorials] Update and fix oneTetrahedron tutorial [#4103](https://github.com/sofa-framework/sofa/pull/4103); - [Helper] Fix wrong function called when writing jpg file [#4111](https://github.com/sofa-framework/sofa/pull/4111); - [test] Make quaternion test deterministic and portable [#4126](https://github.com/sofa-framework/sofa/pull/4126); - [Constraint.Lagrangian.Solver] Fix default value for computeConstraintForces Data [#4129](https://github.com/sofa-framework/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:34740,error,error,34740,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"nsmitted to the scene with QtGLViewer [#132]( https://github.com/sofa-framework/sofa/pull/132 ); - [SceneCreator]; - Cosmetic changes and remove un-needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch of tests [#286]( https://github.com/sofa-framework/sofa/pull/286 ); - [SofaTest]; - add Backtrace::autodump to all tests to ease debugging [#191]( https://github.com/sofa-framework/sofa/pull/191 ); - add automatic tests for updateForceMask [#209]( https://github.com/sofa-framework/sofa/pull/209 ); - add tests on PluginManager [#240]( https://github.com/sofa-framework/sofa/pull/240 ); - TestMessageHandler : new and robust implementation to connect msg_* message to test failure [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - update to use the new TestMessageHandler where msg_error generates test failures [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - add tests for TestMessageHandler [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - [SofaCUDA]; - FIX NVCC flags for debug build on Windows [#300]( https://github.com/sofa-framework/sofa/pull/300 ). ### Bug Fixes. **Modules**; - Warnings have been fixed [#229]( https://github.com/sofa-framework/sofa/pull/229 ); - [All]; - check that SofaPython is found before lauching the cmake sofa_set_python_directory command [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - use the cmake install DIRECTORY instead of FILES to preserve the files hierarchy when installing [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - fixing issue related to parsing attributes with atof/atoi [#161]( https://github.com/sofa-framework/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:330428,robust,robust,330428,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['failure', 'robust']","['failure', 'robust']"
Availability,"o; use, which is precisely where it is most unacceptable. Therefore, we; have designed this version of the GPL to prohibit the practice for those; products. If such problems arise substantially in other domains, we; stand ready to extend this provision to those domains in future versions; of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents.; States should not allow patents to restrict development and use of; software on general-purpose computers, but in those that do, we wish to; avoid the special danger that patents applied to a free program could; make it effectively proprietary. To prevent this, the GPL assures that; patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and; modification follow. TERMS AND CONDITIONS. 0. Definitions. ""This License"" refers to version 3 of the GNU General Public License. ""Copyright"" also means copyright-like laws that apply to other kinds of; works, such as semiconductor masks. ""The Program"" refers to any copyrightable work licensed under this; License. Each licensee is addressed as ""you"". ""Licensees"" and; ""recipients"" may be individuals or organizations. To ""modify"" a work means to copy from or adapt all or part of the work; in a fashion requiring copyright permission, other than the making of an; exact copy. The resulting work is called a ""modified version"" of the; earlier work or a work ""based on"" the earlier work. A ""covered work"" means either the unmodified Program or a work based; on the Program. To ""propagate"" a work means to do anything with it that, without; permission, would make you directly or secondarily liable for; infringement under applicable copyright law, except executing it on a; computer or modifying a private copy. Propagation includes copying,; distribution (with or without modification), making available to the; public, and in some countries other activities as well. To ""convey"" a w",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:22663,mask,masks,22663,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['mask'],['masks']
Availability,ofa-framework/sofa/pull/1498 ). ### Cleanings; **Architecture**; - [SofaMacros] Split SofaMacros.cmake into multiple files [#1477]( https://github.com/sofa-framework/sofa/pull/1477 ); - [SofaMacros] Use IN_LIST (CMake >= 3.3) [#1484]( https://github.com/sofa-framework/sofa/pull/1484 ). **Modules**; - [All] Bunch of removal of sout/serr in the whole code base [#1513]( https://github.com/sofa-framework/sofa/pull/1513 ); - [All] Fix compilation with flag NO_OPENGL [#1478]( https://github.com/sofa-framework/sofa/pull/1478 ); - [All] Fix many warnings [#1682]( https://github.com/sofa-framework/sofa/pull/1682 ); - [All] Remove SMP-related Code [#1613]( https://github.com/sofa-framework/sofa/pull/1613 ); - [All] Replace all sofa::defaulttypes::RGBAColor to sofa::helper::types::RGBAColor [#1463]( https://github.com/sofa-framework/sofa/pull/1463 ); - [Doc] Remove Inria Foundation mention from CONTRIBUTING [#1451]( https://github.com/sofa-framework/sofa/pull/1451 ); - [SofaBaseTopology] Fix ambiguity causing compilation error with MSVC [#1577]( https://github.com/sofa-framework/sofa/pull/1577 ); - [SofaBaseTopology] Rework method getIntersectionPointWithPlane [#1545]( https://github.com/sofa-framework/sofa/pull/1545 ); - [SofaBaseVisual][SofaDeformable] Clean some codes [#1449]( https://github.com/sofa-framework/sofa/pull/1449 ); - [SofaDeformable] Update RestShapeSpringsForceField [#1431]( https://github.com/sofa-framework/sofa/pull/1431 ); - [SofaGeneralEngine] Improve mesh barycentric mapper engine [#1487]( https://github.com/sofa-framework/sofa/pull/1487 ); - [SofaGeneralEngine] Remove useless create() function in some components [#1622]( https://github.com/sofa-framework/sofa/pull/1622 ); - [SofaGuiQt] Move libQGLViewer lib into its module [#1617]( https://github.com/sofa-framework/sofa/pull/1617 ); - [SofaHaptics] Small fix on LCPForceFeedback haptic rendering [#1537]( https://github.com/sofa-framework/sofa/pull/1537 ); - **[SofaHelper]** DrawTool uses RGBAColor now (in,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:226310,error,error,226310,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,ofaKernel]** Remove warnings [#968]( https://github.com/sofa-framework/sofa/pull/968 ); - **[SofaKernel]** several small fix [#953]( https://github.com/sofa-framework/sofa/pull/953 ); - [SofaLoader] Fix positions when handleSeams is activated in MeshObjLoader [#923]( https://github.com/sofa-framework/sofa/pull/923 ); - [SofaMeshCollision] Fix TriangleModel to handle topology changes [#903]( https://github.com/sofa-framework/sofa/pull/903 ); - **[SofaSimulationCore]** Remove unjustified Assert in getSimulation() [#1082]( https://github.com/sofa-framework/sofa/pull/1082 ); - **[SofaSimulationCore]** FIX CollisionVisitor::processCollisionPipeline [#962]( https://github.com/sofa-framework/sofa/pull/962 ); - [SofaTests] Fix small bugs in the Multi2Mapping_test [#1078]( https://github.com/sofa-framework/sofa/pull/1078 ). **Plugins / Projects**; - [CImgPlugin] FIX: messed up package prefix in CImg [#921]( https://github.com/sofa-framework/sofa/pull/921 ); - [Geomagic] FIX compilation error in Geomagic plugin with removal of SOFA_FLOAT/DOUBLE [#898]( https://github.com/sofa-framework/sofa/pull/898 ); - [image] Fix image_gui plugin loading [#1015]( https://github.com/sofa-framework/sofa/pull/1015 ); - [image] Message API is needed even if no python [#1068]( https://github.com/sofa-framework/sofa/pull/1068 ); - [runSofa] FIX the opening of ModifyObject view. [#1010]( https://github.com/sofa-framework/sofa/pull/1010 ); - [runSofa] Fix runSofa -a option with a gui. [#1058]( https://github.com/sofa-framework/sofa/pull/1058 ); - [runSofa] User experience fixes in the ModifyData view. [#1011]( https://github.com/sofa-framework/sofa/pull/1011 ); - [Sensable] Fix the compilation of the Sensable plugin [#1019]( https://github.com/sofa-framework/sofa/pull/1019 ); - [SofaCUDA] Compilation error fix (CudaStandardTetrahedralFEMForceField.cu) [#991]( https://github.com/sofa-framework/sofa/pull/991 ); - [SofaCUDA] Fix several Cuda example scenes [#1000]( https://github.com/sofa-framework/so,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:269202,error,error,269202,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,om/sofa-framework/sofa/pull/4015); - [MechanicalLoad] Implement buildStiffnessMatrix for QuadPressureForceField [#4018](https://github.com/sofa-framework/sofa/pull/4018); - [FEM.Elastic] Add option to compute principal stress direction in TriangularFEMForceFieldOptim [#4027](https://github.com/sofa-framework/sofa/pull/4027); - [Geometry] Add method isPointOnEdge in Edge structure [#4028](https://github.com/sofa-framework/sofa/pull/4028); - [Geometry] Add method intersectionWithEdge in Edge structure [#4029](https://github.com/sofa-framework/sofa/pull/4029); - [Geometry] Add methods getBarycentricCoordinates and isPointInTriangle in Triangle class [#4053](https://github.com/sofa-framework/sofa/pull/4053); - [examples] Introduce falling beam example [#4055](https://github.com/sofa-framework/sofa/pull/4055); - [all] Add dates for user deprecation classes RemovedData and DeprecatedData [#4059](https://github.com/sofa-framework/sofa/pull/4059); - [LinearSolver.Direct] More details in error message [#4060](https://github.com/sofa-framework/sofa/pull/4060); - [GitHub] Action to check PR titles [#4081](https://github.com/sofa-framework/sofa/pull/4081); - [MechanicalLoad] Implement buildStiffnessMatrix in SurfacePressureForceField [#4097](https://github.com/sofa-framework/sofa/pull/4097); - [MechanicalLoad] Implement buildStiffnessMatrix for SphereForceField [#4099](https://github.com/sofa-framework/sofa/pull/4099); - [FEM.Elastic] Implement buildStiffnessMatrix for TriangularFEMForceFieldOptim [#4105](https://github.com/sofa-framework/sofa/pull/4105); - [plugins] Add fetchable ShapeMatchingPlugin [#4106](https://github.com/sofa-framework/sofa/pull/4106); - [Constraint.Lagrangian.Correction] Decrease the severity of not finding a file in PrecomputedConstraintCorrection [#4108](https://github.com/sofa-framework/sofa/pull/4108); - [FEM.HyperElastic] Implement buildStiffnessMatrix for StandardTetrahedralFEMForceField [#4110](https://github.com/sofa-framework/sofa/pull/4110); - [,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:29633,error,error,29633,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"oneTetrahedron and chainHybrid [#773]( https://github.com/sofa-framework/sofa/pull/773 ). **Examples / Scenes**; - [examples] Fix TopologySurfaceDifferentMesh.scn [#716]( https://github.com/sofa-framework/sofa/pull/716 ); - [examples] Fix the examples missing a <RequiredPlugin name=""SofaSparseSolver""/> [#748]( https://github.com/sofa-framework/sofa/pull/748 ); - [examples] Fix scenes having issue with CollisionGroup [#821]( https://github.com/sofa-framework/sofa/pull/821 ). ### Cleanings. **Modules**; - [All] Fix some recent compilation warnings [#726]( https://github.com/sofa-framework/sofa/pull/726 ); - [All] Replace some int/unit by size_t [#729]( https://github.com/sofa-framework/sofa/pull/729 ); - [All] Fix some C4661 warnings [#738]( https://github.com/sofa-framework/sofa/pull/738 ); - [All] FIX warnings [#739]( https://github.com/sofa-framework/sofa/pull/739 ); - [All] Fix some compilation warnings [#755]( https://github.com/sofa-framework/sofa/pull/755 ); - [All] FIX a bunch of static-analysis errors (cppcheck) [#782]( https://github.com/sofa-framework/sofa/pull/782 ); - [All] Remove SOFA_DECL_CLASS and SOFA_LINK_CLASS [#837]( https://github.com/sofa-framework/sofa/pull/837 ); - [All] Remove SOFA_SUPPORT_MOVING_FRAMES and SOFA_SUPPORT_MULTIRESOLUTION [#849]( https://github.com/sofa-framework/sofa/pull/849 ); - **[SofaBaseCollision]** CLEAN CylinderModel [#847]( https://github.com/sofa-framework/sofa/pull/847 ); - **[SofaBaseLinearSolver]** CLEAN GraphScatteredTypes [#844]( https://github.com/sofa-framework/sofa/pull/844 ); - **[SofaFramework]** Various cleaning (non-breaking) [#841]( https://github.com/sofa-framework/sofa/pull/841 ); - **[SofaFramework]** CLEAN: removing unused PS3 files [#851]( https://github.com/sofa-framework/sofa/pull/851 ); - [SofaGeneralSimpleFEM] Clean BeamFemForceField [#846]( https://github.com/sofa-framework/sofa/pull/846 ); - **[SofaHelper]** Change drawTriangle and drawQuad with internal functions [#813]( https://github.com/sofa-",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:288136,error,errors,288136,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['errors']
Availability,opagate position inside Newton loop [#2584]( https://github.com/sofa-framework/sofa/pull/2584 ); - [SofaGeneralObjectInteraction] Fix dependencies in cmake [#2659]( https://github.com/sofa-framework/sofa/pull/2659 ); - [SofaGuiCommon] Restore argv [#2802]( https://github.com/sofa-framework/sofa/pull/2802 ); - [SofaGuiQt] Fix some dll export macro missing [#2555]( https://github.com/sofa-framework/sofa/pull/2555 ); - [SofaGui] Restore and update CMake variables and modules [#3011]( https://github.com/sofa-framework/sofa/pull/3011 ); - [SofaHelper] Speedup ReadAccessor conversion operator [#2583]( https://github.com/sofa-framework/sofa/pull/2583 ); - [SofaMiscFEM] Fix TriangleFEMForceField and TriangularFEMForceField to have the same behavior [#2275]( https://github.com/sofa-framework/sofa/pull/2275 ); - [SofaMiscFem] FIX missing Strain Displacement matrix update in TriangularFEMForceField [#2706]( https://github.com/sofa-framework/sofa/pull/2706 ); - [SofaMiscForceField] Fix error while trying to compile a plugin depending on SofaGuiQt [#2707]( https://github.com/sofa-framework/sofa/pull/2707 ); - [SofaMiscForceField][SofaBaseMechanics] Add compile-time conditions to avoid compiling unrealistic cases [#2514]( https://github.com/sofa-framework/sofa/pull/2514 ); - [SofaMiscSolver] Accumulate mapped forces in NewmarkImplicitSolver [#2578]( https://github.com/sofa-framework/sofa/pull/2578 ); - [SofaSparseSolver] Add cmake configuration for Threads [#2739]( https://github.com/sofa-framework/sofa/pull/2739 ); - [SofaSparseSolver] Fix compilation error due to namespace change [#2543]( https://github.com/sofa-framework/sofa/pull/2543 ); - [SofaUserInteraction] Fix compat alias defined in the same scope [#3032]( https://github.com/sofa-framework/sofa/pull/3032 ); - [SolidMechanics] TopologySubsetIndices for RestShapeSpringsForceField [#3037]( https://github.com/sofa-framework/sofa/pull/3037 ); - [StateContainer] Fix VecId names for != V_COORD [#2872]( https://github.com/sofa-,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:113519,error,error,113519,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"orks; set(CMAKE_FIND_FRAMEWORK LAST). sofa_find_package(TIFF QUIET); sofa_find_package(ZSTD QUIET); sofa_find_package(JPEG QUIET); sofa_find_package(PNG QUIET); sofa_find_package(ZLIB QUIET). # Configure Paths according to detected packages; set(DEP_TARGETS """"); set(CIMG_CFLAGS -Dcimg_no_system_calls) # Remove CImg sys calls; if(TIFF_FOUND AND ( NOT(SOFA_BUILD_RELEASE_PACKAGE) OR ZSTD_FOUND)); message(STATUS ""CImgPlugin: TIFF Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_tiff); list(APPEND DEP_TARGETS TIFF::TIFF); if(ZSTD_FOUND); set(DEP_ZSTD ZSTD::ZSTD); endif(); else(); message(STATUS ""CImgPlugin: TIFF Image Format disabled""); endif(); if(JPEG_FOUND); message(STATUS ""CImgPlugin: JPEG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_jpeg); if(WIN32); # prevent INT32 redefinition on Windows (see jmorecfg.h); list(APPEND CIMG_CFLAGS -DXMD_H); endif(); list(APPEND DEP_TARGETS JPEG::JPEG); else(); message(STATUS ""CImgPlugin: JPEG Image Format disabled""); endif(); if(PNG_FOUND); message(STATUS ""CImgPlugin: PNG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_png); if(UNIX); # Prevent pngconf error (see https://bugs.launchpad.net/ubuntu/+source/libpng/+bug/218409); list(APPEND CIMG_CFLAGS -DPNG_SKIP_SETJMP_CHECK); endif(); list(APPEND DEP_TARGETS PNG::PNG); else(); message(STATUS ""CImgPlugin: PNG Image Format disabled""); endif(); if(ZLIB_FOUND); list(APPEND DEP_TARGETS ZLIB::ZLIB); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<BUILD_INTERFACE:${CImg_INCLUDE_DIRS}>""); target_compile_options(${PROJECT_NAME} PUBLIC ${CIMG_CFLAGS}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.DefaultType ); target_link_libraries(${PROJECT_NAME} INTERFACE CImg); target_link_libraries(${PROJECT_NAME} PUBLIC ${DEP_TARGETS}). if(SOFA_BUILD_RELEASE_PACKAGE OR CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS ${DEP_TARGETS} ${DEP_ZSTD}); en",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt:2693,error,error,2693,applications/plugins/CImgPlugin/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt,1,['error'],['error']
Availability,"other free; programs whose distribution conditions are different, write to the author; to ask for permission. For software which is copyrighted by the Free; Software Foundation, write to the Free Software Foundation; we sometimes; make exceptions for this. Our decision will be guided by the two goals; of preserving the free status of all derivatives of our free software and; of promoting the sharing and reuse of software generally. NO WARRANTY. 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY; FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN; OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES; PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED; OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF; MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS; TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE; PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,; REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING; WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR; REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,; INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING; OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED; TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY; YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER; PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE; POSSIBILITY OF SUCH DAMAGES. END OF TERMS AND CONDITIONS. How to Apply These Terms to Your New Programs. If you develop a new program, and you want it to be of the greatest; possible use to the public, the best way to achieve this is to make it; free software which everyone can redistribute and change under these terms. To do so, attach the following",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:14381,REPAIR,REPAIR,14381,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,5,['REPAIR'],['REPAIR']
Availability,owercase for Difflib [#4486](https://github.com/sofa-framework/sofa/pull/4486); - [README] Update badge with Discord [#4498](https://github.com/sofa-framework/sofa/pull/4498); - [Plugins] Move MeshSTEPLoader to an external repository [#4504](https://github.com/sofa-framework/sofa/pull/4504); - [Plugins] Gather external plugins configs in a same folder (proposal) [#4505](https://github.com/sofa-framework/sofa/pull/4505); - [image] Fix scene test [#4517](https://github.com/sofa-framework/sofa/pull/4517); - [GitHub] Update version of the actions/github-script [#4522](https://github.com/sofa-framework/sofa/pull/4522); - [GUI] Remove the New/Save/SaveAs menu options [#4523](https://github.com/sofa-framework/sofa/pull/4523); - [all] Additional fixes further to v24.06 lifecycle [#4540](https://github.com/sofa-framework/sofa/pull/4540); - [Core] Update NarrowPhaseDetection.cpp use prefix [#4557](https://github.com/sofa-framework/sofa/pull/4557); - [Geomagic] Update GeomagicDriver.cpp to fire error when hd.h is not found [#4576](https://github.com/sofa-framework/sofa/pull/4576); - [CMake] Upgrade cmake_minimum_required to 3.22 [#4586](https://github.com/sofa-framework/sofa/pull/4586); - [Core] Remove unused debug trace [#4590](https://github.com/sofa-framework/sofa/pull/4590); - [Core] cmake: Remove last traces of Sofa.Component.Compat [#4596](https://github.com/sofa-framework/sofa/pull/4596); - [LinearAlgebra] Remove empty source file [#4599](https://github.com/sofa-framework/sofa/pull/4599); - [Type] Clean and test MatSym [#4600](https://github.com/sofa-framework/sofa/pull/4600); - [tests] Use appropriate gtest macro [#4607](https://github.com/sofa-framework/sofa/pull/4607); - [LinearSystem] Remove development artifact [#4620](https://github.com/sofa-framework/sofa/pull/4620); - [all] Minor last fixes using SimpleApi [#4627](https://github.com/sofa-framework/sofa/pull/4627); - [SolidMechanics.FEM] Small update on container access to avoid unecessary check [#4639](https://g,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:15856,error,error,15856,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"pology] Rename Edge::pointBaryCoefs into Edge::getBarycentricCoordinates [#4165](https://github.com/sofa-framework/sofa/pull/4165); - [LinearSolver.Direct] SparseLDL: Fix crash in addJMInvJtLocal [#4180](https://github.com/sofa-framework/sofa/pull/4180); - [Helper] Fix warning in MeshTopologyLoader.cpp [#4181](https://github.com/sofa-framework/sofa/pull/4181); - [examples] Fix warning of UncoupledCC in caduceus [#4187](https://github.com/sofa-framework/sofa/pull/4187); - [LinearSystem] MatrixLinearSystem: add registration in the factory for BTDMatrix6 [#4189](https://github.com/sofa-framework/sofa/pull/4189); - [SofaCarving] Fix warnings in SofaCarving_test due to use of deprecated methods [#4193](https://github.com/sofa-framework/sofa/pull/4193); - [GUI.Qt] Fix libQGLViewer cmake install [#4198](https://github.com/sofa-framework/sofa/pull/4198); - [Helper] Update ComponentChange for MechanicalMatrixMapper [#4235](https://github.com/sofa-framework/sofa/pull/4235); - [LinearAlgebra] Robustify accesses to empty matrices [#4236](https://github.com/sofa-framework/sofa/pull/4236); - [Topology] Check indices out-of-bound in TriangleSetTopologyContainer [#4242](https://github.com/sofa-framework/sofa/pull/4242); - [github] Fix name of PR author in GitHub workflows [#4267](https://github.com/sofa-framework/sofa/pull/4267); - [SofaCUDA] Dont use both version of cublas (legacy or v2) [#4274](https://github.com/sofa-framework/sofa/pull/4274); - [Sofa.GUI.Qt] Add cmake module for QGLViewer [#4290](https://github.com/sofa-framework/sofa/pull/4290); - [all] Fix warnings [#4291](https://github.com/sofa-framework/sofa/pull/4291); - [LinearAlgera, Core] Fix linking with LTO on MacOS/Clang [#4293](https://github.com/sofa-framework/sofa/pull/4293); - [MultiThreading] Avoid Static Initialization Order Fiasco [#4307](https://github.com/sofa-framework/sofa/pull/4307); - [SofaCUDA] FIX compilation SofaCUDA along with SparseGrid with Cuda12 [#4319](https://github.com/sofa-framework/sofa/pul",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:37445,Robust,Robustify,37445,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Robust'],['Robustify']
Availability,"pull/714 ); - **[SofaFramework]** Improve external dirs fetching in SofaMacros [#759]( https://github.com/sofa-framework/sofa/pull/759 ); - [SofaGeneralAnimationLoop] Improvement on MMMapper [#772]( https://github.com/sofa-framework/sofa/pull/772 ); - **[SofaHelper]** EDIT FileSystem and FileRepository for regression tests [#830]( https://github.com/sofa-framework/sofa/pull/830 ); - **[SofaKernel]** Improve Displayflags [#671]( https://github.com/sofa-framework/sofa/pull/671 ); - **[SofaKernel]** Add a ""sofa_add_module"" in SofaMacro.cmake [#732]( https://github.com/sofa-framework/sofa/pull/732 ); - **[SofaKernel]** use string in base object description [#862]( https://github.com/sofa-framework/sofa/pull/862 ); - [SofaMeshCollision] TriangleModel optimization when topology changes occur [#839]( https://github.com/sofa-framework/sofa/pull/839 ); - [SofaSparseSolver] ADD saveMatrixToFile to SparseLDLSolver [#845]( https://github.com/sofa-framework/sofa/pull/845 ); - [SofaTest] ADD a PrintTo method so test failure shows human readable informations. [#730]( https://github.com/sofa-framework/sofa/pull/730 ); - [VisualModel] Improve the messages when loading mesh inside VisualModel [#778]( https://github.com/sofa-framework/sofa/pull/778 ); - [WriteState] minor fix with the time attribute, default values [#776]( https://github.com/sofa-framework/sofa/pull/776 ). **Plugins / Projects**; - [Geomagic] ADD an inputForceFeedback data in Geomagic [#648]( https://github.com/sofa-framework/sofa/pull/648 ); - [Geomagic] Fix dll export and some enhancements [#786]( https://github.com/sofa-framework/sofa/pull/786 ); - [MultiThreading] removed the boost thread dependency [#701]( https://github.com/sofa-framework/sofa/pull/701 ); - [MultiThreading] New components and Task scheduler classes refactoring [#745]( https://github.com/sofa-framework/sofa/pull/745 ); - [MultiThreading] Add Image plugin Data types in DataExchange component [#770]( https://github.com/sofa-framework/sofa/pull/770 ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:281273,failure,failure,281273,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['failure'],['failure']
Availability,"r [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - SuturePointPerformer [#457]( https://github.com/sofa-framework/sofa/pull/457 ). ### Breaking. **Kernel modules**; - [All]; - issofa_visitors: Changing the way projective constraints are propagated in visitors [#216]( https://github.com/sofa-framework/sofa/pull/216 ); - [SofaDeformable]; - Change how rest shape is given in RestShapeSpringsForceField [#315]( https://github.com/sofa-framework/sofa/pull/315 ). **Other modules**; - [SofaHelper]; - Rewrite ArgumentParser [#513]( https://github.com/sofa-framework/sofa/pull/513 ); - [SofaValidation]; - ADD Monitor test [#312]( https://github.com/sofa-framework/sofa/pull/312 ). ### Improvements. **Kernel modules**; - [All]; - issofa_topology: Improvement, BugFix and Cleaning on Topology [#243]( https://github.com/sofa-framework/sofa/pull/243 ); - issofa_constraintsolving: improve constraints [#484]( https://github.com/sofa-framework/sofa/pull/484 ); - Improve File:line info in error message (for python and xml error reporting) [#314]( https://github.com/sofa-framework/sofa/pull/314 ); - [SofaDeformable]; - issofa_meshspringff [#497]( https://github.com/sofa-framework/sofa/pull/497 ); - issofa_springff [#498]( https://github.com/sofa-framework/sofa/pull/498 ); - [SofaHelper]; - add ability to use NoArgument for BaseCreator and Factory [#385]( https://github.com/sofa-framework/sofa/pull/385 ); - Remove legacy ImageBMP/ImagePNG and ImageQt [#424]( https://github.com/sofa-framework/sofa/pull/424 ); - Improve advanced timer [#468]( https://github.com/sofa-framework/sofa/pull/468 ); - [SofaLoader]; - ADD normals and vectors to Legacy vtk import [#536]( https://github.com/sofa-framework/sofa/pull/536 ); - [SofaSimpleFem]; - Add check of vector size in TetrahedronFEMForceField [#341]( https://github.com/sofa-framework/sofa/pull/341 ). **Other modules**; - [All]; - Fix default value rayleigh params [#350]( https://github.com/sofa-framework/sofa/pull/350 ); - PSL branch pr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:305140,error,error,305140,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['error'],['error']
Availability,"r free; programs whose distribution conditions are different, write to the author; to ask for permission. For software which is copyrighted by the Free; Software Foundation, write to the Free Software Foundation; we sometimes; make exceptions for this. Our decision will be guided by the two goals; of preserving the free status of all derivatives of our free software and; of promoting the sharing and reuse of software generally. 			 NO WARRANTY. 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY; FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN; OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES; PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED; OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF; MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS; TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE; PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,; REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING; WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR; REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,; INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING; OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED; TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY; YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER; PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE; POSSIBILITY OF SUCH DAMAGES. 		 END OF TERMS AND CONDITIONS. 	 How to Apply These Terms to Your New Programs. If you develop a new program, and you want it to be of the greatest; possible use to the public, the best way to achieve this is to make it; free software which everyone can redistribute and change under these terms. To do so, attach the foll",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:15359,REPAIR,REPAIR,15359,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['REPAIR'],['REPAIR']
Availability,"ramework/sofa/pull/222 ). ____________________________________________________________. ## [v16.12]( https://github.com/sofa-framework/sofa/tree/v16.12 ). **Last commit: on Jan 08, 2017** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v16.08...v16.12 ). ### Environment; - **C++11 is now mandatory**. This implies some changes in building tools.; - Generator: CMake 3.1 or higher.; - Compiler: GCC 4.8 or higher, Clang 3.4 or higher, Microsoft Visual C++ 2013 or higher. ### New features for users. - new Geomagic plugin: supporting latest versions of force feedback interfaces from Geomagic; - add ForceMaskOff, a component to locally (in a branch of the scene graph) cancel the force mask; - live-coding for python; - live-coding for GLSL; - new component MakeAlias; - new component MakeDataAlias; - improved error message & console rendering. ### New features for developpers. - Preliminary Markdown support in the msg_* API. You can now write much better formatting & alignement as well as adding URL to documentations related to the error.; - class RichStyleConsoleFormatter which interprete the markdowns in the message and format this to a resizable console with nice alignement.; - class CountingMessageHandler (count the number of message for each message type); - class RoutingMessageHandler (to implement context specific routing of the messages to different handler); - class ExpectMessage and MessageAsATestFailure can be used to check that a component did or didn't send a message and generate a test failure.; - FileMonitor is now implemented on MacOS & Windows (for live-coding features, for example); - RequiredPlugin: modified API to take a list of plugins to load; - Implements the move semantics on sofa::helper::vector. ### Improvements. - **372 new tests**: DAGNode, MeshObj, DiagonalMass, BoxROI, ComplementaryROI, DifferenceEngine, BilateralInteractionConstraint, Quaternion, ImagePNG, etc.; - 184/480 components have an associated example; - [SofaKernel]; - rep",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:337431,error,error,337431,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,ramework/sofa/pull/520 ); - Fix memory leak while capturing screenshot [#533]( https://github.com/sofa-framework/sofa/pull/533 ); - FIX Windows relative path from runSofa [#568]( https://github.com/sofa-framework/sofa/pull/568 ); - [SofaRigid]; - RigidMapping: fixed setRepartition backward compatibility [#441]( https://github.com/sofa-framework/sofa/pull/441 ); - [SofaSimulationCommon]; - Fix a minor regression introduced during the post-sprint [#476]( https://github.com/sofa-framework/sofa/pull/476 ); - [SofaSimulationCore]; - Add stop in add_mbktomatrixVisitor [#439]( https://github.com/sofa-framework/sofa/pull/439 ). **Other modules**; - [All]; - Fix warnings and strange double incrementation on iterator [#364]( https://github.com/sofa-framework/sofa/pull/364 ); - installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - Fix override warnings [#423]( https://github.com/sofa-framework/sofa/pull/423 ); - FIX Sofa installation failure (tries to install non-existing files) [#470]( https://github.com/sofa-framework/sofa/pull/470 ); - ADD _d suffix for debug libs [#511]( https://github.com/sofa-framework/sofa/pull/511 ); - [SofaBoundaryCondition]; - Fix LinearForceField that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - FIX Removed incorrect warning from LinearForceField [#384]( https://github.com/sofa-framework/sofa/pull/384 ); - [SofaConstraint]; - Fix error due to MacOS >= 10.11 using a relative filename [#325]( https://github.com/sofa-framework/sofa/pull/325 ); - Fix issue in GenericConstraintCorrection [#567]( https://github.com/sofa-framework/sofa/pull/567 ); - [SofaDeformable]; - Fix RestShapeSpringsForceField [#367]( https://github.com/sofa-framework/sofa/pull/367 ); - [SofaExporter]; - FIX allow to extend VTKExporter in a plugin [#309]( https://github.com/sofa-framework/sofa/pull/309 ); - [SofaGeneralEngine]; - Fix some XyzTransformMatrixEngine::update() function [#343]( https://gi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:314606,failure,failure,314606,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['failure'],['failure']
Availability,ramework/sofa/pull/947 ); - **[SofaKernel]** Clean & Fix TopologyChangeVisitor and StateChangeVisitor behavior [#880]( https://github.com/sofa-framework/sofa/pull/880 ); - **[SofaKernel]** Clean output data when doUpdate in BoxROI [#1056]( https://github.com/sofa-framework/sofa/pull/1056 ); - **[SofaKernel]** FIX deprecation message related to template types. [#939]( https://github.com/sofa-framework/sofa/pull/939 ); - **[SofaKernel]** FIX in TetrahedronFEMForceField & TetrahedronSetTopologyAlgorithm [#973]( https://github.com/sofa-framework/sofa/pull/973 ); - **[SofaKernel]** FIX operator>> in Mat.h and add corresponding test. [#993]( https://github.com/sofa-framework/sofa/pull/993 ); - **[SofaKernel]** FIX: A few fix to compile on Mac OSX Xcode 9 and Linux gcc 7.3.0 [#969]( https://github.com/sofa-framework/sofa/pull/969 ); - **[SofaKernel]** FIX: force name data to contain something [#1009]( https://github.com/sofa-framework/sofa/pull/1009 ); - **[SofaKernel]** Fix error in MapperHexahedron and MapperQuad barycentric coef computation [#1057]( https://github.com/sofa-framework/sofa/pull/1057 ); - **[SofaKernel]** Fix: remove unwanted AdvanceTimer::begin command [#1029]( https://github.com/sofa-framework/sofa/pull/1029 ); - **[SofaKernel]** Remove warnings [#968]( https://github.com/sofa-framework/sofa/pull/968 ); - **[SofaKernel]** several small fix [#953]( https://github.com/sofa-framework/sofa/pull/953 ); - [SofaLoader] Fix positions when handleSeams is activated in MeshObjLoader [#923]( https://github.com/sofa-framework/sofa/pull/923 ); - [SofaMeshCollision] Fix TriangleModel to handle topology changes [#903]( https://github.com/sofa-framework/sofa/pull/903 ); - **[SofaSimulationCore]** Remove unjustified Assert in getSimulation() [#1082]( https://github.com/sofa-framework/sofa/pull/1082 ); - **[SofaSimulationCore]** FIX CollisionVisitor::processCollisionPipeline [#962]( https://github.com/sofa-framework/sofa/pull/962 ); - [SofaTests] Fix small bugs in the Mult,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:267944,error,error,267944,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"relasticity fem code in SOFA [#349]( https://github.com/sofa-framework/sofa/pull/349 ); - [SofaSimpleFem]; - ADD computeBBox and test to HexaFEMForceField [#289]( https://github.com/sofa-framework/sofa/pull/289 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaVolumetricData]; - Split the module in two plugins [#389]( https://github.com/sofa-framework/sofa/pull/389 ). **Plugins / Projects**; - [CGALPlugin]; - Add new functionality for mesh generation from image: definition of features [#294]( https://github.com/sofa-framework/sofa/pull/294 ); - [meshconv]; - Improve the CMake config of meshconv requiring miniflowVR to compile [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [PSL]; - Experimental : Add PSL for 17.12 [#541]( https://github.com/sofa-framework/sofa/pull/541 ); - [runSofa]; - autoload plugins (2nd version) [#301]( https://github.com/sofa-framework/sofa/pull/301 ); - Extend the live coding support, message API available for nodes, add an openInEditor [#337]( https://github.com/sofa-framework/sofa/pull/337 ); - add verification if help is not null from displayed data [#382]( https://github.com/sofa-framework/sofa/pull/382 ); - improve the html DocBrowser [#540]( https://github.com/sofa-framework/sofa/pull/540 ); - [SceneChecker]; - Add mechanism to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - [SofaDistanceGrid]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaImplicitField]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaPython]; - Add unicode to string convertion and a warning message in Binding_BaseContext::pythonToSofaDataString [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add unicode to string convertion in B",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:309628,avail,available,309628,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['avail'],['available']
Availability,"rity in TopologyData to check input Topology pointer [#2027]( https://github.com/sofa-framework/sofa/pull/2027 ); - **[SofaBaseTopology]** Missing override keyword [#2035]( https://github.com/sofa-framework/sofa/pull/2035 ); - **[SofaBaseTopology]** correct the logic issue in computeEdgeSegmentIntersection [#2184]( https://github.com/sofa-framework/sofa/pull/2184 ); - [SofaConstraint] Fix symbol export of BilateralInteractionConstraint on RigidTypes [#2031]( https://github.com/sofa-framework/sofa/pull/2031 ); - **[SofaCore]** FIX Issue #1865 [#1866]( https://github.com/sofa-framework/sofa/pull/1866 ); - **[SofaCore]** FIX buffer overflow when using AddressSanitizer [#2121]( https://github.com/sofa-framework/sofa/pull/2121 ); - **[SofaCore]** Fix explicit instantiations with MultiMapping [#1982]( https://github.com/sofa-framework/sofa/pull/1982 ); - **[SofaCore]** Remove duplicated explicit instanciation [#1981]( https://github.com/sofa-framework/sofa/pull/1981 ); - **[SofaDefaultType][SofaCUDA]** FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - [SofaDeformable] Fix test in StiffSpringForceField doUpdateInternal [#1979]( https://github.com/sofa-framework/sofa/pull/1979 ); - **[SofaFramework]** Fix config files for Sofa.GL, for out-of-tree [#1911]( https://github.com/sofa-framework/sofa/pull/1911 ); - **[SofaFramework]** Put back Sofa.GL in Framework [#1920]( https://github.com/sofa-framework/sofa/pull/1920 ); - [SofaGeneralEngine] fixes ExtrudeQuadsAndGenerateHexas [#1673]( https://github.com/sofa-framework/sofa/pull/1673 ); - [SofaGeneralExplicitOdeSolver] Fix typo in CentralDifferenceSolver description [#1894]( https://github.com/sofa-framework/sofa/pull/1894 ); - [SofaGraphComponent] Clean format of RequiredPlugin message [#2111]( https://github.com/sofa-framework/sofa/pull/2111 ); - [SofaGraphComponent] Fix a typo in the warning emited by the APIVersion component and add missing allowed versions. [#2103]( https://github.com/so",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:184453,error,errors,184453,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['errors']
Availability,"rk server at no charge. c) Convey individual copies of the object code with a copy of the; written offer to provide the Corresponding Source. This; alternative is allowed only occasionally and noncommercially, and; only if you received the object code with such an offer, in accord; with subsection 6b. d) Convey the object code by offering access from a designated; place (gratis or for a charge), and offer equivalent access to the; Corresponding Source in the same way through the same place at no; further charge. You need not require recipients to copy the; Corresponding Source along with the object code. If the place to; copy the object code is a network server, the Corresponding Source; may be on a different server (operated by you or a third party); that supports equivalent copying facilities, provided you maintain; clear directions next to the object code saying where to find the; Corresponding Source. Regardless of what server hosts the; Corresponding Source, you remain obligated to ensure that it is; available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided; you inform other peers where the object code and Corresponding; Source of the work are being offered to the general public at no; charge under subsection 6d. A separable portion of the object code, whose source code is excluded; from the Corresponding Source as a System Library, need not be; included in conveying the object code work. A ""User Product"" is either (1) a ""consumer product"", which means any; tangible personal property which is normally used for personal, family,; or household purposes, or (2) anything designed or sold for incorporation; into a dwelling. In determining whether a product is a consumer product,; doubtful cases shall be resolved in favor of coverage. For a particular; product received by a particular user, ""normally used"" refers to a; typical or common use of that class of product, regardless of the status; of t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:33217,avail,available,33217,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['avail'],['available']
Availability,"ros.; It uses the `operator<<` in `BaseMatrix`.; * **csv**: exports a simple comma-separated values file, containing all the matrix values including the zeros.; * **jpg**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero.; * **png**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero.; * **bmp**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero. #### Link to Linear Solver. GlobalSystemMatrixExporter must have a link to a linear solver (a component inheriting from `sofa::core::behavior::LinearSolver`). The link can be explicit. Example:; ```xml; <GlobalSystemMatrixExporter linearSolver=""@pathToLinearSolver""/>; ```. The link can be implicit. I.e the component will search for a linear solver in the current Node. Example:; ```xml; <SparseLDLSolver/>; <GlobalSystemMatrixExporter/>; ```. A use case is available in the examples folder. ### GlobalSystemMatrixImage. GlobalSystemMatrixImage is a component to visualize the matrix of a linear system in a; Qt widget. #### Link to Linear Solver. GlobalSystemMatrixImage must have a link to a linear solver (a component inheriting from `sofa::core::behavior::LinearSolver`). The link can be explicit. Example:; ```xml; <GlobalSystemMatrixImage linearSolver=""@pathToLinearSolver""/>; ```. The link can be implicit. I.e the component will search for a linear solver in the current Node. Example:; ```xml; <SparseLDLSolver/>; <GlobalSystemMatrixImage/>; ```. A use case is available in the examples folder. #### Screenshot. ![GlobalSystemMatrixImage](doc/GlobalSystemMatrixImage.png). ### FillReducingOrdering. This component reorders the degrees of freedom in a mesh in order to reduce fill-in in sparse matrix factorization.; Two methods of reordering are available:; 1) Metis; 2) Approximate minimum degree (AMD) from Eigen. The example `FillReducingOrdering.scn` sho",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md:2050,avail,available,2050,applications/plugins/SofaMatrix/SofaMatrix.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md,1,['avail'],['available']
Availability,"s not include within; the scope of its coverage, prohibits the exercise of, or is; conditioned on the non-exercise of one or more of the rights that are; specifically granted under this License. You may not convey a covered; work if you are a party to an arrangement with a third party that is; in the business of distributing software, under which you make payment; to the third party based on the extent of your activity of conveying; the work, and under which the third party grants, to any of the; parties who would receive the covered work from you, a discriminatory; patent license (a) in connection with copies of the covered work; conveyed by you (or copies made from those copies), or (b) primarily; for and in connection with specific products or compilations that; contain the covered work, unless you entered into that arrangement,; or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting; any implied license or other defenses to infringement that may; otherwise be available to you under applicable patent law. 12. No Surrender of Others' Freedom. If conditions are imposed on you (whether by court order, agreement or; otherwise) that contradict the conditions of this License, they do not; excuse you from the conditions of this License. If you cannot convey a; covered work so as to satisfy simultaneously your obligations under this; License and any other pertinent obligations, then as a consequence you may; not convey it at all. For example, if you agree to terms that obligate you; to collect a royalty for further conveying from those to whom you convey; the Program, the only way you could satisfy both those terms and this; License would be to refrain entirely from conveying the Program. 13. Use with the GNU Affero General Public License. Notwithstanding any other provision of this License, you have; permission to link or combine any covered work with a work licensed; under version 3 of the GNU Aff",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:46805,avail,available,46805,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['avail'],['available']
Availability,"s/gtest] Update gtest & clean the CMakeLists.txt [#604]( https://github.com/sofa-framework/sofa/pull/604 ). ### Cleanings. **Architecture**; - [CMake] Remove the option SOFA_GUI_INTERACTION and its associated codes/macro [#643]( https://github.com/sofa-framework/sofa/pull/643 ). **Modules**; - [All] CMake: Remove COMPONENTSET, keep DEPRECATED [#586]( https://github.com/sofa-framework/sofa/pull/586 ); - [All] CLEAN topology classes [#693]( https://github.com/sofa-framework/sofa/pull/693 ); - **[SofaHelper]** CLEAN commented code and double parentheses in Messaging.h [#587]( https://github.com/sofa-framework/sofa/pull/587 ); - **[SofaKernel]** Header include cleanup [#638]( https://github.com/sofa-framework/sofa/pull/638 ); - **[SofaKernel]** Remove unused function ""renumberConstraintId"" [#691]( https://github.com/sofa-framework/sofa/pull/691 ). **Plugins / Projects**; - [CImgPlugin] Less scary config warnings [#607]( https://github.com/sofa-framework/sofa/pull/607 ); - [HeadlessRecorder] Handle errors in target config [#608]( https://github.com/sofa-framework/sofa/pull/608 ); - [SofaGUI] Move GlutGUI to projects and remove all glut references in SofaFramework [#598]( https://github.com/sofa-framework/sofa/pull/598 ); - [SofaGUI] CMake: Remove useless if block in qt CMakelists.txt [#590]( https://github.com/sofa-framework/sofa/pull/590 ); - [SofaPhysicsAPI] FIX: remove the include of glut [#659]( https://github.com/sofa-framework/sofa/pull/659 ). ____________________________________________________________. ## [v17.12]( https://github.com/sofa-framework/sofa/tree/v17.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v17.06...v17.12 ). ### Deprecated. **Kernel modules**; - Will be removed in v17.12; - [All]; - SMP support [#457]( https://github.com/sofa-framework/sofa/pull/457 - no more maintained ); - [SofaDefaultType]; - LaparoscopicRigidType [#457]( https://github.com/sofa-framework/sofa/pull/457 ) - not used/dont compiled for a really long time. - Wil",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:300412,error,errors,300412,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['errors']
Availability,s://github.com/sofa-framework/sofa/pull/3919); - [MechanicalLoad] Replace doUpdateInternal by callback: ConstantFF [#3924](https://github.com/sofa-framework/sofa/pull/3924); - [FEM.Elastic] Implement buildStiffnessMatrix for FastTetrahedralCorotationalForceField [#3929](https://github.com/sofa-framework/sofa/pull/3929); - [all] Cosmetic: apply nested namespaces style [#3932](https://github.com/sofa-framework/sofa/pull/3932); - [Helper] Properly deprecate an already deprecated function [#3933](https://github.com/sofa-framework/sofa/pull/3933); - [all] Make local variables const [#3937](https://github.com/sofa-framework/sofa/pull/3937); - [Tests] Properly remove exported files [#3942](https://github.com/sofa-framework/sofa/pull/3942); - [all] Remove few lines of code that do nothing [#3946](https://github.com/sofa-framework/sofa/pull/3946); - [all] Implement empty buildDampingMatrix [#3948](https://github.com/sofa-framework/sofa/pull/3948); - [IO.Mesh] More debug info in the error message in MeshSTLLoader [#3949](https://github.com/sofa-framework/sofa/pull/3949); - [Sofa.Simulation] Remove Node::bwdInit [#3954](https://github.com/sofa-framework/sofa/pull/3954); - [Mapping/tests] Remove dependency on SceneCreator [#3955](https://github.com/sofa-framework/sofa/pull/3955); - [Simulation.Core] Deprecate unused classes *VisitorScheduler [#3957](https://github.com/sofa-framework/sofa/pull/3957); - [Helper.System] Introduce function append for paths [#3961](https://github.com/sofa-framework/sofa/pull/3961); - [Project] Start dev phase v23.12 [#3963](https://github.com/sofa-framework/sofa/pull/3963); - [all] Minor clean on indentation and warning [#3975](https://github.com/sofa-framework/sofa/pull/3975); - [MechanicalLoad] Remove empty draw function in LinearForceField [#3979](https://github.com/sofa-framework/sofa/pull/3979); - [tests] Restore commented unit tests [#3982](https://github.com/sofa-framework/sofa/pull/3982); - [CHANGELOG] Update further to latest changes in v23.,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:42580,error,error,42580,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"s://github.com/sofa-framework/sofa/pull/458 ); - FIX error in script for plotting advancedTimer output [#519]( https://github.com/sofa-framework/sofa/pull/519 ); - Fix python unicode data [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - [SofaSPHFluid]; - Fix invalid plugin initialization. [#467]( https://github.com/sofa-framework/sofa/pull/467 ); - [SofaVolumetricData]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SceneCreator]; - FIX build error with AppleClang 6.0.0.6000051 [#483]( https://github.com/sofa-framework/sofa/pull/483 ); - [THMPGSpatialHashing]; - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ). **Scenes**; - Fix scenes [#310]( https://github.com/sofa-framework/sofa/pull/310 ); - Fix scenes with bad RegularGrid position relative to 270 [#324]( https://github.com/sofa-framework/sofa/pull/324 ); - Fix scenes errors and crashes [#505]( https://github.com/sofa-framework/sofa/pull/505 ); - FIX all scenes failures 17.12 [#565]( https://github.com/sofa-framework/sofa/pull/565 ). ### Cleanings. **Kernel modules**; - [All]; - replace a bunch of std::cerr, std::cout, prinf to use msg_* instead [#339]( https://github.com/sofa-framework/sofa/pull/339 ); - More std::cout to msg_* cleaning [#370]( https://github.com/sofa-framework/sofa/pull/370 ); - FIX removed compilation warnings [#386]( https://github.com/sofa-framework/sofa/pull/386 ); - Clean BaseLoader & Remove un-needed #includes [#393]( https://github.com/sofa-framework/sofa/pull/393 ); - Remove last direct calls of OpenGL in modules [#425]( https://github.com/sofa-framework/sofa/pull/425 ); - warning removal [#454]( https://github.com/sofa-framework/sofa/pull/454 ); - Refactor SofaTest to cut dependencies [#471]( https://github.com/sofa-framework/sofa/pull/471 ); - Modularizing config.h [#475]( https://github.com/sofa-framework/sofa/pull/475 ); - EDIT: use PluginRepository instead of Utils::getPluginDirectory [#518]",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:320952,failure,failures,320952,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['failure'],['failures']
Availability,"ses in a manner consistent with the requirements of; this License. Each contributor grants you a non-exclusive, worldwide, royalty-free; patent license under the contributor's essential patent claims, to; make, use, sell, offer for sale, import and otherwise run, modify and; propagate the contents of its contributor version. In the following three paragraphs, a ""patent license"" is any express; agreement or commitment, however denominated, not to enforce a patent; (such as an express permission to practice a patent or covenant not to; sue for patent infringement). To ""grant"" such a patent license to a; party means to make such an agreement or commitment not to enforce a; patent against the party. If you convey a covered work, knowingly relying on a patent license,; and the Corresponding Source of the work is not available for anyone; to copy, free of charge and under the terms of this License, through a; publicly available network server or other readily accessible means,; then you must either (1) cause the Corresponding Source to be so; available, or (2) arrange to deprive yourself of the benefit of the; patent license for this particular work, or (3) arrange, in a manner; consistent with the requirements of this License, to extend the patent; license to downstream recipients. ""Knowingly relying"" means you have; actual knowledge that, but for the patent license, your conveying the; covered work in a country, or your recipient's use of the covered work; in a country, would infringe one or more identifiable patents in that; country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or; arrangement, you convey, or propagate by procuring conveyance of, a; covered work, and grant a patent license to some of the parties; receiving the covered work authorizing them to use, propagate, modify; or convey a specific copy of the covered work, then the patent license; you grant is automatically extended to all recipients of the c",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:44494,avail,available,44494,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,4,"['avail', 'down']","['available', 'downstream']"
Availability,te callbacks in VisualModelImpl (#1483) [#2245]( https://github.com/sofa-framework/sofa/pull/2245 ); - [SofaBaseVisual] Fix VisualModelImpl updateTextures callback to not call init method [#2298]( https://github.com/sofa-framework/sofa/pull/2298 ); - [SofaBaseVisual] Fix assert [#2417]( https://github.com/sofa-framework/sofa/pull/2417 ); - [SofaBoundaryCondition] Fix ProjectToLineConstraint_RemovingMeshTest.scn [#2241]( https://github.com/sofa-framework/sofa/pull/2241 ); - [SofaBoundaryCondition] Fix constraints in assembled systems [#2269]( https://github.com/sofa-framework/sofa/pull/2269 ); - [SofaConstraint] Fix BilateralInteractionConstraint's draw() [#2530]( https://github.com/sofa-framework/sofa/pull/2530 ); - [SofaConstraint] Fix crash when constraint correction is missing [#2222]( https://github.com/sofa-framework/sofa/pull/2222 ); - [SofaConstraint] fix segfault in GenericConstraintSolver [#2265]( https://github.com/sofa-framework/sofa/pull/2265 ); - [SofaCore] Fix potential memory failure on TopologyData Add method [#2459]( https://github.com/sofa-framework/sofa/pull/2459 ); - [SofaCore] FIX BaseData::getLinkPath() [#2354]( https://github.com/sofa-framework/sofa/pull/2354 ); - [SofaCore] Link: case where Data parent is invalid [#2211]( https://github.com/sofa-framework/sofa/pull/2211 ); - [SofaCore_simutest] Fix getobjects and testcomponentstate unit tests [#2326]( https://github.com/sofa-framework/sofa/pull/2326 ); - [SofaDeformable] Forgot minus sign in #2429 [#2448]( https://github.com/sofa-framework/sofa/pull/2448 ); - [SofaGUICommon] Fix configuration file for install with cxxopts [#2279]( https://github.com/sofa-framework/sofa/pull/2279 ); - [SofaGeneralEngine] Fix a typo in the PairBoxRoi.inl [#2324]( https://github.com/sofa-framework/sofa/pull/2324 ); - [SofaGeneralLoader] Make GridMeshCreator work again [#2473]( https://github.com/sofa-framework/sofa/pull/2473 ); - [SofaGuiQt] Fix graph update on startup [#2458]( https://github.com/sofa-framework/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:149421,failure,failure,149421,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['failure'],['failure']
Availability,"te copyright notice, and (2); tells the user that there is no warranty for the work (except to the; extent that warranties are provided), that licensees may convey the; work under this License, and how to view a copy of this License. If; the interface presents a list of user commands or options, such as a; menu, a prominent item in the list meets this criterion. 1. Source Code. The ""source code"" for a work means the preferred form of the work; for making modifications to it. ""Object code"" means any non-source; form of a work. A ""Standard Interface"" means an interface that either is an official; standard defined by a recognized standards body, or, in the case of; interfaces specified for a particular programming language, one that; is widely used among developers working in that language. The ""System Libraries"" of an executable work include anything, other; than the work as a whole, that (a) is included in the normal form of; packaging a Major Component, but which is not part of that Major; Component, and (b) serves only to enable use of the work with that; Major Component, or to implement a Standard Interface for which an; implementation is available to the public in source code form. A; ""Major Component"", in this context, means a major essential component; (kernel, window system, and so on) of the specific operating system; (if any) on which the executable work runs, or a compiler used to; produce the work, or an object code interpreter used to run it. The ""Corresponding Source"" for a work in object code form means all; the source code needed to generate, install, and (for an executable; work) run the object code and to modify the work, including scripts to; control those activities. However, it does not include the work's; System Libraries, or general-purpose tools or generally available free; programs which are used unmodified in performing those activities but; which are not part of the work. For example, Corresponding Source; includes interface definition files ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:25142,avail,available,25142,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['avail'],['available']
Availability,tests files to fix tests on dashboard [#2616]( https://github.com/sofa-framework/sofa/pull/2616 ); - [SofaCUDA] FIX linking error : needed the code of the destructor [#2708]( https://github.com/sofa-framework/sofa/pull/2708 ); - [SofaCUDA] Forward declaration in wrong namespace [#2923]( https://github.com/sofa-framework/sofa/pull/2923 ); - [SofaMatrix] Move CI setting to the plugin folder [#2579]( https://github.com/sofa-framework/sofa/pull/2579 ); - [SofaNewMat] Fix compilation [#2829]( https://github.com/sofa-framework/sofa/pull/2829 ); - [SofaSphFluid] Fix ParticleSource topologicalChanges use new callbacks mechanism [#2868]( https://github.com/sofa-framework/sofa/pull/2868 ); - [image] fix shadow variable [#2606]( https://github.com/sofa-framework/sofa/pull/2606 ); - [image] remove shadow variable [#2910]( https://github.com/sofa-framework/sofa/pull/2910 ); - [runSofa] Clean up in case GUI init fails [#3106]( https://github.com/sofa-framework/sofa/pull/3106 ); - [runSofa] Fix CMake error if all plugins are disabled [#3069]( https://github.com/sofa-framework/sofa/pull/3069 ); - [runSofa] Fix bug which makes sofa crash when changing a data in a node (issue #2919). [#3020]( https://github.com/sofa-framework/sofa/pull/3020 ); - [runSofa] Fix crash in runSofa when showing object with materials [#3018]( https://github.com/sofa-framework/sofa/pull/3018 ); - [sofaProjectExample] Resuscitate application with gui and simulation (cpp) [#2792]( https://github.com/sofa-framework/sofa/pull/2792 ). **Examples / Scenes**; - [examples] FIX benchmark_cubes.scn needs CollisionOBBCapsule [#2898]( https://github.com/sofa-framework/sofa/pull/2898 ); - [examples] Fix ProjectToPointconstraint scene by using MeshSpringForceField [#2827]( https://github.com/sofa-framework/sofa/pull/2827 ); - [examples] Fix falling cubes scene [#2831]( https://github.com/sofa-framework/sofa/pull/2831 ); - [examples] Fix plugins in a couple of scenes [#2810]( https://github.com/sofa-framework/sofa/pull/2810,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:117298,error,error,117298,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"thub.com/sofa-framework/sofa/pull/331 ); - [SofaPython]; - General cleaning [#304]( https://github.com/sofa-framework/sofa/pull/304 ); - Fix warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - print cleaning + SofaPython quaternion dot product [#404]( https://github.com/sofa-framework/sofa/pull/404 ); - [runSofa]; - Clean : remove non-ASCII chars in string [#327]( https://github.com/sofa-framework/sofa/pull/327 ). ____________________________________________________________. ## [v17.06]( https://github.com/sofa-framework/sofa/tree/v17.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v16.12...v17.06 ). ### New features. **For users**; - [SceneCreator]; - new methods to add basic 3D object: Cube, Cylinder, Sphere and Plane. In rigid or deformable.; - [GeneralTopology]; - SphereGridTopology component to create sphere grids, similar to CylinderGridTopology.; - Adds a new orientedBox dataField in BoxROI so that we can use it to either defined AABoxes or OrientedBox; - Minor improvement on the way warning/error message are presented to the users in runSofa. A single panel is now used instead of of two, it is always displayed, the Panel name also contains the number of message eg: ""Messages(5)""; - The Graph view is now displaying the type of message they contains.; - [runSofa]; - Autoload plugins, described in the user-custom file 'plugin_list.conf' if present; else 'plugin_list.conf.default' containing all compiled plugins and generated automatically by CMake. **For developpers**; - Add a Logger component that stores the history of messages into each sofa component.; - Implements new methods to write on-liner's conditional message:; msg_info_when(level<3) << ""This is a conditional info message""; - Implement an implicit version of each of the msg_* API allowing to write; msg_info() << ""Hello"" in place for msg_info(this) << Hello""; - CImgPlugin : creation of a dedicated plugin for image loading based on CImg [#185]( https://github.com/sofa-",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:324462,error,error,324462,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"thub.com/sofa-framework/sofa/pull/3591) ; - [SofaCUDA] Missing support for double precision floating-points [#3603](https://github.com/sofa-framework/sofa/pull/3603) ; - [SofaPhysicsAPI] Fix compilation by replacing use of SofaGUI by sofa::GUI::common [#3612](https://github.com/sofa-framework/sofa/pull/3612) ; - [SofaCUDA] No longer use deprecated texture references in TetraTLED [#3650](https://github.com/sofa-framework/sofa/pull/3650) ; - [MultiThreading] Empty string instead of null pointer in DataExchange [#3686](https://github.com/sofa-framework/sofa/pull/3686) ; - [Geomagic] Fix potential crash at exit when device has not been init [#3698](https://github.com/sofa-framework/sofa/pull/3698) ; - [SofaCUDA] Fix includes pointing to compatibility layer [#3727](https://github.com/sofa-framework/sofa/pull/3727) ; - [plugins] ArticulatedSystemMapping : adds size check & fixes typo [#3751](https://github.com/sofa-framework/sofa/pull/3751) . **Examples / Scenes**; - [All] Fix example scenes showing warnings or errors [#3526](https://github.com/sofa-framework/sofa/pull/3526) ; - [all] Update totalmass to totalMass [#3622](https://github.com/sofa-framework/sofa/pull/3622) . **Scripts / Tools**; - [CI, Scenes] Restore custom parameters for the scene-tests [#3674](https://github.com/sofa-framework/sofa/pull/3674) . ### Cleaning. **Architecture**; - [all] Lifecycle v22.06 [#3535](https://github.com/sofa-framework/sofa/pull/3535) ; - [Type] Quat: small optimization for axisToQuat() [#3559](https://github.com/sofa-framework/sofa/pull/3559) ; - [Config] Remove unused SOFA_WITH_THREADING option [#3565](https://github.com/sofa-framework/sofa/pull/3565) ; - [Project] Start v23.06 dev phase [#3573](https://github.com/sofa-framework/sofa/pull/3573) ; - [Cmake] Update warning replacement message for deprecated macro sofa_add_XX [#3611](https://github.com/sofa-framework/sofa/pull/3611) ; - [Sofa] Remove warnings [#3627](https://github.com/sofa-framework/sofa/pull/3627) ; - [Sofa.framewo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:60847,error,errors,60847,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['errors']
Availability,"tps://github.com/sofa-framework/sofa/pull/1904 ); - [SofaGuiQt] Fix compat file SofaGuiQt.h [#2044]( https://github.com/sofa-framework/sofa/pull/2044 ); - [SofaGuiQt] Fix compilation [#1889]( https://github.com/sofa-framework/sofa/pull/1889 ); - [SofaGuiQt] Fix compilation when SOFA_DUMP_VISITOR is enabled [#1914]( https://github.com/sofa-framework/sofa/pull/1914 ); - [SofaGuiQt] Use opaque API instead [#1918]( https://github.com/sofa-framework/sofa/pull/1918 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test [#1823]( https://github.com/sofa-framework/sofa/pull/1823 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test (2) [#1825]( https://github.com/sofa-framework/sofa/pull/1825 ); - **[SofaHelper]** Fix AdvandedTimer test with end() [#1781]( https://github.com/sofa-framework/sofa/pull/1781 ); - **[SofaHelper]** Fix compilation in kdtree [#1942]( https://github.com/sofa-framework/sofa/pull/1942 ); - **[SofaHelper]** Fix out of bounds error [#1868]( https://github.com/sofa-framework/sofa/pull/1868 ); - **[SofaHelper]** Fix the use of Read/WriteAccessorVector that is too permisive (in accessor.h) [#1900]( https://github.com/sofa-framework/sofa/pull/1900 ); - **[SofaHelper][SofaBoundaryCondition]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - **[SofaKernel]** Fix SimpleApi forward declaration of BaseObject and relocatable of Sofa.GL [#1760]( https://github.com/sofa-framework/sofa/pull/1760 ); - **[SofaKernel]** Removing double load() in Loaders [#2094]( https://github.com/sofa-framework/sofa/pull/2094 ); - [SofaLoader] Fix MeshObjLoader material parsing by using the proper locale. [#2200]( https://github.com/sofa-framework/sofa/pull/2200 ); - [SofaLoader] FIX Circular dependency in the update of MeshObjLoader [#2201]( https://github.com/sofa-framework/sofa/pull/2201 ); - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framew",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:187995,error,error,187995,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['error'],['error']
Availability,"tware and of promoting the sharing; and reuse of software generally. NO WARRANTY. 15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO; WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.; EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR; OTHER PARTIES PROVIDE THE LIBRARY ""AS IS"" WITHOUT WARRANTY OF ANY; KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR; PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE; LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME; THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN; WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY; AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU; FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR; CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE; LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING; RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A; FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF; SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH; DAMAGES. END OF TERMS AND CONDITIONS. How to Apply These Terms to Your New Libraries. If you develop a new library, and you want it to be of the greatest; possible use to the public, we recommend making it free software that; everyone can redistribute and change. You can do so by permitting; redistribution under these terms (or, alternatively, under the terms of the; ordinary General Public License). To apply these terms, attach the following notices to the library. It is; safest to attach them to the start of each source file to most effectively; convey the exclusion of warranty; and each file should have at least the; ""copyright"" line and a pointer to where the full notice is found. <one ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:24042,FAILURE,FAILURE,24042,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['FAILURE'],['FAILURE']
Availability,"tware and; of promoting the sharing and reuse of software generally. NO WARRANTY. 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY; FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN; OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES; PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED; OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF; MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS; TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE; PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,; REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING; WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR; REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,; INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING; OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED; TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY; YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER; PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE; POSSIBILITY OF SUCH DAMAGES. END OF TERMS AND CONDITIONS. How to Apply These Terms to Your New Programs. If you develop a new program, and you want it to be of the greatest; possible use to the public, the best way to achieve this is to make it; free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest; to attach them to the start of each source file to most effectively; convey the exclusion of warranty; and each file should have at least; the ""copyright"" line and a pointer to where the full notice is found. {description}; Copyright (C) {year} {fullname}. This program is free software; you can redistribute it and/or modify; i",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:14875,FAILURE,FAILURE,14875,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,5,['FAILURE'],['FAILURE']
Availability,"xed term (regardless of how the transaction is characterized), the; Corresponding Source conveyed under this section must be accompanied; by the Installation Information. But this requirement does not apply; if neither you nor any third party retains the ability to install; modified object code on the User Product (for example, the work has; been installed in ROM). The requirement to provide Installation Information does not include a; requirement to continue to provide support service, warranty, or updates; for a work that has been modified or installed by the recipient, or for; the User Product in which it has been modified or installed. Access to a; network may be denied when the modification itself materially and; adversely affects the operation of the network or violates the rules and; protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided,; in accord with this section must be in a format that is publicly; documented (and with an implementation available to the public in; source code form), and must require no special password or key for; unpacking, reading or copying. 7. Additional Terms. ""Additional permissions"" are terms that supplement the terms of this; License by making exceptions from one or more of its conditions.; Additional permissions that are applicable to the entire Program shall; be treated as though they were included in this License, to the extent; that they are valid under applicable law. If additional permissions; apply only to part of the Program, that part may be used separately; under those permissions, but the entire Program remains governed by; this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option; remove any additional permissions from that copy, or from any part of; it. (Additional permissions may be written to require their own; removal in certain cases when you modify the work.) You may place; additional p",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:36286,avail,available,36286,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['avail'],['available']
Deployability," ### Moved files. - Kernel modules of SOFA (SofaFramework, SofaBase, SofaCommon and SofaSimulation) have been moved to one common module SofaKernel, located at _sofa_root/SofaKernel_. SofaKernel is a pure LGPL module.; - code in _sofa_root/modules/sofa/simulation/_ has been splitted into three modules of SofaKernel: SofaSimulationCommon, SofaSimulationTree, SofaSimulationGraph; - MOVE the SofaPardiso module as a plugin; - Move OglTetrahedralModel into a new plugin called VolumetricRendering. - Minor moves; - Move ColorMap code to helper and let (Ogl)ColorMap from SofaOpenGLVisual doing OpenGL stuff; - Move TorsionForceField and ComplementaryROI into SOFA (those two components where in a deprecated repository _sofa_root/modules/sofa/components/_). - [Compliant]; - moving propagate_constraint_force_visitor in a helper file and minor cleaning of CompliantImplicitSolver. ### Improvements. - test examples are now running (on Jenkins for the Continuous Integration); - Add unit test for quaternions; - Improving default mouse manipulation while picking a dof; - MouseWheel events now propagated. - Minor improvements; - runSofa: force loading the SofaPython plugin if existing; - runSofa: adding clang-style formatting (option '-z clang'); - MechanicalObject: adding more visualisation colors for Rigids; - SofaPluginManager: Clear description and components when removing last plugin; - CMake: removing ""-Wno-deprecated-register"" compiler option that is only known by a few compilers; - Collision: add function setConstraintId in BaseConstraintSet; - SPtr: up to 10 parameters in constructor; - Add function in EigenBaseSparseMatrix in order to use eigen matrices with async solvers; - Add CUSPARSESolver in SofaCudaSolversPlugin, this solver uses cusparse library to solve a sparse triangular system on the GPU; - MeshBoundaryROI: allows specifying an input subset; - ColorMap: with face culling enabled; - ColorMap: adding a scale for the legend range values; - ImageViewer: adding new boo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:342968,Continuous,Continuous,342968,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['Continuous', 'Integrat']","['Continuous', 'Integration']"
Deployability," (AVX/AVX2 for msvc, march=native for gcc/clang)."" OFF); endif(); option(SOFA_ENABLE_FAST_MATH ""Enable floating-point model to fast (theoretically faster but can bring unexpected results/bugs)."" OFF). ### SOFA_DEV_TOOL; option(SOFA_WITH_DEVTOOLS ""Compile with development extra features."" ON). # Variables to expose in configured files; sofa_set_01(SOFA_NO_UPDATE_BBOX_ VALUE ${SOFA_NO_UPDATE_BBOX}) # build_option_bbox.h.in. # Create build and install versions of etc/sofa.ini:; # - In build dir, sofa.ini contains absolute paths to distant (in source) share/ and examples/ dirs; # - In install dir, sofa.ini (generated later via installedSofa.ini) contains relative paths to local share/ and examples/ dirs; set(SHARE_DIR ""${CMAKE_SOURCE_DIR}/share""); set(EXAMPLES_DIR ""${CMAKE_SOURCE_DIR}/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/sofa.ini""); set(SHARE_DIR ""../share/sofa""); set(EXAMPLES_DIR ""../share/sofa/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini"" DESTINATION etc RENAME sofa.ini COMPONENT applications). set(SOFACONFIGSRC_ROOT ""src/sofa""); set(HEADER_FILES; ${SOFACONFIGSRC_ROOT}/config.h.in; ${SOFACONFIGSRC_ROOT}/version.h.in; ${SOFACONFIGSRC_ROOT}/url.h.in; ); set(SOURCE_FILES; ${SOFACONFIGSRC_ROOT}/initSofaConfig.cpp # necessary to build a library; ); set(SOFACONFIG_BUILD_OPTIONS_SRC; ${SOFACONFIGSRC_ROOT}/config/sharedlibrary_defines.h.in; ${SOFACONFIGSRC_ROOT}/config/build_option_dump_visitor.h.in; ${SOFACONFIGSRC_ROOT}/config/build_option_bbox.h.in; ). # Header-only library (not handled well by macros & stuff so commented); # add_library(${PROJECT_NAME} INTERFACE); # target_sources(${PROJECT_NAME} INTERFACE ""$<BUILD_INTERFACE:${HEADER_FILES};${SOFACONFIG_BUILD_OPTIONS_SRC}>""). # Library; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOFACONFIG_BUILD_OPTIONS_SRC} ${SOURCE_FILES}). target_include_directories(${PROJECT_NAME} PUBLIC ""$<B",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:3608,install,installedSofa,3608,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['install'],['installedSofa']
Deployability," **Extlibs**; - [GTest] Fix with GCC11 [#2181]( https://github.com/sofa-framework/sofa/pull/2181 ). **Modules**; - [All] FIX build without SofaPython soft dependencies [#1829]( https://github.com/sofa-framework/sofa/pull/1829 ); - [All] FIX warnings during STC#11 [#2140]( https://github.com/sofa-framework/sofa/pull/2140 ); - [All] Fix compilation warning. [#1699]( https://github.com/sofa-framework/sofa/pull/1699 ); - [All] Fix invalid Memory access in MechanicalObject and Compliant_test [#1849]( https://github.com/sofa-framework/sofa/pull/1849 ); - [All] Fix debug compilation [#2223]( https://github.com/sofa-framework/sofa/pull/2223 ); - [All] Changes needed for v21.06 [#2226]( https://github.com/sofa-framework/sofa/pull/2226 ); - **[Sofa.Type]** Add forgotten function declaration, used in Debug [#1937]( https://github.com/sofa-framework/sofa/pull/1937 ); - **[Sofa.Type]** Add missing header in fixed_array [#2006]( https://github.com/sofa-framework/sofa/pull/2006 ); - **[SofaBaseCollision]** Fix pipeline warning test [#2132]( https://github.com/sofa-framework/sofa/pull/2132 ); - **[SofaBaseCollision]** Clean code related to intersection methods [#2178]( https://github.com/sofa-framework/sofa/pull/2178 ); - **[SofaBaseMechanics]** Clean DiagonalMass init [#2186]( https://github.com/sofa-framework/sofa/pull/2186 ); - **[SofaBaseMechanics]** Restore tests commented by mistake [#2104]( https://github.com/sofa-framework/sofa/pull/2104 ); - **[SofaBaseMechanics]** fixes reinit of BarycentricMapping [#1815]( https://github.com/sofa-framework/sofa/pull/1815 ); - **[SofaBaseMechanics]** Fix bug when deleting point. Mass vector was not well recomputed. [#2164]( https://github.com/sofa-framework/sofa/pull/2164 ); - **[SofaBaseMechanics_test]** Add more checks in DiagonalMass_test [#2183]( https://github.com/sofa-framework/sofa/pull/2183 ); - **[SofaBaseTopology]** Add security in TopologyData to check input Topology pointer [#2027]( https://github.com/sofa-framework/sofa/pull/2",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:182542,pipeline,pipeline,182542,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['pipeline'],['pipeline']
Deployability," - [All] Fix compilation with SOFA_NO_OPENGL flag [#1032]( https://github.com/sofa-framework/sofa/pull/1032 ); - [SofaConstraint] Convert static sized arrays to dynamic ones in GenericConstraintSolver [#920]( https://github.com/sofa-framework/sofa/pull/920 ); - **[SofaBaseMechanics]** Fix barycentric mapping again [#924]( https://github.com/sofa-framework/sofa/pull/924 ); - **[SofaBaseTopology]** Fix Crash when loading a vtk file generated by Gmsh using TetrahedronSetTopologyContainer as container [#1008]( https://github.com/sofa-framework/sofa/pull/1008 ); - **[SofaBaseTopology]** Fix right setDirty/clean topologyData [#889]( https://github.com/sofa-framework/sofa/pull/889 ); - **[SofaBaseTopology]**[DrawTools] Some fix/update in topology internal draw methods. [#877]( https://github.com/sofa-framework/sofa/pull/877 ); - **[SofaBaseTopology]** Yet another fix in Tetra2triangleTopologicalMapping [#998]( https://github.com/sofa-framework/sofa/pull/998 ); - **[SofaBaseTopology]** Clean, fix, upgrade Triangle2EdgeTopologicalMapping [#875]( https://github.com/sofa-framework/sofa/pull/875 ); - **[SofaBaseTopology]** Fix crashes in Tetra2TriangleTopologicalMapping [#960]( https://github.com/sofa-framework/sofa/pull/960 ); - [SofaBoundaryCondition] Fix draw function in ConstantForcefield [#1017]( https://github.com/sofa-framework/sofa/pull/1017 ); - **[SofaDeformable]** FIX issue 928 [#942]( https://github.com/sofa-framework/sofa/pull/942 ); - **[SofaDeformable]** Merge 2 ctor in SpringForceField [#948]( https://github.com/sofa-framework/sofa/pull/948 ); - [SofaExporter] FIX: out-of-tree include of SofaExporter header files [#975]( https://github.com/sofa-framework/sofa/pull/975 ); - [SofaGeneralLoader] Compute subElement by default for Gmsh format [#986]( https://github.com/sofa-framework/sofa/pull/986 ); - [SofaGeneralObjectInteraction] Fix AttachConstraint in case of FreeMotion (LM solving) [#949]( https://github.com/sofa-framework/sofa/pull/949 ); - [SofaGeneralObjectI",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:264943,upgrade,upgrade,264943,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['upgrade'],['upgrade']
Deployability, - [Core] Give threads a name on Windows [#3551](https://github.com/sofa-framework/sofa/pull/3551) ; - [Core] Display flags spelling suggestion [#3575](https://github.com/sofa-framework/sofa/pull/3575) ; - [Type] Construct matrices based on initializer-lists [#3584](https://github.com/sofa-framework/sofa/pull/3584) ; - [defaulttype] Template aliases for CRS matrices [#3592](https://github.com/sofa-framework/sofa/pull/3592) ; - [Simulation] SceneCheck can be added in plugins [#3597](https://github.com/sofa-framework/sofa/pull/3597) ; - [Contributing] Update file to mention good first issue [#3625](https://github.com/sofa-framework/sofa/pull/3625) ; - [Simulation] Error when trying to load a non-existing file [#3677](https://github.com/sofa-framework/sofa/pull/3677) ; - [all] Give reason when component cannot be created [#3682](https://github.com/sofa-framework/sofa/pull/3682) ; - [Type] Support structured binding for type::fixed_array [#3753](https://github.com/sofa-framework/sofa/pull/3753) ; - Update CONTRIBUTING.md [#3774](https://github.com/sofa-framework/sofa/pull/3774) . **Modules**; - [Collision.Response.Contact] Implement addKToMatrix for PenalityContactForceField [#3626](https://github.com/sofa-framework/sofa/pull/3626) ; - [Mapping.NonLinear] Implement missing applyJT [#3776](https://github.com/sofa-framework/sofa/pull/3776) ; - [Constraint] Add data to access constraint forces in LCPCS [#3796](https://github.com/sofa-framework/sofa/pull/3796) ; - [Rendering3D] OglModel: Use glMapBufferRange to update buffers [#3822](https://github.com/sofa-framework/sofa/pull/3822) ; - [Logging] Suggestion to better highlight warnings in console [#3914](https://github.com/sofa-framework/sofa/pull/3914) . **Plugins / Projects**; - [Multithreading] 2 steps to maximize coalescing memory access [#3572](https://github.com/sofa-framework/sofa/pull/3572) ; - [MultiThreading] Parallel springs [#3596](https://github.com/sofa-framework/sofa/pull/3596) ; - [MultiThreading] Prepare dat,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:53391,Update,Update,53391,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability," - [plugins] rename shadow variable [#3581](https://github.com/sofa-framework/sofa/pull/3581) ; - [SofaCUDA] Clean removed code and add useful one [#3632](https://github.com/sofa-framework/sofa/pull/3632) ; - [GUI.Qt, Multithreading] Fix compilation when SReal=float [#3637](https://github.com/sofa-framework/sofa/pull/3637) ; - [MultiThreading] Remove obsolete documentation [#3667](https://github.com/sofa-framework/sofa/pull/3667) ; - [Multithreading] Fix AnimationLoopParallelScheduler [#3676](https://github.com/sofa-framework/sofa/pull/3676) ; - [SofaCUDA] Remove BeamLinearMapping<Rigid3fTypes,.> [#3684](https://github.com/sofa-framework/sofa/pull/3684) ; - [GUI.Qt] Clean and fix in the ""inspector"" panel [#3713](https://github.com/sofa-framework/sofa/pull/3713) ; - [applications] rename shadow variable [#3738](https://github.com/sofa-framework/sofa/pull/3738) ; - [SofaPhysicsAPI] Remove unreachable code [#3771](https://github.com/sofa-framework/sofa/pull/3771) ; - [SofaCarving] Refresh : update file architecture and cmake [#3798](https://github.com/sofa-framework/sofa/pull/3798) ; - [BulletCollisionDetection] Revive project [#3800](https://github.com/sofa-framework/sofa/pull/3800) ; - [PreassembledMass] Make it external [#3802](https://github.com/sofa-framework/sofa/pull/3802) ; - [SofaCUDA] Move explicit template instantiations from CudaTypes.cpp to CudaMultiMapping.cpp [#3807](https://github.com/sofa-framework/sofa/pull/3807) ; - [plugins] Remove references to old plugins [#3960](https://github.com/sofa-framework/sofa/pull/3960); - [plugins] Remove references to external deleted plugins [#3980](https://github.com/sofa-framework/sofa/pull/3980). **Examples / Scenes**; - [Tutorials] Fix CMake with Sofa.GUI [#3624](https://github.com/sofa-framework/sofa/pull/3624) ; - [Scenes] Use ""floating-point type""-independent templates [#3635](https://github.com/sofa-framework/sofa/pull/3635) ; - [examples] Apply rest position in mappings [#3757](https://github.com/sofa-framework",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:65975,update,update,65975,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability, 0.23 (0.69 total); computeWeights: 1.92; ComputeLinearRegionSampling: 0.19; UpdateSampleMaterialProperties: 0.01. 3F-50E:; 3 Lloyds: 0.24 0.23 0.22 (0.69 total); computeWeights: 1.91; ComputeLinearRegionSampling: 0.32; UpdateSampleMaterialProperties: 0.02. 5F-6E:; 5 Lloyds: 0.24 0.23 0.25 0.24 0.24 (1.2 total); computeWeights: 2.91; ComputeLinearRegionSampling: 0.07; UpdateSampleMaterialProperties: 0. 5F-10E:; 5 Lloyds: 0.24 0.24 0.23 0.24 0.25 (1.18 total); computeWeights: 2.95; ComputeLinearRegionSampling: 0.07; UpdateSampleMaterialProperties: 0. 5F-20E:; 5 Lloyds: 0.23 0.24 0.23 0.24 0.23 (1.17 total); computeWeights: 2.91; ComputeLinearRegionSampling: 0.1; UpdateSampleMaterialProperties: 0.01. 5F-50E:; 5 Lloyds: 0.24 0.24 0.24 0.24 0.24 (1.2 total); computeWeights: 2.95; ComputeLinearRegionSampling: 0.32; UpdateSampleMaterialProperties: 0.01. 10F-6E:; 7 Lloyds: 0.25 0.24 0.25 0.25 0.24 0.25 0.24 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.13; UpdateSampleMaterialProperties: 0.01. 10F-10E:; 7 Lloyds: 0.25 0.25 0.24 0.25 0.24 0.25 0.24 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.12; UpdateSampleMaterialProperties: 0.02. 10F-20E:; 7 Lloyds: 0.25 0.24 0.25 0.24 0.24 0.24 0.24 (1.7 total); computeWeights: 4.93; ComputeLinearRegionSampling: 0.13; UpdateSampleMaterialProperties: 0.01. 10F-50E:; 7 Lloyds: 0.25 0.25 0.24 0.24 0.24 0.25 0.25 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.12; UpdateSampleMaterialProperties: 0.02. 20F-6E:; 9 Lloyds: 0.27 0.27 0.28 0.27 0.27 0.27 0.27 0.27 0.27 (2.44 total); computeWeights: 7.89; ComputeLinearRegionSampling: 0.29; UpdateSampleMaterialProperties: 0.05. 20F-10E:; 9 Lloyds: 0.27 0.27 0.27 0.26 0.27 0.27 0.27 0.27 0.26 (2.41 total); computeWeights: 7.98; ComputeLinearRegionSampling: 0.27; UpdateSampleMaterialProperties: 0.06. 20F-20E:; 9 Lloyds: 0.28 0.28 0.27 0.27 0.27 0.27 0.26 0.27 0.27 (2.44 total); computeWeights: 7.88; ComputeLinearRegionSampling: 0.28; Upd,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/comparison.txt:1354,Update,UpdateSampleMaterialProperties,1354,applications/projects/sofaInitTimer/output/comparison.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/comparison.txt,1,['Update'],['UpdateSampleMaterialProperties']
Deployability, 3.03; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0. File: scenes/steak.pscn using steak-seg.ppm 5 50; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.23; computeUniformSampling: 1.88; computeWeights: 2.96; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 10 6; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.25; computeUniformSampling: 3.6; computeWeights: 4.93; computeLinearRegionsSampling: 0.13; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg.ppm 10 10; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; computeUniformSampling: 3.6; computeWeights: 4.93; computeLinearRegionsSampling: 0.13; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg.ppm 10 20; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; computeUniformSampling: 3.59; computeWeights: 4.93; computeLinearRegionsSampling: 0.12; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg.ppm 10 50; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; computeUniformSampling: 3.6; computeWeights: 4.94; computeLinearRegionsSampling: 0.13; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 20 6; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.26; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.6; computeWeights: 8.1; computeLinearRegio,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:2721,update,updateSampleMaterialProperties,2721,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability," Crash in BoxROI when rest_position is not yet defined [#1031]( https://github.com/sofa-framework/sofa/pull/1031 ); - [SofaExporter] Add option for Regression_test to check first and last iteration [#1061]( https://github.com/sofa-framework/sofa/pull/1061 ); - [SofaGeneralAnimationLoop] Improve MechanicalMatrixMapper [#882]( https://github.com/sofa-framework/sofa/pull/882 ); - [SofaGraphComponent] Run SceneChecker at each load [#938]( https://github.com/sofa-framework/sofa/pull/938 ); - [SofaGuiQt] Change the keyboard shortcut associated to camera mode [#997]( https://github.com/sofa-framework/sofa/pull/997 ); - [SofaGuiQt] Add a profiling window based on AdvanceTimer records [#1028]( https://github.com/sofa-framework/sofa/pull/1028 ); - **[SofaKernel]** Some small changes in debug topology drawing [#952]( https://github.com/sofa-framework/sofa/pull/952 ); - **[SofaKernel]** Update Static Solver [#950]( https://github.com/sofa-framework/sofa/pull/950 ); - **[SofaKernel]** Rename TModels into CollisionModels and update all scenes [#1034]( https://github.com/sofa-framework/sofa/pull/1034 ); - **[SofaKernel]** Add a new video recorder class VideoRecorderFFMPEG [#883]( https://github.com/sofa-framework/sofa/pull/883 ); - **[SofaSimulationCore]** Cpu task and scheduled thread support [#970]( https://github.com/sofa-framework/sofa/pull/970 ); - **[SofaSimulationCore]** call BaseObject::draw() during the Transparent pass [#929]( https://github.com/sofa-framework/sofa/pull/929 ); - [SofaTopologyMapping] Clean, fix, upgrade Tetra2TriangleTopologicalMapping [#876]( https://github.com/sofa-framework/sofa/pull/876 ). **Plugins / Projects**; - [Geomagic] Add some better check at init and method to free driver [#925]( https://github.com/sofa-framework/sofa/pull/925 ); - [Icons] EDIT Sofa icons [#881]( https://github.com/sofa-framework/sofa/pull/881 ); - [MultiThreading] TaskAllocator Interface [#906]( https://github.com/sofa-framework/sofa/pull/906 ); - [PluginExample] Update exam",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:261027,update,update,261027,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability," DEFINES += SOFA_GUI_QTOGREVIEWER; DEFINES += SOFA_GUI_QGLVIEWER. Then, in the main window, you select the kind of viewer you; want. Qt will appear in gray, whereas QGLViewer and Ogre will be; available.; Warning, you must reload the scene when this change is made!. Viewers. The Viewers available now are:. QtViewer: uses openGL, derives a; QGLWidget in order to be embedded within Qt. This class will probably; not be maintained. Use QtGLViewer instead. QtGLViewer: uses the library; QGLViewer. Provides lots of functions to navigate through the scene.; More information at QGLViewer; Website. QtOgreViewer: Embed Ogre within a; Qwidget. Allows to get great visuals, through an intensive use of; shaders, materials.; Shadows are provided, but all the controls (show the mechanical; objects, force fields...) are disabled. ; Warning: Ogre is not provided by Sofa, you have to previously install; Ogre on your computer. ; The support works with Windows, Linux. ; - For Windows, the easiest way to proceed is to download and install; the SDK. ; - For Linux, you have to compile from the source. If Ogre's library; aren't installed in the default directory �/usr/local/lib/Ogre�; then, you have to set the; correct path in �YourSofaDirectory/share/config/plugins_unix.cfg�; To get it: Ogre; Website. QtOgreViewer; To; use this viewer, you must have Ogre installed on your computer. ; The configuration files are located in: �YourSofaDirectory/share/config/�. �plugins.cfg� describes the plugins used by Ogre for; Windows, and �plugins_unix.cfg� for... Linux.; By creating a .scene file with the same name as the simulation, you can; provide additional models, lights, visuals to the simulation( see Ogre; documentation for mode details ). This won't interact with Sofa, but; allows you to get a better render.; Additional textures, materials,; shaders... in Ogre, have to be put in �; YourSofaDirectory/share/textures� or �; YourSofaDirectory/share/materials� or; �YourSofaDirectory/share/shaders� ... T",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:4131,install,install,4131,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,1,['install'],['install']
Deployability, File: scenes/steak.pscn using steak-seg2.ppm 20 20; Lloyd_iteration 2.36; Lloyd_iteration 2.41; Lloyd_iteration 2.34; Lloyd_iteration 2.33; Lloyd_iteration 2.34; Lloyd_iteration 2.39; Lloyd_iteration 2.33; Lloyd_iteration 2.34; Lloyd_iteration 2.33; Lloyd_iteration 2.36; Lloyd_iteration 2.37; computeUniformSampling: 60.37; computeWeights: 63.36; computeLinearRegionsSampling: 1.61; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg2.ppm 20 50; Lloyd_iteration 2.35; Lloyd_iteration 2.32; Lloyd_iteration 2.33; Lloyd_iteration 2.38; Lloyd_iteration 2.32; Lloyd_iteration 2.32; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.36; Lloyd_iteration 2.32; Lloyd_iteration 2.32; computeUniformSampling: 59.97; computeWeights: 62.97; computeLinearRegionsSampling: 1.6; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg3.ppm 3 6; computeUniformSampling: 17.03; computeWeights: 128.26; computeLinearRegionsSampling: 2.31; updateSampleMaterialProperties: 0.17. File: scenes/steak.pscn using steak-seg3.ppm 3 10; computeUniformSampling: 17.07; computeWeights: 128.21; computeLinearRegionsSampling: 2.32; updateSampleMaterialProperties: 0.17. File: scenes/steak.pscn using steak-seg3.ppm 3 20; computeUniformSampling: 17.15; computeWeights: 128.5; computeLinearRegionsSampling: 2.3; updateSampleMaterialProperties: 0.17. File: scenes/steak.pscn using steak-seg3.ppm 3 50; computeUniformSampling: 17.13; computeWeights: 128.59; computeLinearRegionsSampling: 2.32; updateSampleMaterialProperties: 0.18. File: scenes/steak.pscn using steak-seg3.ppm 5 6; Lloyd_iteration 17.73; Lloyd_iteration 17.67; Lloyd_iteration 17.78; Lloyd_iteration 17.71; Lloyd_iteration 17.79; Lloyd_iteration 17.77; Lloyd_iteration 17.71; Lloyd_iteration 17.73; Lloyd_iteration 17.75; Lloyd_iteration 17.74; Lloyd_iteration 17.67; Lloyd_iteration 17.67; Lloyd_iteration 17.68; Lloyd_iteration 17.76; Lloyd_iteration 17.71; Lloyd_iteration 17.59; Lloyd_iteration 17.65,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:26456,update,updateSampleMaterialProperties,26456,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability," GNU LESSER GENERAL PUBLIC LICENSE; Version 2.1, February 1999. Copyright (C) 1991, 1999 Free Software Foundation, Inc.; 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA; Everyone is permitted to copy and distribute verbatim copies; of this license document, but changing it is not allowed. [This is the first released version of the Lesser GPL. It also counts; as the successor of the GNU Library Public License, version 2, hence; the version number 2.1.]. Preamble. The licenses for most software are designed to take away your; freedom to share and change it. By contrast, the GNU General Public; Licenses are intended to guarantee your freedom to share and change; free software--to make sure the software is free for all its users. This license, the Lesser General Public License, applies to some; specially designated software packages--typically libraries--of the; Free Software Foundation and other authors who decide to use it. You; can use it too, but we suggest you first think carefully about whether; this license or the ordinary General Public License is the better; strategy to use in any particular case, based on the explanations below. When we speak of free software, we are referring to freedom of use,; not price. Our General Public Licenses are designed to make sure that; you have the freedom to distribute copies of free software (and charge; for this service if you wish); that you receive source code or can get; it if you want it; that you can change the software and use pieces of; it in new free programs; and that you are informed that you can do; these things. To protect your rights, we need to make restrictions that forbid; distributors to deny you these rights or to ask you to surrender these; rights. These restrictions translate to certain responsibilities for; you if you distribute copies of the library or if you modify it. For example, if you distribute copies of the library, whether gratis; or for a fee, you must give the recipients all the rights",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:320,release,released,320,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['release'],['released']
Deployability, Lloyd_iteration 0.24; Lloyd_iteration 0.24; computeUniformSampling: 1.89; computeWeights: 2.98; computeLinearRegionsSampling: 0.05; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 5 10; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.23; computeUniformSampling: 1.88; computeWeights: 2.96; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0. File: scenes/steak.pscn using steak-seg.ppm 5 20; Lloyd_iteration 0.25; Lloyd_iteration 0.23; Lloyd_iteration 0.25; Lloyd_iteration 0.23; Lloyd_iteration 0.23; computeUniformSampling: 1.89; computeWeights: 3.03; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0. File: scenes/steak.pscn using steak-seg.ppm 5 50; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.23; computeUniformSampling: 1.88; computeWeights: 2.96; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 10 6; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.25; computeUniformSampling: 3.6; computeWeights: 4.93; computeLinearRegionsSampling: 0.13; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg.ppm 10 10; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; computeUniformSampling: 3.6; computeWeights: 4.93; computeLinearRegionsSampling: 0.13; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg.ppm 10 20; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; computeUniformSampling: 3.59; computeWeights: 4.93; computeLinearRegionsSampling: 0.12; updateSampleMaterialPrope,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:2062,update,updateSampleMaterialProperties,2062,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability, Lloyd_iteration 20.6; Lloyd_iteration 20.68; Lloyd_iteration 20.58; Lloyd_iteration 20.67; Lloyd_iteration 20.64; Lloyd_iteration 20.67; Lloyd_iteration 20.62; Lloyd_iteration 20.7; Lloyd_iteration 20.62; Lloyd_iteration 20.68; Lloyd_iteration 20.63; Lloyd_iteration 20.67; Lloyd_iteration 20.63; Lloyd_iteration 20.68; Lloyd_iteration 20.58; Lloyd_iteration 20.66; Lloyd_iteration 20.65; Lloyd_iteration 20.68; Lloyd_iteration 20.64; Lloyd_iteration 20.69; Lloyd_iteration 20.64; Lloyd_iteration 20.66; Lloyd_iteration 20.63; Lloyd_iteration 20.69; Lloyd_iteration 20.64; Lloyd_iteration 20.67; Lloyd_iteration 20.64; Lloyd_iteration 20.7; Lloyd_iteration 20.63; Lloyd_iteration 20.65; Lloyd_iteration 20.64; Lloyd_iteration 20.83; Lloyd_iteration 20.8; Lloyd_iteration 20.82; Lloyd_iteration 20.78; Lloyd_iteration 20.81; Lloyd_iteration 20.77; Lloyd_iteration 20.83; Lloyd_iteration 20.78; computeUniformSampling: 2369; computeWeights: 527.58; computeLinearRegionsSampling: 11.85; updateSampleMaterialProperties: 1.83. File: scenes/steak.pscn using steak-seg3.ppm 20 50; Lloyd_iteration 20.92; Lloyd_iteration 20.7; Lloyd_iteration 20.62; Lloyd_iteration 20.59; Lloyd_iteration 20.59; Lloyd_iteration 20.58; Lloyd_iteration 20.59; Lloyd_iteration 20.57; Lloyd_iteration 20.57; Lloyd_iteration 20.56; Lloyd_iteration 20.5; Lloyd_iteration 20.47; Lloyd_iteration 20.46; Lloyd_iteration 20.48; Lloyd_iteration 20.49; Lloyd_iteration 20.5; Lloyd_iteration 20.48; Lloyd_iteration 20.49; Lloyd_iteration 20.51; Lloyd_iteration 20.49; Lloyd_iteration 20.48; Lloyd_iteration 20.47; Lloyd_iteration 20.52; Lloyd_iteration 20.53; Lloyd_iteration 20.52; Lloyd_iteration 20.51; Lloyd_iteration 20.5; Lloyd_iteration 20.51; Lloyd_iteration 20.53; Lloyd_iteration 20.51; Lloyd_iteration 20.52; Lloyd_iteration 20.56; Lloyd_iteration 20.55; Lloyd_iteration 20.55; Lloyd_iteration 20.53; Lloyd_iteration 20.55; Lloyd_iteration 20.54; Lloyd_iteration 20.57; Lloyd_iteration 20.54; Lloyd_iteration 20.56; Lloyd_ite,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:54206,update,updateSampleMaterialProperties,54206,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability," Tutorial. Truth and initial cylinders; Simulation results. Description. 	In these tutorials, we show the different integration schemes and algorithms available to solve the system of Ordinary Differential Equations (ODE) at each step of the simulation. SOFA provides the following integration schemes:; ; Static integration scheme,; Explicit integration schemes,; Implicit integration schemes. Before going any further, it is important to know that state vectors in SOFA are saved in a component called ""State"" (see chapter ""State"" in the documentation).; For instance, when mechanical models are being solved, the user needs to add a ""MechanicalState"" component in the graph.; Inside the component, the format of storage for the state vector is a structure called MultiVector.; The size and the nature of the degrees of freedom is chosen by setting a ""template"" in the State component. Let us now go into details about the different ODE solvers in SOFA. First, the static integration is an integration which does not take the time into account. Such a static integration can be useful for checking the convergence of algorithms. Furthermore, different dynamic solvers have been implement in SOFA. Unlike static solvers, these solvers do take the dynamics of the system into account. However, depending on the aim of the computation, the solver has to be carefully chosen.; Let us review the basic differences between explicit and implicit solvers. Concerning the explicit solvers, they compute the new state variables from the state variables at the previous step.; The advantage is that explicit solvers can be fast, but the stability of the solver is not always granted. Very small time steps can be required to get satisfactory accuracy.; Moreover, such solvers are not suitable for every simulation. For example, explicit solvers do not compute cyclic loadings correctly, but could be advised in case of soft or high-mass objects. Concerning implicit solvers, they compute the new state variable",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html:985,integrat,integration,985,examples/Tutorials/Solvers/Solvers.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html,2,['integrat'],['integration']
Deployability," [#3235](https://github.com/sofa-framework/sofa/pull/3235) ; - [Constraint.Lagrangian] Make class abstract and add key function [#3240](https://github.com/sofa-framework/sofa/pull/3240) ; - [SolidMechanics.Spring] RestShapeSpringForceField: Fix addKToMatrix [#3249](https://github.com/sofa-framework/sofa/pull/3249) ; - [all] Split Tag & TagSet into separated files and fix missing includes. [#3277](https://github.com/sofa-framework/sofa/pull/3277) ; - [all] Minor warning fixes [#3306](https://github.com/sofa-framework/sofa/pull/3306) ; - [LinearSolver.Direct] Missing call to super init() [#3316](https://github.com/sofa-framework/sofa/pull/3316) ; - [LinearAlgebra] Fix BDT compilation [#3333](https://github.com/sofa-framework/sofa/pull/3333) ; - [BarycentricMappers] Fix potential division by 0 [#3383](https://github.com/sofa-framework/sofa/pull/3383) ; - [Engine.Analyze] ClusteringEngine: set correct values in load() [#3398](https://github.com/sofa-framework/sofa/pull/3398) ; - [Tests] Update tests to new modules [#3406](https://github.com/sofa-framework/sofa/pull/3406) ; - [Tests] Fix mutiple component init calls in several tests [#3447](https://github.com/sofa-framework/sofa/pull/3447) ; - [image, FEM, LinearSolver] fix Eigen3 assertion with SVD [#3452](https://github.com/sofa-framework/sofa/pull/3452) ; - [Constraint.lagrangian] Update BilateralInteractionConstraint namespace [#3468](https://github.com/sofa-framework/sofa/pull/3468) ; - [Topology.container] Fix missing TopologyElementType setting in SparseGridTopology init [#3475](https://github.com/sofa-framework/sofa/pull/3475) ; - [LinearSolver.Direct] Fix crashing unit tests [#3512](https://github.com/sofa-framework/sofa/pull/3512) ; - [LinearSolver.Direct] Segfault in SparseLDLSolver due to empty system matrix [#3529](https://github.com/sofa-framework/sofa/pull/3529) ; - [Tests] Update required plugins in tests [#3542](https://github.com/sofa-framework/sofa/pull/3542) . **Plugins / Projects**; - [SofaCUDA] FIX ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:80236,Update,Update,80236,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability, [#3978](https://github.com/sofa-framework/sofa/pull/3978); - [Diffusion] Fix buildStiffnessMatrix in TetrahedronDiffusionFEMForceField [#4012](https://github.com/sofa-framework/sofa/pull/4012); - [Core] Fix drawing of Objects when hiding Visual Models [#4044](https://github.com/sofa-framework/sofa/pull/4044); - [FEM.Elastic] Compute BBox in triangle FEM [#4061](https://github.com/sofa-framework/sofa/pull/4061); - [FEM.Elastic] Fix typo in error message [#4062](https://github.com/sofa-framework/sofa/pull/4062); - [LinearAlgebra] Fix matrix sizes when filtering [#4063](https://github.com/sofa-framework/sofa/pull/4063); - [MechanicalLoad] Fix compilation further to new RemovedData constructor [#4094](https://github.com/sofa-framework/sofa/pull/4094); - [MechanicalLoad] Fix plane force field buildStiffnessMatrix [#4098](https://github.com/sofa-framework/sofa/pull/4098); - [GUI.Qt] Fix crash if filename is null [#4102](https://github.com/sofa-framework/sofa/pull/4102); - [Tutorials] Update and fix oneTetrahedron tutorial [#4103](https://github.com/sofa-framework/sofa/pull/4103); - [Helper] Fix wrong function called when writing jpg file [#4111](https://github.com/sofa-framework/sofa/pull/4111); - [test] Make quaternion test deterministic and portable [#4126](https://github.com/sofa-framework/sofa/pull/4126); - [Constraint.Lagrangian.Solver] Fix default value for computeConstraintForces Data [#4129](https://github.com/sofa-framework/sofa/pull/4129); - [Sofa.GL] Fix doDrawVisual for OglLabel [#4142](https://github.com/sofa-framework/sofa/pull/4142); - [SofaSphFluid] Fix: scenes warnings and failing examples [#4149](https://github.com/sofa-framework/sofa/pull/4149); - [SofaSphFluid] Fix: internal draw method not restoring default parameters [#4150](https://github.com/sofa-framework/sofa/pull/4150); - [Mass] Fix UniformMass vertexMass value should not be set to 0 if nbr of points reach 0 [#4151](https://github.com/sofa-framework/sofa/pull/4151); - [Topology.Grid] Fix Sparse,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:35290,Update,Update,35290,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability," [Tests] Fix mutiple component init calls in several tests [#3447](https://github.com/sofa-framework/sofa/pull/3447) ; - [image, FEM, LinearSolver] fix Eigen3 assertion with SVD [#3452](https://github.com/sofa-framework/sofa/pull/3452) ; - [Constraint.lagrangian] Update BilateralInteractionConstraint namespace [#3468](https://github.com/sofa-framework/sofa/pull/3468) ; - [Topology.container] Fix missing TopologyElementType setting in SparseGridTopology init [#3475](https://github.com/sofa-framework/sofa/pull/3475) ; - [LinearSolver.Direct] Fix crashing unit tests [#3512](https://github.com/sofa-framework/sofa/pull/3512) ; - [LinearSolver.Direct] Segfault in SparseLDLSolver due to empty system matrix [#3529](https://github.com/sofa-framework/sofa/pull/3529) ; - [Tests] Update required plugins in tests [#3542](https://github.com/sofa-framework/sofa/pull/3542) . **Plugins / Projects**; - [SofaCUDA] FIX namespaces [#2935](https://github.com/sofa-framework/sofa/pull/2935) ; - [Plugins] Fix Cmake configuration w/o compat [#3209](https://github.com/sofa-framework/sofa/pull/3209) ; - [GUI.Qt] Fix MSAA sampling setup [#3220](https://github.com/sofa-framework/sofa/pull/3220) ; - [DrawToolGL] Fix ill-formed drawLines with multiple colors [#3260](https://github.com/sofa-framework/sofa/pull/3260) ; - [SofaSphFluid] Fix required plugin in scenes [#3272](https://github.com/sofa-framework/sofa/pull/3272) ; - [SofaCarving] Fix bug in CarvingManager when searching for target collision model [#3276](https://github.com/sofa-framework/sofa/pull/3276) ; - [GUI/runSofa] Cmake: tweaks and fixes [#3323](https://github.com/sofa-framework/sofa/pull/3323) ; - [CImgPlugin] Replace new keyword with creating unique pointers to properly clean up allocated memory. [#3365](https://github.com/sofa-framework/sofa/pull/3365) ; - [SofaMatrix] Fix crash if init fails in FillReducingOrdering [#3366](https://github.com/sofa-framework/sofa/pull/3366) ; - [SofaDistanceGrid] Set invalid state if cannot load me",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:81331,configurat,configuration,81331,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['configurat'],['configuration']
Deployability," at init and method to free driver [#925]( https://github.com/sofa-framework/sofa/pull/925 ); - [Icons] EDIT Sofa icons [#881]( https://github.com/sofa-framework/sofa/pull/881 ); - [MultiThreading] TaskAllocator Interface [#906]( https://github.com/sofa-framework/sofa/pull/906 ); - [PluginExample] Update example + add comments [#1053]( https://github.com/sofa-framework/sofa/pull/1053 ); - [Regression] ADD Regression as external project [#1052]( https://github.com/sofa-framework/sofa/pull/1052 ); - [runSofa] ADD possibility to jump to source/instanciation of selected component [#1013]( https://github.com/sofa-framework/sofa/pull/1013 ); - [SofaCUDA] Fix cuda with latest API [#912]( https://github.com/sofa-framework/sofa/pull/912 ); - [SofaPython] Add Sofa.hasViewer function [#964]( https://github.com/sofa-framework/sofa/pull/964 ); - [SofaPython] Change Base.addNewData [#1004]( https://github.com/sofa-framework/sofa/pull/1004 ). **Examples / Scenes**; - [examples] Rename TModels into CollisionModels and update all scenes [#1034]( https://github.com/sofa-framework/sofa/pull/1034 ). ### Bug Fixes. **Architecture**; - [CMake] Add check to prevent the inclusion of non-existant file in cmake 3.13 [#897]( https://github.com/sofa-framework/sofa/pull/897 ); - [CMake] Fix relocatable plugins [#1059]( https://github.com/sofa-framework/sofa/pull/1059 ); - [CMake] FIX: exporting options in SofaFrameworkConfig.cmake [#927]( https://github.com/sofa-framework/sofa/pull/927 ); - [CMake] FIX: wrong paths of installed headers in SofaBaseMechanics [#887]( https://github.com/sofa-framework/sofa/pull/887 ); - [CMake] FIX build/install plugins directory [#959]( https://github.com/sofa-framework/sofa/pull/959 ). **Modules**; - [All] Three small fixes in SofaBaseLinearSolver, SofaBoundaryCondition, runSofa [#931]( https://github.com/sofa-framework/sofa/pull/931 ); - [All] FIXES made for RoboSoft2019 [#1003]( https://github.com/sofa-framework/sofa/pull/1003 ); - [All] Fix some warnings [#873]",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:262709,update,update,262709,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability," choice to render the scene with; QtGLViewer and QtOgreViewer, just modify sofa-default.cfg as below:. # DEFINES += SOFA_GUI_QT ; DEFINES += SOFA_GUI_QTOGREVIEWER; DEFINES += SOFA_GUI_QGLVIEWER. Then, in the main window, you select the kind of viewer you; want. Qt will appear in gray, whereas QGLViewer and Ogre will be; available.; Warning, you must reload the scene when this change is made!. Viewers. The Viewers available now are:. QtViewer: uses openGL, derives a; QGLWidget in order to be embedded within Qt. This class will probably; not be maintained. Use QtGLViewer instead. QtGLViewer: uses the library; QGLViewer. Provides lots of functions to navigate through the scene.; More information at QGLViewer; Website. QtOgreViewer: Embed Ogre within a; Qwidget. Allows to get great visuals, through an intensive use of; shaders, materials.; Shadows are provided, but all the controls (show the mechanical; objects, force fields...) are disabled. ; Warning: Ogre is not provided by Sofa, you have to previously install; Ogre on your computer. ; The support works with Windows, Linux. ; - For Windows, the easiest way to proceed is to download and install; the SDK. ; - For Linux, you have to compile from the source. If Ogre's library; aren't installed in the default directory �/usr/local/lib/Ogre�; then, you have to set the; correct path in �YourSofaDirectory/share/config/plugins_unix.cfg�; To get it: Ogre; Website. QtOgreViewer; To; use this viewer, you must have Ogre installed on your computer. ; The configuration files are located in: �YourSofaDirectory/share/config/�. �plugins.cfg� describes the plugins used by Ogre for; Windows, and �plugins_unix.cfg� for... Linux.; By creating a .scene file with the same name as the simulation, you can; provide additional models, lights, visuals to the simulation( see Ogre; documentation for mode details ). This won't interact with Sofa, but; allows you to get a better render.; Additional textures, materials,; shaders... in Ogre, have to b",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:3995,install,install,3995,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,1,['install'],['install']
Deployability," collision response names [#2522]( https://github.com/sofa-framework/sofa/pull/2522 ); - [Sofa.BaseTopology] Remove 1D template for 2D/3D primitives in topology algorithms [#2291]( https://github.com/sofa-framework/sofa/pull/2291 ); - [Sofa.Core] Deprecate officially the usage of SofaOStream (sout, serr, sendl in Base) [#2292]( https://github.com/sofa-framework/sofa/pull/2292 ); - [Sofa.Core] Factorize mstate access [#2438]( https://github.com/sofa-framework/sofa/pull/2438 ); - [Sofa.Core] Use links instead of private std::list [#2364]( https://github.com/sofa-framework/sofa/pull/2364 ); - [Sofa.LinearAlgebra] Fix typo 'bloc' -> 'block' [#2404]( https://github.com/sofa-framework/sofa/pull/2404 ); - [SofaBaseLinearSolver] Clean MatrixLinearSolver [#2195]( https://github.com/sofa-framework/sofa/pull/2195 ); - [SofaBaseTopology] Disable method createTopologyHandler with a TopologyHandler* as parameter [#2393]( https://github.com/sofa-framework/sofa/pull/2393 ); - [SofaBaseTopology] Fix Last element index update in TopologyData [#2359]( https://github.com/sofa-framework/sofa/pull/2359 ); - [SofaCore] Clean RotationMatrix [#1995]( https://github.com/sofa-framework/sofa/pull/1995 ); - [SofaGUI] Replace boost's program_options with cxxopts [#2263]( https://github.com/sofa-framework/sofa/pull/2263 ); - [SofaGuiQt] FIX screenshot mechanism [#2507]( https://github.com/sofa-framework/sofa/pull/2507 ); - [SofaGeneralDeformable] Clean class TriangularBendingSpring and add tests [#2363]( https://github.com/sofa-framework/sofa/pull/2363 ); - [SofaKernel] Split the content of DataTracker.h in different headers files. [#2286]( https://github.com/sofa-framework/sofa/pull/2286 ); - [SofaLoader] Rename MeshObjLoader to MeshOBJLoader [#2428]( https://github.com/sofa-framework/sofa/pull/2428 ); - [SofaMiscFem] Quick clean unused parameters in Triangular and TriangleFEMForceField [#2283]( https://github.com/sofa-framework/sofa/pull/2283 ); - [SofaMiscForceField] Fix MeshMatrixMass duplica",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:137439,update,update,137439,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability, computeWeights: 8.01; computeLinearRegionsSampling: 0.28; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 20; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.27; computeUniformSampling: 6.6; computeWeights: 8.01; computeLinearRegionsSampling: 0.29; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 50; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.54; computeWeights: 8.05; computeLinearRegionsSampling: 0.29; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg2.ppm 3 6; computeUniformSampling: 2.09; computeWeights: 15.09; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 10; computeUniformSampling: 2.08; computeWeights: 15.01; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 20; computeUniformSampling: 2.1; computeWeights: 15.07; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 50; computeUniformSampling: 2.08; computeWeights: 14.87; computeLinearRegionsSampling: 0.25; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 5 6; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.11; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.04; Lloyd_iteration 2.09; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.04; Lloyd_iteration 2.06; Lloyd_iteration 2.09; Lloyd_iteration 2.05; Lloyd_iteration 2.05; Lloyd_iteration 2.05; Lloyd_iteration 2.09,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:5054,update,updateSampleMaterialProperties,5054,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability," documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an API to display primitives on screen. For now, only the OpenGL (fixed-pipeline version) implementation has been made.; - add a Logger; - add the diffusion effect in SOFA (heat transfer); - SOFA_USE_MASK compilation variable to activate or de-activate the masks in SOFA; - DataTracker: simple and elegant way to track Data in Engine; - extlibs: update cimg to version 1.7.3; - Add guidelines for contributions in CONTRIBUTING.md. ### Moved files. - Kernel modules of SOFA (SofaFramework, SofaBase, SofaCommon and SofaSimulation) have been moved to one common module SofaKernel, located at _sofa_root/SofaKernel_. SofaKernel is a pure LGPL module.; - code in _sofa_root/modules/sofa/simulation/_ has been splitted into three modules of SofaKernel: SofaSimulationCommon, SofaSimulationTree, SofaSimulationGraph; - MOVE the SofaPardiso module as a plugin; - Move OglTetrahedralModel into a new plugin called VolumetricRendering. - Minor moves; - Move ColorMap code to helper and let (Ogl)ColorMap from SofaOpenGLVisual doing OpenGL stuff; - Move TorsionForceField and ComplementaryROI into SOFA (those two components where in a deprecated repository _sofa_root/modules/sofa/components/_). - [Compliant]; - moving propagate_constraint_force_visitor",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:341934,update,update,341934,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability, file [#2580]( https://github.com/sofa-framework/sofa/pull/2580 ); - [SofaMatrix] Setup arithmetic precision for matrix export [#2724]( https://github.com/sofa-framework/sofa/pull/2724 ). **Examples / Scenes**; - [examples] An example showing a skybox [#2678]( https://github.com/sofa-framework/sofa/pull/2678 ); - [examples] Minor fix in file for topological change process [#3121]( https://github.com/sofa-framework/sofa/pull/3121 ); - [examples] Speed up the falling cubes [#2646]( https://github.com/sofa-framework/sofa/pull/2646 ). **Scripts / Tools**; - [tools] Update sofa launcher to use SofaPython3 [#2968]( https://github.com/sofa-framework/sofa/pull/2968 ). ### Bug Fixes. **Architecture**; - [CMake] FIX out-of-tree build [#2940]( https://github.com/sofa-framework/sofa/pull/2940 ); - [CMake] FIX out-of-tree build (2) [#2953]( https://github.com/sofa-framework/sofa/pull/2953 ); - [CMake] FIX out-of-tree configure [#2891]( https://github.com/sofa-framework/sofa/pull/2891 ); - [CMake] Fix install config files [#3031]( https://github.com/sofa-framework/sofa/pull/3031 ); - [Config][CMake] Fix include directories [#3023]( https://github.com/sofa-framework/sofa/pull/3023 ); - [project] Remove duplicate entry in clang-format [#3140]( https://github.com/sofa-framework/sofa/pull/3140 ). **Modules**; - [All] Fix compilation when SOFA_FLOATING_POINT_TYPE is set to float [#2560]( https://github.com/sofa-framework/sofa/pull/2560 ); - [All] Move addInput/addOutput from init() to constructor [#2825]( https://github.com/sofa-framework/sofa/pull/2825 ); - [All] Fix missing #include config.h or invalid ordering that disturb the factory's getTarget() to operate properly. [#2693]( https://github.com/sofa-framework/sofa/pull/2693 ); - [Component.IO.Mesh] Fix substring comparison [#2837]( https://github.com/sofa-framework/sofa/pull/2837 ); - [Container.Dynamic] Compute the bounding box of *GeometryAlgorithms [#3034]( https://github.com/sofa-framework/sofa/pull/3034 ); - [Controller] Fix,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:104440,install,install,104440,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability," libQGLViewer is licensed under two licenses: the GNU General Public License (GPL) ; and a commercial license. If you, your company or your organization use this library and do not wish to; release your complete source code, you are required to purchase a commercial license. Alternatively, if you are willing to follow the terms of the GPL (General Public License),; this Open source version of libQGLViewer allows you to develop, modify and distribute ; your software freely. You must contribute all your source code to the open source; community, according to the terms of the applicable open source license. You may use, distribute and copy the QGLViewer library under the terms of; GNU General Public License version 2 or version 3, which are displayed below. In addition, as a special exception, Gilles Debunne gives you certain ; additional rights, described in the file GPL_EXCEPTION in this package. -------------------------------------------------------------------------. 		 GNU GENERAL PUBLIC LICENSE; 		 Version 2, June 1991. Copyright (C) 1989, 1991 Free Software Foundation, Inc.; 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA; Everyone is permitted to copy and distribute verbatim copies; of this license document, but changing it is not allowed. 			 Preamble. The licenses for most software are designed to take away your; freedom to share and change it. By contrast, the GNU General Public; License is intended to guarantee your freedom to share and change free; software--to make sure the software is free for all its users. This; General Public License applies to most of the Free Software; Foundation's software and to any other program whose authors commit to; using it. (Some other Free Software Foundation software is covered by; the GNU Library General Public License instead.) You can apply it to; your programs, too. When we speak of free software, we are referring to freedom, not; price. Our General Public Licenses are designed to make sure that you; have the f",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:190,release,release,190,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['release'],['release']
Deployability," may convey verbatim copies of the Program's source code as you; receive it, in any medium, provided that you conspicuously and; appropriately publish on each copy an appropriate copyright notice;; keep intact all notices stating that this License and any; non-permissive terms added in accord with section 7 apply to the code;; keep intact all notices of the absence of any warranty; and give all; recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey,; and you may offer support or warranty protection for a fee. 5. Conveying Modified Source Versions. You may convey a work based on the Program, or the modifications to; produce it from the Program, in the form of source code under the; terms of section 4, provided that you also meet all of these conditions:. a) The work must carry prominent notices stating that you modified; it, and giving a relevant date. b) The work must carry prominent notices stating that it is; released under this License and any conditions added under section; 7. This requirement modifies the requirement in section 4 to; ""keep intact all notices"". c) You must license the entire work, as a whole, under this; License to anyone who comes into possession of a copy. This; License will therefore apply, along with any applicable section 7; additional terms, to the whole of the work, and all its parts,; regardless of how they are packaged. This License gives no; permission to license the work in any other way, but it does not; invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display; Appropriate Legal Notices; however, if the Program has interactive; interfaces that do not display Appropriate Legal Notices, your; work need not make them do so. A compilation of a covered work with other separate and independent; works, which are not by their nature extensions of the covered work,; and which are not combined with it s",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:29651,release,released,29651,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['release'],['released']
Deployability," more useful to permit linking proprietary applications with the; library. If this is what you want to do, use the GNU Library General; Public License instead of this License. -------------------------------------------------------------------------. GNU GENERAL PUBLIC LICENSE; Version 3, 29 June 2007. Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>; Everyone is permitted to copy and distribute verbatim copies; of this license document, but changing it is not allowed. Preamble. The GNU General Public License is a free, copyleft license for; software and other kinds of works. The licenses for most software and other practical works are designed; to take away your freedom to share and change the works. By contrast,; the GNU General Public License is intended to guarantee your freedom to; share and change all versions of a program--to make sure it remains free; software for all its users. We, the Free Software Foundation, use the; GNU General Public License for most of our software; it applies also to; any other work released this way by its authors. You can apply it to; your programs, too. When we speak of free software, we are referring to freedom, not; price. Our General Public Licenses are designed to make sure that you; have the freedom to distribute copies of free software (and charge for; them if you wish), that you receive source code or can get it if you; want it, that you can change the software or use pieces of it in new; free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you; these rights or asking you to surrender the rights. Therefore, you have; certain responsibilities if you distribute copies of the software, or if; you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether; gratis or for a fee, you must pass on to the recipients the same; freedoms that you received. You must make sure that they",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:19700,release,released,19700,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['release'],['released']
Deployability," on aliases for ""multiple projects"" out-of-tree build [#2566]( https://github.com/sofa-framework/sofa/pull/2566 ); - [SofaGeneralImplicitOdeSolver] Propagate position inside Newton loop [#2584]( https://github.com/sofa-framework/sofa/pull/2584 ); - [SofaGeneralObjectInteraction] Fix dependencies in cmake [#2659]( https://github.com/sofa-framework/sofa/pull/2659 ); - [SofaGuiCommon] Restore argv [#2802]( https://github.com/sofa-framework/sofa/pull/2802 ); - [SofaGuiQt] Fix some dll export macro missing [#2555]( https://github.com/sofa-framework/sofa/pull/2555 ); - [SofaGui] Restore and update CMake variables and modules [#3011]( https://github.com/sofa-framework/sofa/pull/3011 ); - [SofaHelper] Speedup ReadAccessor conversion operator [#2583]( https://github.com/sofa-framework/sofa/pull/2583 ); - [SofaMiscFEM] Fix TriangleFEMForceField and TriangularFEMForceField to have the same behavior [#2275]( https://github.com/sofa-framework/sofa/pull/2275 ); - [SofaMiscFem] FIX missing Strain Displacement matrix update in TriangularFEMForceField [#2706]( https://github.com/sofa-framework/sofa/pull/2706 ); - [SofaMiscForceField] Fix error while trying to compile a plugin depending on SofaGuiQt [#2707]( https://github.com/sofa-framework/sofa/pull/2707 ); - [SofaMiscForceField][SofaBaseMechanics] Add compile-time conditions to avoid compiling unrealistic cases [#2514]( https://github.com/sofa-framework/sofa/pull/2514 ); - [SofaMiscSolver] Accumulate mapped forces in NewmarkImplicitSolver [#2578]( https://github.com/sofa-framework/sofa/pull/2578 ); - [SofaSparseSolver] Add cmake configuration for Threads [#2739]( https://github.com/sofa-framework/sofa/pull/2739 ); - [SofaSparseSolver] Fix compilation error due to namespace change [#2543]( https://github.com/sofa-framework/sofa/pull/2543 ); - [SofaUserInteraction] Fix compat alias defined in the same scope [#3032]( https://github.com/sofa-framework/sofa/pull/3032 ); - [SolidMechanics] TopologySubsetIndices for RestShapeSpringsForce",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:113397,update,update,113397,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability, state if cannot load mesh [#3400](https://github.com/sofa-framework/sofa/pull/3400) ; - [SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt [#3423](https://github.com/sofa-framework/sofa/pull/3423) ; - [SofaNewmat] Fix modules [#3427](https://github.com/sofa-framework/sofa/pull/3427) ; - [plugins] Fix warnings in SofaSphFluid and image [#3439](https://github.com/sofa-framework/sofa/pull/3439) ; - [GUI.Qt] Restore QGLViewer for Qt6 [#3454](https://github.com/sofa-framework/sofa/pull/3454) ; - [GUI.Qt] Restore Stats (Charts) and DocBrowser for Qt6 [#3456](https://github.com/sofa-framework/sofa/pull/3456) ; - [Modeler] rename shadow variable [#3546](https://github.com/sofa-framework/sofa/pull/3546) ; - [GUI.Common] Cmake: Fix message when searching for Sofa.GL [#3549](https://github.com/sofa-framework/sofa/pull/3549) ; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid3D [#3557](https://github.com/sofa-framework/sofa/pull/3557); - [CollisionOBBCapsule] Fix generation of configuration file for installation [#3576](https://github.com/sofa-framework/sofa/pull/3576). **Examples / Scenes**; - [Examples] Fix & Clean ProjectToPlaneConstraint and RegularGridTopology_dimension scenes [#3453](https://github.com/sofa-framework/sofa/pull/3453) . ### Cleaning. **Architecture**; - [Core] Minor cleaning [#3176](https://github.com/sofa-framework/sofa/pull/3176) ; - [objectmodel] Remove redefinition of initData [#3190](https://github.com/sofa-framework/sofa/pull/3190) ; - [Sofa.Core] Remove shadow variables [#3212](https://github.com/sofa-framework/sofa/pull/3212) ; - [Sofa.Type] Constexpr Quaternion [#3221](https://github.com/sofa-framework/sofa/pull/3221) ; - [Helper] Reorganize accessors files and add tests [#3234](https://github.com/sofa-framework/sofa/pull/3234) ; - [Sofa.DefaultType] Constexpr VecTypes and RigidTypes [#3237](https://github.com/sofa-framework/sofa/pull/3237) ; - [Sofa.Core] Remove compilation warning because of un-used argument in BaseCl,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:83312,configurat,configuration,83312,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['configurat', 'install']","['configuration', 'installation']"
Deployability, steak-seg.ppm 3 20; Lloyd_iteration 0.23; Lloyd_iteration 0.23; Lloyd_iteration 0.24; computeUniformSampling: 0.94; computeWeights: 1.93; computeLinearRegionsSampling: 0.04; updateSampleMaterialProperties: 0. File: scenes/steak.pscn using steak-seg.ppm 3 50; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.23; computeUniformSampling: 0.96; computeWeights: 1.92; computeLinearRegionsSampling: 0.04; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 5 6; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.24; computeUniformSampling: 1.89; computeWeights: 2.98; computeLinearRegionsSampling: 0.05; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 5 10; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.23; computeUniformSampling: 1.88; computeWeights: 2.96; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0. File: scenes/steak.pscn using steak-seg.ppm 5 20; Lloyd_iteration 0.25; Lloyd_iteration 0.23; Lloyd_iteration 0.25; Lloyd_iteration 0.23; Lloyd_iteration 0.23; computeUniformSampling: 1.89; computeWeights: 3.03; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0. File: scenes/steak.pscn using steak-seg.ppm 5 50; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.23; computeUniformSampling: 1.88; computeWeights: 2.96; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 10 6; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.25; computeUniformSampling: 3.6; computeWeights: 4.93; computeLinearRegionsSampling: 0.13; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg.ppm 10 10; Lloyd_iteration 0.25; Lloyd_ite,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:1496,update,updateSampleMaterialProperties,1496,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability," the moc; target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>""). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.Common); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Visual); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SceneUtility); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFA_GUI_QT_TARGETS}). if(SOFA_DUMP_VISITOR_INFO); target_link_libraries(${PROJECT_NAME} PRIVATE tinyxml2::tinyxml2); endif(). if(Sofa.GL_FOUND); if(SOFA_GUI_QT_ENABLE_QGLVIEWER); target_link_libraries(${PROJECT_NAME} PUBLIC QGLViewer); endif(); endif(). if(SOFA_GUI_QT_ENABLE_NODEGRAPH); target_link_libraries(${PROJECT_NAME} PUBLIC NodeEditor::nodes); if (SOFA_BUILD_RELEASE_PACKAGE OR CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS NodeEditor::nodes); endif(); endif(). # FFMPEG; if(FFMPEG_EXEC_FOUND); install(PROGRAMS ""${FFMPEG_EXEC_FILE}"" DESTINATION bin COMPONENT applications); endif(). # Create build and install versions of .ini file for resources finding; set(RESOURCES_DIR ""${CMAKE_CURRENT_SOURCE_DIR}/${SRC_ROOT}/resources""); set(FFMPEG_EXEC_PATH ""${FFMPEG_EXEC_FILE}"") # absolute path for build dir, see .ini file; configure_file(${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in ""${CMAKE_BINARY_DIR}/etc/${PROJECT_NAME}.ini""); set(RESOURCES_DIR ""../share/sofa/gui/qt""); get_filename_component(FFMPEG_EXEC_FILENAME ""${FFMPEG_EXEC_FILE}"" NAME); set(FFMPEG_EXEC_PATH ""../bin/${FFMPEG_EXEC_FILENAME}"") # relative path for install dir, see .ini file; configure_file(${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini"" DESTINATION etc RENAME ${PROJECT_NAME}.ini COMPONENT applications). install(DIRECTORY ""${SRC_ROOT}/resources/"" DESTINATION ""share/sofa/gui/qt"" COMPONENT resources). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt:10921,install,install,10921,Sofa/GUI/Qt/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt,1,['install'],['install']
Deployability, with OCC >= 7.4 [#1310]( https://github.com/sofa-framework/sofa/pull/1310 ); - [Modeler] FIX link error on Windows [#1282]( https://github.com/sofa-framework/sofa/pull/1282 ); - [SofaMiscCollision] Fix topological changes in TetrahedronCollisionModel [#1354]( https://github.com/sofa-framework/sofa/pull/1354 ); - [SofaSphFluid] Fix broken behavior for ParticleSink and ParticleSource [#1278]( https://github.com/sofa-framework/sofa/pull/1278 ); - [SofaSphFluid] FIX .scene-tests [#1317]( https://github.com/sofa-framework/sofa/pull/1317 ); - [SofaOpenCL] Make it work with 20.06 [#1361]( https://github.com/sofa-framework/sofa/pull/1361 ); - [SofaPython] Restrict the plugin and its dependers to C++11 [#1284]( https://github.com/sofa-framework/sofa/pull/1284 ). **Examples / Scenes**; - [examples] Fix SurfacePressureForceField example [#1273]( https://github.com/sofa-framework/sofa/pull/1273 ); - [examples] Fix caduceus [#1392]( https://github.com/sofa-framework/sofa/pull/1392 ); - [examples] Update the scene StandardTetrahedralFEMForceField.scn [#1064]( https://github.com/sofa-framework/sofa/pull/1064 ). ### Cleanings. **Architecture**. **Modules**; - [All] Clean namespace for some classes [#1422]( https://github.com/sofa-framework/sofa/pull/1422 ); - [All] Fix warnings due to visibility attribute [#1421]( https://github.com/sofa-framework/sofa/pull/1421 ); - [All] Clean due to doc [#1398]( https://github.com/sofa-framework/sofa/pull/1398 ); - [All] Clean warnings [#1376]( https://github.com/sofa-framework/sofa/pull/1376 ); - [All] Fix minor warnings [#1388]( https://github.com/sofa-framework/sofa/pull/1388 ); - [All] Fix warnings generated due to change in Aspects [#1329]( https://github.com/sofa-framework/sofa/pull/1329 ); - [All] Minor changes in comment or format [#1411]( https://github.com/sofa-framework/sofa/pull/1411 ); - [All] Multiple fixes scenes [#1289]( https://github.com/sofa-framework/sofa/pull/1289 ); - [All] Remove all DISPLAY_TIME define [#1267]( https://g,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:238379,Update,Update,238379,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability, with end() [#1781]( https://github.com/sofa-framework/sofa/pull/1781 ); - **[SofaHelper]** Fix compilation in kdtree [#1942]( https://github.com/sofa-framework/sofa/pull/1942 ); - **[SofaHelper]** Fix out of bounds error [#1868]( https://github.com/sofa-framework/sofa/pull/1868 ); - **[SofaHelper]** Fix the use of Read/WriteAccessorVector that is too permisive (in accessor.h) [#1900]( https://github.com/sofa-framework/sofa/pull/1900 ); - **[SofaHelper][SofaBoundaryCondition]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - **[SofaKernel]** Fix SimpleApi forward declaration of BaseObject and relocatable of Sofa.GL [#1760]( https://github.com/sofa-framework/sofa/pull/1760 ); - **[SofaKernel]** Removing double load() in Loaders [#2094]( https://github.com/sofa-framework/sofa/pull/2094 ); - [SofaLoader] Fix MeshObjLoader material parsing by using the proper locale. [#2200]( https://github.com/sofa-framework/sofa/pull/2200 ); - [SofaLoader] FIX Circular dependency in the update of MeshObjLoader [#2201]( https://github.com/sofa-framework/sofa/pull/2201 ); - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ); - [SofaMeshCollision] Fix: windows debug linkage of class EmptyFilter [#1839]( https://github.com/sofa-framework/sofa/pull/1839 ); - [SofaMiscCollision] Contact response order [#2134]( https://github.com/sofa-framework/sofa/pull/2134 ); - [SofaMiscCollision] Fix config.in cmake file for export [#2052]( https://github.com/sofa-framework/sofa/pull/2052 ); - [SofaMiscFEM] Minor changes in TrianglePressureFF and TriangularFEMFF [#1779]( https://github.com/sofa-framework/sofa/pull/1779 ); - [SofaMiscForceField] Clean MeshMatrixMass_test and add more tests [#2191]( https://github.com/sofa-framework/sofa/pull/2191 ); - [SofaMiscTopology_test] Replace inheritence of SofaTest by BaseSimulation_test and fix test [#1909]( https://github.com/sofa-framework/sofa/pull/1909 ); - [SofaOpenG,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:188797,update,update,188797,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,""" are also used for larger topics: architecture, future of SOFA, long term dev, etc. Please **DO NOT create an issue for questions or support**. Use [the GitHub Discussions](https://github.com/sofa-framework/sofa/discussions) instead. When creating an issue, pay attention to the following tips:. - **Check existing issues**. What you are running into may have been addressed already.; - **Set the right label** to your issue among our label list or propose them in the description.; - **Be clear** about what your problem is: what was the expected outcome, what happened instead? Detail how someone else can recreate the problem.; - If your issue reports a bug or any abnormal behavior in SOFA, a **test highlighting the issue** should be written and pull requested. For more information on issues, check out [this GitHub guide](https://guides.github.com/features/issues/). . # Pull requests. If you are able to patch the bug or add the feature yourself – fantastic, make a pull request with the code! Be sure you have read any documents on contributing and you understand [the SOFA license](https://github.com/sofa-framework/sofa/blob/master/LICENCE.txt). Once you have submitted a pull request the maintainer(s) can compare your branch to the existing one and decide whether or not to incorporate (pull in) your changes. ### Reminder - How to pull request (from GitHub documentation). - **[Fork](http://guides.github.com/activities/forking/)** the repository and clone it locally.; - [Connect your clone](https://help.github.com/articles/configuring-a-remote-for-a-fork/) to [the original **upstream** repository](https://github.com/sofa-framework/sofa/) by adding it as a remote.; - **Create a branch** for your changes.; - Make your changes.; - Pull in changes from upstream often to [**sync your fork**](https://help.github.com/articles/syncing-a-fork/) so that merge conflicts will be less likely in your pull request.; - [**Create a pull request**](https://help.github.com/articles/creating-a-",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:3779,patch,patch,3779,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['patch'],['patch']
Deployability,"""; DEPENDS development; ); cpack_ifw_configure_component(GTest_headers; DISPLAY_NAME ""GTest Headers""; DEPENDS development; ); cpack_ifw_configure_component(libraries; DISPLAY_NAME ""Libraries""; DEPENDS development; ); cpack_ifw_configure_component(resources; DISPLAY_NAME ""Resources""; DEPENDS runtime; ); endif(); ######################. #######################; # NSIS Generator config; if(CPACK_BINARY_NSIS); # There is a bug in NSIS that does not handle full unix paths properly. Make; # sure there is at least one set of four (4) backslashes.; set(CPACK_NSIS_MUI_ICON ""${CMAKE_SOURCE_DIR}/applications/projects/runSofa/runSofa.ico""); set(CPACK_NSIS_INSTALLED_ICON_NAME ""bin\\\\runSofa.exe""); set(CPACK_NSIS_DISPLAY_NAME ${CPACK_PACKAGE_NAME}); set(CPACK_NSIS_PACKAGE_NAME ${CPACK_PACKAGE_NAME}); set(CPACK_NSIS_HELP_LINK ${CPACK_PACKAGE_HOMEPAGE_URL}); set(CPACK_NSIS_URL_INFO_ABOUT ${CPACK_PACKAGE_HOMEPAGE_URL}); set(CPACK_NSIS_MODIFY_PATH ON); set(CPACK_NSIS_CONTACT ""contact@sofa-framework.org""); set(CPACK_NSIS_INSTALL_ROOT ""$PROFILE""); string(CONCAT EXTRA_INSTALL_COMMAND ""ExecShell \\\""open\\\"" \\\""https://www.sofa-framework.org/thank-you?sofa="" ${CPACK_PACKAGE_VERSION} ""&os=windows\\\""""); set(CPACK_NSIS_EXTRA_INSTALL_COMMANDS ""${EXTRA_INSTALL_COMMAND}""); set(CPACK_NSIS_MENU_LINKS; ""https://www.sofa-framework.org/documentation/"" ""SOFA User Documentation""; ""https://www.sofa-framework.org/api/"" ""SOFA Developper API""; ""https://github.com/sofa-framework/sofa/discussions"" ""SOFA Support""); endif(); #######################. if(APPLE AND SOFA_BUILD_APP_BUNDLE); set(CPACK_BINARY_DRAGNDROP ON); set(CPACK_GENERATOR DragNDrop). # Monolithic install containing everything; unset(CPACK_COMPONENTS_ALL); set(CPACK_MONOLITHIC_INSTALL ON). # Force CPack install dir to $ENV{DESTDIR}/runSofa.app/Contents/MacOS; # CPack always adds ""$ENV{DESTDIR}"" before CPACK_INSTALL_PREFIX; set(CPACK_SET_DESTDIR TRUE); set(CPACK_INSTALL_PREFIX ""/runSofa.app/Contents/MacOS""); endif(). include(CPack); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:17627,install,install,17627,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,2,['install'],['install']
Deployability,"""Installation Information"" for a User Product means any methods,; procedures, authorization keys, or other information required to install; and execute modified versions of a covered work in that User Product from; a modified version of its Corresponding Source. The information must; suffice to ensure that the continued functioning of the modified object; code is in no case prevented or interfered with solely because; modification has been made. If you convey an object code work under this section in, or with, or; specifically for use in, a User Product, and the conveying occurs as; part of a transaction in which the right of possession and use of the; User Product is transferred to the recipient in perpetuity or for a; fixed term (regardless of how the transaction is characterized), the; Corresponding Source conveyed under this section must be accompanied; by the Installation Information. But this requirement does not apply; if neither you nor any third party retains the ability to install; modified object code on the User Product (for example, the work has; been installed in ROM). The requirement to provide Installation Information does not include a; requirement to continue to provide support service, warranty, or updates; for a work that has been modified or installed by the recipient, or for; the User Product in which it has been modified or installed. Access to a; network may be denied when the modification itself materially and; adversely affects the operation of the network or violates the rules and; protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided,; in accord with this section must be in a format that is publicly; documented (and with an implementation available to the public in; source code form), and must require no special password or key for; unpacking, reading or copying. 7. Additional Terms. ""Additional permissions"" are terms that supplement the terms of this; License by making excepti",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:35526,install,install,35526,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,2,['install'],"['install', 'installed']"
Deployability,# Articulated Arm . ![](images/robot.png). ## Requirements . - [SofaPython3](https://github.com/sofa-framework/SofaPython3) plugin for SOFA. ### Optional. To use a GUI to control the robot you need to install [tkinter](https://docs.python.org/3/library/tkinter.html) for python. For instance on Ubuntu:. `sudo apt-install python-tk`. and uncomment the following lines in `robot.py`:. ```python; from robotGUI import RobotGUI # Uncomment this if you want to use the GUI; ```; ```python; robot.addObject(RobotGUI(robot=robot)) # Uncomment this if you want to use the GUI; ```. ## How to run the simulation. ```bash; runSofa robot.py; ```. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm/README.md:201,install,install,201,applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/ArticulatedSystemPlugin/examples/ArticulatedArm/README.md,2,['install'],['install']
Deployability,"# Post-install scripts; if(NOT SOFA_BUILD_RELEASE_PACKAGE); return(); endif(). find_package(Qt5 COMPONENTS Gui REQUIRED); get_target_property(qt5gui_loc Qt5::Gui LOCATION_RELEASE); get_filename_component(QT_LIB_DIR ""${qt5gui_loc}"" DIRECTORY); if(QT_LIB_DIR MATCHES ""\.framework$""); get_filename_component(QT_LIB_DIR ""${QT_LIB_DIR}"" DIRECTORY); endif(); get_target_property(qjpeg_loc Qt5::QJpegPlugin LOCATION_RELEASE); get_filename_component(imageformats_dir ""${qjpeg_loc}"" DIRECTORY); get_filename_component(plugins_dir ""${imageformats_dir}"" DIRECTORY); get_filename_component(QT_DATA_DIR ""${plugins_dir}"" DIRECTORY). message(""QT_LIB_DIR = ${QT_LIB_DIR}""); message(""QT_DATA_DIR = ${QT_DATA_DIR}""). if(CMAKE_SYSTEM_NAME STREQUAL Linux); install(CODE ""file(WRITE; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/bin/qt.conf\""; \""[Paths]\\n Prefix = ..\\n Plugins = bin\\n LibraryExecutables = bin\""; )""; COMPONENT resources); install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/linux-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""${CMAKE_BINARY_DIR}\""; \""\$ENV{DESTDIR\}\${CMAKE_INSTALL_PREFIX\}\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; )""; COMPONENT resources); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); if(SOFA_BUILD_APP_BUNDLE); include(macdeployqt) # set MACDEPLOYQT_EXECUTABLE; install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/macos-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/../..\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; \""${MACDEPLOYQT_EXECUTABLE}\""; )""; COMPONENT resources); else(); install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/macos-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; )""; COMPONENT resources); endif(); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); install(CODE ""file(WRITE; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/bin/qt.conf\""; \""[Paths]\\n P",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/postinstall-fixup/CMakeLists.txt:7,install,install,7,tools/postinstall-fixup/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/postinstall-fixup/CMakeLists.txt,3,['install'],['install']
Deployability,# SOFA Changelog. ## [v24.06.00]( https://github.com/sofa-framework/sofa/tree/v24.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v23.12..v24.06 ). ### Highlighted contributions. - [GitHub] Add a python-based action managing discussions [#4268](https://github.com/sofa-framework/sofa/pull/4268); - [plugins] Update license to LGPL of remaining files [#4425](https://github.com/sofa-framework/sofa/pull/4425); - [LinearSystem] Introduce components to map matrices [#4490](https://github.com/sofa-framework/sofa/pull/4490); - [SofaSphFluid] Externalize SofaSphFluid [#4526](https://github.com/sofa-framework/sofa/pull/4526); - [LinearSystem] Introduce ConstantSparsityProjectionMethod [#4552](https://github.com/sofa-framework/sofa/pull/4552); - [HyperElastic] Introduce stable Neo Hookean hyperelastic material [#4603](https://github.com/sofa-framework/sofa/pull/4603); - [LinearSystem] Cache mapped mass matrix [#4625](https://github.com/sofa-framework/sofa/pull/4625); - [Constraint.Lagrangian] Add fixed lagrangian constraint [#4646](https://github.com/sofa-framework/sofa/pull/4646). ### Breaking. - [Type] RGBAColor: remove inheritance from type::fixed_array and use std::array to store its components [#4263](https://github.com/sofa-framework/sofa/pull/4263); - [All] ColorMap uses RGBAColor [#4270](https://github.com/sofa-framework/sofa/pull/4270); - [Type] Refactor Vec [#4296](https://github.com/sofa-framework/sofa/pull/4296); - [SolidMechanics.Springs] Cleaning of QuadularBendingSprings [#4304](https://github.com/sofa-framework/sofa/pull/4304); - [Topology.Container.Dynamic] GeometryAlgorithms: support generic State [#4362](https://github.com/sofa-framework/sofa/pull/4362); - [LinearSolver.Direct] Introduce other ordering methods in SparseLDL through Eigen [#4370](https://github.com/sofa-framework/sofa/pull/4370); - [Constraint.Lagrangian.Solver] Fix assert in GenericConstraintSolver [#4389](https://github.com/sofa-framework/sofa/pull/4389); - [Type] Refactor ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:328,Update,Update,328,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,#1513]( https://github.com/sofa-framework/sofa/pull/1513 ); - [All] Fix compilation with flag NO_OPENGL [#1478]( https://github.com/sofa-framework/sofa/pull/1478 ); - [All] Fix many warnings [#1682]( https://github.com/sofa-framework/sofa/pull/1682 ); - [All] Remove SMP-related Code [#1613]( https://github.com/sofa-framework/sofa/pull/1613 ); - [All] Replace all sofa::defaulttypes::RGBAColor to sofa::helper::types::RGBAColor [#1463]( https://github.com/sofa-framework/sofa/pull/1463 ); - [Doc] Remove Inria Foundation mention from CONTRIBUTING [#1451]( https://github.com/sofa-framework/sofa/pull/1451 ); - [SofaBaseTopology] Fix ambiguity causing compilation error with MSVC [#1577]( https://github.com/sofa-framework/sofa/pull/1577 ); - [SofaBaseTopology] Rework method getIntersectionPointWithPlane [#1545]( https://github.com/sofa-framework/sofa/pull/1545 ); - [SofaBaseVisual][SofaDeformable] Clean some codes [#1449]( https://github.com/sofa-framework/sofa/pull/1449 ); - [SofaDeformable] Update RestShapeSpringsForceField [#1431]( https://github.com/sofa-framework/sofa/pull/1431 ); - [SofaGeneralEngine] Improve mesh barycentric mapper engine [#1487]( https://github.com/sofa-framework/sofa/pull/1487 ); - [SofaGeneralEngine] Remove useless create() function in some components [#1622]( https://github.com/sofa-framework/sofa/pull/1622 ); - [SofaGuiQt] Move libQGLViewer lib into its module [#1617]( https://github.com/sofa-framework/sofa/pull/1617 ); - [SofaHaptics] Small fix on LCPForceFeedback haptic rendering [#1537]( https://github.com/sofa-framework/sofa/pull/1537 ); - **[SofaHelper]** DrawTool uses RGBAColor now (instead of Vec4f) [#1626]( https://github.com/sofa-framework/sofa/pull/1626 ); - **[SofaHelper]** Remove OpenGL dependency in vector_device [#1646]( https://github.com/sofa-framework/sofa/pull/1646 ); - **[SofaKernel]** Clean namespace BarycentricMapper [#1571]( https://github.com/sofa-framework/sofa/pull/1571 ); - **[SofaKernel]** Factorize some code for mainte,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:226645,Update,Update,226645,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"${qt5gui_loc}"" DIRECTORY); if(QT_LIB_DIR MATCHES ""\.framework$""); get_filename_component(QT_LIB_DIR ""${QT_LIB_DIR}"" DIRECTORY); endif(); get_target_property(qjpeg_loc Qt5::QJpegPlugin LOCATION_RELEASE); get_filename_component(imageformats_dir ""${qjpeg_loc}"" DIRECTORY); get_filename_component(plugins_dir ""${imageformats_dir}"" DIRECTORY); get_filename_component(QT_DATA_DIR ""${plugins_dir}"" DIRECTORY). message(""QT_LIB_DIR = ${QT_LIB_DIR}""); message(""QT_DATA_DIR = ${QT_DATA_DIR}""). if(CMAKE_SYSTEM_NAME STREQUAL Linux); install(CODE ""file(WRITE; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/bin/qt.conf\""; \""[Paths]\\n Prefix = ..\\n Plugins = bin\\n LibraryExecutables = bin\""; )""; COMPONENT resources); install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/linux-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""${CMAKE_BINARY_DIR}\""; \""\$ENV{DESTDIR\}\${CMAKE_INSTALL_PREFIX\}\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; )""; COMPONENT resources); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); if(SOFA_BUILD_APP_BUNDLE); include(macdeployqt) # set MACDEPLOYQT_EXECUTABLE; install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/macos-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/../..\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; \""${MACDEPLOYQT_EXECUTABLE}\""; )""; COMPONENT resources); else(); install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/macos-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; )""; COMPONENT resources); endif(); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); install(CODE ""file(WRITE; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/bin/qt.conf\""; \""[Paths]\\n Prefix = ..\\n Plugins = bin\\n LibraryExecutables = bin\""; )""; COMPONENT resources); install(CODE ""execute_process(COMMAND bash; \""${CMAKE_CURRENT_LIST_DIR}/windows-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/postinstall-fixup/CMakeLists.txt:1313,install,install,1313,tools/postinstall-fixup/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/postinstall-fixup/CMakeLists.txt,1,['install'],['install']
Deployability,( https://github.com/sofa-framework/sofa/pull/2045 ); - **[Sofa.GL]** static variable belongs to the class [#1951]( https://github.com/sofa-framework/sofa/pull/1951 ); - **[Sofa.Topology]** remove unnecessary pragma [#1969]( https://github.com/sofa-framework/sofa/pull/1969 ); - **[Sofa.Type & DefaultType]** Adds forward declaration for Vec and StdRigidTypes. [#1907]( https://github.com/sofa-framework/sofa/pull/1907 ); - **[Sofa.Type]** Modernize fixed_array [#1985]( https://github.com/sofa-framework/sofa/pull/1985 ); - **[Sofa.Type]** Remove MIN_DETERMINANT preprocessor value [#1932]( https://github.com/sofa-framework/sofa/pull/1932 ); - **[Sofa.Type]** add operator* for RGBAColor [#1952]( https://github.com/sofa-framework/sofa/pull/1952 ); - **[SofaBaseCollision]** Broad phase and narrow phase separation [#2118]( https://github.com/sofa-framework/sofa/pull/2118 ); - **[SofaBaseCollision]** Fix simulation dependency [#1768]( https://github.com/sofa-framework/sofa/pull/1768 ); - **[SofaBaseMechanics_test]** Update tests to use Sofa.Testing instead of Sofa_Test [#2144]( https://github.com/sofa-framework/sofa/pull/2144 ); - **[SofaBaseTopology]** Improve TopologyDataHandler message [#2152]( https://github.com/sofa-framework/sofa/pull/2152 ); - **[SofaBaseTopology]** Remove definition of real [#1955]( https://github.com/sofa-framework/sofa/pull/1955 ); - **[SofaBaseTopology]** Remove warning when a Data is directly linked to a topoogy Data container [#1971]( https://github.com/sofa-framework/sofa/pull/1971 ); - **[SofaBaseTopology]** Remove warnings [#2046]( https://github.com/sofa-framework/sofa/pull/2046 ); - **[SofaBaseTopology]** Single definition of global variables [#1950]( https://github.com/sofa-framework/sofa/pull/1950 ); - **[SofaBaseUtils]** Clean RequiredPlugin [#1899]( https://github.com/sofa-framework/sofa/pull/1899 ); - **[SofaBaseVisual]** Move #include<Mat.h> from BaseCamera.h to BaseCamera.cpp [#1846]( https://github.com/sofa-framework/sofa/pull/1846 );,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:199085,Update,Update,199085,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"(); else(); message(STATUS ""IPO / LTO not supported: <${IPO_ERROR}>""); endif(). ## GCC-specific; if(${CMAKE_CXX_COMPILER_ID} MATCHES ""GNU""); ## Find out the version of g++ (and save it in GCXX_VERSION); if(CMAKE_CXX_COMPILER_ARG1) # CXX=""ccache g++""; string(STRIP ${CMAKE_CXX_COMPILER_ARG1} CMAKE_CXX_COMPILER_ARG1_stripped); execute_process(COMMAND ${CMAKE_CXX_COMPILER_ARG1_stripped} -dumpversion OUTPUT_VARIABLE GCXX_VERSION); else(); execute_process(COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE GCXX_VERSION); endif(). ## Disable partial inlining under gcc 4.6 (Why? -> the memory was exploding); if(""${GCXX_VERSION}"" VERSION_EQUAL 4.6); list(APPEND SOFACONFIG_COMPILE_OPTIONS_RELEASE ""-fno-partial-inlining""); endif(). # stack-protector; list(APPEND SOFACONFIG_COMPILE_OPTIONS_RELEASE ""-fstack-protector;--param=ssp-buffer-size=4""); # _FORTIFY_SOURCE; list(APPEND SOFACONFIG_COMPILE_OPTIONS_RELEASE ""-D_FORTIFY_SOURCE=2""). if(CMAKE_BUILD_TYPE MATCHES ""Release""); # ???; list(APPEND SOFACONFIG_LINK_OPTIONS ""-Wl,--no-undefined;-lc""); endif(). endif(). ## GCC/Clang-specific; if(${CMAKE_CXX_COMPILER_ID} MATCHES ""GNU"" OR ${CMAKE_CXX_COMPILER_ID} MATCHES ""Clang""); # Warnings; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-Wall;-W;-Wno-padded""). # Silence attribute warnings (for example, ignored already defined external template); target_compile_options(${PROJECT_NAME} PUBLIC -Wno-attributes). if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-ffast-math""); endif(). option(SOFA_ENABLE_THREAD_SANITIZER ""Enable thread sanitizer (only gcc or clang)"" OFF); if(SOFA_ENABLE_THREAD_SANITIZER); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-fsanitize=thread""); list(APPEND SOFACONFIG_LINK_OPTIONS ""-fsanitize=thread""); endif(); endif(). ## Windows-specific; if(WIN32); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-D_USE_MATH_DEFINES""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-D_CRT_SECURE_NO_WARNINGS""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-D_CRT_NONSTDC_NO_DEPRECATE""). set(SOFA",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:6765,Release,Release,6765,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['Release'],['Release']
Deployability,"(SOFA_ENABLE_BUILTIN_TIMER ""Enable the builtin timers"" ON); if(SOFA_ENABLE_BUILTIN_TIMER); set(SOFA_ENABLE_SCOPED_ADVANCED_TIMER 1); endif(). # An important C++11 feature may be not enabled due to; # the compiler being built without the --enable-libstdcxx-time option.; if(CMAKE_COMPILER_IS_GNUCXX); if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.8); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-D_GLIBCXX_USE_NANOSLEEP -D_GLIBCXX_USE_SCHED_YIELD""); endif(); endif(). # hack for clang on old macosx (version < 10.9, such as the dashboard servers); # that is using, by default at that time, a libstdc++ that did not fully implement c++11; if(APPLE AND ${CMAKE_SYSTEM_NAME} MATCHES ""Darwin"" AND CMAKE_SYSTEM_VERSION VERSION_LESS ""10.9"" AND ${CMAKE_CXX_COMPILER_ID} MATCHES ""Clang"" ); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-stdlib=libc++""); endif(). if(CMAKE_SYSTEM_NAME STREQUAL Linux AND NOT CMAKE_BUILD_TYPE MATCHES ""Debug""); target_compile_definitions(${PROJECT_NAME} PUBLIC ""NDEBUG""); # On Windows and MacOS, NDEBUG and _DEBUG are automatically; # set in the default c/cxx flags of the right configurations; endif(); if(MSVC); # Increase Number of Sections in .Obj file; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/bigobj""); if(SOFA_VECTORIZE); message(""SOFA_VECTORIZE option is deprecated and has been split between SOFA_ENABLE_SIMD and SOFA_ENABLE_FAST_MATH. These 2 options will be enabled.""); set(SOFA_ENABLE_SIMD ON); set(SOFA_ENABLE_FAST_MATH ON); endif(); # SIMD flags; if(SOFA_ENABLE_SIMD); include(find_avx); MSVC_CHECK_FOR_AVX() # search for availability of AVX2 (otherwise set to AVX); if (HAVE_AVX2_EXTENSIONS); message(""Your CPU supports AVX2 SIMD. Using flags: ${AVX_FLAGS}""); elseif(HAVE_AVX_EXTENSIONS); message(""Your CPU supports only AVX SIMD. Using flags: ${AVX_FLAGS}""); else(); message(""Your CPU does not support AVX SIMD."") # SSE2 is the default when x64 is set; endif(); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""${AVX_FLAGS}""); endif(); if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONF",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:11925,configurat,configurations,11925,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['configurat'],['configurations']
Deployability,); - implement a numerical integration for triangle [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - add brace initializer to helper::vector class [#252]( https://github.com/sofa-framework/sofa/pull/252 ); - Activates thread-safetiness on MessageDispatcher. [#257]( https://github.com/sofa-framework/sofa/pull/257 ); - Fix getRelativePath() in DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - FileRepository::getRelativePath() lowering the case on WIN32 is now a deprecated behavior [#264]( https://github.com/sofa-framework/sofa/pull/264 ); - Fix FileRepository should not be optional [#122]( https://github.com/sofa-framework/sofa/pull/122 ); - FileMonitor: fix the recurrent problem with file 'SofaKernel/framework/framework_test/resources/existing.txt' pointed in Issue #146 [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - Fix wrong inline in exported functions [#449]( https://github.com/sofa-framework/sofa/pull/449 ); - [SofaFramework]; - fix the integration scheme for Quaternion [#172]( https://github.com/sofa-framework/sofa/pull/172 ) and fix values with which the quaternion is being compared after creation from euler angles; - [SofaHelper]; - VisualToolGL: fix single primitive calls [#293]( https://github.com/sofa-framework/sofa/pull/293 ); - ImagePNG: Fix library linking in debug configuration under MSVS [#298]( https://github.com/sofa-framework/sofa/pull/298 ); - [SofaBaseMechanics]; - MechanicalObject: cleaning: symbols & include [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - [SofaPhysicsAPI]; - fix compilation of the project [#167]( https://github.com/sofa-framework/sofa/pull/167 ); - [SofaUserInteraction]; - MouseInteractor: FIX the mouse picking on Mechanical Object [#282]( https://github.com/sofa-framework/sofa/pull/282 ). **Plugins / Projects**; - [image]; - Fixes #135 : Check that SofaPython is found before including python directory [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - Fixe,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:333071,integrat,integration,333071,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['integrat'],['integration']
Deployability,**; - [CGALPlugin] Some cleanups to CylinderMesh [#1124]( https://github.com/sofa-framework/sofa/pull/1124 ); - [CGal plugin][CImgPlugin] Image data moved from Image/ to CImgPlugin/ [#1104]( https://github.com/sofa-framework/sofa/pull/1104 ); - [Geomagic] Reorder plugin files for better modularization [#1208]( https://github.com/sofa-framework/sofa/pull/1208 ); - [ManifoldTopologies] Undust and clean [#1156]( https://github.com/sofa-framework/sofa/pull/1156 ). **Examples / Scenes**; - [Scenes] Clean some alias warnings [#1098]( https://github.com/sofa-framework/sofa/pull/1098 ); - [scenes] Change OglModel to use a MeshObjLoader instead of loading the mesh internally. [#1096]( https://github.com/sofa-framework/sofa/pull/1096 ). ____________________________________________________________. ## [v19.06]( https://github.com/sofa-framework/sofa/tree/v19.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v18.12...v19.06 ). ### Breaking. **Modules**; - [All] Run clang-tidy and update license headers [#899]( https://github.com/sofa-framework/sofa/pull/899 ); - [All] Refactor the loading of Xsp files. [#918]( https://github.com/sofa-framework/sofa/pull/918 ); - **[SofaBaseTopology]** Change triangles orientation in tetrahedron [#878]( https://github.com/sofa-framework/sofa/pull/878 ); - **[SofaBaseTopology]** Major Change in Topology Containers [#967]( https://github.com/sofa-framework/sofa/pull/967 ); - **[SofaKernel]** Refactor the MutationListener [#917]( https://github.com/sofa-framework/sofa/pull/917 ); - **[SofaKernel]** Some Topology cleaning... [#866]( https://github.com/sofa-framework/sofa/pull/866 ); - [SofaOpenglVisual] Fix ogl perf problem [#1069]( https://github.com/sofa-framework/sofa/pull/1069 ). ### Modularizations. - [SofaExporter] Modularize (+minor dependency cleaning) [#915]( https://github.com/sofa-framework/sofa/pull/915 ); - [SofaHaptics] Modularize sofa haptics [#945]( https://github.com/sofa-framework/sofa/pull/945 ); - [SofaOpenglVisual],MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:257452,update,update,257452,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,"**Plugins / Projects**; - [Plugins] Move CGALPlugin to an external repository [#2500]( https://github.com/sofa-framework/sofa/pull/2500 ); - [Plugins] Move Flexible/Compliant/RigidScale to external repositories [#1873]( https://github.com/sofa-framework/sofa/pull/1873 ); - [Plugins] Move SofaPython to an external repository [#2224]( https://github.com/sofa-framework/sofa/pull/2224 ); - [Plugins] Remove LMConstraint from SOFA repository [#2508]( https://github.com/sofa-framework/sofa/pull/2508 ). ### Breaking. **Architecture**. **Modules**; - [All] Unused include directive [#2475]( https://github.com/sofa-framework/sofa/pull/2475 ); - [All] Merge TopologySubsetData and TopologySparseData [#2114]( https://github.com/sofa-framework/sofa/pull/2114 ); - [All] Merge branch topologyChanges_PoC introducing topological changes callbacks [#2228]( https://github.com/sofa-framework/sofa/pull/2228 ); - [All] Remove ForceMask [#2316]( https://github.com/sofa-framework/sofa/pull/2316 ); - [All] Update collision response names [#2522]( https://github.com/sofa-framework/sofa/pull/2522 ); - [Sofa.BaseTopology] Remove 1D template for 2D/3D primitives in topology algorithms [#2291]( https://github.com/sofa-framework/sofa/pull/2291 ); - [Sofa.Core] Deprecate officially the usage of SofaOStream (sout, serr, sendl in Base) [#2292]( https://github.com/sofa-framework/sofa/pull/2292 ); - [Sofa.Core] Factorize mstate access [#2438]( https://github.com/sofa-framework/sofa/pull/2438 ); - [Sofa.Core] Use links instead of private std::list [#2364]( https://github.com/sofa-framework/sofa/pull/2364 ); - [Sofa.LinearAlgebra] Fix typo 'bloc' -> 'block' [#2404]( https://github.com/sofa-framework/sofa/pull/2404 ); - [SofaBaseLinearSolver] Clean MatrixLinearSolver [#2195]( https://github.com/sofa-framework/sofa/pull/2195 ); - [SofaBaseTopology] Disable method createTopologyHandler with a TopologyHandler* as parameter [#2393]( https://github.com/sofa-framework/sofa/pull/2393 ); - [SofaBaseTopology] Fix La",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:136416,Update,Update,136416,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,", it strips RPATH from installed binaries. Here we; # use CMAKE_INSTALL_RPATH to set a relative RPATH. By doing so, we avoid; # the need to play with LD_LIBRARY_PATH to get applications to run. # see https://cmake.org/Wiki/CMake_RPATH_handling for $ORIGIN doc; set(CMAKE_INSTALL_RPATH; ""$ORIGIN/../lib""; ""$$ORIGIN/../lib""; ). if(APPLE); set(CMAKE_MACOSX_RPATH ON); list(APPEND CMAKE_INSTALL_RPATH; ""@loader_path/../lib""; ""@executable_path/../lib""; ""@loader_path/../../Frameworks""; ""@executable_path/../../Frameworks""; ); set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE); endif(); endif(UNIX). ### Windows config; if(MSVC); # WinDepPack; set(SOFA_DEPENDENCY_PACK_DIR ""${CMAKE_SOURCE_DIR}"" CACHE PATH ""Directory containing Windows Dependency Pack""); if(NOT EXISTS ${SOFA_DEPENDENCY_PACK_DIR}); # force back to default value; set(SOFA_DEPENDENCY_PACK_DIR ""${CMAKE_SOURCE_DIR}"" CACHE PATH ""Directory containing Windows Dependency Pack"" FORCE); endif(); list(APPEND CMAKE_INCLUDE_PATH ${SOFA_DEPENDENCY_PACK_DIR}/include); if(CMAKE_CL_64); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_DEPENDENCY_PACK_DIR}/lib/win64); else(); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_DEPENDENCY_PACK_DIR}/lib/win32); endif(); install(DIRECTORY ${SOFA_DEPENDENCY_PACK_DIR}/include/ DESTINATION include/extlibs/WinDepPack COMPONENT headers); install(DIRECTORY ${SOFA_DEPENDENCY_PACK_DIR}/licenses/ DESTINATION licenses COMPONENT applications); endif(). ### Testing; option(SOFA_BUILD_TESTS ""Compile the automatic tests for Sofa, along with the gtest library."" ON). ## Active or not the use of ccache; option(SOFA_USE_CCACHE ""Compile using ccache optimization"" OFF); if(SOFA_USE_CCACHE); find_program(CCACHE_PROGRAM ccache); if(CCACHE_PROGRAM); # Support Unix Makefiles and Ninja; #TODO replace by <LANG>_COMPILER_LAUNCHER when min cmake version > 3.4; set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ""${CCACHE_PROGRAM}""); set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ""${CCACHE_PROGRAM}""); else(); message(WARNING ""ccache not found, disab",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:5786,install,install,5786,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,2,['install'],['install']
Deployability,"- [MultiThreading] FIX: add createSubelements param in MeshGmshLoader [#626]( https://github.com/sofa-framework/sofa/pull/626 ); - [runSofa] Fix compilation when SofaGuiQt is not activated [#599]( https://github.com/sofa-framework/sofa/pull/599 ); - [runSofa] ADD infinite iterations option to batch gui [#613]( https://github.com/sofa-framework/sofa/pull/613 ); - [runSofa] FIX missing resources [#758]( https://github.com/sofa-framework/sofa/pull/758 ); - [SofaDistanceGrid] ADD .scene-tests to ignore scene [#594]( https://github.com/sofa-framework/sofa/pull/594 ); - [SofaPython] FIX build for MacOS >10.13.0 [#614]( https://github.com/sofa-framework/sofa/pull/614 ). **Examples / Scenes**; - FIX collision of the fontain example [#612]( https://github.com/sofa-framework/sofa/pull/612 ); - FIX failing scenes on CI [#641]( https://github.com/sofa-framework/sofa/pull/641 ); - FIX missing RequiredPlugin [#628]( https://github.com/sofa-framework/sofa/pull/628 ). **Extlibs**; - [extlibs/gtest] Update gtest & clean the CMakeLists.txt [#604]( https://github.com/sofa-framework/sofa/pull/604 ). ### Cleanings. **Architecture**; - [CMake] Remove the option SOFA_GUI_INTERACTION and its associated codes/macro [#643]( https://github.com/sofa-framework/sofa/pull/643 ). **Modules**; - [All] CMake: Remove COMPONENTSET, keep DEPRECATED [#586]( https://github.com/sofa-framework/sofa/pull/586 ); - [All] CLEAN topology classes [#693]( https://github.com/sofa-framework/sofa/pull/693 ); - **[SofaHelper]** CLEAN commented code and double parentheses in Messaging.h [#587]( https://github.com/sofa-framework/sofa/pull/587 ); - **[SofaKernel]** Header include cleanup [#638]( https://github.com/sofa-framework/sofa/pull/638 ); - **[SofaKernel]** Remove unused function ""renumberConstraintId"" [#691]( https://github.com/sofa-framework/sofa/pull/691 ). **Plugins / Projects**; - [CImgPlugin] Less scary config warnings [#607]( https://github.com/sofa-framework/sofa/pull/607 ); - [HeadlessRecorder] Handle er",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:299412,Update,Update,299412,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"- [SofaPhysicsAPI] Add several methods using output parameters [#3520](https://github.com/sofa-framework/sofa/pull/3520) ; - [SofaPhysicsAPI] Add C bindings to access C++ api [#3539](https://github.com/sofa-framework/sofa/pull/3539) ; - [SofaPhysicsAPI] Add methods and C bindings to load SOFA ini file, plugins and messageHandler [#3540](https://github.com/sofa-framework/sofa/pull/3540) . ### Bug Fixes. **Architecture**; - [Config] Rename ide folder for libraries [#3214](https://github.com/sofa-framework/sofa/pull/3214) ; - [CMake] FIX parent modules library consistency [#3225](https://github.com/sofa-framework/sofa/pull/3225) ; - [CMake] FIX out-of-tree SofaGui and runSofa locations [#3229](https://github.com/sofa-framework/sofa/pull/3229); - [Sofa.Type] Fix compile-time Mat and Vec [#3281](https://github.com/sofa-framework/sofa/pull/3281) ; - [Simulation.Core] Fix import of required plugins [#3322](https://github.com/sofa-framework/sofa/pull/3322) ; - [Topology] Fix internal infinite update loop in TopologySubsetData remove process [#3330](https://github.com/sofa-framework/sofa/pull/3330) ; - [Topology] Update getLastElementIndex in TopologySubsetIndices [#3331](https://github.com/sofa-framework/sofa/pull/3331) ; - [Core.Collision] Fix memory leak in NarrowPhaseDetection and IntersectorFactory [#3337](https://github.com/sofa-framework/sofa/pull/3337) ; - [Type] Remove explicit template instantiation to restore performances [#3349](https://github.com/sofa-framework/sofa/pull/3349) ; - [Topology] Fix topologyHandler removal [#3369](https://github.com/sofa-framework/sofa/pull/3369) ; - [Mapping.Linear] Fix assert [#3432](https://github.com/sofa-framework/sofa/pull/3432) ; - [DefaultType] fix rigidcoord compilation [#3462](https://github.com/sofa-framework/sofa/pull/3462) ; - Revert ""[Sofa.Core] Linear time getRoot() method in BaseNode and Node"" [#3464](https://github.com/sofa-framework/sofa/pull/3464) ; - [Sofa.Core, SofaSphFluid] Fix compilation with MSVC 2022, v17.4",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:77527,update,update,77527,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,- [Type] Add NoInit constructor for Quat class [#3217](https://github.com/sofa-framework/sofa/pull/3217) ; - [Geometry] Make global variables constexpr [#3233](https://github.com/sofa-framework/sofa/pull/3233) ; - [Core] Reduce calls to getValue in collisions [#3264](https://github.com/sofa-framework/sofa/pull/3264) ; - [Type] Fix/clean and speed up of Mat [#3280](https://github.com/sofa-framework/sofa/pull/3280) ; - [Type] Add fixedarray aliases and BoundingBox3D [#3298](https://github.com/sofa-framework/sofa/pull/3298) ; - [Config] Option to set the number of MSVC processes [#3313](https://github.com/sofa-framework/sofa/pull/3313) ; - [Helper] RAII for DrawTool state life cycle [#3338](https://github.com/sofa-framework/sofa/pull/3338) ; - [Config] Option to enable interprocedural optimization [#3345](https://github.com/sofa-framework/sofa/pull/3345) ; - [Config] Change type of CMake message when adding a module [#3381](https://github.com/sofa-framework/sofa/pull/3381) ; - [CMake] Speed-up Configuration (again) [#3382](https://github.com/sofa-framework/sofa/pull/3382) ; - [Helper] Portable thread local storage duration [#3422](https://github.com/sofa-framework/sofa/pull/3422) ; - [Helper.Accessor] Support more std vector methods in WriteAccessorVector [#3426](https://github.com/sofa-framework/sofa/pull/3426) ; - [Topology] Add mechanism to check checkTopologyInputTypes [#3428](https://github.com/sofa-framework/sofa/pull/3428) ; - [Topology.Container] Check at init for Container in Modifier [#3434](https://github.com/sofa-framework/sofa/pull/3434) ; - [Simulation] Task scheduler can accept callable [#3482](https://github.com/sofa-framework/sofa/pull/3482) ; - [Simulation] Worker threads are no longer static [#3491](https://github.com/sofa-framework/sofa/pull/3491) ; - [Core] Support getObjects on set containers [#3495](https://github.com/sofa-framework/sofa/pull/3495) ; - [Type] Conversion to scalar for Mat1x1 [#3498](https://github.com/sofa-framework/sofa/pull/3498),MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:72746,Configurat,Configuration,72746,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Configurat'],['Configuration']
Deployability,"---; name: Bug report; about: Create a report to help us improve SOFA; title: ''; labels: 'issue: bug (minor)'; assignees: ''. ---. ### Problem. **Description**; < DESCRIBE YOUR PROBLEM HERE >. **Steps to reproduce**; < LIST THE STEPS TO REPRODUCE YOUR PROBLEM HERE >. **Expected behavior**; < DESCRIBE WHAT YOU THINK SHOULD HAVE HAPPEN INSTEAD >. ---------------------------------------------. ### Environment. **Context**. - System: < NAME AND VERSION - e.g: ""Windows 10"", ""Ubuntu 20.04"", ... >; - Version of SOFA: < INFOS ABOUT THE BRANCH OR BINARIES - e.g: ""master branch at commit 70bb123"", ""v21.06.00 binaries"", ... >; - State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```. **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/.github/ISSUE_TEMPLATE/bug_report.md:645,INSTALL,INSTALL,645,.github/ISSUE_TEMPLATE/bug_report.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/.github/ISSUE_TEMPLATE/bug_report.md,2,"['INSTALL', 'Install']","['INSTALL', 'Install']"
Deployability,-framework/sofa/pull/2420 ); - [SofaMiscFem] Remove unnecessary copy/pasted code [#2421]( https://github.com/sofa-framework/sofa/pull/2421 ); - [SofaMiscForcefield] Small optimization in addMdx in MeshMatrixMass [#2516]( https://github.com/sofa-framework/sofa/pull/2516 ); - [SofaMiscFem][SofaNonUniformFem] Remove newmat usage [#2531]( https://github.com/sofa-framework/sofa/pull/2531 ); - [SofaPreconditioner] Cleaning [#2493]( https://github.com/sofa-framework/sofa/pull/2493 ); - [SofaSimpleFem] Move duplicated code into a function [#2231]( https://github.com/sofa-framework/sofa/pull/2231 ); - [SofaSimpleFem] Remove branches based on type of matrix [#2323]( https://github.com/sofa-framework/sofa/pull/2323 ); - [SofaSparseSolver] Clean examples scenes of sparse linear solvers [#2422]( https://github.com/sofa-framework/sofa/pull/2422 ); - [SofaTopologyMapping] Fix shadowed variable #2158 [#2413]( https://github.com/sofa-framework/sofa/pull/2413 ); - [Tests] Update SceneCreator_test to inherit from BaseSimulationTest and remove some warnings [#2406]( https://github.com/sofa-framework/sofa/pull/2406 ). **Plugins / Projects**; - [Plugins] Move Newmat matters into the new SofaNewmat plugin [#2532]( https://github.com/sofa-framework/sofa/pull/2532 ); - [CImgPlugin] Minimize plugin dependencies [#2318]( https://github.com/sofa-framework/sofa/pull/2318 ); - [image] fix shadow variable #2432 [#2437]( https://github.com/sofa-framework/sofa/pull/2437 ); - [image] Remove useless DiffusionSolver dependency [#2308]( https://github.com/sofa-framework/sofa/pull/2308 ); - [image] Clean init members warning [#2536]( https://github.com/sofa-framework/sofa/pull/2536 ); - [SofaCUDA] reorder CMakeLists just for more clarity [#2534]( https://github.com/sofa-framework/sofa/pull/2534 ). **Examples / Scenes**; - [examples] Add handleDynamicTopology in OglModel with dynamic texcoords [#2445]( https://github.com/sofa-framework/sofa/pull/2445 ); - [examples] Clean linear solver scenes [#2494]( ht,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:162499,Update,Update,162499,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"-points [#3603](https://github.com/sofa-framework/sofa/pull/3603) ; - [SofaPhysicsAPI] Fix compilation by replacing use of SofaGUI by sofa::GUI::common [#3612](https://github.com/sofa-framework/sofa/pull/3612) ; - [SofaCUDA] No longer use deprecated texture references in TetraTLED [#3650](https://github.com/sofa-framework/sofa/pull/3650) ; - [MultiThreading] Empty string instead of null pointer in DataExchange [#3686](https://github.com/sofa-framework/sofa/pull/3686) ; - [Geomagic] Fix potential crash at exit when device has not been init [#3698](https://github.com/sofa-framework/sofa/pull/3698) ; - [SofaCUDA] Fix includes pointing to compatibility layer [#3727](https://github.com/sofa-framework/sofa/pull/3727) ; - [plugins] ArticulatedSystemMapping : adds size check & fixes typo [#3751](https://github.com/sofa-framework/sofa/pull/3751) . **Examples / Scenes**; - [All] Fix example scenes showing warnings or errors [#3526](https://github.com/sofa-framework/sofa/pull/3526) ; - [all] Update totalmass to totalMass [#3622](https://github.com/sofa-framework/sofa/pull/3622) . **Scripts / Tools**; - [CI, Scenes] Restore custom parameters for the scene-tests [#3674](https://github.com/sofa-framework/sofa/pull/3674) . ### Cleaning. **Architecture**; - [all] Lifecycle v22.06 [#3535](https://github.com/sofa-framework/sofa/pull/3535) ; - [Type] Quat: small optimization for axisToQuat() [#3559](https://github.com/sofa-framework/sofa/pull/3559) ; - [Config] Remove unused SOFA_WITH_THREADING option [#3565](https://github.com/sofa-framework/sofa/pull/3565) ; - [Project] Start v23.06 dev phase [#3573](https://github.com/sofa-framework/sofa/pull/3573) ; - [Cmake] Update warning replacement message for deprecated macro sofa_add_XX [#3611](https://github.com/sofa-framework/sofa/pull/3611) ; - [Sofa] Remove warnings [#3627](https://github.com/sofa-framework/sofa/pull/3627) ; - [Sofa.framework] Compile and run tests when SReal is float [#3628](https://github.com/sofa-framework/sofa/pull/3",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:60922,Update,Update,60922,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,. ...I'm so Fancy...; {} = {0} + {1} + {0} . Experiment started at: 2016-10-14 11:33:16.744742 ; Experiment duration: 0.788909912109 ; Configuration file: example.json . #DirectorySceneLogTiming. 0; View; View; View; 0.400139093399 seconds. 0; View; View; View; 0.37326002121 seconds. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/results.html:135,Configurat,Configuration,135,tools/sofa-launcher/results.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/results.html,1,['Configurat'],['Configuration']
Deployability,". ColladaSceneLoader Plugin Documentation. ColladaSceneLoader Plugin Documentation. 		A skinned and bones animated character walking. Introduction; How to use; Examples; Intellectual property and rights. Introduction; This page explains how to use the ColladaSceneLoader plugin to load collada scene (.dae) into Sofa. What is Collada ?.       COLLADA defines an XML-based schema to make it easy to transport 3D assets between applications ; - enabling diverse 3D authoring and content processing tools to be combined into a production pipeline. ; The intermediate language provides comprehensive encoding of visual scenes including: geometry, shaders and effects, physics, animation, kinematics, ; and even multiple version representations of the same asset.COLLADA FX enables leading 3D authoring tools to work effectively together to create shader ; and effects applications and assets to be authored and packaged using OpenGL Shading Language, Cg, CgFX, and DirectX FX. How to use.       To use this plugin, you just have to go in you sofa configuration file (sofa-local.prf or if you have not this file, use sofa-default.prf in the sofa root directory) and uncomment or add this following line :. DEFINES += SOFA_HAVE_PLUGIN_COLLADA. If you are a Visual Studio user you must generate sofa projects again using the corresponding batch file (Project VC*.bat).       Build the ColladaSceneLoader plugin and load the resulting dynamic library with the Sofa plugin manager available in runSofa or in the sofa Modeler (in the main toolbar : Edit / Plugin Manager...).; You are now able to use the new SceneColladaLoader component. In the Modeler, you can find it in the Loader category. To do so, drag and drop the component into your scene graph and fill up the data ""filename"" with ; the path of the collada scene you want to load. If you launch runSofa with your scene you will see your SceneColladaLoader component and a new generated node below which contains the whole collada scene.       For eve",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:535,pipeline,pipeline,535,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['pipeline'],['pipeline']
Deployability,". Collision detection; Description:. 			In this tutorial, we add the collision between the teeth and the instrument.; 		; Key points:. Added a collision pipeline using hierarchical bounding boxes and a proximity detection algorithm ; Added collision model (Triangle, Line, Point) for the teeth; Added collision model (Line, Point) for the instrument; Added a mapping (RigidMapping) to ""connect"" the Mechanical Model and the Collision Model. Note:; The collision model mesh is charged using the objects MeshLoader and Mesh; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_04.html:153,pipeline,pipeline,153,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_04.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_04.html,1,['pipeline'],['pipeline']
Deployability,. Connection with the Omni device; Description:; 		; 		This scene introduces the omni device and connect it to control the instrument. 		Key points:. Added a driver for the Omni phantom device; Added a mechanical state controller that gathers data from the phantom and updates the position of a representation of the device in the simulation ; Added a computation (LCPForceFeedback) of the haptic forces ; Added VectorSpringForceField & JointSpringForceField to link the mouvements of the Omni phantom and the instrument. Next. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_06.html:269,update,updates,269,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_06.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_06.html,1,['update'],['updates']
Deployability,". Creation of a Pendulum (2/8); Description; In the previous scene, no solver was present, so no simulation was done. In this step, we will add an ODE solver in the Root node of the simulation. We provide several ODE solvers, with different integration schemes. Take a look at our tutorials on Solvers later.; Key points; We will use the classic explicit euler solver EulerSolver to update particle positions and velocities at each time step. In SOFA, a solver acts on all the object placed below in the hierarchy. ; In the Modeler's Filter textbox, type ""Euler"". Click and drag the EulerSolver component over the root node. Press the Run in SOFA button. Press Animate.; Results; This time, when you animate the scene, the particule falls along the direction of the gravity.; The gravity is specified in the root node of the simulation. We use a default value of (0, 0, -9.81).; In the Modeler scene graph, double click the root node.; This opens the components for this node, and allows you to edit them. We won't make any changes for now.; Press OK to return to the Modeler window. ; Changing the gravity on child nodes of the simulation will not do anything as at each time step the gravity, and other parameters, (time, dt...) is overwritten using the value specified in the root node.; The component Gravity lets you specify a particular gravity for a node and all its children.; To see an example of this, type ""Gravity"" into the Filter textbox in the Modeler. Click on the Gravity component. In the top right section of the window, a description of the component will appear, with links to examples. Click on the links to open the example scene in the Modeler. When you are done, close the Gravity.scn tab to return to the tutorial scene. ; Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/1_Pendulum.html:241,integrat,integration,241,examples/Tutorials/StepByStep/Pendulum/1_Pendulum.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/1_Pendulum.html,2,"['integrat', 'update']","['integration', 'update']"
Deployability,". Creation of a Pendulum (5/8); Description; Now we will create internal forces to add interactions between the particles of our mechanical object. ; The concept of Forces are handled in SOFA by components called ForceFields. We implemented numerous algorithms to simulate Mass Spring systems, Finite Elements, Rigid Bodies, etc. Again, there are examples available for these different types. In this tutorial, we will add a Spring between the two particles.; Key points; We will use a StiffSpringForceField to model our spring. ; Type ""StiffSpring"" in the Filter textbox. You will see StiffSpringForceField in two categories. Both are the same. Drag and drop the StiffSpringForceField from either category over the FirstObject node. Double click the StiffSpringForceField in the Modeler scene graph.; Click on the Property 2/2 tab. In the spring section, increase the 0 to ""1"", and press Display the values. Then, press the Update button found in the bottom left corner of the window. ; The titles of the columns now describe all the parameters needed to create a spring: two indices (Index1, Index2) corresponding to the particles attached by the spring, a stiffness coefficient (Ks), a damping coefficient (Kd), and the rest length of the spring (L).; Type the values ""0"", ""1"", ""100"", ""5"" and ""1"" into the columns Index1, Index2, Ks, Kd and L respectively. Press OK to return to the Modeler. Run the scene in SOFA, and animate.; Results; The two particles are now linked together by a spring. The second particle continues to fall because of gravity, but a spring, displayed by a green line, keeps them close. (Note: If you can't see the green line, make sure ""Force Fields"" is selected in the View tab in SOFA); We have modeled a very basic pendulum with only 5 components. Take some time to customize this scene. Try modifying the parameters of the spring, the position and parameters of the particles of the mechanical object, or adding particles or springs.; Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/4_Pendulum.html:925,Update,Update,925,examples/Tutorials/StepByStep/Pendulum/4_Pendulum.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/4_Pendulum.html,1,['Update'],['Update']
Deployability,". Creation of a Pendulum (7/8); Description; To link the two different mechanical objects, we will create a spring between them.; Find the StiffSpringForceField component. Drag and drop it on the root node. The Modeler will warn you ""No MechanicalState found in your Node root"". Press Ignore. We will define what the ForceField should act on manually.; Double click the new StiffSpringForceField to edit its properties. Towards the bottom of the window, in the First object in interaction textbox, type ""FirstObject"". In the Second object in interaction textbox, type ""SecondObject"". ; Go to the Property 2/2 tab, increase the spring's pairs of indices, stiffness, damping, and rest length to 1, and press Display the values, then Update. Fill in ""1"", ""0"", ""10"", ""0.1"", and ""1"" in the columns Index1, Index2, Ks, Kd, and L respectively.; Run the scene in SOFA. Click the Graph tab.; Key points; We use the same component as in the previous part of the tutorial (StiffSpringForceField). But you may notice the the colour used in the SOFA scene graph is not the same. Internal Springs use a blue color, while Interaction Springs use a red colour. The difference with the previous use of the StiffSpringForceField resides in the fact that we need to specify the two mechanical objects in interaction: we specified the MechanicalObjects FirstObject and SecondObject. The creation of the springs is exactly the same: two indices, Ks, Kd and rest length. The second spring is displayed in green, representing the interaction between the two objects. ; Results; To get a better view of the simulation, reduce the integration time step by finding the DT textbox on the top left of the SOFA window, and changing it from 0.01 to ""0.001"". Press Animate.; Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/6_Pendulum.html:731,Update,Update,731,examples/Tutorials/StepByStep/Pendulum/6_Pendulum.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/6_Pendulum.html,2,"['Update', 'integrat']","['Update', 'integration']"
Deployability,". Creation of a Pendulum (8/8); Description; To show the genericity of SOFA, the last tutorial will simulate the same scene but using a different ODE solver and integration scheme.; We will remove the EulerSolver and replace it with the EulerImplicitSolver. This solver contains the algorithm used to update particle positions and velocities at each time step. It uses an auxiliary component, the CGLinearSolver, to solve equation systems.; Key points; Right click on the EulerSolver in the Modeler's scene graph, and select Delete.; Find the EulerImplicitSolver component, and add it on the root node. Find the CGLinearSolver component, and add it on the root node.; Results; Run in SOFA and animate.; The behavior is slightly different. Try modifying the parameters of the ODE Solver and the Linear Solver.; Previous. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/7_Pendulum.html:161,integrat,integration,161,examples/Tutorials/StepByStep/Pendulum/7_Pendulum.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/7_Pendulum.html,2,"['integrat', 'update']","['integration', 'update']"
Deployability,". Creation of a Scene (5/9). Description; In this step we will use a visual model to represent our deformable object. Nevertheless, you must keep in mind that it will only be a visual representation. The computational work will be done on the particles you are not used to seeing.; Key points; Add a GNode to the Object node. Rename this node ""VisualNode"".; We added a Node that will contain our Visual Model. Next, we move our Visual Model from the root level to the VisualNode.; Select the OglModel in the Modeler's scene graph. Press the Copy button, found in the Modeler toolbar, 4th from the left. Select the VisualNode, and press the Paste button, found to the right of the Copy button. Right click the original OglModel, and select Delete.; Now to make the link between the deformation of the simulated particles and a given visual model, we need a mapping. As we only need to update the positions of the visual model at each time step, we will use a Visual Mapping: BarycentricMapping.; Here we really need to pay attention to the template used for this component.; Open the OglModel properties and go to the Infos tab. ; Under instance, you can see that the Template is ExtVec3f. This means we need our BarycentricMapping to map from Vec3d (the template used by the MechanicalObject) to ExtVec3f.; Find the BarycentricMapping component using the Filter. Be sure that the template information to the right reads Vec3d, ExtVec3f. If it doesn't, choose that combination from the drop down menu. Add this component to the VisualModel node. ; Edit the properties of the BarycentricMapping, and open the Property 2/2 tab. Change Input object to map from @ to ""@.."".; This refers to the MechanicalObject placed in the node above (Object node); Change Output object to map to ""@Objective"".; This refers to the OglModel that we named Objective earlier; Result; Run in SOFA and animate; Now not only are the particles of the grid deformed, but this deformation is propagated to the visual model, which ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/4_FullObject.html:884,update,update,884,examples/Tutorials/StepByStep/FullObject/4_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/4_FullObject.html,1,['update'],['update']
Deployability,". Creation of a Scene (6/9). Description; We will now replace the PlaneForceField with a true obstacle, modeled with a topology (read from a mesh file), a mechanical object, and some collision models.; Key points; To use the Collision Pipeline described here, you need to use Collision Models. They describe geometrical primitives which will be involved in the collision detection. To demonstrate the flexibility you can have, we will use at the same time some spheres, triangles, lines and points.; There will be as many spheres as particules contained in the Topology.; Add a new GNode to the root node, and rename it ""Obstacle"".; Add a MeshTopology component to the Obstacle node. Set the Filename of the mesh to mySofaDirectory/Sofa/share/mesh/cube.obj.; Add a MechanicalObject to the Obstacle node. Change to the Transformation tab, and change the Scale of the DOFs in 3 dimensions from (1 1 1) to ""(40 40 0.1)"".; Add a TTriangleModel to the Obstacle node. In the Property 2/3 tab, change the Default contact stiffness to 500. Repeat both steps with a LineModel and a PointModel; Add a OglModel component to the Obstacle node. In the Property 2/3 tab, set the Path to the model to /Sofa/share/mesh/cube.obj. In the Transformation tab, change the Initial Translation of the object to ""(0 0 -10)"" and the Initial Scale of the object to ""(40 40 0.1)"".; Results; Delete the PlaneForceField. Run in SOFA and animate.; At this point, our deformable object will interact with the floor using spheres placed at each particle. The collision detection does not take correctly into account what we visually see, but the dragon does not pass through the floor.; Related; You have several way to modify the collision detection and response.; Modify the proximity distance to know when two primitives are colliding: open MinProximityIntersection and edit ""alarmDistance"" and ""contactDistance"". ; Modify the stiffness of the response: the response is computed using the product of the contactStiffness of the tw",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/5_FullObject.html:235,Pipeline,Pipeline,235,examples/Tutorials/StepByStep/FullObject/5_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/5_FullObject.html,1,['Pipeline'],['Pipeline']
Deployability,". Deformable model of the Tongue; Description:. 		We add a deformable model to the tongue. It means the tongue will move and deform depending on the forces applied on it.; 		To do this, we use the component TetrahedralCorotanionalFEMForceField. It uses finite element methods to compute the internal forces.; 		; Key points:. 			To add a deformable model in the scene, we need to create a MechanicalObject. All the forces and displacement are computed using an Euler implicit solver (EulerImplicitSolver) for time integration and a Conjugate Gradient linear solver (CGLinearSolver) to solve a linear system. ; 			We also need a container to store the tetrahedra (TetrahedronSetTopologyContainer). With all these components, we can add a force field to compute internal forces (TetrahedralCorotanionalFEMForceField).; 		. 			The visual model of the tongue is updated because of a mapping (BarycentricMapping) between the deformable model and the visual.; 		; Note:. 			In the current scene, the visual model of the tongue is not displayed, but the deformable model is displayed with the blue tetrahedra.; 		. 			The tetrahedric mesh of the tongue has been generated using the CGAL plugin in SOFA. Read this annex to learn more about mesh generation using CGAL plugin.; 		. 			The mass choosen for the deformable model of the tongue is a DiagonalMass. It has been choosen to show the diversity of masses available in SOFA. This kind of mass computes the mass matrix with non uniform diagonal values, depending on the tetrahedra size.; 		. Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_07.html:514,integrat,integration,514,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_07.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_07.html,2,"['integrat', 'update']","['integration', 'updated']"
Deployability,". Euler Implicit Solver. Description. 	The EulerImplicitSolver can be used to solve ODE systems of first or second order, using the Euler implicit integration scheme. The step size of the discretization corresponds to the timeStep of SOFA.; 	; 	At each step of the scheme, the linear equation systems obtained have to be solved by an auxiliary component, the CGLinearSolver, which can be of different kinds (conjugated gradient, ...).; ; Key points. 	Different simulations are proposed:; 	; Green: reference deformation.; Yellow: Mechanical system using springs along edges.; Light blue: Mechanical system using tetrahedron finite elements.; Blue: Same system as before but using a first order integration scheme.; Red: Mechanical system with tetrahedron finite linear elements. Results. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ImplicitEuler.html:147,integrat,integration,147,examples/Tutorials/Solvers/ImplicitEuler.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ImplicitEuler.html,2,['integrat'],['integration']
Deployability,". Explicit Euler Solver. Description. 		In Sofa, EulerSolver denotes the ODE solver using the explicit integration scheme for the computing of ; 		the dynamic system. This integration scheme resolves the system in relation to time: given the mechanical state; 		at time Tn, compute the state at time Tn+1=Tn + dt. ; 		; Key points		; 		According to Taylor expansion, the error for the first derivative approximation of a function ; 		f(t) is in relation to dt and f""(t). The term f""(t) can represent the dynamic (forces, acceleraion) of the system. Thus, there are two ; 		important criteria for stabilization when using the explicit EulerSolver:; 		; The time step dt.; The dynamic of the system. 		In this example, if the time step is set higher (dt=0.001), or by using [Shift + leftmouse] to tug the object in order to ; 		dynamically unstabilize the system, the system becomes unstable as showm below :; 		. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ExplicitEuler.html:103,integrat,integration,103,examples/Tutorials/Solvers/ExplicitEuler.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ExplicitEuler.html,2,['integrat'],['integration']
Deployability,. File: scenes/steak.pscn using steak-seg.ppm 3 6; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.23; computeUniformSampling: 0.94; computeWeights: 2; computeLinearRegionsSampling: 0.04; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 3 10; Lloyd_iteration 0.24; Lloyd_iteration 0.23; Lloyd_iteration 0.24; computeUniformSampling: 0.94; computeWeights: 1.94; computeLinearRegionsSampling: 0.04; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 3 20; Lloyd_iteration 0.23; Lloyd_iteration 0.23; Lloyd_iteration 0.24; computeUniformSampling: 0.94; computeWeights: 1.93; computeLinearRegionsSampling: 0.04; updateSampleMaterialProperties: 0. File: scenes/steak.pscn using steak-seg.ppm 3 50; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.23; computeUniformSampling: 0.96; computeWeights: 1.92; computeLinearRegionsSampling: 0.04; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 5 6; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.24; computeUniformSampling: 1.89; computeWeights: 2.98; computeLinearRegionsSampling: 0.05; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 5 10; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.23; computeUniformSampling: 1.88; computeWeights: 2.96; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0. File: scenes/steak.pscn using steak-seg.ppm 5 20; Lloyd_iteration 0.25; Lloyd_iteration 0.23; Lloyd_iteration 0.25; Lloyd_iteration 0.23; Lloyd_iteration 0.23; computeUniformSampling: 1.89; computeWeights: 3.03; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0. File: scenes/steak.pscn using steak-seg.ppm 5 50; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.23; computeUniformSampling: 1.8,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:202,update,updateSampleMaterialProperties,202,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,4,['update'],['updateSampleMaterialProperties']
Deployability,". ForceField FEM on Tetrahedra. Description:; 		; 			The TetrahedronFEMForceField component is used to model an object by the Finite Element Method on a mesh composed tetrahedron.; 			There are three main methods of computation: ; 			; small : the simplest method using linear formulation in case of small displacement; large : the corotational formulation allowing large displacement; polar : the polar decomposition formulation allowing large displacement. 				Trivial user can use at least two main parameters related to the linear elasticity property of the modeled object; 			. Young's modulus; Poisson's ratio. 				By adjusting these coefficients, one can understand its relation with the mechanical behavior of objects and then ; 				can choose the appropriated parameters. There are also other parameters for advanced users :; 			. localStiffnessFactor; updateStiffnessMatrix; computeGlobalMatrix; etc. 				By double-clicking on the component, users can see all the parameters of the component. ; 			; Key Points:. TetrahedronFEMForceField works only with a tetrahedra mesh; Technical documentation [Nesme, Matthieu and Payan, Yohan and Faure, Francois] , Efficient Physically Plausible Finite Elements .2005. Results:. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/ForceFields/TutorialTetrahedronFEMForceField.html:862,update,updateStiffnessMatrix,862,examples/Tutorials/ForceFields/TutorialTetrahedronFEMForceField.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/ForceFields/TutorialTetrahedronFEMForceField.html,1,['update'],['updateStiffnessMatrix']
Deployability,". Instrument visual model; Description:. 		In this scene, we build the basics for a moving object. . 		; Key points:. First, we put a gravity in the whole scene with the Gravity component.; We set the instrument as a MechanicalObject. It describes the state of the particles of the object.; To compute the states at each time step, we need a time integrator, like the EulerImplicitSolver.; We need a linear solver, like CGLinearSolver, to solve the linear system generated with our implicit solver.; We finally add a mass to the object with the UniformMass component. Note:; The gravity can be set in a node with the vec3d argument gravity instead of with a component.; See other tutorials to learn more about time integration.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_03.html:347,integrat,integrator,347,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_03.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_03.html,2,['integrat'],"['integration', 'integrator']"
Deployability,. Instrument visual model; Description:. 		Using DistanceGrid collision:; 		Added a driver for the Omni phantom device ; 		Added a mechanical state controller that gathers data from the phantom and updates the position of a representation of the device in the simulation ; 		Added a computation (EnslavementForceFeedback) of the haptic forces ; 		Added VectorSpringForceField && JointSpringForceField to link the mouvements of the Omni phantom and the instrument; Redo this tutorial with proximity collision. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_06a.html:198,update,updates,198,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_06a.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_06a.html,1,['update'],['updates']
Deployability,. Instrument visual model; Description:. 		Using LCP contact detection and resolution:; 		Added a driver for the Omni phantom device ; 		Added a mechanical state controller that gathers data from the phantom and updates the position of a representation of the device in the simulation ; 		Added a computation (LCPForceFeedback) of the haptic forces ; 		Added VectorSpringForceField && JointSpringForceField to link the mouvements of the Omni phantom and the instrument; Redo this tutorial with distance grid collision. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_06b.html:212,update,updates,212,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_06b.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_06b.html,1,['update'],['updates']
Deployability,". Newmark Implicit Solver. Description. 	The NewmarkImplicitSolver can be used to solve ODE systems, using the Newmark implicit integration scheme. The step size of the discretization corresponds to the timeStep of SOFA.; 	; 	At each step of the scheme, the linear equation systems obtained have to be solved by an auxiliary component, the CGLinearSolver, which can be of different kinds (conjugated gradient, ...).; 	 ; Key points; 	Different simulations are proposed:; 	; Green: reference deformation.; Yellow: Mechanical system using springs along edges. Results. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ImplicitNewmark.html:128,integrat,integration,128,examples/Tutorials/Solvers/ImplicitNewmark.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ImplicitNewmark.html,1,['integrat'],['integration']
Deployability,". OdeSolver Tutorial. Truth and initial cylinders; Simulation results. Description. 	In these tutorials, we show the different integration schemes and algorithms available to solve the system of Ordinary Differential Equations (ODE) at each step of the simulation. SOFA provides the following integration schemes:; ; Static integration scheme,; Explicit integration schemes,; Implicit integration schemes. Before going any further, it is important to know that state vectors in SOFA are saved in a component called ""State"" (see chapter ""State"" in the documentation).; For instance, when mechanical models are being solved, the user needs to add a ""MechanicalState"" component in the graph.; Inside the component, the format of storage for the state vector is a structure called MultiVector.; The size and the nature of the degrees of freedom is chosen by setting a ""template"" in the State component. Let us now go into details about the different ODE solvers in SOFA. First, the static integration is an integration which does not take the time into account. Such a static integration can be useful for checking the convergence of algorithms. Furthermore, different dynamic solvers have been implement in SOFA. Unlike static solvers, these solvers do take the dynamics of the system into account. However, depending on the aim of the computation, the solver has to be carefully chosen.; Let us review the basic differences between explicit and implicit solvers. Concerning the explicit solvers, they compute the new state variables from the state variables at the previous step.; The advantage is that explicit solvers can be fast, but the stability of the solver is not always granted. Very small time steps can be required to get satisfactory accuracy.; Moreover, such solvers are not suitable for every simulation. For example, explicit solvers do not compute cyclic loadings correctly, but could be advised in case of soft or high-mass objects. Concerning implicit solvers, they compute the new sta",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html:127,integrat,integration,127,examples/Tutorials/Solvers/Solvers.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html,5,['integrat'],['integration']
Deployability,". RungeKutta Solver. Description; 	; 		Like EulerSolver in Sofa, RungeKuttaSolver denotes the ODE solver using the explicit integration scheme for computing of ; 		the dynamic system. This integration scheme explicitely resolves the system in relation to time: given the mechanical state; 		at time Tn, compute the state at time Tn+1=Tn + dt. The difference with RungeKuttaSolver is that this ; 		integration use a more sophisticated algorithm for the computation of the state at time Tn+1. Therefore there is more stability; 		and can use a higher time step than the EulerSolver one. Otherwise, RungeKuttaSolver uses a more general explicit method than EulerSolver.; ; Key points. 		As with every Explicit Integration method, RungeKutta accumulates errors for each time step. Therefore, two criteria must be ; 		controled when using it : ; 		; The time step dt.; The dynamic of the system. 		However, RungeKutta4 is certainly more stable than Explicit Euler: The convergence error in RungeKutta4 is in relation to o(dt4), ; 		but in Explicit Euler it's only o(dt). For this example, RungeKutta can resolve the system with dt=0.001, but not the ExplicitEuler (0.0001). ; . 		Users can try several solvers with different values of the dt parameter to gain an idea of the solver's differences (also test the dependence of the solver ; 		according to the dynamics of the system by using [Shift + left mouse]).; 		. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ExplicitRungeKutta4.html:124,integrat,integration,124,examples/Tutorials/Solvers/ExplicitRungeKutta4.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ExplicitRungeKutta4.html,4,"['Integrat', 'integrat']","['Integration', 'integration']"
Deployability,". Simple Shader (6/7). Description:; The final tweak we will explore in visualizing is the use of Shaders, and other ways to replace OpenGL standard operations. We will add our own operation, using three different parts in the rendering pipeline.; Key points; Clear the scene graph. Add a dragon OglModel as we did in the previous steps.; Shaders are applied in SOFA with the OglShader component. It will apply shading to all the Visual Models (OglModels) in its node, and all its child nodes. That way, you can have several Shaders in your scene.; Add an OlgShader component.; The mandatory parameters are vertFilename and fragFilename where you give the path to the vertex and fragment GLSL code.; Using the file browser, set the vertFilename to /Sofa/share/shaders/phong.vert, and the fragFilename to /Sofa/share/shaders/phong.frag.; Run in SOFA.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/5_Visual.html:237,pipeline,pipeline,237,examples/Tutorials/StepByStep/Visual/5_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/5_Visual.html,1,['pipeline'],['pipeline']
Deployability,". Static Solver. Description. The StaticSolver contains the algorithm used to update particle positions at each time step. As we are dealing with a Static solver, time (i.e. velocity and acceleration terms) is not taken into account. At each time step, the solver is looking for an equilibrium of the generalized forces at each nodes. Using a static solver can be useful to measure the convergence of several algorithms.; Solving for each point, the static equation amounts to solving a linear system Ax=b. In this scene, the static solver is coupled with an iterative linear solver: the CGLinearSolver, used to solve equation systems. . ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/StaticSolver.html:78,update,update,78,examples/Tutorials/Solvers/StaticSolver.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/StaticSolver.html,1,['update'],['update']
Deployability,". Step by Step Tutorials. Pendulum Creation; Scene Creation; Topological Mapping. Description; In this set of tutorials, we will construct scenes from scratch, step by step.; The first Tutorial is about the creation of a Pendulum involving two simulated objects: we will rely on a mass spring system to simulate internal and external forces. ; In the second tutorial, we will simulate the collision of a deformable object against a floor. We will present how the collision pipeline works, and how models can be visually and mechanically. This concept of mapping is really central in Sofa, and is used in almost all our scenes. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/StepByStep.html:473,pipeline,pipeline,473,examples/Tutorials/StepByStep/StepByStep.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/StepByStep.html,1,['pipeline'],['pipeline']
Deployability,". The Graphic User; Interface in SOFA; I) An overview of the GUI; II) Structure; III) Viewers; IV) QtOgreViewer; . An Overview of the GUI. The main; program is divided in two main parts, a rendering window and a control; panel. A slider between them sets their; dimension. Common Interactions:. ANIM: launch the Simulation.; The text field, DTsets the step of time used during the; simulation. STEP: the simulation will; compute its state at the time: t+DT. Reset Scene: reset the; Simulation to the initial time, t=0. Reset View: set your camera at; initial configuration found in a view file, or default; configuration. Save View: keep in memory the; position and orientation of the camera, for the next time you will load; the scene. Save Screenshot: take a picture; of the current scene. Direct interaction with the scene is; possible. To do so, maintain SHIFT button pressed and click on a; collision model present in the scene; A �Pick Interactor� will be; created, and attached to the picked collision model, if any, with a; spring. ; If; you release the mouse button first, the spring is removed.; If; you release the SHIFT button first, the spring is fixed and exists; until you pick another point in the scene. Several tabs give more information; about the current scene: ; This images were taken for the scene shown above. . - depending on the viewer, you can control what is displayed, and the; way it is. ; - statistical outputs during the simulation (position and velocity for; each elements, time passed at each branch of the graph, gnuplot files); ; - the graph of the scene, with all the nodes. You can export this graph; into a nice png file.; - the last tab, �Viewer� gives the name and information about; the possibilities of the current viewer, and the shortcuts. Double clicking on a node allows you to modify several values and; change dynamically the simulation (here, the TetrahedronFEMForceField; node). In some cases, you need to press the update button; to apply the change",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:559,configurat,configuration,559,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,2,['configurat'],['configuration']
Deployability,". Topological Mapping (6/7). Description; This step does not continue from the previous steps. It shows a hexahedra mesh which already has mechanical behavior and could be also linked to a surface mesh.; Key points; Press the Edit in Modeler button at the top of this window.; This opens a pre-built scene graph in the Modeler.; This scene includes components we are already familiar with:. An ODE solver and a linear solver. ; MechanicalObject with geometry point positions.; RegularGridTopology is used to create a 3D grid mesh. ; HexahedronFEMForcefield is used to create tetrahedral finite elements on this mechanical system.; DiagonalMass describes a global mass of the mesh elements.; Constraint components are used here to fix the four corners of the upper face of the cube. Results; Run in SOFA and animate. Interact with the cube by holding the Shift key and dragging with the mouse.; This scene represents a 3D cube mesh under gravity. It is the same configuration as the step ""Embedding the Model"". Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/5_TopoMapping.html:961,configurat,configuration,961,examples/Tutorials/StepByStep/TopologicalMapping/5_TopoMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/5_TopoMapping.html,1,['configurat'],['configuration']
Deployability,". Topological Mapping (7/7). Description; This final step is a second pipeline of topological mappings from an hexahedral mesh to a triangular one, going through Quads.; Key points. Dynamic topological components to store the quad mesh. ; Hexa2QuadTopologicalMapping component is used to map Quads on the border of the hexahedral mesh to this container.; Dynamic topological components to store the triangular mesh. ; Quad2TriangleTopologicalMapping component is used to map Quads to Triangles.; Springs are added to the edges of the surface of the mesh using TriangularBendingSprings.; Finally, OglModel is used to visualize the surface mesh. Press the Edit in Modeler button at the top of this window.; Again, a pre-built scene graph opens in the Modeler. You can also look at the details of the scene in the right panel of this window.; Here we see five nodes, each a child of the previous node. This is a good visual representation of the flow of the collision pipeline.; Starting at the root node, we have all the basic components needed for the scene, including the DefaultPipeline.; Next we come to the Hexahedral Mesh, which includes the Ogl solver to determine the forces that the model will experience.; Once the solver determines the movement of the hexahedrons, the Quad Mesh maps that movement to a quad representation of only the surface of the model.; In turn, the Triangles Mesh maps the movement of the quad representation to a triangular representation. Here we also add springs and constraints to the surface.; Finally, all the information that has been passed down the pipeline is used by Visu to create a visualization of the surface of the model.; Results; Run in SOFA and Animate.; This last step shows another example of topological mappings with a mechanical behavior similar to step Change mesh behaviour. Previous. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/6_TopoMapping.html:70,pipeline,pipeline,70,examples/Tutorials/StepByStep/TopologicalMapping/6_TopoMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/6_TopoMapping.html,3,['pipeline'],['pipeline']
Deployability,". Topology Triangle2EdgeTopologicalMapping. Description. 	The aim of this tutorial is to show the interest of using a topological mapping between a 2D surface mesh and a 1D linear mesh. In this tutorial, a soft tissues is represented, implying:; 	 ; A mesh loader to read mesh file.; A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A FEM forcefield to create interactions between points; An ODE scheme and a linear solver to solve the system at each time step.; Dynamic topological components.; A visual model which reproduces the current model geometry thanks to the identity mapping. Key points. 	Under the first node representing the triangulation, a second node is used to represent the linear topology.; 	; 	This second representation won't reproduce all edges of the triangulation, but only edges on the mesh borders. I.e edges with only one adjacent triangle. ; 	; 	They are represented in green in the simulation.; 	. 	To create this mapping, the component Triangle2EdgeTopologicalMapping is used. This component takes an input topology (Data Object1) which is the container of the ""upper"" topology (triangulation here) and has an output topology (Data Object2) which is the container of the above topology (edges here).; 	. Results. 	In this simulation, both triangulation and edge mesh have spring forcefields to create interaction between points. Thus, when simulating, the soft tissue won't stretch.; 	; 	Try to remove the TriangularBendingSprings component. The result will be a tissue completely stretched.; 	. 	Finally, try to remove the MeshSringForceField component. The result will be a bad behavior of the mesh borders.; 	. Additional results. 	When deleting triangles, the topological mapping is updated and so is the list of border edges.; 	. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyTriangle2EdgeTopologicalMapping.html:1757,update,updated,1757,examples/Tutorials/Topologies/TopologyTriangle2EdgeTopologicalMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyTriangle2EdgeTopologicalMapping.html,1,['update'],['updated']
Deployability,". Tutorial Topology Quad2TriangleTopologicalMapping. Description. 	The aim of this tutorial is to show the interest of using a topological mapping between two 2D surface meshes. In this tutorial, a soft cube is represented, implying:; 	 ; A mesh loader to read mesh file.; A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A FEM forcefield to create interactions between points; An ODE scheme and a linear solver to solve the system at each time step.; Dynamic topological components.; A visual model which reproduces the current model geometry thanks to the identity mapping. Key points. 	Under the first node representing the quad mesh, a second node is used to represent the triangle mesh.; 	; 	This is not the same case as a topological mapping with different dimension. In this case, both topologies are 2D surfaces. Thus, the triangulation will split each quad into 2 adjacent triangles.; 	; 	Triangle edges are represented in yellow in the simulation. Display the scene in wire frame to see the quads.; 	. 	To create this mapping, the component Quad2TriangleTopologicalMapping is used. This component takes an input topology (Data Object1) which is the container of the ""upper"" topology (quad here) and has an output topology (Data Object2) which is the container of the above topology (triangle here).; 	. Results. 	In this simulation, no forcefield is linked to the quads, showing that the ""above"" topology can be used as a base for the simulation. (useful when a more precise topology is wanted); 	; 	Try to remove either the TriangularBendingSprings or TriangularFEMForceField component. The result will be a completely stretched tissue.; 	. Additional results. 	When deleting triangles, the topological mapping is updated, and so is the list of quads.; 	. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyQuad2TriangleTopologicalMapping.html:1765,update,updated,1765,examples/Tutorials/Topologies/TopologyQuad2TriangleTopologicalMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyQuad2TriangleTopologicalMapping.html,1,['update'],['updated']
Deployability,". TutorialBasicCube.scn; Description:. In this tutorial, a deformable cube undergoes internal and external forces. This is one of the simplest scenes we can simulate using Sofa. We use it to introduce the component structure. The shape is modeled using a MechanicalObject which desribes the particle states, and a Topology which describes how the particles are connected. The forces are the MeshSpringForceField, which defines springs according to the edges of the mesh (the Topology), and the PlaneForceField which try to prevent the particles to cross planes. The EulerImplicitSolver contains the algorithm used to update particle positions and velocities at each time step. It uses an auxiliary component, the CGLinearSolver, to solve equation systems. . See Also:. TutorialCollisionCubeObstacleSphere. TutorialMappingDragonRigid. TutorialForceFieldLiverSprings. TutorialBasicPendulum. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Basic/TutorialBasicCube.html:617,update,update,617,examples/Tutorials/Basic/TutorialBasicCube.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Basic/TutorialBasicCube.html,1,['update'],['update']
Deployability,.39; Lloyd_iteration 2.33; Lloyd_iteration 2.34; Lloyd_iteration 2.33; Lloyd_iteration 2.36; Lloyd_iteration 2.37; computeUniformSampling: 60.37; computeWeights: 63.36; computeLinearRegionsSampling: 1.61; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg2.ppm 20 50; Lloyd_iteration 2.35; Lloyd_iteration 2.32; Lloyd_iteration 2.33; Lloyd_iteration 2.38; Lloyd_iteration 2.32; Lloyd_iteration 2.32; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.36; Lloyd_iteration 2.32; Lloyd_iteration 2.32; computeUniformSampling: 59.97; computeWeights: 62.97; computeLinearRegionsSampling: 1.6; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg3.ppm 3 6; computeUniformSampling: 17.03; computeWeights: 128.26; computeLinearRegionsSampling: 2.31; updateSampleMaterialProperties: 0.17. File: scenes/steak.pscn using steak-seg3.ppm 3 10; computeUniformSampling: 17.07; computeWeights: 128.21; computeLinearRegionsSampling: 2.32; updateSampleMaterialProperties: 0.17. File: scenes/steak.pscn using steak-seg3.ppm 3 20; computeUniformSampling: 17.15; computeWeights: 128.5; computeLinearRegionsSampling: 2.3; updateSampleMaterialProperties: 0.17. File: scenes/steak.pscn using steak-seg3.ppm 3 50; computeUniformSampling: 17.13; computeWeights: 128.59; computeLinearRegionsSampling: 2.32; updateSampleMaterialProperties: 0.18. File: scenes/steak.pscn using steak-seg3.ppm 5 6; Lloyd_iteration 17.73; Lloyd_iteration 17.67; Lloyd_iteration 17.78; Lloyd_iteration 17.71; Lloyd_iteration 17.79; Lloyd_iteration 17.77; Lloyd_iteration 17.71; Lloyd_iteration 17.73; Lloyd_iteration 17.75; Lloyd_iteration 17.74; Lloyd_iteration 17.67; Lloyd_iteration 17.67; Lloyd_iteration 17.68; Lloyd_iteration 17.76; Lloyd_iteration 17.71; Lloyd_iteration 17.59; Lloyd_iteration 17.65; Lloyd_iteration 17.75; Lloyd_iteration 17.62; Lloyd_iteration 17.62; Lloyd_iteration 17.76; Lloyd_iteration 17.73; Lloyd_iteration 17.76; Lloyd_iteration 17.69; Lloyd_iteration 1,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:26636,update,updateSampleMaterialProperties,26636,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,.FEM] Small update on container access to avoid unecessary check [#4639](https://github.com/sofa-framework/sofa/pull/4639); - [AnimationLoop] Rename Data [#4664](https://github.com/sofa-framework/sofa/pull/4664); - [Guidelines] Format cpp code [#4695](https://github.com/sofa-framework/sofa/pull/4695); - [all] Remove some warnings [#4698](https://github.com/sofa-framework/sofa/pull/4698); - [examples] Run PluginFinder on examples [#4707](https://github.com/sofa-framework/sofa/pull/4707); - [examples] Remove examples using DefaultCollisionGroupManager [#4708](https://github.com/sofa-framework/sofa/pull/4708); - [Core] Warn when module name is empty [#4725](https://github.com/sofa-framework/sofa/pull/4725); - ﻿[PlayBack] Update playback scenes to write/read and compare a beam under gravity motion [#4745](https://github.com/sofa-framework/sofa/pull/4745); - [tools] Factorize and clean plugin list filtering [#4748](https://github.com/sofa-framework/sofa/pull/4748); - [tools] Add new dependency to fix in MacOS post-install-fixup [#4749](https://github.com/sofa-framework/sofa/pull/4749); - [all] Fix typos in comments [#4759](https://github.com/sofa-framework/sofa/pull/4759); - [All] Delete v23.06 disabled header [#4760](https://github.com/sofa-framework/sofa/pull/4760); - [examples] Rename example scenes of constraints [#4769](https://github.com/sofa-framework/sofa/pull/4769). ### Refactoring. - [Constraint] Make name of constraints more explicit [#4302](https://github.com/sofa-framework/sofa/pull/4302); - [Constraint.Projective] Implement applyConstraint from new matrix assembly API [#4309](https://github.com/sofa-framework/sofa/pull/4309); - [Spring] Extract LinearSpring class in its own file [#4454](https://github.com/sofa-framework/sofa/pull/4454); - [VolumetricRendering][SofaCUDA] Move CUDA files related to VolumetricRendering [#4487](https://github.com/sofa-framework/sofa/pull/4487); - [DefaultType] Extract inner classes from SolidTypes in files [#4513](https://github,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:17800,install,install-fixup,17800,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install-fixup']
Deployability,".com/sofa-framework/sofa/pull/185 ); - Remove deprecated miniBoost dependency [#273]( https://github.com/sofa-framework/sofa/pull/273 ). ### Improvements. **Modules**; - [All]; - update containers to support c++x11 features [#113]( https://github.com/sofa-framework/sofa/pull/113 ); - speed up spheres rendering + code cleaning [#170]( https://github.com/sofa-framework/sofa/pull/170 ); - updates externs/gtest to a fresh checkout [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - auto-init/cleanup libraries [#168]( https://github.com/sofa-framework/sofa/pull/168 ); - Improve and clean msg_api and logging of message (#190, #255, #275). See [documentation](https://www.sofa-framework.org/community/doc/programming-with-sofa/logger/) for more information.; - Add CMake option to limit cores used to build specific targets [#254]( https://github.com/sofa-framework/sofa/pull/254 ); - Fix rgbacolor parsing [#305]( https://github.com/sofa-framework/sofa/pull/305 ); - CMake: installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - [SofaKernel]; - Update the RichConsoleStyleMessageFormatter [#126]( https://github.com/sofa-framework/sofa/pull/126 ); - creation of a defaulttype::RGBAColor [#119]( https://github.com/sofa-framework/sofa/pull/119 ); - add a new method in BaseObjectDescription [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - adding listener mechanism to SceneLoader [#205]( https://github.com/sofa-framework/sofa/pull/205 ); - common usage for DiagonalMass and tests [#230]( https://github.com/sofa-framework/sofa/pull/230 ); - add tests for DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - add tests for DefaultAnimationLoop [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for LocalMinDistance [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add a way to convert message type to string in Message.cpp [#213]( https://github.com/sofa-framework/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:326388,install,installing,326388,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['installing']
Deployability,".conf' if present; else 'plugin_list.conf.default' containing all compiled plugins and generated automatically by CMake. **For developpers**; - Add a Logger component that stores the history of messages into each sofa component.; - Implements new methods to write on-liner's conditional message:; msg_info_when(level<3) << ""This is a conditional info message""; - Implement an implicit version of each of the msg_* API allowing to write; msg_info() << ""Hello"" in place for msg_info(this) << Hello""; - CImgPlugin : creation of a dedicated plugin for image loading based on CImg [#185]( https://github.com/sofa-framework/sofa/pull/185 ); - Remove deprecated miniBoost dependency [#273]( https://github.com/sofa-framework/sofa/pull/273 ). ### Improvements. **Modules**; - [All]; - update containers to support c++x11 features [#113]( https://github.com/sofa-framework/sofa/pull/113 ); - speed up spheres rendering + code cleaning [#170]( https://github.com/sofa-framework/sofa/pull/170 ); - updates externs/gtest to a fresh checkout [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - auto-init/cleanup libraries [#168]( https://github.com/sofa-framework/sofa/pull/168 ); - Improve and clean msg_api and logging of message (#190, #255, #275). See [documentation](https://www.sofa-framework.org/community/doc/programming-with-sofa/logger/) for more information.; - Add CMake option to limit cores used to build specific targets [#254]( https://github.com/sofa-framework/sofa/pull/254 ); - Fix rgbacolor parsing [#305]( https://github.com/sofa-framework/sofa/pull/305 ); - CMake: installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - [SofaKernel]; - Update the RichConsoleStyleMessageFormatter [#126]( https://github.com/sofa-framework/sofa/pull/126 ); - creation of a defaulttype::RGBAColor [#119]( https://github.com/sofa-framework/sofa/pull/119 ); - add a new method in BaseObjectDescription [#161]( https://github.com/sofa-framework/so",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:325792,update,updates,325792,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['updates']
Deployability,"//github.com/sofa-framework/sofa/pull/860 ); - **[SofaKernel]** Refactor DataTrackerEngine so it match the DataCallback [#1073]( https://github.com/sofa-framework/sofa/pull/1073 ); - **[SofaKernel]** Remove annoying warning [#1062]( https://github.com/sofa-framework/sofa/pull/1062 ); - **[SofaKernel]** Remove boost::locale dependency [#1033]( https://github.com/sofa-framework/sofa/pull/1033 ); - **[SofaKernel]** Remove usage of helper::system::atomic<int> (replaced by STL's) [#1035]( https://github.com/sofa-framework/sofa/pull/1035 ); - **[SofaKernel]** Several changes in Topology components [#999]( https://github.com/sofa-framework/sofa/pull/999 ); - **[SofaKernel]** minor cleaning in mesh loader [#1025]( https://github.com/sofa-framework/sofa/pull/1025 ); - **[SofaKernel]** Remove multigroup option in MatrixLinearSolver [#901]( https://github.com/sofa-framework/sofa/pull/901 ); - [SofaRigid] Clean JointSpringFF [#850]( https://github.com/sofa-framework/sofa/pull/850 ); - [SofaRigid] Cosmetic clean in RigidRigidMapping & msg_* update. [#1005]( https://github.com/sofa-framework/sofa/pull/1005 ); - **[SofaSimpleFem]** Use msg and size_t in TetraDiff [#1016]( https://github.com/sofa-framework/sofa/pull/1016 ). **Plugins / Projects**; - [image] Add warning guiding users regarding pluginization of DiffusionSolver [#1067]( https://github.com/sofa-framework/sofa/pull/1067 ); - [Modeler] Deactivate Modeler by default, since it is deprecated [#972]( https://github.com/sofa-framework/sofa/pull/972 ). **Examples / Scenes**; - [Scenes] Apply script on all scenes using VisualModel/OglModel [#1081]( https://github.com/sofa-framework/sofa/pull/1081 ). ____________________________________________________________. ## [v18.12]( https://github.com/sofa-framework/sofa/tree/v18.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v18.06...v18.12 ). ### Deprecated. **Removed in v18.12**; - [SofaBoundaryCondition] BuoyantForceField [#457]( https://github.com/sofa-framework/sof",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:273964,update,update,273964,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,/2471 ); - [Scenes] Update TriangleSurfaceCutting scene to use a bigger mesh with texture [#2381]( https://github.com/sofa-framework/sofa/pull/2381 ). **Scripts / Tools**. ### Bug Fixes. **Architecture**; - [CMake] Clean Sofa.Core CMakeLists + Add missing headers [#2444]( https://github.com/sofa-framework/sofa/pull/2444 ); - [CMake] FIX Threads dependency [#2511]( https://github.com/sofa-framework/sofa/pull/2511 ); - [CMake] FIX libs copy on Windows [#2261]( https://github.com/sofa-framework/sofa/pull/2261 ); - [CMake][modules] FIX out-of-tree builds [#2453]( https://github.com/sofa-framework/sofa/pull/2453 ); - [CMake] Fix return values of Qt5/Qt6 find_packages [#2346]( https://github.com/sofa-framework/sofa/pull/2346 ). **Modules**; - [All] Fix potential bugs/crashes (from warnings) [#2379]( https://github.com/sofa-framework/sofa/pull/2379 ); - [All] Update IDE directory for targets [#2239]( https://github.com/sofa-framework/sofa/pull/2239 ); - [SofaMiscForceField] Fix massDensity vector update when adding new elements in MeshMatrixMass [#2257]( https://github.com/sofa-framework/sofa/pull/2257 ); - [Sofa.Compat] Fix Matrixexpr alias [#2369]( https://github.com/sofa-framework/sofa/pull/2369 ); - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Core] Fix diamond inheritance in PairInteractionConstraint [#2488]( https://github.com/sofa-framework/sofa/pull/2488 ); - [Sofa.DefaultType] Fix declaration of global variables [#2317]( https://github.com/sofa-framework/sofa/pull/2317 ); - [Sofa.GL] Set glew as mandatory [#2358]( https://github.com/sofa-framework/sofa/pull/2358 ); - [Sofa.Helper] Fix and micro-optimize AdvancedTimer [#2349]( https://github.com/sofa-framework/sofa/pull/2349 ); - [Sofa.Helper] More tests for NameDecoder + fix them [#2380]( https://github.com/sofa-framework/sofa/pull/2380 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framew,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:145170,update,update,145170,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,/DefaultVisualManagerLoop.h; ${SRC_ROOT}/DeleteVisitor.h; ${SRC_ROOT}/ExportDotVisitor.h; ${SRC_ROOT}/ExportGnuplotVisitor.h; ${SRC_ROOT}/ExportVisualModelOBJVisitor.h; ${SRC_ROOT}/InitVisitor.h; ${SRC_ROOT}/IntegrateBeginEvent.h; ${SRC_ROOT}/IntegrateEndEvent.h; ${SRC_ROOT}/LocalStorage.h; ${SRC_ROOT}/MechanicalOperations.h; ${SRC_ROOT}/MechanicalVPrintVisitor.h; ${SRC_ROOT}/MechanicalVisitor.h; ${SRC_ROOT}/MutationListener.h; ${SRC_ROOT}/Node.h; ${SRC_ROOT}/Node.inl; ${SRC_ROOT}/ParallelForEach.h; ${SRC_ROOT}/ParallelSparseMatrixProduct.h; ${SRC_ROOT}/ParallelVisitorScheduler.h; ${SRC_ROOT}/PauseEvent.h; ${SRC_ROOT}/PipelineImpl.h; ${SRC_ROOT}/PositionEvent.h; ${SRC_ROOT}/PrintVisitor.h; ${SRC_ROOT}/PropagateEventVisitor.h; ${SRC_ROOT}/RequiredPlugin.h; ${SRC_ROOT}/ResetVisitor.h; ${SRC_ROOT}/SceneLoaderFactory.h; ${SRC_ROOT}/Simulation.h; ${SRC_ROOT}/SimulationLoop.h; ${SRC_ROOT}/SolveVisitor.h; ${SRC_ROOT}/StateChangeVisitor.h; ${SRC_ROOT}/TopologyChangeVisitor.h; ${SRC_ROOT}/UpdateBoundingBoxVisitor.h; ${SRC_ROOT}/UpdateContextVisitor.h; ${SRC_ROOT}/UpdateInternalDataVisitor.h; ${SRC_ROOT}/UpdateLinksVisitor.h; ${SRC_ROOT}/UpdateMappingEndEvent.h; ${SRC_ROOT}/UpdateMappingVisitor.h; ${SRC_ROOT}/VectorOperations.h; ${SRC_ROOT}/VelocityThresholdVisitor.h; ${SRC_ROOT}/Visitor.h; ${SRC_ROOT}/VisitorExecuteFunc.h; ${SRC_ROOT}/VisitorScheduler.h; ${SRC_ROOT}/VisualVisitor.h; ${SRC_ROOT}/WriteStateVisitor.h; ${SRC_ROOT}/XMLPrintVisitor.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/BaseSimulationExporter.h; ${SRC_ROOT}/TaskScheduler.h; ${SRC_ROOT}/TaskSchedulerFactory.h; ${SRC_ROOT}/TaskSchedulerRegistry.h; ${SRC_ROOT}/DefaultTaskScheduler.h; ${SRC_ROOT}/Task.h; ${SRC_ROOT}/InitTasks.h; ${SRC_ROOT}/Locks.h; ${SRC_ROOT}/MainTaskSchedulerFactory.h; ${SRC_ROOT}/MainTaskSchedulerRegistry.h; ${SRC_ROOT}/SceneCheck.h; ${SRC_ROOT}/SceneCheckRegistry.h; ${SRC_ROOT}/SceneCheckMainRegistry.h; ${SRC_ROOT}/WorkerThread.h; ${SRC_ROOT}/events/BuildConstraintSystemEndEvent.h; ${SRC_ROOT}/events,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:1700,Update,UpdateBoundingBoxVisitor,1700,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Update'],['UpdateBoundingBoxVisitor']
Deployability,/github.com/sofa-framework/sofa/pull/3755) ; - [Mapping.NonLinear] Fix SquareMapping applyDJT [#3761](https://github.com/sofa-framework/sofa/pull/3761); - [LinearAlgebra] Restore insertion operator for BaseVector [#3775](https://github.com/sofa-framework/sofa/pull/3775) ; - [StateContainer] Fix bug in dynamic data registration [#3783](https://github.com/sofa-framework/sofa/pull/3783) ; - [Rendering3D] Missing StateLifeCycle [#3784](https://github.com/sofa-framework/sofa/pull/3784) ; - [Mapping.Nonlinear] Fix matrix assembly in RigidMapping [#3803](https://github.com/sofa-framework/sofa/pull/3803) ; - [Visual] VisualModelImpl: Fix updateVisual() [#3815](https://github.com/sofa-framework/sofa/pull/3815) ; - [LinearSolver.Iterative] CMake: Fix package configuration [#3840](https://github.com/sofa-framework/sofa/pull/3840) ; - [Rendering3D] OglModel: Revert back to glBufferSubData [#3841](https://github.com/sofa-framework/sofa/pull/3841) ; - [SolidMechanics.Spring] CMake: Fix package configuration [#3846](https://github.com/sofa-framework/sofa/pull/3846) ; - [Spring] Remove unused dependencies [#3848](https://github.com/sofa-framework/sofa/pull/3848) ; - [FEM.Linear] FIX & Minor refactor of buildStiffnessMatrix in TriangleFEMForceField [#3989](https://github.com/sofa-framework/sofa/pull/3989). **Plugins / Projects**; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid2D [#3561](https://github.com/sofa-framework/sofa/pull/3561) ; - [MultiThreading] ParallelBruteForceBroadPhase: Fix assertion error [#3574](https://github.com/sofa-framework/sofa/pull/3574) ; - [image] Fix Sofa.GUI dependency [#3591](https://github.com/sofa-framework/sofa/pull/3591) ; - [SofaCUDA] Missing support for double precision floating-points [#3603](https://github.com/sofa-framework/sofa/pull/3603) ; - [SofaPhysicsAPI] Fix compilation by replacing use of SofaGUI by sofa::GUI::common [#3612](https://github.com/sofa-framework/sofa/pull/3612) ; - [SofaCUDA] No longer use deprecated texture refer,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:59184,configurat,configuration,59184,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['configurat'],['configuration']
Deployability,/pull/1055 ); - [All] up change on GetMeshTopology [#1223]( https://github.com/sofa-framework/sofa/pull/1223 ); - [SofaBoundaryConditions] Apply doInternalUpdate API to ConstantForceField [#1145]( https://github.com/sofa-framework/sofa/pull/1145 ); - **[SofaKernel]** Replacing const char* with strings for group / help / widget etc. [#1152]( https://github.com/sofa-framework/sofa/pull/1152 ); - **[SofaKernel]** ADD: static method in events to retrieve the classname [#1118]( https://github.com/sofa-framework/sofa/pull/1118 ); - **[SofaKernel]** Set BaseData to non-persistant by default [#1191]( https://github.com/sofa-framework/sofa/pull/1191 ); - **[SofaKernel]** fix root's getPathName [#1146]( https://github.com/sofa-framework/sofa/pull/1146 ). ### Improvements. **Architecture**; - [CMake] v19.06 changes [#1114]( https://github.com/sofa-framework/sofa/pull/1114 ); - [extlibs] Set Eigen as external project + upgrade to 3.2.10 [#1101]( https://github.com/sofa-framework/sofa/pull/1101 ); - [extlibs] Upgrade Qwt extlib from 6.1.2 to 6.1.4 [#1136]( https://github.com/sofa-framework/sofa/pull/1136 ). **Modules**; - [All] Add SingleLink to Topology to reveal hidden GetMeshTopology Part 2 [#1199]( https://github.com/sofa-framework/sofa/pull/1199 ); - [All] Add update internal mechanism [#1131]( https://github.com/sofa-framework/sofa/pull/1131 ); - [All] Update the SOFA Guidelines [#1135]( https://github.com/sofa-framework/sofa/pull/1135 ); - **[SofaBaseMechanics]** Add topological change in barycentric mapping [#1203]( https://github.com/sofa-framework/sofa/pull/1203 ); - **[SofaBaseMechanics]** Use doUpdateInternal API in DiagonalMass [#1150]( https://github.com/sofa-framework/sofa/pull/1150 ); - **[SofaBaseMechanics]** Use doUpdateInternal API in UniformMass [#1149]( https://github.com/sofa-framework/sofa/pull/1149 ); - **[SofaBaseTopology]** Add new geometric methods in TetrahedronSetGeometryAlgorythms [#1160]( https://github.com/sofa-framework/sofa/pull/1160 ); - **[Sofa,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:244888,Upgrade,Upgrade,244888,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Upgrade'],['Upgrade']
Deployability,/sofa-framework/sofa/pull/1128 ); - **[SofaFramework]** Remove (painful) check/warning with Rigids [#1229]( https://github.com/sofa-framework/sofa/pull/1229 ); - [SofaGUI] Split OpenGL and Qt dependency [#1121]( https://github.com/sofa-framework/sofa/pull/1121 ); - [SofaGeneralObjectInteraction] Create delegate functions in AttachConstraint [#1185]( https://github.com/sofa-framework/sofa/pull/1185 ); - [SofaGraphComponent] Update sceneCheckerAPI and deprecate MatrixMass [#1107]( https://github.com/sofa-framework/sofa/pull/1107 ); - [SofaHAPI] Fixes for HAPI [#1189]( https://github.com/sofa-framework/sofa/pull/1189 ); - **[SofaKernel]** ADD const specifier on notify methods in Node [#1169]( https://github.com/sofa-framework/sofa/pull/1169 ); - **[SofaKernel]** Remove deprecated SOFA_DEBUG macro [#1232]( https://github.com/sofa-framework/sofa/pull/1232 ); - **[SofaMeshCollision]** Clean deprecated code [#1201]( https://github.com/sofa-framework/sofa/pull/1201 ); - [SofaSphFluid] Clean code of ParticleSource and update scenes [#1190]( https://github.com/sofa-framework/sofa/pull/1190 ); - [SofaSphFluid] Reorder plugin code and scenes files [#1165]( https://github.com/sofa-framework/sofa/pull/1165 ); - [SofaSphFluid] Several clean in the plugin components [#1186]( https://github.com/sofa-framework/sofa/pull/1186 ); - [SofaSphFluid] missing namespace [#1188]( https://github.com/sofa-framework/sofa/pull/1188 ); - [SofaTest] CLEAN msg in Multi2Mapping_test [#1097]( https://github.com/sofa-framework/sofa/pull/1097 ); - [SofaTopologyMapping] Cleanups of some topological mappings + better initialization [#1126]( https://github.com/sofa-framework/sofa/pull/1126 ); - [SofaViewer] Prevent the GUI to ouput every CTRL actions in the console [#1130]( https://github.com/sofa-framework/sofa/pull/1130 ). **Plugins / Projects**; - [CGALPlugin] Some cleanups to CylinderMesh [#1124]( https://github.com/sofa-framework/sofa/pull/1124 ); - [CGal plugin][CImgPlugin] Image data moved from Image,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:255643,update,update,255643,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,"/sofa/pull/457 ); - [SofaUserInteraction] ArticulatedHierarchyController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] DisabledContact [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] EdgeSetController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] GraspingManager [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] InterpolationController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] MechanicalStateControllerOmni [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] NodeToggleController [#457]( https://github.com/sofa-framework/sofa/pull/457 ). ### Breaking. **Modules**; - [SofaConstraint] Update FreeMotionAnimationLoop so that it can compute a linearised version of the constraint force. [#459]( https://github.com/sofa-framework/sofa/pull/459 ); - **[SofaCore]** Update FreeMotionAnimationLoop so that it can compute a linearised version of the constraint force. [#459]( https://github.com/sofa-framework/sofa/pull/459 ); - **[SofaHelper]** Unifying the way we report file related errors [#669]( https://github.com/sofa-framework/sofa/pull/669 ). ### Improvements. **Architecture**; - [CMake] ADD external projects handling [#649]( https://github.com/sofa-framework/sofa/pull/649 ); - [CMake] ADD the CMAKE_WARN_DEPRECATED option in SOFA [#662]( https://github.com/sofa-framework/sofa/pull/662 ); - [CMake] Improve SOFA installation and packaging [#635]( https://github.com/sofa-framework/sofa/pull/635 ); - [CMake] Cleans for packaging [#789]( https://github.com/sofa-framework/sofa/pull/789 ). **Modules**; - [All] Refactoring in Camera, BackgroundSetting and Light [#676]( https://github.com/sofa-framework/sofa/pull/676 ); - **[SofaBaseLinearSolver]** Improve warning emission for CG [#658]( https://github.com/sofa-framework/sofa/pull/658 ); - **[SofaBaseLinearSolver]** Add abilit",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:293375,Update,Update,293375,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,2 [#4319](https://github.com/sofa-framework/sofa/pull/4319); - [SofaAssimp] Fix the FindAssimp.cmake [#4326](https://github.com/sofa-framework/sofa/pull/4326); - [image] image_gui to compile with Qt6 [#4330](https://github.com/sofa-framework/sofa/pull/4330); - [Haption] Partially fix the plugin [#4338](https://github.com/sofa-framework/sofa/pull/4338); - [github] quick fix for GHD script [#4347](https://github.com/sofa-framework/sofa/pull/4347); - [github] fix stale action [#4348](https://github.com/sofa-framework/sofa/pull/4348); - [GUI] Fix compilation using QDocBrowser [#4354](https://github.com/sofa-framework/sofa/pull/4354); - [VolumetricRendering] Fix the compilation [#4398](https://github.com/sofa-framework/sofa/pull/4398); - [VolumetricRendering] Fix crashes in batch mode [#4436](https://github.com/sofa-framework/sofa/pull/4436); - [LinearSolver.Direct] Fix metis dependency [#4450](https://github.com/sofa-framework/sofa/pull/4450); - [Simulation.Common] Fix tinyXML2 install for windows [#4525](https://github.com/sofa-framework/sofa/pull/4525); - [all] Install FindTinyXML2 [#4545](https://github.com/sofa-framework/sofa/pull/4545); - [cmake] Remove error in Findcxxopt [#4554](https://github.com/sofa-framework/sofa/pull/4554); - [GUI.qt] Set link to tinyxml2 to PRIVATE and fix config file [#4558](https://github.com/sofa-framework/sofa/pull/4558); - [Config] Fix findcxxopt when version is not specified [#4564](https://github.com/sofa-framework/sofa/pull/4564); - [Config] Fix Findmetis module when using config mode [#4570](https://github.com/sofa-framework/sofa/pull/4570); - [all] Fix tinyxml2 dependency [#4574](https://github.com/sofa-framework/sofa/pull/4574). ### Cleaning; - [plugins] Remove fetching of SofaPython [#3855](https://github.com/sofa-framework/sofa/pull/3855); - [Constraint.Lagrangian] Add messages when no compliance is given [#3858](https://github.com/sofa-framework/sofa/pull/3858); - [all] include base class inl file [#3865](https://github.com/so,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:39385,install,install,39385,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,2038]( https://github.com/sofa-framework/sofa/pull/2038 ); - [Plugins] Add SofaGLFW GUI [#2062]( https://github.com/sofa-framework/sofa/pull/2062 ); - [SofaCUDA] Add more examples for liver scene and squareTissue [#2016]( https://github.com/sofa-framework/sofa/pull/2016 ). **Examples / Scenes**; - [Benchmark] Introduce benchmark on matrix assembly [#2208]( https://github.com/sofa-framework/sofa/pull/2208 ); - [examples] Improve BeamFEMForceField example [#2092]( https://github.com/sofa-framework/sofa/pull/2092 ); - [scenes] Add scenes to test several components during mesh removal [#2161]( https://github.com/sofa-framework/sofa/pull/2161 ). ### Bug Fixes; **Architecture**; - [CMake] FIX Debug build + more cleaning [#1891]( https://github.com/sofa-framework/sofa/pull/1891 ); - [CMake] FIX SofaFramework aliases [#2175]( https://github.com/sofa-framework/sofa/pull/2175 ); - [CMake] FIX header include tree [#1863]( https://github.com/sofa-framework/sofa/pull/1863 ); - [CMake] FIX resources and translations install on Windows [#1949]( https://github.com/sofa-framework/sofa/pull/1949 ); - [CMake] Set CMake install default component [#2037]( https://github.com/sofa-framework/sofa/pull/2037 ); - [CMake][tools] v20.12.00 changes [#1804]( https://github.com/sofa-framework/sofa/pull/1804 ). **Extlibs**; - [GTest] Fix with GCC11 [#2181]( https://github.com/sofa-framework/sofa/pull/2181 ). **Modules**; - [All] FIX build without SofaPython soft dependencies [#1829]( https://github.com/sofa-framework/sofa/pull/1829 ); - [All] FIX warnings during STC#11 [#2140]( https://github.com/sofa-framework/sofa/pull/2140 ); - [All] Fix compilation warning. [#1699]( https://github.com/sofa-framework/sofa/pull/1699 ); - [All] Fix invalid Memory access in MechanicalObject and Compliant_test [#1849]( https://github.com/sofa-framework/sofa/pull/1849 ); - [All] Fix debug compilation [#2223]( https://github.com/sofa-framework/sofa/pull/2223 ); - [All] Changes needed for v21.06 [#2226]( https://github,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:181249,install,install,181249,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,"2102]( https://github.com/sofa-framework/sofa/pull/2102 ); - [All] Depreciate one of the missing use of Aspect in Link and update the code base [#1712]( https://github.com/sofa-framework/sofa/pull/1712 ); - [All] Fix warnings [#2196]( https://github.com/sofa-framework/sofa/pull/2196 ); - [All] Fix warnings [#2097]( https://github.com/sofa-framework/sofa/pull/2097 ); - [All] Refactor Read/Write Accessor. [#1807]( https://github.com/sofa-framework/sofa/pull/1807 ); - [All] Refactor vector & vector_device [#1799]( https://github.com/sofa-framework/sofa/pull/1799 ); - [All] Remove last includes of SofaSimulationTree [#1812]( https://github.com/sofa-framework/sofa/pull/1812 ); - [All] Remove un-needed includes. [#1750]( https://github.com/sofa-framework/sofa/pull/1750 ); - [All] Remove unused includes [#1960]( https://github.com/sofa-framework/sofa/pull/1960 ); - [All] Remove warning: unused variable [#1787]( https://github.com/sofa-framework/sofa/pull/1787 ); - [All] Update code to use sofa::InvalidID instead of topology::InvalidID [#2116]( https://github.com/sofa-framework/sofa/pull/2116 ); - [All] use =deleted for deprecation [#1793]( https://github.com/sofa-framework/sofa/pull/1793 ); - [All] Convert tests to Sofa.Testing [#2188]( https://github.com/sofa-framework/sofa/pull/2188 ); - [All] Remove useless inclusions of MechanicalObject.h [#2015]( https://github.com/sofa-framework/sofa/pull/2015 ); - [All] Remove deprecated calls and warnings [#2210]( https://github.com/sofa-framework/sofa/pull/2210 ); - [All] Remove use of compatibility layer [#2179]( https://github.com/sofa-framework/sofa/pull/2179 ); - **[Sofa.Core]** Move eq,peq utilities functions to a standalone file [#2137]( https://github.com/sofa-framework/sofa/pull/2137 ); - **[Sofa.GL]** Relocate the module (again) + clarify module vs plugin definitions [#1941]( https://github.com/sofa-framework/sofa/pull/1941 ); - **[Sofa.GL]** Remove warnings from deprecated headers [#2045]( https://github.com/sofa-framewor",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:197074,Update,Update,197074,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,3; Lloyd_iteration 2.38; Lloyd_iteration 2.32; Lloyd_iteration 2.32; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.36; Lloyd_iteration 2.32; Lloyd_iteration 2.32; computeUniformSampling: 59.97; computeWeights: 62.97; computeLinearRegionsSampling: 1.6; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg3.ppm 3 6; computeUniformSampling: 17.03; computeWeights: 128.26; computeLinearRegionsSampling: 2.31; updateSampleMaterialProperties: 0.17. File: scenes/steak.pscn using steak-seg3.ppm 3 10; computeUniformSampling: 17.07; computeWeights: 128.21; computeLinearRegionsSampling: 2.32; updateSampleMaterialProperties: 0.17. File: scenes/steak.pscn using steak-seg3.ppm 3 20; computeUniformSampling: 17.15; computeWeights: 128.5; computeLinearRegionsSampling: 2.3; updateSampleMaterialProperties: 0.17. File: scenes/steak.pscn using steak-seg3.ppm 3 50; computeUniformSampling: 17.13; computeWeights: 128.59; computeLinearRegionsSampling: 2.32; updateSampleMaterialProperties: 0.18. File: scenes/steak.pscn using steak-seg3.ppm 5 6; Lloyd_iteration 17.73; Lloyd_iteration 17.67; Lloyd_iteration 17.78; Lloyd_iteration 17.71; Lloyd_iteration 17.79; Lloyd_iteration 17.77; Lloyd_iteration 17.71; Lloyd_iteration 17.73; Lloyd_iteration 17.75; Lloyd_iteration 17.74; Lloyd_iteration 17.67; Lloyd_iteration 17.67; Lloyd_iteration 17.68; Lloyd_iteration 17.76; Lloyd_iteration 17.71; Lloyd_iteration 17.59; Lloyd_iteration 17.65; Lloyd_iteration 17.75; Lloyd_iteration 17.62; Lloyd_iteration 17.62; Lloyd_iteration 17.76; Lloyd_iteration 17.73; Lloyd_iteration 17.76; Lloyd_iteration 17.69; Lloyd_iteration 17.71; Lloyd_iteration 17.64; Lloyd_iteration 17.65; Lloyd_iteration 17.56; Lloyd_iteration 17.53; Lloyd_iteration 17.61; Lloyd_iteration 17.62; Lloyd_iteration 17.67; Lloyd_iteration 17.58; Lloyd_iteration 17.65; Lloyd_iteration 17.67; Lloyd_iteration 17.68; Lloyd_iteration 17.61; Lloyd_iteration 17.61; Lloyd_iteration 17.67; Lloyd_iteration 17.68; Lloyd_i,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:26994,update,updateSampleMaterialProperties,26994,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,"3D volume mesh and a 2D surface mesh. In this tutorial, a cube is represented, implying:; 	; A mesh loader to read mesh file. (not necessary in regular mesh); A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A FEM forcefield to create interactiona between points; An ODE scheme and a linear solver to solve the system at each time step.; Dynamic topological components.; A visual modela which reproduce the current model geometry thanks to the identity mapping. Key points. 	Under the first node representing the hexahedra, a second node is used to represent the quad topology.; 	; 	This second representation won't reproduce all quads of the hexahedra topology, but only quads on the mesh borders. I.e quads with only one adjacent hexahedron. This process is similar to the Tetra2TriangleTopologicalMapping.; 	; 	Edges of hexahedra are represented in yellow in the simulation whereas the visual model is based on the quads. Thus, display the scene in wire frame to see hexahedra and quads (in green).; 	. 	To create this mapping, the component Hexa2QuadTopologicalMapping is used. This component takes an input topology (Data Object1) which is the container of the ""upper"" topology (hexahedron here) and has an output topology (Data Object2) which is the container of the above topology (quad here).; 	. Results. 	As explained, the visual model uses the output topology (quads) to render the surface model.; 	; 	you can try to use directly the quads created in the HexahedronSetTopologyContainer for the ogl model. The result will be a cube with quads displayed inside the volume.; 	. 	Finally, try to remove the HexahedronFEMForceField or QuadularBendingSprings component. The result will be a bad behavior of the cube.; 	. Additional results. 	When deleting quads, the topological mapping is updated. Thus, hexahedra behind the selected quad will be deleted as well. Then, the list of quads on the border will be updated and the surface rendering also.; 	. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyHexa2QuadTopologicalMapping.html:1979,update,updated,1979,examples/Tutorials/Topologies/TopologyHexa2QuadTopologicalMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyHexa2QuadTopologicalMapping.html,2,['update'],['updated']
Deployability,485); - [Config] CMake: fix warning about upper/lowercase for Difflib [#4486](https://github.com/sofa-framework/sofa/pull/4486); - [README] Update badge with Discord [#4498](https://github.com/sofa-framework/sofa/pull/4498); - [Plugins] Move MeshSTEPLoader to an external repository [#4504](https://github.com/sofa-framework/sofa/pull/4504); - [Plugins] Gather external plugins configs in a same folder (proposal) [#4505](https://github.com/sofa-framework/sofa/pull/4505); - [image] Fix scene test [#4517](https://github.com/sofa-framework/sofa/pull/4517); - [GitHub] Update version of the actions/github-script [#4522](https://github.com/sofa-framework/sofa/pull/4522); - [GUI] Remove the New/Save/SaveAs menu options [#4523](https://github.com/sofa-framework/sofa/pull/4523); - [all] Additional fixes further to v24.06 lifecycle [#4540](https://github.com/sofa-framework/sofa/pull/4540); - [Core] Update NarrowPhaseDetection.cpp use prefix [#4557](https://github.com/sofa-framework/sofa/pull/4557); - [Geomagic] Update GeomagicDriver.cpp to fire error when hd.h is not found [#4576](https://github.com/sofa-framework/sofa/pull/4576); - [CMake] Upgrade cmake_minimum_required to 3.22 [#4586](https://github.com/sofa-framework/sofa/pull/4586); - [Core] Remove unused debug trace [#4590](https://github.com/sofa-framework/sofa/pull/4590); - [Core] cmake: Remove last traces of Sofa.Component.Compat [#4596](https://github.com/sofa-framework/sofa/pull/4596); - [LinearAlgebra] Remove empty source file [#4599](https://github.com/sofa-framework/sofa/pull/4599); - [Type] Clean and test MatSym [#4600](https://github.com/sofa-framework/sofa/pull/4600); - [tests] Use appropriate gtest macro [#4607](https://github.com/sofa-framework/sofa/pull/4607); - [LinearSystem] Remove development artifact [#4620](https://github.com/sofa-framework/sofa/pull/4620); - [all] Minor last fixes using SimpleApi [#4627](https://github.com/sofa-framework/sofa/pull/4627); - [SolidMechanics.FEM] Small update on container ac,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:15822,Update,Update,15822,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,5 ); - [SofaGraphComponent] Move scene checking ability into its own library [#2960]( https://github.com/sofa-framework/sofa/pull/2960 ). **Plugins / Projects**; - [PluginExample] Move the plugin to an external repository [#2519]( https://github.com/sofa-framework/sofa/pull/2519 ); - [ManifoldTopologies] Move the plugin to an external repository [#2623]( https://github.com/sofa-framework/sofa/pull/2623 ); - [OpenCTMPlugin] Move the plugin to an external repository [#2564]( https://github.com/sofa-framework/sofa/pull/2564 ); - [OptitrackNatNet] Move the plugin to an external repository [#2548]( https://github.com/sofa-framework/sofa/pull/2548 ); - [THMPGSpatialHashing] Move the plugin to an external repository [#2609]( https://github.com/sofa-framework/sofa/pull/2609 ); - [Registration] Move the plugin to an external repository [#2552]( https://github.com/sofa-framework/sofa/pull/2552 ). **Examples / Scenes**. **Scripts / Tools**. ### Breaking. **Architecture**. **Modules**; - [All] Lifecycle update before v22.06 [#3090]( https://github.com/sofa-framework/sofa/pull/3090 ); - [GL.Rendering3D] Clean up GL components [#3115]( https://github.com/sofa-framework/sofa/pull/3115 ); - [LinearSolver] Update data name in SparseLDLSolver [#2904] https://github.com/sofa-framework/sofa/pull/2904; - [Sofa.Core] A helper class for consistent component naming [#2631]( https://github.com/sofa-framework/sofa/pull/2631 ); - [SofaGeneralCollisionMesh] Move TriangleOctree utility class to Helper [#2805]( https://github.com/sofa-framework/sofa/pull/2805 ); - [SofaGeneralObjectInteraction] BoxStiffSpringForceField is now a pack of components [#2621]( https://github.com/sofa-framework/sofa/pull/2621 ); - [SofaGeneralSimpleFEM] Some cleaning in TriangularFEMForceFieldOptim [#2567]( https://github.com/sofa-framework/sofa/pull/2567 ); - [SofaSimpleFEM] Create a TriangleFEMUtils class to factorise Triangle/Triangular[FEMForceField] code [#2287]( https://github.com/sofa-framework/sofa/pull/2287 ),MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:96121,update,update,96121,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,5 x 9). 3F-6E:; 3 Lloyds: 0.23 0.23 0.24 (0.7 total); computeWeights: 1.91; ComputeLinearRegionSampling: 0.04; UpdateSampleMaterialProperties: 0. 3F-10E:; 3 Lloyds: 0.23 0.23 0.24 (0.7 total); computeWeights: 1.89; ComputeLinearRegionSampling: 0.1; UpdateSampleMaterialProperties: 0.01. 3F-20E:; 3 Lloyds: 0.22 0.24 0.23 (0.69 total); computeWeights: 1.92; ComputeLinearRegionSampling: 0.19; UpdateSampleMaterialProperties: 0.01. 3F-50E:; 3 Lloyds: 0.24 0.23 0.22 (0.69 total); computeWeights: 1.91; ComputeLinearRegionSampling: 0.32; UpdateSampleMaterialProperties: 0.02. 5F-6E:; 5 Lloyds: 0.24 0.23 0.25 0.24 0.24 (1.2 total); computeWeights: 2.91; ComputeLinearRegionSampling: 0.07; UpdateSampleMaterialProperties: 0. 5F-10E:; 5 Lloyds: 0.24 0.24 0.23 0.24 0.25 (1.18 total); computeWeights: 2.95; ComputeLinearRegionSampling: 0.07; UpdateSampleMaterialProperties: 0. 5F-20E:; 5 Lloyds: 0.23 0.24 0.23 0.24 0.23 (1.17 total); computeWeights: 2.91; ComputeLinearRegionSampling: 0.1; UpdateSampleMaterialProperties: 0.01. 5F-50E:; 5 Lloyds: 0.24 0.24 0.24 0.24 0.24 (1.2 total); computeWeights: 2.95; ComputeLinearRegionSampling: 0.32; UpdateSampleMaterialProperties: 0.01. 10F-6E:; 7 Lloyds: 0.25 0.24 0.25 0.25 0.24 0.25 0.24 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.13; UpdateSampleMaterialProperties: 0.01. 10F-10E:; 7 Lloyds: 0.25 0.25 0.24 0.25 0.24 0.25 0.24 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.12; UpdateSampleMaterialProperties: 0.02. 10F-20E:; 7 Lloyds: 0.25 0.24 0.25 0.24 0.24 0.24 0.24 (1.7 total); computeWeights: 4.93; ComputeLinearRegionSampling: 0.13; UpdateSampleMaterialProperties: 0.01. 10F-50E:; 7 Lloyds: 0.25 0.25 0.24 0.24 0.24 0.25 0.25 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.12; UpdateSampleMaterialProperties: 0.02. 20F-6E:; 9 Lloyds: 0.27 0.27 0.28 0.27 0.27 0.27 0.27 0.27 0.27 (2.44 total); computeWeights: 7.89; ComputeLinearRegionSampling: 0.29; UpdateSampleMaterialProperties: 0.05.,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/comparison.txt:1039,Update,UpdateSampleMaterialProperties,1039,applications/projects/sofaInitTimer/output/comparison.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/comparison.txt,1,['Update'],['UpdateSampleMaterialProperties']
Deployability,616 ); - [SofaPython] CLEAN PythonEnvironment info messages [#1835]( https://github.com/sofa-framework/sofa/pull/1835 ); - [THMPGSpatialHashing] Add a readme file and basic information [#2007]( https://github.com/sofa-framework/sofa/pull/2007 ); - [projects] remove unused variable [#1747]( https://github.com/sofa-framework/sofa/pull/1747 ). **Examples / Scenes**; - [examples] Clean warning scene examples [#1802]( https://github.com/sofa-framework/sofa/pull/1802 ); - [scenes] Update tetrahedron and tetrahedralCorotational FEM scenes [#2172]( https://github.com/sofa-framework/sofa/pull/2172 ). **Scripts / Tools**; - [tools] CLEAN logs for macos-postinstall-fixup [#2120]( https://github.com/sofa-framework/sofa/pull/2120 ). ____________________________________________________________. ## [v20.12.03]( https://github.com/sofa-framework/sofa/tree/v20.12.03 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.02...v20.12.03 ). ### Bug Fixes; **Architecture**; - [CMake] Set CMake install default component [#2037]( https://github.com/sofa-framework/sofa/pull/2037 ). **Modules**; - [SofaBoundaryCondition] Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - [SofaGuiQt] Fix Expand node [#2069]( https://github.com/sofa-framework/sofa/pull/2069 ); - **[SofaHelper]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - [SofaMiscCollision] Fix config.in cmake file for export [#2052]( https://github.com/sofa-framework/sofa/pull/2052 ); - **[SofaSimulationCore]** Broken URL [#2011]( https://github.com/sofa-framework/sofa/pull/2011 ). **Plugins / Projects**; - [Geomagic] Fix Geomagic plugin compilation [#2033]( https://github.com/sofa-framework/sofa/pull/2033 ). ____________________________________________________________. ## [v20.12.02]( https://github.com/sofa-framework/sofa/tree/v20.12.02 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.01...v20.12.02 ). ### Bug Fixes; **Architecture**; ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:208481,install,install,208481,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,621]( https://github.com/sofa-framework/sofa/pull/2621 ); - [SofaGeneralSimpleFEM] Some cleaning in TriangularFEMForceFieldOptim [#2567]( https://github.com/sofa-framework/sofa/pull/2567 ); - [SofaSimpleFEM] Create a TriangleFEMUtils class to factorise Triangle/Triangular[FEMForceField] code [#2287]( https://github.com/sofa-framework/sofa/pull/2287 ); - [SolidMechanics] Remove unused _assembling data [#2901]( https://github.com/sofa-framework/sofa/pull/2901 ); - [Topology.Container.Dynamic] Fix duplicate Data Points in PointSetTopologyContainer [#2993]( https://github.com/sofa-framework/sofa/pull/2993 ). **Plugins / Projects**; - [runSofa] Add a button and a mechanism to activate the scenegraph updates [#3026]( https://github.com/sofa-framework/sofa/pull/3026 ); - [runSofa] Remove not working feature in QSofaListView. [#3025]( https://github.com/sofa-framework/sofa/pull/3025 ). **Examples / Scenes**. **Scripts / Tools**. ### Improvements. **Project**; - [Contributing] Update info regarding GitHub Discussions [#2741]( https://github.com/sofa-framework/sofa/pull/2741 ); - [Project] Add the graph illustrating the workflow of a PR review in CONTRIBUTING [#3051]( https://github.com/sofa-framework/sofa/pull/3051 ). **Architecture**; - [collections] Install collections in their own directory [#3196]( https://github.com/sofa-framework/sofa/pull/3196 ). **Modules**; - [Constraint.Lagrangian.Correction] Searching for Direct Linear Solver in LinearSolverConstraintCorrection [#3055]( https://github.com/sofa-framework/sofa/pull/3055 ) ; - [GUI.Qt] Redirect Qt messages to the SOFA output stream [#3101]( https://github.com/sofa-framework/sofa/pull/3101 ); - [GUI.Qt] Save scene graph lock state persistently [#3119]( https://github.com/sofa-framework/sofa/pull/3119 ) ; - [GUI] Completing text description for mouse interaction with springs [#3122]( https://github.com/sofa-framework/sofa/pull/3122 ); - [HyperElastic] Add draw method to StandardTetrahedralFEMForceField [#2838]( https:/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:97745,Update,Update,97745,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,659 ); - [LMConstraint] Move examples in LMConstraint plugin [#1778]( https://github.com/sofa-framework/sofa/pull/1778 ); - [MultiThreading] Removes useless classid in AnimationLoopParalleleScheduler.cpp [#1906]( https://github.com/sofa-framework/sofa/pull/1906 ); - [SofaCUDA] Renaming cudaMatrix methods to use rowSize and colSize [#1788]( https://github.com/sofa-framework/sofa/pull/1788 ); - [SofaDistanceGrid] Regroup miniFlowVR-related things [#1616]( https://github.com/sofa-framework/sofa/pull/1616 ); - [SofaPython] CLEAN PythonEnvironment info messages [#1835]( https://github.com/sofa-framework/sofa/pull/1835 ); - [THMPGSpatialHashing] Add a readme file and basic information [#2007]( https://github.com/sofa-framework/sofa/pull/2007 ); - [projects] remove unused variable [#1747]( https://github.com/sofa-framework/sofa/pull/1747 ). **Examples / Scenes**; - [examples] Clean warning scene examples [#1802]( https://github.com/sofa-framework/sofa/pull/1802 ); - [scenes] Update tetrahedron and tetrahedralCorotational FEM scenes [#2172]( https://github.com/sofa-framework/sofa/pull/2172 ). **Scripts / Tools**; - [tools] CLEAN logs for macos-postinstall-fixup [#2120]( https://github.com/sofa-framework/sofa/pull/2120 ). ____________________________________________________________. ## [v20.12.03]( https://github.com/sofa-framework/sofa/tree/v20.12.03 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.02...v20.12.03 ). ### Bug Fixes; **Architecture**; - [CMake] Set CMake install default component [#2037]( https://github.com/sofa-framework/sofa/pull/2037 ). **Modules**; - [SofaBoundaryCondition] Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - [SofaGuiQt] Fix Expand node [#2069]( https://github.com/sofa-framework/sofa/pull/2069 ); - **[SofaHelper]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - [SofaMiscCollision] Fix config.in cmake file for export [#2052]( https://github.com/sofa-framew,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:207959,Update,Update,207959,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"75](https://github.com/sofa-framework/sofa/pull/4075); - [SofaMatrix] Remove CImgPlugin dependency [#4112](https://github.com/sofa-framework/sofa/pull/4112); - [all] Replace deprecated wbloc function by its new function name [#4118](https://github.com/sofa-framework/sofa/pull/4118); - [Core] VecId: set correct message for the deleted function holonomicC [#4120](https://github.com/sofa-framework/sofa/pull/4120); - [IO.Mesh.Tests] Reduce number of logs by unactivating printlog [#4148](https://github.com/sofa-framework/sofa/pull/4148); - [Constraint.Lagrangian.Solver] LCPConstraintSolver: remove useless computation if printLog is enabled [#4170](https://github.com/sofa-framework/sofa/pull/4170); - [Scene] Eigen3-SVD.scn: disable printLog [#4184](https://github.com/sofa-framework/sofa/pull/4184); - [Constraint.Lagrangian.Solver] Clean both constraint solvers [#4185](https://github.com/sofa-framework/sofa/pull/4185); - [Topology.Container] Update and rename methods in EdgeSetGeometryAlgorithms to compute barycentric coordinates [#4190](https://github.com/sofa-framework/sofa/pull/4190); - [Topology.Container] Remove method writeMSHfile in GeometryAlgorithms components [#4192](https://github.com/sofa-framework/sofa/pull/4192); - [all] Fix mismatch on explicit template instantiations [#4210](https://github.com/sofa-framework/sofa/pull/4210); - [SofaCUDA] Move cuda GUI dependent code [#4227](https://github.com/sofa-framework/sofa/pull/4227); - [all] Forgotten scoped timers [#4237](https://github.com/sofa-framework/sofa/pull/4237); - [all] Fix warnings [#4238](https://github.com/sofa-framework/sofa/pull/4238); - [all] Remove TODO.md [#4244](https://github.com/sofa-framework/sofa/pull/4244); - [Type, Helper] Remove unused __STL_MEMBER_TEMPLATES parts [#4251](https://github.com/sofa-framework/sofa/pull/4251); - [GL] Remove deprecated (and incomplete) Color class [#4264](https://github.com/sofa-framework/sofa/pull/4264); - [FEM, Mapping] dont mix type::fixed_array and type::Vec ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:46082,Update,Update,46082,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,90]( https://github.com/sofa-framework/sofa/pull/1590 ); - [Geomagic] Fix scenes ForceFeedBack behavior due to a change in UncoupledConstraintCorrection [#1435]( https://github.com/sofa-framework/sofa/pull/1435 ); - [OmniDriverEmul] Fix thread behavior and replace boost/pthread by std::thread [#1665]( https://github.com/sofa-framework/sofa/pull/1665 ); - [SofaOpenCL] Fix Cmake configuration [#1647]( https://github.com/sofa-framework/sofa/pull/1647 ); - [SofaPython] Small fixes to import plugin and remove scene warnings [#1466]( https://github.com/sofa-framework/sofa/pull/1466 ); - [runSofa] CLEAN unused dep to SofaGeneralLoader [#1648]( https://github.com/sofa-framework/sofa/pull/1648 ); - [SofaSPHFluid] Fix compilation with std::execution [#1542]( https://github.com/sofa-framework/sofa/pull/1542 ). **Examples / Scenes**; - [examples] Fix HexahedronForceFieldTopologyChangeHandling scene [#1573]( https://github.com/sofa-framework/sofa/pull/1573 ). **Scripts / Tools**; - [scripts] Update licenseUpdater [#1498]( https://github.com/sofa-framework/sofa/pull/1498 ). ### Cleanings; **Architecture**; - [SofaMacros] Split SofaMacros.cmake into multiple files [#1477]( https://github.com/sofa-framework/sofa/pull/1477 ); - [SofaMacros] Use IN_LIST (CMake >= 3.3) [#1484]( https://github.com/sofa-framework/sofa/pull/1484 ). **Modules**; - [All] Bunch of removal of sout/serr in the whole code base [#1513]( https://github.com/sofa-framework/sofa/pull/1513 ); - [All] Fix compilation with flag NO_OPENGL [#1478]( https://github.com/sofa-framework/sofa/pull/1478 ); - [All] Fix many warnings [#1682]( https://github.com/sofa-framework/sofa/pull/1682 ); - [All] Remove SMP-related Code [#1613]( https://github.com/sofa-framework/sofa/pull/1613 ); - [All] Replace all sofa::defaulttypes::RGBAColor to sofa::helper::types::RGBAColor [#1463]( https://github.com/sofa-framework/sofa/pull/1463 ); - [Doc] Remove Inria Foundation mention from CONTRIBUTING [#1451]( https://github.com/sofa-framework/so,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:225233,Update,Update,225233,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"://github.com/sofa-framework/sofa/pull/1883 ); - [CMake] CLEAN option SOFA_BUILD_WITH_PCH_ENABLED [#1755]( https://github.com/sofa-framework/sofa/pull/1755 ); - [CMake] CLEAN/FIX deprecated things (MSVC mainly) [#2217]( https://github.com/sofa-framework/sofa/pull/2217 ). **Modules**; - [All] Remove commented code & fix trivial issues [#1693]( https://github.com/sofa-framework/sofa/pull/1693 ); - [All] Remove useless pragma guards in cpp files [#1929]( https://github.com/sofa-framework/sofa/pull/1929 ); - [All] CLEAN tests, use CMake weak dependencies [#1886]( https://github.com/sofa-framework/sofa/pull/1886 ); - [All] Disable Drawtool functions using Vec4f [#2197]( https://github.com/sofa-framework/sofa/pull/2197 ); - [All] Rename SOFA_NO_OPENGL + Relocate Sofa.GL + Improve sofa_add_* macros [#1913]( https://github.com/sofa-framework/sofa/pull/1913 ); - [All] Avoid redundant printLog check [#2102]( https://github.com/sofa-framework/sofa/pull/2102 ); - [All] Depreciate one of the missing use of Aspect in Link and update the code base [#1712]( https://github.com/sofa-framework/sofa/pull/1712 ); - [All] Fix warnings [#2196]( https://github.com/sofa-framework/sofa/pull/2196 ); - [All] Fix warnings [#2097]( https://github.com/sofa-framework/sofa/pull/2097 ); - [All] Refactor Read/Write Accessor. [#1807]( https://github.com/sofa-framework/sofa/pull/1807 ); - [All] Refactor vector & vector_device [#1799]( https://github.com/sofa-framework/sofa/pull/1799 ); - [All] Remove last includes of SofaSimulationTree [#1812]( https://github.com/sofa-framework/sofa/pull/1812 ); - [All] Remove un-needed includes. [#1750]( https://github.com/sofa-framework/sofa/pull/1750 ); - [All] Remove unused includes [#1960]( https://github.com/sofa-framework/sofa/pull/1960 ); - [All] Remove warning: unused variable [#1787]( https://github.com/sofa-framework/sofa/pull/1787 ); - [All] Update code to use sofa::InvalidID instead of topology::InvalidID [#2116]( https://github.com/sofa-framework/sofa/pul",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:196219,update,update,196219,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,://github.com/sofa-framework/sofa/pull/2792 ). **Examples / Scenes**; - [examples] FIX benchmark_cubes.scn needs CollisionOBBCapsule [#2898]( https://github.com/sofa-framework/sofa/pull/2898 ); - [examples] Fix ProjectToPointconstraint scene by using MeshSpringForceField [#2827]( https://github.com/sofa-framework/sofa/pull/2827 ); - [examples] Fix falling cubes scene [#2831]( https://github.com/sofa-framework/sofa/pull/2831 ); - [examples] Fix plugins in a couple of scenes [#2810]( https://github.com/sofa-framework/sofa/pull/2810 ); - [examples] Move PointSplatModel and SpatialGridPointModel scenes into Sph plugin [#2847]( https://github.com/sofa-framework/sofa/pull/2847 ); - [examples] FIX scenes with old CollisionGroupManager component [#3198]( https://github.com/sofa-framework/sofa/pull/3198 ). **Scripts / Tools**; - [tools] Correction of the import of the queue library [#2572]( https://github.com/sofa-framework/sofa/pull/2572 ). ### Cleanings. **Project**; - [GitHub] Update Changelog and version [#2546]( https://github.com/sofa-framework/sofa/pull/2546 ); - [Git] Clean project files [#2884]( https://github.com/sofa-framework/sofa/pull/2884 ); - [Project] Update README [#2905]( https://github.com/sofa-framework/sofa/pull/2905 ); - [Readme] Delete references to removed/moved directories in licence paragraph [#2547]( https://github.com/sofa-framework/sofa/pull/2547 ); - [doc] Remove old doc materials [#2889]( https://github.com/sofa-framework/sofa/pull/2889 ). **Architecture**; - [CMake] Clean modules post-NG [#2980]( https://github.com/sofa-framework/sofa/pull/2980 ); - [CMake] Replace references of SofaNG codename to SOFA [#3102]( https://github.com/sofa-framework/sofa/pull/3102 ); - [CMake] Update all deps to SofaFramework modules [#2958]( https://github.com/sofa-framework/sofa/pull/2958 ); - [CMake] Use standard macros + fix out-of-tree builds [#3120]( https://github.com/sofa-framework/sofa/pull/3120 ); - [CMake] Clean packaging for v22.06 [#3197]( https://gith,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:118749,Update,Update,118749,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,://github.com/sofa-framework/sofa/pull/3702) ; - [LinearSolver.Direct] Make sure the matrix is factorized in SparseCholeskySolver [#3706](https://github.com/sofa-framework/sofa/pull/3706) ; - [GUI.Qt] Register meta type to fix asynchronous Qt call [#3749](https://github.com/sofa-framework/sofa/pull/3749) ; - [Tests] S.Components tests compiles with SReal=float [#3755](https://github.com/sofa-framework/sofa/pull/3755) ; - [Mapping.NonLinear] Fix SquareMapping applyDJT [#3761](https://github.com/sofa-framework/sofa/pull/3761); - [LinearAlgebra] Restore insertion operator for BaseVector [#3775](https://github.com/sofa-framework/sofa/pull/3775) ; - [StateContainer] Fix bug in dynamic data registration [#3783](https://github.com/sofa-framework/sofa/pull/3783) ; - [Rendering3D] Missing StateLifeCycle [#3784](https://github.com/sofa-framework/sofa/pull/3784) ; - [Mapping.Nonlinear] Fix matrix assembly in RigidMapping [#3803](https://github.com/sofa-framework/sofa/pull/3803) ; - [Visual] VisualModelImpl: Fix updateVisual() [#3815](https://github.com/sofa-framework/sofa/pull/3815) ; - [LinearSolver.Iterative] CMake: Fix package configuration [#3840](https://github.com/sofa-framework/sofa/pull/3840) ; - [Rendering3D] OglModel: Revert back to glBufferSubData [#3841](https://github.com/sofa-framework/sofa/pull/3841) ; - [SolidMechanics.Spring] CMake: Fix package configuration [#3846](https://github.com/sofa-framework/sofa/pull/3846) ; - [Spring] Remove unused dependencies [#3848](https://github.com/sofa-framework/sofa/pull/3848) ; - [FEM.Linear] FIX & Minor refactor of buildStiffnessMatrix in TriangleFEMForceField [#3989](https://github.com/sofa-framework/sofa/pull/3989). **Plugins / Projects**; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid2D [#3561](https://github.com/sofa-framework/sofa/pull/3561) ; - [MultiThreading] ParallelBruteForceBroadPhase: Fix assertion error [#3574](https://github.com/sofa-framework/sofa/pull/3574) ; - [image] Fix Sofa.GUI dependency [#35,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:58827,update,updateVisual,58827,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['updateVisual']
Deployability,:; 3 Lloyds: 0.23 0.23 0.24 (0.7 total); computeWeights: 1.89; ComputeLinearRegionSampling: 0.1; UpdateSampleMaterialProperties: 0.01. 3F-20E:; 3 Lloyds: 0.22 0.24 0.23 (0.69 total); computeWeights: 1.92; ComputeLinearRegionSampling: 0.19; UpdateSampleMaterialProperties: 0.01. 3F-50E:; 3 Lloyds: 0.24 0.23 0.22 (0.69 total); computeWeights: 1.91; ComputeLinearRegionSampling: 0.32; UpdateSampleMaterialProperties: 0.02. 5F-6E:; 5 Lloyds: 0.24 0.23 0.25 0.24 0.24 (1.2 total); computeWeights: 2.91; ComputeLinearRegionSampling: 0.07; UpdateSampleMaterialProperties: 0. 5F-10E:; 5 Lloyds: 0.24 0.24 0.23 0.24 0.25 (1.18 total); computeWeights: 2.95; ComputeLinearRegionSampling: 0.07; UpdateSampleMaterialProperties: 0. 5F-20E:; 5 Lloyds: 0.23 0.24 0.23 0.24 0.23 (1.17 total); computeWeights: 2.91; ComputeLinearRegionSampling: 0.1; UpdateSampleMaterialProperties: 0.01. 5F-50E:; 5 Lloyds: 0.24 0.24 0.24 0.24 0.24 (1.2 total); computeWeights: 2.95; ComputeLinearRegionSampling: 0.32; UpdateSampleMaterialProperties: 0.01. 10F-6E:; 7 Lloyds: 0.25 0.24 0.25 0.25 0.24 0.25 0.24 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.13; UpdateSampleMaterialProperties: 0.01. 10F-10E:; 7 Lloyds: 0.25 0.25 0.24 0.25 0.24 0.25 0.24 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.12; UpdateSampleMaterialProperties: 0.02. 10F-20E:; 7 Lloyds: 0.25 0.24 0.25 0.24 0.24 0.24 0.24 (1.7 total); computeWeights: 4.93; ComputeLinearRegionSampling: 0.13; UpdateSampleMaterialProperties: 0.01. 10F-50E:; 7 Lloyds: 0.25 0.25 0.24 0.24 0.24 0.25 0.25 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.12; UpdateSampleMaterialProperties: 0.02. 20F-6E:; 9 Lloyds: 0.27 0.27 0.28 0.27 0.27 0.27 0.27 0.27 0.27 (2.44 total); computeWeights: 7.89; ComputeLinearRegionSampling: 0.29; UpdateSampleMaterialProperties: 0.05. 20F-10E:; 9 Lloyds: 0.27 0.27 0.27 0.26 0.27 0.27 0.27 0.27 0.26 (2.41 total); computeWeights: 7.98; ComputeLinearRegionSampling: 0.27; UpdateSampleMa,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/comparison.txt:1191,Update,UpdateSampleMaterialProperties,1191,applications/projects/sofaInitTimer/output/comparison.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/comparison.txt,1,['Update'],['UpdateSampleMaterialProperties']
Deployability,"; **********************************************; * Assimp plugin.txt *; **********************************************. AUTHOR :; - epernod (Erik Pernod); ; CONTACT:; - erik.pernod@gmail.com . LICENSE :; - Assimp is released as Open Source under the terms of a 3-clause BSD license.; - License of this Plugin: LGPL. OTHER COMMENTS :. Open Asset Import Library (short name: Assimp) is a portable Open Source library to import various well-known 3D model formats in a uniform manner. ; The most recent version also knows how to export 3D files and is therefore suitable as a general-purpose 3D model converter. ; See the feature list. - Library web page: http://www.assimp.org/; - Source code on github: https://github.com/assimp/assimp; - Release version: https://github.com/assimp/assimp/releases; - Library version tested: 4.1.0. Important: For the moment only single Mesh is handle. That is to say, if a multi mesh is loaded, only one Sofa Mesh will be created by merging all sub meshes.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/README_AssimpPlugin.txt:217,release,released,217,applications/plugins/SofaAssimp/README_AssimpPlugin.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/README_AssimpPlugin.txt,3,"['Release', 'release']","['Release', 'released', 'releases']"
Deployability,; ************************************; * SofaCarving.txt *; ************************************. AUTHOR :; - Brina Goyette; - Erik Pernod (Version 0.3 - 2018-07-12). . LICENCE :; - LGPL. OTHER COMMENTS :. The plugin include:; - CarvingManager handling carving operations between a tool and an object. ; The CarvingManager class will perform topological resection on a triangle surface (could be on top of tetrahedron topology); The tool performing the carving as well as the object to carved need to be represented by collision models; Detecting the collision is done using the scene Intersection and NarrowPhaseDetection pipeline.; - 2 simples scenes showing a sphere carving a cylinder volume with different parameters; - A scene showing how to use the carving Manager on a tool object model. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCarving/SofaCarving.txt:624,pipeline,pipeline,624,applications/plugins/SofaCarving/SofaCarving.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCarving/SofaCarving.txt,1,['pipeline'],['pipeline']
Deployability,; - [All] Clean due to doc [#1398]( https://github.com/sofa-framework/sofa/pull/1398 ); - [All] Clean warnings [#1376]( https://github.com/sofa-framework/sofa/pull/1376 ); - [All] Fix minor warnings [#1388]( https://github.com/sofa-framework/sofa/pull/1388 ); - [All] Fix warnings generated due to change in Aspects [#1329]( https://github.com/sofa-framework/sofa/pull/1329 ); - [All] Minor changes in comment or format [#1411]( https://github.com/sofa-framework/sofa/pull/1411 ); - [All] Multiple fixes scenes [#1289]( https://github.com/sofa-framework/sofa/pull/1289 ); - [All] Remove all DISPLAY_TIME define [#1267]( https://github.com/sofa-framework/sofa/pull/1267 ); - [All] Remove some compilation warning. [#1343]( https://github.com/sofa-framework/sofa/pull/1343 ); - [All] Replace usage of sleep functions for the std one [#1394]( https://github.com/sofa-framework/sofa/pull/1394 ); - [All] Uniform use of M_PI [#1264]( https://github.com/sofa-framework/sofa/pull/1264 ); - [All] Update header for cleaner future management [#1375]( https://github.com/sofa-framework/sofa/pull/1375 ); - [All] replace all serr by msg_error/msg_warning [#1236]( https://github.com/sofa-framework/sofa/pull/1236 ); - [SofaConstraint] Set the use of integration factor true by default [#1369]( https://github.com/sofa-framework/sofa/pull/1369 ); - **[SofaDefaultType]** BoundingBox : Remove annoying warnings [#1425]( https://github.com/sofa-framework/sofa/pull/1425 ); - [SofaGeneralEngine] Fix draw of the sphere in SphereROI [#1318]( https://github.com/sofa-framework/sofa/pull/1318 ); - [SofaGeneralEngine] Remove remaining BoxROI after SofaEngine move [#1333]( https://github.com/sofa-framework/sofa/pull/1333 ); - [SofaGeneralLoader] Allow flip normals in Gmsh and STL loaders [#1418]( https://github.com/sofa-framework/sofa/pull/1418 ); - [SofaGui] Pass QDocBrowser as an option [#1315]( https://github.com/sofa-framework/sofa/pull/1315 ); - **[SofaKernel]** Add Data bool d_checkTopology in Topology cont,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:239739,Update,Update,239739,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,; computeUniformSampling: 1.88; computeWeights: 2.96; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0. File: scenes/steak.pscn using steak-seg.ppm 5 20; Lloyd_iteration 0.25; Lloyd_iteration 0.23; Lloyd_iteration 0.25; Lloyd_iteration 0.23; Lloyd_iteration 0.23; computeUniformSampling: 1.89; computeWeights: 3.03; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0. File: scenes/steak.pscn using steak-seg.ppm 5 50; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.23; computeUniformSampling: 1.88; computeWeights: 2.96; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 10 6; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.25; computeUniformSampling: 3.6; computeWeights: 4.93; computeLinearRegionsSampling: 0.13; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg.ppm 10 10; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; computeUniformSampling: 3.6; computeWeights: 4.93; computeLinearRegionsSampling: 0.13; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg.ppm 10 20; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; computeUniformSampling: 3.59; computeWeights: 4.93; computeLinearRegionsSampling: 0.12; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg.ppm 10 50; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; computeUniformSampling: 3.6; computeWeights: 4.94; computeLinearRegionsSampling: 0.13; updateSampleMaterialProp,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:2391,update,updateSampleMaterialProperties,2391,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,"; l i b Q G L V i e w e r I n s t a l l a t i o n. libQGLViewer requires the Qt library, available from Digia. In order to compile the library from its sources:. - On UNIX platforms, simply type (see doc/installUnix.html for details):. > qmake; > make; > make install [optional]. - For Windows installation, see doc/installWindows.html. See doc/compilation.html for details on compiling programs that use libQGLViewer.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/install.txt:204,install,installUnix,204,Sofa/GUI/Qt/libQGLViewer/install.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/install.txt,4,['install'],"['install', 'installUnix', 'installWindows', 'installation']"
Deployability,"; set(SOFA_BUILD_RELEASE_PACKAGE ON); set(CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/runSofa.app/Contents/MacOS); message(""SOFA_BUILD_APP_BUNDLE = ${SOFA_BUILD_APP_BUNDLE}\n""; "" Forcing SOFA_BUILD_RELEASE_PACKAGE = ${SOFA_BUILD_RELEASE_PACKAGE}\n""; "" Forcing CMAKE_INSTALL_PREFIX = ${CMAKE_INSTALL_PREFIX}""; ); endif(); message(STATUS ""Install prefix: ${CMAKE_INSTALL_PREFIX}""). # Remove generated CMake files, this prevents CMake from finding packages that; # were disabled (like, unchecked in cmake-gui) after being built once.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/cmake); file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/lib/cmake); # Remove generated SofaPython configuration files, to prevent SofaPython from; # adding paths to disabled plugins.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/etc/sofa/python.d). ## Custom Environment; list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/Sofa/framework/Config/cmake""); list(APPEND CMAKE_IGNORE_PATH ""${CMAKE_INSTALL_PREFIX}"") # ignore install directory for findXXX commands; include(SofaMacros). install(FILES; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/FindEigen3.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/macdeployqt.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/windeployqt.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/FindTinyXML2.cmake""; DESTINATION lib/cmake/Modules; COMPONENT headers; ). ## RPATH; if(UNIX); # RPATH is a field in ELF binaries that is used as a hint by the system; # loader to find needed shared libraries.; #; # In the build directory, cmake creates binaries with absolute paths in; # RPATH. And by default, it strips RPATH from installed binaries. Here we; # use CMAKE_INSTALL_RPATH to set a relative RPATH. By doing so, we avoid; # the need to play with LD_LIBRARY_PATH to get applications to run. # see https://cmake.org/Wiki/CMake_RPATH_handling for $ORI",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:3981,install,install,3981,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['install'],['install']
Deployability,"ADD possibility to jump to source/instanciation of selected component [#1013]( https://github.com/sofa-framework/sofa/pull/1013 ); - [SofaCUDA] Fix cuda with latest API [#912]( https://github.com/sofa-framework/sofa/pull/912 ); - [SofaPython] Add Sofa.hasViewer function [#964]( https://github.com/sofa-framework/sofa/pull/964 ); - [SofaPython] Change Base.addNewData [#1004]( https://github.com/sofa-framework/sofa/pull/1004 ). **Examples / Scenes**; - [examples] Rename TModels into CollisionModels and update all scenes [#1034]( https://github.com/sofa-framework/sofa/pull/1034 ). ### Bug Fixes. **Architecture**; - [CMake] Add check to prevent the inclusion of non-existant file in cmake 3.13 [#897]( https://github.com/sofa-framework/sofa/pull/897 ); - [CMake] Fix relocatable plugins [#1059]( https://github.com/sofa-framework/sofa/pull/1059 ); - [CMake] FIX: exporting options in SofaFrameworkConfig.cmake [#927]( https://github.com/sofa-framework/sofa/pull/927 ); - [CMake] FIX: wrong paths of installed headers in SofaBaseMechanics [#887]( https://github.com/sofa-framework/sofa/pull/887 ); - [CMake] FIX build/install plugins directory [#959]( https://github.com/sofa-framework/sofa/pull/959 ). **Modules**; - [All] Three small fixes in SofaBaseLinearSolver, SofaBoundaryCondition, runSofa [#931]( https://github.com/sofa-framework/sofa/pull/931 ); - [All] FIXES made for RoboSoft2019 [#1003]( https://github.com/sofa-framework/sofa/pull/1003 ); - [All] Fix some warnings [#873]( https://github.com/sofa-framework/sofa/pull/873 ); - [All] Several bug fixes [#985]( https://github.com/sofa-framework/sofa/pull/985 ); - [All] Some fixes to have a ... green dashboard! [#982]( https://github.com/sofa-framework/sofa/pull/982 ); - [All] Fix compilation with SOFA_NO_OPENGL flag [#1032]( https://github.com/sofa-framework/sofa/pull/1032 ); - [SofaConstraint] Convert static sized arrays to dynamic ones in GenericConstraintSolver [#920]( https://github.com/sofa-framework/sofa/pull/920 ); - **[S",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:263206,install,installed,263206,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['installed']
Deployability,"ALLOW_FETCH_DEPENDENCIES is ON, fetching googletest...""). include(FetchContent); FetchContent_Declare(googletest; GIT_REPOSITORY https://github.com/google/googletest; GIT_TAG v1.14.0; ). FetchContent_GetProperties(googletest); if(NOT googletest_POPULATED); FetchContent_Populate(googletest). set(BUILD_GMOCK OFF CACHE INTERNAL """"); set(BUILD_SHARED_LIBS ON CACHE BOOL """" FORCE); set(INSTALL_GTEST OFF CACHE BOOL """" FORCE) # rely on SOFA macros; set(gtest_force_shared_crt ON CACHE BOOL """" FORCE); set(gtest_disable_pthreads OFF CACHE BOOL """" FORCE). message(""${PROJECT_NAME}: adding subdirectory ${googletest_SOURCE_DIR}""). add_subdirectory(${googletest_SOURCE_DIR} ${googletest_BINARY_DIR}). target_compile_options(gtest_main PRIVATE ""-DGTEST_LINKED_AS_SHARED_LIBRARY=0""); target_compile_options(gtest PRIVATE ""-DGTEST_CREATE_SHARED_LIBRARY=1""). install(DIRECTORY ${googletest_SOURCE_DIR}/googletest/include/gtest DESTINATION include/extlibs/GTest/ COMPONENT headers); target_include_directories(gtest PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/GTest/>""); ; include(SofaMacros); sofa_create_package_with_targets(; PACKAGE_NAME GTest; PACKAGE_VERSION 1.14.0; TARGETS gtest AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""include""; INCLUDE_INSTALL_DIR ""extlibs/GTest""; ). set_target_properties(gtest PROPERTIES FOLDER Testing); set_target_properties(gtest_main PROPERTIES FOLDER Testing); endif(); elseif (NOT GTest_FOUND); message(FATAL_ERROR ""${PROJECT_NAME}: DEPENDENCY googletest NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install googletest, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # add custom googletest main; add_subdirectory(SofaGTestMain). set(SOFATESTINGSRC_ROOT ""src/sofa/testing""). set(HEADER_FILES; ${SOFATESTINGSRC_ROOT}/config.h.in; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.h; ${SOFATESTINGSRC_ROOT}/BaseTest.h; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.h; ${SOFATESTINGSRC_ROOT}/NumericTest.h; ${SOFATESTI",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt:1235,install,install,1235,Sofa/framework/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt,1,['install'],['install']
Deployability,"Add missing headers [#2444]( https://github.com/sofa-framework/sofa/pull/2444 ); - [CMake] FIX Threads dependency [#2511]( https://github.com/sofa-framework/sofa/pull/2511 ); - [CMake] FIX libs copy on Windows [#2261]( https://github.com/sofa-framework/sofa/pull/2261 ); - [CMake][modules] FIX out-of-tree builds [#2453]( https://github.com/sofa-framework/sofa/pull/2453 ); - [CMake] Fix return values of Qt5/Qt6 find_packages [#2346]( https://github.com/sofa-framework/sofa/pull/2346 ). **Modules**; - [All] Fix potential bugs/crashes (from warnings) [#2379]( https://github.com/sofa-framework/sofa/pull/2379 ); - [All] Update IDE directory for targets [#2239]( https://github.com/sofa-framework/sofa/pull/2239 ); - [SofaMiscForceField] Fix massDensity vector update when adding new elements in MeshMatrixMass [#2257]( https://github.com/sofa-framework/sofa/pull/2257 ); - [Sofa.Compat] Fix Matrixexpr alias [#2369]( https://github.com/sofa-framework/sofa/pull/2369 ); - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Core] Fix diamond inheritance in PairInteractionConstraint [#2488]( https://github.com/sofa-framework/sofa/pull/2488 ); - [Sofa.DefaultType] Fix declaration of global variables [#2317]( https://github.com/sofa-framework/sofa/pull/2317 ); - [Sofa.GL] Set glew as mandatory [#2358]( https://github.com/sofa-framework/sofa/pull/2358 ); - [Sofa.Helper] Fix and micro-optimize AdvancedTimer [#2349]( https://github.com/sofa-framework/sofa/pull/2349 ); - [Sofa.Helper] More tests for NameDecoder + fix them [#2380]( https://github.com/sofa-framework/sofa/pull/2380 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ); - [Sofa.Helper_test] ""fix"" wstring unittest [#2320]( https://github.com/sofa-framework/sofa/pull/2320 ); - [Sofa.LinearAlgebra] Fix assert in CompressedRowSparseMatrix [#2347]( https://github.com/sofa-framework/sofa/pull/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:145399,install,install,145399,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,BJVisitor.cpp; ${SRC_ROOT}/InitVisitor.cpp; ${SRC_ROOT}/IntegrateBeginEvent.cpp; ${SRC_ROOT}/IntegrateEndEvent.cpp; ${SRC_ROOT}/MainTaskSchedulerRegistry.cpp; ${SRC_ROOT}/MainTaskSchedulerFactory.cpp; ${SRC_ROOT}/MechanicalOperations.cpp; ${SRC_ROOT}/MechanicalVPrintVisitor.cpp; ${SRC_ROOT}/MechanicalVisitor.cpp; ${SRC_ROOT}/MutationListener.cpp; ${SRC_ROOT}/Node.cpp; ${SRC_ROOT}/PauseEvent.cpp; ${SRC_ROOT}/PipelineImpl.cpp; ${SRC_ROOT}/PositionEvent.cpp; ${SRC_ROOT}/PrintVisitor.cpp; ${SRC_ROOT}/PropagateEventVisitor.cpp; ${SRC_ROOT}/RequiredPlugin.cpp; ${SRC_ROOT}/ResetVisitor.cpp; ${SRC_ROOT}/SceneLoaderFactory.cpp; ${SRC_ROOT}/SceneCheck.cpp; ${SRC_ROOT}/SceneCheckRegistry.cpp; ${SRC_ROOT}/SceneCheckMainRegistry.cpp; ${SRC_ROOT}/Simulation.cpp; ${SRC_ROOT}/SolveVisitor.cpp; ${SRC_ROOT}/StateChangeVisitor.cpp; ${SRC_ROOT}/TopologyChangeVisitor.cpp; ${SRC_ROOT}/UpdateBoundingBoxVisitor.cpp; ${SRC_ROOT}/UpdateContextVisitor.cpp; ${SRC_ROOT}/UpdateInternalDataVisitor.cpp; ${SRC_ROOT}/UpdateLinksVisitor.cpp; ${SRC_ROOT}/UpdateMappingEndEvent.cpp; ${SRC_ROOT}/UpdateMappingVisitor.cpp; ${SRC_ROOT}/VectorOperations.cpp; ${SRC_ROOT}/VelocityThresholdVisitor.cpp; ${SRC_ROOT}/Visitor.cpp; ${SRC_ROOT}/VisualVisitor.cpp; ${SRC_ROOT}/WriteStateVisitor.cpp; ${SRC_ROOT}/XMLPrintVisitor.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/BaseSimulationExporter.cpp; ${SRC_ROOT}/TaskScheduler.cpp; ${SRC_ROOT}/TaskSchedulerFactory.cpp; ${SRC_ROOT}/TaskSchedulerRegistry.cpp; ${SRC_ROOT}/DefaultTaskScheduler.cpp; ${SRC_ROOT}/Task.cpp; ${SRC_ROOT}/InitTasks.cpp; ${SRC_ROOT}/WorkerThread.cpp; ${SRC_ROOT}/events/BuildConstraintSystemEndEvent.cpp; ${SRC_ROOT}/events/SimulationInitDoneEvent.cpp; ${SRC_ROOT}/events/SimulationInitStartEvent.cpp; ${SRC_ROOT}/events/SimulationInitTexturesDoneEvent.cpp; ${SRC_ROOT}/events/SimulationStartEvent.cpp; ${SRC_ROOT}/events/SimulationStopEvent.cpp; ${SRC_ROOT}/events/SolveConstraintSystemEndEvent.cpp. ${SRC_ROOT}/mechanicalvisitor/MechanicalAc,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:8248,Update,UpdateLinksVisitor,8248,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Update'],['UpdateLinksVisitor']
Deployability,"BOX ""Compile Sofa with the SOFA_NO_UPDATE_BBOX macro defined."" OFF); option(SOFA_DUMP_VISITOR_INFO ""Compile Sofa with the SOFA_DUMP_VISITOR_INFO macro defined."" OFF); if(MSVC); option(SOFA_VECTORIZE ""(deprecated) Enable the use of SSE2 instructions by the compiler (Only available for MSVC)."" OFF); option(SOFA_ENABLE_SIMD ""Enable the use of SIMD instructions by the compiler (AVX/AVX2 for msvc, march=native for gcc/clang)."" OFF); endif(); option(SOFA_ENABLE_FAST_MATH ""Enable floating-point model to fast (theoretically faster but can bring unexpected results/bugs)."" OFF). ### SOFA_DEV_TOOL; option(SOFA_WITH_DEVTOOLS ""Compile with development extra features."" ON). # Variables to expose in configured files; sofa_set_01(SOFA_NO_UPDATE_BBOX_ VALUE ${SOFA_NO_UPDATE_BBOX}) # build_option_bbox.h.in. # Create build and install versions of etc/sofa.ini:; # - In build dir, sofa.ini contains absolute paths to distant (in source) share/ and examples/ dirs; # - In install dir, sofa.ini (generated later via installedSofa.ini) contains relative paths to local share/ and examples/ dirs; set(SHARE_DIR ""${CMAKE_SOURCE_DIR}/share""); set(EXAMPLES_DIR ""${CMAKE_SOURCE_DIR}/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/sofa.ini""); set(SHARE_DIR ""../share/sofa""); set(EXAMPLES_DIR ""../share/sofa/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini"" DESTINATION etc RENAME sofa.ini COMPONENT applications). set(SOFACONFIGSRC_ROOT ""src/sofa""); set(HEADER_FILES; ${SOFACONFIGSRC_ROOT}/config.h.in; ${SOFACONFIGSRC_ROOT}/version.h.in; ${SOFACONFIGSRC_ROOT}/url.h.in; ); set(SOURCE_FILES; ${SOFACONFIGSRC_ROOT}/initSofaConfig.cpp # necessary to build a library; ); set(SOFACONFIG_BUILD_OPTIONS_SRC; ${SOFACONFIGSRC_ROOT}/config/sharedlibrary_defines.h.in; ${SOFACONFIGSRC_ROOT}/config/build_option_dump_visitor.h.in; ${SOFACONFIGSRC_ROOT}/config/build_option_bbox.h.in; ). # Header-only librar",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:3231,install,installedSofa,3231,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['install'],['installedSofa']
Deployability,"CImg.cmake ${CMAKE_BINARY_DIR}/lib/cmake/FindCImg.cmake COPYONLY); install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindCImg.cmake DESTINATION lib/cmake/${PROJECT_NAME} COMPONENT headers). sofa_find_package(CImg QUIET). if(NOT CImg_FOUND AND SOFA_ALLOW_FETCH_DEPENDENCIES); message(""CImgPlugin: DEPENDENCY CImg NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is ON, fetching CImg...""). include(FetchContent); FetchContent_Declare(CImg; GIT_REPOSITORY https://github.com/GreycLab/CImg; GIT_TAG v.3.3.2; ). FetchContent_GetProperties(CImg); if(NOT CImg_POPULATED); FetchContent_Populate(CImg). set(CIMG_H_DIR ${cimg_SOURCE_DIR}); sofa_find_package(CImg REQUIRED); endif(); elseif (NOT CImg_FOUND); message(FATAL_ERROR ""CImgPlugin: DEPENDENCY CImg NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install cimg-dev, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # OS X only: if the user installed its own JPEG/PNG lib (typically with homebrew/port),; # it will allow to use those instead of those present in XCode's frameworks; set(CMAKE_FIND_FRAMEWORK LAST). sofa_find_package(TIFF QUIET); sofa_find_package(ZSTD QUIET); sofa_find_package(JPEG QUIET); sofa_find_package(PNG QUIET); sofa_find_package(ZLIB QUIET). # Configure Paths according to detected packages; set(DEP_TARGETS """"); set(CIMG_CFLAGS -Dcimg_no_system_calls) # Remove CImg sys calls; if(TIFF_FOUND AND ( NOT(SOFA_BUILD_RELEASE_PACKAGE) OR ZSTD_FOUND)); message(STATUS ""CImgPlugin: TIFF Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_tiff); list(APPEND DEP_TARGETS TIFF::TIFF); if(ZSTD_FOUND); set(DEP_ZSTD ZSTD::ZSTD); endif(); else(); message(STATUS ""CImgPlugin: TIFF Image Format disabled""); endif(); if(JPEG_FOUND); message(STATUS ""CImgPlugin: JPEG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_jpeg); if(WIN32); # prevent INT32 redefinition on Windows (see jmorecfg.h); list(APPEND CIMG_CFLAGS -DXMD_H); endif(); list(APPEND DEP_TARGETS JPEG::JPEG); else(); message",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt:1420,install,installed,1420,applications/plugins/CImgPlugin/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt,1,['install'],['installed']
Deployability,"CMAKE_CURRENT_SOURCE_DIR}/runSofa.rc""); endif(). if(APPLE AND SOFA_BUILD_APP_BUNDLE); add_executable(${PROJECT_NAME} MACOSX_BUNDLE ${RC_FILES} ${RESOURCE_FILES} ${HEADER_FILES} ${SOURCE_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES MACOSX_BUNDLE_INFO_PLIST ""${CMAKE_CURRENT_SOURCE_DIR}/runSofa.plist""); else(); add_executable(${PROJECT_NAME} ${RC_FILES} ${RESOURCE_FILES} ${HEADER_FILES} ${SOURCE_FILES}); endif(). target_compile_definitions(${PROJECT_NAME} PUBLIC ""CONFIG_PLUGIN_FILENAME=${_configPluginFileName}""); target_compile_definitions(${PROJECT_NAME} PUBLIC ""DEFAULT_CONFIG_PLUGIN_FILENAME=${_defaultConfigPluginFileName}""). target_link_libraries(${PROJECT_NAME} Sofa.Simulation.Graph); target_link_libraries(${PROJECT_NAME} Sofa.GUI.Common); target_link_libraries(${PROJECT_NAME} Sofa.GUI.Batch); target_link_libraries(${PROJECT_NAME} SceneChecking). if(Sofa.Component.Playback_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.Component.Playback); else(); message(WARNING ""runSofa: Sofa.Component.Playback not found, disabling validation feature.""); endif(). if(SOFA_BUILD_TESTS); add_subdirectory(runSofa_test); endif(). # Create build and install versions of .ini file for resources finding; set(RESOURCES_DIR ""${CMAKE_CURRENT_SOURCE_DIR}/resources""); configure_file(""${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in"" ""${CMAKE_BINARY_DIR}/etc/${PROJECT_NAME}.ini""); set(RESOURCES_DIR ""../share/sofa/gui/runSofa""); configure_file(""${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in"" ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini"" DESTINATION etc RENAME ${PROJECT_NAME}.ini COMPONENT applications). install(DIRECTORY ""resources/"" DESTINATION ""share/sofa/gui/runSofa"" COMPONENT resources). sofa_add_targets_to_package(; PACKAGE_NAME Sofa.GUI; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""${CMAKE_CURRENT_SOURCE_DIR}""; INCLUDE_INSTALL_DIR ""Sofa.GUI/runSofa""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/runSofa/CMakeLists.txt:2834,install,install,2834,applications/projects/runSofa/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/runSofa/CMakeLists.txt,5,['install'],"['install', 'installed']"
Deployability,"COMPONENT resources); install(DIRECTORY examples/ DESTINATION share/sofa/examples COMPONENT resources); install(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about plugins, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#plugin""); install(DIRECTORY ${CMAKE_BINARY_DIR}/plugins/ DESTINATION plugins COMPONENT resources); file(WRITE ""${CMAKE_BINARY_DIR}/collections/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about collections, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#collection""); install(DIRECTORY ${CMAKE_BINARY_DIR}/collections/ DESTINATION collections COMPONENT resources). sofa_install_git_infos(${PROJECT_NAME} ${CMAKE_CURRENT_SOURCE_DIR}). # Post-install scripts (must be the last add_subdirectory); add_subdirectory(tools/postinstall-fixup). if(SOFA_BUILD_RELEASE_PACKAGE); #######################; # CPack configuration #; #######################. ################; # Package config; include(CPackComponent); if(WIN32 AND ${CMAKE_VERSION} VERSION_LESS ""3.13.0""); include(CPackNSIS); endif(); include(CPackIFW); set(CPACK_PACKAGE_VERSION ""${Sofa_VERSION}""); set(CPACK_PACKAGE_NAME ""SOFA v${CPACK_PACKAGE_VERSION}""); set(CPACK_PACKAGE_VENDOR ""The SOFA Team""); set(CPACK_PACKAGE_CONTACT ""contact@sofa-framework.org""); set(CPACK_PACKAGE_DESCRIPTION ""Real-time multi-physics simulation with an emphasis on medical simulation.""); set(CPACK_PACKAGE_DESCRIPTION_SUMMARY ""Real-time multi-physics simulation with an emphasis on medical simulation.""); set(CPACK_PACKAGE_EXECUTABLES ""runSofa"" ""runSofa""); set(CPACK_PACKAGE_DESCRIPTION_FILE ""${CMAKE_SOURCE_DIR}/README.md""); set(CPACK_PACKAGE_HOMEPAGE_URL ""https://www.sofa-framework.org""); set(CPACK_PACKAGE_FILE_NAME ""SOFA_v${CPACK_PACKAGE_VERSION}"")",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:11613,install,install,11613,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['install'],['install']
Deployability,Comparison on a set of the steak scenes (data: 100 x 75 x 9). 3F-6E:; 3 Lloyds: 0.23 0.23 0.24 (0.7 total); computeWeights: 1.91; ComputeLinearRegionSampling: 0.04; UpdateSampleMaterialProperties: 0. 3F-10E:; 3 Lloyds: 0.23 0.23 0.24 (0.7 total); computeWeights: 1.89; ComputeLinearRegionSampling: 0.1; UpdateSampleMaterialProperties: 0.01. 3F-20E:; 3 Lloyds: 0.22 0.24 0.23 (0.69 total); computeWeights: 1.92; ComputeLinearRegionSampling: 0.19; UpdateSampleMaterialProperties: 0.01. 3F-50E:; 3 Lloyds: 0.24 0.23 0.22 (0.69 total); computeWeights: 1.91; ComputeLinearRegionSampling: 0.32; UpdateSampleMaterialProperties: 0.02. 5F-6E:; 5 Lloyds: 0.24 0.23 0.25 0.24 0.24 (1.2 total); computeWeights: 2.91; ComputeLinearRegionSampling: 0.07; UpdateSampleMaterialProperties: 0. 5F-10E:; 5 Lloyds: 0.24 0.24 0.23 0.24 0.25 (1.18 total); computeWeights: 2.95; ComputeLinearRegionSampling: 0.07; UpdateSampleMaterialProperties: 0. 5F-20E:; 5 Lloyds: 0.23 0.24 0.23 0.24 0.23 (1.17 total); computeWeights: 2.91; ComputeLinearRegionSampling: 0.1; UpdateSampleMaterialProperties: 0.01. 5F-50E:; 5 Lloyds: 0.24 0.24 0.24 0.24 0.24 (1.2 total); computeWeights: 2.95; ComputeLinearRegionSampling: 0.32; UpdateSampleMaterialProperties: 0.01. 10F-6E:; 7 Lloyds: 0.25 0.24 0.25 0.25 0.24 0.25 0.24 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.13; UpdateSampleMaterialProperties: 0.01. 10F-10E:; 7 Lloyds: 0.25 0.25 0.24 0.25 0.24 0.25 0.24 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.12; UpdateSampleMaterialProperties: 0.02. 10F-20E:; 7 Lloyds: 0.25 0.24 0.25 0.24 0.24 0.24 0.24 (1.7 total); computeWeights: 4.93; ComputeLinearRegionSampling: 0.13; UpdateSampleMaterialProperties: 0.01. 10F-50E:; 7 Lloyds: 0.25 0.25 0.24 0.24 0.24 0.25 0.25 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.12; UpdateSampleMaterialProperties: 0.02. 20F-6E:; 9 Lloyds: 0.27 0.27 0.28 0.27 0.27 0.27 0.27 0.27 0.27 (2.44 total); computeWeights: 7.89; ComputeLinearRegio,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/comparison.txt:165,Update,UpdateSampleMaterialProperties,165,applications/projects/sofaInitTimer/output/comparison.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/comparison.txt,6,['Update'],['UpdateSampleMaterialProperties']
Deployability,"D_H); endif(); list(APPEND DEP_TARGETS JPEG::JPEG); else(); message(STATUS ""CImgPlugin: JPEG Image Format disabled""); endif(); if(PNG_FOUND); message(STATUS ""CImgPlugin: PNG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_png); if(UNIX); # Prevent pngconf error (see https://bugs.launchpad.net/ubuntu/+source/libpng/+bug/218409); list(APPEND CIMG_CFLAGS -DPNG_SKIP_SETJMP_CHECK); endif(); list(APPEND DEP_TARGETS PNG::PNG); else(); message(STATUS ""CImgPlugin: PNG Image Format disabled""); endif(); if(ZLIB_FOUND); list(APPEND DEP_TARGETS ZLIB::ZLIB); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<BUILD_INTERFACE:${CImg_INCLUDE_DIRS}>""); target_compile_options(${PROJECT_NAME} PUBLIC ${CIMG_CFLAGS}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.DefaultType ); target_link_libraries(${PROJECT_NAME} INTERFACE CImg); target_link_libraries(${PROJECT_NAME} PUBLIC ${DEP_TARGETS}). if(SOFA_BUILD_RELEASE_PACKAGE OR CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS ${DEP_TARGETS} ${DEP_ZSTD}); endif(). if(MSVC); target_link_options(${PROJECT_NAME} PRIVATE ""/DEF:${CMAKE_CURRENT_SOURCE_DIR}/exports.def""); endif(). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} CImg AUTO_SET_TARGET_PROPERTIES ; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""CImgPlugin""; RELOCATABLE ""plugins""; ). install(FILES; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindCImg.cmake""; DESTINATION lib/cmake/Modules; COMPONENT headers; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(CIMGPLUGIN_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(CIMGPLUGIN_BUILD_TESTS); enable_testing(); add_subdirectory(CImgPlugin_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt:3678,Install,Install,3678,applications/plugins/CImgPlugin/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt,3,"['Install', 'configurat', 'install']","['Install', 'configurations', 'install']"
Deployability,DotVisitor.h; ${SRC_ROOT}/ExportGnuplotVisitor.h; ${SRC_ROOT}/ExportVisualModelOBJVisitor.h; ${SRC_ROOT}/InitVisitor.h; ${SRC_ROOT}/IntegrateBeginEvent.h; ${SRC_ROOT}/IntegrateEndEvent.h; ${SRC_ROOT}/LocalStorage.h; ${SRC_ROOT}/MechanicalOperations.h; ${SRC_ROOT}/MechanicalVPrintVisitor.h; ${SRC_ROOT}/MechanicalVisitor.h; ${SRC_ROOT}/MutationListener.h; ${SRC_ROOT}/Node.h; ${SRC_ROOT}/Node.inl; ${SRC_ROOT}/ParallelForEach.h; ${SRC_ROOT}/ParallelSparseMatrixProduct.h; ${SRC_ROOT}/ParallelVisitorScheduler.h; ${SRC_ROOT}/PauseEvent.h; ${SRC_ROOT}/PipelineImpl.h; ${SRC_ROOT}/PositionEvent.h; ${SRC_ROOT}/PrintVisitor.h; ${SRC_ROOT}/PropagateEventVisitor.h; ${SRC_ROOT}/RequiredPlugin.h; ${SRC_ROOT}/ResetVisitor.h; ${SRC_ROOT}/SceneLoaderFactory.h; ${SRC_ROOT}/Simulation.h; ${SRC_ROOT}/SimulationLoop.h; ${SRC_ROOT}/SolveVisitor.h; ${SRC_ROOT}/StateChangeVisitor.h; ${SRC_ROOT}/TopologyChangeVisitor.h; ${SRC_ROOT}/UpdateBoundingBoxVisitor.h; ${SRC_ROOT}/UpdateContextVisitor.h; ${SRC_ROOT}/UpdateInternalDataVisitor.h; ${SRC_ROOT}/UpdateLinksVisitor.h; ${SRC_ROOT}/UpdateMappingEndEvent.h; ${SRC_ROOT}/UpdateMappingVisitor.h; ${SRC_ROOT}/VectorOperations.h; ${SRC_ROOT}/VelocityThresholdVisitor.h; ${SRC_ROOT}/Visitor.h; ${SRC_ROOT}/VisitorExecuteFunc.h; ${SRC_ROOT}/VisitorScheduler.h; ${SRC_ROOT}/VisualVisitor.h; ${SRC_ROOT}/WriteStateVisitor.h; ${SRC_ROOT}/XMLPrintVisitor.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/BaseSimulationExporter.h; ${SRC_ROOT}/TaskScheduler.h; ${SRC_ROOT}/TaskSchedulerFactory.h; ${SRC_ROOT}/TaskSchedulerRegistry.h; ${SRC_ROOT}/DefaultTaskScheduler.h; ${SRC_ROOT}/Task.h; ${SRC_ROOT}/InitTasks.h; ${SRC_ROOT}/Locks.h; ${SRC_ROOT}/MainTaskSchedulerFactory.h; ${SRC_ROOT}/MainTaskSchedulerRegistry.h; ${SRC_ROOT}/SceneCheck.h; ${SRC_ROOT}/SceneCheckRegistry.h; ${SRC_ROOT}/SceneCheckMainRegistry.h; ${SRC_ROOT}/WorkerThread.h; ${SRC_ROOT}/events/BuildConstraintSystemEndEvent.h; ${SRC_ROOT}/events/SimulationInitDoneEvent.h; ${SRC_ROOT}/events/SimulationInitStartEvent.h; ${,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:1776,Update,UpdateInternalDataVisitor,1776,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Update'],['UpdateInternalDataVisitor']
Deployability,"ES Kinect.h); list(APPEND SOURCE_FILES Kinect.cpp); message(STATUS ""image: found the freenect library""); else(); message(STATUS ""image: could not find the freenect library, won't build the Kinect component""); endif(); endif(). # OpenMP is bugged in image, forcing it to be single threaded for now; if(SOFA_OPENMP); message( WARNING ""image: deactivating OpenMP"" ); string(REPLACE ""${OpenMP_CXX_FLAGS}"" """" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS}); string(REPLACE ""${OpenMP_CXX_FLAGS}"" """" CMAKE_CXX_LINK_FLAGS ${CMAKE_CXX_LINK_FLAGS}); endif(). set(PLUGIN_IMAGE_COMPILE_SET_VALUE 0) # none; if(PLUGIN_IMAGE_COMPILE_SET STREQUAL ""standard""); set(PLUGIN_IMAGE_COMPILE_SET_VALUE 1); elseif(PLUGIN_IMAGE_COMPILE_SET STREQUAL ""full""); set(PLUGIN_IMAGE_COMPILE_SET_VALUE 2); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES} ${PYTHON_FILES}); target_compile_definitions(${PROJECT_NAME} PRIVATE ""-DSOFA_BUILD_IMAGE""); target_link_libraries(${PROJECT_NAME} Sofa.Core CImgPlugin Sofa.Component.Visual). if(Sofa.GL_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GL) ; endif(). if(FREENECT_FOUND); target_link_libraries(${PROJECT_NAME} freenect freenect_sync); target_include_directories(${PROJECT_NAME} PUBLIC ""${FREENECT_INCLUDE_DIR}""); endif(). if(ZLIB_FOUND); target_link_libraries(${PROJECT_NAME} ZLIB::ZLIB); if(CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS ZLIB::ZLIB); endif(); endif(). if(SofaPython_FOUND); target_link_libraries(${PROJECT_NAME} SofaPython) ; endif(). if(MultiThreading_FOUND); target_link_libraries(${PROJECT_NAME} MultiThreading); endif(). if(SOFA_BUILD_TESTS); add_subdirectory(image_test); endif(). if(Sofa.GUI.Qt_FOUND); add_subdirectory(image_gui); endif(). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; PACKAGE_VERSION ${PROJECT_VERSION}; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/CMakeLists.txt:4066,Install,Install,4066,applications/plugins/image/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,"ETECTIONOUTPUT_FREEMOTION macro defined."" OFF); option(SOFA_NO_UPDATE_BBOX ""Compile Sofa with the SOFA_NO_UPDATE_BBOX macro defined."" OFF); option(SOFA_DUMP_VISITOR_INFO ""Compile Sofa with the SOFA_DUMP_VISITOR_INFO macro defined."" OFF); if(MSVC); option(SOFA_VECTORIZE ""(deprecated) Enable the use of SSE2 instructions by the compiler (Only available for MSVC)."" OFF); option(SOFA_ENABLE_SIMD ""Enable the use of SIMD instructions by the compiler (AVX/AVX2 for msvc, march=native for gcc/clang)."" OFF); endif(); option(SOFA_ENABLE_FAST_MATH ""Enable floating-point model to fast (theoretically faster but can bring unexpected results/bugs)."" OFF). ### SOFA_DEV_TOOL; option(SOFA_WITH_DEVTOOLS ""Compile with development extra features."" ON). # Variables to expose in configured files; sofa_set_01(SOFA_NO_UPDATE_BBOX_ VALUE ${SOFA_NO_UPDATE_BBOX}) # build_option_bbox.h.in. # Create build and install versions of etc/sofa.ini:; # - In build dir, sofa.ini contains absolute paths to distant (in source) share/ and examples/ dirs; # - In install dir, sofa.ini (generated later via installedSofa.ini) contains relative paths to local share/ and examples/ dirs; set(SHARE_DIR ""${CMAKE_SOURCE_DIR}/share""); set(EXAMPLES_DIR ""${CMAKE_SOURCE_DIR}/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/sofa.ini""); set(SHARE_DIR ""../share/sofa""); set(EXAMPLES_DIR ""../share/sofa/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini"" DESTINATION etc RENAME sofa.ini COMPONENT applications). set(SOFACONFIGSRC_ROOT ""src/sofa""); set(HEADER_FILES; ${SOFACONFIGSRC_ROOT}/config.h.in; ${SOFACONFIGSRC_ROOT}/version.h.in; ${SOFACONFIGSRC_ROOT}/url.h.in; ); set(SOURCE_FILES; ${SOFACONFIGSRC_ROOT}/initSofaConfig.cpp # necessary to build a library; ); set(SOFACONFIG_BUILD_OPTIONS_SRC; ${SOFACONFIGSRC_ROOT}/config/sharedlibrary_defines.h.in; ${SOFACONFIGSRC_ROOT}/config/build_option_dump_visitor.h.in; ${SOF",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:3188,install,install,3188,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['install'],['install']
Deployability,"FF); endif(); option(SOFA_ENABLE_FAST_MATH ""Enable floating-point model to fast (theoretically faster but can bring unexpected results/bugs)."" OFF). ### SOFA_DEV_TOOL; option(SOFA_WITH_DEVTOOLS ""Compile with development extra features."" ON). # Variables to expose in configured files; sofa_set_01(SOFA_NO_UPDATE_BBOX_ VALUE ${SOFA_NO_UPDATE_BBOX}) # build_option_bbox.h.in. # Create build and install versions of etc/sofa.ini:; # - In build dir, sofa.ini contains absolute paths to distant (in source) share/ and examples/ dirs; # - In install dir, sofa.ini (generated later via installedSofa.ini) contains relative paths to local share/ and examples/ dirs; set(SHARE_DIR ""${CMAKE_SOURCE_DIR}/share""); set(EXAMPLES_DIR ""${CMAKE_SOURCE_DIR}/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/sofa.ini""); set(SHARE_DIR ""../share/sofa""); set(EXAMPLES_DIR ""../share/sofa/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini"" DESTINATION etc RENAME sofa.ini COMPONENT applications). set(SOFACONFIGSRC_ROOT ""src/sofa""); set(HEADER_FILES; ${SOFACONFIGSRC_ROOT}/config.h.in; ${SOFACONFIGSRC_ROOT}/version.h.in; ${SOFACONFIGSRC_ROOT}/url.h.in; ); set(SOURCE_FILES; ${SOFACONFIGSRC_ROOT}/initSofaConfig.cpp # necessary to build a library; ); set(SOFACONFIG_BUILD_OPTIONS_SRC; ${SOFACONFIGSRC_ROOT}/config/sharedlibrary_defines.h.in; ${SOFACONFIGSRC_ROOT}/config/build_option_dump_visitor.h.in; ${SOFACONFIGSRC_ROOT}/config/build_option_bbox.h.in; ). # Header-only library (not handled well by macros & stuff so commented); # add_library(${PROJECT_NAME} INTERFACE); # target_sources(${PROJECT_NAME} INTERFACE ""$<BUILD_INTERFACE:${HEADER_FILES};${SOFACONFIG_BUILD_OPTIONS_SRC}>""). # Library; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOFACONFIG_BUILD_OPTIONS_SRC} ${SOURCE_FILES}). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>""). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:3629,install,install,3629,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,2,['install'],"['install', 'installedSofa']"
Deployability,Fix the FindAssimp.cmake [#4326](https://github.com/sofa-framework/sofa/pull/4326); - [image] image_gui to compile with Qt6 [#4330](https://github.com/sofa-framework/sofa/pull/4330); - [Haption] Partially fix the plugin [#4338](https://github.com/sofa-framework/sofa/pull/4338); - [github] quick fix for GHD script [#4347](https://github.com/sofa-framework/sofa/pull/4347); - [github] fix stale action [#4348](https://github.com/sofa-framework/sofa/pull/4348); - [GUI] Fix compilation using QDocBrowser [#4354](https://github.com/sofa-framework/sofa/pull/4354); - [VolumetricRendering] Fix the compilation [#4398](https://github.com/sofa-framework/sofa/pull/4398); - [VolumetricRendering] Fix crashes in batch mode [#4436](https://github.com/sofa-framework/sofa/pull/4436); - [LinearSolver.Direct] Fix metis dependency [#4450](https://github.com/sofa-framework/sofa/pull/4450); - [Simulation.Common] Fix tinyXML2 install for windows [#4525](https://github.com/sofa-framework/sofa/pull/4525); - [all] Install FindTinyXML2 [#4545](https://github.com/sofa-framework/sofa/pull/4545); - [cmake] Remove error in Findcxxopt [#4554](https://github.com/sofa-framework/sofa/pull/4554); - [GUI.qt] Set link to tinyxml2 to PRIVATE and fix config file [#4558](https://github.com/sofa-framework/sofa/pull/4558); - [Config] Fix findcxxopt when version is not specified [#4564](https://github.com/sofa-framework/sofa/pull/4564); - [Config] Fix Findmetis module when using config mode [#4570](https://github.com/sofa-framework/sofa/pull/4570); - [all] Fix tinyxml2 dependency [#4574](https://github.com/sofa-framework/sofa/pull/4574). ### Cleaning; - [plugins] Remove fetching of SofaPython [#3855](https://github.com/sofa-framework/sofa/pull/3855); - [Constraint.Lagrangian] Add messages when no compliance is given [#3858](https://github.com/sofa-framework/sofa/pull/3858); - [all] include base class inl file [#3865](https://github.com/sofa-framework/sofa/pull/3865); - [SofaCUDA] No longer use deprecated texture ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:39472,Install,Install,39472,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Install'],['Install']
Deployability,"Get the name of the actual directory; message(""Adding external directory: ${name} (${dir})""); add_subdirectory(${dir} ""${CMAKE_CURRENT_BINARY_DIR}/external_directories/${name}""); endforeach(); endif(). ## Custom; if(EXISTS ""${CMAKE_CURRENT_LIST_DIR}/custom.cmake""); message(""Adding custom file""); include( ""custom.cmake"" ); endif(). ## IDE directories; # Sofa.Component; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES ""Sofa.Component.*"" AND NOT target MATCHES "".*_relocatable_install""); set_target_properties(${target} PROPERTIES FOLDER Sofa.Component) # IDE folder; endif(); endforeach(); # Testing; if(TARGET Sofa.Testing) # No need to search for test targets if tests are not enabled; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES "".*_test"" OR target MATCHES "".*_simutest""); set_target_properties(${target} PROPERTIES FOLDER Testing) # IDE folder; endif(); endforeach(); endif(); ##. ## Install configuration; #install(FILES ""${CMAKE_BINARY_DIR}/CMakeCache.txt"" DESTINATION . COMPONENT headers); install(FILES ""${CMAKE_SOURCE_DIR}/README.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/CHANGELOG.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/LICENSE-LGPL.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/Authors.txt"" DESTINATION . COMPONENT applications). option(SOFA_INSTALL_RESOURCES_FILES ""Copy resources files (etc/, share/, examples/, tools/sofa-launcher/) when installing"" ON); ## Install resource files; if(SOFA_INSTALL_RESOURCES_FILES); install(DIRECTORY share/ DESTINATION share/sofa COMPONENT resources); install(DIRECTORY examples/ DESTINATION share/sofa/examples COMPONENT resources); install(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""F",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:9959,Install,Install,9959,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,3,"['Install', 'configurat', 'install']","['Install', 'configuration', 'install']"
Deployability,"GridForceField.inl; ). set(SOURCE_FILES; ${SOFADISTANCEGRID_SRC}/initSofaDistanceGrid.cpp; ${SOFADISTANCEGRID_SRC}/DistanceGrid.cpp; ${SOFADISTANCEGRID_SRC}/RegisterModelToCollisionFactory.cpp; ${SOFADISTANCEGRID_SRC}/components/forcefield/DistanceGridForceField.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/FFDDistanceGridDiscreteIntersection.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/RayDistanceGridContact.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/RigidDistanceGridDiscreteIntersection.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/DistanceGridCollisionModel.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/BarycentricPenalityContact_DistanceGrid.cpp; ). set(EXTRA_FILES; README.md; examples/README.md; examples/DistanceGridCollisionModel.scn; examples/FFDDistanceGridCollisionModel.scn; examples/DistanceGridForceField-liver.scn; ). find_package(MiniFlowVR QUIET); sofa_find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED); sofa_find_package(Sofa.GL QUIET). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision). if(Sofa.GL_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL); endif(). if(MiniFlowVR_FOUND); target_link_libraries(${PROJECT_NAME} PRIVATE miniFlowVR) # Private because not exported in API; message(STATUS ""SofaDistanceGrid: MiniFlowVR found.""); else(); message(STATUS ""SofaDistanceGrid: MiniFlowVR not found, some features will not be compiled.""); endif(). if(SOFA_BUILD_TESTS); add_subdirectory(SofaDistanceGrid_test); endif(). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaDistanceGrid/CMakeLists.txt:3175,Install,Install,3175,applications/plugins/SofaDistanceGrid/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaDistanceGrid/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,"HeadlessRecorder is, as its name suggest, a new gui plugin who allow users to records sofa visualisation without any windows (batch only). ⚠ Linux only ⚠. ## Installation. Ubuntu :; ```; $ sudo apt-get install libavcodec-dev libswscale-dev libavutil-dev libavformat-dev ; ```. ## How to use it. Every needed information are available in runSofa helper.; ```; $ ./runSofa -h; ```. Here is an example for recording a 5 seconds video in 1920x1080 ; ```; $ ./runSofa -g hRecorder --video --width=1920 --height=1080 --fps=60 --recordTime=5 -a --filename aFileName; ```; This example will record in a video file named myFileName a footage of the default runSofa scene (aka caduceus). The dimensions of the video will be 1920x1080, the framerate is set to 60fps, the recording time will be 10 seconds and the option -a animate the scene. Here is an example for screenshots 1920x1080 ; ```; $ ./runSofa -g hRecorder --picture --width=1920 --height=1080 --fps=60 --recordTime=10 -a --filename aFileName; ```; ## Information. You have to use an InteractiveCamera component in your scene and correctly place it before recording.; By example you need to add this line to your caduceus scene :; ```; <InteractiveCamera position=""0 30 90"" lookAt=""0 30 0""/>; ```. ### Authors; Douaille Erwan. ### Contact information; douailleerwan@gmail.com; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/HeadlessRecorder/README.md:158,Install,Installation,158,Sofa/GUI/HeadlessRecorder/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/HeadlessRecorder/README.md,2,"['Install', 'install']","['Installation', 'install']"
Deployability,"IES LINK_FLAGS ""${SOFACONFIG_LINK_OPTIONS}""); endif(); else(); target_link_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:RELEASE>:${SOFACONFIG_LINK_OPTIONS_RELEASE}>""); target_link_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:DEBUG>:${SOFACONFIG_LINK_OPTIONS_DEBUG}>""); target_link_options(${PROJECT_NAME} PUBLIC ""${SOFACONFIG_LINK_OPTIONS}""); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. # Attach Sofa Version into properties; set_target_properties(${PROJECT_NAME} PROPERTIES Sofa_VERSION ""${Sofa_VERSION}""); set_target_properties(${PROJECT_NAME} PROPERTIES SOFA_VERSION_STR ""${SOFA_VERSION_STR}""); set_target_properties(${PROJECT_NAME} PROPERTIES SOFA_VERSION ""${SOFA_VERSION}""). set_target_properties(${PROJECT_NAME} PROPERTIES SOFA_URL ""${SOFA_URL}""). # CMakeParseLibraryList.cmake; configure_file(cmake/CMakeParseLibraryList.cmake ${CMAKE_BINARY_DIR}/lib/cmake/CMakeParseLibraryList.cmake COPYONLY); install(FILES cmake/CMakeParseLibraryList.cmake DESTINATION lib/cmake/${PROJECT_NAME} COMPONENT headers). # SofaMacros*.cmake; set(macro_files SofaMacros.cmake SofaMacrosConfigure.cmake SofaMacrosInstall.cmake SofaMacrosPython.cmake SofaMacrosUtils.cmake); foreach(macro_file ${macro_files}); configure_file(cmake/${macro_file} ${CMAKE_BINARY_DIR}/lib/cmake/${macro_file} COPYONLY); install(FILES cmake/${macro_file} DESTINATION lib/cmake/${PROJECT_NAME} COMPONENT headers); endforeach(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Propagate variables (which were in Sofa's global cmakelist); # TODO: Put instead into a target_property ?; set(CMAKE_MODULE_PATH ""${CMAKE_MODULE_PATH}"" PARENT_SCOPE); set(CMAKE_PREFIX_PATH ""${CMAKE_PREFIX_PATH}"" PARENT_SCOPE); set(SOFA_WITH_FLOAT ""${SOFA_WITH_FLOAT}"" PARENT_SCOPE); set(SOFA_WITH_DOUBLE ""${SOFA_WITH_DOUBLE}"" PARENT_SCOPE); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:15502,install,install,15502,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['install'],['install']
Deployability,IO.Mesh] More debug info in the error message in MeshSTLLoader [#3949](https://github.com/sofa-framework/sofa/pull/3949); - [Sofa.Simulation] Remove Node::bwdInit [#3954](https://github.com/sofa-framework/sofa/pull/3954); - [Mapping/tests] Remove dependency on SceneCreator [#3955](https://github.com/sofa-framework/sofa/pull/3955); - [Simulation.Core] Deprecate unused classes *VisitorScheduler [#3957](https://github.com/sofa-framework/sofa/pull/3957); - [Helper.System] Introduce function append for paths [#3961](https://github.com/sofa-framework/sofa/pull/3961); - [Project] Start dev phase v23.12 [#3963](https://github.com/sofa-framework/sofa/pull/3963); - [all] Minor clean on indentation and warning [#3975](https://github.com/sofa-framework/sofa/pull/3975); - [MechanicalLoad] Remove empty draw function in LinearForceField [#3979](https://github.com/sofa-framework/sofa/pull/3979); - [tests] Restore commented unit tests [#3982](https://github.com/sofa-framework/sofa/pull/3982); - [CHANGELOG] Update further to latest changes in v23.06 [#3998](https://github.com/sofa-framework/sofa/pull/3998); - [Component] Follow changes from SOFA #3889 [#4013](https://github.com/sofa-framework/sofa/pull/4013); - [LinearAlgebra] CompressedRowSparseMatrix: add virtual destructor [#4020](https://github.com/sofa-framework/sofa/pull/4020); - [GuiQt] Remove some unactivated code [#4025](https://github.com/sofa-framework/sofa/pull/4025); - [constraint] Update PrecomputedConstraintCorrection logs when loading compliance file [#4026](https://github.com/sofa-framework/sofa/pull/4026); - [all] Lifecycle v23.12 2/n [#4040](https://github.com/sofa-framework/sofa/pull/4040); - [GUI.Qt] Remove unused recorder feature [#4041](https://github.com/sofa-framework/sofa/pull/4041); - [MechanicalLoad] Use prefix d_ in DiagonalVelocityDampingForceField [#4046](https://github.com/sofa-framework/sofa/pull/4046); - [all] Lifecycle v23.12 3/n [#4056](https://github.com/sofa-framework/sofa/pull/4056); - [all] Cle,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:43553,Update,Update,43553,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"IR}"" DIRECTORY); endif(); get_target_property(qjpeg_loc Qt5::QJpegPlugin LOCATION_RELEASE); get_filename_component(imageformats_dir ""${qjpeg_loc}"" DIRECTORY); get_filename_component(plugins_dir ""${imageformats_dir}"" DIRECTORY); get_filename_component(QT_DATA_DIR ""${plugins_dir}"" DIRECTORY). message(""QT_LIB_DIR = ${QT_LIB_DIR}""); message(""QT_DATA_DIR = ${QT_DATA_DIR}""). if(CMAKE_SYSTEM_NAME STREQUAL Linux); install(CODE ""file(WRITE; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/bin/qt.conf\""; \""[Paths]\\n Prefix = ..\\n Plugins = bin\\n LibraryExecutables = bin\""; )""; COMPONENT resources); install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/linux-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""${CMAKE_BINARY_DIR}\""; \""\$ENV{DESTDIR\}\${CMAKE_INSTALL_PREFIX\}\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; )""; COMPONENT resources); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); if(SOFA_BUILD_APP_BUNDLE); include(macdeployqt) # set MACDEPLOYQT_EXECUTABLE; install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/macos-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/../..\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; \""${MACDEPLOYQT_EXECUTABLE}\""; )""; COMPONENT resources); else(); install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/macos-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; )""; COMPONENT resources); endif(); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); install(CODE ""file(WRITE; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/bin/qt.conf\""; \""[Paths]\\n Prefix = ..\\n Plugins = bin\\n LibraryExecutables = bin\""; )""; COMPONENT resources); install(CODE ""execute_process(COMMAND bash; \""${CMAKE_CURRENT_LIST_DIR}/windows-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""${CMAKE_BINARY_DIR}\""; \""\$ENV{DESTDIR\}\${CMAKE_INSTALL_PREFIX\}\""; )""; COMPONENT resources); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/postinstall-fixup/CMakeLists.txt:1605,install,install,1605,tools/postinstall-fixup/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/postinstall-fixup/CMakeLists.txt,3,['install'],['install']
Deployability,Img & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [image]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Meshconv]; - fix build if no miniflowVR [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [MultiThreading]; - FIX: examples installation [#299]( https://github.com/sofa-framework/sofa/pull/299 ); - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ); - FIX Windows dll loading [#507]( https://github.com/sofa-framework/sofa/pull/507 ); - [runSofa]; - FIX plugin config copy on Windows [#451]( https://github.com/sofa-framework/sofa/pull/451 ); - remove non-ASCII chars in string [#327]( https://github.com/sofa-framework/sofa/pull/327 ); - FIX PluginRepository initialization [#502]( https://github.com/sofa-framework/sofa/pull/502 ); - [SofaCUDA]; - Fix compilation problem with cuda. [#320]( https://github.com/sofa-framework/sofa/pull/320 ); - Fix: Headers of the SofaCUDA plugin are now installed in the include folder [#383]( https://github.com/sofa-framework/sofa/pull/383 ); - FIX Configuration/compilation issue with CUDA plugin [#523]( https://github.com/sofa-framework/sofa/pull/523 ); - Fix linearforcefield that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - [SofaGui]; - FIX draw scenes on classical and retina screens [#311]( https://github.com/sofa-framework/sofa/pull/311 ); - Fixes #183 : Use the qt menu instead of the native one in Mac OS [#366]( https://github.com/sofa-framework/sofa/pull/366 ); - fix ImageBMP issue + remove Laparoscopic stuff [#499]( https://github.com/sofa-framework/sofa/pull/499 ); - Pickhandler minor fixs [#522]( https://github.com/sofa-framework/sofa/pull/522 ); - Fix: Intel graphics on linux now overrides the core profile context [#526]( https://github.com/sofa-framework/sofa/pull/526 ); - [SofaImplicitField]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [So,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:318627,install,installed,318627,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['installed']
Deployability,Introduce function append for paths [#3961](https://github.com/sofa-framework/sofa/pull/3961); - [Project] Start dev phase v23.12 [#3963](https://github.com/sofa-framework/sofa/pull/3963); - [all] Minor clean on indentation and warning [#3975](https://github.com/sofa-framework/sofa/pull/3975); - [MechanicalLoad] Remove empty draw function in LinearForceField [#3979](https://github.com/sofa-framework/sofa/pull/3979); - [tests] Restore commented unit tests [#3982](https://github.com/sofa-framework/sofa/pull/3982); - [CHANGELOG] Update further to latest changes in v23.06 [#3998](https://github.com/sofa-framework/sofa/pull/3998); - [Component] Follow changes from SOFA #3889 [#4013](https://github.com/sofa-framework/sofa/pull/4013); - [LinearAlgebra] CompressedRowSparseMatrix: add virtual destructor [#4020](https://github.com/sofa-framework/sofa/pull/4020); - [GuiQt] Remove some unactivated code [#4025](https://github.com/sofa-framework/sofa/pull/4025); - [constraint] Update PrecomputedConstraintCorrection logs when loading compliance file [#4026](https://github.com/sofa-framework/sofa/pull/4026); - [all] Lifecycle v23.12 2/n [#4040](https://github.com/sofa-framework/sofa/pull/4040); - [GUI.Qt] Remove unused recorder feature [#4041](https://github.com/sofa-framework/sofa/pull/4041); - [MechanicalLoad] Use prefix d_ in DiagonalVelocityDampingForceField [#4046](https://github.com/sofa-framework/sofa/pull/4046); - [all] Lifecycle v23.12 3/n [#4056](https://github.com/sofa-framework/sofa/pull/4056); - [all] Clean unused warnings in SOFA [#4057](https://github.com/sofa-framework/sofa/pull/4057); - [all] Lifecycle v23.12 4/n [#4058](https://github.com/sofa-framework/sofa/pull/4058); - [plugins] Fix OptionGroup deprecated constructor in image and SofaCUDA plugin [#4064](https://github.com/sofa-framework/sofa/pull/4064); - [all] Update code regarding lifecycle in Topology.h [#4065](https://github.com/sofa-framework/sofa/pull/4065); - [all] Fix warnings related to Vec and unused v,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:43999,Update,Update,43999,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,JECTIVE_SOURCE_DIR}/HermiteSplineConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearMovementConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearMovementConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearVelocityConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearVelocityConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/OscillatorConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/OscillatorConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ParabolicConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ParabolicConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialFixedConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialFixedConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialLinearMovementConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialLinearMovementConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PatchTestMovementConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PatchTestMovementConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PositionBasedDynamicsConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PositionBasedDynamicsConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/SkeletalMotionConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/SkeletalMotionConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ProjectToLineConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ProjectToLineConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ProjectToPlaneConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ProjectToPlaneConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ProjectToPointConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ProjectToPointConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ProjectDirectionConstraint.h; ${SOFACOMPONENTC,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Projective/CMakeLists.txt:2272,Patch,PatchTestMovementConstraint,2272,Sofa/Component/Constraint/Projective/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Projective/CMakeLists.txt,1,['Patch'],['PatchTestMovementConstraint']
Deployability,"LD_RELEASE_PACKAGE}\n""; "" Forcing CMAKE_INSTALL_PREFIX = ${CMAKE_INSTALL_PREFIX}""; ); endif(); message(STATUS ""Install prefix: ${CMAKE_INSTALL_PREFIX}""). # Remove generated CMake files, this prevents CMake from finding packages that; # were disabled (like, unchecked in cmake-gui) after being built once.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/cmake); file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/lib/cmake); # Remove generated SofaPython configuration files, to prevent SofaPython from; # adding paths to disabled plugins.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/etc/sofa/python.d). ## Custom Environment; list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/Sofa/framework/Config/cmake""); list(APPEND CMAKE_IGNORE_PATH ""${CMAKE_INSTALL_PREFIX}"") # ignore install directory for findXXX commands; include(SofaMacros). install(FILES; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/FindEigen3.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/macdeployqt.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/windeployqt.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/FindTinyXML2.cmake""; DESTINATION lib/cmake/Modules; COMPONENT headers; ). ## RPATH; if(UNIX); # RPATH is a field in ELF binaries that is used as a hint by the system; # loader to find needed shared libraries.; #; # In the build directory, cmake creates binaries with absolute paths in; # RPATH. And by default, it strips RPATH from installed binaries. Here we; # use CMAKE_INSTALL_RPATH to set a relative RPATH. By doing so, we avoid; # the need to play with LD_LIBRARY_PATH to get applications to run. # see https://cmake.org/Wiki/CMake_RPATH_handling for $ORIGIN doc; set(CMAKE_INSTALL_RPATH; ""$ORIGIN/../lib""; ""$$ORIGIN/../lib""; ). if(APPLE); set(CMAKE_MACOSX_RPATH ON); list(APPEND CMAKE_INSTALL_RPATH; ""@loader_path/../lib""; ""@executable_path/../lib""; ""@loader_path/../../Frameworks""",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:4042,install,install,4042,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['install'],['install']
Deployability,Lloyd_iteration 17.75; Lloyd_iteration 17.66; Lloyd_iteration 17.65; Lloyd_iteration 17.72; Lloyd_iteration 17.74; Lloyd_iteration 17.69; Lloyd_iteration 17.63; Lloyd_iteration 17.73; Lloyd_iteration 17.74; Lloyd_iteration 17.67; Lloyd_iteration 17.68; Lloyd_iteration 17.7; Lloyd_iteration 17.71; Lloyd_iteration 17.68; Lloyd_iteration 17.69; Lloyd_iteration 17.66; Lloyd_iteration 17.66; Lloyd_iteration 17.7; Lloyd_iteration 17.71; Lloyd_iteration 17.61; Lloyd_iteration 17.75; Lloyd_iteration 17.71; Lloyd_iteration 17.74; Lloyd_iteration 17.71; Lloyd_iteration 17.7; Lloyd_iteration 17.68; Lloyd_iteration 17.74; Lloyd_iteration 17.75; Lloyd_iteration 17.68; Lloyd_iteration 17.72; Lloyd_iteration 17.68; Lloyd_iteration 17.7; Lloyd_iteration 17.67; Lloyd_iteration 17.66; Lloyd_iteration 17.67; Lloyd_iteration 17.72; Lloyd_iteration 17.71; Lloyd_iteration 17.65; Lloyd_iteration 17.67; computeUniformSampling: 1804.31; computeWeights: 203.1; computeLinearRegionsSampling: 3.78; updateSampleMaterialProperties: 0.26. File: scenes/steak.pscn using steak-seg3.ppm 5 50; Lloyd_iteration 17.66; Lloyd_iteration 17.67; Lloyd_iteration 17.82; Lloyd_iteration 17.76; Lloyd_iteration 17.84; Lloyd_iteration 17.78; Lloyd_iteration 17.77; Lloyd_iteration 17.77; Lloyd_iteration 17.71; Lloyd_iteration 17.76; Lloyd_iteration 17.72; Lloyd_iteration 17.75; Lloyd_iteration 17.75; Lloyd_iteration 17.72; Lloyd_iteration 17.7; Lloyd_iteration 17.75; Lloyd_iteration 17.78; Lloyd_iteration 17.76; Lloyd_iteration 17.72; Lloyd_iteration 17.64; Lloyd_iteration 17.69; Lloyd_iteration 17.71; Lloyd_iteration 17.72; Lloyd_iteration 17.72; Lloyd_iteration 17.67; Lloyd_iteration 17.7; Lloyd_iteration 17.72; Lloyd_iteration 17.7; Lloyd_iteration 17.63; Lloyd_iteration 17.69; Lloyd_iteration 17.7; Lloyd_iteration 17.72; Lloyd_iteration 17.66; Lloyd_iteration 17.68; Lloyd_iteration 17.66; Lloyd_iteration 17.63; Lloyd_iteration 17.66; Lloyd_iteration 17.59; Lloyd_iteration 17.71; Lloyd_iteration 17.72; Lloyd_iter,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:34414,update,updateSampleMaterialProperties,34414,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,M optimization when assembling by bloc [#2240]( https://github.com/sofa-framework/sofa/pull/2240 ); - [SofaSimpleFem] Simplify bloc-based optimization [#2281]( https://github.com/sofa-framework/sofa/pull/2281 ); - [SofaSimulationCore] Clearer message when a linear solver is missing [#2221]( https://github.com/sofa-framework/sofa/pull/2221 ); - [SofaSparseSolver] Fix msg readibility in SparseLDL [#2294]( https://github.com/sofa-framework/sofa/pull/2294 ); - [SofaSparseSolver] Introduce FillReducingOrdering [#2501]( https://github.com/sofa-framework/sofa/pull/2501 ). **Plugins / Projects**; - [image] Restore ability to select a subset of instanciations [#2340]( https://github.com/sofa-framework/sofa/pull/2340 ). **Examples / Scenes**; - [examples] Add a new example how to create heterogeneous tet FEM [#2289]( https://github.com/sofa-framework/sofa/pull/2289 ); - [examples] Speedup the caduceus [#2471]( https://github.com/sofa-framework/sofa/pull/2471 ); - [Scenes] Update TriangleSurfaceCutting scene to use a bigger mesh with texture [#2381]( https://github.com/sofa-framework/sofa/pull/2381 ). **Scripts / Tools**. ### Bug Fixes. **Architecture**; - [CMake] Clean Sofa.Core CMakeLists + Add missing headers [#2444]( https://github.com/sofa-framework/sofa/pull/2444 ); - [CMake] FIX Threads dependency [#2511]( https://github.com/sofa-framework/sofa/pull/2511 ); - [CMake] FIX libs copy on Windows [#2261]( https://github.com/sofa-framework/sofa/pull/2261 ); - [CMake][modules] FIX out-of-tree builds [#2453]( https://github.com/sofa-framework/sofa/pull/2453 ); - [CMake] Fix return values of Qt5/Qt6 find_packages [#2346]( https://github.com/sofa-framework/sofa/pull/2346 ). **Modules**; - [All] Fix potential bugs/crashes (from warnings) [#2379]( https://github.com/sofa-framework/sofa/pull/2379 ); - [All] Update IDE directory for targets [#2239]( https://github.com/sofa-framework/sofa/pull/2239 ); - [SofaMiscForceField] Fix massDensity vector update when adding new elements in Mes,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:144185,Update,Update,144185,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"MessageHandler where msg_error generates test failures [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - add tests for TestMessageHandler [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - [SofaCUDA]; - FIX NVCC flags for debug build on Windows [#300]( https://github.com/sofa-framework/sofa/pull/300 ). ### Bug Fixes. **Modules**; - Warnings have been fixed [#229]( https://github.com/sofa-framework/sofa/pull/229 ); - [All]; - check that SofaPython is found before lauching the cmake sofa_set_python_directory command [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - use the cmake install DIRECTORY instead of FILES to preserve the files hierarchy when installing [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - fixing issue related to parsing attributes with atof/atoi [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - unify color datafield [#206]( https://github.com/sofa-framework/sofa/pull/206 ); - Fix CMakeLists bug on Sofa.ini and installedSofa.ini creation [#291]( https://github.com/sofa-framework/sofa/pull/291 ); - Fix a lot of failing tests (#271, #279); - Fix compilation with SOFA_FLOATING_POINT_TYPE as float [#262]( https://github.com/sofa-framework/sofa/pull/262 ); - CMake: Fix and clean boost, when using Sofa as an external lib [#421]( https://github.com/sofa-framework/sofa/pull/421 ); - [SofaKernel]; - Fix the Filemonitor_test random failure on MacOs [#143]( https://github.com/sofa-framework/sofa/pull/143 ); - implement a numerical integration for triangle [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - add brace initializer to helper::vector class [#252]( https://github.com/sofa-framework/sofa/pull/252 ); - Activates thread-safetiness on MessageDispatcher. [#257]( https://github.com/sofa-framework/sofa/pull/257 ); - Fix getRelativePath() in DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - FileRepository::getRelativePath() lowering the case on WIN32 is now a deprecated ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:331575,install,installedSofa,331575,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['installedSofa']
Deployability,"NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Topology REQUIRED). # LIBRARY; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(); # The default binary suffix for libraries/plugins is ""_d"" when using a debug build.; # since this is configuration specific it is a bit more convenient to put it as a debug compile definition for; # PluginManager.cpp, at the expense of being much less visible compare to having it in the generated; # SofaFramework/config.h; set_property(SOURCE ${SRC_ROOT}/system/PluginManager.cpp APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG ""SOFA_LIBSUFFIX=_d"" ). # DEPENDENCY LINKS AND INCLUDE DIRS; target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config ); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Type Sofa.Topology). # System libs; if(CMAKE_SYSTEM_NAME STREQUAL Linux); target_link_libraries(${PROJECT_NAME} PRIVATE dl); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); target_link_libraries(${PROJECT_NAME} PRIVATE dl); find_library(ICONV iconv); target_link_libraries(${PROJECT_NAME} PRIVATE ${ICONV}); # on macOS, -framework CoreServices is needed for FileMonitor; target_link_libraries(${PROJECT_NAME} PRIVATE ""-framework CoreServices""); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); # Windows library, used in system::FileSystem; target_link_libraries($",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:6980,configurat,configuration,6980,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['configurat'],['configuration']
Deployability,"NAME} PUBLIC Sofa.Component.SceneUtility); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFA_GUI_QT_TARGETS}). if(SOFA_DUMP_VISITOR_INFO); target_link_libraries(${PROJECT_NAME} PRIVATE tinyxml2::tinyxml2); endif(). if(Sofa.GL_FOUND); if(SOFA_GUI_QT_ENABLE_QGLVIEWER); target_link_libraries(${PROJECT_NAME} PUBLIC QGLViewer); endif(); endif(). if(SOFA_GUI_QT_ENABLE_NODEGRAPH); target_link_libraries(${PROJECT_NAME} PUBLIC NodeEditor::nodes); if (SOFA_BUILD_RELEASE_PACKAGE OR CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS NodeEditor::nodes); endif(); endif(). # FFMPEG; if(FFMPEG_EXEC_FOUND); install(PROGRAMS ""${FFMPEG_EXEC_FILE}"" DESTINATION bin COMPONENT applications); endif(). # Create build and install versions of .ini file for resources finding; set(RESOURCES_DIR ""${CMAKE_CURRENT_SOURCE_DIR}/${SRC_ROOT}/resources""); set(FFMPEG_EXEC_PATH ""${FFMPEG_EXEC_FILE}"") # absolute path for build dir, see .ini file; configure_file(${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in ""${CMAKE_BINARY_DIR}/etc/${PROJECT_NAME}.ini""); set(RESOURCES_DIR ""../share/sofa/gui/qt""); get_filename_component(FFMPEG_EXEC_FILENAME ""${FFMPEG_EXEC_FILE}"" NAME); set(FFMPEG_EXEC_PATH ""../bin/${FFMPEG_EXEC_FILENAME}"") # relative path for install dir, see .ini file; configure_file(${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini"" DESTINATION etc RENAME ${PROJECT_NAME}.ini COMPONENT applications). install(DIRECTORY ""${SRC_ROOT}/resources/"" DESTINATION ""share/sofa/gui/qt"" COMPONENT resources). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; ). # Qt deployment; if(CMAKE_SYSTEM_NAME STREQUAL Windows); include(windeployqt); windeployqt(${PROJECT_NAME} ${CMAKE_BINARY_DIR}/bin bin); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt:11445,install,install,11445,Sofa/GUI/Qt/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt,6,"['deploy', 'install']","['deployment', 'install', 'installed']"
Deployability,"PI_SRC_DIR ""src/SofaPhysicsAPI""); set(HEADER_FILES; ${SOFAPHYSICSAPI_SRC_DIR}/config.h.in; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsAPI.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsOutputMesh_impl.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsSimulation.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsBindings.h; ${SOFAPHYSICSAPI_SRC_DIR}/fakegui.h; ). set(SOURCE_FILES; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsOutputMesh.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsSimulation.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsBindings.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/fakegui.cpp; ). find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED); sofa_find_package(Sofa.Component REQUIRED); sofa_find_package(Sofa.GUI.Common REQUIRED); sofa_find_package(SofaValidation QUIET). if(SofaValidation_FOUND); message(""SofaPhysicsAPI: SofaValidation has been found; enabling DataController and DataMonitor support.""); list(APPEND HEADER_FILES ; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataController_impl.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataMonitor_impl.h; ); list(APPEND HEADER_FILES ; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataController.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataMonitor.cpp; ); else(); message(""SofaPhysicsAPI: SofaValidation has not been found; DataController and DataMonitor will not be supported.""); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Graph Sofa.GUI.Common Sofa.SimpleApi); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component). if(SofaValidation_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC SofaValidation); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${Sofa_VERSION}). ## Install rules and CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaPhysicsAPI/CMakeLists.txt:1823,Install,Install,1823,applications/projects/SofaPhysicsAPI/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaPhysicsAPI/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,"PRECOMPILE_HEADERS ON); endif(). ## Change default install component and prefix; set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME applications); if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT); set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/install CACHE PATH ""Install path prefix, prepended onto install directories."" FORCE); endif(); if(APPLE AND SOFA_BUILD_APP_BUNDLE); set(SOFA_BUILD_RELEASE_PACKAGE ON); set(CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/runSofa.app/Contents/MacOS); message(""SOFA_BUILD_APP_BUNDLE = ${SOFA_BUILD_APP_BUNDLE}\n""; "" Forcing SOFA_BUILD_RELEASE_PACKAGE = ${SOFA_BUILD_RELEASE_PACKAGE}\n""; "" Forcing CMAKE_INSTALL_PREFIX = ${CMAKE_INSTALL_PREFIX}""; ); endif(); message(STATUS ""Install prefix: ${CMAKE_INSTALL_PREFIX}""). # Remove generated CMake files, this prevents CMake from finding packages that; # were disabled (like, unchecked in cmake-gui) after being built once.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/cmake); file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/lib/cmake); # Remove generated SofaPython configuration files, to prevent SofaPython from; # adding paths to disabled plugins.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/etc/sofa/python.d). ## Custom Environment; list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/Sofa/framework/Config/cmake""); list(APPEND CMAKE_IGNORE_PATH ""${CMAKE_INSTALL_PREFIX}"") # ignore install directory for findXXX commands; include(SofaMacros). install(FILES; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/FindEigen3.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/macdeployqt.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/windeployqt.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/FindTinyXML2.cmake""; DESTINATION lib/cmake/Modules; COMPONENT headers; ). ## RPATH; if(UNIX); # RPATH is a field in ELF binaries that is used as a hint by the system; # loader to find needed shared li",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:3512,configurat,configuration,3512,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['configurat'],['configuration']
Deployability,"QUIRED). # add FindCImg.cmake; list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake); configure_file(${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindCImg.cmake ${CMAKE_BINARY_DIR}/lib/cmake/FindCImg.cmake COPYONLY); install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindCImg.cmake DESTINATION lib/cmake/${PROJECT_NAME} COMPONENT headers). sofa_find_package(CImg QUIET). if(NOT CImg_FOUND AND SOFA_ALLOW_FETCH_DEPENDENCIES); message(""CImgPlugin: DEPENDENCY CImg NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is ON, fetching CImg...""). include(FetchContent); FetchContent_Declare(CImg; GIT_REPOSITORY https://github.com/GreycLab/CImg; GIT_TAG v.3.3.2; ). FetchContent_GetProperties(CImg); if(NOT CImg_POPULATED); FetchContent_Populate(CImg). set(CIMG_H_DIR ${cimg_SOURCE_DIR}); sofa_find_package(CImg REQUIRED); endif(); elseif (NOT CImg_FOUND); message(FATAL_ERROR ""CImgPlugin: DEPENDENCY CImg NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install cimg-dev, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # OS X only: if the user installed its own JPEG/PNG lib (typically with homebrew/port),; # it will allow to use those instead of those present in XCode's frameworks; set(CMAKE_FIND_FRAMEWORK LAST). sofa_find_package(TIFF QUIET); sofa_find_package(ZSTD QUIET); sofa_find_package(JPEG QUIET); sofa_find_package(PNG QUIET); sofa_find_package(ZLIB QUIET). # Configure Paths according to detected packages; set(DEP_TARGETS """"); set(CIMG_CFLAGS -Dcimg_no_system_calls) # Remove CImg sys calls; if(TIFF_FOUND AND ( NOT(SOFA_BUILD_RELEASE_PACKAGE) OR ZSTD_FOUND)); message(STATUS ""CImgPlugin: TIFF Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_tiff); list(APPEND DEP_TARGETS TIFF::TIFF); if(ZSTD_FOUND); set(DEP_ZSTD ZSTD::ZSTD); endif(); else(); message(STATUS ""CImgPlugin: TIFF Image Format disabled""); endif(); if(JPEG_FOUND); message(STATUS ""CImgPlugin: JPEG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_jpeg); if(WIN32); # pr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt:1306,Install,Install,1306,applications/plugins/CImgPlugin/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt,1,['Install'],['Install']
Deployability,"RASRC_ROOT}/matrix_bloc_traits.h; ). set(SOURCE_FILES; ${SOFALINEARALGEBRASRC_ROOT}/BaseMatrix.cpp; ${SOFALINEARALGEBRASRC_ROOT}/BaseVector.cpp; ${SOFALINEARALGEBRASRC_ROOT}/BlockDiagonalMatrix.cpp; ${SOFALINEARALGEBRASRC_ROOT}/BlockFullMatrix.cpp; ${SOFALINEARALGEBRASRC_ROOT}/BlockVector.cpp; ${SOFALINEARALGEBRASRC_ROOT}/BTDMatrix.cpp; ${SOFALINEARALGEBRASRC_ROOT}/CompressedRowSparseMatrixConstraint.cpp; ${SOFALINEARALGEBRASRC_ROOT}/CompressedRowSparseMatrixGeneric.cpp; ${SOFALINEARALGEBRASRC_ROOT}/CompressedRowSparseMatrixMechanical.cpp; ${SOFALINEARALGEBRASRC_ROOT}/EigenVector.cpp; ${SOFALINEARALGEBRASRC_ROOT}/FullMatrix.cpp; ${SOFALINEARALGEBRASRC_ROOT}/FullVector.cpp; ${SOFALINEARALGEBRASRC_ROOT}/RotationMatrix.cpp; ${SOFALINEARALGEBRASRC_ROOT}/SparseMatrixStorageOrder[EigenSparseMatrix].cpp; ${SOFALINEARALGEBRASRC_ROOT}/init.cpp; ). sofa_find_package(Eigen3 3.3.5 REQUIRED). if (SOFA_OPENMP AND ""${EIGEN3_VERSION}"" VERSION_LESS 3.2.10); sofa_find_package(OpenMP BOTH_SCOPES) # will set/update SOFA_LINEARALGEBRA_HAVE_OPENMP; endif(). if (SOFA_LINEARALGEBRA_HAVE_OPENMP); list(APPEND HEADER_FILES ${SOFALINEARALGEBRASRC_ROOT}/EigenBaseSparseMatrix_MT.h); endif(). sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Helper REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Type Sofa.Helper Eigen3::Eigen). if (SOFA_LINEARALGEBRA_HAVE_OPENMP); target_link_libraries(${PROJECT_NAME} PUBLIC OpenMP::OpenMP_CXX); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_LINEARALGEBRA_BUILD_TESTS ""Compile the automatic tests",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/LinearAlgebra/CMakeLists.txt:2948,update,update,2948,Sofa/framework/LinearAlgebra/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/LinearAlgebra/CMakeLists.txt,1,['update'],['update']
Deployability,RC_ROOT}/behavior/fwd.cpp; ${SRC_ROOT}/collision/BroadPhaseDetection.cpp; ${SRC_ROOT}/collision/Contact.cpp; ${SRC_ROOT}/collision/Intersection.cpp; ${SRC_ROOT}/collision/NarrowPhaseDetection.cpp; ${SRC_ROOT}/collision/Pipeline.cpp; ${SRC_ROOT}/loader/BaseLoader.cpp; ${SRC_ROOT}/loader/MeshLoader.cpp; ${SRC_ROOT}/loader/SceneLoader.cpp; ${SRC_ROOT}/loader/VoxelLoader.cpp; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.cpp; ${SRC_ROOT}/objectmodel/AbstractDataLink.cpp; ${SRC_ROOT}/objectmodel/AspectPool.cpp; ${SRC_ROOT}/objectmodel/Base.cpp; ${SRC_ROOT}/objectmodel/BaseClass.cpp; ${SRC_ROOT}/objectmodel/BaseContext.cpp; ${SRC_ROOT}/objectmodel/BaseData.cpp; ${SRC_ROOT}/objectmodel/BaseLink.cpp; ${SRC_ROOT}/objectmodel/BaseNode.cpp; ${SRC_ROOT}/objectmodel/BaseObject.cpp; ${SRC_ROOT}/objectmodel/BaseObjectDescription.cpp; ${SRC_ROOT}/objectmodel/ClassInfo.cpp; ${SRC_ROOT}/objectmodel/ComponentState.cpp; ${SRC_ROOT}/objectmodel/ConfigurationSetting.cpp; ${SRC_ROOT}/objectmodel/Context.cpp; ${SRC_ROOT}/objectmodel/ContextObject.cpp; ${SRC_ROOT}/objectmodel/DDGNode.cpp; ${SRC_ROOT}/objectmodel/Data.cpp; ${SRC_ROOT}/objectmodel/DataCallback.cpp; ${SRC_ROOT}/objectmodel/DataContentValue.cpp; ${SRC_ROOT}/objectmodel/DataFileName.cpp; ${SRC_ROOT}/objectmodel/DataFileNameVector.cpp; ${SRC_ROOT}/objectmodel/DataLink.cpp; ${SRC_ROOT}/objectmodel/DetachNodeEvent.cpp; ${SRC_ROOT}/objectmodel/DeprecatedData.cpp; ${SRC_ROOT}/objectmodel/Event.cpp; ${SRC_ROOT}/objectmodel/GUIEvent.cpp; ${SRC_ROOT}/objectmodel/HapticDeviceEvent.cpp; ${SRC_ROOT}/objectmodel/IdleEvent.cpp; ${SRC_ROOT}/objectmodel/JoystickEvent.cpp; ${SRC_ROOT}/objectmodel/KeypressedEvent.cpp; ${SRC_ROOT}/objectmodel/KeyreleasedEvent.cpp; ${SRC_ROOT}/objectmodel/MouseEvent.cpp; ${SRC_ROOT}/objectmodel/ScriptEvent.cpp; ${SRC_ROOT}/objectmodel/Tag.cpp; ${SRC_ROOT}/objectmodel/TagSet.cpp; ${SRC_ROOT}/topology/BaseMeshTopology.cpp; ${SRC_ROOT}/topology/BaseTop,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:10763,Configurat,ConfigurationSetting,10763,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['Configurat'],['ConfigurationSetting']
Deployability,"RECURSE ${CMAKE_BINARY_DIR}/etc/sofa/python.d). ## Custom Environment; list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/Sofa/framework/Config/cmake""); list(APPEND CMAKE_IGNORE_PATH ""${CMAKE_INSTALL_PREFIX}"") # ignore install directory for findXXX commands; include(SofaMacros). install(FILES; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/FindEigen3.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/macdeployqt.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/windeployqt.cmake""; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/FindTinyXML2.cmake""; DESTINATION lib/cmake/Modules; COMPONENT headers; ). ## RPATH; if(UNIX); # RPATH is a field in ELF binaries that is used as a hint by the system; # loader to find needed shared libraries.; #; # In the build directory, cmake creates binaries with absolute paths in; # RPATH. And by default, it strips RPATH from installed binaries. Here we; # use CMAKE_INSTALL_RPATH to set a relative RPATH. By doing so, we avoid; # the need to play with LD_LIBRARY_PATH to get applications to run. # see https://cmake.org/Wiki/CMake_RPATH_handling for $ORIGIN doc; set(CMAKE_INSTALL_RPATH; ""$ORIGIN/../lib""; ""$$ORIGIN/../lib""; ). if(APPLE); set(CMAKE_MACOSX_RPATH ON); list(APPEND CMAKE_INSTALL_RPATH; ""@loader_path/../lib""; ""@executable_path/../lib""; ""@loader_path/../../Frameworks""; ""@executable_path/../../Frameworks""; ); set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE); endif(); endif(UNIX). ### Windows config; if(MSVC); # WinDepPack; set(SOFA_DEPENDENCY_PACK_DIR ""${CMAKE_SOURCE_DIR}"" CACHE PATH ""Directory containing Windows Dependency Pack""); if(NOT EXISTS ${SOFA_DEPENDENCY_PACK_DIR}); # force back to default value; set(SOFA_DEPENDENCY_PACK_DIR ""${CMAKE_SOURCE_DIR}"" CACHE PATH ""Directory containing Windows Dependency Pack"" FORCE); endif(); list(APPEND CMAKE_INCLUDE_PATH ${SOFA_DEPENDENCY_PACK_DIR}/include); i",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:4620,install,installed,4620,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['install'],['installed']
Deployability,SRC_ROOT}/behavior/ConstraintSolver.cpp; ${SRC_ROOT}/behavior/DefaultMultiMatrixAccessor.cpp; ${SRC_ROOT}/behavior/ForceField.cpp; ${SRC_ROOT}/behavior/LinearSolver.cpp; ${SRC_ROOT}/behavior/LinearSolverAccessor.cpp; ${SRC_ROOT}/behavior/Mass.cpp; ${SRC_ROOT}/behavior/MechanicalMatrix.cpp; ${SRC_ROOT}/behavior/MechanicalState.cpp; ${SRC_ROOT}/behavior/MixedInteractionConstraint.cpp; ${SRC_ROOT}/behavior/MixedInteractionForceField.cpp; ${SRC_ROOT}/behavior/MultiMatrixAccessor.cpp; ${SRC_ROOT}/behavior/OdeSolver.cpp; ${SRC_ROOT}/behavior/PairInteractionConstraint.cpp; ${SRC_ROOT}/behavior/PairInteractionForceField.cpp; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.cpp; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.cpp; ${SRC_ROOT}/behavior/SingleMatrixAccessor.cpp; ${SRC_ROOT}/behavior/fwd.cpp; ${SRC_ROOT}/collision/BroadPhaseDetection.cpp; ${SRC_ROOT}/collision/Contact.cpp; ${SRC_ROOT}/collision/Intersection.cpp; ${SRC_ROOT}/collision/NarrowPhaseDetection.cpp; ${SRC_ROOT}/collision/Pipeline.cpp; ${SRC_ROOT}/loader/BaseLoader.cpp; ${SRC_ROOT}/loader/MeshLoader.cpp; ${SRC_ROOT}/loader/SceneLoader.cpp; ${SRC_ROOT}/loader/VoxelLoader.cpp; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.cpp; ${SRC_ROOT}/objectmodel/AbstractDataLink.cpp; ${SRC_ROOT}/objectmodel/AspectPool.cpp; ${SRC_ROOT}/objectmodel/Base.cpp; ${SRC_ROOT}/objectmodel/BaseClass.cpp; ${SRC_ROOT}/objectmodel/BaseContext.cpp; ${SRC_ROOT}/objectmodel/BaseData.cpp; ${SRC_ROOT}/objectmodel/BaseLink.cpp; ${SRC_ROOT}/objectmodel/BaseNode.cpp; ${SRC_ROOT}/objectmodel/BaseObject.cpp; ${SRC_ROOT}/objectmodel/BaseObjectDescription.cpp; ${SRC_ROOT}/objectmodel/ClassInfo.cpp; ${SRC_ROOT}/objectmodel/ComponentState.cpp; ${SRC_ROOT}/objectmodel/ConfigurationSetting.cpp; ${SRC_ROOT}/objectmodel/Context.cpp; ${SRC_ROOT}/objectmodel/ContextObject.cpp; ${SRC_ROOT}/objectmodel/DDGNode.cpp; ${SRC_ROOT}/objectmodel/Data.cpp; ${SRC_ROOT}/objectmodel/DataC,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:9978,Pipeline,Pipeline,9978,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['Pipeline'],['Pipeline']
Deployability,SampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg.ppm 10 10; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; computeUniformSampling: 3.6; computeWeights: 4.93; computeLinearRegionsSampling: 0.13; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg.ppm 10 20; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; computeUniformSampling: 3.59; computeWeights: 4.93; computeLinearRegionsSampling: 0.12; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg.ppm 10 50; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; computeUniformSampling: 3.6; computeWeights: 4.94; computeLinearRegionsSampling: 0.13; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 20 6; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.26; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.6; computeWeights: 8.1; computeLinearRegionsSampling: 0.3; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 10; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.26; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.55; computeWeights: 8.01; computeLinearRegionsSampling: 0.28; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 20; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloy,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:3382,update,updateSampleMaterialProperties,3382,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,"TIES; MAP_IMPORTED_CONFIG_MINSIZEREL Release; MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release; ); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:RELEASE>:${SOFACONFIG_COMPILE_OPTIONS_RELEASE}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:DEBUG>:${SOFACONFIG_COMPILE_OPTIONS_DEBUG}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""${SOFACONFIG_COMPILE_OPTIONS}""). # target_link_option only available with cmake >= 3.13; if(${CMAKE_VERSION} VERSION_LESS ""3.13.0""); if(NOT SOFACONFIG_LINK_OPTIONS_RELEASE STREQUAL """"); string(REPLACE "";"" "" "" SOFACONFIG_LINK_OPTIONS_RELEASE ""${SOFACONFIG_LINK_OPTIONS_RELEASE}""); set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS_RELEASE ""${SOFACONFIG_LINK_OPTIONS_RELEASE}""); endif(); if(NOT SOFACONFIG_LINK_OPTIONS_DEBUG STREQUAL """"); string(REPLACE "";"" "" "" SOFACONFIG_LINK_OPTIONS_DEBUG ""${SOFACONFIG_LINK_OPTIONS_DEBUG}""); set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS_DEBUG ""${SOFACONFIG_LINK_OPTIONS_DEBUG}""); endif(); if(NOT SOFACONFIG_LINK_OPTIONS STREQUAL """"); string(REPLACE "";"" "" "" SOFACONFIG_LINK_OPTIONS ""${SOFACONFIG_LINK_OPTIONS}""); set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS ""${SOFACONFIG_LINK_OPTIONS}""); endif(); else(); target_link_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:RELEASE>:${SOFACONFIG_LINK_OPTIONS_RELEASE}>""); target_link_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:DEBUG>:${SOFACONFIG_LINK_OPTIONS_DEBUG}>""); target_link_options(${PROJECT_NAME} PUBLIC ""${SOFACONFIG_LINK_OPTIONS}""); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. # Attach Sofa Version into properties; set_target_properties(${PROJECT_NAME} PROPERTIES Sofa_VERSION ""${Sofa_VERSION}""); set_target_properties(${PROJECT_NAME} PROPERTIES SOFA_VERSION_STR ""${SOFA_VERSION_STR}""); set_target_properties(${PROJECT_NAME} PROPERTIES SOFA_VERSION ""${SOFA_VERSION}""). set_target_properties(${PROJECT_NAME} PROPERTIES SOFA_URL ""${SOFA_URL}""). # CMakeParseLibraryList.cmak",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:14287,RELEASE,RELEASE,14287,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['RELEASE'],['RELEASE']
Deployability,"TIONS}""); target_link_libraries(${PROJECT_NAME}; Sofa.Component.Mass; Sofa.Component.SolidMechanics.FEM.Elastic; Sofa.Component.SolidMechanics.FEM.HyperElastic; Sofa.Component.SolidMechanics.TensorMass; Sofa.Component.MechanicalLoad; Sofa.Component.Collision.Response.Contact; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.StateContainer; Sofa.Component.Constraint.Projective; Sofa.Component.Mapping.Linear; Sofa.Component.Mapping.NonLinear; Sofa.Component.Engine.Select; Sofa.Component.Engine.Transform; Sofa.Component.MechanicalLoad; ). target_compile_features(${PROJECT_NAME} PRIVATE cxx_std_17). if(Sofa.GL_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GL); endif(). if(SofaDistanceGrid_FOUND); target_link_libraries(${PROJECT_NAME} SofaDistanceGrid); if(MiniFlowVR_FOUND); target_link_libraries(${PROJECT_NAME} miniFlowVR); endif(); endif(). if(Sofa.GUI_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GUI); endif(). if(Sofa.GUI.Qt_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GUI.Qt); endif(). if(SofaValidation_FOUND); target_link_libraries(${PROJECT_NAME} SofaValidation); endif(). if(SofaSphFluid_FOUND); target_link_libraries(${PROJECT_NAME} SofaSphFluid); endif(). if(SOFACUDA_CUBLAS); cuda_add_cublas_to_target(${PROJECT_NAME}); target_link_libraries(${PROJECT_NAME} ${CUDA_SPARSE_LIBRARY}); endif(); if(SOFACUDA_CUDPP); target_link_libraries(${PROJECT_NAME} cudpp); endif(). ## SofaCUDANvccFlags.cmake; # Build tree; configure_file(SofaCUDANvccFlags.cmake ${CMAKE_BINARY_DIR}/lib/cmake/SofaCUDANvccFlags.cmake COPYONLY); # Install tree; install(FILES SofaCUDANvccFlags.cmake DESTINATION lib/cmake/SofaCUDA). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${SOFACUDA_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:21443,Install,Install,21443,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,4,"['Install', 'configurat', 'install']","['Install', 'configurations', 'install']"
Deployability,TIVE_SOURCE_DIR}/LinearMovementConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearMovementConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearVelocityConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearVelocityConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/OscillatorConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/OscillatorConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ParabolicConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ParabolicConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialFixedConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialFixedConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialLinearMovementConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialLinearMovementConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PatchTestMovementConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PatchTestMovementConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PositionBasedDynamicsConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PositionBasedDynamicsConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/SkeletalMotionConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/SkeletalMotionConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ProjectToLineConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ProjectToLineConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ProjectToPlaneConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ProjectToPlaneConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ProjectToPointConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ProjectToPointConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ProjectDirectionConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ProjectDirectionConstraint.inl. ${SOFACOMPONENTC,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Projective/CMakeLists.txt:2351,Patch,PatchTestMovementConstraint,2351,Sofa/Component/Constraint/Projective/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Projective/CMakeLists.txt,1,['Patch'],['PatchTestMovementConstraint']
Deployability,"Tasks.h; src/MultiThreading/BeamLinearMapping_mt.h; src/MultiThreading/BeamLinearMapping_mt.inl; src/MultiThreading/BeamLinearMapping_tasks.inl; src/MultiThreading/ParallelBVHNarrowPhase.h; src/MultiThreading/ParallelBruteForceBroadPhase.h; src/MultiThreading/ParallelHexahedronFEMForceField.h; src/MultiThreading/ParallelHexahedronFEMForceField.inl; ); endif(). find_package(Sofa.Simulation.Common REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.Elastic REQUIRED); sofa_find_package(Sofa.Component.Mapping.Linear REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.LinearSolver.Iterative REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Simulation.Common); target_link_libraries(${PROJECT_NAME} Sofa.Component.Collision.Detection.Algorithm); target_link_libraries(${PROJECT_NAME} Sofa.Component.SolidMechanics.FEM.Elastic); target_link_libraries(${PROJECT_NAME} Sofa.Component.Mapping.Linear); target_link_libraries(${PROJECT_NAME} Sofa.Component.StateContainer); target_link_libraries(${PROJECT_NAME} Sofa.Component.SolidMechanics.Spring); target_link_libraries(${PROJECT_NAME} Sofa.Component.LinearSolver.Iterative). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; RELOCATABLE ""plugins""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(MULTITHREADING_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(MULTITHREADING_BUILD_TESTS); enable_testing(); add_subdirectory(test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt:4581,Install,Install,4581,applications/plugins/MultiThreading/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/MultiThreading/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,"This is libQGLViewer version 2.8.0. Packaged on March 13, 2022. The complete change log is available in doc/changeLog.html. The latest releases and changeLog are available at:; http://www.libqglviewer.com/changeLog.html; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/changeLog.txt:135,release,releases,135,Sofa/GUI/Qt/libQGLViewer/changeLog.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/changeLog.txt,1,['release'],['releases']
Deployability,To install this plugin you need:. - to install the driver LeapMotion: https://www.leapmotion.com/setup (SDK); - activate the plugin in cmake-gui; - enjoy the power of the LeapMotion with SOFA and give a try to the example scene (examples/buffon.scn). And let us know about your Leap simulations!,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/LeapMotion/README.txt:3,install,install,3,applications/plugins/LeapMotion/README.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/LeapMotion/README.txt,2,['install'],['install']
Deployability,To install this plugin you need:. - to register on the Geomagic website; - to download and install the Geomagic driver (following the documentation and the instructions of INSTALL); - activate the plugin in cmake-gui; - compile it; - enjoy the power of the Geomagic haptic interfaces with SOFA and give a try to the example scene (examples/DemoGeomagic.scn). And let us know about your Geomagic simulations!,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Geomagic/README.txt:3,install,install,3,applications/plugins/Geomagic/README.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Geomagic/README.txt,3,"['INSTALL', 'install']","['INSTALL', 'install']"
Deployability,"ToMeshEngine.h; ImageViewer.h; ). set(SOURCE_FILES; initImage.cpp; ). if(NOT PLUGIN_IMAGE_COMPILE_SET STREQUAL ""none""); list(APPEND SOURCE_FILES; CollisionToCarvingEngine.cpp; ImageAccumulator.cpp; ImageContainer.cpp; GenerateImage.cpp; ImageDataDisplay.cpp; ImageExporter.cpp; ImageFilter.cpp; ImageOperation.cpp; ImageSampler.cpp; ImageToRigidMassEngine.cpp; ImageTransform.cpp; ImageTransformEngine.cpp; ImageTypes.cpp; ImageValuesFromPositions.cpp; ImageCoordValuesFromPositions.cpp; MarchingCubesEngine.cpp; MergeImages.cpp; MeshToImageEngine.cpp; TransferFunction.cpp; VoronoiToMeshEngine.cpp; DepthMapToMeshEngine.cpp; ImageViewer.cpp; ); endif(). set(README_FILES; image.txt; ). if(SofaPython_FOUND); set(PYTHON_FILES; python/SofaImage/API.py; python/SofaImage/__init__.py; ); list(APPEND SOURCE_FILES python/Binding_ImageData.cpp); list(APPEND HEADER_FILES python/Binding_ImageData.h python/Binding_ImageData.inl). # Config files and install rules for pythons scripts; sofa_install_pythonscripts(PLUGIN_NAME ${PROJECT_NAME} PYTHONSCRIPTS_SOURCE_DIR ""python""); endif(). if(Sofa.GL_FOUND); if(FREENECT_FOUND); list(APPEND HEADER_FILES Kinect.h); list(APPEND SOURCE_FILES Kinect.cpp); message(STATUS ""image: found the freenect library""); else(); message(STATUS ""image: could not find the freenect library, won't build the Kinect component""); endif(); endif(). # OpenMP is bugged in image, forcing it to be single threaded for now; if(SOFA_OPENMP); message( WARNING ""image: deactivating OpenMP"" ); string(REPLACE ""${OpenMP_CXX_FLAGS}"" """" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS}); string(REPLACE ""${OpenMP_CXX_FLAGS}"" """" CMAKE_CXX_LINK_FLAGS ${CMAKE_CXX_LINK_FLAGS}); endif(). set(PLUGIN_IMAGE_COMPILE_SET_VALUE 0) # none; if(PLUGIN_IMAGE_COMPILE_SET STREQUAL ""standard""); set(PLUGIN_IMAGE_COMPILE_SET_VALUE 1); elseif(PLUGIN_IMAGE_COMPILE_SET STREQUAL ""full""); set(PLUGIN_IMAGE_COMPILE_SET_VALUE 2); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES} ${PYTHON",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/CMakeLists.txt:2128,install,install,2128,applications/plugins/image/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/CMakeLists.txt,1,['install'],['install']
Deployability,T}/DeleteVisitor.h; ${SRC_ROOT}/ExportDotVisitor.h; ${SRC_ROOT}/ExportGnuplotVisitor.h; ${SRC_ROOT}/ExportVisualModelOBJVisitor.h; ${SRC_ROOT}/InitVisitor.h; ${SRC_ROOT}/IntegrateBeginEvent.h; ${SRC_ROOT}/IntegrateEndEvent.h; ${SRC_ROOT}/LocalStorage.h; ${SRC_ROOT}/MechanicalOperations.h; ${SRC_ROOT}/MechanicalVPrintVisitor.h; ${SRC_ROOT}/MechanicalVisitor.h; ${SRC_ROOT}/MutationListener.h; ${SRC_ROOT}/Node.h; ${SRC_ROOT}/Node.inl; ${SRC_ROOT}/ParallelForEach.h; ${SRC_ROOT}/ParallelSparseMatrixProduct.h; ${SRC_ROOT}/ParallelVisitorScheduler.h; ${SRC_ROOT}/PauseEvent.h; ${SRC_ROOT}/PipelineImpl.h; ${SRC_ROOT}/PositionEvent.h; ${SRC_ROOT}/PrintVisitor.h; ${SRC_ROOT}/PropagateEventVisitor.h; ${SRC_ROOT}/RequiredPlugin.h; ${SRC_ROOT}/ResetVisitor.h; ${SRC_ROOT}/SceneLoaderFactory.h; ${SRC_ROOT}/Simulation.h; ${SRC_ROOT}/SimulationLoop.h; ${SRC_ROOT}/SolveVisitor.h; ${SRC_ROOT}/StateChangeVisitor.h; ${SRC_ROOT}/TopologyChangeVisitor.h; ${SRC_ROOT}/UpdateBoundingBoxVisitor.h; ${SRC_ROOT}/UpdateContextVisitor.h; ${SRC_ROOT}/UpdateInternalDataVisitor.h; ${SRC_ROOT}/UpdateLinksVisitor.h; ${SRC_ROOT}/UpdateMappingEndEvent.h; ${SRC_ROOT}/UpdateMappingVisitor.h; ${SRC_ROOT}/VectorOperations.h; ${SRC_ROOT}/VelocityThresholdVisitor.h; ${SRC_ROOT}/Visitor.h; ${SRC_ROOT}/VisitorExecuteFunc.h; ${SRC_ROOT}/VisitorScheduler.h; ${SRC_ROOT}/VisualVisitor.h; ${SRC_ROOT}/WriteStateVisitor.h; ${SRC_ROOT}/XMLPrintVisitor.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/BaseSimulationExporter.h; ${SRC_ROOT}/TaskScheduler.h; ${SRC_ROOT}/TaskSchedulerFactory.h; ${SRC_ROOT}/TaskSchedulerRegistry.h; ${SRC_ROOT}/DefaultTaskScheduler.h; ${SRC_ROOT}/Task.h; ${SRC_ROOT}/InitTasks.h; ${SRC_ROOT}/Locks.h; ${SRC_ROOT}/MainTaskSchedulerFactory.h; ${SRC_ROOT}/MainTaskSchedulerRegistry.h; ${SRC_ROOT}/SceneCheck.h; ${SRC_ROOT}/SceneCheckRegistry.h; ${SRC_ROOT}/SceneCheckMainRegistry.h; ${SRC_ROOT}/WorkerThread.h; ${SRC_ROOT}/events/BuildConstraintSystemEndEvent.h; ${SRC_ROOT}/events/SimulationInitDoneEvent.h; ${SRC_ROOT,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:1740,Update,UpdateContextVisitor,1740,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Update'],['UpdateContextVisitor']
Deployability,[#3782](https://github.com/sofa-framework/sofa/pull/3782) . **Plugins / Projects**; - [MultiThreading] Factorize task scheduler user [#3607](https://github.com/sofa-framework/sofa/pull/3607) . ### Improvements. **Architecture**; - [Helper] Use DataTypeInfo in NameDecoder [#3465](https://github.com/sofa-framework/sofa/pull/3465) ; - [DefaultType] RigidCoord/Deriv become iterable [#3536](https://github.com/sofa-framework/sofa/pull/3536) ; - [Core] Give threads a name on Windows [#3551](https://github.com/sofa-framework/sofa/pull/3551) ; - [Core] Display flags spelling suggestion [#3575](https://github.com/sofa-framework/sofa/pull/3575) ; - [Type] Construct matrices based on initializer-lists [#3584](https://github.com/sofa-framework/sofa/pull/3584) ; - [defaulttype] Template aliases for CRS matrices [#3592](https://github.com/sofa-framework/sofa/pull/3592) ; - [Simulation] SceneCheck can be added in plugins [#3597](https://github.com/sofa-framework/sofa/pull/3597) ; - [Contributing] Update file to mention good first issue [#3625](https://github.com/sofa-framework/sofa/pull/3625) ; - [Simulation] Error when trying to load a non-existing file [#3677](https://github.com/sofa-framework/sofa/pull/3677) ; - [all] Give reason when component cannot be created [#3682](https://github.com/sofa-framework/sofa/pull/3682) ; - [Type] Support structured binding for type::fixed_array [#3753](https://github.com/sofa-framework/sofa/pull/3753) ; - Update CONTRIBUTING.md [#3774](https://github.com/sofa-framework/sofa/pull/3774) . **Modules**; - [Collision.Response.Contact] Implement addKToMatrix for PenalityContactForceField [#3626](https://github.com/sofa-framework/sofa/pull/3626) ; - [Mapping.NonLinear] Implement missing applyJT [#3776](https://github.com/sofa-framework/sofa/pull/3776) ; - [Constraint] Add data to access constraint forces in LCPCS [#3796](https://github.com/sofa-framework/sofa/pull/3796) ; - [Rendering3D] OglModel: Use glMapBufferRange to update buffers [#3822](https://g,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:52937,Update,Update,52937,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,[#405]( https://github.com/sofa-framework/sofa/pull/405 ); - Fix a crashing bug in SceneCheckAPIChange. [#479]( https://github.com/sofa-framework/sofa/pull/479 ); - FIX SceneChecker & RequiredPlugin [#563]( https://github.com/sofa-framework/sofa/pull/563 ); - [SofaGeneralObjectInteraction]; - Remove stiffness multiplicator in SpringForceField [#290]( https://github.com/sofa-framework/sofa/pull/290 ); - [SofaMiscFem]; - Fix FastTetrahedralCorotationalFF topology change [#554]( https://github.com/sofa-framework/sofa/pull/554 ); - [SofaOpenglVisual]; - Fix a bug crashing sofa when the textures cannot be loaded. [#474]( https://github.com/sofa-framework/sofa/pull/474 ). **Extlibs**; - [CImg]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Eigen]; - Warning fix with eigen when compiling with msvc [#447]( https://github.com/sofa-framework/sofa/pull/447 ); - [libQGLViewer]; - FIX missing headers [#461]( https://github.com/sofa-framework/sofa/pull/461 ); - Update libQGLViewer to 2.7.1 [#545]( https://github.com/sofa-framework/sofa/pull/545 ). **Plugins / Projects**; - [CGALPlugin]; - Fix build problem [#351]( https://github.com/sofa-framework/sofa/pull/351 ); - FIX build error with CGAL > 4.9.1 [#515]( https://github.com/sofa-framework/sofa/pull/515 ); - [CImgPlugin]; - Use sofa cmake command to create proper package [#544]( https://github.com/sofa-framework/sofa/pull/544 ); - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - prevent INT32 redefinition by libjpeg on Windows [#566]( https://github.com/sofa-framework/sofa/pull/566 ); - [ColladaSceneLoader]; - FIX Assimp copy on Windows [#504]( https://github.com/sofa-framework/sofa/pull/504 ); - [Flexible]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [image]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Meshconv]; - fix build if no miniflowVR [#358]( https,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:316850,Update,Update,316850,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"[#522]( https://github.com/sofa-framework/sofa/pull/522 ); - Fix: Intel graphics on linux now overrides the core profile context [#526]( https://github.com/sofa-framework/sofa/pull/526 ); - [SofaImplicitField]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SofaPhysicsAPI]; - FIX: compilation due to Sofa main API changes [#549]( https://github.com/sofa-framework/sofa/pull/549 ); - [SofaPython]; - Fix python live coding that is broken [#414]( https://github.com/sofa-framework/sofa/pull/414 ); - FIX crash in python script when visualizing advanced timer output [#458]( https://github.com/sofa-framework/sofa/pull/458 ); - FIX error in script for plotting advancedTimer output [#519]( https://github.com/sofa-framework/sofa/pull/519 ); - Fix python unicode data [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - [SofaSPHFluid]; - Fix invalid plugin initialization. [#467]( https://github.com/sofa-framework/sofa/pull/467 ); - [SofaVolumetricData]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SceneCreator]; - FIX build error with AppleClang 6.0.0.6000051 [#483]( https://github.com/sofa-framework/sofa/pull/483 ); - [THMPGSpatialHashing]; - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ). **Scenes**; - Fix scenes [#310]( https://github.com/sofa-framework/sofa/pull/310 ); - Fix scenes with bad RegularGrid position relative to 270 [#324]( https://github.com/sofa-framework/sofa/pull/324 ); - Fix scenes errors and crashes [#505]( https://github.com/sofa-framework/sofa/pull/505 ); - FIX all scenes failures 17.12 [#565]( https://github.com/sofa-framework/sofa/pull/565 ). ### Cleanings. **Kernel modules**; - [All]; - replace a bunch of std::cerr, std::cout, prinf to use msg_* instead [#339]( https://github.com/sofa-framework/sofa/pull/339 ); - More std::cout to msg_* cleaning [#370]( https://github.com/sofa-framework/sofa/pull/370 ); - FIX removed compi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:320330,configurat,configuration,320330,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['configurat'],['configuration']
Deployability,[GUI.Qt] Fix MSAA sampling setup [#3220](https://github.com/sofa-framework/sofa/pull/3220) ; - [DrawToolGL] Fix ill-formed drawLines with multiple colors [#3260](https://github.com/sofa-framework/sofa/pull/3260) ; - [SofaSphFluid] Fix required plugin in scenes [#3272](https://github.com/sofa-framework/sofa/pull/3272) ; - [SofaCarving] Fix bug in CarvingManager when searching for target collision model [#3276](https://github.com/sofa-framework/sofa/pull/3276) ; - [GUI/runSofa] Cmake: tweaks and fixes [#3323](https://github.com/sofa-framework/sofa/pull/3323) ; - [CImgPlugin] Replace new keyword with creating unique pointers to properly clean up allocated memory. [#3365](https://github.com/sofa-framework/sofa/pull/3365) ; - [SofaMatrix] Fix crash if init fails in FillReducingOrdering [#3366](https://github.com/sofa-framework/sofa/pull/3366) ; - [SofaDistanceGrid] Set invalid state if cannot load mesh [#3400](https://github.com/sofa-framework/sofa/pull/3400) ; - [SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt [#3423](https://github.com/sofa-framework/sofa/pull/3423) ; - [SofaNewmat] Fix modules [#3427](https://github.com/sofa-framework/sofa/pull/3427) ; - [plugins] Fix warnings in SofaSphFluid and image [#3439](https://github.com/sofa-framework/sofa/pull/3439) ; - [GUI.Qt] Restore QGLViewer for Qt6 [#3454](https://github.com/sofa-framework/sofa/pull/3454) ; - [GUI.Qt] Restore Stats (Charts) and DocBrowser for Qt6 [#3456](https://github.com/sofa-framework/sofa/pull/3456) ; - [Modeler] rename shadow variable [#3546](https://github.com/sofa-framework/sofa/pull/3546) ; - [GUI.Common] Cmake: Fix message when searching for Sofa.GL [#3549](https://github.com/sofa-framework/sofa/pull/3549) ; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid3D [#3557](https://github.com/sofa-framework/sofa/pull/3557); - [CollisionOBBCapsule] Fix generation of configuration file for installation [#3576](https://github.com/sofa-framework/sofa/pull/3576). **Examples /,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:82404,Update,Update,82404,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"_GUI_QGLVIEWER. Then, in the main window, you select the kind of viewer you; want. Qt will appear in gray, whereas QGLViewer and Ogre will be; available.; Warning, you must reload the scene when this change is made!. Viewers. The Viewers available now are:. QtViewer: uses openGL, derives a; QGLWidget in order to be embedded within Qt. This class will probably; not be maintained. Use QtGLViewer instead. QtGLViewer: uses the library; QGLViewer. Provides lots of functions to navigate through the scene.; More information at QGLViewer; Website. QtOgreViewer: Embed Ogre within a; Qwidget. Allows to get great visuals, through an intensive use of; shaders, materials.; Shadows are provided, but all the controls (show the mechanical; objects, force fields...) are disabled. ; Warning: Ogre is not provided by Sofa, you have to previously install; Ogre on your computer. ; The support works with Windows, Linux. ; - For Windows, the easiest way to proceed is to download and install; the SDK. ; - For Linux, you have to compile from the source. If Ogre's library; aren't installed in the default directory �/usr/local/lib/Ogre�; then, you have to set the; correct path in �YourSofaDirectory/share/config/plugins_unix.cfg�; To get it: Ogre; Website. QtOgreViewer; To; use this viewer, you must have Ogre installed on your computer. ; The configuration files are located in: �YourSofaDirectory/share/config/�. �plugins.cfg� describes the plugins used by Ogre for; Windows, and �plugins_unix.cfg� for... Linux.; By creating a .scene file with the same name as the simulation, you can; provide additional models, lights, visuals to the simulation( see Ogre; documentation for mode details ). This won't interact with Sofa, but; allows you to get a better render.; Additional textures, materials,; shaders... in Ogre, have to be put in �; YourSofaDirectory/share/textures� or �; YourSofaDirectory/share/materials� or; �YourSofaDirectory/share/shaders� ... They are loaded at the; start-up of the viewer. . ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:4227,install,installed,4227,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,3,"['configurat', 'install']","['configuration', 'installed']"
Deployability,"_VERSION ${SOFAHAPI_MAJOR_VERSION}.${SOFAHAPI_MINOR_VERSION}). set(HEADER_FILES; SofaHAPIForceFeedbackEffect.h; SofaHAPIHapticsDevice.h; config.h.in; ). set(SOURCE_FILES; SofaHAPIForceFeedbackEffect.cpp; SofaHAPIHapticsDevice.cpp; initSofaHAPI.cpp; ). if(NOT TARGET H3DUtil); find_package(H3DUtil REQUIRED); if(WIN32); file(GLOB sharedObjects ""${HAPI_DIR}/bin/H3DUtil_*.dll""); foreach(sharedObject ${sharedObjects}); file(COPY ${sharedObject} DESTINATION ""${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CONFIG}""); endforeach(); endif(); else(); set(H3DUTIL_LIBRARIES H3DUtil); endif(). if(NOT TARGET HAPI); find_package(HAPI REQUIRED); if(WIN32); # Copy HAPI DLLs; file(GLOB sharedObjects ""${HAPI_DIR}/bin/HAPI_*.dll""). foreach(sharedObject ${sharedObjects}); file(COPY ${sharedObject} DESTINATION ""${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CONFIG}""); endforeach(); endif(); else(); set(HAPI_LIBRARIES HAPI); endif(). if(WIN32); if(CMAKE_CL_64); set(H3D_EXTERNAL_BIN_DIR ${H3D_EXTERNAL_ROOT}/bin64); else(); set(H3D_EXTERNAL_BIN_DIR ${H3D_EXTERNAL_ROOT}/bin32); endif(). file(COPY ""${H3D_EXTERNAL_BIN_DIR}/pthreadVC2.dll"" DESTINATION; ""${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CONFIG}""); file(COPY ""${H3D_EXTERNAL_BIN_DIR}/FreeImage.dll"" DESTINATION; ""${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CONFIG}""); endif(). set(SOFAHAPI_DEPENDENCY_INCLUDE_DIR ${HAPI_INCLUDE_DIR}; ${H3DUTIL_INCLUDE_DIR}). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaUserInteraction SofaHaptics ${HAPI_LIBRARIES} ${H3DUTIL_LIBRARIES}); target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${SOFAHAPI_DEPENDENCY_INCLUDE_DIR}>""). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${SOFAHAPI_VERSION}). ## Install rules for the library and the header; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME SofaHAPI; PACKAGE_VERSION ${SOFAHAPI_VERSION}; TARGETS SofaHAPI AUTO_SET_TARGET_PROPERTIES; INCLUDE_INSTALL_DIR SofaHAPI; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/CMakeLists.txt:1956,Install,Install,1956,applications/plugins/SofaHAPI/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,"a/pull/1013 ); - [SofaCUDA] Fix cuda with latest API [#912]( https://github.com/sofa-framework/sofa/pull/912 ); - [SofaPython] Add Sofa.hasViewer function [#964]( https://github.com/sofa-framework/sofa/pull/964 ); - [SofaPython] Change Base.addNewData [#1004]( https://github.com/sofa-framework/sofa/pull/1004 ). **Examples / Scenes**; - [examples] Rename TModels into CollisionModels and update all scenes [#1034]( https://github.com/sofa-framework/sofa/pull/1034 ). ### Bug Fixes. **Architecture**; - [CMake] Add check to prevent the inclusion of non-existant file in cmake 3.13 [#897]( https://github.com/sofa-framework/sofa/pull/897 ); - [CMake] Fix relocatable plugins [#1059]( https://github.com/sofa-framework/sofa/pull/1059 ); - [CMake] FIX: exporting options in SofaFrameworkConfig.cmake [#927]( https://github.com/sofa-framework/sofa/pull/927 ); - [CMake] FIX: wrong paths of installed headers in SofaBaseMechanics [#887]( https://github.com/sofa-framework/sofa/pull/887 ); - [CMake] FIX build/install plugins directory [#959]( https://github.com/sofa-framework/sofa/pull/959 ). **Modules**; - [All] Three small fixes in SofaBaseLinearSolver, SofaBoundaryCondition, runSofa [#931]( https://github.com/sofa-framework/sofa/pull/931 ); - [All] FIXES made for RoboSoft2019 [#1003]( https://github.com/sofa-framework/sofa/pull/1003 ); - [All] Fix some warnings [#873]( https://github.com/sofa-framework/sofa/pull/873 ); - [All] Several bug fixes [#985]( https://github.com/sofa-framework/sofa/pull/985 ); - [All] Some fixes to have a ... green dashboard! [#982]( https://github.com/sofa-framework/sofa/pull/982 ); - [All] Fix compilation with SOFA_NO_OPENGL flag [#1032]( https://github.com/sofa-framework/sofa/pull/1032 ); - [SofaConstraint] Convert static sized arrays to dynamic ones in GenericConstraintSolver [#920]( https://github.com/sofa-framework/sofa/pull/920 ); - **[SofaBaseMechanics]** Fix barycentric mapping again [#924]( https://github.com/sofa-framework/sofa/pull/924 ); - **[Sof",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:263324,install,install,263324,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,"a/tree/v21.06.03 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.02...v21.06.03 ). ### Bug Fixes; **Architecture**; - [CMake][modules] FIX out-of-tree builds [#2453]( https://github.com/sofa-framework/sofa/pull/2453 ); - [All] Update IDE directory for targets [#2239]( https://github.com/sofa-framework/sofa/pull/2239 ). **Modules**; - [SofaGeneralLoader] Make GridMeshCreator work again [#2473]( https://github.com/sofa-framework/sofa/pull/2473 ). ____________________________________________________________. ## [v21.06.02]( https://github.com/sofa-framework/sofa/tree/v21.06.02 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.01...v21.06.02 ). ### Bug Fixes; **Architecture**; - [CMake] Clean Sofa.Core CMakeLists + Add missing headers [#2444]( https://github.com/sofa-framework/sofa/pull/2444 ); - [SofaMeshCollision] Fix cmake generated config file [#2400]( https://github.com/sofa-framework/sofa/pull/2400 ). **Modules**; - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ). ____________________________________________________________. ## [v21.06.01]( https://github.com/sofa-framework/sofa/tree/v21.06.01 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.00...v21.06.01 ). ### Improvements; **Architecture**; - [CMake] CLEAN and reenable old macro for git infos [#2309]( https://github.com/sofa-framework/sofa/pull/2309 ); - [SofaMacros] Improve sofa_install_git_infos [#2373]( https://github.com/sofa-framework/sofa/pull/2373 ). ### Bug Fixes; **Architecture**; - [CMake] Fix return values of Qt5/Qt6 find_packages [#2346]( https://github.com/sofa-framework/sofa/pull/2346 ). **Modules**; - [Sofa.Type] FIX createFromRotationVEctor, the inequality was wrong [#2332]( https://github.com/sofa-framework/sofa/pull/2332 ); - [SofaBoundaryCondition]",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:165202,install,install,165202,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,"aCore]** ADD Datacallback and datalink [#911]( https://github.com/sofa-framework/sofa/pull/911 ); - [SofaEngine] Avoid Crash in BoxROI when rest_position is not yet defined [#1031]( https://github.com/sofa-framework/sofa/pull/1031 ); - [SofaExporter] Add option for Regression_test to check first and last iteration [#1061]( https://github.com/sofa-framework/sofa/pull/1061 ); - [SofaGeneralAnimationLoop] Improve MechanicalMatrixMapper [#882]( https://github.com/sofa-framework/sofa/pull/882 ); - [SofaGraphComponent] Run SceneChecker at each load [#938]( https://github.com/sofa-framework/sofa/pull/938 ); - [SofaGuiQt] Change the keyboard shortcut associated to camera mode [#997]( https://github.com/sofa-framework/sofa/pull/997 ); - [SofaGuiQt] Add a profiling window based on AdvanceTimer records [#1028]( https://github.com/sofa-framework/sofa/pull/1028 ); - **[SofaKernel]** Some small changes in debug topology drawing [#952]( https://github.com/sofa-framework/sofa/pull/952 ); - **[SofaKernel]** Update Static Solver [#950]( https://github.com/sofa-framework/sofa/pull/950 ); - **[SofaKernel]** Rename TModels into CollisionModels and update all scenes [#1034]( https://github.com/sofa-framework/sofa/pull/1034 ); - **[SofaKernel]** Add a new video recorder class VideoRecorderFFMPEG [#883]( https://github.com/sofa-framework/sofa/pull/883 ); - **[SofaSimulationCore]** Cpu task and scheduled thread support [#970]( https://github.com/sofa-framework/sofa/pull/970 ); - **[SofaSimulationCore]** call BaseObject::draw() during the Transparent pass [#929]( https://github.com/sofa-framework/sofa/pull/929 ); - [SofaTopologyMapping] Clean, fix, upgrade Tetra2TriangleTopologicalMapping [#876]( https://github.com/sofa-framework/sofa/pull/876 ). **Plugins / Projects**; - [Geomagic] Add some better check at init and method to free driver [#925]( https://github.com/sofa-framework/sofa/pull/925 ); - [Icons] EDIT Sofa icons [#881]( https://github.com/sofa-framework/sofa/pull/881 ); - [MultiThrea",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:260888,Update,Update,260888,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"a_set_python_directory command [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - use the cmake install DIRECTORY instead of FILES to preserve the files hierarchy when installing [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - fixing issue related to parsing attributes with atof/atoi [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - unify color datafield [#206]( https://github.com/sofa-framework/sofa/pull/206 ); - Fix CMakeLists bug on Sofa.ini and installedSofa.ini creation [#291]( https://github.com/sofa-framework/sofa/pull/291 ); - Fix a lot of failing tests (#271, #279); - Fix compilation with SOFA_FLOATING_POINT_TYPE as float [#262]( https://github.com/sofa-framework/sofa/pull/262 ); - CMake: Fix and clean boost, when using Sofa as an external lib [#421]( https://github.com/sofa-framework/sofa/pull/421 ); - [SofaKernel]; - Fix the Filemonitor_test random failure on MacOs [#143]( https://github.com/sofa-framework/sofa/pull/143 ); - implement a numerical integration for triangle [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - add brace initializer to helper::vector class [#252]( https://github.com/sofa-framework/sofa/pull/252 ); - Activates thread-safetiness on MessageDispatcher. [#257]( https://github.com/sofa-framework/sofa/pull/257 ); - Fix getRelativePath() in DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - FileRepository::getRelativePath() lowering the case on WIN32 is now a deprecated behavior [#264]( https://github.com/sofa-framework/sofa/pull/264 ); - Fix FileRepository should not be optional [#122]( https://github.com/sofa-framework/sofa/pull/122 ); - FileMonitor: fix the recurrent problem with file 'SofaKernel/framework/framework_test/resources/existing.txt' pointed in Issue #146 [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - Fix wrong inline in exported functions [#449]( https://github.com/sofa-framework/sofa/pull/449 ); - [SofaFramework]; - fix the integration schem",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:332094,integrat,integration,332094,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['integrat'],['integration']
Deployability,ager component [#3198]( https://github.com/sofa-framework/sofa/pull/3198 ). **Scripts / Tools**; - [tools] Correction of the import of the queue library [#2572]( https://github.com/sofa-framework/sofa/pull/2572 ). ### Cleanings. **Project**; - [GitHub] Update Changelog and version [#2546]( https://github.com/sofa-framework/sofa/pull/2546 ); - [Git] Clean project files [#2884]( https://github.com/sofa-framework/sofa/pull/2884 ); - [Project] Update README [#2905]( https://github.com/sofa-framework/sofa/pull/2905 ); - [Readme] Delete references to removed/moved directories in licence paragraph [#2547]( https://github.com/sofa-framework/sofa/pull/2547 ); - [doc] Remove old doc materials [#2889]( https://github.com/sofa-framework/sofa/pull/2889 ). **Architecture**; - [CMake] Clean modules post-NG [#2980]( https://github.com/sofa-framework/sofa/pull/2980 ); - [CMake] Replace references of SofaNG codename to SOFA [#3102]( https://github.com/sofa-framework/sofa/pull/3102 ); - [CMake] Update all deps to SofaFramework modules [#2958]( https://github.com/sofa-framework/sofa/pull/2958 ); - [CMake] Use standard macros + fix out-of-tree builds [#3120]( https://github.com/sofa-framework/sofa/pull/3120 ); - [CMake] Clean packaging for v22.06 [#3197]( https://github.com/sofa-framework/sofa/pull/3197 ). **Modules**; - [All] Fix minor warnings [#3177]( https://github.com/sofa-framework/sofa/pull/3177 ); - [All] Minor changes to use new SOFA-NG includes [#3160]( https://github.com/sofa-framework/sofa/pull/3160 ); - [All] Remove warnings [#3118]( https://github.com/sofa-framework/sofa/pull/3118 ); - [All] Uniformize includes [#3145]( https://github.com/sofa-framework/sofa/pull/3145 ); - [All] Few fixes to allow compilation with MSVC/Clang-cl [#2563]( https://github.com/sofa-framework/sofa/pull/2563 ); - [All] Minor improvements [#2667]( https://github.com/sofa-framework/sofa/pull/2667 ); - [All] Update Data comments [#2719]( https://github.com/sofa-framework/sofa/pull/2719 ); - [All] Re,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:119487,Update,Update,119487,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"ainers [#967]( https://github.com/sofa-framework/sofa/pull/967 ); - **[SofaKernel]** Refactor the MutationListener [#917]( https://github.com/sofa-framework/sofa/pull/917 ); - **[SofaKernel]** Some Topology cleaning... [#866]( https://github.com/sofa-framework/sofa/pull/866 ); - [SofaOpenglVisual] Fix ogl perf problem [#1069]( https://github.com/sofa-framework/sofa/pull/1069 ). ### Modularizations. - [SofaExporter] Modularize (+minor dependency cleaning) [#915]( https://github.com/sofa-framework/sofa/pull/915 ); - [SofaHaptics] Modularize sofa haptics [#945]( https://github.com/sofa-framework/sofa/pull/945 ); - [SofaOpenglVisual] Pluginize. [#1080]( https://github.com/sofa-framework/sofa/pull/1080 ). ### Improvements. **Architecture**; - [CMake] Rework sofa_generate_package [#951]( https://github.com/sofa-framework/sofa/pull/951 ); - [CMake] SofaMacros.cmake: deprecating sofa_create_package [#909]( https://github.com/sofa-framework/sofa/pull/909 ). **Modules**; - [All] Improve install and packaging [#1018]( https://github.com/sofa-framework/sofa/pull/1018 ); - [All] Plugins finding and loading [#913]( https://github.com/sofa-framework/sofa/pull/913 ); - [All] Replace deprecated c++ standard binder component [#908]( https://github.com/sofa-framework/sofa/pull/908 ); - **[SofaBaseMechanics]** BarycentricMapping: spatial hashing, handle limit cases [#896]( https://github.com/sofa-framework/sofa/pull/896 ); - **[SofaBaseTopology]** Clean Topology logs and add AdvanceTimer logs [#874]( https://github.com/sofa-framework/sofa/pull/874 ); - **[SofaBaseVisual]** Add default texcoord in VisualModel [#933]( https://github.com/sofa-framework/sofa/pull/933 ); - [SofaConstraint] ADD control on constraint force in UniformConstraint [#1027]( https://github.com/sofa-framework/sofa/pull/1027 ); - **[SofaCore]** Add possibilities to draw lines on surfaces in DrawTool [#937]( https://github.com/sofa-framework/sofa/pull/937 ); - **[SofaCore]** Collision visitor primitive tests count [#9",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:258810,install,install,258810,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,"al] Introduce TrailRenderer [#3471](https://github.com/sofa-framework/sofa/pull/3471) ; - [Solver.Direct] Unit tests on empty system [#3500](https://github.com/sofa-framework/sofa/pull/3500) ; - [MechanicalLoad] Move getValue call out of the loops [#3503](https://github.com/sofa-framework/sofa/pull/3503) . **Plugins / Projects**; - [SofaCUDA] Add ConstraintCorrection instantiation in CudaVec3f/CudaVec3f1 [#3004](https://github.com/sofa-framework/sofa/pull/3004) ; - [SofaCUDA] Make CudaConstantForceField compatible with CudaRigid types [#3164](https://github.com/sofa-framework/sofa/pull/3164) ; - [GUI.performer] Add remove elements function for LineCollisionModel [#3239](https://github.com/sofa-framework/sofa/pull/3239) ; - [Regression] Test Eigen solvers scenes for regression [#3326](https://github.com/sofa-framework/sofa/pull/3326); - [Regression] Add HexahedronFEMForceFieldAndMass to regression tests [#3367](https://github.com/sofa-framework/sofa/pull/3367) ; - [SofaCarving] Update and add more tests in SofaCarving_test [#3407](https://github.com/sofa-framework/sofa/pull/3407) ; - [SofaCuda] Add method in CudaVector Accessor and CudaBilateralInteractionConstraint [#3460](https://github.com/sofa-framework/sofa/pull/3460) ; - [SofaPhysicsAPI] Add several methods using output parameters [#3520](https://github.com/sofa-framework/sofa/pull/3520) ; - [SofaPhysicsAPI] Add C bindings to access C++ api [#3539](https://github.com/sofa-framework/sofa/pull/3539) ; - [SofaPhysicsAPI] Add methods and C bindings to load SOFA ini file, plugins and messageHandler [#3540](https://github.com/sofa-framework/sofa/pull/3540) . ### Bug Fixes. **Architecture**; - [Config] Rename ide folder for libraries [#3214](https://github.com/sofa-framework/sofa/pull/3214) ; - [CMake] FIX parent modules library consistency [#3225](https://github.com/sofa-framework/sofa/pull/3225) ; - [CMake] FIX out-of-tree SofaGui and runSofa locations [#3229](https://github.com/sofa-framework/sofa/pull/3229); - [So",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:76275,Update,Update,76275,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"all] Add PenalityContact vector Data display [#4637](https://github.com/sofa-framework/sofa/pull/4637); - [GUI.Component] Add virtualization for attachment performer [#4638](https://github.com/sofa-framework/sofa/pull/4638); - [GUI.Qt] Some cleaning in qt RealGui [#4641](https://github.com/sofa-framework/sofa/pull/4641); - [FEM.HyperElastic] Convert string Data to OptionsGroup [#4651](https://github.com/sofa-framework/sofa/pull/4651); - [AnimationLoop] Remove duplicated Constraint Visitors [#4715](https://github.com/sofa-framework/sofa/pull/4715). ### Improvements. - [Lagrangian.Correction] Add callbacks to check zero compliance [#4205](https://github.com/sofa-framework/sofa/pull/4205); - [SolidMechanics.Spring] Implement buildStiffnessMatrix for TriangularBendingSprings [#4295](https://github.com/sofa-framework/sofa/pull/4295); - [SolidMechanics] Implement buildStiffnessMatrix for PolynomialSpringsFF [#4301](https://github.com/sofa-framework/sofa/pull/4301); - [Config] CMake: support interface-type target for install macro [#4356](https://github.com/sofa-framework/sofa/pull/4356); - [Core] BaseMapping: link mapConstraints to the ""meta-alias"" isMechanical [#4360](https://github.com/sofa-framework/sofa/pull/4360); - [github] Add new action checking PR age [#4386](https://github.com/sofa-framework/sofa/pull/4386); - [Topology.Mapping] Edge2QuadTopologicalMapping: use States directly [#4388](https://github.com/sofa-framework/sofa/pull/4388); - [README] Minor update badges [#4417](https://github.com/sofa-framework/sofa/pull/4417); - [StateContainer] Accelerate copy of MatrixDeriv for CRS matrices [#4443](https://github.com/sofa-framework/sofa/pull/4443); - [GitHub] Add new actions to connect GitHub and Discord [#4445](https://github.com/sofa-framework/sofa/pull/4445); - [All] Display reference name when pulling external plugins [#4507](https://github.com/sofa-framework/sofa/pull/4507); - [Config] Add TSAN option [#4534](https://github.com/sofa-framework/sofa/pull/4534); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:3593,install,install,3593,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,"ame TModels into CollisionModels and update all scenes [#1034]( https://github.com/sofa-framework/sofa/pull/1034 ); - **[SofaKernel]** Add a new video recorder class VideoRecorderFFMPEG [#883]( https://github.com/sofa-framework/sofa/pull/883 ); - **[SofaSimulationCore]** Cpu task and scheduled thread support [#970]( https://github.com/sofa-framework/sofa/pull/970 ); - **[SofaSimulationCore]** call BaseObject::draw() during the Transparent pass [#929]( https://github.com/sofa-framework/sofa/pull/929 ); - [SofaTopologyMapping] Clean, fix, upgrade Tetra2TriangleTopologicalMapping [#876]( https://github.com/sofa-framework/sofa/pull/876 ). **Plugins / Projects**; - [Geomagic] Add some better check at init and method to free driver [#925]( https://github.com/sofa-framework/sofa/pull/925 ); - [Icons] EDIT Sofa icons [#881]( https://github.com/sofa-framework/sofa/pull/881 ); - [MultiThreading] TaskAllocator Interface [#906]( https://github.com/sofa-framework/sofa/pull/906 ); - [PluginExample] Update example + add comments [#1053]( https://github.com/sofa-framework/sofa/pull/1053 ); - [Regression] ADD Regression as external project [#1052]( https://github.com/sofa-framework/sofa/pull/1052 ); - [runSofa] ADD possibility to jump to source/instanciation of selected component [#1013]( https://github.com/sofa-framework/sofa/pull/1013 ); - [SofaCUDA] Fix cuda with latest API [#912]( https://github.com/sofa-framework/sofa/pull/912 ); - [SofaPython] Add Sofa.hasViewer function [#964]( https://github.com/sofa-framework/sofa/pull/964 ); - [SofaPython] Change Base.addNewData [#1004]( https://github.com/sofa-framework/sofa/pull/1004 ). **Examples / Scenes**; - [examples] Rename TModels into CollisionModels and update all scenes [#1034]( https://github.com/sofa-framework/sofa/pull/1034 ). ### Bug Fixes. **Architecture**; - [CMake] Add check to prevent the inclusion of non-existant file in cmake 3.13 [#897]( https://github.com/sofa-framework/sofa/pull/897 ); - [CMake] Fix relocatable plug",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:261990,Update,Update,261990,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,ame to SOFA [#3102]( https://github.com/sofa-framework/sofa/pull/3102 ); - [CMake] Update all deps to SofaFramework modules [#2958]( https://github.com/sofa-framework/sofa/pull/2958 ); - [CMake] Use standard macros + fix out-of-tree builds [#3120]( https://github.com/sofa-framework/sofa/pull/3120 ); - [CMake] Clean packaging for v22.06 [#3197]( https://github.com/sofa-framework/sofa/pull/3197 ). **Modules**; - [All] Fix minor warnings [#3177]( https://github.com/sofa-framework/sofa/pull/3177 ); - [All] Minor changes to use new SOFA-NG includes [#3160]( https://github.com/sofa-framework/sofa/pull/3160 ); - [All] Remove warnings [#3118]( https://github.com/sofa-framework/sofa/pull/3118 ); - [All] Uniformize includes [#3145]( https://github.com/sofa-framework/sofa/pull/3145 ); - [All] Few fixes to allow compilation with MSVC/Clang-cl [#2563]( https://github.com/sofa-framework/sofa/pull/2563 ); - [All] Minor improvements [#2667]( https://github.com/sofa-framework/sofa/pull/2667 ); - [All] Update Data comments [#2719]( https://github.com/sofa-framework/sofa/pull/2719 ); - [All] Remove few trivial compilation warning & commented code. [#3044]( https://github.com/sofa-framework/sofa/pull/3044 ); - [All] Update the code to remove some deprecation warnings [#2529]( https://github.com/sofa-framework/sofa/pull/2529 ); - [Collision.Geometry] Remove unnecessary *_API in template class definition [#3022]( https://github.com/sofa-framework/sofa/pull/3022 ); - [Collision.Response.Mapper] Missing override keyword [#3083]( https://github.com/sofa-framework/sofa/pull/3083 ); - [Component] All modules have a version [#2948]( https://github.com/sofa-framework/sofa/pull/2948 ); - [Components.Engine.Transform] remove shadow variable in ROIValueMapper [#2987]( https://github.com/sofa-framework/sofa/pull/2987 ); - [Config] Remove unused option SOFA_WITH_DEPRECATED_COMPONENTS [#3172]( https://github.com/sofa-framework/sofa/pull/3172 ); - [Constraint.Lagrangian.Solver] Convert double to SReal,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:120404,Update,Update,120404,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,arch for RPATH [#1710]( https://github.com/sofa-framework/sofa/pull/1710 ); - [SofaOpenglVisual] OglViewport: a fix for compatibility with modern OpenGL [#1500]( https://github.com/sofa-framework/sofa/pull/1500 ); - [SofaSimulationGraph] No reason to have moveChild in private [#1470]( https://github.com/sofa-framework/sofa/pull/1470 ). **Plugins / Projects**; - [CGALPlugin] Fix compilation for CGal version > 5 [#1522]( https://github.com/sofa-framework/sofa/pull/1522 ); - [CImgPlugin] CLEAN dependencies in CMakeLists [#1651]( https://github.com/sofa-framework/sofa/pull/1651 ); - [Flexible] FIX deps to pluginized modules [#1590]( https://github.com/sofa-framework/sofa/pull/1590 ); - [Geomagic] Fix scenes ForceFeedBack behavior due to a change in UncoupledConstraintCorrection [#1435]( https://github.com/sofa-framework/sofa/pull/1435 ); - [OmniDriverEmul] Fix thread behavior and replace boost/pthread by std::thread [#1665]( https://github.com/sofa-framework/sofa/pull/1665 ); - [SofaOpenCL] Fix Cmake configuration [#1647]( https://github.com/sofa-framework/sofa/pull/1647 ); - [SofaPython] Small fixes to import plugin and remove scene warnings [#1466]( https://github.com/sofa-framework/sofa/pull/1466 ); - [runSofa] CLEAN unused dep to SofaGeneralLoader [#1648]( https://github.com/sofa-framework/sofa/pull/1648 ); - [SofaSPHFluid] Fix compilation with std::execution [#1542]( https://github.com/sofa-framework/sofa/pull/1542 ). **Examples / Scenes**; - [examples] Fix HexahedronForceFieldTopologyChangeHandling scene [#1573]( https://github.com/sofa-framework/sofa/pull/1573 ). **Scripts / Tools**; - [scripts] Update licenseUpdater [#1498]( https://github.com/sofa-framework/sofa/pull/1498 ). ### Cleanings; **Architecture**; - [SofaMacros] Split SofaMacros.cmake into multiple files [#1477]( https://github.com/sofa-framework/sofa/pull/1477 ); - [SofaMacros] Use IN_LIST (CMake >= 3.3) [#1484]( https://github.com/sofa-framework/sofa/pull/1484 ). **Modules**; - [All] Bunch of remova,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:224619,configurat,configuration,224619,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['configurat'],['configuration']
Deployability,"aries""); set(CPACK_COMPONENT_RESOURCES_DISPLAY_NAME ""Resources""). set(CPACK_COMPONENT_APPLICATIONS_GROUP ""Runtime""); set(CPACK_COMPONENT_HEADERS_GROUP ""Development""); set(CPACK_COMPONENT_GTEST_HEADERS_GROUP ""Development""); set(CPACK_COMPONENT_LIBRARIES_GROUP ""Runtime""); set(CPACK_COMPONENT_RESOURCES_GROUP ""Runtime""); ##################. ######################; # IFW Generator config; if(CPACK_BINARY_IFW); set(CPACK_IFW_PACKAGE_NAME ""${CPACK_PACKAGE_NAME}""); set(CPACK_IFW_PACKAGE_TITLE ""${CPACK_PACKAGE_NAME}""); set(CPACK_IFW_PRODUCT_URL ""${CPACK_PACKAGE_HOMEPAGE_URL}""); set(CPACK_IFW_PACKAGE_LOGO ""${CPACK_PACKAGE_ICON}""); set(CPACK_IFW_TARGET_DIRECTORY ""@HomeDir@/${CPACK_PACKAGE_INSTALL_DIRECTORY}""); if(WIN32); set(CPACK_IFW_PACKAGE_ICON ""${CMAKE_SOURCE_DIR}/applications/projects/runSofa/runSofa.ico""); elseif(APPLE); set(CPACK_IFW_PACKAGE_ICON ""${CMAKE_SOURCE_DIR}/applications/projects/runSofa/runSofa.icns""); endif(). cpack_ifw_configure_component_group(runtime; SORTING_PRIORITY 50; DEFAULT TRUE; EXPANDED; SCRIPT ""${CMAKE_SOURCE_DIR}/scripts/qtifw/install.qs""; ); cpack_ifw_configure_component_group(development; SORTING_PRIORITY 10; DEFAULT TRUE; EXPANDED; ). cpack_ifw_configure_component(applications; DISPLAY_NAME ""runSofa Application""; DEPENDS runtime; ); cpack_ifw_configure_component(headers; DISPLAY_NAME ""C++ Headers""; DEPENDS development; ); cpack_ifw_configure_component(GTest_headers; DISPLAY_NAME ""GTest Headers""; DEPENDS development; ); cpack_ifw_configure_component(libraries; DISPLAY_NAME ""Libraries""; DEPENDS development; ); cpack_ifw_configure_component(resources; DISPLAY_NAME ""Resources""; DEPENDS runtime; ); endif(); ######################. #######################; # NSIS Generator config; if(CPACK_BINARY_NSIS); # There is a bug in NSIS that does not handle full unix paths properly. Make; # sure there is at least one set of four (4) backslashes.; set(CPACK_NSIS_MUI_ICON ""${CMAKE_SOURCE_DIR}/applications/projects/runSofa/runSofa.ico""); set(CPACK_NSIS_INSTALLED",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:15700,install,install,15700,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['install'],['install']
Deployability,"ated, and attached to the picked collision model, if any, with a; spring. ; If; you release the mouse button first, the spring is removed.; If; you release the SHIFT button first, the spring is fixed and exists; until you pick another point in the scene. Several tabs give more information; about the current scene: ; This images were taken for the scene shown above. . - depending on the viewer, you can control what is displayed, and the; way it is. ; - statistical outputs during the simulation (position and velocity for; each elements, time passed at each branch of the graph, gnuplot files); ; - the graph of the scene, with all the nodes. You can export this graph; into a nice png file.; - the last tab, �Viewer� gives the name and information about; the possibilities of the current viewer, and the shortcuts. Double clicking on a node allows you to modify several values and; change dynamically the simulation (here, the TetrahedronFEMForceField; node). In some cases, you need to press the update button; to apply the changes. Structure ; The main interface uses a Qt; environment (Qt3.3 for Linux and Qt4 for Windows). The Main window,; providing all the interactions possible with the simulation,was created; using QtDesigner. The RealGUI contains the viewer which can be selected; directly in the main window. The possible choices depends on the; configuration file, sofa-default.cfg. The RealGUI gets a pointer to the root of the scene graph, and controls; the application by calling class; sofa::simulation::tree:Simulation.; The RealGUI uses an internal timer to repeatedly call; method sofa::simulation::tree:Simulation::animate(GNode* root, double; dt) and then update the viewer. To select the; viewers:. sofa-default.cfg located in; your Sofa main directory allows to define what kind of viewer you are; willing to have. ; By commenting (adding a�#� in front of the line) or uncommenting; (removing the �#�) lines, you can allow multiple kind of viewer.; For example, if you want",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:1967,update,update,1967,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,1,['update'],['update']
Deployability,ation 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.19; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.18; Lloyd_iteration 2.13; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.17; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.13; Lloyd_iteration 2.15; Lloyd_iteration 2.17; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.13; computeUniformSampling: 229.18; computeWeights: 39.73; computeLinearRegionsSampling: 0.87; updateSampleMaterialProperties: 0.1. File: scenes/steak.pscn using steak-seg2.ppm 20 6; Lloyd_iteration 2.42; Lloyd_iteration 2.32; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.37; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.36; Lloyd_iteration 2.35; Lloyd_iteration 2.32; computeUniformSampling: 60.17; computeWeights: 63.02; computeLinearRegionsSampling: 1.62; updateSampleMaterialProperties: 0.26. File: scenes/steak.pscn using steak-seg2.ppm 20 10; Lloyd_iteration 2.34; Lloyd_iteration 2.31; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.3; Lloyd_iteration 2.31; Lloyd_iteration 2.31; Lloyd_iteration 2.35; Lloyd_iteration 2.32; Lloyd_iteration 2.3; Lloyd_iteration 2.3; computeUniformSampling: 59.63; computeWeights: 62.45; computeLinearRegionsSampling: 1.55; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg2.ppm 20 20; Lloyd_iteration 2.36; Lloyd_iteration 2.41; Lloyd_iteration 2.34; Lloyd_iteration 2.33; Lloyd_iteration 2.34; Lloyd_iteration 2.39; Lloyd_iteration 2.33; Lloyd_iteration 2.34; Lloyd_iteration 2.33; Lloyd_iteration 2.36; Lloyd_iteration 2.37; computeUniformSampling: 60.37; computeWeights: 63.36; computeLinearRegionsSampling: 1.61; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg2.ppm 20 50; Lloyd_iteration 2.35; Lloyd_iteration 2.32; Lloyd_iteration 2.33; Lloyd_iteration 2.,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:25015,update,updateSampleMaterialProperties,25015,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,buildStiffnessMatrix for StandardTetrahedralFEMForceField [#4110](https://github.com/sofa-framework/sofa/pull/4110); - [MechanicalLoad] Implement buildStiffnessMatrix for TorsionForceField [#4115](https://github.com/sofa-framework/sofa/pull/4115); - [Mass] Add a callback on the lumping data in MMMass [#4128](https://github.com/sofa-framework/sofa/pull/4128); - [Constraint.Lagrangian.Solver] GenericConstraintSolver: use given re-ordered list for unbuilt GS [#4132](https://github.com/sofa-framework/sofa/pull/4132); - [Core] Store default value in a Data [#4133](https://github.com/sofa-framework/sofa/pull/4133); - [all] Use SimulationInitDoneEvent instead of AnimateBeginEvent [#4160](https://github.com/sofa-framework/sofa/pull/4160); - [GitHub] filter action if not on sofa-framework repository [#4171](https://github.com/sofa-framework/sofa/pull/4171); - [LinearSystem] Assemble non-mapped and mapped matrices in parallel [#4172](https://github.com/sofa-framework/sofa/pull/4172); - [Config] Integrate Tracy profiler [#4182](https://github.com/sofa-framework/sofa/pull/4182); - [Config] CMake: Dont check for IPO at every configure step [#4191](https://github.com/sofa-framework/sofa/pull/4191); - [Constraint.Lagrangian.Solver] GenericConstraintSolver: avoid repeated allocation in loops [#4195](https://github.com/sofa-framework/sofa/pull/4195); - [LinearSolver.Direct] Better distribution of tasks among threads [#4220](https://github.com/sofa-framework/sofa/pull/4220); - [all] Add the folder sofa-launcher to the resources component [#4245](https://github.com/sofa-framework/sofa/pull/4245); - [MatrixAccumulator] adds 6x6 matrix handling [#4247](https://github.com/sofa-framework/sofa/pull/4247); - [LinearAlgebra] Speedup accumulation on BTDMatrix [#4248](https://github.com/sofa-framework/sofa/pull/4248); - [LinearAlgebra] Support 6x6 matrices accumulation in BaseMatrix [#4253](https://github.com/sofa-framework/sofa/pull/4253); - [example] Speedup TorusFall with parallel inverse pr,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:31520,Integrat,Integrate,31520,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Integrat'],['Integrate']
Deployability,"buted under the terms of; this Lesser General Public License (also called ""this License"").; Each licensee is addressed as ""you"". A ""library"" means a collection of software functions and/or data; prepared so as to be conveniently linked with application programs; (which use some of those functions and data) to form executables. The ""Library"", below, refers to any such software library or work; which has been distributed under these terms. A ""work based on the; Library"" means either the Library or any derivative work under; copyright law: that is to say, a work containing the Library or a; portion of it, either verbatim or with modifications and/or translated; straightforwardly into another language. (Hereinafter, translation is; included without limitation in the term ""modification"".). ""Source code"" for a work means the preferred form of the work for; making modifications to it. For a library, complete source code means; all the source code for all modules it contains, plus any associated; interface definition files, plus the scripts used to control compilation; and installation of the library. Activities other than copying, distribution and modification are not; covered by this License; they are outside its scope. The act of; running a program using the Library is not restricted, and output from; such a program is covered only if its contents constitute a work based; on the Library (independent of the use of the Library in a tool for; writing it). Whether that is true depends on what the Library does; and what the program that uses the Library does. 1. You may copy and distribute verbatim copies of the Library's; complete source code as you receive it, in any medium, provided that; you conspicuously and appropriately publish on each copy an; appropriate copyright notice and disclaimer of warranty; keep intact; all the notices that refer to this License and to the absence of any; warranty; and distribute a copy of this License along with the; Library. You may charge ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:7305,install,installation,7305,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['install'],['installation']
Deployability,c] Update GeomagicDriver.cpp to fire error when hd.h is not found [#4576](https://github.com/sofa-framework/sofa/pull/4576); - [CMake] Upgrade cmake_minimum_required to 3.22 [#4586](https://github.com/sofa-framework/sofa/pull/4586); - [Core] Remove unused debug trace [#4590](https://github.com/sofa-framework/sofa/pull/4590); - [Core] cmake: Remove last traces of Sofa.Component.Compat [#4596](https://github.com/sofa-framework/sofa/pull/4596); - [LinearAlgebra] Remove empty source file [#4599](https://github.com/sofa-framework/sofa/pull/4599); - [Type] Clean and test MatSym [#4600](https://github.com/sofa-framework/sofa/pull/4600); - [tests] Use appropriate gtest macro [#4607](https://github.com/sofa-framework/sofa/pull/4607); - [LinearSystem] Remove development artifact [#4620](https://github.com/sofa-framework/sofa/pull/4620); - [all] Minor last fixes using SimpleApi [#4627](https://github.com/sofa-framework/sofa/pull/4627); - [SolidMechanics.FEM] Small update on container access to avoid unecessary check [#4639](https://github.com/sofa-framework/sofa/pull/4639); - [AnimationLoop] Rename Data [#4664](https://github.com/sofa-framework/sofa/pull/4664); - [Guidelines] Format cpp code [#4695](https://github.com/sofa-framework/sofa/pull/4695); - [all] Remove some warnings [#4698](https://github.com/sofa-framework/sofa/pull/4698); - [examples] Run PluginFinder on examples [#4707](https://github.com/sofa-framework/sofa/pull/4707); - [examples] Remove examples using DefaultCollisionGroupManager [#4708](https://github.com/sofa-framework/sofa/pull/4708); - [Core] Warn when module name is empty [#4725](https://github.com/sofa-framework/sofa/pull/4725); - ﻿[PlayBack] Update playback scenes to write/read and compare a beam under gravity motion [#4745](https://github.com/sofa-framework/sofa/pull/4745); - [tools] Factorize and clean plugin list filtering [#4748](https://github.com/sofa-framework/sofa/pull/4748); - [tools] Add new dependency to fix in MacOS post-install-fixup [#4749,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:16787,update,update,16787,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,ceField] code [#2287]( https://github.com/sofa-framework/sofa/pull/2287 ); - [SolidMechanics] Remove unused _assembling data [#2901]( https://github.com/sofa-framework/sofa/pull/2901 ); - [Topology.Container.Dynamic] Fix duplicate Data Points in PointSetTopologyContainer [#2993]( https://github.com/sofa-framework/sofa/pull/2993 ). **Plugins / Projects**; - [runSofa] Add a button and a mechanism to activate the scenegraph updates [#3026]( https://github.com/sofa-framework/sofa/pull/3026 ); - [runSofa] Remove not working feature in QSofaListView. [#3025]( https://github.com/sofa-framework/sofa/pull/3025 ). **Examples / Scenes**. **Scripts / Tools**. ### Improvements. **Project**; - [Contributing] Update info regarding GitHub Discussions [#2741]( https://github.com/sofa-framework/sofa/pull/2741 ); - [Project] Add the graph illustrating the workflow of a PR review in CONTRIBUTING [#3051]( https://github.com/sofa-framework/sofa/pull/3051 ). **Architecture**; - [collections] Install collections in their own directory [#3196]( https://github.com/sofa-framework/sofa/pull/3196 ). **Modules**; - [Constraint.Lagrangian.Correction] Searching for Direct Linear Solver in LinearSolverConstraintCorrection [#3055]( https://github.com/sofa-framework/sofa/pull/3055 ) ; - [GUI.Qt] Redirect Qt messages to the SOFA output stream [#3101]( https://github.com/sofa-framework/sofa/pull/3101 ); - [GUI.Qt] Save scene graph lock state persistently [#3119]( https://github.com/sofa-framework/sofa/pull/3119 ) ; - [GUI] Completing text description for mouse interaction with springs [#3122]( https://github.com/sofa-framework/sofa/pull/3122 ); - [HyperElastic] Add draw method to StandardTetrahedralFEMForceField [#2838]( https://github.com/sofa-framework/sofa/pull/2838 ); - [HyperElastic] Introduce example scene for StandardTetrahedralFEMForceField [#2857]( https://github.com/sofa-framework/sofa/pull/2857 ); - [LinearSolver.Direct] LU solver can be templated to CRSMat3x3 [#2862]( https://github.com/sof,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:98025,Install,Install,98025,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Install'],['Install']
Deployability,cing const char* with strings for group / help / widget etc. [#1152]( https://github.com/sofa-framework/sofa/pull/1152 ); - **[SofaKernel]** ADD: static method in events to retrieve the classname [#1118]( https://github.com/sofa-framework/sofa/pull/1118 ); - **[SofaKernel]** Set BaseData to non-persistant by default [#1191]( https://github.com/sofa-framework/sofa/pull/1191 ); - **[SofaKernel]** fix root's getPathName [#1146]( https://github.com/sofa-framework/sofa/pull/1146 ). ### Improvements. **Architecture**; - [CMake] v19.06 changes [#1114]( https://github.com/sofa-framework/sofa/pull/1114 ); - [extlibs] Set Eigen as external project + upgrade to 3.2.10 [#1101]( https://github.com/sofa-framework/sofa/pull/1101 ); - [extlibs] Upgrade Qwt extlib from 6.1.2 to 6.1.4 [#1136]( https://github.com/sofa-framework/sofa/pull/1136 ). **Modules**; - [All] Add SingleLink to Topology to reveal hidden GetMeshTopology Part 2 [#1199]( https://github.com/sofa-framework/sofa/pull/1199 ); - [All] Add update internal mechanism [#1131]( https://github.com/sofa-framework/sofa/pull/1131 ); - [All] Update the SOFA Guidelines [#1135]( https://github.com/sofa-framework/sofa/pull/1135 ); - **[SofaBaseMechanics]** Add topological change in barycentric mapping [#1203]( https://github.com/sofa-framework/sofa/pull/1203 ); - **[SofaBaseMechanics]** Use doUpdateInternal API in DiagonalMass [#1150]( https://github.com/sofa-framework/sofa/pull/1150 ); - **[SofaBaseMechanics]** Use doUpdateInternal API in UniformMass [#1149]( https://github.com/sofa-framework/sofa/pull/1149 ); - **[SofaBaseTopology]** Add new geometric methods in TetrahedronSetGeometryAlgorythms [#1160]( https://github.com/sofa-framework/sofa/pull/1160 ); - **[SofaCore]** Remove thread specific declaration [#1129]( https://github.com/sofa-framework/sofa/pull/1129 ); - [SofaGeneralEngine] Added Rigid to Euler orientation export [#1141]( https://github.com/sofa-framework/sofa/pull/1141 ); - [SofaHaptics] Add mutex and option to lock t,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:245149,update,update,245149,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,"cmake_minimum_required(VERSION 3.22). project(stylecheck.exe). if( CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR ); message(STATUS ""Stylecheck out-of-tree configuration""). if( NOT DEFINED LLVM_PATH ); message(FATAL_ERROR ""LLVM_PATH must be provided using -DLLVM_PATH=<path to llvm package root>""); endif(). link_directories(${LLVM_PATH}/lib); include_directories(${LLVM_PATH}/include). add_definitions(; -D__STDC_LIMIT_MACROS; -D__STDC_CONSTANT_MACROS; ). if( CMAKE_SYSTEM_NAME MATCHES ""Darwin"" ); set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -fvisibility-inlines-hidden""); endif(); else(); message(STATUS ""Stylecheck in-tree configuration""); endif(). add_executable(stylecheck.exe; stylecheck.cpp; utilsllvm.cpp; fileutils.cpp; ). if( MSVC ); # Disable warnings for Stylecheck; add_definitions(; -wd4722 # Suppress ''destructor'' : destructor never returns, potential memory leak; ). # Put project in solution folder; set_target_properties(stylecheck; PROPERTIES FOLDER ""Clang executables""; ); else(); # Disable RTTI to be compatible with LLVM/Clang libraries.; set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -std=c++11 -fno-rtti""); endif(). # Clang dependencies.; target_link_libraries(stylecheck.exe; clangTooling ; clangFrontend; clangSerialization; clangDriver; clangParse; clangSema; clangAnalysis; clangAST; clangBasic; clangEdit; clangLex; clangASTMatchers ; clang; ). # LLVM dependencies.; target_link_libraries(stylecheck.exe; #LLVMSupport; #LLVMTransformUtils; #LLVMMC # Object, Support; #LLVMMCParser # MC, Support; #LLVMObject # Support; #LLVMCore # Support; #LLVMBitReader; #LLVMScalarOpts; LLVMSupport; LLVMOption; ). # Platform dependencies.; if( WIN32 ); target_link_libraries(stylecheck.exe; shlwapi; ); else(); target_link_libraries(stylecheck.exe; pthread; dl; ncurses; z; ); endif(). install(TARGETS stylecheck.exe; RUNTIME DESTINATION bin); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/stylechecker/CMakeLists.txt:160,configurat,configuration,160,tools/stylechecker/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/stylechecker/CMakeLists.txt,3,"['configurat', 'install']","['configuration', 'install']"
Deployability,"cmake_minimum_required(VERSION 3.22); project(BulletCollisionDetection LANGUAGES CXX VERSION 0.1). #WARNING, when installing bullet write in the bullet CMakeLists.txt the line add_definitions(-DBULLET_TRIANGLE_COLLISION); # todo: is it possible to do a platform check for BULLET_TRIANGLE_COLLISION?. set(BULLETCOLLISIONDETECTION_SRC src/BulletCollisionDetection); set(HEADER_FILES; ${BULLETCOLLISIONDETECTION_SRC}/config.h.in; ${BULLETCOLLISIONDETECTION_SRC}/init.h; ${BULLETCOLLISIONDETECTION_SRC}/BtDynamicMesh.h; ${BULLETCOLLISIONDETECTION_SRC}/BtInterManager.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletCapsuleModel.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletCapsuleModel.inl; ${BULLETCOLLISIONDETECTION_SRC}/BulletCollisionDetection.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletCollisionModel.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContactMapper.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullModel.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullModel.inl; ${BULLETCOLLISIONDETECTION_SRC}/BulletCylinderModel.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletCylinderModel.inl; ${BULLETCOLLISIONDETECTION_SRC}/BulletOBBModel.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletOBBModel.inl; ${BULLETCOLLISIONDETECTION_SRC}/BulletSphereModel.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletSphereModel.inl; ${BULLETCOLLISIONDETECTION_SRC}/BulletTriangleModel.h; ${BULLETCOLLISIONDETECTION_SRC}/BulletTriangleModel.inl; ). set(SOURCE_FILES; ${BULLETCOLLISIONDETECTION_SRC}/init.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletCapsuleModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletCollisionDetection.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContactMapper.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContacts.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletCylinderModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletOBBModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletSphereModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletTriangleModel.cpp; ). s",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt:114,install,installing,114,applications/plugins/BulletCollisionDetection/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt,1,['install'],['installing']
Deployability,"cmake_minimum_required(VERSION 3.22); project(CImgPlugin VERSION 0.1). set(HEADER_FILES; src/CImgPlugin/ImageCImg.h; src/CImgPlugin/CImgPlugin.h.in; src/CImgPlugin/SOFACImg.h; ). set(SOURCE_FILES; src/CImgPlugin/ImageCImg.cpp; src/CImgPlugin/initCImgPlugin.cpp; ). sofa_find_package(Sofa.Helper REQUIRED); sofa_find_package(Sofa.DefaultType REQUIRED). # add FindCImg.cmake; list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake); configure_file(${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindCImg.cmake ${CMAKE_BINARY_DIR}/lib/cmake/FindCImg.cmake COPYONLY); install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindCImg.cmake DESTINATION lib/cmake/${PROJECT_NAME} COMPONENT headers). sofa_find_package(CImg QUIET). if(NOT CImg_FOUND AND SOFA_ALLOW_FETCH_DEPENDENCIES); message(""CImgPlugin: DEPENDENCY CImg NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is ON, fetching CImg...""). include(FetchContent); FetchContent_Declare(CImg; GIT_REPOSITORY https://github.com/GreycLab/CImg; GIT_TAG v.3.3.2; ). FetchContent_GetProperties(CImg); if(NOT CImg_POPULATED); FetchContent_Populate(CImg). set(CIMG_H_DIR ${cimg_SOURCE_DIR}); sofa_find_package(CImg REQUIRED); endif(); elseif (NOT CImg_FOUND); message(FATAL_ERROR ""CImgPlugin: DEPENDENCY CImg NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install cimg-dev, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # OS X only: if the user installed its own JPEG/PNG lib (typically with homebrew/port),; # it will allow to use those instead of those present in XCode's frameworks; set(CMAKE_FIND_FRAMEWORK LAST). sofa_find_package(TIFF QUIET); sofa_find_package(ZSTD QUIET); sofa_find_package(JPEG QUIET); sofa_find_package(PNG QUIET); sofa_find_package(ZLIB QUIET). # Configure Paths according to detected packages; set(DEP_TARGETS """"); set(CIMG_CFLAGS -Dcimg_no_system_calls) # Remove CImg sys calls; if(TIFF_FOUND AND ( NOT(SOFA_BUILD_RELEASE_PACKAGE) OR ZSTD_FOUND)); message(STATUS ""CImgPlugin: TIFF Image Format ena",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt:560,install,install,560,applications/plugins/CImgPlugin/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt,1,['install'],['install']
Deployability,"cmake_minimum_required(VERSION 3.22); project(Geomagic VERSION 0.1). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Controller REQUIRED); sofa_find_package(Sofa.Component.IO.Mesh REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.Mapping.NonLinear REQUIRED); sofa_find_package(Sofa.GL.Component.Rendering3D REQUIRED); sofa_find_package(Sofa.Component.Haptics REQUIRED). sofa_find_package(OpenHaptics QUIET); if( NOT OPENHAPTICS_FOUND ); message(WARNING ""OpenHaptics dependency not found, Geomagic will miss all haptic features.""); endif(). set(GEOMAGIC_SRC_DIR src/Geomagic). set(HEADER_FILES; ${GEOMAGIC_SRC_DIR}/config.h.in; ${GEOMAGIC_SRC_DIR}/GeomagicDriver.h; ${GEOMAGIC_SRC_DIR}/GeomagicEmulator.h; ${GEOMAGIC_SRC_DIR}/GeomagicVisualModel.h; ); set(SOURCE_FILES	 ; ${GEOMAGIC_SRC_DIR}/GeomagicDriver.cpp; ${GEOMAGIC_SRC_DIR}/GeomagicEmulator.cpp; ${GEOMAGIC_SRC_DIR}/GeomagicVisualModel.cpp; ${GEOMAGIC_SRC_DIR}/initPlugin.cpp; ); set(README_FILES README.txt). # Create the plugin library.; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}). # Link the plugin library to its dependencies (other libraries).; target_link_libraries(${PROJECT_NAME} Sofa.Component.Controller Sofa.Component.IO.Mesh Sofa.Component.StateContainer Sofa.Component.Mapping.NonLinear Sofa.Component.Haptics Sofa.GL.Component.Rendering3D); if(OPENHAPTICS_FOUND); target_link_libraries(${PROJECT_NAME} ${OPENHAPTICS_LIBRARIES}) ; target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${OPENHAPTICS_INCLUDE_DIR}>""); endif(). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Geomagic/CMakeLists.txt:1628,Install,Install,1628,applications/plugins/Geomagic/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Geomagic/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,"cmake_minimum_required(VERSION 3.22); project(Haption). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Haptics REQUIRED); sofa_find_package(Sofa.GL.Component.Rendering3D REQUIRED); sofa_find_package(Sofa.Component.Mapping.NonLinear REQUIRED); sofa_find_package(Sofa.Component.Controller REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED). set(HEADER_FILES; HaptionDriver.h; ). set(SOURCE_FILES; initHaption.cpp ; HaptionDriver.cpp; initHaption.cpp; ). set(README_FILES; README.md; PluginHaption.txt; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_HAPTIONPLUGIN""); target_link_libraries(${PROJECT_NAME}; Sofa.Component.Haptics; Sofa.GL.Component.Rendering3D; Sofa.Component.Mapping.NonLinear; Sofa.Component.Controller; Sofa.Component.StateContainer; ); include_directories(""${CMAKE_CURRENT_SOURCE_DIR}/..""). install(TARGETS ${PROJECT_NAME}; COMPONENT Haption_libraries; EXPORT HaptionTargets; RUNTIME DESTINATION bin; LIBRARY DESTINATION lib; ARCHIVE DESTINATION lib). install(DIRECTORY exemple/ DESTINATION share/sofa/plugins/${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Haption/CMakeLists.txt:966,install,install,966,applications/plugins/Haption/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Haption/CMakeLists.txt,2,['install'],['install']
Deployability,"cmake_minimum_required(VERSION 3.22); project(LeapMotion). set(LEAPMOTION_MAJOR_VERSION 0); set(LEAPMOTION_MINOR_VERSION 1); set(LEAPMOTION_VERSION ${LEAPMOTION_MAJOR_VERSION}.${LEAPMOTION_MINOR_VERSION}). set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""). find_package(SofaFramework REQUIRED); find_package(SofaBase REQUIRED); find_package(SofaGeneral REQUIRED); find_package(SofaOpenglVisual REQUIRED); find_package(Leap REQUIRED). include_directories(${CMAKE_CURRENT_SOURCE_DIR}/src); set(LEAPMOTION_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/src). set(HEADER_FILES; initLeapMotion.h; src/LeapMotionDriver.h; src/MyListener.h; ). set(SOURCE_FILES; initLeapMotion.cpp; src/LeapMotionDriver.cpp; src/MyListener.cpp; ). add_library(${PROJECT_NAME} SHARED ${MOC_FILES} ${SOURCE_FILES} ${README_FILES}). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${LEAPMOTION_INCLUDE_DIRS}>""); target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${LEAPMOTION_INCLUDE_DIRS}/..>""); target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${LEAP_INCLUDE_DIR}>""). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${LEAPMOTION_VERSION}). target_link_libraries(${PROJECT_NAME} Sofa.Helper SofaOpenglVisual SofaUserInteraction ${LEAP_LIBRARY}). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR src; ). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/LeapMotion/CMakeLists.txt:1315,Install,Install,1315,applications/plugins/LeapMotion/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/LeapMotion/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,"cmake_minimum_required(VERSION 3.22); project(PersistentContact). set(HEADER_FILES; config.h; PersistentContactBarycentricMapping.h; PersistentContactBarycentricMapping.inl; PersistentContactMapping.h; PersistentContactRigidMapping.h; PersistentContactRigidMapping.inl; PersistentFrictionContact.h; PersistentFrictionContact.inl; PersistentUnilateralInteractionConstraint.h; PersistentUnilateralInteractionConstraint.inl; ). set(SOURCE_FILES; PersistentContactBarycentricMapping.cpp; PersistentContactMapping.cpp; PersistentContactRigidMapping.cpp; PersistentFrictionContact.cpp; PersistentUnilateralInteractionConstraint.cpp; initPersistentContact.cpp; ). set(README_FILES PersistentContact.txt). set(README_FILES; 	PersistentContact.txt). find_package(SofaBaseMechanics REQUIRED); find_package(SofaRigid REQUIRED); find_package(SofaConstraint REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_PERSISTENTCONTACT""); target_link_libraries(${PROJECT_NAME} SofaBaseMechanics SofaRigid SofaConstraint); include_directories(""${CMAKE_CURRENT_SOURCE_DIR}/..""). install(TARGETS ${PROJECT_NAME}; COMPONENT PersistentContact_libraries; EXPORT PersistentContactTargets; RUNTIME DESTINATION bin; LIBRARY DESTINATION lib; ARCHIVE DESTINATION lib; PUBLIC_HEADER DESTINATION ""include/${PROJECT_NAME}""). install(DIRECTORY examples/ DESTINATION share/sofa/plugins/${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/PersistentContact/CMakeLists.txt:1177,install,install,1177,applications/plugins/PersistentContact/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/PersistentContact/CMakeLists.txt,2,['install'],['install']
Deployability,"cmake_minimum_required(VERSION 3.22); project(SceneCreator VERSION 0.1). sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Eigen3 REQUIRED). set(HEADER_FILES; src/SceneCreator/config.h.in; src/SceneCreator/GetAssembledSizeVisitor.h; src/SceneCreator/GetVectorVisitor.h; src/SceneCreator/SceneCreator.h; src/SceneCreator/SceneUtils.h; ); set(SOURCE_FILES; src/SceneCreator/GetAssembledSizeVisitor.cpp; src/SceneCreator/GetVectorVisitor.cpp; src/SceneCreator/SceneCreator.cpp; src/SceneCreator/SceneUtils.cpp; src/SceneCreator/initSceneCreator.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Graph Sofa.SimpleApi Sofa.Component.StateContainer); target_link_libraries(${PROJECT_NAME} PUBLIC Eigen3::Eigen); target_compile_definitions(${PROJECT_NAME} PRIVATE ""-DSOFA_BUILD_SCENECREATOR""). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SceneCreator""; RELOCATABLE ""plugins""; ). ## Add example project to use sceneCreator; sofa_find_package(Sofa.GUI.Common QUIET); if(Sofa.GUI.Common_FOUND); add_subdirectory(sceneCreatorExamples); else(); message(STATUS ""${PROJECT_NAME}: Sofa.GUI.Common not found, sceneCreatorExamples will not be built.""); endif(). ## Add test project; if(SOFA_BUILD_TESTS); add_subdirectory(SceneCreator_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SceneCreator/CMakeLists.txt:1000,Install,Install,1000,applications/plugins/SceneCreator/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SceneCreator/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,"cmake_minimum_required(VERSION 3.22); project(Sensable). find_package(SofaHaptics REQUIRED); find_package(SofaOpenglVisual REQUIRED); find_package(SofaGeneral REQUIRED). set(HEADER_FILES; EnslavementForceFeedback.h; NewOmniDriver.h; OmniDriver.h; ). set(SOURCE_FILES; EnslavementForceFeedback.cpp; NewOmniDriver.cpp; OmniDriver.cpp; initSensable.cpp; ). set(README_FILES PluginSensable.txt). list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}""); include_directories(${OPENHAPTICS_INCLUDE_DIR}); include_directories(${OPENHAPTICS_UTIL_INCLUDE_DIR}); include_directories(""${CMAKE_CURRENT_SOURCE_DIR}/..""). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_SENSABLEPLUGIN""); target_link_libraries(${PROJECT_NAME} SofaHaptics SofaOpenglVisual ${OPENHAPTICS_LIBRARIES}). install(TARGETS ${PROJECT_NAME}; COMPONENT Sensable_libraries; EXPORT SensableTargets; RUNTIME DESTINATION bin; LIBRARY DESTINATION lib; ARCHIVE DESTINATION lib). install(DIRECTORY examples/ DESTINATION share/sofa/plugins/${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Sensable/CMakeLists.txt:886,install,install,886,applications/plugins/Sensable/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Sensable/CMakeLists.txt,2,['install'],['install']
Deployability,"cmake_minimum_required(VERSION 3.22); project(SensableEmulation). set(HEADER_FILES; OmniDriverEmu.h; config.h; ). set(SOURCE_FILES; OmniDriverEmu.cpp; initSensableEmulation.cpp; ). set(README_FILES PluginSensableEmulation.txt). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Haptics REQUIRED); sofa_find_package(Sofa.Component.Controller REQUIRED); sofa_find_package(Sofa.GL.Component.Rendering3D REQUIRED); sofa_find_package(Boost COMPONENTS thread REQUIRED). include_directories(${Boost_INCLUDE_DIRS}). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_SENSABLEEMULATIONPLUGIN""); target_link_libraries(${PROJECT_NAME} Sofa.Component.Haptics Sofa.Component.Controller Sofa.GL.Component.Rendering3D Boost::thread). include_directories(""${CMAKE_CURRENT_SOURCE_DIR}/..""). # Seems to be required by boost::asio; if(UNIX); target_link_libraries(${PROJECT_NAME} pthread); endif(). install(TARGETS ${PROJECT_NAME}; COMPONENT SensableEmulation_libraries; EXPORT SensableEmulationTargets; RUNTIME DESTINATION bin; LIBRARY DESTINATION lib; ARCHIVE DESTINATION lib). install(DIRECTORY examples/ DESTINATION share/sofa/plugins/${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SensableEmulation/CMakeLists.txt:1010,install,install,1010,applications/plugins/SensableEmulation/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SensableEmulation/CMakeLists.txt,2,['install'],['install']
Deployability,"cmake_minimum_required(VERSION 3.22); project(SixenseHydra). set(HEADER_FILES; RazerHydraDriver.h; config.h; ). set(SOURCE_FILES; RazerHydraDriver.cpp; initSixenseHydra.cpp; ). find_package(SofaGeneral REQUIRED); find_package(SofaOpenglVisual REQUIRED). list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""); find_package(Sixense REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_SIXENSE_HYDRA""); target_link_libraries(${PROJECT_NAME} SofaBaseLinearSolver SofaBaseTopology SofaOpenglVisual; SofaMeshCollision SofaSimpleFem SofaConstraint SofaUserInteraction); include_directories(${SIXENSE_INCLUDE_DIR}); target_link_libraries(${PROJECT_NAME} ${SIXENSE_LIBRARY} ${SIXENSE_UTILS_LIBRARY}); include_directories(""${CMAKE_CURRENT_SOURCE_DIR}/..""). install(TARGETS ${PROJECT_NAME}; COMPONENT SixenseHydra_libraries; EXPORT SixenseHydraTargets; RUNTIME DESTINATION bin; LIBRARY DESTINATION lib; ARCHIVE DESTINATION lib). install(DIRECTORY Scenes/ DESTINATION share/sofa/plugins/${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SixenseHydra/CMakeLists.txt:864,install,install,864,applications/plugins/SixenseHydra/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SixenseHydra/CMakeLists.txt,2,['install'],['install']
Deployability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Config LANGUAGES CXX). list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules""); list(APPEND CMAKE_PREFIX_PATH ""${CMAKE_BINARY_DIR}/lib/cmake""). include(SofaMacros). # Clear internal target list (set by the macro sofa_add_generic() ); set_property(GLOBAL PROPERTY __GlobalTargetList__ """"); set_property(GLOBAL PROPERTY __GlobalTargetNameList__ """"). # Help RELOCATABLE plugins to resolve their dependencies.; # See SofaMacrosInstall.cmake for usage of this property.; define_property(TARGET; PROPERTY ""RELOCATABLE_INSTALL_DIR""; BRIEF_DOCS ""Install directory of RELOCATABLE target""; FULL_DOCS ""Install directory of RELOCATABLE target""; ). # Enable the organisation in folders for generators that support; # it. (E.g. some versions of Visual Studio have 'solution folders'); set_property(GLOBAL PROPERTY USE_FOLDERS ON). ### Sofa using type double or float; set(SOFA_FLOATING_POINT_TYPE double CACHE STRING; ""Type used for floating point values in SOFA. It actually determines:; - what template instanciations will be compiled (via the definition of the; SOFA_FLOAT and SOFA_DOUBLE macros); - what is the type behind the 'SReal' typedef used throughout SOFA.""); set_property(CACHE SOFA_FLOATING_POINT_TYPE PROPERTY STRINGS float double). if(${SOFA_FLOATING_POINT_TYPE} STREQUAL double); set(SOFA_DOUBLE 1); set(SOFA_FLOAT 0); elseif(${SOFA_FLOATING_POINT_TYPE} STREQUAL float); set(SOFA_DOUBLE 0); set(SOFA_FLOAT 1); endif(). # If you really don't understand the negated logics of SOFA_DOUBLE and; # SOFA_FLOAT please consider using SOFA_WITH_FLOAT and SOFA_WITH_DOUBLE.; # Eg: SOFA_WITH_FLOAT indicate that you need to generate the; # float code and SOFA_WITH_DOUBLE indicates that you; # need to generate the double related code.; if(${SOFA_FLOATING_POINT_TYPE} STREQUAL float); set(SOFA_WITH_FLOAT 1); set(SOFA_WITH_DOUBLE 0); endif(); if(${SOFA_FLOATING_POINT_TYP",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:676,Install,Install,676,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,2,['Install'],['Install']
Deployability,"cmake_minimum_required(VERSION 3.22); project(Sofa.GUI.Common LANGUAGES CXX). find_package(cxxopts 3.1 QUIET); if(NOT cxxopts_FOUND AND SOFA_ALLOW_FETCH_DEPENDENCIES); message(""Sofa.GUI.Common: DEPENDENCY cxxopts NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is ON, fetching cxxopts...""). include(FetchContent); FetchContent_Declare(cxxopts; GIT_REPOSITORY https://github.com/jarro2783/cxxopts; GIT_TAG v3.1.1; ). FetchContent_GetProperties(cxxopts); if(NOT cxxopts_POPULATED); FetchContent_Populate(cxxopts). set(CXXOPTS_BUILD_EXAMPLES OFF CACHE INTERNAL """"); set(CXXOPTS_BUILD_TESTS OFF CACHE INTERNAL """"); set(CXXOPTS_ENABLE_INSTALL ON CACHE INTERNAL """"); message(""Sofa.GUI.Common: adding subdirectory ${cxxopts_SOURCE_DIR}""). add_subdirectory(${cxxopts_SOURCE_DIR} ${cxxopts_BINARY_DIR}); endif(); elseif (NOT cxxopts_FOUND); message(FATAL_ERROR ""Sofa.GUI.Common: DEPENDENCY cxxopts NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install libcxxopts-dev (version>=3.1.0), or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). set(SOFAGUICOMMON_ROOT src/sofa/gui/common). set(HEADER_FILES; ${SOFAGUICOMMON_ROOT}/config.h.in; ${SOFAGUICOMMON_ROOT}/init.h; ${SOFAGUICOMMON_ROOT}/BaseGUI.h; ${SOFAGUICOMMON_ROOT}/BaseViewer.h; ${SOFAGUICOMMON_ROOT}/ColourPickingVisitor.h; ${SOFAGUICOMMON_ROOT}/FilesRecentlyOpenedManager.h; ${SOFAGUICOMMON_ROOT}/GuiDataRepository.h; ${SOFAGUICOMMON_ROOT}/GUIManager.h; ${SOFAGUICOMMON_ROOT}/MouseOperations.h; ${SOFAGUICOMMON_ROOT}/OperationFactory.h; ${SOFAGUICOMMON_ROOT}/PickHandler.h; ${SOFAGUICOMMON_ROOT}/ViewerFactory.h; ${SOFAGUICOMMON_ROOT}/ArgumentParser.h; ). set(SOURCE_FILES; ${SOFAGUICOMMON_ROOT}/init.cpp; ${SOFAGUICOMMON_ROOT}/BaseGUI.cpp; ${SOFAGUICOMMON_ROOT}/BaseViewer.cpp; ${SOFAGUICOMMON_ROOT}/ColourPickingVisitor.cpp; ${SOFAGUICOMMON_ROOT}/FilesRecentlyOpenedManager.cpp; ${SOFAGUICOMMON_ROOT}/GuiDataRepository.cpp; ${SOFAGUICOMMON_ROOT}/GUIManager.cpp; ${SOFAGUICOMMON_ROOT}/MouseOperations.cpp; ${SO",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Common/CMakeLists.txt:958,Install,Install,958,Sofa/GUI/Common/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Common/CMakeLists.txt,1,['Install'],['Install']
Deployability,"cmake_minimum_required(VERSION 3.22); project(Sofa.GUI.HeadlessRecorder). find_package(Sofa.GL REQUIRED); sofa_find_package(Sofa.GUI.Common REQUIRED). # FFMPEG; find_package(FFMPEG_exec). # X11; sofa_find_package(X11 QUIET); if(X11_FOUND); message(""Found X11 libraries""); include_directories(${X11_INCLUDE_DIR}); else(); message(SEND_ERROR ""Can't find X11 libraries.""); endif(). set(SRC_ROOT src/sofa/gui/headlessrecorder). set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/init.h; ${SRC_ROOT}/HeadlessRecorder.h; ). set(SOURCE_FILES; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/HeadlessRecorder.cpp; ). if(SOFA_BUILD_TESTS); configure_file(${SRC_ROOT}/headlessRecorder_test.sh ${CMAKE_BINARY_DIR}/bin/headlessRecorder_test COPYONLY); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.Common Sofa.GL); target_link_libraries(${PROJECT_NAME} PUBLIC ${X11_LIBRARIES}). # Create build and install versions of .ini file for resources finding; set(FFMPEG_EXEC_PATH ""${FFMPEG_EXEC_FILE}"") # FFMPEG_EXEC_FILE is set by FindFFMEG_exec.cmake; configure_file(${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in ""${CMAKE_BINARY_DIR}/etc/${PROJECT_NAME}.ini""); get_filename_component(FFMPEG_EXEC_FILENAME ""${FFMPEG_EXEC_FILE}"" NAME); set(FFMPEG_EXEC_PATH ""../bin/${FFMPEG_EXEC_FILENAME}"") # relative path for install dir, see .ini file; configure_file(${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini"" DESTINATION etc RENAME ${PROJECT_NAME}.ini COMPONENT applications). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/HeadlessRecorder/CMakeLists.txt:962,install,install,962,Sofa/GUI/HeadlessRecorder/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/HeadlessRecorder/CMakeLists.txt,5,['install'],"['install', 'installed']"
Deployability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Simulation.Core). set(SRC_ROOT ""src/sofa/simulation""). set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/AnimateBeginEvent.h; ${SRC_ROOT}/AnimateEndEvent.h; ${SRC_ROOT}/AnimateVisitor.h; ${SRC_ROOT}/BaseMechanicalVisitor.h; ${SRC_ROOT}/BehaviorUpdatePositionVisitor.h; ${SRC_ROOT}/CactusStackStorage.h; ${SRC_ROOT}/CleanupVisitor.h; ${SRC_ROOT}/CollisionAnimationLoop.h; ${SRC_ROOT}/CollisionBeginEvent.h; ${SRC_ROOT}/CollisionEndEvent.h; ${SRC_ROOT}/CollisionVisitor.h; ${SRC_ROOT}/Colors.h; ${SRC_ROOT}/CpuTask.h; ${SRC_ROOT}/CpuTaskStatus.h; ${SRC_ROOT}/DeactivatedNodeVisitor.h; ${SRC_ROOT}/DefaultAnimationLoop.h; ${SRC_ROOT}/DefaultVisualManagerLoop.h; ${SRC_ROOT}/DeleteVisitor.h; ${SRC_ROOT}/ExportDotVisitor.h; ${SRC_ROOT}/ExportGnuplotVisitor.h; ${SRC_ROOT}/ExportVisualModelOBJVisitor.h; ${SRC_ROOT}/InitVisitor.h; ${SRC_ROOT}/IntegrateBeginEvent.h; ${SRC_ROOT}/IntegrateEndEvent.h; ${SRC_ROOT}/LocalStorage.h; ${SRC_ROOT}/MechanicalOperations.h; ${SRC_ROOT}/MechanicalVPrintVisitor.h; ${SRC_ROOT}/MechanicalVisitor.h; ${SRC_ROOT}/MutationListener.h; ${SRC_ROOT}/Node.h; ${SRC_ROOT}/Node.inl; ${SRC_ROOT}/ParallelForEach.h; ${SRC_ROOT}/ParallelSparseMatrixProduct.h; ${SRC_ROOT}/ParallelVisitorScheduler.h; ${SRC_ROOT}/PauseEvent.h; ${SRC_ROOT}/PipelineImpl.h; ${SRC_ROOT}/PositionEvent.h; ${SRC_ROOT}/PrintVisitor.h; ${SRC_ROOT}/PropagateEventVisitor.h; ${SRC_ROOT}/RequiredPlugin.h; ${SRC_ROOT}/ResetVisitor.h; ${SRC_ROOT}/SceneLoaderFactory.h; ${SRC_ROOT}/Simulation.h; ${SRC_ROOT}/SimulationLoop.h; ${SRC_ROOT}/SolveVisitor.h; ${SRC_ROOT}/StateChangeVisitor.h; ${SRC_ROOT}/TopologyChangeVisitor.h; ${SRC_ROOT}/UpdateBoundingBoxVisitor.h; ${SRC_ROOT}/UpdateContextVisitor.h; ${SRC_ROOT}/UpdateInternalDataVisitor.h; ${SRC_ROOT}/UpdateLinksVisitor.h; ${SRC_ROOT}/UpdateMappingEndEvent.h; ${SRC_ROOT}/UpdateMappingVisitor.h; ${SRC_ROOT}/VectorOperations.h; ${SRC_ROOT}/VelocityThresholdVisitor.h; ${SRC_ROOT}/Visit",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:913,Integrat,IntegrateBeginEvent,913,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,2,['Integrat'],"['IntegrateBeginEvent', 'IntegrateEndEvent']"
Deployability,"cmake_minimum_required(VERSION 3.22); project(Sofa; HOMEPAGE_URL https://www.sofa-framework.org/; ) # Cannot use VERSION with patch like ""00"". include(CMakeDependentOption). # Manually define VERSION; set(Sofa_VERSION_MAJOR 24); set(Sofa_VERSION_MINOR 06); set(Sofa_VERSION_PATCH 00); set(Sofa_VERSION ${Sofa_VERSION_MAJOR}.${Sofa_VERSION_MINOR}.${Sofa_VERSION_PATCH}). set(SOFA_URL ""${CMAKE_PROJECT_HOMEPAGE_URL}""). set(SOFA_VERSION_STR ""\""${Sofa_VERSION}\""""); set(SOFA_VERSION ""${Sofa_VERSION_MAJOR}${Sofa_VERSION_MINOR}${Sofa_VERSION_PATCH}""). ## Default build type; if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES); message(STATUS ""Setting build type to Release as none was specified.""); set(CMAKE_BUILD_TYPE ""Release"" CACHE STRING ""Build type"" FORCE); endif(). # Output Directories definition; set(ARCHIVE_OUTPUT_DIRECTORY lib); set(RUNTIME_OUTPUT_DIRECTORY bin); if(WIN32); set(LIBRARY_OUTPUT_DIRECTORY ${RUNTIME_OUTPUT_DIRECTORY}); else(); set(LIBRARY_OUTPUT_DIRECTORY ${ARCHIVE_OUTPUT_DIRECTORY}); endif(); ## Set the output directories globally; set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${ARCHIVE_OUTPUT_DIRECTORY}); set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${RUNTIME_OUTPUT_DIRECTORY}); set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${LIBRARY_OUTPUT_DIRECTORY}). # Option for packaging; option(SOFA_BUILD_RELEASE_PACKAGE ""Run package specific configure"" OFF). # Option to allow some dependencies such as cxxopts to be fetched by cmake if; # the package is not found; option(SOFA_ALLOW_FETCH_DEPENDENCIES ""Allow compatible dependencies to be fetched if the package is not found by cmake.; List of dependencies that can be fetched: cxxopts, gtest, metis, CImg"" ON). # Option to accelerate the compilation; # see https://cmake.org/cmake/help/v3.16/command/target_precompile_headers.html; # and https://cmake.org/cmake/help/v3.16/prop_tgt/DISABLE_PRECOMPILE_HEADERS.html. # https://cmake.org/cmake/help/latest/policy/CMP0127.html; if (${CMAKE_VERSI",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:126,patch,patch,126,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,3,"['Release', 'patch']","['Release', 'patch']"
Deployability,"cmake_minimum_required(VERSION 3.22); project(SofaCarving VERSION 0.1 LANGUAGES CXX). set(SOFACARVING_SRC src/SofaCarving). set(HEADER_FILES; ${SOFACARVING_SRC}/config.h.in; ${SOFACARVING_SRC}/init.h; ${SOFACARVING_SRC}/CarvingManager.h; ). set(SOURCE_FILES; ${SOFACARVING_SRC}/init.cpp; ${SOFACARVING_SRC}/CarvingManager.cpp; ). set(README_FILES SofaCarving.txt). find_package(Sofa.GUI.Component REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}). target_link_libraries(${PROJECT_NAME} Sofa.GUI.Component). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ). if(SOFA_BUILD_TESTS); add_subdirectory(SofaCarving_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCarving/CMakeLists.txt:555,Install,Install,555,applications/plugins/SofaCarving/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCarving/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,"cmake_minimum_required(VERSION 3.22); project(SofaEulerianFluid VERSION 1.0). find_package(Sofa.Core REQUIRED); find_package(Sofa.GL REQUIRED). set(HEADER_FILES; Fluid2D.h; Fluid3D.h; Grid2D.h; Grid3D.h; config.h; initEulerianFluid.h; ). set(SOURCE_FILES; Fluid2D.cpp; Fluid3D.cpp; Grid2D.cpp; Grid3D.cpp; initEulerianFluid.cpp; ). set(EXTRA_FILES; README.md; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Core Sofa.GL). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaEulerianFluid/CMakeLists.txt:508,Install,Install,508,applications/plugins/SofaEulerianFluid/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaEulerianFluid/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,cmake_minimum_required(VERSION 3.22); project(SofaGTestMain). ## Dependencies; sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(GTest REQUIRED). add_library(${PROJECT_NAME} SofaGTestMain.cpp); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.Simulation.Graph); target_link_libraries(${PROJECT_NAME} PUBLIC GTest::gtest). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; ). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Testing); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/SofaGTestMain/CMakeLists.txt:357,Install,Install,357,Sofa/framework/Testing/SofaGTestMain/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/SofaGTestMain/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,"cmake_minimum_required(VERSION 3.22); project(SofaImplicitField VERSION 1.0). sofa_find_package(Sofa.Framework REQUIRED); sofa_find_package(SofaDistanceGrid REQUIRED). set(HEADER_FILES; config.h.in; initSofaImplicitField.h. # This is backward compatibility; deprecated/SphereSurface.h; deprecated/ImplicitSurfaceContainer.h # This is a backward compatibility file toward ScalarField; deprecated/InterpolatedImplicitSurface.h # This is a backward compatibility file toward DiscreteridField. components/geometry/BottleField.h; components/geometry/DiscreteGridField.h; components/geometry/SphericalField.h; components/geometry/ScalarField.h; components/geometry/StarShapedField.h; components/mapping/ImplicitSurfaceMapping.h; components/mapping/ImplicitSurfaceMapping.inl; ). set(SOURCE_FILES; initSofaImplicitField.cpp. ## This is a backward compatibility..; deprecated/SphereSurface.cpp; deprecated/InterpolatedImplicitSurface.cpp. components/geometry/BottleField.cpp; components/geometry/ScalarField.cpp; components/geometry/DiscreteGridField.cpp; components/geometry/SphericalField.cpp; components/geometry/StarShapedField.cpp; components/mapping/ImplicitSurfaceMapping.cpp; ). set(EXTRA_FILES; README.md; examples/README.md; ). if(SOFA_BUILD_TESTS); add_subdirectory(SofaImplicitField_test); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}); target_compile_options(${PROJECT_NAME} PRIVATE ""-DSOFA_BUILD_SOFAIMPLICITFIELD""); target_link_libraries(${PROJECT_NAME} PRIVATE SofaDistanceGrid). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaImplicitField/CMakeLists.txt:1537,Install,Install,1537,applications/plugins/SofaImplicitField/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaImplicitField/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,"cmake_minimum_required(VERSION 3.22); project(SofaMatrix VERSION 1.0 LANGUAGES CXX). sofa_find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Solver REQUIRED); sofa_find_package(Sofa.Component.LinearSolver.Direct REQUIRED); sofa_find_package(Eigen3 REQUIRED); sofa_find_package(Sofa.GUI.Qt QUIET). find_package(metis 5.1.0 EXACT QUIET); if(NOT metis_FOUND AND SOFA_ALLOW_FETCH_DEPENDENCIES); message(""SofaMatrix: DEPENDENCY metis NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is ON, fetching metis...""); include(FetchContent); FetchContent_Declare(metis; GIT_REPOSITORY https://github.com/sofa-framework/METIS; GIT_TAG v5.1.0-ModernInstall; ); FetchContent_MakeAvailable(metis); elseif (NOT metis_FOUND); message(FATAL_ERROR ""SofaMatrix: DEPENDENCY metis NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install metis (version=5.1.0), or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). set(SOFA_MODULES; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.LinearSolver.Direct; Sofa.Core; Eigen3::Eigen; ). set(SOFAMATRIX_SRC_DIR src/${PROJECT_NAME}). set(HEADER_FILES; ${SOFAMATRIX_SRC_DIR}/config.h.in; ${SOFAMATRIX_SRC_DIR}/ComplianceMatrixExporter.h; ${SOFAMATRIX_SRC_DIR}/GlobalSystemMatrixExporter.h; ${SOFAMATRIX_SRC_DIR}/MatrixImageExporter.h; ${SOFAMATRIX_SRC_DIR}/FillReducingOrdering.h; ${SOFAMATRIX_SRC_DIR}/FillReducingOrdering.inl; ); set(SOURCE_FILES; ${SOFAMATRIX_SRC_DIR}/initSofaMatrix.cpp; ${SOFAMATRIX_SRC_DIR}/ComplianceMatrixExporter.cpp; ${SOFAMATRIX_SRC_DIR}/GlobalSystemMatrixExporter.cpp; ${SOFAMATRIX_SRC_DIR}/MatrixImageExporter.cpp; ${SOFAMATRIX_SRC_DIR}/FillReducingOrdering.cpp; ); set(README_FILES; SofaMatrix.md; ); set(MOC_FILES; ); set(MOC_HEADER_FILES; ). if (NOT Sofa.GUI.Qt_FOUND); message(NOTICE ""[SofaMatrix] Module Sofa.GUI.Qt not found: some components (GlobalSystemMatrixImage) will not be compiled""); else(); list(APPEND HEADER_FILES; ${SOFAMATRIX_SRC_DIR}/ComplianceMatr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/CMakeLists.txt:863,Install,Install,863,applications/plugins/SofaMatrix/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/CMakeLists.txt,1,['Install'],['Install']
Deployability,"cmake_minimum_required(VERSION 3.22); project(SofaPardisoSolver). set(SOFAPARDISOSOLVER_MAJOR_VERSION 0); set(SOFAPARDISOSOLVER_MINOR_VERSION 1); set(SOFAPARDISOSOLVER_VERSION ${SOFAPARDISOSOLVER_MAJOR_VERSION}.${SOFAPARDISOSOLVER_MINOR_VERSION}). set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""). find_package(SofaFramework REQUIRED); find_package(SofaBase REQUIRED). link_directories(""${CMAKE_CURRENT_SOURCE_DIR}/extlibs""); set(SOFAPARDISOSOLVER_LINK_DIR ""${CMAKE_CURRENT_SOURCE_DIR}/extlibs""). find_package(GFortran REQUIRED); find_package(BLAS REQUIRED); find_package(LAPACK REQUIRED); find_package(OpenMP REQUIRED). set(LINKER_DEPENDENCIES ${LINKER_DEPENDENCIES} SofaBase SofaGeneral); set(COMPILATION_FLAGS -DSOFA_BUILD_SOFAPARDISOSOLVER ). set ( PARDISO_LIB """" CACHE FILE ""set to Pardiso library downloaded from the web"" ). set(HEADER_FILES; SparsePARDISOSolver.h; config.h; ). set(SOURCE_FILES; SparsePARDISOSolver.cpp; initPardisoSolver.cpp; ). set(LINKER_DEPENDENCIES ${LINKER_DEPENDENCIES} SofaMeshCollision SofaBaseVisual SofaBaseLinearSolver Sofa.Core); set(LINKER_DEPENDENCIES ${LINKER_DEPENDENCIES} ${PARDISO_LIB} gfortran blas lapack gomp). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${SOFAPARDISOSOLVER_VERSION}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""${COMPILATION_FLAGS}""). target_link_libraries(${PROJECT_NAME} ${LINKER_DEPENDENCIES}). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${SOFAPARDISOSOLVER_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaPardisoSolver/CMakeLists.txt:1499,Install,Install,1499,applications/plugins/SofaPardisoSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaPardisoSolver/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,cmake_minimum_required(VERSION 3.22); project(SofaSimpleGUI). set(SOFASIMPLEGUI_VERSION 0.1). set(HEADER_FILES; Camera.h; Interactor.h; PickedPoint.h; SofaGL.h; SofaScene.h; SpringInteractor.h; VisualPickVisitor.h; config.h.in; ). set(SOURCE_FILES; Camera.cpp; Interactor.cpp; SofaGL.cpp; SofaScene.cpp; SpringInteractor.cpp; VisualPickVisitor.cpp; initSimpleGUI.cpp; ). sofa_find_package(Sofa.Component REQUIRED); sofa_find_package(Eigen3 REQUIRED); sofa_find_package(Sofa.GL REQUIRED); sofa_find_package(Sofa.Simulation.Graph REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component Sofa.GL Sofa.Simulation.Graph); target_link_libraries(${PROJECT_NAME} PUBLIC Eigen3::Eigen). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${SOFASIMPLEGUI_VERSION}). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${SOFASIMPLEGUI_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; ); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaSimpleGUI/CMakeLists.txt:848,Install,Install,848,applications/plugins/SofaSimpleGUI/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaSimpleGUI/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,"cmake_minimum_required(VERSION 3.22); project(SofaTest VERSION 0.1). set(HEADER_FILES; InitPlugin_test.h; Sofa_test.h; ). set(SOURCE_FILES; InitPlugin_test.cpp; Sofa_test.cpp; ). list(APPEND HEADER_FILES; BroadPhase_test.h; DataEngine_test.h; ForceField_test.h; PrimitiveCreation.h; Elasticity_test.h; Elasticity_test.inl; ); list(APPEND SOURCE_FILES; PrimitiveCreation.cpp; Elasticity_test.cpp; ). sofa_find_package(Sofa.Framework REQUIRED); sofa_find_package(Sofa.Component REQUIRED); sofa_find_package(SceneCreator REQUIRED); sofa_find_package(Sofa.Testing REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${PYTHON_FILES}); target_link_libraries(${PROJECT_NAME} SceneCreator Sofa.Framework Sofa.Component Sofa.Testing). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; PACKAGE_VERSION ${PROJECT_VERSION}; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/CMakeLists.txt:755,Install,Install,755,applications/plugins/SofaTest/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,"cmake_minimum_required(VERSION 3.22); project(VolumetricRendering). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.GL.Component REQUIRED). set(HEADER_FILES; src/VolumetricRendering/config.h.in; src/VolumetricRendering/initVolumetricRendering.cpp; src/VolumetricRendering/OglTetrahedralModel.h; src/VolumetricRendering/OglTetrahedralModel.inl; src/VolumetricRendering/OglVolumetricModel.h; ). set(SOURCE_FILES; src/VolumetricRendering/initVolumetricRendering.cpp; src/VolumetricRendering/OglTetrahedralModel.cpp; src/VolumetricRendering/OglVolumetricModel.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} Sofa.GL.Component). # Install rules for the library and the headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). sofa_add_subdirectory(plugin extensions/CUDA VolumetricRendering.CUDA); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/VolumetricRendering/CMakeLists.txt:704,Install,Install,704,applications/plugins/VolumetricRendering/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/VolumetricRendering/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,"cmake_minimum_required(VERSION 3.22); project(Xitact). find_package(SofaOpenglVisual REQUIRED). set(HEADER_FILES; IHPDriver.h; ITPDriver.h; PaceMaker.h; XiTrocarInterface.h; config.h; ). set(SOURCE_FILES; IHPDriver.cpp; ITPDriver.cpp; PaceMaker.cpp; initXitact.cpp; ). set(README_FILES PluginXitact.txt). find_package(SofaGui REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_XITACTPLUGIN""); target_link_libraries(${PROJECT_NAME} SofaMain SofaGui SofaGuiQt XiRobot SofaOpenglVisual); include_directories(""${CMAKE_CURRENT_SOURCE_DIR}/..""). install(TARGETS ${PROJECT_NAME}; COMPONENT Xitact_libraries; EXPORT XitactTargets; RUNTIME DESTINATION bin; LIBRARY DESTINATION lib; ARCHIVE DESTINATION lib). install(DIRECTORY examples/ DESTINATION share/sofa/plugins/${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Xitact/CMakeLists.txt:662,install,install,662,applications/plugins/Xitact/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Xitact/CMakeLists.txt,2,['install'],['install']
Deployability,"cmake_minimum_required(VERSION 3.22); project(runSofa). ###################################; # Generate plugin_list.conf.default; include(cmake/GeneratePluginConfig.cmake); if(MSVC); # plugins are located in bin/; set(_pluginLocation ""bin""); else(); # plugins are located in lib/; set(_pluginLocation ""lib""); endif(); set(_configPluginFileName plugin_list.conf); set(_defaultConfigPluginFileName ""${_configPluginFileName}.default""); set(_defaultConfigPluginFilePath ""${CMAKE_BINARY_DIR}/${_pluginLocation}/${_defaultConfigPluginFileName}""); sofa_generate_plugin_config(${_defaultConfigPluginFilePath}); message(""Write Plugin list at ${_defaultConfigPluginFilePath}""); configure_file(${_defaultConfigPluginFilePath} ${PROJECT_BINARY_DIR}/${_defaultConfigPluginFileName} COPYONLY); install(FILES ""${_defaultConfigPluginFilePath}"" DESTINATION ${_pluginLocation}/ COMPONENT applications); ###################################. sofa_find_package(Sofa.Component.Playback QUIET). sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.GUI.Common REQUIRED); sofa_find_package(Sofa.GUI.Batch REQUIRED); sofa_find_package(SceneChecking REQUIRED). set(HEADER_FILES; runSofaValidation.h; ); set(SOURCE_FILES; Main.cpp; ). if(Sofa.Component.Playback_FOUND); list(APPEND SOURCE_FILES runSofaValidation.cpp); else(); list(APPEND SOURCE_FILES runSofaNoValidation.cpp); endif(). set(RESOURCE_FILES; resources/docs/runsofa.html; ${PROJECT_BINARY_DIR}/${_defaultConfigPluginFileName}; ); if(APPLE); set(RC_FILES ""${CMAKE_CURRENT_SOURCE_DIR}/runSofa.icns""); set_source_files_properties(${RC_FILES} PROPERTIES MACOSX_PACKAGE_LOCATION ""Resources""); else(); set(RC_FILES ""${CMAKE_CURRENT_SOURCE_DIR}/runSofa.rc""); endif(). if(APPLE AND SOFA_BUILD_APP_BUNDLE); add_executable(${PROJECT_NAME} MACOSX_BUNDLE ${RC_FILES} ${RESOURCE_FILES} ${HEADER_FILES} ${SOURCE_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES MACOSX_BUNDLE_INFO_PLIST ""${CMAKE_CURRENT_SOURCE_DIR}/runSofa.plist""); else(); add_execu",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/runSofa/CMakeLists.txt:780,install,install,780,applications/projects/runSofa/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/runSofa/CMakeLists.txt,1,['install'],['install']
Deployability,cpp; ${SRC_ROOT}/IntegrateEndEvent.cpp; ${SRC_ROOT}/MainTaskSchedulerRegistry.cpp; ${SRC_ROOT}/MainTaskSchedulerFactory.cpp; ${SRC_ROOT}/MechanicalOperations.cpp; ${SRC_ROOT}/MechanicalVPrintVisitor.cpp; ${SRC_ROOT}/MechanicalVisitor.cpp; ${SRC_ROOT}/MutationListener.cpp; ${SRC_ROOT}/Node.cpp; ${SRC_ROOT}/PauseEvent.cpp; ${SRC_ROOT}/PipelineImpl.cpp; ${SRC_ROOT}/PositionEvent.cpp; ${SRC_ROOT}/PrintVisitor.cpp; ${SRC_ROOT}/PropagateEventVisitor.cpp; ${SRC_ROOT}/RequiredPlugin.cpp; ${SRC_ROOT}/ResetVisitor.cpp; ${SRC_ROOT}/SceneLoaderFactory.cpp; ${SRC_ROOT}/SceneCheck.cpp; ${SRC_ROOT}/SceneCheckRegistry.cpp; ${SRC_ROOT}/SceneCheckMainRegistry.cpp; ${SRC_ROOT}/Simulation.cpp; ${SRC_ROOT}/SolveVisitor.cpp; ${SRC_ROOT}/StateChangeVisitor.cpp; ${SRC_ROOT}/TopologyChangeVisitor.cpp; ${SRC_ROOT}/UpdateBoundingBoxVisitor.cpp; ${SRC_ROOT}/UpdateContextVisitor.cpp; ${SRC_ROOT}/UpdateInternalDataVisitor.cpp; ${SRC_ROOT}/UpdateLinksVisitor.cpp; ${SRC_ROOT}/UpdateMappingEndEvent.cpp; ${SRC_ROOT}/UpdateMappingVisitor.cpp; ${SRC_ROOT}/VectorOperations.cpp; ${SRC_ROOT}/VelocityThresholdVisitor.cpp; ${SRC_ROOT}/Visitor.cpp; ${SRC_ROOT}/VisualVisitor.cpp; ${SRC_ROOT}/WriteStateVisitor.cpp; ${SRC_ROOT}/XMLPrintVisitor.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/BaseSimulationExporter.cpp; ${SRC_ROOT}/TaskScheduler.cpp; ${SRC_ROOT}/TaskSchedulerFactory.cpp; ${SRC_ROOT}/TaskSchedulerRegistry.cpp; ${SRC_ROOT}/DefaultTaskScheduler.cpp; ${SRC_ROOT}/Task.cpp; ${SRC_ROOT}/InitTasks.cpp; ${SRC_ROOT}/WorkerThread.cpp; ${SRC_ROOT}/events/BuildConstraintSystemEndEvent.cpp; ${SRC_ROOT}/events/SimulationInitDoneEvent.cpp; ${SRC_ROOT}/events/SimulationInitStartEvent.cpp; ${SRC_ROOT}/events/SimulationInitTexturesDoneEvent.cpp; ${SRC_ROOT}/events/SimulationStartEvent.cpp; ${SRC_ROOT}/events/SimulationStopEvent.cpp; ${SRC_ROOT}/events/SolveConstraintSystemEndEvent.cpp. ${SRC_ROOT}/mechanicalvisitor/MechanicalAccFromFVisitor.cpp; ${SRC_ROOT}/mechanicalvisitor/MechanicalAccumulateJacobia,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:8323,Update,UpdateMappingVisitor,8323,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Update'],['UpdateMappingVisitor']
Deployability,"cpp; SceneColladaLoader.cpp; ). set(README_FILES README_AssimpPlugin.txt). ## Assimp dependencies; list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/""). ### Dependencies; find_package(Sofa.Core REQUIRED); sofa_find_package(assimp REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Mass REQUIRED); sofa_find_package(Sofa.Component.Mapping REQUIRED); sofa_find_package(Sofa.GL.Component.Rendering3D REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(image QUIET); sofa_find_package(Flexible QUIET). # Create the plugin library.; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_SOFAASSIMP""); target_link_libraries(${PROJECT_NAME} PUBLIC ${ASSIMP_LIBRARIES} Sofa.Core Sofa.Component.Constraint.Projective Sofa.Component.Mass Sofa.Component.Mapping Sofa.GL.Component.Rendering3D Sofa.Component.StateContainer Sofa.Component.Collision.Geometry). if(image_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC image); endif(); if(Flexible_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC Flexible); endif(). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>""); target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>/..""); target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${ASSIMP_INCLUDE_DIR}>""). if(ASSIMP_DLL); sofa_install_libraries(PATHS ${ASSIMP_DLL}); endif(). #TODO; if(SOFA_BUILD_TESTS); # add_subdirectory(CGALPlugin_test); endif(). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/CMakeLists.txt:1933,Install,Install,1933,applications/plugins/SofaAssimp/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,ctionForceField.h; ${SRC_ROOT}/behavior/PairInteractionForceField.inl; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.h; ${SRC_ROOT}/behavior/PairInteractionProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/PairStateAccessor.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.h; ${SRC_ROOT}/behavior/ProjectiveConstraintSet.inl; ${SRC_ROOT}/behavior/RotationFinder.h; ${SRC_ROOT}/behavior/StateAccessor.h; ${SRC_ROOT}/behavior/SingleMatrixAccessor.h; ${SRC_ROOT}/behavior/SingleStateAccessor.h; ${SRC_ROOT}/behavior/fwd.h; ${SRC_ROOT}/collision/BroadPhaseDetection.h; ${SRC_ROOT}/collision/CollisionAlgorithm.h; ${SRC_ROOT}/collision/CollisionGroupManager.h; ${SRC_ROOT}/collision/Contact.h; ${SRC_ROOT}/collision/ContactManager.h; ${SRC_ROOT}/collision/Detection.h; ${SRC_ROOT}/collision/DetectionOutput.h; ${SRC_ROOT}/collision/Intersection.h; ${SRC_ROOT}/collision/Intersection.inl; ${SRC_ROOT}/collision/IntersectorFactory.h; ${SRC_ROOT}/collision/NarrowPhaseDetection.h; ${SRC_ROOT}/collision/Pipeline.h; ${SRC_ROOT}/loader/BaseLoader.h; ${SRC_ROOT}/loader/ImageLoader.h; ${SRC_ROOT}/loader/MeshLoader.h; ${SRC_ROOT}/loader/SceneLoader.h; ${SRC_ROOT}/loader/VoxelLoader.h; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.h; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.h; ${SRC_ROOT}/objectmodel/AbstractDataLink.h; ${SRC_ROOT}/objectmodel/AspectPool.h; ${SRC_ROOT}/objectmodel/Base.h; ${SRC_ROOT}/objectmodel/BaseClass.h; ${SRC_ROOT}/objectmodel/BaseClassNameHelper.h; ${SRC_ROOT}/objectmodel/BaseContext.h; ${SRC_ROOT}/objectmodel/BaseData.h; ${SRC_ROOT}/objectmodel/BaseLink.h; ${SRC_ROOT}/objectmodel/BaseNode.h; ${SRC_ROOT}/objectmodel/BaseObject.h; ${SRC_ROOT}/objectmodel/BaseObjectDescription.h; ${SRC_ROOT}/objectmodel/ClassInfo.h; ${SRC_ROOT}/objectmodel/ComponentState.h; ${SRC_ROOT}/objectmodel/ConfigurationSetting.h; ${SRC_ROOT}/objectmodel/Context.h; ${SRC_ROOT}/objectmodel/ContextObject.h; ${SRC_ROOT}/objectmodel/DDGNode.h; ${SRC_ROOT}/objectmodel/Data.,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:4467,Pipeline,Pipeline,4467,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['Pipeline'],['Pipeline']
Deployability,"cut associated to camera mode [#997]( https://github.com/sofa-framework/sofa/pull/997 ); - [SofaGuiQt] Add a profiling window based on AdvanceTimer records [#1028]( https://github.com/sofa-framework/sofa/pull/1028 ); - **[SofaKernel]** Some small changes in debug topology drawing [#952]( https://github.com/sofa-framework/sofa/pull/952 ); - **[SofaKernel]** Update Static Solver [#950]( https://github.com/sofa-framework/sofa/pull/950 ); - **[SofaKernel]** Rename TModels into CollisionModels and update all scenes [#1034]( https://github.com/sofa-framework/sofa/pull/1034 ); - **[SofaKernel]** Add a new video recorder class VideoRecorderFFMPEG [#883]( https://github.com/sofa-framework/sofa/pull/883 ); - **[SofaSimulationCore]** Cpu task and scheduled thread support [#970]( https://github.com/sofa-framework/sofa/pull/970 ); - **[SofaSimulationCore]** call BaseObject::draw() during the Transparent pass [#929]( https://github.com/sofa-framework/sofa/pull/929 ); - [SofaTopologyMapping] Clean, fix, upgrade Tetra2TriangleTopologicalMapping [#876]( https://github.com/sofa-framework/sofa/pull/876 ). **Plugins / Projects**; - [Geomagic] Add some better check at init and method to free driver [#925]( https://github.com/sofa-framework/sofa/pull/925 ); - [Icons] EDIT Sofa icons [#881]( https://github.com/sofa-framework/sofa/pull/881 ); - [MultiThreading] TaskAllocator Interface [#906]( https://github.com/sofa-framework/sofa/pull/906 ); - [PluginExample] Update example + add comments [#1053]( https://github.com/sofa-framework/sofa/pull/1053 ); - [Regression] ADD Regression as external project [#1052]( https://github.com/sofa-framework/sofa/pull/1052 ); - [runSofa] ADD possibility to jump to source/instanciation of selected component [#1013]( https://github.com/sofa-framework/sofa/pull/1013 ); - [SofaCUDA] Fix cuda with latest API [#912]( https://github.com/sofa-framework/sofa/pull/912 ); - [SofaPython] Add Sofa.hasViewer function [#964]( https://github.com/sofa-framework/sofa/pull/96",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:261533,upgrade,upgrade,261533,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['upgrade'],['upgrade']
Deployability,d_iteration 17.7; Lloyd_iteration 17.75; Lloyd_iteration 17.68; Lloyd_iteration 17.72; Lloyd_iteration 17.74; Lloyd_iteration 17.71; Lloyd_iteration 17.68; Lloyd_iteration 17.64; Lloyd_iteration 17.66; Lloyd_iteration 17.75; Lloyd_iteration 17.73; Lloyd_iteration 17.68; Lloyd_iteration 17.75; Lloyd_iteration 17.72; Lloyd_iteration 17.67; Lloyd_iteration 17.64; Lloyd_iteration 17.63; Lloyd_iteration 17.67; Lloyd_iteration 17.75; Lloyd_iteration 17.68; Lloyd_iteration 17.67; Lloyd_iteration 17.71; Lloyd_iteration 17.72; Lloyd_iteration 17.76; Lloyd_iteration 17.61; Lloyd_iteration 17.74; Lloyd_iteration 17.66; Lloyd_iteration 17.74; Lloyd_iteration 17.64; Lloyd_iteration 17.62; Lloyd_iteration 17.67; Lloyd_iteration 17.74; Lloyd_iteration 17.74; Lloyd_iteration 17.65; Lloyd_iteration 17.74; Lloyd_iteration 17.72; Lloyd_iteration 17.69; Lloyd_iteration 17.71; Lloyd_iteration 17.71; computeUniformSampling: 1804.36; computeWeights: 202.43; computeLinearRegionsSampling: 3.75; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg3.ppm 10 6; Lloyd_iteration 19.01; Lloyd_iteration 18.74; Lloyd_iteration 18.76; Lloyd_iteration 18.79; Lloyd_iteration 18.82; Lloyd_iteration 18.83; Lloyd_iteration 18.86; Lloyd_iteration 18.88; Lloyd_iteration 18.9; Lloyd_iteration 18.87; Lloyd_iteration 18.83; Lloyd_iteration 18.86; Lloyd_iteration 18.84; Lloyd_iteration 18.89; Lloyd_iteration 18.89; Lloyd_iteration 18.91; Lloyd_iteration 18.89; Lloyd_iteration 18.89; Lloyd_iteration 18.89; Lloyd_iteration 18.87; Lloyd_iteration 18.78; Lloyd_iteration 18.78; Lloyd_iteration 18.82; Lloyd_iteration 18.79; Lloyd_iteration 18.8; Lloyd_iteration 18.83; Lloyd_iteration 18.83; Lloyd_iteration 18.81; Lloyd_iteration 18.73; Lloyd_iteration 18.81; Lloyd_iteration 18.78; Lloyd_iteration 18.76; Lloyd_iteration 18.85; Lloyd_iteration 18.83; Lloyd_iteration 18.86; Lloyd_iteration 18.81; Lloyd_iteration 18.78; Lloyd_iteration 18.73; Lloyd_iteration 18.75; Lloyd_iteration 18.8; Lloyd_ite,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:36888,update,updateSampleMaterialProperties,36888,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,da. [#320]( https://github.com/sofa-framework/sofa/pull/320 ); - Fix: Headers of the SofaCUDA plugin are now installed in the include folder [#383]( https://github.com/sofa-framework/sofa/pull/383 ); - FIX Configuration/compilation issue with CUDA plugin [#523]( https://github.com/sofa-framework/sofa/pull/523 ); - Fix linearforcefield that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - [SofaGui]; - FIX draw scenes on classical and retina screens [#311]( https://github.com/sofa-framework/sofa/pull/311 ); - Fixes #183 : Use the qt menu instead of the native one in Mac OS [#366]( https://github.com/sofa-framework/sofa/pull/366 ); - fix ImageBMP issue + remove Laparoscopic stuff [#499]( https://github.com/sofa-framework/sofa/pull/499 ); - Pickhandler minor fixs [#522]( https://github.com/sofa-framework/sofa/pull/522 ); - Fix: Intel graphics on linux now overrides the core profile context [#526]( https://github.com/sofa-framework/sofa/pull/526 ); - [SofaImplicitField]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SofaPhysicsAPI]; - FIX: compilation due to Sofa main API changes [#549]( https://github.com/sofa-framework/sofa/pull/549 ); - [SofaPython]; - Fix python live coding that is broken [#414]( https://github.com/sofa-framework/sofa/pull/414 ); - FIX crash in python script when visualizing advanced timer output [#458]( https://github.com/sofa-framework/sofa/pull/458 ); - FIX error in script for plotting advancedTimer output [#519]( https://github.com/sofa-framework/sofa/pull/519 ); - Fix python unicode data [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - [SofaSPHFluid]; - Fix invalid plugin initialization. [#467]( https://github.com/sofa-framework/sofa/pull/467 ); - [SofaVolumetricData]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SceneCreator]; - FIX build error with AppleClang 6.0.0.6000051 [#483]( https://github.com/sofa-framework/sofa/pu,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:319536,configurat,configuration,319536,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['configurat'],['configuration']
Deployability,"del or a collision model to an underlying behaviour model.; 			. 				In the TutorialMappingLiverBarycentric scene, you get the following elements : ; 				; A node ""Liver"" containing the behavior model of a liver loaded through a MeshLoader component with a TetrahedronSetTopology and a TetrahedralCorotationalFEMForceField to handle the deformations.; A node ""Visual"" which is mapped to the ""Liver"" node by a barycentric mapping, which contains the visual representation of our liver.; A node ""Surf"" mapped to the ""Liver"" node by a barycentric mapping, containing the collision model of the liver. Key points. 			In this scene you actually have two kinds of barycentric mappings. A visual barycentric mapping, and a mechanical barycentric mapping.; 			. The visual barycentric mapping concerns the ""Visual"" node (child) and the ""Liver"" node (parent). Here the communication between the parent and the child is only one way. At each time step, the positions of the child are updated knowing the positions and the velocities of the parent and according to the barycentric weights.; 		. Mapping of a visual model to a behaviour model with a barycentric mapping. The mechanical barycentric mapping concerns the ""Surf"" node (child) and the ""Liver"" node (parent). It is this mapping which actually allows you to interact with the object using the mouse. Here the communication works in both ways. Like in a visual mapping, the child positions and velocities are updated knowing their barycentring weights and the parent state vector. On top of that, the interactions (or forces) computed at the level of the child are propagated back to the parent according to the barycentric weights. ; 				. Collision Model (yellow squares) mapped to the behaviour model (white dots) with a tetrahedral topology. Results; ; 		You can interact with the mouse to see how the two barycentric mappings work together in the scene.; . 		With the mouse interaction you can accumlate forces at the level of the collision mechanic",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Mappings/TutorialMappingBarycentric.html:1560,update,updated,1560,examples/Tutorials/Mappings/TutorialMappingBarycentric.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Mappings/TutorialMappingBarycentric.html,1,['update'],['updated']
Deployability,"der/Vector2.cpp; VRender/Vector3.cpp; VRender/VisibilityOptimizer.cpp; VRender/gpc.cpp; camera.cpp; constraint.cpp; frame.cpp; keyFrameInterpolator.cpp; manipulatedCameraFrame.cpp; manipulatedFrame.cpp; mouseGrabber.cpp; qglviewer.cpp; quaternion.cpp; saveSnapshot.cpp; vec.cpp; ); set(UI_FILES; ImageInterface.ui; VRenderInterface.ui; ). if (Qt5Core_FOUND); qt5_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); qt5_wrap_ui(FORM_FILES ${UI_FILES}); elseif (Qt6Core_FOUND); qt6_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); qt6_wrap_ui(FORM_FILES ${UI_FILES}); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${MOC_FILES} ${FORM_FILES} ${SOURCE_FILES}). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER ""SofaExtlibs""); target_link_libraries(${PROJECT_NAME} PUBLIC ${QGLViewer_QT_TARGETS}); if(TARGET OpenGL::GL AND TARGET OpenGL::GLU) # Imported targets defined since CMake 3.8; target_link_libraries(${PROJECT_NAME} PUBLIC OpenGL::GL OpenGL::GLU); else(); target_link_libraries(${PROJECT_NAME} PUBLIC ${OPENGL_LIBRARIES}); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ${OPENGL_INCLUDE_DIR}); endif(). target_include_directories(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_BINARY_DIR}); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/..>""); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/${PROJECT_NAME}>""). if(WIN32); target_compile_options(${PROJECT_NAME} PRIVATE ""-DCREATE_QGLVIEWER_DLL""); target_compile_options(${PROJECT_NAME} PRIVATE ""/wd4996"") # remove warnings about deprecation (CRT,etc); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES DEBUG_POSTFIX ""_d""). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME}; INCLUDE_INSTALL_DIR ""extlibs""; ). # Qt deployment; if(CMAKE_SYSTEM_NAME STREQUAL Windows); include(windeployqt); windeployqt(${PROJECT_NAME} ${CMAKE_BINARY_DIR}/bin bin); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt:3517,deploy,deployment,3517,Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/QGLViewer/CMakeLists.txt,1,['deploy'],['deployment']
Deployability,"distributed under the terms of Sections; 1 and 2 above on a medium customarily used for software interchange; or,. b) Accompany it with a written offer, valid for at least three; years, to give any third party, for a charge no more than your; cost of physically performing source distribution, a complete; machine-readable copy of the corresponding source code, to be; distributed under the terms of Sections 1 and 2 above on a medium; customarily used for software interchange; or,. c) Accompany it with the information you received as to the offer; to distribute corresponding source code. (This alternative is; allowed only for noncommercial distribution and only if you; received the program in object code or executable form with such; an offer, in accord with Subsection b above.). The source code for a work means the preferred form of the work for; making modifications to it. For an executable work, complete source; code means all the source code for all modules it contains, plus any; associated interface definition files, plus the scripts used to; control compilation and installation of the executable. However, as a; special exception, the source code distributed need not include; anything that is normally distributed (in either source or binary; form) with the major components (compiler, kernel, and so on) of the; operating system on which the executable runs, unless that component; itself accompanies the executable. If distribution of executable or object code is made by offering; access to copy from a designated place, then offering equivalent; access to copy the source code from the same place counts as; distribution of the source code, even though third parties are not; compelled to copy the source along with the object code. 4. You may not copy, modify, sublicense, or distribute the Program; except as expressly provided under this License. Any attempt; otherwise to copy, modify, sublicense or distribute the Program is; void, and will automatically terminate your ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:8279,install,installation,8279,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,6,['install'],['installation']
Deployability,e builds [#3120]( https://github.com/sofa-framework/sofa/pull/3120 ); - [CMake] Clean packaging for v22.06 [#3197]( https://github.com/sofa-framework/sofa/pull/3197 ). **Modules**; - [All] Fix minor warnings [#3177]( https://github.com/sofa-framework/sofa/pull/3177 ); - [All] Minor changes to use new SOFA-NG includes [#3160]( https://github.com/sofa-framework/sofa/pull/3160 ); - [All] Remove warnings [#3118]( https://github.com/sofa-framework/sofa/pull/3118 ); - [All] Uniformize includes [#3145]( https://github.com/sofa-framework/sofa/pull/3145 ); - [All] Few fixes to allow compilation with MSVC/Clang-cl [#2563]( https://github.com/sofa-framework/sofa/pull/2563 ); - [All] Minor improvements [#2667]( https://github.com/sofa-framework/sofa/pull/2667 ); - [All] Update Data comments [#2719]( https://github.com/sofa-framework/sofa/pull/2719 ); - [All] Remove few trivial compilation warning & commented code. [#3044]( https://github.com/sofa-framework/sofa/pull/3044 ); - [All] Update the code to remove some deprecation warnings [#2529]( https://github.com/sofa-framework/sofa/pull/2529 ); - [Collision.Geometry] Remove unnecessary *_API in template class definition [#3022]( https://github.com/sofa-framework/sofa/pull/3022 ); - [Collision.Response.Mapper] Missing override keyword [#3083]( https://github.com/sofa-framework/sofa/pull/3083 ); - [Component] All modules have a version [#2948]( https://github.com/sofa-framework/sofa/pull/2948 ); - [Components.Engine.Transform] remove shadow variable in ROIValueMapper [#2987]( https://github.com/sofa-framework/sofa/pull/2987 ); - [Config] Remove unused option SOFA_WITH_DEPRECATED_COMPONENTS [#3172]( https://github.com/sofa-framework/sofa/pull/3172 ); - [Constraint.Lagrangian.Solver] Convert double to SReal [#2922]( https://github.com/sofa-framework/sofa/pull/2922 ); - [Core.Topology] Fix info message when Topology given to topologyHandler is not dynamic [#3142]( https://github.com/sofa-framework/sofa/pull/3142 ); - [Core.Topology] Re,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:120620,Update,Update,120620,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,e noise for CI scenes [#4316](https://github.com/sofa-framework/sofa/pull/4316); - [ODESolver] Fix compilation with SOFA_NO_VMULTIOP [#4325](https://github.com/sofa-framework/sofa/pull/4325); - [Topology.Mapping] Edge2QuadTopologicalMapping: use Links for required QuadSet components [#4361](https://github.com/sofa-framework/sofa/pull/4361); - [MultiThreading] Fix failing test on ParallelImplementationsRegistry [#4392](https://github.com/sofa-framework/sofa/pull/4392); - [Helper] Fix Colormap when using HSV to RGB [#4408](https://github.com/sofa-framework/sofa/pull/4408); - [All] Fix subplugin regression tests [#4420](https://github.com/sofa-framework/sofa/pull/4420); - [sofaInfo] Fix compilation and behavior [#4422](https://github.com/sofa-framework/sofa/pull/4422); - [Core] Call super init() in MultiMapping and Multi2Mapping [#4432](https://github.com/sofa-framework/sofa/pull/4432); - [Helper] Fix new[]/delete mismatch [#4447](https://github.com/sofa-framework/sofa/pull/4447); - [CMake] Fix SOFA install [#4451](https://github.com/sofa-framework/sofa/pull/4451); - [GitHub] Fix action using github.context [#4456](https://github.com/sofa-framework/sofa/pull/4456); - [Helper] PluginManager: Check symbol (real) location and avoid calling wrong entrypoint (Mac/Linux) [#4466](https://github.com/sofa-framework/sofa/pull/4466); - [GitHUb] Fix actions using cron condition [#4468](https://github.com/sofa-framework/sofa/pull/4468); - [GitHub] Fix PR messages not properly sent [#4475](https://github.com/sofa-framework/sofa/pull/4475); - [GitHub] Use finally pull_request_target [#4476](https://github.com/sofa-framework/sofa/pull/4476); - [SofaCUDA] Fix spatial grid compilation with double [#4478](https://github.com/sofa-framework/sofa/pull/4478); - [image] Fix compilation on Windows [#4484](https://github.com/sofa-framework/sofa/pull/4484); - [Testing] Fix installation of gtest headers [#4489](https://github.com/sofa-framework/sofa/pull/4489); - [Helper] PluginManager Fix test i,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:6599,install,install,6599,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,"e representation, solvers, constraints, collision algorithm, etc. ; - the synthesis of complex models from simpler ones using a graph description; - the efficient simulation of the dynamics of interacting objects using abstract equation solvers; - the comparison of various algorithms and mathematical models. SOFA is often presented as a standalone software (runSofa) and a simulation tool, but the project is most importantly a bundle of libraries and thus can be used/integrated in any project. . SOFA provides a plugin system allowing the coupling of additional codes to add functionalities. A lot of plugins are already referenced in the [source code](https://github.com/sofa-framework/sofa/tree/master/applications/plugins), under [sofa-framework organisation](https://github.com/orgs/sofa-framework/repositories?q=plugin&sort=name), and on the [Marketplace](https://www.sofa-framework.org/applications/marketplace/). Feel free to contact us to get your own plugins referenced!. ## How to download and install. Please refer to SOFA download page: https://www.sofa-framework.org/download/. ## How to contribute. The SOFA community will be pleased to welcome you! ; Find all the ways to contribute to the project: https://www.sofa-framework.org/community/get-involved/. Before creating any issue or pull request, please read carefully [our CONTRIBUTING rules](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md). ## Information. ### Authors; See [Authors.txt](https://github.com/sofa-framework/sofa/blob/master/Authors.txt). ### Licenses; SOFA is LGPL, except:; - applications/projects (GPL); - applications/tutorials (GPL); - directories with a license file specifying a different license. LGPL refers to the GNU Lesser General Public License as published by the Free Software; Foundation; either version 2.1 of the License, or (at your option) any later ; version. GPL refers to the GNU General Public License as published by the Free Software Foundation;; either version 2 of t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md:2789,install,install,2789,README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md,1,['install'],['install']
Deployability,e un-needed class reflection system. [#1541]( https://github.com/sofa-framework/sofa/pull/1541 ); - [SofaLoader] Use references in Meshloader [#1627]( https://github.com/sofa-framework/sofa/pull/1627 ); - [modules] Minor fixes [#1441]( https://github.com/sofa-framework/sofa/pull/1441 ). **Plugins / Projects**; - [plugins] Reactivate SofaPython3 [#1574]( https://github.com/sofa-framework/sofa/pull/1574 ); - [Geomagic] Update demo scenes to use direct solvers. [#1533]( https://github.com/sofa-framework/sofa/pull/1533 ); - [InvertibleFVM] Externalize the plugin [#1443]( https://github.com/sofa-framework/sofa/pull/1443 ). ____________________________________________________________. ## [v20.06]( https://github.com/sofa-framework/sofa/tree/v20.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v19.12...v20.06 ). ### Breaking. **Architecture**; - [All] CMake and includes massive clean [#1397]( https://github.com/sofa-framework/sofa/pull/1397 ); - [CMake] Remove the use of an internal Eigen3 version and instead use the one installed on the system. [#1281]( https://github.com/sofa-framework/sofa/pull/1281 ); - [CMake] Remove Collections [#1314]( https://github.com/sofa-framework/sofa/pull/1314 ); - [Modularization] SofaNonUniformFem + SofaAdvanced removal [#1344]( https://github.com/sofa-framework/sofa/pull/1344 ); - [Modularization] SofaValidation [#1302]( https://github.com/sofa-framework/sofa/pull/1302 ). **Modules**; - [All] BaseClass reflection refactoring [#1283]( https://github.com/sofa-framework/sofa/pull/1283 ); - [All] Remove Aspects from Sofa [#1269]( https://github.com/sofa-framework/sofa/pull/1269 ); - [All] Remove compilation warnings related to collision models [#1301]( https://github.com/sofa-framework/sofa/pull/1301 ); - [All] Update code base according to refactoring done in PR1283. [#1330]( https://github.com/sofa-framework/sofa/pull/1330 ); - [All] Remove all deprecation warnings after v1912 [#1241]( https://github.com/sofa-framework/sofa/p,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:229378,install,installed,229378,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['installed']
Deployability,"e. automatic initialization of Node; - Node::isInitialized(), not used anymore; - [Flexible]; - clean relativeStrainMapping. ### Moved files. - move CImg from extlibs to image plugin extlibs. ### Documentation. - Add the contribution and guidelines : **CONTRIBUTING.md** and **GUIDELINES.md**; - Add the configuration required (ex: C++, compiler versions); - Add a page to use SOFA in Matlab; - Improve Logger documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an API to display primitives on screen. For now, only the OpenGL (fixed-pipeline version) implementation has been made.; - add a Logger; - add the diffusion effect in SOFA (heat transfer); - SOFA_USE_MASK compilation variable to activate or de-activate the masks in SOFA; - DataTracker: simple and elegant way to track Data in Engine; - extlibs: update cimg to version 1.7.3; - Add guidelines for contributions in CONTRIBUTING.md. ### Moved files. - Kernel modules of SOFA (SofaFramework, SofaBase, SofaCommon and SofaSimulation) have been moved to one common module SofaKernel, located at _sofa_root/SofaKernel_. SofaKernel is a pure LGPL module.; - code in _sofa_root/modules/sofa/simulation/_ has been splitted into three modules of SofaKernel: SofaSimulationCommon, SofaSimulationTree, SofaSimulationGraph; - MOVE the SofaPardiso mo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:341489,integrat,integrate,341489,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['integrat'],['integrate']
Deployability,"e.Analyze] ClusteringEngine: set correct values in load() [#3398](https://github.com/sofa-framework/sofa/pull/3398) ; - [Tests] Update tests to new modules [#3406](https://github.com/sofa-framework/sofa/pull/3406) ; - [Tests] Fix mutiple component init calls in several tests [#3447](https://github.com/sofa-framework/sofa/pull/3447) ; - [image, FEM, LinearSolver] fix Eigen3 assertion with SVD [#3452](https://github.com/sofa-framework/sofa/pull/3452) ; - [Constraint.lagrangian] Update BilateralInteractionConstraint namespace [#3468](https://github.com/sofa-framework/sofa/pull/3468) ; - [Topology.container] Fix missing TopologyElementType setting in SparseGridTopology init [#3475](https://github.com/sofa-framework/sofa/pull/3475) ; - [LinearSolver.Direct] Fix crashing unit tests [#3512](https://github.com/sofa-framework/sofa/pull/3512) ; - [LinearSolver.Direct] Segfault in SparseLDLSolver due to empty system matrix [#3529](https://github.com/sofa-framework/sofa/pull/3529) ; - [Tests] Update required plugins in tests [#3542](https://github.com/sofa-framework/sofa/pull/3542) . **Plugins / Projects**; - [SofaCUDA] FIX namespaces [#2935](https://github.com/sofa-framework/sofa/pull/2935) ; - [Plugins] Fix Cmake configuration w/o compat [#3209](https://github.com/sofa-framework/sofa/pull/3209) ; - [GUI.Qt] Fix MSAA sampling setup [#3220](https://github.com/sofa-framework/sofa/pull/3220) ; - [DrawToolGL] Fix ill-formed drawLines with multiple colors [#3260](https://github.com/sofa-framework/sofa/pull/3260) ; - [SofaSphFluid] Fix required plugin in scenes [#3272](https://github.com/sofa-framework/sofa/pull/3272) ; - [SofaCarving] Fix bug in CarvingManager when searching for target collision model [#3276](https://github.com/sofa-framework/sofa/pull/3276) ; - [GUI/runSofa] Cmake: tweaks and fixes [#3323](https://github.com/sofa-framework/sofa/pull/3323) ; - [CImgPlugin] Replace new keyword with creating unique pointers to properly clean up allocated memory. [#3365](https://github",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:81104,Update,Update,81104,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,eRepository constructors [#1610]( https://github.com/sofa-framework/sofa/pull/1610 ); - **[SofaKernel]** Remove core::Plugin/core::PluginManager [#1612]( https://github.com/sofa-framework/sofa/pull/1612 ); - **[SofaKernel]** Remove parentBaseData in BaseData.h [#1490]( https://github.com/sofa-framework/sofa/pull/1490 ); - **[SofaKernel]** Remove support for BaseData in Link.h [#1503]( https://github.com/sofa-framework/sofa/pull/1503 ); - **[SofaKernel]** Remove un-needed StringUtil.h in Base.h [#1519]( https://github.com/sofa-framework/sofa/pull/1519 ); - **[SofaKernel]** Remove un-needed class reflection system. [#1541]( https://github.com/sofa-framework/sofa/pull/1541 ); - [SofaLoader] Use references in Meshloader [#1627]( https://github.com/sofa-framework/sofa/pull/1627 ); - [modules] Minor fixes [#1441]( https://github.com/sofa-framework/sofa/pull/1441 ). **Plugins / Projects**; - [plugins] Reactivate SofaPython3 [#1574]( https://github.com/sofa-framework/sofa/pull/1574 ); - [Geomagic] Update demo scenes to use direct solvers. [#1533]( https://github.com/sofa-framework/sofa/pull/1533 ); - [InvertibleFVM] Externalize the plugin [#1443]( https://github.com/sofa-framework/sofa/pull/1443 ). ____________________________________________________________. ## [v20.06]( https://github.com/sofa-framework/sofa/tree/v20.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v19.12...v20.06 ). ### Breaking. **Architecture**; - [All] CMake and includes massive clean [#1397]( https://github.com/sofa-framework/sofa/pull/1397 ); - [CMake] Remove the use of an internal Eigen3 version and instead use the one installed on the system. [#1281]( https://github.com/sofa-framework/sofa/pull/1281 ); - [CMake] Remove Collections [#1314]( https://github.com/sofa-framework/sofa/pull/1314 ); - [Modularization] SofaNonUniformFem + SofaAdvanced removal [#1344]( https://github.com/sofa-framework/sofa/pull/1344 ); - [Modularization] SofaValidation [#1302]( https://github.com/sofa-framewo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:228753,Update,Update,228753,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,eSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 10 6; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.25; computeUniformSampling: 3.6; computeWeights: 4.93; computeLinearRegionsSampling: 0.13; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg.ppm 10 10; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; computeUniformSampling: 3.6; computeWeights: 4.93; computeLinearRegionsSampling: 0.13; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg.ppm 10 20; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; computeUniformSampling: 3.59; computeWeights: 4.93; computeLinearRegionsSampling: 0.12; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg.ppm 10 50; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; computeUniformSampling: 3.6; computeWeights: 4.94; computeLinearRegionsSampling: 0.13; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 20 6; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.26; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.6; computeWeights: 8.1; computeLinearRegionsSampling: 0.3; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 10; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.26; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.5,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:3052,update,updateSampleMaterialProperties,3052,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,"ecCoord >* write(core::VecCoordId v);; virtual const Data< VecCoord >* read(core::ConstVecCoordId v) const;. virtual Data< VecDeriv >* write(core::VecDerivId v);; virtual const Data< VecDeriv >* read(core::ConstVecDerivId v) const;; /// @}. /** \brief Reorder values according to parameter.; *; * Result of this method is :; * newValue[ i ] = oldValue[ index[i] ];; */; void renumberValues( const sofa::helper::vector<unsigned int> &index );. /// Force the position of a point (and force its velocity to zero value); void forcePointPosition( const unsigned int i, const sofa::helper::vector< double >& m_x);; ; /// src and dest must have the same size.; /// Performs: dest[i][j] += src[offset + i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects); /// @param offset the offset in the BaseVector where the scalar values will be used. It will be updated to the first scalar value after the ones used by this operation when this method returns; virtual void addFromBaseVectorSameSize(core::VecId dest, const defaulttype::BaseVector* src, unsigned int &offset);; }; ``` ; More info about Doxygen here: https://www.stack.nl/~dimitri/doxygen/manual/index.html . ### Good practices; - [G1] You should try to use as few `#include` directive as possible.; - [G2] You should limit as much as possible the amount of code in included files (*.h, *.inl).; - [G3] All definitions should reside in source files. The header files should declare an interface only.; - [G4] Variables should be initialized when they are declared.; - [G5] You should use `const` profusely.; - [G6] You should use `assert` profusely.; - [G7] You must avoid the `using` directive in header files (.h and .inl): ~~`using namespace foo;`~~; - [G8] You should declare automatic variables only when you need them (not before).; - [G9] You must always initialize pointers, either to the address of something, or to `nullptr`; - [G10] You may use the type specifier `auto` (since C++11) when:; - you are in a for lo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:4116,update,updated,4116,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,1,['update'],['updated']
Deployability,"ed Constraint Visitors [#4715](https://github.com/sofa-framework/sofa/pull/4715). ### Improvements. - [Lagrangian.Correction] Add callbacks to check zero compliance [#4205](https://github.com/sofa-framework/sofa/pull/4205); - [SolidMechanics.Spring] Implement buildStiffnessMatrix for TriangularBendingSprings [#4295](https://github.com/sofa-framework/sofa/pull/4295); - [SolidMechanics] Implement buildStiffnessMatrix for PolynomialSpringsFF [#4301](https://github.com/sofa-framework/sofa/pull/4301); - [Config] CMake: support interface-type target for install macro [#4356](https://github.com/sofa-framework/sofa/pull/4356); - [Core] BaseMapping: link mapConstraints to the ""meta-alias"" isMechanical [#4360](https://github.com/sofa-framework/sofa/pull/4360); - [github] Add new action checking PR age [#4386](https://github.com/sofa-framework/sofa/pull/4386); - [Topology.Mapping] Edge2QuadTopologicalMapping: use States directly [#4388](https://github.com/sofa-framework/sofa/pull/4388); - [README] Minor update badges [#4417](https://github.com/sofa-framework/sofa/pull/4417); - [StateContainer] Accelerate copy of MatrixDeriv for CRS matrices [#4443](https://github.com/sofa-framework/sofa/pull/4443); - [GitHub] Add new actions to connect GitHub and Discord [#4445](https://github.com/sofa-framework/sofa/pull/4445); - [All] Display reference name when pulling external plugins [#4507](https://github.com/sofa-framework/sofa/pull/4507); - [Config] Add TSAN option [#4534](https://github.com/sofa-framework/sofa/pull/4534); - [Project] Start dev phase v24.06 [#4544](https://github.com/sofa-framework/sofa/pull/4544); - [runsofa] Allowing multiple argv [#4591](https://github.com/sofa-framework/sofa/pull/4591); - [GUI] Add ConstraintAttachButtonSetting [#4601](https://github.com/sofa-framework/sofa/pull/4601); - [plugins] Add fetchable ModelOrderReduction [#4608](https://github.com/sofa-framework/sofa/pull/4608); - [GUI.Qt] Add clickable link to online documentation [#4650](https://github.",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:4047,update,update,4047,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,"eld.py; - Improving a few examples by making the embedding nodes as non pickable (tag 'NoPicking'); - Add BaseNode::getRootPath; - Improving performances: - Message::class is now an enum; - Updated draw method of PointSetGeometryAlgorithms, QuadSetGeometryAlgorithms, TetrahedronSetGeometryAlgorithms, TriangleSetGeometryAlgorithms; - Add Blender-like orientation helper in the bottom-left part of the screen while drawing bbox (QtGlViewer); - Add Blender-like orientation helper in the bottom-left part of the screen while drawing bbox (QtViewer); - add of GUIEvent into the STLExporter; - Make the code compatible with ClipPlane (using ClipVertex in shaders, which is deprecated for GLSL > 1.4); - Optimize the callto C-PYTHON side when the functions are not implemented in the python side; - Add color attribute support (and default color if not present in the node); - Reactivate color map in TetraFEM, as it does not depend on SofaOpenGLVisual anymore; - indices data field for UniformMass; - analyze matrix only if number of non-zeroes has changed and no iterative refinement; - update the applyConstraint methods according to the actual API; - Adding ProjectionTo{Plane|Line}MultiMapping where the plane (origin,normal) and the line (origin,direction) are dofs; - add MeshBoundaryROI with an example. - [Tests]; - for (multi)Mapping test, check the size of the mapping output is correct; - adding TestMessageHandler that raises a gtest failure each time an error message is processed; - test for node removal; - test for removal of a node containing an UncoupledConstraintCorrection (for now the test fails because there is a problem with the removal of that component); - add of Multi2Mapping_test; - add DistanceMapping_test. - [SofaPython]; - logger: cleaning emitter; - sml.Mesh: adding load function; - sml: python set for tags is created by objects themselves; - sml: add tag to JointGeneric; - sml: add the printLog flag; - sml: setup units in BaseScene for all sml Scene class; - sml: m",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:346752,update,update,346752,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,eleteVisitor.cpp; ${SRC_ROOT}/ExportDotVisitor.cpp; ${SRC_ROOT}/ExportGnuplotVisitor.cpp; ${SRC_ROOT}/ExportVisualModelOBJVisitor.cpp; ${SRC_ROOT}/InitVisitor.cpp; ${SRC_ROOT}/IntegrateBeginEvent.cpp; ${SRC_ROOT}/IntegrateEndEvent.cpp; ${SRC_ROOT}/MainTaskSchedulerRegistry.cpp; ${SRC_ROOT}/MainTaskSchedulerFactory.cpp; ${SRC_ROOT}/MechanicalOperations.cpp; ${SRC_ROOT}/MechanicalVPrintVisitor.cpp; ${SRC_ROOT}/MechanicalVisitor.cpp; ${SRC_ROOT}/MutationListener.cpp; ${SRC_ROOT}/Node.cpp; ${SRC_ROOT}/PauseEvent.cpp; ${SRC_ROOT}/PipelineImpl.cpp; ${SRC_ROOT}/PositionEvent.cpp; ${SRC_ROOT}/PrintVisitor.cpp; ${SRC_ROOT}/PropagateEventVisitor.cpp; ${SRC_ROOT}/RequiredPlugin.cpp; ${SRC_ROOT}/ResetVisitor.cpp; ${SRC_ROOT}/SceneLoaderFactory.cpp; ${SRC_ROOT}/SceneCheck.cpp; ${SRC_ROOT}/SceneCheckRegistry.cpp; ${SRC_ROOT}/SceneCheckMainRegistry.cpp; ${SRC_ROOT}/Simulation.cpp; ${SRC_ROOT}/SolveVisitor.cpp; ${SRC_ROOT}/StateChangeVisitor.cpp; ${SRC_ROOT}/TopologyChangeVisitor.cpp; ${SRC_ROOT}/UpdateBoundingBoxVisitor.cpp; ${SRC_ROOT}/UpdateContextVisitor.cpp; ${SRC_ROOT}/UpdateInternalDataVisitor.cpp; ${SRC_ROOT}/UpdateLinksVisitor.cpp; ${SRC_ROOT}/UpdateMappingEndEvent.cpp; ${SRC_ROOT}/UpdateMappingVisitor.cpp; ${SRC_ROOT}/VectorOperations.cpp; ${SRC_ROOT}/VelocityThresholdVisitor.cpp; ${SRC_ROOT}/Visitor.cpp; ${SRC_ROOT}/VisualVisitor.cpp; ${SRC_ROOT}/WriteStateVisitor.cpp; ${SRC_ROOT}/XMLPrintVisitor.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/BaseSimulationExporter.cpp; ${SRC_ROOT}/TaskScheduler.cpp; ${SRC_ROOT}/TaskSchedulerFactory.cpp; ${SRC_ROOT}/TaskSchedulerRegistry.cpp; ${SRC_ROOT}/DefaultTaskScheduler.cpp; ${SRC_ROOT}/Task.cpp; ${SRC_ROOT}/InitTasks.cpp; ${SRC_ROOT}/WorkerThread.cpp; ${SRC_ROOT}/events/BuildConstraintSystemEndEvent.cpp; ${SRC_ROOT}/events/SimulationInitDoneEvent.cpp; ${SRC_ROOT}/events/SimulationInitStartEvent.cpp; ${SRC_ROOT}/events/SimulationInitTexturesDoneEvent.cpp; ${SRC_ROOT}/events/SimulationStartEvent.cpp; ${SRC_ROOT}/events/S,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:8125,Update,UpdateBoundingBoxVisitor,8125,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Update'],['UpdateBoundingBoxVisitor']
Deployability,eme for Quaternion [#172]( https://github.com/sofa-framework/sofa/pull/172 ) and fix values with which the quaternion is being compared after creation from euler angles; - [SofaHelper]; - VisualToolGL: fix single primitive calls [#293]( https://github.com/sofa-framework/sofa/pull/293 ); - ImagePNG: Fix library linking in debug configuration under MSVS [#298]( https://github.com/sofa-framework/sofa/pull/298 ); - [SofaBaseMechanics]; - MechanicalObject: cleaning: symbols & include [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - [SofaPhysicsAPI]; - fix compilation of the project [#167]( https://github.com/sofa-framework/sofa/pull/167 ); - [SofaUserInteraction]; - MouseInteractor: FIX the mouse picking on Mechanical Object [#282]( https://github.com/sofa-framework/sofa/pull/282 ). **Plugins / Projects**; - [image]; - Fixes #135 : Check that SofaPython is found before including python directory [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - Fixes #136 : Use the cmake install DIRECTORY instead of FILES [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - [LeapMotion]; - FIX compilation for LeapMotion plugin due to moved files [#296]( https://github.com/sofa-framework/sofa/pull/296 ); - [runSofa]; - Fix minor consistency issues related to the readOnly flag [#115]( https://github.com/sofa-framework/sofa/pull/115 ); - [SofaTest]; - repair the minor API breaks introduced by PR #213 [#269]( https://github.com/sofa-framework/sofa/pull/269 ). **Scenes**; - Components/engine/GenerateGrid.scn was fixed [#303]( https://github.com/sofa-framework/sofa/pull/303 ). ### Cleanings. **Modules**; - [All]; - clean the consistency issues related to the readOnly flag [#115]( https://github.com/sofa-framework/sofa/pull/115 ); - Clean licenses [#139]( https://github.com/sofa-framework/sofa/pull/139 ); - [SofaKernel]; - clean DefaultPipeline.cpp/h (API BREAKING); - clean the attributes names in BoxROI (API BREAKING); - TetrahedronFEMForceField clean code [#270](,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:334090,install,install,334090,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,"ent_option(SOFA_BUILD_WITH_PCH_ENABLED ; ""Compile SOFA using precompiled header (to accelerate the build process)"" OFF; ""CMAKE_VERSION VERSION_GREATER_EQUAL 3.16"" OFF); if(SOFA_BUILD_WITH_PCH_ENABLED); message(""-- Precompiled headers: enabled (SOFA_BUILD_WITH_PCH_ENABLED is ON).""); else(); message(""-- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).""); set(DISABLE_PRECOMPILE_HEADERS ON); endif(). ## Change default install component and prefix; set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME applications); if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT); set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/install CACHE PATH ""Install path prefix, prepended onto install directories."" FORCE); endif(); if(APPLE AND SOFA_BUILD_APP_BUNDLE); set(SOFA_BUILD_RELEASE_PACKAGE ON); set(CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/runSofa.app/Contents/MacOS); message(""SOFA_BUILD_APP_BUNDLE = ${SOFA_BUILD_APP_BUNDLE}\n""; "" Forcing SOFA_BUILD_RELEASE_PACKAGE = ${SOFA_BUILD_RELEASE_PACKAGE}\n""; "" Forcing CMAKE_INSTALL_PREFIX = ${CMAKE_INSTALL_PREFIX}""; ); endif(); message(STATUS ""Install prefix: ${CMAKE_INSTALL_PREFIX}""). # Remove generated CMake files, this prevents CMake from finding packages that; # were disabled (like, unchecked in cmake-gui) after being built once.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/cmake); file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/lib/cmake); # Remove generated SofaPython configuration files, to prevent SofaPython from; # adding paths to disabled plugins.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/etc/sofa/python.d). ## Custom Environment; list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/Sofa/framework/Config/cmake""); list(APPEND CMAKE_IGNORE_PATH ""${CMAKE_INSTALL_PREFIX}"") # ignore install directory for findXXX commands; include(SofaMacros). install(FILES; ""${CMAKE_CURRENT_SOURCE_DIR}/c",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:3187,Install,Install,3187,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['Install'],['Install']
Deployability,eration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.27; computeUniformSampling: 6.6; computeWeights: 8.01; computeLinearRegionsSampling: 0.29; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 50; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.54; computeWeights: 8.05; computeLinearRegionsSampling: 0.29; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg2.ppm 3 6; computeUniformSampling: 2.09; computeWeights: 15.09; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 10; computeUniformSampling: 2.08; computeWeights: 15.01; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 20; computeUniformSampling: 2.1; computeWeights: 15.07; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 50; computeUniformSampling: 2.08; computeWeights: 14.87; computeLinearRegionsSampling: 0.25; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 5 6; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.11; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.04; Lloyd_iteration 2.09; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.04; Lloyd_iteration 2.06; Lloyd_iteration 2.09; Lloyd_iteration 2.05; Lloyd_iteration 2.05; Lloyd_iteration 2.05; Lloyd_iteration 2.09; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.1; Lloyd_iteration 2.05; Lloyd_iteration 2.05; Lloyd_iteration 2.04; L,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:5232,update,updateSampleMaterialProperties,5232,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,eration 2.02; Lloyd_iteration 2.04; Lloyd_iteration 2.02; Lloyd_iteration 2.07; Lloyd_iteration 2.03; Lloyd_iteration 2.02; Lloyd_iteration 2.03; Lloyd_iteration 2.02; Lloyd_iteration 2.08; Lloyd_iteration 2.02; Lloyd_iteration 2.03; Lloyd_iteration 2.01; Lloyd_iteration 2.02; Lloyd_iteration 2.08; Lloyd_iteration 2.03; Lloyd_iteration 2.03; Lloyd_iteration 2.03; Lloyd_iteration 2.03; Lloyd_iteration 2.07; Lloyd_iteration 2.04; Lloyd_iteration 2.03; Lloyd_iteration 2.02; Lloyd_iteration 2.04; Lloyd_iteration 2.06; Lloyd_iteration 2.04; Lloyd_iteration 2.02; Lloyd_iteration 2.04; Lloyd_iteration 2.04; Lloyd_iteration 2.06; Lloyd_iteration 2.04; Lloyd_iteration 2.02; Lloyd_iteration 2.04; Lloyd_iteration 2.05; Lloyd_iteration 2.05; Lloyd_iteration 2.03; Lloyd_iteration 2.03; Lloyd_iteration 2.03; Lloyd_iteration 2.05; Lloyd_iteration 2.03; Lloyd_iteration 2.02; Lloyd_iteration 2.03; computeUniformSampling: 207.77; computeWeights: 23.72; computeLinearRegionsSampling: 0.47; updateSampleMaterialProperties: 0.04. File: scenes/steak.pscn using steak-seg2.ppm 5 20; Lloyd_iteration 2.07; Lloyd_iteration 2.04; Lloyd_iteration 2.02; Lloyd_iteration 2.04; Lloyd_iteration 2.02; Lloyd_iteration 2.07; Lloyd_iteration 2.05; Lloyd_iteration 2.02; Lloyd_iteration 2.04; Lloyd_iteration 2.03; Lloyd_iteration 2.08; Lloyd_iteration 2.04; Lloyd_iteration 2.03; Lloyd_iteration 2.04; Lloyd_iteration 2.03; Lloyd_iteration 2.07; Lloyd_iteration 2.03; Lloyd_iteration 2.04; Lloyd_iteration 2.03; Lloyd_iteration 2.02; Lloyd_iteration 2.09; Lloyd_iteration 2.03; Lloyd_iteration 2.04; Lloyd_iteration 2.03; Lloyd_iteration 2.03; Lloyd_iteration 2.07; Lloyd_iteration 2.03; Lloyd_iteration 2.04; Lloyd_iteration 2.04; Lloyd_iteration 2.04; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.02; Lloyd_iteration 2.03; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.03; Lloyd_iteration 2.03; Lloyd_iteration 2.04; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.03; Ll,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:10337,update,updateSampleMaterialProperties,10337,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,eration 2.12; Lloyd_iteration 2.12; Lloyd_iteration 2.12; Lloyd_iteration 2.12; Lloyd_iteration 2.16; Lloyd_iteration 2.13; Lloyd_iteration 2.12; Lloyd_iteration 2.13; Lloyd_iteration 2.15; Lloyd_iteration 2.12; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.16; Lloyd_iteration 2.12; Lloyd_iteration 2.14; Lloyd_iteration 2.12; Lloyd_iteration 2.13; Lloyd_iteration 2.16; Lloyd_iteration 2.14; Lloyd_iteration 2.12; Lloyd_iteration 2.12; Lloyd_iteration 2.18; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.12; Lloyd_iteration 2.12; Lloyd_iteration 2.18; Lloyd_iteration 2.11; Lloyd_iteration 2.13; Lloyd_iteration 2.12; Lloyd_iteration 2.13; Lloyd_iteration 2.16; Lloyd_iteration 2.12; Lloyd_iteration 2.13; Lloyd_iteration 2.11; Lloyd_iteration 2.17; Lloyd_iteration 2.13; Lloyd_iteration 2.12; Lloyd_iteration 2.14; Lloyd_iteration 2.12; computeUniformSampling: 227.73; computeWeights: 39.43; computeLinearRegionsSampling: 0.84; updateSampleMaterialProperties: 0.1. File: scenes/steak.pscn using steak-seg2.ppm 10 10; Lloyd_iteration 2.2; Lloyd_iteration 2.16; Lloyd_iteration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.17; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.16; Lloyd_iteration 2.19; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.19; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.18; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.2; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.19; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.18; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.18; Lloyd_iteration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.16; Lloy,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:17468,update,updateSampleMaterialProperties,17468,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,eration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.13; Lloyd_iteration 2.14; Lloyd_iteration 2.18; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.13; Lloyd_iteration 2.15; Lloyd_iteration 2.18; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.13; Lloyd_iteration 2.16; Lloyd_iteration 2.17; Lloyd_iteration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.13; Lloyd_iteration 2.19; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.19; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.18; Lloyd_iteration 2.13; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.17; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.13; Lloyd_iteration 2.15; Lloyd_iteration 2.17; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.13; computeUniformSampling: 229.18; computeWeights: 39.73; computeLinearRegionsSampling: 0.87; updateSampleMaterialProperties: 0.1. File: scenes/steak.pscn using steak-seg2.ppm 20 6; Lloyd_iteration 2.42; Lloyd_iteration 2.32; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.37; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.36; Lloyd_iteration 2.35; Lloyd_iteration 2.32; computeUniformSampling: 60.17; computeWeights: 63.02; computeLinearRegionsSampling: 1.62; updateSampleMaterialProperties: 0.26. File: scenes/steak.pscn using steak-seg2.ppm 20 10; Lloyd_iteration 2.34; Lloyd_iteration 2.31; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.3; Lloyd_iteration 2.31; Lloyd_iteration 2.31; Lloyd_iteration 2.35; Lloyd_iteration 2.32; Lloyd_iteration 2.3; Lloyd_iteration 2.3; computeUniformSampling: 59.63; computeWeights: 62.45; computeLinearRegionsSampling: 1.55; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg2.ppm 20 20; Lloyd_iteration 2.36; Lloyd_iteration 2.41; Lloyd_iteration 2.34; Lloyd_iteration 2.33,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:24595,update,updateSampleMaterialProperties,24595,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,"es particles belonging ; 			to the same mechanical object, the ForceField is said to be internal. Otherwise, if it links several mechanical objects, it is said to be an interaction forcefield. 			; 			Examples of SpringForceField components in Sofa are JointSpringForceField (for rigid mechanical objects) StiffSpringForceField, and MeshSpringForceField ; 		 (for deformable mechanical objects). ; 			; 			To describe a SpringForceField, we therefore have to specify the following parameters: ; 			; The two mechanical objects that are in interaction. It can be a unique mechanical object in the case of an internal ForceField.; A set of pairs of indices which specify the end particles for each spring to be created. ; Finally, the internal parameters of each spring, like the rest length, the stiffness, and damping factor. . Key Points:. If you have a limited number of particles that you want to connect with springs, you can use JointSpringForceField (for rigid bodies) ; 			or StiffSpringForceField (for deformable bodies) and specify manually the indices and spring parameters.; If you load particles from a mesh using a MeshTopology component, there is a corresponding MeshSpringForceField component which ; 			does the job of creating springs for you, leaving you only to specify global parameters for the springs. You can do fine tuning later on; 			if you wish to. Results:; 		At each time step, the force computed by the SpringForceField is added to the mechanical objects in interaction. When the spring network ; 		becomes large this can result in some instability, particularly if you wish to interact with your object using the mouse. ; 		You can tweak spring parameters or the simulation parameters to resolve that issue, (like the vdamping factor if you use an implicit integration scheme) ; 		but this can be a fastidious operation. ; 		As a general rule, FEM ForceField methods provide a neater way to handle deformations.; 		; 		. 	 A MeshSpringForceField becoming unstable; 		. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/ForceFields/TutorialForceFieldSprings.html:1956,integrat,integration,1956,examples/Tutorials/ForceFields/TutorialForceFieldSprings.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/ForceFields/TutorialForceFieldSprings.html,1,['integrat'],['integration']
Deployability,ework/sofa/pull/1152 ); - **[SofaKernel]** ADD: static method in events to retrieve the classname [#1118]( https://github.com/sofa-framework/sofa/pull/1118 ); - **[SofaKernel]** Set BaseData to non-persistant by default [#1191]( https://github.com/sofa-framework/sofa/pull/1191 ); - **[SofaKernel]** fix root's getPathName [#1146]( https://github.com/sofa-framework/sofa/pull/1146 ). ### Improvements. **Architecture**; - [CMake] v19.06 changes [#1114]( https://github.com/sofa-framework/sofa/pull/1114 ); - [extlibs] Set Eigen as external project + upgrade to 3.2.10 [#1101]( https://github.com/sofa-framework/sofa/pull/1101 ); - [extlibs] Upgrade Qwt extlib from 6.1.2 to 6.1.4 [#1136]( https://github.com/sofa-framework/sofa/pull/1136 ). **Modules**; - [All] Add SingleLink to Topology to reveal hidden GetMeshTopology Part 2 [#1199]( https://github.com/sofa-framework/sofa/pull/1199 ); - [All] Add update internal mechanism [#1131]( https://github.com/sofa-framework/sofa/pull/1131 ); - [All] Update the SOFA Guidelines [#1135]( https://github.com/sofa-framework/sofa/pull/1135 ); - **[SofaBaseMechanics]** Add topological change in barycentric mapping [#1203]( https://github.com/sofa-framework/sofa/pull/1203 ); - **[SofaBaseMechanics]** Use doUpdateInternal API in DiagonalMass [#1150]( https://github.com/sofa-framework/sofa/pull/1150 ); - **[SofaBaseMechanics]** Use doUpdateInternal API in UniformMass [#1149]( https://github.com/sofa-framework/sofa/pull/1149 ); - **[SofaBaseTopology]** Add new geometric methods in TetrahedronSetGeometryAlgorythms [#1160]( https://github.com/sofa-framework/sofa/pull/1160 ); - **[SofaCore]** Remove thread specific declaration [#1129]( https://github.com/sofa-framework/sofa/pull/1129 ); - [SofaGeneralEngine] Added Rigid to Euler orientation export [#1141]( https://github.com/sofa-framework/sofa/pull/1141 ); - [SofaHaptics] Add mutex and option to lock the ForceFeedback computation [#1157]( https://github.com/sofa-framework/sofa/pull/1157 ); - **[So,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:245244,Update,Update,245244,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"eying the object code work. A ""User Product"" is either (1) a ""consumer product"", which means any; tangible personal property which is normally used for personal, family,; or household purposes, or (2) anything designed or sold for incorporation; into a dwelling. In determining whether a product is a consumer product,; doubtful cases shall be resolved in favor of coverage. For a particular; product received by a particular user, ""normally used"" refers to a; typical or common use of that class of product, regardless of the status; of the particular user or of the way in which the particular user; actually uses, or expects or is expected to use, the product. A product; is a consumer product regardless of whether the product has substantial; commercial, industrial or non-consumer uses, unless such uses represent; the only significant mode of use of the product. ""Installation Information"" for a User Product means any methods,; procedures, authorization keys, or other information required to install; and execute modified versions of a covered work in that User Product from; a modified version of its Corresponding Source. The information must; suffice to ensure that the continued functioning of the modified object; code is in no case prevented or interfered with solely because; modification has been made. If you convey an object code work under this section in, or with, or; specifically for use in, a User Product, and the conveying occurs as; part of a transaction in which the right of possession and use of the; User Product is transferred to the recipient in perpetuity or for a; fixed term (regardless of how the transaction is characterized), the; Corresponding Source conveyed under this section must be accompanied; by the Installation Information. But this requirement does not apply; if neither you nor any third party retains the ability to install; modified object code on the User Product (for example, the work has; been installed in ROM). The requirement to provide Inst",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:34529,Install,Installation,34529,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,2,"['Install', 'install']","['Installation', 'install']"
Deployability,"f the barycentric mapping [#1125]( https://github.com/sofa-framework/sofa/pull/1125 ); - [SofaMisc] Fix compilation with SOFA_NO_OPENGL [#1193]( https://github.com/sofa-framework/sofa/pull/1193 ); - **[SofaSimulationGraph]** Fix CollisionGroupManager wrong search of deformable object node [#1060]( https://github.com/sofa-framework/sofa/pull/1060 ); - **[SofaSimulationGraph]** Stop DAGNode get parent topology process in BarycentricMapping [#1176]( https://github.com/sofa-framework/sofa/pull/1176 ); - [SofaSphFluid] Clean, Fix, Update ParticleSink [#1195]( https://github.com/sofa-framework/sofa/pull/1195 ). **Plugins / Projects**; - [All] Fix minor compilation issue in plugins [#1106]( https://github.com/sofa-framework/sofa/pull/1106 ); - [Carving plugin] Small fix at init. [#1110]( https://github.com/sofa-framework/sofa/pull/1110 ); - [Cgal plugin] Fix windows cmake dll path and add a scene example [#958]( https://github.com/sofa-framework/sofa/pull/958 ); - [Regression_test] Update regression test references for CollisionGroup [#1102]( https://github.com/sofa-framework/sofa/pull/1102 ). ### Cleanings. **Architecture**; - [CMake] Use cmake_dependent_option for plugin tests [#1164]( https://github.com/sofa-framework/sofa/pull/1164 ). **Modules**; - [All] Fix order warnings [#1239]( https://github.com/sofa-framework/sofa/pull/1239 ); - [All] Fix override warning in option mode [#1210]( https://github.com/sofa-framework/sofa/pull/1210 ); - [All] Small cleaning on sout and serr [#1234]( https://github.com/sofa-framework/sofa/pull/1234 ); - [All] Standardize epsilons in SOFA [#1049]( https://github.com/sofa-framework/sofa/pull/1049 ); - [All] Code cleaning of multiple classes [#1116]( https://github.com/sofa-framework/sofa/pull/1116 ); - [All] Remove deprecated macro SOFA_TRANGLEFEM [#1233]( https://github.com/sofa-framework/sofa/pull/1233 ); - [All] Remove references to ""isToPrint"" because it's broken [#1197]( https://github.com/sofa-framework/sofa/pull/1197 ); - [All] Re",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:253072,Update,Update,253072,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"f you distribute copies of the software, or if; you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether; gratis or for a fee, you must pass on to the recipients the same; freedoms that you received. You must make sure that they, too, receive; or can get the source code. And you must show them these terms so they; know their rights. Developers that use the GNU GPL protect your rights with two steps:; (1) assert copyright on the software, and (2) offer you this License; giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains; that there is no warranty for this free software. For both users' and; authors' sake, the GPL requires that modified versions be marked as; changed, so that their problems will not be attributed erroneously to; authors of previous versions. Some devices are designed to deny users access to install or run; modified versions of the software inside them, although the manufacturer; can do so. This is fundamentally incompatible with the aim of; protecting users' freedom to change the software. The systematic; pattern of such abuse occurs in the area of products for individuals to; use, which is precisely where it is most unacceptable. Therefore, we; have designed this version of the GPL to prohibit the practice for those; products. If such problems arise substantially in other domains, we; stand ready to extend this provision to those domains in future versions; of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents.; States should not allow patents to restrict development and use of; software on general-purpose computers, but in those that do, we wish to; avoid the special danger that patents applied to a free program could; make it effectively proprietary. To prevent this, the GPL assures that; patents cannot be used to render the ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:21325,install,install,21325,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['install'],['install']
Deployability,"fa when using negative or too large values in indices [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - [CI]; - improvement of all test scripts. **Plugins / Projects**; - [GUI]; - mouse events are now transmitted to the scene with QtGLViewer [#132]( https://github.com/sofa-framework/sofa/pull/132 ); - [SceneCreator]; - Cosmetic changes and remove un-needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch of tests [#286]( https://github.com/sofa-framework/sofa/pull/286 ); - [SofaTest]; - add Backtrace::autodump to all tests to ease debugging [#191]( https://github.com/sofa-framework/sofa/pull/191 ); - add automatic tests for updateForceMask [#209]( https://github.com/sofa-framework/sofa/pull/209 ); - add tests on PluginManager [#240]( https://github.com/sofa-framework/sofa/pull/240 ); - TestMessageHandler : new and robust implementation to connect msg_* message to test failure [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - update to use the new TestMessageHandler where msg_error generates test failures [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - add tests for TestMessageHandler [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - [SofaCUDA]; - FIX NVCC flags for debug build on Windows [#300]( https://github.com/sofa-framework/sofa/pull/300 ). ### Bug Fixes. **Modules**; - Warnings have been fixed [#229]( https://github.com/sofa-framework/sofa/pull/229 ); - [All]; - check that SofaPython is found before lauching the cmake sofa_set_python_directory command [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - use the cmake install DIRECTORY instead of ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:330234,update,updateForceMask,330234,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['updateForceMask']
Deployability,fa-framework/sofa/pull/1330 ); - [All] Remove all deprecation warnings after v1912 [#1241]( https://github.com/sofa-framework/sofa/pull/1241 ); - [All] v19.12 changes + DocBrowser by Defrost [#1275]( https://github.com/sofa-framework/sofa/pull/1275 ); - **[SofaBaseMechanics]** Change data name: handleTopologicalChanges in UniformM [#1291]( https://github.com/sofa-framework/sofa/pull/1291 ); - **[SofaCore/Visual]** Add new functions in drawTool (BREAKING) [#1252]( https://github.com/sofa-framework/sofa/pull/1252 ); - [SofaGeneralEngine] Refresh MeshBarycentricMapperEngine [#1404]( https://github.com/sofa-framework/sofa/pull/1404 ); - **[SofaCore]** ADD directory DataFileNames [#1407]( https://github.com/sofa-framework/sofa/pull/1407 ); - **[SofaKernel]** Refactor DDGNode [#1372]( https://github.com/sofa-framework/sofa/pull/1372 ); - **[SofaKernel]** Totally remove the macro CHECK_TOPOLOGY from BaseMeshTopology [#1399]( https://github.com/sofa-framework/sofa/pull/1399 ); - **[SofaKernel]** Update EulerExplicitSolver [#1260]( https://github.com/sofa-framework/sofa/pull/1260 ); - **[SofaKernel]** implement activer's code at CollisionModel. [#1259]( https://github.com/sofa-framework/sofa/pull/1259 ). **Plugins**; - [SofaCUDA] Arch auto-detection for nvcc [#1336]( https://github.com/sofa-framework/sofa/pull/1336 ). ### Improvements. **Architecture**; - [CMake] Create an IDE folder for all relocatable_install targets [#1405]( https://github.com/sofa-framework/sofa/pull/1405 ). **Modules**; - **[SofaBaseVisual]** Add camera gizmo in base camera [#1253]( https://github.com/sofa-framework/sofa/pull/1253 ); - **[SofaCore]** Remove warning in ExecParam [#1325]( https://github.com/sofa-framework/sofa/pull/1325 ); - **[SofaCore]** ADD: DataCallback system in Base [#1406]( https://github.com/sofa-framework/sofa/pull/1406 ); - **[SofaDefaultType]** Add a Ray type. [#1251]( https://github.com/sofa-framework/sofa/pull/1251 ); - **[SofaHelper]** Add the obj id to labels when available ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:231203,Update,Update,231203,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,fa-framework/sofa/pull/1346 ); - **[SofaKernel]** Remove X11 dependency when SOFA_NO_OPENGL is enabled. [#1370]( https://github.com/sofa-framework/sofa/pull/1370 ); - **[SofaKernel]** Who hates warnings? [#1258]( https://github.com/sofa-framework/sofa/pull/1258 ); - **[SofaKernel]** replace all serr by msg_error/msg_warning [#1237]( https://github.com/sofa-framework/sofa/pull/1237 ); - [SofaSparseSolver] Move CSparse and metis into SofaSparseSolver [#1357]( https://github.com/sofa-framework/sofa/pull/1357 ). **Plugins / Projects**; - [CGALPlugin] Clean and pluginization [#1308]( https://github.com/sofa-framework/sofa/pull/1308 ); - [Geomagic] Move all code related to device model display in a dedicated class. [#1366]( https://github.com/sofa-framework/sofa/pull/1366 ); - [Geomagic] Fix compilation [#1393]( https://github.com/sofa-framework/sofa/pull/1393 ); - [ManifoldTopologies] Remove CHECK_TOPOLOGY macro occurrences [#1353]( https://github.com/sofa-framework/sofa/pull/1353 ); - [ManifoldTopologies] Update the license in init.cpp [#1414]( https://github.com/sofa-framework/sofa/pull/1414 ); - [OpenCTMPlugin] Fix compilation and clean before moving out [#1359]( https://github.com/sofa-framework/sofa/pull/1359 ); - [PluginExample] Update PluginExample [#1356]( https://github.com/sofa-framework/sofa/pull/1356 ); - [Regression] Update hash [#1321]( https://github.com/sofa-framework/sofa/pull/1321 ); - [SofaSphFluid] Clean SofaFluid plugin compilation warning. [#1296]( https://github.com/sofa-framework/sofa/pull/1296 ). **Examples / Scenes**; - [examples] Fix and remove 3 scenes with deprecated component [#1355]( https://github.com/sofa-framework/sofa/pull/1355 ); - [examples] Remove useless files and add MeshMatrixMass example [#1257]( https://github.com/sofa-framework/sofa/pull/1257 ); - [scenes] Fix scenes from alias [#1292]( https://github.com/sofa-framework/sofa/pull/1292 ); - [scenes] Remove scene warnings due to Rigid template [#1295]( https://github.com/sofa-fram,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:242081,Update,Update,242081,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"fa-framework/sofa/pull/2274 ); - [SofaGuiGlut] Fix compilation for v21.12 [#2539]( https://github.com/sofa-framework/sofa/pull/2539 ). **Examples / Scenes**; - [examples] FIX duplicated scene in regression-tests [#2251]( https://github.com/sofa-framework/sofa/pull/2251 ); - [examples] FIX duplicated scene in regression-tests (2) [#2252]( https://github.com/sofa-framework/sofa/pull/2252 ). **Scripts / Tools**. ### Cleanings. **Architecture**; - [CMake] Remove option SOFA_ENABLE_SOFT_DEPS_TO_SOFAPYTHON [#2533]( https://github.com/sofa-framework/sofa/pull/2533 ); - [GitHub] Improve ""bug report"" issue template [#2454]( https://github.com/sofa-framework/sofa/pull/2454 ). **Modules**; - [All] Clean warnings [#1549]( https://github.com/sofa-framework/sofa/pull/1549 ); - [All] Remove several TopologyDataHandler and headers inclusion in components [#2162]( https://github.com/sofa-framework/sofa/pull/2162 ); - [All] Remove warnings [#2378]( https://github.com/sofa-framework/sofa/pull/2378 ); - [All] Update codebase to compile w/o Sofa.Compat for v21.12 [#2525]( https://github.com/sofa-framework/sofa/pull/2525 ); - [All] Update lifecycle (macros, etc) for v21.12 [#2524]( https://github.com/sofa-framework/sofa/pull/2524 ); - [All] Clean unreferenced files [#2333]( https://github.com/sofa-framework/sofa/pull/2333 ); - [All] Declaration hides previous local declaration [#2463]( https://github.com/sofa-framework/sofa/pull/2463 ); - [All] Expression is converted to bool and can be replaced [#2464]( https://github.com/sofa-framework/sofa/pull/2464 ); - [All] Minor cleaning [#2461]( https://github.com/sofa-framework/sofa/pull/2461 ); - [All] Minor code cleaning [#2225]( https://github.com/sofa-framework/sofa/pull/2225 ); - [All] Variable can be made constexpr [#2472]( https://github.com/sofa-framework/sofa/pull/2472 ); - [All] fix some warnings and remove unnecessary includes [#2312]( https://github.com/sofa-framework/sofa/pull/2312 ); - [All] Fix minor compilation warnings [#2233]( h",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:154631,Update,Update,154631,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,fa-framework/sofa/pull/545 ). **Plugins / Projects**; - [CGALPlugin]; - Fix build problem [#351]( https://github.com/sofa-framework/sofa/pull/351 ); - FIX build error with CGAL > 4.9.1 [#515]( https://github.com/sofa-framework/sofa/pull/515 ); - [CImgPlugin]; - Use sofa cmake command to create proper package [#544]( https://github.com/sofa-framework/sofa/pull/544 ); - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - prevent INT32 redefinition by libjpeg on Windows [#566]( https://github.com/sofa-framework/sofa/pull/566 ); - [ColladaSceneLoader]; - FIX Assimp copy on Windows [#504]( https://github.com/sofa-framework/sofa/pull/504 ); - [Flexible]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [image]; - Refactor CImg & CImgPlugin [#562]( https://github.com/sofa-framework/sofa/pull/562 ); - [Meshconv]; - fix build if no miniflowVR [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [MultiThreading]; - FIX: examples installation [#299]( https://github.com/sofa-framework/sofa/pull/299 ); - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ); - FIX Windows dll loading [#507]( https://github.com/sofa-framework/sofa/pull/507 ); - [runSofa]; - FIX plugin config copy on Windows [#451]( https://github.com/sofa-framework/sofa/pull/451 ); - remove non-ASCII chars in string [#327]( https://github.com/sofa-framework/sofa/pull/327 ); - FIX PluginRepository initialization [#502]( https://github.com/sofa-framework/sofa/pull/502 ); - [SofaCUDA]; - Fix compilation problem with cuda. [#320]( https://github.com/sofa-framework/sofa/pull/320 ); - Fix: Headers of the SofaCUDA plugin are now installed in the include folder [#383]( https://github.com/sofa-framework/sofa/pull/383 ); - FIX Configuration/compilation issue with CUDA plugin [#523]( https://github.com/sofa-framework/sofa/pull/523 ); - Fix linearforcefield that disappears [#525]( https://github.com/sofa-frame,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:317926,install,installation,317926,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['installation']
Deployability,"fa.GL in Framework [#1920]( https://github.com/sofa-framework/sofa/pull/1920 ); - [SofaGeneralEngine] fixes ExtrudeQuadsAndGenerateHexas [#1673]( https://github.com/sofa-framework/sofa/pull/1673 ); - [SofaGeneralExplicitOdeSolver] Fix typo in CentralDifferenceSolver description [#1894]( https://github.com/sofa-framework/sofa/pull/1894 ); - [SofaGraphComponent] Clean format of RequiredPlugin message [#2111]( https://github.com/sofa-framework/sofa/pull/2111 ); - [SofaGraphComponent] Fix a typo in the warning emited by the APIVersion component and add missing allowed versions. [#2103]( https://github.com/sofa-framework/sofa/pull/2103 ); - [SofaGraphComponent] Fix message for RequiredPlugin [#2093]( https://github.com/sofa-framework/sofa/pull/2093 ); - [SofaGuiCommon] FIX build with SOFA_NO_OPENGL [#1724]( https://github.com/sofa-framework/sofa/pull/1724 ); - [SofaGuiCommon] Fix computationTimeSampling [#1698]( https://github.com/sofa-framework/sofa/pull/1698 ); - [SofaGuiCommon] Fix include path for compat files when installing [#1892]( https://github.com/sofa-framework/sofa/pull/1892 ); - [SofaGuiCommon] Remove unneeded include in PickHandler [#1707]( https://github.com/sofa-framework/sofa/pull/1707 ); - [SofaGuiCommon] Write json file [#2018]( https://github.com/sofa-framework/sofa/pull/2018 ); - [SofaGuiCommon] fix BackgroundSetting [#1826]( https://github.com/sofa-framework/sofa/pull/1826 ); - [SofaGuiQt] ADD qt.conf.h for custom qt.conf loading at runtime [#1820]( https://github.com/sofa-framework/sofa/pull/1820 ); - [SofaGuiQt] Clean QtGLViewer with key events [#1850]( https://github.com/sofa-framework/sofa/pull/1850 ); - [SofaGuiQt] FIX ""show grid"" (G) shortcut for QGLViewer [#2151]( https://github.com/sofa-framework/sofa/pull/2151 ); - [SofaGuiQt] FIX segfault due to qFatal in GenGraphForm [#1948]( https://github.com/sofa-framework/sofa/pull/1948 ); - [SofaGuiQt] Fix Expand node [#2069]( https://github.com/sofa-framework/sofa/pull/2069 ); - [SofaGuiQt] Fix Expor",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:185844,install,installing,185844,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['installing']
Deployability,fa/pull/4483); - [all] Convert some loops to range-based [#4485](https://github.com/sofa-framework/sofa/pull/4485); - [Config] CMake: fix warning about upper/lowercase for Difflib [#4486](https://github.com/sofa-framework/sofa/pull/4486); - [README] Update badge with Discord [#4498](https://github.com/sofa-framework/sofa/pull/4498); - [Plugins] Move MeshSTEPLoader to an external repository [#4504](https://github.com/sofa-framework/sofa/pull/4504); - [Plugins] Gather external plugins configs in a same folder (proposal) [#4505](https://github.com/sofa-framework/sofa/pull/4505); - [image] Fix scene test [#4517](https://github.com/sofa-framework/sofa/pull/4517); - [GitHub] Update version of the actions/github-script [#4522](https://github.com/sofa-framework/sofa/pull/4522); - [GUI] Remove the New/Save/SaveAs menu options [#4523](https://github.com/sofa-framework/sofa/pull/4523); - [all] Additional fixes further to v24.06 lifecycle [#4540](https://github.com/sofa-framework/sofa/pull/4540); - [Core] Update NarrowPhaseDetection.cpp use prefix [#4557](https://github.com/sofa-framework/sofa/pull/4557); - [Geomagic] Update GeomagicDriver.cpp to fire error when hd.h is not found [#4576](https://github.com/sofa-framework/sofa/pull/4576); - [CMake] Upgrade cmake_minimum_required to 3.22 [#4586](https://github.com/sofa-framework/sofa/pull/4586); - [Core] Remove unused debug trace [#4590](https://github.com/sofa-framework/sofa/pull/4590); - [Core] cmake: Remove last traces of Sofa.Component.Compat [#4596](https://github.com/sofa-framework/sofa/pull/4596); - [LinearAlgebra] Remove empty source file [#4599](https://github.com/sofa-framework/sofa/pull/4599); - [Type] Clean and test MatSym [#4600](https://github.com/sofa-framework/sofa/pull/4600); - [tests] Use appropriate gtest macro [#4607](https://github.com/sofa-framework/sofa/pull/4607); - [LinearSystem] Remove development artifact [#4620](https://github.com/sofa-framework/sofa/pull/4620); - [all] Minor last fixes using SimpleApi ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:15707,Update,Update,15707,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,fa/pull/4682); - [Topology] Rename Data [#4683](https://github.com/sofa-framework/sofa/pull/4683); - [Visual] Rename Data [#4684](https://github.com/sofa-framework/sofa/pull/4684); - [Constraint] Rename Data [#4696](https://github.com/sofa-framework/sofa/pull/4696); - [all] Rename depreciation macros in config.h.in for unique module id… [#4755](https://github.com/sofa-framework/sofa/pull/4755); - [examples] Rename FixedConstraint example [#4764](https://github.com/sofa-framework/sofa/pull/4764). ### Others. - [Helper] PluginManager: testing loading a plugin with a dependency on an other plugin [#4464](https://github.com/sofa-framework/sofa/pull/4464); - [Simulation] Tests: introduce multiple parallel simulations [#4580](https://github.com/sofa-framework/sofa/pull/4580); - [Simulation.Core] Remove useless and annoying timers [#4631](https://github.com/sofa-framework/sofa/pull/4631); - [image] Fix module name [#4720](https://github.com/sofa-framework/sofa/pull/4720); - [tools] Add metis relocation in post install fixup [#4767](https://github.com/sofa-framework/sofa/pull/4767). ## [v23.12.00]( https://github.com/sofa-framework/sofa/tree/v23.12.00 ). [Full log](https://github.com/sofa-framework/sofa/compare/v23.06..v23.12). ### Highlighted contributions; - [Mass] Remove DiagonalMass and replace with MeshMatrixMass (with lumping) [#3001](https://github.com/sofa-framework/sofa/pull/3001); - [LinearAlgebra] Pull Insimo's CompressedRowSparseMatrix into the main branch [#3515](https://github.com/sofa-framework/sofa/pull/3515); - [plugins] Add fetchable SoftRobots [#3882](https://github.com/sofa-framework/sofa/pull/3882); - [Sofa.Simulation] First steps to remove the singleton Simulation [#3889](https://github.com/sofa-framework/sofa/pull/3889); - [plugins] ADD external collisions plugins [#3890](https://github.com/sofa-framework/sofa/pull/3890); - [LinearAlgebra] Implement CompressedRowSparseMatrixConstraint [#3894](https://github.com/sofa-framework/sofa/pull/3894); - [Simul,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:21001,install,install,21001,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,"framework/sofa/pull/313 ); - Add GIL management [#326]( https://github.com/sofa-framework/sofa/pull/326 ); - Add support for Sofa.msg_ with emitter other than a string [#335]( https://github.com/sofa-framework/sofa/pull/335 ); - Adding new features for AdvancedTimer [#360]( https://github.com/sofa-framework/sofa/pull/360 ); - forward sys.argv to python scripts [#368]( https://github.com/sofa-framework/sofa/pull/368 ); - sparse matrix aliasing scipy/eigen [#411]( https://github.com/sofa-framework/sofa/pull/411 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ). **Other**; - [Tools]; - Update astyle config [#550]( https://github.com/sofa-framework/sofa/pull/550 ). ### Bug Fixes. **Kernel modules**; - [All]; - CMake: Fix and clean boost, when using Sofa as an external lib [#421]( https://github.com/sofa-framework/sofa/pull/421 ); - Fix computeBBox functions [#527]( https://github.com/sofa-framework/sofa/pull/527 ); - CMake: FIX Boost::program_options finding in install [#618]( https://github.com/sofa-framework/sofa/pull/618 ); - [SofaBaseLinearSolver]; - FIX no step if condition on denominator is met at first step [#521]( https://github.com/sofa-framework/sofa/pull/521 ); - FIX breaking condition in CG at first step regarding threshold [#556]( https://github.com/sofa-framework/sofa/pull/556 ); - [SofaBaseMechanics]; - Make sure the mechanical object's state vectors size matches their respective argument size [#406]( https://github.com/sofa-framework/sofa/pull/406 ); - [SofaBaseTopology]; - FIX wrong clean in PointSetTopologyModifier [#380]( https://github.com/sofa-framework/sofa/pull/380 ); - [SofaComponentCommon]; - Always register all its components in the object factory [#488]( https://github.com/sofa-framework/sofa/pull/488 ); - [SofaCore]; - FIX CreateString problem on root node [#377]( https://github.com/sofa-framework/sofa/pull/377 ); - FIX don't inline exported functions [#449]( https://github.com/sofa-framew",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:311785,install,install,311785,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,"framework/sofa/pull/3727) ; - [plugins] ArticulatedSystemMapping : adds size check & fixes typo [#3751](https://github.com/sofa-framework/sofa/pull/3751) . **Examples / Scenes**; - [All] Fix example scenes showing warnings or errors [#3526](https://github.com/sofa-framework/sofa/pull/3526) ; - [all] Update totalmass to totalMass [#3622](https://github.com/sofa-framework/sofa/pull/3622) . **Scripts / Tools**; - [CI, Scenes] Restore custom parameters for the scene-tests [#3674](https://github.com/sofa-framework/sofa/pull/3674) . ### Cleaning. **Architecture**; - [all] Lifecycle v22.06 [#3535](https://github.com/sofa-framework/sofa/pull/3535) ; - [Type] Quat: small optimization for axisToQuat() [#3559](https://github.com/sofa-framework/sofa/pull/3559) ; - [Config] Remove unused SOFA_WITH_THREADING option [#3565](https://github.com/sofa-framework/sofa/pull/3565) ; - [Project] Start v23.06 dev phase [#3573](https://github.com/sofa-framework/sofa/pull/3573) ; - [Cmake] Update warning replacement message for deprecated macro sofa_add_XX [#3611](https://github.com/sofa-framework/sofa/pull/3611) ; - [Sofa] Remove warnings [#3627](https://github.com/sofa-framework/sofa/pull/3627) ; - [Sofa.framework] Compile and run tests when SReal is float [#3628](https://github.com/sofa-framework/sofa/pull/3628) ; - [Type] Fix massive warning due to Mat.h [#3633](https://github.com/sofa-framework/sofa/pull/3633) ; - [Core] TLink: Fix warnings about comparisons between unnamed enums [#3714](https://github.com/sofa-framework/sofa/pull/3714) ; - [Helper] Deprecate constructor of OptionsGroup [#3741](https://github.com/sofa-framework/sofa/pull/3741) ; - [Config] Remove suspicious Eigen macro preventing vectorization [#3780](https://github.com/sofa-framework/sofa/pull/3780) . **Modules**; - [StateContainer] Avoid code duplication in MechanicalObject [#3541](https://github.com/sofa-framework/sofa/pull/3541) ; - [FEM.Elastic] Fix unit tests warnings [#3545](https://github.com/sofa-framework/sofa/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:61599,Update,Update,61599,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,from deprecated function [#3359](https://github.com/sofa-framework/sofa/pull/3359) ; - [SofaDistanceGrid] Clean examples [#3399](https://github.com/sofa-framework/sofa/pull/3399) ; - [image] Remove example scenes requiring Flexible plugin [#3421](https://github.com/sofa-framework/sofa/pull/3421) ; - [GL.Rendering3D] OglModel: Minor cleanups [#3417](https://github.com/sofa-framework/sofa/pull/3417) ; - [MultiThreading] Clean file format [#3476](https://github.com/sofa-framework/sofa/pull/3476) ; - [applications] remove shadow variable [#3488](https://github.com/sofa-framework/sofa/pull/3488) ; - [plugins] SofaCUDA does not require Sofa.GL [#3514](https://github.com/sofa-framework/sofa/pull/3514) ; - [SofaPhysicsAPI] Some small cleaning and add access to VisualModel* [#3519](https://github.com/sofa-framework/sofa/pull/3519) . **Examples / Scenes**; - [examples] Another pass of plugin finder [#3351](https://github.com/sofa-framework/sofa/pull/3351) . **Scripts / Tools**; - [metis] Upgrade metis and GKlib [#3063](https://github.com/sofa-framework/sofa/pull/3063) ; - [git] Add various temporary files to .gitignore [#3344](https://github.com/sofa-framework/sofa/pull/3344) . ### Refactoring. **Architecture**; - [Sofa.Core] Move operator<<(Data&) into operator<<(BaseData). [#3300](https://github.com/sofa-framework/sofa/pull/3300) . **Modules**; - [Lagrangian.Solver] Move GenericConstraintProblem in its own files [#3396](https://github.com/sofa-framework/sofa/pull/3396) . ## [v22.06.00]( https://github.com/sofa-framework/sofa/tree/v22.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.12.00...v22.06.00 ). ### SOFA-NG. **Architecture**; - [SofaNG] Dispatch SofaHaptics and SofaValidation [#3041]( https://github.com/sofa-framework/sofa/pull/3041 ); - [SofaNG] Dispatch useful SofaMiscCollision components into S.C.Collision [#2896]( https://github.com/sofa-framework/sofa/pull/2896 ); - [SofaNG] Re-organize Framework [#2876]( https://github.com/sofa-framework/s,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:91287,Upgrade,Upgrade,91287,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Upgrade'],['Upgrade']
Deployability,"g includes. [#3277](https://github.com/sofa-framework/sofa/pull/3277) ; - [all] Minor warning fixes [#3306](https://github.com/sofa-framework/sofa/pull/3306) ; - [LinearSolver.Direct] Missing call to super init() [#3316](https://github.com/sofa-framework/sofa/pull/3316) ; - [LinearAlgebra] Fix BDT compilation [#3333](https://github.com/sofa-framework/sofa/pull/3333) ; - [BarycentricMappers] Fix potential division by 0 [#3383](https://github.com/sofa-framework/sofa/pull/3383) ; - [Engine.Analyze] ClusteringEngine: set correct values in load() [#3398](https://github.com/sofa-framework/sofa/pull/3398) ; - [Tests] Update tests to new modules [#3406](https://github.com/sofa-framework/sofa/pull/3406) ; - [Tests] Fix mutiple component init calls in several tests [#3447](https://github.com/sofa-framework/sofa/pull/3447) ; - [image, FEM, LinearSolver] fix Eigen3 assertion with SVD [#3452](https://github.com/sofa-framework/sofa/pull/3452) ; - [Constraint.lagrangian] Update BilateralInteractionConstraint namespace [#3468](https://github.com/sofa-framework/sofa/pull/3468) ; - [Topology.container] Fix missing TopologyElementType setting in SparseGridTopology init [#3475](https://github.com/sofa-framework/sofa/pull/3475) ; - [LinearSolver.Direct] Fix crashing unit tests [#3512](https://github.com/sofa-framework/sofa/pull/3512) ; - [LinearSolver.Direct] Segfault in SparseLDLSolver due to empty system matrix [#3529](https://github.com/sofa-framework/sofa/pull/3529) ; - [Tests] Update required plugins in tests [#3542](https://github.com/sofa-framework/sofa/pull/3542) . **Plugins / Projects**; - [SofaCUDA] FIX namespaces [#2935](https://github.com/sofa-framework/sofa/pull/2935) ; - [Plugins] Fix Cmake configuration w/o compat [#3209](https://github.com/sofa-framework/sofa/pull/3209) ; - [GUI.Qt] Fix MSAA sampling setup [#3220](https://github.com/sofa-framework/sofa/pull/3220) ; - [DrawToolGL] Fix ill-formed drawLines with multiple colors [#3260](https://github.com/sofa-framework/sofa/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:80589,Update,Update,80589,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"get_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS ""${SOFACONFIG_LINK_OPTIONS}""); endif(); else(); target_link_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:RELEASE>:${SOFACONFIG_LINK_OPTIONS_RELEASE}>""); target_link_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:DEBUG>:${SOFACONFIG_LINK_OPTIONS_DEBUG}>""); target_link_options(${PROJECT_NAME} PUBLIC ""${SOFACONFIG_LINK_OPTIONS}""); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. # Attach Sofa Version into properties; set_target_properties(${PROJECT_NAME} PROPERTIES Sofa_VERSION ""${Sofa_VERSION}""); set_target_properties(${PROJECT_NAME} PROPERTIES SOFA_VERSION_STR ""${SOFA_VERSION_STR}""); set_target_properties(${PROJECT_NAME} PROPERTIES SOFA_VERSION ""${SOFA_VERSION}""). set_target_properties(${PROJECT_NAME} PROPERTIES SOFA_URL ""${SOFA_URL}""). # CMakeParseLibraryList.cmake; configure_file(cmake/CMakeParseLibraryList.cmake ${CMAKE_BINARY_DIR}/lib/cmake/CMakeParseLibraryList.cmake COPYONLY); install(FILES cmake/CMakeParseLibraryList.cmake DESTINATION lib/cmake/${PROJECT_NAME} COMPONENT headers). # SofaMacros*.cmake; set(macro_files SofaMacros.cmake SofaMacrosConfigure.cmake SofaMacrosInstall.cmake SofaMacrosPython.cmake SofaMacrosUtils.cmake); foreach(macro_file ${macro_files}); configure_file(cmake/${macro_file} ${CMAKE_BINARY_DIR}/lib/cmake/${macro_file} COPYONLY); install(FILES cmake/${macro_file} DESTINATION lib/cmake/${PROJECT_NAME} COMPONENT headers); endforeach(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Propagate variables (which were in Sofa's global cmakelist); # TODO: Put instead into a target_property ?; set(CMAKE_MODULE_PATH ""${CMAKE_MODULE_PATH}"" PARENT_SCOPE); set(CMAKE_PREFIX_PATH ""${CMAKE_PREFIX_PATH}"" PARENT_SCOPE); set(SOFA_WITH_FLOAT ""${SOFA_WITH_FLOAT}"" PARENT_SCOPE); set(SOFA_WITH_DOUBLE ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:15119,install,install,15119,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['install'],['install']
Deployability,gonalMass_test [#832]( https://github.com/sofa-framework/sofa/pull/832 ); - **[SofaBaseTopology]** Fix SparseGridTopology initialization with an input mesh [#670]( https://github.com/sofa-framework/sofa/pull/670 ); - [SofaBoundaryCondition] FIX AffineMovementConstraint orientation issue [#824]( https://github.com/sofa-framework/sofa/pull/824 ); - [SofaCarving] Modify the CMake config file to allow other plugins link to Sofa Carving [#781]( https://github.com/sofa-framework/sofa/pull/781 ); - **[SofaCore]** FIX: enable ExtVecXf mappings with double floating type [#827]( https://github.com/sofa-framework/sofa/pull/827 ); - [SofaDeformable] Fix MeshSpring ForceField and Loader [#815]( https://github.com/sofa-framework/sofa/pull/815 ); - **[SofaFramework]** Keep SOFA_EXTERN_TEMPLATE macro definition [#870]( https://github.com/sofa-framework/sofa/pull/870 ); - [SofaGui] ADD option to enable VSync (default: OFF) [#722]( https://github.com/sofa-framework/sofa/pull/722 ); - [SofaOpenglVisual] Rollback removal of Ogl components [#905]( https://github.com/sofa-framework/sofa/pull/905 ); - **[SofaKernel]** FIX bug in toEulerVector [#399]( https://github.com/sofa-framework/sofa/pull/399 ); - **[SofaKernel]** FIX segfault created by static initialisers on OSX/clang compiler [#642]( https://github.com/sofa-framework/sofa/pull/642 ); - **[SofaKernel]** Fix: correct path writing in sofa_set_python_directory macro [#763]( https://github.com/sofa-framework/sofa/pull/763 ); - **[SofaKernel]** Check if Quaternion has norm 1 [#790]( https://github.com/sofa-framework/sofa/pull/790 ); - [SofaPreconditioner] FIX ShewchukPCGLinearSolver [#737]( https://github.com/sofa-framework/sofa/pull/737 ). **Plugins / Projects**; - [CGALPlugin] fix compilation [#783]( https://github.com/sofa-framework/sofa/pull/783 ); - [CGALPlugin] Fix compilation for cgal 4.12+ (cgal::polyhedron_3 is now forward declared) [#812]( https://github.com/sofa-framework/sofa/pull/812 ); - [CImgPlugin] CMake/Mac: lower priori,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:285392,Rollback,Rollback,285392,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Rollback'],['Rollback']
Deployability,"googletest_SOURCE_DIR}""). add_subdirectory(${googletest_SOURCE_DIR} ${googletest_BINARY_DIR}). target_compile_options(gtest_main PRIVATE ""-DGTEST_LINKED_AS_SHARED_LIBRARY=0""); target_compile_options(gtest PRIVATE ""-DGTEST_CREATE_SHARED_LIBRARY=1""). install(DIRECTORY ${googletest_SOURCE_DIR}/googletest/include/gtest DESTINATION include/extlibs/GTest/ COMPONENT headers); target_include_directories(gtest PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/GTest/>""); ; include(SofaMacros); sofa_create_package_with_targets(; PACKAGE_NAME GTest; PACKAGE_VERSION 1.14.0; TARGETS gtest AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""include""; INCLUDE_INSTALL_DIR ""extlibs/GTest""; ). set_target_properties(gtest PROPERTIES FOLDER Testing); set_target_properties(gtest_main PROPERTIES FOLDER Testing); endif(); elseif (NOT GTest_FOUND); message(FATAL_ERROR ""${PROJECT_NAME}: DEPENDENCY googletest NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install googletest, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # add custom googletest main; add_subdirectory(SofaGTestMain). set(SOFATESTINGSRC_ROOT ""src/sofa/testing""). set(HEADER_FILES; ${SOFATESTINGSRC_ROOT}/config.h.in; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.h; ${SOFATESTINGSRC_ROOT}/BaseTest.h; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.h; ${SOFATESTINGSRC_ROOT}/NumericTest.h; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.h; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.h; ). set(SOURCE_FILES; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.cpp; ${SOFATESTINGSRC_ROOT}/BaseTest.cpp; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.cpp; ${SOFATESTINGSRC_ROOT}/NumericTest.cpp; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.cpp; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.cpp; ). sofa_find_package(Sofa.Helper REQUIRED); sofa_find_package(Sofa.DefaultType REQUIRED); sofa_find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt:1948,Install,Install,1948,Sofa/framework/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt,1,['Install'],['Install']
Deployability,gs [#4469](https://github.com/sofa-framework/sofa/pull/4469); - [framework] Fix typo [#4474](https://github.com/sofa-framework/sofa/pull/4474); - [all] Apply nested namespaces [#4482](https://github.com/sofa-framework/sofa/pull/4482); - [all] Missing override keyword [#4483](https://github.com/sofa-framework/sofa/pull/4483); - [all] Convert some loops to range-based [#4485](https://github.com/sofa-framework/sofa/pull/4485); - [Config] CMake: fix warning about upper/lowercase for Difflib [#4486](https://github.com/sofa-framework/sofa/pull/4486); - [README] Update badge with Discord [#4498](https://github.com/sofa-framework/sofa/pull/4498); - [Plugins] Move MeshSTEPLoader to an external repository [#4504](https://github.com/sofa-framework/sofa/pull/4504); - [Plugins] Gather external plugins configs in a same folder (proposal) [#4505](https://github.com/sofa-framework/sofa/pull/4505); - [image] Fix scene test [#4517](https://github.com/sofa-framework/sofa/pull/4517); - [GitHub] Update version of the actions/github-script [#4522](https://github.com/sofa-framework/sofa/pull/4522); - [GUI] Remove the New/Save/SaveAs menu options [#4523](https://github.com/sofa-framework/sofa/pull/4523); - [all] Additional fixes further to v24.06 lifecycle [#4540](https://github.com/sofa-framework/sofa/pull/4540); - [Core] Update NarrowPhaseDetection.cpp use prefix [#4557](https://github.com/sofa-framework/sofa/pull/4557); - [Geomagic] Update GeomagicDriver.cpp to fire error when hd.h is not found [#4576](https://github.com/sofa-framework/sofa/pull/4576); - [CMake] Upgrade cmake_minimum_required to 3.22 [#4586](https://github.com/sofa-framework/sofa/pull/4586); - [Core] Remove unused debug trace [#4590](https://github.com/sofa-framework/sofa/pull/4590); - [Core] cmake: Remove last traces of Sofa.Component.Compat [#4596](https://github.com/sofa-framework/sofa/pull/4596); - [LinearAlgebra] Remove empty source file [#4599](https://github.com/sofa-framework/sofa/pull/4599); - [Type] Clean and ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:15376,Update,Update,15376,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"ials, we show the different integration schemes and algorithms available to solve the system of Ordinary Differential Equations (ODE) at each step of the simulation. SOFA provides the following integration schemes:; ; Static integration scheme,; Explicit integration schemes,; Implicit integration schemes. Before going any further, it is important to know that state vectors in SOFA are saved in a component called ""State"" (see chapter ""State"" in the documentation).; For instance, when mechanical models are being solved, the user needs to add a ""MechanicalState"" component in the graph.; Inside the component, the format of storage for the state vector is a structure called MultiVector.; The size and the nature of the degrees of freedom is chosen by setting a ""template"" in the State component. Let us now go into details about the different ODE solvers in SOFA. First, the static integration is an integration which does not take the time into account. Such a static integration can be useful for checking the convergence of algorithms. Furthermore, different dynamic solvers have been implement in SOFA. Unlike static solvers, these solvers do take the dynamics of the system into account. However, depending on the aim of the computation, the solver has to be carefully chosen.; Let us review the basic differences between explicit and implicit solvers. Concerning the explicit solvers, they compute the new state variables from the state variables at the previous step.; The advantage is that explicit solvers can be fast, but the stability of the solver is not always granted. Very small time steps can be required to get satisfactory accuracy.; Moreover, such solvers are not suitable for every simulation. For example, explicit solvers do not compute cyclic loadings correctly, but could be advised in case of soft or high-mass objects. Concerning implicit solvers, they compute the new state variables by solving an equation involving the previous state variables and the new ones.; In c",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html:1072,integrat,integration,1072,examples/Tutorials/Solvers/Solvers.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html,1,['integrat'],['integration']
Deployability,"ic tests for updateForceMask [#209]( https://github.com/sofa-framework/sofa/pull/209 ); - add tests on PluginManager [#240]( https://github.com/sofa-framework/sofa/pull/240 ); - TestMessageHandler : new and robust implementation to connect msg_* message to test failure [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - update to use the new TestMessageHandler where msg_error generates test failures [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - add tests for TestMessageHandler [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - [SofaCUDA]; - FIX NVCC flags for debug build on Windows [#300]( https://github.com/sofa-framework/sofa/pull/300 ). ### Bug Fixes. **Modules**; - Warnings have been fixed [#229]( https://github.com/sofa-framework/sofa/pull/229 ); - [All]; - check that SofaPython is found before lauching the cmake sofa_set_python_directory command [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - use the cmake install DIRECTORY instead of FILES to preserve the files hierarchy when installing [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - fixing issue related to parsing attributes with atof/atoi [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - unify color datafield [#206]( https://github.com/sofa-framework/sofa/pull/206 ); - Fix CMakeLists bug on Sofa.ini and installedSofa.ini creation [#291]( https://github.com/sofa-framework/sofa/pull/291 ); - Fix a lot of failing tests (#271, #279); - Fix compilation with SOFA_FLOATING_POINT_TYPE as float [#262]( https://github.com/sofa-framework/sofa/pull/262 ); - CMake: Fix and clean boost, when using Sofa as an external lib [#421]( https://github.com/sofa-framework/sofa/pull/421 ); - [SofaKernel]; - Fix the Filemonitor_test random failure on MacOs [#143]( https://github.com/sofa-framework/sofa/pull/143 ); - implement a numerical integration for triangle [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - add brace initializer to helper::vector c",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:331194,install,install,331194,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['install'],"['install', 'installing']"
Deployability,"icial; standard defined by a recognized standards body, or, in the case of; interfaces specified for a particular programming language, one that; is widely used among developers working in that language. The ""System Libraries"" of an executable work include anything, other; than the work as a whole, that (a) is included in the normal form of; packaging a Major Component, but which is not part of that Major; Component, and (b) serves only to enable use of the work with that; Major Component, or to implement a Standard Interface for which an; implementation is available to the public in source code form. A; ""Major Component"", in this context, means a major essential component; (kernel, window system, and so on) of the specific operating system; (if any) on which the executable work runs, or a compiler used to; produce the work, or an object code interpreter used to run it. The ""Corresponding Source"" for a work in object code form means all; the source code needed to generate, install, and (for an executable; work) run the object code and to modify the work, including scripts to; control those activities. However, it does not include the work's; System Libraries, or general-purpose tools or generally available free; programs which are used unmodified in performing those activities but; which are not part of the work. For example, Corresponding Source; includes interface definition files associated with source files for; the work, and the source code for shared libraries and dynamically; linked subprograms that the work is specifically designed to require,; such as by intimate data communication or control flow between those; subprograms and other parts of the work. The Corresponding Source need not include anything that users; can regenerate automatically from other parts of the Corresponding; Source. The Corresponding Source for a work in source code form is that; same work. 2. Basic Permissions. All rights granted under this License are granted for the term of; copyri",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:25566,install,install,25566,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['install'],['install']
Deployability,"icsAPI] Add C bindings to access C++ api [#3539](https://github.com/sofa-framework/sofa/pull/3539) ; - [SofaPhysicsAPI] Add methods and C bindings to load SOFA ini file, plugins and messageHandler [#3540](https://github.com/sofa-framework/sofa/pull/3540) . ### Bug Fixes. **Architecture**; - [Config] Rename ide folder for libraries [#3214](https://github.com/sofa-framework/sofa/pull/3214) ; - [CMake] FIX parent modules library consistency [#3225](https://github.com/sofa-framework/sofa/pull/3225) ; - [CMake] FIX out-of-tree SofaGui and runSofa locations [#3229](https://github.com/sofa-framework/sofa/pull/3229); - [Sofa.Type] Fix compile-time Mat and Vec [#3281](https://github.com/sofa-framework/sofa/pull/3281) ; - [Simulation.Core] Fix import of required plugins [#3322](https://github.com/sofa-framework/sofa/pull/3322) ; - [Topology] Fix internal infinite update loop in TopologySubsetData remove process [#3330](https://github.com/sofa-framework/sofa/pull/3330) ; - [Topology] Update getLastElementIndex in TopologySubsetIndices [#3331](https://github.com/sofa-framework/sofa/pull/3331) ; - [Core.Collision] Fix memory leak in NarrowPhaseDetection and IntersectorFactory [#3337](https://github.com/sofa-framework/sofa/pull/3337) ; - [Type] Remove explicit template instantiation to restore performances [#3349](https://github.com/sofa-framework/sofa/pull/3349) ; - [Topology] Fix topologyHandler removal [#3369](https://github.com/sofa-framework/sofa/pull/3369) ; - [Mapping.Linear] Fix assert [#3432](https://github.com/sofa-framework/sofa/pull/3432) ; - [DefaultType] fix rigidcoord compilation [#3462](https://github.com/sofa-framework/sofa/pull/3462) ; - Revert ""[Sofa.Core] Linear time getRoot() method in BaseNode and Node"" [#3464](https://github.com/sofa-framework/sofa/pull/3464) ; - [Sofa.Core, SofaSphFluid] Fix compilation with MSVC 2022, v17.4 [#3466](https://github.com/sofa-framework/sofa/pull/3466) ; - [Simulation.Core] Add the _API flag to Task::Status [#3543](https://gith",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:77649,Update,Update,77649,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,id obj loading + tests [#1231]( https://github.com/sofa-framework/sofa/pull/1231 ); - [SofaComponentAll] FIX SofaAllCommonComponents backward compatibility [#1204]( https://github.com/sofa-framework/sofa/pull/1204 ); - [SofaConstraint] Fix UncoupledConstraintCorrection topology change handling [#1115]( https://github.com/sofa-framework/sofa/pull/1115 ); - [SofaConstraint] Fix crash with PrecomputedConstraintCorrection [#1230]( https://github.com/sofa-framework/sofa/pull/1230 ); - **[SofaCore]** FIX decode functions in BaseClass [#1222]( https://github.com/sofa-framework/sofa/pull/1222 ); - **[SofaDefaulttype]** FIX too many ExtVec warnings with GCC [#1140]( https://github.com/sofa-framework/sofa/pull/1140 ); - [SofaExporter] Move bindings from SofaPython [#1095]( https://github.com/sofa-framework/sofa/pull/1095 ); - **[SofaFramework]** Add other orders for fromEuler() for Quaternions. [#1221]( https://github.com/sofa-framework/sofa/pull/1221 ); - **[SofaFramework]** Install the SofaSimulationCore target back into the SofaFramework package [#1182]( https://github.com/sofa-framework/sofa/pull/1182 ); - [SofaGuiQt] Fix unexpected symbol in CMakeLists [#1132]( https://github.com/sofa-framework/sofa/pull/1132 ); - [SofaGui] FIX missing find_package in SofaGuiConfig.cmake.in [#1198]( https://github.com/sofa-framework/sofa/pull/1198 ); - [SofaGui] Fix VideoRecorder [#1138]( https://github.com/sofa-framework/sofa/pull/1138 ); - [SofaGui] Prevent the GuiManager to store a pointer for the valid gui name [#1108]( https://github.com/sofa-framework/sofa/pull/1108 ); - [SofaHeadlessRecorder] FIX headlessRecorder_test [#1174]( https://github.com/sofa-framework/sofa/pull/1174 ); - **[SofaHelper]** FIX Eigen install path [#1240]( https://github.com/sofa-framework/sofa/pull/1240 ); - **[SofaKernel]** Add bloc access in basematrix [#1143]( https://github.com/sofa-framework/sofa/pull/1143 ); - **[SofaKernel]** Changes for Visual Studio and c++17 [#1162]( https://github.com/sofa-framewor,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:250322,Install,Install,250322,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Install'],['Install']
Deployability,"ies; # Sofa.Component; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES ""Sofa.Component.*"" AND NOT target MATCHES "".*_relocatable_install""); set_target_properties(${target} PROPERTIES FOLDER Sofa.Component) # IDE folder; endif(); endforeach(); # Testing; if(TARGET Sofa.Testing) # No need to search for test targets if tests are not enabled; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES "".*_test"" OR target MATCHES "".*_simutest""); set_target_properties(${target} PROPERTIES FOLDER Testing) # IDE folder; endif(); endforeach(); endif(); ##. ## Install configuration; #install(FILES ""${CMAKE_BINARY_DIR}/CMakeCache.txt"" DESTINATION . COMPONENT headers); install(FILES ""${CMAKE_SOURCE_DIR}/README.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/CHANGELOG.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/LICENSE-LGPL.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/Authors.txt"" DESTINATION . COMPONENT applications). option(SOFA_INSTALL_RESOURCES_FILES ""Copy resources files (etc/, share/, examples/, tools/sofa-launcher/) when installing"" ON); ## Install resource files; if(SOFA_INSTALL_RESOURCES_FILES); install(DIRECTORY share/ DESTINATION share/sofa COMPONENT resources); install(DIRECTORY examples/ DESTINATION share/sofa/examples COMPONENT resources); install(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about plugins, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#plugin""); install(DIRECTORY ${CMAKE_BINARY_DIR}/plugins/ DESTINATION plugins COMPONENT resources); file(WRITE ""${CMAKE_BINARY_DIR}/collections/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about co",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:10332,install,install,10332,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['install'],['install']
Deployability,iformSampling: 6.6; computeWeights: 8.01; computeLinearRegionsSampling: 0.29; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 50; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.54; computeWeights: 8.05; computeLinearRegionsSampling: 0.29; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg2.ppm 3 6; computeUniformSampling: 2.09; computeWeights: 15.09; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 10; computeUniformSampling: 2.08; computeWeights: 15.01; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 20; computeUniformSampling: 2.1; computeWeights: 15.07; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 50; computeUniformSampling: 2.08; computeWeights: 14.87; computeLinearRegionsSampling: 0.25; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 5 6; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.11; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.04; Lloyd_iteration 2.09; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.04; Lloyd_iteration 2.06; Lloyd_iteration 2.09; Lloyd_iteration 2.05; Lloyd_iteration 2.05; Lloyd_iteration 2.05; Lloyd_iteration 2.09; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.1; Lloyd_iteration 2.05; Lloyd_iteration 2.05; Lloyd_iteration 2.04; Lloyd_iteration 2.06; Lloyd_iteration 2.1; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.04; Lloyd_iteration 2.12; Lloyd_iteration 2.04; Llo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:5409,update,updateSampleMaterialProperties,5409,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,imateVisitor.cpp; ${SRC_ROOT}/BaseMechanicalVisitor.cpp; ${SRC_ROOT}/BehaviorUpdatePositionVisitor.cpp; ${SRC_ROOT}/CleanupVisitor.cpp; ${SRC_ROOT}/CollisionAnimationLoop.cpp; ${SRC_ROOT}/CollisionBeginEvent.cpp; ${SRC_ROOT}/CollisionEndEvent.cpp; ${SRC_ROOT}/CollisionVisitor.cpp; ${SRC_ROOT}/CpuTask.cpp; ${SRC_ROOT}/CpuTaskStatus.cpp; ${SRC_ROOT}/DeactivatedNodeVisitor.cpp; ${SRC_ROOT}/DefaultAnimationLoop.cpp; ${SRC_ROOT}/DefaultVisualManagerLoop.cpp; ${SRC_ROOT}/DeleteVisitor.cpp; ${SRC_ROOT}/ExportDotVisitor.cpp; ${SRC_ROOT}/ExportGnuplotVisitor.cpp; ${SRC_ROOT}/ExportVisualModelOBJVisitor.cpp; ${SRC_ROOT}/InitVisitor.cpp; ${SRC_ROOT}/IntegrateBeginEvent.cpp; ${SRC_ROOT}/IntegrateEndEvent.cpp; ${SRC_ROOT}/MainTaskSchedulerRegistry.cpp; ${SRC_ROOT}/MainTaskSchedulerFactory.cpp; ${SRC_ROOT}/MechanicalOperations.cpp; ${SRC_ROOT}/MechanicalVPrintVisitor.cpp; ${SRC_ROOT}/MechanicalVisitor.cpp; ${SRC_ROOT}/MutationListener.cpp; ${SRC_ROOT}/Node.cpp; ${SRC_ROOT}/PauseEvent.cpp; ${SRC_ROOT}/PipelineImpl.cpp; ${SRC_ROOT}/PositionEvent.cpp; ${SRC_ROOT}/PrintVisitor.cpp; ${SRC_ROOT}/PropagateEventVisitor.cpp; ${SRC_ROOT}/RequiredPlugin.cpp; ${SRC_ROOT}/ResetVisitor.cpp; ${SRC_ROOT}/SceneLoaderFactory.cpp; ${SRC_ROOT}/SceneCheck.cpp; ${SRC_ROOT}/SceneCheckRegistry.cpp; ${SRC_ROOT}/SceneCheckMainRegistry.cpp; ${SRC_ROOT}/Simulation.cpp; ${SRC_ROOT}/SolveVisitor.cpp; ${SRC_ROOT}/StateChangeVisitor.cpp; ${SRC_ROOT}/TopologyChangeVisitor.cpp; ${SRC_ROOT}/UpdateBoundingBoxVisitor.cpp; ${SRC_ROOT}/UpdateContextVisitor.cpp; ${SRC_ROOT}/UpdateInternalDataVisitor.cpp; ${SRC_ROOT}/UpdateLinksVisitor.cpp; ${SRC_ROOT}/UpdateMappingEndEvent.cpp; ${SRC_ROOT}/UpdateMappingVisitor.cpp; ${SRC_ROOT}/VectorOperations.cpp; ${SRC_ROOT}/VelocityThresholdVisitor.cpp; ${SRC_ROOT}/Visitor.cpp; ${SRC_ROOT}/VisualVisitor.cpp; ${SRC_ROOT}/WriteStateVisitor.cpp; ${SRC_ROOT}/XMLPrintVisitor.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/BaseSimulationExporter.cpp; ${SRC_ROOT}/TaskScheduler.,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:7660,Pipeline,PipelineImpl,7660,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Pipeline'],['PipelineImpl']
Deployability,"imer log missing [#1158]( https://github.com/sofa-framework/sofa/pull/1158 ); - **[SofaKernel]** Fix useless warnings [#1144]( https://github.com/sofa-framework/sofa/pull/1144 ); - **[SofaKernel]** Several fix in draw methods and topology warnings [#1111]( https://github.com/sofa-framework/sofa/pull/1111 ); - **[SofaKernel]** Small Fix in CollisionModel [#1202]( https://github.com/sofa-framework/sofa/pull/1202 ); - **[SofaKernel]** Use links for input and output topologies of the barycentric mapping [#1125]( https://github.com/sofa-framework/sofa/pull/1125 ); - [SofaMisc] Fix compilation with SOFA_NO_OPENGL [#1193]( https://github.com/sofa-framework/sofa/pull/1193 ); - **[SofaSimulationGraph]** Fix CollisionGroupManager wrong search of deformable object node [#1060]( https://github.com/sofa-framework/sofa/pull/1060 ); - **[SofaSimulationGraph]** Stop DAGNode get parent topology process in BarycentricMapping [#1176]( https://github.com/sofa-framework/sofa/pull/1176 ); - [SofaSphFluid] Clean, Fix, Update ParticleSink [#1195]( https://github.com/sofa-framework/sofa/pull/1195 ). **Plugins / Projects**; - [All] Fix minor compilation issue in plugins [#1106]( https://github.com/sofa-framework/sofa/pull/1106 ); - [Carving plugin] Small fix at init. [#1110]( https://github.com/sofa-framework/sofa/pull/1110 ); - [Cgal plugin] Fix windows cmake dll path and add a scene example [#958]( https://github.com/sofa-framework/sofa/pull/958 ); - [Regression_test] Update regression test references for CollisionGroup [#1102]( https://github.com/sofa-framework/sofa/pull/1102 ). ### Cleanings. **Architecture**; - [CMake] Use cmake_dependent_option for plugin tests [#1164]( https://github.com/sofa-framework/sofa/pull/1164 ). **Modules**; - [All] Fix order warnings [#1239]( https://github.com/sofa-framework/sofa/pull/1239 ); - [All] Fix override warning in option mode [#1210]( https://github.com/sofa-framework/sofa/pull/1210 ); - [All] Small cleaning on sout and serr [#1234]( https://github",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:252614,Update,Update,252614,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,ing: 0.32; UpdateSampleMaterialProperties: 0.02. 5F-6E:; 5 Lloyds: 0.24 0.23 0.25 0.24 0.24 (1.2 total); computeWeights: 2.91; ComputeLinearRegionSampling: 0.07; UpdateSampleMaterialProperties: 0. 5F-10E:; 5 Lloyds: 0.24 0.24 0.23 0.24 0.25 (1.18 total); computeWeights: 2.95; ComputeLinearRegionSampling: 0.07; UpdateSampleMaterialProperties: 0. 5F-20E:; 5 Lloyds: 0.23 0.24 0.23 0.24 0.23 (1.17 total); computeWeights: 2.91; ComputeLinearRegionSampling: 0.1; UpdateSampleMaterialProperties: 0.01. 5F-50E:; 5 Lloyds: 0.24 0.24 0.24 0.24 0.24 (1.2 total); computeWeights: 2.95; ComputeLinearRegionSampling: 0.32; UpdateSampleMaterialProperties: 0.01. 10F-6E:; 7 Lloyds: 0.25 0.24 0.25 0.25 0.24 0.25 0.24 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.13; UpdateSampleMaterialProperties: 0.01. 10F-10E:; 7 Lloyds: 0.25 0.25 0.24 0.25 0.24 0.25 0.24 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.12; UpdateSampleMaterialProperties: 0.02. 10F-20E:; 7 Lloyds: 0.25 0.24 0.25 0.24 0.24 0.24 0.24 (1.7 total); computeWeights: 4.93; ComputeLinearRegionSampling: 0.13; UpdateSampleMaterialProperties: 0.01. 10F-50E:; 7 Lloyds: 0.25 0.25 0.24 0.24 0.24 0.25 0.25 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.12; UpdateSampleMaterialProperties: 0.02. 20F-6E:; 9 Lloyds: 0.27 0.27 0.28 0.27 0.27 0.27 0.27 0.27 0.27 (2.44 total); computeWeights: 7.89; ComputeLinearRegionSampling: 0.29; UpdateSampleMaterialProperties: 0.05. 20F-10E:; 9 Lloyds: 0.27 0.27 0.27 0.26 0.27 0.27 0.27 0.27 0.26 (2.41 total); computeWeights: 7.98; ComputeLinearRegionSampling: 0.27; UpdateSampleMaterialProperties: 0.06. 20F-20E:; 9 Lloyds: 0.28 0.28 0.27 0.27 0.27 0.27 0.26 0.27 0.27 (2.44 total); computeWeights: 7.88; ComputeLinearRegionSampling: 0.28; UpdateSampleMaterialProperties: 0.05. 20F-50E:; 9 Lloyds: 0.27 0.27 0.27 0.27 0.26 0.27 0.27 0.26 0.27 (2.41 total); computeWeights: 7.88; ComputeLinearRegionSampling: 0.27; UpdateSampleMaterialProperties: 0.05. ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/comparison.txt:1681,Update,UpdateSampleMaterialProperties,1681,applications/projects/sofaInitTimer/output/comparison.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/comparison.txt,6,['Update'],['UpdateSampleMaterialProperties']
Deployability,"ing:; 	; A mesh loader to read mesh file. (not necessary in regular mesh); A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A FEM forcefield to create interactions between points; An ODE scheme and a linear solver to solve the system at each time step.; Dynamic topological components.; A visual model which reproduces the current model geometry thanks to the identity mapping. Key points. 	Under the first node representing the tetrahedrization, a second node is used to represent the triangle topology.; 	; 	This second representation won't reproduce all triangles of the tetrahedrization, but only triangles on the mesh borders. I.e triangles with only one adjacent tetrahedron. This process is similar to the Triangle2EdgeTopologicalMapping.; 	; 	Edges of tetrahedra are represented in yellow in the simulation whereas the visual model is based on the triangles. Thus, display the scene in wire frame to see tetrahedra and triangles (in blue).; 	. 	To create this mapping, the component Tetra2TriangleTopologicalMapping is used. This component takes an input topology (Data Object1) which is the container of the ""upper"" topology (tetrahedron here) and has an output topology (Data Object2) which is the container of the above topology (triangle here).; 	. Results. 	As explained the visual model uses the output topology (triangles) to render the surface model.; 	; 	You can try to directly use the triangles created in the TetrahedronSetTopologyContainer for the ogl model. The result will be a cylinder with triangles displayed inside the volume.; 	. 	Finally, try to remove the TetrahedralCorotationalFEMForceField or TriangularBendingSprings component. The result will be a bad behavior of the cylinder.; 	. Additional results. 	When deleting triangles, the topological mapping is updated. Thus, tetrahedra behind the selected triangle will be deleted as well. Then, the list of triangles on border will be updated and the surface rendering also.; 	. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyTetra2TriangleTopologicalMapping.html:2067,update,updated,2067,examples/Tutorials/Topologies/TopologyTetra2TriangleTopologicalMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyTetra2TriangleTopologicalMapping.html,2,['update'],['updated']
Deployability,"ink software (hereafter referred to as ""Your Software""); against the Licensed Software and/or distribute binaries of Your Software; linked against the Licensed Software, provided that:. A) Your Software is licensed under one of the following licenses:. License name Version(s)/Copyright Date; Academic Free License 2.0, 2.1, 3.0; Apache Software License 1.0 or 1.1; Apache License 2.0; Apple Public Source License 2.0; BSD license ""July 22 1999""; Common Development and Distribution; License (CDDL) 1.0; Common Public License 1.0; Eclipse Public License 1.0; GNU Library or ""Lesser""; General Public License (LGPL) 2.0, 2.1, 3.0; Jabber Open Source License 1.0; Mozilla Public License (MPL) 1.0 or 1.1; Open Software License 2.0, 3.0; PHP License 3.0; Python Software Foundation License 2.1.1; Q Public License 1.0; Sleepycat License ""1999""; W3C License ""2001""; X11 License X11R6.6; Zope Public License 2.0, 2.1. and. B) You must, on request, make a complete package including the complete ; source code of Your Software (as defined in the GNU General Public ; License version 2, section 3, but excluding anything excluded by the; special exception in the same section) available to Gilles Debunne; under the same license as that granted to other recipients of the ; source code of Your Software. and. C) Your or any other contributor's rights to:. i) distribute the source code of Your Software to anyone for; any purpose;. and. ii) publicly discuss the development project for Your; Software and its goals in any form and in any forum. are not prohibited by any legal instrument, including but not limited to; contracts, non-disclosure agreements, and employee contracts. 2) The right to link non-Open Source applications with versions of the ; Licensed Software: You may link applications with versions of the Licensed ; Software, provided that such applications have been developed and are deployed; in accordance with the terms and conditions of the libQGLViewer Commercial ; License Agreement.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/GPL_exception.txt:2705,deploy,deployed,2705,Sofa/GUI/Qt/libQGLViewer/GPL_exception.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/GPL_exception.txt,1,['deploy'],['deployed']
Deployability,"int.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/FixedProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/FixedPlaneProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/FixedRotationProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/FixedTranslationProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/HermiteSplineProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearMovementProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearVelocityProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/OscillatorProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ParabolicProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialFixedProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialLinearMovementProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PatchTestMovementProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PositionBasedDynamicsProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/SkeletalMotionProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LineProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PlaneProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PointProjectiveConstraint.cpp; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/DirectionProjectiveConstraint.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists an",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Projective/CMakeLists.txt:7954,Patch,PatchTestMovementProjectiveConstraint,7954,Sofa/Component/Constraint/Projective/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Projective/CMakeLists.txt,1,['Patch'],['PatchTestMovementProjectiveConstraint']
Deployability,ion 2.32; Lloyd_iteration 2.3; Lloyd_iteration 2.3; computeUniformSampling: 59.63; computeWeights: 62.45; computeLinearRegionsSampling: 1.55; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg2.ppm 20 20; Lloyd_iteration 2.36; Lloyd_iteration 2.41; Lloyd_iteration 2.34; Lloyd_iteration 2.33; Lloyd_iteration 2.34; Lloyd_iteration 2.39; Lloyd_iteration 2.33; Lloyd_iteration 2.34; Lloyd_iteration 2.33; Lloyd_iteration 2.36; Lloyd_iteration 2.37; computeUniformSampling: 60.37; computeWeights: 63.36; computeLinearRegionsSampling: 1.61; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg2.ppm 20 50; Lloyd_iteration 2.35; Lloyd_iteration 2.32; Lloyd_iteration 2.33; Lloyd_iteration 2.38; Lloyd_iteration 2.32; Lloyd_iteration 2.32; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.36; Lloyd_iteration 2.32; Lloyd_iteration 2.32; computeUniformSampling: 59.97; computeWeights: 62.97; computeLinearRegionsSampling: 1.6; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg3.ppm 3 6; computeUniformSampling: 17.03; computeWeights: 128.26; computeLinearRegionsSampling: 2.31; updateSampleMaterialProperties: 0.17. File: scenes/steak.pscn using steak-seg3.ppm 3 10; computeUniformSampling: 17.07; computeWeights: 128.21; computeLinearRegionsSampling: 2.32; updateSampleMaterialProperties: 0.17. File: scenes/steak.pscn using steak-seg3.ppm 3 20; computeUniformSampling: 17.15; computeWeights: 128.5; computeLinearRegionsSampling: 2.3; updateSampleMaterialProperties: 0.17. File: scenes/steak.pscn using steak-seg3.ppm 3 50; computeUniformSampling: 17.13; computeWeights: 128.59; computeLinearRegionsSampling: 2.32; updateSampleMaterialProperties: 0.18. File: scenes/steak.pscn using steak-seg3.ppm 5 6; Lloyd_iteration 17.73; Lloyd_iteration 17.67; Lloyd_iteration 17.78; Lloyd_iteration 17.71; Lloyd_iteration 17.79; Lloyd_iteration 17.77; Lloyd_iteration 17.71; Lloyd_iteration 17.73; Lloyd_iteration 17.75; Lloy,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:26277,update,updateSampleMaterialProperties,26277,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,ion 2.36; Lloyd_iteration 2.35; Lloyd_iteration 2.32; computeUniformSampling: 60.17; computeWeights: 63.02; computeLinearRegionsSampling: 1.62; updateSampleMaterialProperties: 0.26. File: scenes/steak.pscn using steak-seg2.ppm 20 10; Lloyd_iteration 2.34; Lloyd_iteration 2.31; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.3; Lloyd_iteration 2.31; Lloyd_iteration 2.31; Lloyd_iteration 2.35; Lloyd_iteration 2.32; Lloyd_iteration 2.3; Lloyd_iteration 2.3; computeUniformSampling: 59.63; computeWeights: 62.45; computeLinearRegionsSampling: 1.55; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg2.ppm 20 20; Lloyd_iteration 2.36; Lloyd_iteration 2.41; Lloyd_iteration 2.34; Lloyd_iteration 2.33; Lloyd_iteration 2.34; Lloyd_iteration 2.39; Lloyd_iteration 2.33; Lloyd_iteration 2.34; Lloyd_iteration 2.33; Lloyd_iteration 2.36; Lloyd_iteration 2.37; computeUniformSampling: 60.37; computeWeights: 63.36; computeLinearRegionsSampling: 1.61; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg2.ppm 20 50; Lloyd_iteration 2.35; Lloyd_iteration 2.32; Lloyd_iteration 2.33; Lloyd_iteration 2.38; Lloyd_iteration 2.32; Lloyd_iteration 2.32; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.36; Lloyd_iteration 2.32; Lloyd_iteration 2.32; computeUniformSampling: 59.97; computeWeights: 62.97; computeLinearRegionsSampling: 1.6; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg3.ppm 3 6; computeUniformSampling: 17.03; computeWeights: 128.26; computeLinearRegionsSampling: 2.31; updateSampleMaterialProperties: 0.17. File: scenes/steak.pscn using steak-seg3.ppm 3 10; computeUniformSampling: 17.07; computeWeights: 128.21; computeLinearRegionsSampling: 2.32; updateSampleMaterialProperties: 0.17. File: scenes/steak.pscn using steak-seg3.ppm 3 20; computeUniformSampling: 17.15; computeWeights: 128.5; computeLinearRegionsSampling: 2.3; updateSampleMaterialProperties: 0.17. File: scenes/steak.,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:25856,update,updateSampleMaterialProperties,25856,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,"ion changed; - [SofaRigid]; - in case jetJs is called several times per step; - [SofaGeneralLoader]; - MeshVTKLoader can now read FIELD data of legacy file. Lookup tables are ignored.; - [SofaPython]; - binding AssembledSystem as a new class in python; - binding VisualModel::exportOBJ; - binding for DataFileNameVector; - add Compliant.getImplicitAssembledSystem(node); - SofaNumpy: bind/share a c++ 1d array as a numpy array; - script.Controller : handle optional arguments before createGraph; - [image]; - raw import: add commented basic size verifications (could be performed in debug); - [Flexible]; - add support for shapefunction viewer; - new feature of strain smoothing; - improve readme file; - [Compliant]; - simulation unit: convert gravity, dt; - MaskMapping: every input are now mapped; - add LinearDiagonalCompliance component; - fix use of VLA in python mappings; - improve readme file. ### Bug Fixes. - fix ConstantForceField::updateForceMask(); - fix ObjExporter memory leak; - [SofaOpenGLVisual] OglTexture: fix possible memory leaks; - [Compliant]; - clean python. ### Cleanings. - clean the compilation when SOFA_NO_OPENGL flag is activated; - clean the config.h (SOFAGUI_HAVE_QWT); - remove boost library links (includes still required). boost chrono is not required anymore.; - remove unused POINT_DATA_VECTOR_ACCESS macro; - make miniflowVR build optional (default OFF); - [SofaKernel]; - remove last direct opengl calls in modules; - add deprecation message on MechanicalObject attributes; - [SofaBaseVisual] clean BaseCamera: remove direct opengl calls; - [SofaHaptics] boost-thread is not used any more, clean cmake; - [SofaGeneralLoader] STLLoader: fixing binary loading in debug and cleaning examples; - [SofaPython]; - remove ScriptEnvironment i.e. automatic initialization of Node; - Node::isInitialized(), not used anymore; - [Flexible]; - clean relativeStrainMapping. ### Moved files. - move CImg from extlibs to image plugin extlibs. ### Documentation. - Add the cont",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:339592,update,updateForceMask,339592,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['updateForceMask']
Deployability,"ionLoop; SofaGeneralDeformable; SofaGeneralEngine; SofaGeneralExplicitOdeSolver; SofaGeneralImplicitOdeSolver; SofaGeneralLinearSolver; SofaGeneralLoader; SofaGeneralMeshCollision; SofaGeneralObjectInteraction; SofaGeneralRigid; SofaGeneralTopology; SofaGeneralVisual; SofaGraphComponent; SofaTopologyMapping; SofaUserInteraction. # SofaAdvanced; SofaNonUniformFem. # SofaMisc; SofaMiscCollision; SofaMiscEngine; SofaMiscExtra; SofaMiscFem; SofaMiscForceField; SofaMiscMapping; SofaMiscSolver; SofaMiscTopology. # Other (pluginized from SofaGeneral); SofaDenseSolver; SofaExporter; SofaHaptics; SofaOpenglVisual; SofaPreconditioner; SofaSparseSolver; SofaValidation; ). set(HEADER_FILES; config.h.in; components.h.in; initSofaComponentAll.h; ); set(SOURCE_FILES; initSofaComponentAll.cpp; ); set(EXTRA_FILES; README.md; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}). set(SOFACOMPONENTALL_MODULES_INCLUDES """"); set(SOFACOMPONENTALL_MODULES_INITS """"); set(SOFACOMPONENTALL_MODULES_HAVES """"); foreach(module ${SOFACOMPONENTALL_MODULES}); string(TOUPPER ""${module}"" module_upper). sofa_find_package(${module} QUIET). if(${module}_FOUND); target_link_libraries(${PROJECT_NAME} ${module}); set(SOFACOMPONENTALL_MODULES_INCLUDES ""${SOFACOMPONENTALL_MODULES_INCLUDES}\n#include <${module}/init${module}.h>""); set(SOFACOMPONENTALL_MODULES_INITS ""${SOFACOMPONENTALL_MODULES_INITS} \\\n init${module}();""); else(); message(""${PROJECT_NAME}: ${module} will not be in the collection.""); endif(); set(SOFACOMPONENTALL_MODULES_HAVES ""${SOFACOMPONENTALL_MODULES_HAVES}\nset(SOFACOMPONENTALL_HAVE_${module_upper} ${SOFACOMPONENTALL_HAVE_${module_upper}})""); endforeach(). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_INSTALL_DIR ""SofaComponentAll""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaComponentAll/CMakeLists.txt:2226,Install,Install,2226,applications/collections/deprecated/SofaComponentAll/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaComponentAll/CMakeLists.txt,2,"['Install', 'configurat']","['Install', 'configurations']"
Deployability,ionVisitor.h; ${SRC_ROOT}/CactusStackStorage.h; ${SRC_ROOT}/CleanupVisitor.h; ${SRC_ROOT}/CollisionAnimationLoop.h; ${SRC_ROOT}/CollisionBeginEvent.h; ${SRC_ROOT}/CollisionEndEvent.h; ${SRC_ROOT}/CollisionVisitor.h; ${SRC_ROOT}/Colors.h; ${SRC_ROOT}/CpuTask.h; ${SRC_ROOT}/CpuTaskStatus.h; ${SRC_ROOT}/DeactivatedNodeVisitor.h; ${SRC_ROOT}/DefaultAnimationLoop.h; ${SRC_ROOT}/DefaultVisualManagerLoop.h; ${SRC_ROOT}/DeleteVisitor.h; ${SRC_ROOT}/ExportDotVisitor.h; ${SRC_ROOT}/ExportGnuplotVisitor.h; ${SRC_ROOT}/ExportVisualModelOBJVisitor.h; ${SRC_ROOT}/InitVisitor.h; ${SRC_ROOT}/IntegrateBeginEvent.h; ${SRC_ROOT}/IntegrateEndEvent.h; ${SRC_ROOT}/LocalStorage.h; ${SRC_ROOT}/MechanicalOperations.h; ${SRC_ROOT}/MechanicalVPrintVisitor.h; ${SRC_ROOT}/MechanicalVisitor.h; ${SRC_ROOT}/MutationListener.h; ${SRC_ROOT}/Node.h; ${SRC_ROOT}/Node.inl; ${SRC_ROOT}/ParallelForEach.h; ${SRC_ROOT}/ParallelSparseMatrixProduct.h; ${SRC_ROOT}/ParallelVisitorScheduler.h; ${SRC_ROOT}/PauseEvent.h; ${SRC_ROOT}/PipelineImpl.h; ${SRC_ROOT}/PositionEvent.h; ${SRC_ROOT}/PrintVisitor.h; ${SRC_ROOT}/PropagateEventVisitor.h; ${SRC_ROOT}/RequiredPlugin.h; ${SRC_ROOT}/ResetVisitor.h; ${SRC_ROOT}/SceneLoaderFactory.h; ${SRC_ROOT}/Simulation.h; ${SRC_ROOT}/SimulationLoop.h; ${SRC_ROOT}/SolveVisitor.h; ${SRC_ROOT}/StateChangeVisitor.h; ${SRC_ROOT}/TopologyChangeVisitor.h; ${SRC_ROOT}/UpdateBoundingBoxVisitor.h; ${SRC_ROOT}/UpdateContextVisitor.h; ${SRC_ROOT}/UpdateInternalDataVisitor.h; ${SRC_ROOT}/UpdateLinksVisitor.h; ${SRC_ROOT}/UpdateMappingEndEvent.h; ${SRC_ROOT}/UpdateMappingVisitor.h; ${SRC_ROOT}/VectorOperations.h; ${SRC_ROOT}/VelocityThresholdVisitor.h; ${SRC_ROOT}/Visitor.h; ${SRC_ROOT}/VisitorExecuteFunc.h; ${SRC_ROOT}/VisitorScheduler.h; ${SRC_ROOT}/VisualVisitor.h; ${SRC_ROOT}/WriteStateVisitor.h; ${SRC_ROOT}/XMLPrintVisitor.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/BaseSimulationExporter.h; ${SRC_ROOT}/TaskScheduler.h; ${SRC_ROOT}/TaskSchedulerFactory.h; ${SRC_ROOT}/TaskSchedulerRegistry.h; ${SR,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:1331,Pipeline,PipelineImpl,1331,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Pipeline'],['PipelineImpl']
Deployability,"ions); install(FILES ""${CMAKE_SOURCE_DIR}/CHANGELOG.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/LICENSE-LGPL.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/Authors.txt"" DESTINATION . COMPONENT applications). option(SOFA_INSTALL_RESOURCES_FILES ""Copy resources files (etc/, share/, examples/, tools/sofa-launcher/) when installing"" ON); ## Install resource files; if(SOFA_INSTALL_RESOURCES_FILES); install(DIRECTORY share/ DESTINATION share/sofa COMPONENT resources); install(DIRECTORY examples/ DESTINATION share/sofa/examples COMPONENT resources); install(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about plugins, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#plugin""); install(DIRECTORY ${CMAKE_BINARY_DIR}/plugins/ DESTINATION plugins COMPONENT resources); file(WRITE ""${CMAKE_BINARY_DIR}/collections/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about collections, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#collection""); install(DIRECTORY ${CMAKE_BINARY_DIR}/collections/ DESTINATION collections COMPONENT resources). sofa_install_git_infos(${PROJECT_NAME} ${CMAKE_CURRENT_SOURCE_DIR}). # Post-install scripts (must be the last add_subdirectory); add_subdirectory(tools/postinstall-fixup). if(SOFA_BUILD_RELEASE_PACKAGE); #######################; # CPack configuration #; #######################. ################; # Package config; include(CPackComponent); if(WIN32 AND ${CMAKE_VERSION} VERSION_LESS ""3.13.0""); include(CPackNSIS); endif(); include(CPackIFW); set(CPACK_PACKAGE_VERSION ""${Sofa_VERSION}""); set(CPACK_PACKAGE_NAME ""SOFA v${CPACK_PACKAGE_VERSION}""); set(CPACK_PACKAGE_VENDOR ""The SOFA Team""); set(CPACK_PACKAGE_CON",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:11103,install,install,11103,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['install'],['install']
Deployability,"ir})""); add_subdirectory(${dir} ""${CMAKE_CURRENT_BINARY_DIR}/external_directories/${name}""); endforeach(); endif(). ## Custom; if(EXISTS ""${CMAKE_CURRENT_LIST_DIR}/custom.cmake""); message(""Adding custom file""); include( ""custom.cmake"" ); endif(). ## IDE directories; # Sofa.Component; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES ""Sofa.Component.*"" AND NOT target MATCHES "".*_relocatable_install""); set_target_properties(${target} PROPERTIES FOLDER Sofa.Component) # IDE folder; endif(); endforeach(); # Testing; if(TARGET Sofa.Testing) # No need to search for test targets if tests are not enabled; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES "".*_test"" OR target MATCHES "".*_simutest""); set_target_properties(${target} PROPERTIES FOLDER Testing) # IDE folder; endif(); endforeach(); endif(); ##. ## Install configuration; #install(FILES ""${CMAKE_BINARY_DIR}/CMakeCache.txt"" DESTINATION . COMPONENT headers); install(FILES ""${CMAKE_SOURCE_DIR}/README.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/CHANGELOG.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/LICENSE-LGPL.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/Authors.txt"" DESTINATION . COMPONENT applications). option(SOFA_INSTALL_RESOURCES_FILES ""Copy resources files (etc/, share/, examples/, tools/sofa-launcher/) when installing"" ON); ## Install resource files; if(SOFA_INSTALL_RESOURCES_FILES); install(DIRECTORY share/ DESTINATION share/sofa COMPONENT resources); install(DIRECTORY examples/ DESTINATION share/sofa/examples COMPONENT resources); install(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about plugins, see https://www.sofa-framework.org/community/doc/using-sofa/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:10068,install,install,10068,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['install'],['install']
Deployability,isitor.cpp; ${SRC_ROOT}/ExportGnuplotVisitor.cpp; ${SRC_ROOT}/ExportVisualModelOBJVisitor.cpp; ${SRC_ROOT}/InitVisitor.cpp; ${SRC_ROOT}/IntegrateBeginEvent.cpp; ${SRC_ROOT}/IntegrateEndEvent.cpp; ${SRC_ROOT}/MainTaskSchedulerRegistry.cpp; ${SRC_ROOT}/MainTaskSchedulerFactory.cpp; ${SRC_ROOT}/MechanicalOperations.cpp; ${SRC_ROOT}/MechanicalVPrintVisitor.cpp; ${SRC_ROOT}/MechanicalVisitor.cpp; ${SRC_ROOT}/MutationListener.cpp; ${SRC_ROOT}/Node.cpp; ${SRC_ROOT}/PauseEvent.cpp; ${SRC_ROOT}/PipelineImpl.cpp; ${SRC_ROOT}/PositionEvent.cpp; ${SRC_ROOT}/PrintVisitor.cpp; ${SRC_ROOT}/PropagateEventVisitor.cpp; ${SRC_ROOT}/RequiredPlugin.cpp; ${SRC_ROOT}/ResetVisitor.cpp; ${SRC_ROOT}/SceneLoaderFactory.cpp; ${SRC_ROOT}/SceneCheck.cpp; ${SRC_ROOT}/SceneCheckRegistry.cpp; ${SRC_ROOT}/SceneCheckMainRegistry.cpp; ${SRC_ROOT}/Simulation.cpp; ${SRC_ROOT}/SolveVisitor.cpp; ${SRC_ROOT}/StateChangeVisitor.cpp; ${SRC_ROOT}/TopologyChangeVisitor.cpp; ${SRC_ROOT}/UpdateBoundingBoxVisitor.cpp; ${SRC_ROOT}/UpdateContextVisitor.cpp; ${SRC_ROOT}/UpdateInternalDataVisitor.cpp; ${SRC_ROOT}/UpdateLinksVisitor.cpp; ${SRC_ROOT}/UpdateMappingEndEvent.cpp; ${SRC_ROOT}/UpdateMappingVisitor.cpp; ${SRC_ROOT}/VectorOperations.cpp; ${SRC_ROOT}/VelocityThresholdVisitor.cpp; ${SRC_ROOT}/Visitor.cpp; ${SRC_ROOT}/VisualVisitor.cpp; ${SRC_ROOT}/WriteStateVisitor.cpp; ${SRC_ROOT}/XMLPrintVisitor.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/BaseSimulationExporter.cpp; ${SRC_ROOT}/TaskScheduler.cpp; ${SRC_ROOT}/TaskSchedulerFactory.cpp; ${SRC_ROOT}/TaskSchedulerRegistry.cpp; ${SRC_ROOT}/DefaultTaskScheduler.cpp; ${SRC_ROOT}/Task.cpp; ${SRC_ROOT}/InitTasks.cpp; ${SRC_ROOT}/WorkerThread.cpp; ${SRC_ROOT}/events/BuildConstraintSystemEndEvent.cpp; ${SRC_ROOT}/events/SimulationInitDoneEvent.cpp; ${SRC_ROOT}/events/SimulationInitStartEvent.cpp; ${SRC_ROOT}/events/SimulationInitTexturesDoneEvent.cpp; ${SRC_ROOT}/events/SimulationStartEvent.cpp; ${SRC_ROOT}/events/SimulationStopEvent.cpp; ${SRC_ROOT}/even,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:8167,Update,UpdateContextVisitor,8167,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Update'],['UpdateContextVisitor']
Deployability,isitor.h; ${SRC_ROOT}/IntegrateBeginEvent.h; ${SRC_ROOT}/IntegrateEndEvent.h; ${SRC_ROOT}/LocalStorage.h; ${SRC_ROOT}/MechanicalOperations.h; ${SRC_ROOT}/MechanicalVPrintVisitor.h; ${SRC_ROOT}/MechanicalVisitor.h; ${SRC_ROOT}/MutationListener.h; ${SRC_ROOT}/Node.h; ${SRC_ROOT}/Node.inl; ${SRC_ROOT}/ParallelForEach.h; ${SRC_ROOT}/ParallelSparseMatrixProduct.h; ${SRC_ROOT}/ParallelVisitorScheduler.h; ${SRC_ROOT}/PauseEvent.h; ${SRC_ROOT}/PipelineImpl.h; ${SRC_ROOT}/PositionEvent.h; ${SRC_ROOT}/PrintVisitor.h; ${SRC_ROOT}/PropagateEventVisitor.h; ${SRC_ROOT}/RequiredPlugin.h; ${SRC_ROOT}/ResetVisitor.h; ${SRC_ROOT}/SceneLoaderFactory.h; ${SRC_ROOT}/Simulation.h; ${SRC_ROOT}/SimulationLoop.h; ${SRC_ROOT}/SolveVisitor.h; ${SRC_ROOT}/StateChangeVisitor.h; ${SRC_ROOT}/TopologyChangeVisitor.h; ${SRC_ROOT}/UpdateBoundingBoxVisitor.h; ${SRC_ROOT}/UpdateContextVisitor.h; ${SRC_ROOT}/UpdateInternalDataVisitor.h; ${SRC_ROOT}/UpdateLinksVisitor.h; ${SRC_ROOT}/UpdateMappingEndEvent.h; ${SRC_ROOT}/UpdateMappingVisitor.h; ${SRC_ROOT}/VectorOperations.h; ${SRC_ROOT}/VelocityThresholdVisitor.h; ${SRC_ROOT}/Visitor.h; ${SRC_ROOT}/VisitorExecuteFunc.h; ${SRC_ROOT}/VisitorScheduler.h; ${SRC_ROOT}/VisualVisitor.h; ${SRC_ROOT}/WriteStateVisitor.h; ${SRC_ROOT}/XMLPrintVisitor.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/BaseSimulationExporter.h; ${SRC_ROOT}/TaskScheduler.h; ${SRC_ROOT}/TaskSchedulerFactory.h; ${SRC_ROOT}/TaskSchedulerRegistry.h; ${SRC_ROOT}/DefaultTaskScheduler.h; ${SRC_ROOT}/Task.h; ${SRC_ROOT}/InitTasks.h; ${SRC_ROOT}/Locks.h; ${SRC_ROOT}/MainTaskSchedulerFactory.h; ${SRC_ROOT}/MainTaskSchedulerRegistry.h; ${SRC_ROOT}/SceneCheck.h; ${SRC_ROOT}/SceneCheckRegistry.h; ${SRC_ROOT}/SceneCheckMainRegistry.h; ${SRC_ROOT}/WorkerThread.h; ${SRC_ROOT}/events/BuildConstraintSystemEndEvent.h; ${SRC_ROOT}/events/SimulationInitDoneEvent.h; ${SRC_ROOT}/events/SimulationInitStartEvent.h; ${SRC_ROOT}/events/SimulationInitTexturesDoneEvent.h; ${SRC_ROOT}/events/SimulationStartEvent.h; ${SRC_ROOT}/ev,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:1888,Update,UpdateMappingVisitor,1888,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Update'],['UpdateMappingVisitor']
Deployability,iteration 0.27; Lloyd_iteration 0.26; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.55; computeWeights: 8.01; computeLinearRegionsSampling: 0.28; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 20; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.27; computeUniformSampling: 6.6; computeWeights: 8.01; computeLinearRegionsSampling: 0.29; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 50; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.54; computeWeights: 8.05; computeLinearRegionsSampling: 0.29; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg2.ppm 3 6; computeUniformSampling: 2.09; computeWeights: 15.09; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 10; computeUniformSampling: 2.08; computeWeights: 15.01; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 20; computeUniformSampling: 2.1; computeWeights: 15.07; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 50; computeUniformSampling: 2.08; computeWeights: 14.87; computeLinearRegionsSampling: 0.25; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 5 6; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.11; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.04; Lloyd_iteration 2.09; Lloyd_iteration 2.0,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:4877,update,updateSampleMaterialProperties,4877,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,iteration 2.05; Lloyd_iteration 2.11; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.07; Lloyd_iteration 2.06; Lloyd_iteration 2.09; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.09; Lloyd_iteration 2.08; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.1; Lloyd_iteration 2.07; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.1; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.07; Lloyd_iteration 2.05; Lloyd_iteration 2.09; Lloyd_iteration 2.05; Lloyd_iteration 2.05; Lloyd_iteration 2.07; Lloyd_iteration 2.05; Lloyd_iteration 2.09; Lloyd_iteration 2.05; Lloyd_iteration 2.05; Lloyd_iteration 2.07; Lloyd_iteration 2.07; Lloyd_iteration 2.08; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.09; Lloyd_iteration 2.08; computeUniformSampling: 210.81; computeWeights: 23.98; computeLinearRegionsSampling: 0.46; updateSampleMaterialProperties: 0.03. File: scenes/steak.pscn using steak-seg2.ppm 10 6; Lloyd_iteration 2.13; Lloyd_iteration 2.15; Lloyd_iteration 2.17; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.18; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.18; Lloyd_iteration 2.14; Lloyd_iteration 2.13; Lloyd_iteration 2.14; Lloyd_iteration 2.13; Lloyd_iteration 2.19; Lloyd_iteration 2.13; Lloyd_iteration 2.14; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.18; Lloyd_iteration 2.12; Lloyd_iteration 2.14; Lloyd_iteration 2.12; Lloyd_iteration 2.17; Lloyd_iteration 2.14; Lloyd_iteration 2.12; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.18; Lloyd_iteration 2.12; Lloyd_iteration 2.11; Lloyd_iteration 2.14; Lloyd_iteration 2.12; Lloyd_iteration 2.17; Lloyd_iteration 2.12; Lloyd_iteration 2.12; Lloyd_iteration 2.13; Lloyd_iteration 2.17; Lloyd_iteration 2.14; Lloyd_iteration 2.13; Ll,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:15088,update,updateSampleMaterialProperties,15088,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,iteration 20.66; Lloyd_iteration 20.62; Lloyd_iteration 20.64; Lloyd_iteration 20.61; Lloyd_iteration 20.64; Lloyd_iteration 20.64; Lloyd_iteration 20.66; Lloyd_iteration 20.63; Lloyd_iteration 20.67; Lloyd_iteration 20.66; Lloyd_iteration 20.63; Lloyd_iteration 20.62; Lloyd_iteration 20.58; Lloyd_iteration 20.67; Lloyd_iteration 20.58; Lloyd_iteration 20.61; Lloyd_iteration 20.58; Lloyd_iteration 20.61; Lloyd_iteration 20.66; Lloyd_iteration 20.64; Lloyd_iteration 20.62; Lloyd_iteration 20.67; Lloyd_iteration 20.65; Lloyd_iteration 20.67; Lloyd_iteration 20.67; Lloyd_iteration 20.66; Lloyd_iteration 20.65; Lloyd_iteration 20.66; Lloyd_iteration 20.65; Lloyd_iteration 20.63; Lloyd_iteration 20.62; Lloyd_iteration 20.81; Lloyd_iteration 20.82; Lloyd_iteration 20.84; Lloyd_iteration 20.83; Lloyd_iteration 20.83; Lloyd_iteration 20.83; Lloyd_iteration 20.84; Lloyd_iteration 20.79; computeUniformSampling: 2369.12; computeWeights: 527.24; computeLinearRegionsSampling: 11.89; updateSampleMaterialProperties: 1.87. File: scenes/steak.pscn using steak-seg3.ppm 20 10; Lloyd_iteration 20.98; Lloyd_iteration 20.7; Lloyd_iteration 20.64; Lloyd_iteration 20.59; Lloyd_iteration 20.55; Lloyd_iteration 20.54; Lloyd_iteration 20.56; Lloyd_iteration 20.56; Lloyd_iteration 20.55; Lloyd_iteration 20.58; Lloyd_iteration 20.46; Lloyd_iteration 20.47; Lloyd_iteration 20.45; Lloyd_iteration 20.5; Lloyd_iteration 20.47; Lloyd_iteration 20.51; Lloyd_iteration 20.49; Lloyd_iteration 20.52; Lloyd_iteration 20.52; Lloyd_iteration 20.51; Lloyd_iteration 20.51; Lloyd_iteration 20.54; Lloyd_iteration 20.49; Lloyd_iteration 20.51; Lloyd_iteration 20.51; Lloyd_iteration 20.53; Lloyd_iteration 20.5; Lloyd_iteration 20.51; Lloyd_iteration 20.51; Lloyd_iteration 20.56; Lloyd_iteration 20.54; Lloyd_iteration 20.54; Lloyd_iteration 20.54; Lloyd_iteration 20.57; Lloyd_iteration 20.56; Lloyd_iteration 20.55; Lloyd_iteration 20.55; Lloyd_iteration 20.56; Lloyd_iteration 20.55; Lloyd_iteration 20.54; Lloyd_it,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:49259,update,updateSampleMaterialProperties,49259,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,"ithub.com/sofa-framework/sofa/pull/2265 ); - [SofaCore] Fix potential memory failure on TopologyData Add method [#2459]( https://github.com/sofa-framework/sofa/pull/2459 ); - [SofaCore] FIX BaseData::getLinkPath() [#2354]( https://github.com/sofa-framework/sofa/pull/2354 ); - [SofaCore] Link: case where Data parent is invalid [#2211]( https://github.com/sofa-framework/sofa/pull/2211 ); - [SofaCore_simutest] Fix getobjects and testcomponentstate unit tests [#2326]( https://github.com/sofa-framework/sofa/pull/2326 ); - [SofaDeformable] Forgot minus sign in #2429 [#2448]( https://github.com/sofa-framework/sofa/pull/2448 ); - [SofaGUICommon] Fix configuration file for install with cxxopts [#2279]( https://github.com/sofa-framework/sofa/pull/2279 ); - [SofaGeneralEngine] Fix a typo in the PairBoxRoi.inl [#2324]( https://github.com/sofa-framework/sofa/pull/2324 ); - [SofaGeneralLoader] Make GridMeshCreator work again [#2473]( https://github.com/sofa-framework/sofa/pull/2473 ); - [SofaGuiQt] Fix graph update on startup [#2458]( https://github.com/sofa-framework/sofa/pull/2458 ); - [SofaGuiQt] Revert #2458 [#2479]( https://github.com/sofa-framework/sofa/pull/2479 ); - [SofaGuiQt] Some fixes for Qt6 [#2490]( https://github.com/sofa-framework/sofa/pull/2490 ); - [SofaGuiQt] Switch name and class name for slaves [#2371]( https://github.com/sofa-framework/sofa/pull/2371 ); - [SofaKernel] Remove ambiguous constructors from type::vector [#2270]( https://github.com/sofa-framework/sofa/pull/2270 ); - [SofaKernel] Remove the getXXXAccessor in accessor.h to keep the one in Data.h [#2278]( https://github.com/sofa-framework/sofa/pull/2278 ); - [SofaMeshCollision, SofaConstraint] Remove LMDNewProximityIntersection [#2272]( https://github.com/sofa-framework/sofa/pull/2272 ); - [SofaMeshCollision] Fix cmake generated config file [#2400]( https://github.com/sofa-framework/sofa/pull/2400 ); - [SofaMeshCollision] Fix compilation without Compatiblity layer [#2227]( https://github.com/sofa-fram",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:150354,update,update,150354,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,ithub.com/sofa-framework/sofa/pull/2289 ); - [examples] Speedup the caduceus [#2471]( https://github.com/sofa-framework/sofa/pull/2471 ); - [Scenes] Update TriangleSurfaceCutting scene to use a bigger mesh with texture [#2381]( https://github.com/sofa-framework/sofa/pull/2381 ). **Scripts / Tools**. ### Bug Fixes. **Architecture**; - [CMake] Clean Sofa.Core CMakeLists + Add missing headers [#2444]( https://github.com/sofa-framework/sofa/pull/2444 ); - [CMake] FIX Threads dependency [#2511]( https://github.com/sofa-framework/sofa/pull/2511 ); - [CMake] FIX libs copy on Windows [#2261]( https://github.com/sofa-framework/sofa/pull/2261 ); - [CMake][modules] FIX out-of-tree builds [#2453]( https://github.com/sofa-framework/sofa/pull/2453 ); - [CMake] Fix return values of Qt5/Qt6 find_packages [#2346]( https://github.com/sofa-framework/sofa/pull/2346 ). **Modules**; - [All] Fix potential bugs/crashes (from warnings) [#2379]( https://github.com/sofa-framework/sofa/pull/2379 ); - [All] Update IDE directory for targets [#2239]( https://github.com/sofa-framework/sofa/pull/2239 ); - [SofaMiscForceField] Fix massDensity vector update when adding new elements in MeshMatrixMass [#2257]( https://github.com/sofa-framework/sofa/pull/2257 ); - [Sofa.Compat] Fix Matrixexpr alias [#2369]( https://github.com/sofa-framework/sofa/pull/2369 ); - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Core] Fix diamond inheritance in PairInteractionConstraint [#2488]( https://github.com/sofa-framework/sofa/pull/2488 ); - [Sofa.DefaultType] Fix declaration of global variables [#2317]( https://github.com/sofa-framework/sofa/pull/2317 ); - [Sofa.GL] Set glew as mandatory [#2358]( https://github.com/sofa-framework/sofa/pull/2358 ); - [Sofa.Helper] Fix and micro-optimize AdvancedTimer [#2349]( https://github.com/sofa-framework/sofa/pull/2349 ); - [Sofa.Helper] More tests for NameDecoder + fix them [#2380]( https://github.com/sofa-framework/sofa/pull/2380 ),MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:145030,Update,Update,145030,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,ithub.com/sofa-framework/sofa/pull/3231) ; - [Topology_test] Add tests in EdgeSetTopology_test to check topological changes [#3245](https://github.com/sofa-framework/sofa/pull/3245) ; - [SolidMechanics][Spring] Implement applyRemovedEdges for SpringForceField [#3269](https://github.com/sofa-framework/sofa/pull/3269) ; - [StateContainer] Optimize vector operations [#3284](https://github.com/sofa-framework/sofa/pull/3284) ; - [Mapping.Linear] Add support for 2d in SubsetMultiMapping [#3321](https://github.com/sofa-framework/sofa/pull/3321) ; - [Constraint.Lagrangian] Update BilateralInteractionConstraint to support topological changes [#3329](https://github.com/sofa-framework/sofa/pull/3329) ; - [all] Unit tests for getTemplateName in some components [#3380](https://github.com/sofa-framework/sofa/pull/3380) ; - [all] Implement getModuleComponentList for most modules [#3386](https://github.com/sofa-framework/sofa/pull/3386) ; - [Constraint.Lagrangian.Solver] Add events in the constraint solver pipeline [#3418](https://github.com/sofa-framework/sofa/pull/3418) ; - [FEM.Elastic] Speedup hexa drawing in force field [#3420](https://github.com/sofa-framework/sofa/pull/3420) ; - [Visual] Introduce TrailRenderer [#3471](https://github.com/sofa-framework/sofa/pull/3471) ; - [Solver.Direct] Unit tests on empty system [#3500](https://github.com/sofa-framework/sofa/pull/3500) ; - [MechanicalLoad] Move getValue call out of the loops [#3503](https://github.com/sofa-framework/sofa/pull/3503) . **Plugins / Projects**; - [SofaCUDA] Add ConstraintCorrection instantiation in CudaVec3f/CudaVec3f1 [#3004](https://github.com/sofa-framework/sofa/pull/3004) ; - [SofaCUDA] Make CudaConstantForceField compatible with CudaRigid types [#3164](https://github.com/sofa-framework/sofa/pull/3164) ; - [GUI.performer] Add remove elements function for LineCollisionModel [#3239](https://github.com/sofa-framework/sofa/pull/3239) ; - [Regression] Test Eigen solvers scenes for regression [#3326](https://git,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:75095,pipeline,pipeline,75095,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['pipeline'],['pipeline']
Deployability,ithub.com/sofa-framework/sofa/pull/3498) ; - [VectorTypeInfo] Change default handling of data buffer [#3505](https://github.com/sofa-framework/sofa/pull/3505) . **Modules**; - [MappedMatrix] MechanicalMatrixMapper: adds option [#3173](https://github.com/sofa-framework/sofa/pull/3173) ; - [Constraint.Lagrangian.Correction] LinearSolverCC: use FullVector API if detected [#3231](https://github.com/sofa-framework/sofa/pull/3231) ; - [Topology_test] Add tests in EdgeSetTopology_test to check topological changes [#3245](https://github.com/sofa-framework/sofa/pull/3245) ; - [SolidMechanics][Spring] Implement applyRemovedEdges for SpringForceField [#3269](https://github.com/sofa-framework/sofa/pull/3269) ; - [StateContainer] Optimize vector operations [#3284](https://github.com/sofa-framework/sofa/pull/3284) ; - [Mapping.Linear] Add support for 2d in SubsetMultiMapping [#3321](https://github.com/sofa-framework/sofa/pull/3321) ; - [Constraint.Lagrangian] Update BilateralInteractionConstraint to support topological changes [#3329](https://github.com/sofa-framework/sofa/pull/3329) ; - [all] Unit tests for getTemplateName in some components [#3380](https://github.com/sofa-framework/sofa/pull/3380) ; - [all] Implement getModuleComponentList for most modules [#3386](https://github.com/sofa-framework/sofa/pull/3386) ; - [Constraint.Lagrangian.Solver] Add events in the constraint solver pipeline [#3418](https://github.com/sofa-framework/sofa/pull/3418) ; - [FEM.Elastic] Speedup hexa drawing in force field [#3420](https://github.com/sofa-framework/sofa/pull/3420) ; - [Visual] Introduce TrailRenderer [#3471](https://github.com/sofa-framework/sofa/pull/3471) ; - [Solver.Direct] Unit tests on empty system [#3500](https://github.com/sofa-framework/sofa/pull/3500) ; - [MechanicalLoad] Move getValue call out of the loops [#3503](https://github.com/sofa-framework/sofa/pull/3503) . **Plugins / Projects**; - [SofaCUDA] Add ConstraintCorrection instantiation in CudaVec3f/CudaVec3f1 [#3004](ht,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:74661,Update,Update,74661,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,itor.cpp; ${SRC_ROOT}/ExportVisualModelOBJVisitor.cpp; ${SRC_ROOT}/InitVisitor.cpp; ${SRC_ROOT}/IntegrateBeginEvent.cpp; ${SRC_ROOT}/IntegrateEndEvent.cpp; ${SRC_ROOT}/MainTaskSchedulerRegistry.cpp; ${SRC_ROOT}/MainTaskSchedulerFactory.cpp; ${SRC_ROOT}/MechanicalOperations.cpp; ${SRC_ROOT}/MechanicalVPrintVisitor.cpp; ${SRC_ROOT}/MechanicalVisitor.cpp; ${SRC_ROOT}/MutationListener.cpp; ${SRC_ROOT}/Node.cpp; ${SRC_ROOT}/PauseEvent.cpp; ${SRC_ROOT}/PipelineImpl.cpp; ${SRC_ROOT}/PositionEvent.cpp; ${SRC_ROOT}/PrintVisitor.cpp; ${SRC_ROOT}/PropagateEventVisitor.cpp; ${SRC_ROOT}/RequiredPlugin.cpp; ${SRC_ROOT}/ResetVisitor.cpp; ${SRC_ROOT}/SceneLoaderFactory.cpp; ${SRC_ROOT}/SceneCheck.cpp; ${SRC_ROOT}/SceneCheckRegistry.cpp; ${SRC_ROOT}/SceneCheckMainRegistry.cpp; ${SRC_ROOT}/Simulation.cpp; ${SRC_ROOT}/SolveVisitor.cpp; ${SRC_ROOT}/StateChangeVisitor.cpp; ${SRC_ROOT}/TopologyChangeVisitor.cpp; ${SRC_ROOT}/UpdateBoundingBoxVisitor.cpp; ${SRC_ROOT}/UpdateContextVisitor.cpp; ${SRC_ROOT}/UpdateInternalDataVisitor.cpp; ${SRC_ROOT}/UpdateLinksVisitor.cpp; ${SRC_ROOT}/UpdateMappingEndEvent.cpp; ${SRC_ROOT}/UpdateMappingVisitor.cpp; ${SRC_ROOT}/VectorOperations.cpp; ${SRC_ROOT}/VelocityThresholdVisitor.cpp; ${SRC_ROOT}/Visitor.cpp; ${SRC_ROOT}/VisualVisitor.cpp; ${SRC_ROOT}/WriteStateVisitor.cpp; ${SRC_ROOT}/XMLPrintVisitor.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/BaseSimulationExporter.cpp; ${SRC_ROOT}/TaskScheduler.cpp; ${SRC_ROOT}/TaskSchedulerFactory.cpp; ${SRC_ROOT}/TaskSchedulerRegistry.cpp; ${SRC_ROOT}/DefaultTaskScheduler.cpp; ${SRC_ROOT}/Task.cpp; ${SRC_ROOT}/InitTasks.cpp; ${SRC_ROOT}/WorkerThread.cpp; ${SRC_ROOT}/events/BuildConstraintSystemEndEvent.cpp; ${SRC_ROOT}/events/SimulationInitDoneEvent.cpp; ${SRC_ROOT}/events/SimulationInitStartEvent.cpp; ${SRC_ROOT}/events/SimulationInitTexturesDoneEvent.cpp; ${SRC_ROOT}/events/SimulationStartEvent.cpp; ${SRC_ROOT}/events/SimulationStopEvent.cpp; ${SRC_ROOT}/events/SolveConstraintSystemEndEvent.cpp. ${S,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:8205,Update,UpdateInternalDataVisitor,8205,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Update'],['UpdateInternalDataVisitor']
Deployability,k/sofa/pull/1258 ); - **[SofaKernel]** replace all serr by msg_error/msg_warning [#1237]( https://github.com/sofa-framework/sofa/pull/1237 ); - [SofaSparseSolver] Move CSparse and metis into SofaSparseSolver [#1357]( https://github.com/sofa-framework/sofa/pull/1357 ). **Plugins / Projects**; - [CGALPlugin] Clean and pluginization [#1308]( https://github.com/sofa-framework/sofa/pull/1308 ); - [Geomagic] Move all code related to device model display in a dedicated class. [#1366]( https://github.com/sofa-framework/sofa/pull/1366 ); - [Geomagic] Fix compilation [#1393]( https://github.com/sofa-framework/sofa/pull/1393 ); - [ManifoldTopologies] Remove CHECK_TOPOLOGY macro occurrences [#1353]( https://github.com/sofa-framework/sofa/pull/1353 ); - [ManifoldTopologies] Update the license in init.cpp [#1414]( https://github.com/sofa-framework/sofa/pull/1414 ); - [OpenCTMPlugin] Fix compilation and clean before moving out [#1359]( https://github.com/sofa-framework/sofa/pull/1359 ); - [PluginExample] Update PluginExample [#1356]( https://github.com/sofa-framework/sofa/pull/1356 ); - [Regression] Update hash [#1321]( https://github.com/sofa-framework/sofa/pull/1321 ); - [SofaSphFluid] Clean SofaFluid plugin compilation warning. [#1296]( https://github.com/sofa-framework/sofa/pull/1296 ). **Examples / Scenes**; - [examples] Fix and remove 3 scenes with deprecated component [#1355]( https://github.com/sofa-framework/sofa/pull/1355 ); - [examples] Remove useless files and add MeshMatrixMass example [#1257]( https://github.com/sofa-framework/sofa/pull/1257 ); - [scenes] Fix scenes from alias [#1292]( https://github.com/sofa-framework/sofa/pull/1292 ); - [scenes] Remove scene warnings due to Rigid template [#1295]( https://github.com/sofa-framework/sofa/pull/1295 ); - [scenes] Fix alias warnings in scenes [#1279]( https://github.com/sofa-framework/sofa/pull/1279 ). ____________________________________________________________. ## [v19.12]( https://github.com/sofa-framework/sofa/tree/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:242314,Update,Update,242314,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"ke""); message(""Adding custom file""); include( ""custom.cmake"" ); endif(). ## IDE directories; # Sofa.Component; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES ""Sofa.Component.*"" AND NOT target MATCHES "".*_relocatable_install""); set_target_properties(${target} PROPERTIES FOLDER Sofa.Component) # IDE folder; endif(); endforeach(); # Testing; if(TARGET Sofa.Testing) # No need to search for test targets if tests are not enabled; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES "".*_test"" OR target MATCHES "".*_simutest""); set_target_properties(${target} PROPERTIES FOLDER Testing) # IDE folder; endif(); endforeach(); endif(); ##. ## Install configuration; #install(FILES ""${CMAKE_BINARY_DIR}/CMakeCache.txt"" DESTINATION . COMPONENT headers); install(FILES ""${CMAKE_SOURCE_DIR}/README.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/CHANGELOG.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/LICENSE-LGPL.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/Authors.txt"" DESTINATION . COMPONENT applications). option(SOFA_INSTALL_RESOURCES_FILES ""Copy resources files (etc/, share/, examples/, tools/sofa-launcher/) when installing"" ON); ## Install resource files; if(SOFA_INSTALL_RESOURCES_FILES); install(DIRECTORY share/ DESTINATION share/sofa COMPONENT resources); install(DIRECTORY examples/ DESTINATION share/sofa/examples COMPONENT resources); install(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about plugins, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#plugin""); install(DIRECTORY ${CMAKE_BINARY_DIR}/plugins/ DESTINATION plugins COMPONENT resources); file(WRITE ""${CMAKE_BINARY_DIR}/collections/README.txt""; ""Th",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:10241,install,install,10241,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['install'],['install']
Deployability,"l *sofa-launcher* ease the scripting of **numerous SOFA simulations**. This can be done from XML or python scripts. To accelerate the processing of the simulations the script has the ability to run the simulation either: sequentially, in parallel or on a cluster. There is two options to use it depending on your needs:. - You want to run a lot of simulation from you own python script. In this case you should look at the file ""integration_example.py"". This example shows how to start simulation in sequence, in parallel or using a cluster. The example also shows how all the simulation results are returned back to your script so you can implement your own number-crunching processing on them, e.g.: plotting graphs with *matplotlib*. - You don't want to write your own python script but still want to start a lot a lot of simulations you should have a look at the sofa-launcher.py application.; Example:; ```batch; ./sofa-launcher example.json; ```. This application is controlled via a json configuration file; ```json; {; ""files"": [; ""example.scn"",; ""example.py""; ],; ""variables"": [; {; ""GRAVITYXML"": ""1 2 3"",; ""nbIterations"": 1000; },; {; ""GRAVITYXML"": ""2 3 4"",; ""nbIterations"": 1000; }; ],; ""launcher"": ""parallel"",; ""numjobs"": 5,; ""resultsstyle"": ""results.thtml"",; ""resultsfile"": ""results.html""; }; ```; with:. - files: The sofa files with your scene; - variables: Some values in your scene can be changed automatically in each run of your scene ; You can use any name as $MYVALUE...it depend on what you put in your scene. ; in my example scene I replace the $GRAVITYXML with a different value at each run; - launcher: Indicate to launch the simulations in parallel (other choice are sequential or ssh); - numjobs: with a maximum of 5 simulation in parallel; - resultsstyle: Name of the report file template, here html but it could be anything else (eg latex array); - resultsfile: The file generated from the template and the results. NB:. - To run the distributed version of the launcher yo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/README.md:1032,configurat,configuration,1032,tools/sofa-launcher/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/README.md,1,['configurat'],['configuration']
Deployability,"l/2539 ). **Examples / Scenes**; - [examples] FIX duplicated scene in regression-tests [#2251]( https://github.com/sofa-framework/sofa/pull/2251 ); - [examples] FIX duplicated scene in regression-tests (2) [#2252]( https://github.com/sofa-framework/sofa/pull/2252 ). **Scripts / Tools**. ### Cleanings. **Architecture**; - [CMake] Remove option SOFA_ENABLE_SOFT_DEPS_TO_SOFAPYTHON [#2533]( https://github.com/sofa-framework/sofa/pull/2533 ); - [GitHub] Improve ""bug report"" issue template [#2454]( https://github.com/sofa-framework/sofa/pull/2454 ). **Modules**; - [All] Clean warnings [#1549]( https://github.com/sofa-framework/sofa/pull/1549 ); - [All] Remove several TopologyDataHandler and headers inclusion in components [#2162]( https://github.com/sofa-framework/sofa/pull/2162 ); - [All] Remove warnings [#2378]( https://github.com/sofa-framework/sofa/pull/2378 ); - [All] Update codebase to compile w/o Sofa.Compat for v21.12 [#2525]( https://github.com/sofa-framework/sofa/pull/2525 ); - [All] Update lifecycle (macros, etc) for v21.12 [#2524]( https://github.com/sofa-framework/sofa/pull/2524 ); - [All] Clean unreferenced files [#2333]( https://github.com/sofa-framework/sofa/pull/2333 ); - [All] Declaration hides previous local declaration [#2463]( https://github.com/sofa-framework/sofa/pull/2463 ); - [All] Expression is converted to bool and can be replaced [#2464]( https://github.com/sofa-framework/sofa/pull/2464 ); - [All] Minor cleaning [#2461]( https://github.com/sofa-framework/sofa/pull/2461 ); - [All] Minor code cleaning [#2225]( https://github.com/sofa-framework/sofa/pull/2225 ); - [All] Variable can be made constexpr [#2472]( https://github.com/sofa-framework/sofa/pull/2472 ); - [All] fix some warnings and remove unnecessary includes [#2312]( https://github.com/sofa-framework/sofa/pull/2312 ); - [All] Fix minor compilation warnings [#2233]( https://github.com/sofa-framework/sofa/pull/2233 ); - [Sofa.Core] More information when the same Data name is used multiple t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:154754,Update,Update,154754,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"l/457 ); - [SofaUserInteraction] MechanicalStateControllerOmni [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] NodeToggleController [#457]( https://github.com/sofa-framework/sofa/pull/457 ). ### Breaking. **Modules**; - [SofaConstraint] Update FreeMotionAnimationLoop so that it can compute a linearised version of the constraint force. [#459]( https://github.com/sofa-framework/sofa/pull/459 ); - **[SofaCore]** Update FreeMotionAnimationLoop so that it can compute a linearised version of the constraint force. [#459]( https://github.com/sofa-framework/sofa/pull/459 ); - **[SofaHelper]** Unifying the way we report file related errors [#669]( https://github.com/sofa-framework/sofa/pull/669 ). ### Improvements. **Architecture**; - [CMake] ADD external projects handling [#649]( https://github.com/sofa-framework/sofa/pull/649 ); - [CMake] ADD the CMAKE_WARN_DEPRECATED option in SOFA [#662]( https://github.com/sofa-framework/sofa/pull/662 ); - [CMake] Improve SOFA installation and packaging [#635]( https://github.com/sofa-framework/sofa/pull/635 ); - [CMake] Cleans for packaging [#789]( https://github.com/sofa-framework/sofa/pull/789 ). **Modules**; - [All] Refactoring in Camera, BackgroundSetting and Light [#676]( https://github.com/sofa-framework/sofa/pull/676 ); - **[SofaBaseLinearSolver]** Improve warning emission for CG [#658]( https://github.com/sofa-framework/sofa/pull/658 ); - **[SofaBaseLinearSolver]** Add ability to activate printing of debug information at runtime [#667]( https://github.com/sofa-framework/sofa/pull/667 ); - [SofaGeneralImplicitOdeSolver] FIX data field name in VariationalSymplecticSolver [#624]( https://github.com/sofa-framework/sofa/pull/624 ); - [SofaGraphComponent] ADD alias usage detection [#702]( https://github.com/sofa-framework/sofa/pull/702 ); - **[SofaLoader]** ADD support to load VTK polylines in legacy formated files [#576]( https://github.com/sofa-framework/sofa/pull/576 ); - [SofaMiscMapping] Fix rigi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:293932,install,installation,293932,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['installation']
Deployability,lModelOBJVisitor.h; ${SRC_ROOT}/InitVisitor.h; ${SRC_ROOT}/IntegrateBeginEvent.h; ${SRC_ROOT}/IntegrateEndEvent.h; ${SRC_ROOT}/LocalStorage.h; ${SRC_ROOT}/MechanicalOperations.h; ${SRC_ROOT}/MechanicalVPrintVisitor.h; ${SRC_ROOT}/MechanicalVisitor.h; ${SRC_ROOT}/MutationListener.h; ${SRC_ROOT}/Node.h; ${SRC_ROOT}/Node.inl; ${SRC_ROOT}/ParallelForEach.h; ${SRC_ROOT}/ParallelSparseMatrixProduct.h; ${SRC_ROOT}/ParallelVisitorScheduler.h; ${SRC_ROOT}/PauseEvent.h; ${SRC_ROOT}/PipelineImpl.h; ${SRC_ROOT}/PositionEvent.h; ${SRC_ROOT}/PrintVisitor.h; ${SRC_ROOT}/PropagateEventVisitor.h; ${SRC_ROOT}/RequiredPlugin.h; ${SRC_ROOT}/ResetVisitor.h; ${SRC_ROOT}/SceneLoaderFactory.h; ${SRC_ROOT}/Simulation.h; ${SRC_ROOT}/SimulationLoop.h; ${SRC_ROOT}/SolveVisitor.h; ${SRC_ROOT}/StateChangeVisitor.h; ${SRC_ROOT}/TopologyChangeVisitor.h; ${SRC_ROOT}/UpdateBoundingBoxVisitor.h; ${SRC_ROOT}/UpdateContextVisitor.h; ${SRC_ROOT}/UpdateInternalDataVisitor.h; ${SRC_ROOT}/UpdateLinksVisitor.h; ${SRC_ROOT}/UpdateMappingEndEvent.h; ${SRC_ROOT}/UpdateMappingVisitor.h; ${SRC_ROOT}/VectorOperations.h; ${SRC_ROOT}/VelocityThresholdVisitor.h; ${SRC_ROOT}/Visitor.h; ${SRC_ROOT}/VisitorExecuteFunc.h; ${SRC_ROOT}/VisitorScheduler.h; ${SRC_ROOT}/VisualVisitor.h; ${SRC_ROOT}/WriteStateVisitor.h; ${SRC_ROOT}/XMLPrintVisitor.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/BaseSimulationExporter.h; ${SRC_ROOT}/TaskScheduler.h; ${SRC_ROOT}/TaskSchedulerFactory.h; ${SRC_ROOT}/TaskSchedulerRegistry.h; ${SRC_ROOT}/DefaultTaskScheduler.h; ${SRC_ROOT}/Task.h; ${SRC_ROOT}/InitTasks.h; ${SRC_ROOT}/Locks.h; ${SRC_ROOT}/MainTaskSchedulerFactory.h; ${SRC_ROOT}/MainTaskSchedulerRegistry.h; ${SRC_ROOT}/SceneCheck.h; ${SRC_ROOT}/SceneCheckRegistry.h; ${SRC_ROOT}/SceneCheckMainRegistry.h; ${SRC_ROOT}/WorkerThread.h; ${SRC_ROOT}/events/BuildConstraintSystemEndEvent.h; ${SRC_ROOT}/events/SimulationInitDoneEvent.h; ${SRC_ROOT}/events/SimulationInitStartEvent.h; ${SRC_ROOT}/events/SimulationInitTexturesDoneEvent.h; ${SRC_ROOT}/events/Si,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:1851,Update,UpdateMappingEndEvent,1851,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Update'],['UpdateMappingEndEvent']
Deployability,"lines : **CONTRIBUTING.md** and **GUIDELINES.md**; - Add the configuration required (ex: C++, compiler versions); - Add a page to use SOFA in Matlab; - Improve Logger documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an API to display primitives on screen. For now, only the OpenGL (fixed-pipeline version) implementation has been made.; - add a Logger; - add the diffusion effect in SOFA (heat transfer); - SOFA_USE_MASK compilation variable to activate or de-activate the masks in SOFA; - DataTracker: simple and elegant way to track Data in Engine; - extlibs: update cimg to version 1.7.3; - Add guidelines for contributions in CONTRIBUTING.md. ### Moved files. - Kernel modules of SOFA (SofaFramework, SofaBase, SofaCommon and SofaSimulation) have been moved to one common module SofaKernel, located at _sofa_root/SofaKernel_. SofaKernel is a pure LGPL module.; - code in _sofa_root/modules/sofa/simulation/_ has been splitted into three modules of SofaKernel: SofaSimulationCommon, SofaSimulationTree, SofaSimulationGraph; - MOVE the SofaPardiso module as a plugin; - Move OglTetrahedralModel into a new plugin called VolumetricRendering. - Minor moves; - Move ColorMap code to helper and let (Ogl)ColorMap from SofaOpenGLVisual doing OpenGL stuff; - Move TorsionForceField and Complementary",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:341660,pipeline,pipeline,341660,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['pipeline'],['pipeline']
Deployability,lision/Intersection.h; ${SRC_ROOT}/collision/Intersection.inl; ${SRC_ROOT}/collision/IntersectorFactory.h; ${SRC_ROOT}/collision/NarrowPhaseDetection.h; ${SRC_ROOT}/collision/Pipeline.h; ${SRC_ROOT}/loader/BaseLoader.h; ${SRC_ROOT}/loader/ImageLoader.h; ${SRC_ROOT}/loader/MeshLoader.h; ${SRC_ROOT}/loader/SceneLoader.h; ${SRC_ROOT}/loader/VoxelLoader.h; ${SRC_ROOT}/logging/PerComponentLoggingMessageHandler.h; ${SRC_ROOT}/logging/RichConsoleStyleMessageFormatter.h; ${SRC_ROOT}/objectmodel/AbstractDataLink.h; ${SRC_ROOT}/objectmodel/AspectPool.h; ${SRC_ROOT}/objectmodel/Base.h; ${SRC_ROOT}/objectmodel/BaseClass.h; ${SRC_ROOT}/objectmodel/BaseClassNameHelper.h; ${SRC_ROOT}/objectmodel/BaseContext.h; ${SRC_ROOT}/objectmodel/BaseData.h; ${SRC_ROOT}/objectmodel/BaseLink.h; ${SRC_ROOT}/objectmodel/BaseNode.h; ${SRC_ROOT}/objectmodel/BaseObject.h; ${SRC_ROOT}/objectmodel/BaseObjectDescription.h; ${SRC_ROOT}/objectmodel/ClassInfo.h; ${SRC_ROOT}/objectmodel/ComponentState.h; ${SRC_ROOT}/objectmodel/ConfigurationSetting.h; ${SRC_ROOT}/objectmodel/Context.h; ${SRC_ROOT}/objectmodel/ContextObject.h; ${SRC_ROOT}/objectmodel/DDGNode.h; ${SRC_ROOT}/objectmodel/Data.h; ${SRC_ROOT}/objectmodel/DataCallback.h; ${SRC_ROOT}/objectmodel/DataContentValue.h; ${SRC_ROOT}/objectmodel/DataFileName.h; ${SRC_ROOT}/objectmodel/DataFileNameVector.h; ${SRC_ROOT}/objectmodel/DataLink.h; ${SRC_ROOT}/objectmodel/DeprecatedData.h; ${SRC_ROOT}/objectmodel/RemovedData.h; ${SRC_ROOT}/objectmodel/DetachNodeEvent.h; ${SRC_ROOT}/objectmodel/Event.h; ${SRC_ROOT}/objectmodel/GUIEvent.h; ${SRC_ROOT}/objectmodel/HapticDeviceEvent.h; ${SRC_ROOT}/objectmodel/IdleEvent.h; ${SRC_ROOT}/objectmodel/JoystickEvent.h; ${SRC_ROOT}/objectmodel/KeypressedEvent.h; ${SRC_ROOT}/objectmodel/KeyreleasedEvent.h; ${SRC_ROOT}/objectmodel/Link.h; ${SRC_ROOT}/objectmodel/MouseEvent.h; ${SRC_ROOT}/objectmodel/SPtr.h; ${SRC_ROOT}/objectmodel/ScriptEvent.h; ${SRC_ROOT}/objectmodel/TypeOfInsertion.h; ${SRC_ROOT}/objectmodel/Tag.h; ${SRC_,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:5295,Configurat,ConfigurationSetting,5295,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['Configurat'],['ConfigurationSetting']
Deployability,"ll/1003 ); - [All] Fix some warnings [#873]( https://github.com/sofa-framework/sofa/pull/873 ); - [All] Several bug fixes [#985]( https://github.com/sofa-framework/sofa/pull/985 ); - [All] Some fixes to have a ... green dashboard! [#982]( https://github.com/sofa-framework/sofa/pull/982 ); - [All] Fix compilation with SOFA_NO_OPENGL flag [#1032]( https://github.com/sofa-framework/sofa/pull/1032 ); - [SofaConstraint] Convert static sized arrays to dynamic ones in GenericConstraintSolver [#920]( https://github.com/sofa-framework/sofa/pull/920 ); - **[SofaBaseMechanics]** Fix barycentric mapping again [#924]( https://github.com/sofa-framework/sofa/pull/924 ); - **[SofaBaseTopology]** Fix Crash when loading a vtk file generated by Gmsh using TetrahedronSetTopologyContainer as container [#1008]( https://github.com/sofa-framework/sofa/pull/1008 ); - **[SofaBaseTopology]** Fix right setDirty/clean topologyData [#889]( https://github.com/sofa-framework/sofa/pull/889 ); - **[SofaBaseTopology]**[DrawTools] Some fix/update in topology internal draw methods. [#877]( https://github.com/sofa-framework/sofa/pull/877 ); - **[SofaBaseTopology]** Yet another fix in Tetra2triangleTopologicalMapping [#998]( https://github.com/sofa-framework/sofa/pull/998 ); - **[SofaBaseTopology]** Clean, fix, upgrade Triangle2EdgeTopologicalMapping [#875]( https://github.com/sofa-framework/sofa/pull/875 ); - **[SofaBaseTopology]** Fix crashes in Tetra2TriangleTopologicalMapping [#960]( https://github.com/sofa-framework/sofa/pull/960 ); - [SofaBoundaryCondition] Fix draw function in ConstantForcefield [#1017]( https://github.com/sofa-framework/sofa/pull/1017 ); - **[SofaDeformable]** FIX issue 928 [#942]( https://github.com/sofa-framework/sofa/pull/942 ); - **[SofaDeformable]** Merge 2 ctor in SpringForceField [#948]( https://github.com/sofa-framework/sofa/pull/948 ); - [SofaExporter] FIX: out-of-tree include of SofaExporter header files [#975]( https://github.com/sofa-framework/sofa/pull/975 ); - [Sofa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:264669,update,update,264669,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,ll/1753 ); - **[SofaCore]** Minor cleaning in constraints [#2138]( https://github.com/sofa-framework/sofa/pull/2138 ); - **[SofaCore]** Move Link::CheckPath() method to PathResolver::CheckPath() [#1717]( https://github.com/sofa-framework/sofa/pull/1717 ); - **[SofaCore]** Move definition Link::read() method to BaseLink::read() [#1736]( https://github.com/sofa-framework/sofa/pull/1736 ); - **[SofaCore]** Move function definition in cpp files [#2041]( https://github.com/sofa-framework/sofa/pull/2041 ); - **[SofaCore]** Move the streaming operator from .h to .cpp [#1751]( https://github.com/sofa-framework/sofa/pull/1751 ); - **[SofaCore]** Reduce the needs for include in Node.h [#1744]( https://github.com/sofa-framework/sofa/pull/1744 ); - **[SofaCore]** Remove empty file [#2204]( https://github.com/sofa-framework/sofa/pull/2204 ); - **[SofaCore_simutest]** Add tests for Link::CheckPath [#1714]( https://github.com/sofa-framework/sofa/pull/1714 ); - **[SofaCore_test]** Update the two failling tests so they match the new convention for TypeInfo [#1709]( https://github.com/sofa-framework/sofa/pull/1709 ); - **[SofaExplicitOdeSolver]** Mark Data as disabled [#2218]( https://github.com/sofa-framework/sofa/pull/2218 ); - [SofaExporter] Remove SofaBaseVisual dependency [#2039]( https://github.com/sofa-framework/sofa/pull/2039 ); - [SofaExporter] Removed duplicated header guard [#1954]( https://github.com/sofa-framework/sofa/pull/1954 ); - [SofaExporter] Update OBJExporter example [#1782]( https://github.com/sofa-framework/sofa/pull/1782 ); - **[SofaFramework/Sofa.Testing]** remove macro and move testing resources from SofaFramework [#2000]( https://github.com/sofa-framework/sofa/pull/2000 ); - **[SofaFramework]** Remove warnings (a lot) [#1876]( https://github.com/sofa-framework/sofa/pull/1876 ); - [SofaGeneralEngine] Add option in NearestPointROI to use restPosition or position [#1978]( https://github.com/sofa-framework/sofa/pull/1978 ); - [SofaGeneralEngine] Remove dep on Id,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:201746,Update,Update,201746,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,ll/675 ); - **[SofaHelper]** More robust method to test end of string [#617]( https://github.com/sofa-framework/sofa/pull/617 ); - **[SofaKernel]** FIX macro issue resulted from the #include cleaning. [#672]( https://github.com/sofa-framework/sofa/pull/672 ); - [SofaMiscFem] FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaOpenglVisual] FIX MacOS crash in batch mode [#646]( https://github.com/sofa-framework/sofa/pull/646 ); - **[SofaSimulationGraph]** FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaSparseSolver] FIX SparseLDL crash and add proper SOFA_FLOAT/DOUBLE mangement [#655]( https://github.com/sofa-framework/sofa/pull/655 ). **Plugins / Projects**; - [CGALPlugin] FIX compilation issue with recent version of CGAL (4.11) & Ubunu 18.04 LTS [#664]( https://github.com/sofa-framework/sofa/pull/664 ); - [CImgPlugin] Export CImg_CFLAGS [#595]( https://github.com/sofa-framework/sofa/pull/595 ); - [CImgPlugin] FIX CMakeLists install fail since pluginization [#609]( https://github.com/sofa-framework/sofa/pull/609 ); - [CImgPlugin] FIX malformed cflag append [#622]( https://github.com/sofa-framework/sofa/pull/622 ); - [HeadlessRecorder] Fix headless recorder stream definition [#666]( https://github.com/sofa-framework/sofa/pull/666 ); - [MultiThreading] FIX: add createSubelements param in MeshGmshLoader [#626]( https://github.com/sofa-framework/sofa/pull/626 ); - [runSofa] Fix compilation when SofaGuiQt is not activated [#599]( https://github.com/sofa-framework/sofa/pull/599 ); - [runSofa] ADD infinite iterations option to batch gui [#613]( https://github.com/sofa-framework/sofa/pull/613 ); - [runSofa] FIX missing resources [#758]( https://github.com/sofa-framework/sofa/pull/758 ); - [SofaDistanceGrid] ADD .scene-tests to ignore scene [#594]( https://github.com/sofa-framework/sofa/pull/594 ); - [SofaPython] FIX build for MacOS >10.13.0 [#614]( https://github.com/sofa-framework/sofa/pull/614 ). **Examples,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:298101,install,install,298101,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,loyd_iteration 0.25; Lloyd_iteration 0.23; computeUniformSampling: 0.96; computeWeights: 1.92; computeLinearRegionsSampling: 0.04; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 5 6; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.24; computeUniformSampling: 1.89; computeWeights: 2.98; computeLinearRegionsSampling: 0.05; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 5 10; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.23; computeUniformSampling: 1.88; computeWeights: 2.96; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0. File: scenes/steak.pscn using steak-seg.ppm 5 20; Lloyd_iteration 0.25; Lloyd_iteration 0.23; Lloyd_iteration 0.25; Lloyd_iteration 0.23; Lloyd_iteration 0.23; computeUniformSampling: 1.89; computeWeights: 3.03; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0. File: scenes/steak.pscn using steak-seg.ppm 5 50; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.23; computeUniformSampling: 1.88; computeWeights: 2.96; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 10 6; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.25; computeUniformSampling: 3.6; computeWeights: 4.93; computeLinearRegionsSampling: 0.13; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg.ppm 10 10; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; computeUniformSampling: 3.6; computeWeights: 4.93; computeLinearRegionsSampling: 0.13; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:1779,update,updateSampleMaterialProperties,1779,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,loyd_iteration 17.64; Lloyd_iteration 17.67; Lloyd_iteration 17.72; Lloyd_iteration 17.68; Lloyd_iteration 17.69; Lloyd_iteration 17.62; Lloyd_iteration 17.66; Lloyd_iteration 17.72; Lloyd_iteration 17.73; Lloyd_iteration 17.64; Lloyd_iteration 17.65; Lloyd_iteration 17.71; Lloyd_iteration 17.72; Lloyd_iteration 17.71; Lloyd_iteration 17.65; Lloyd_iteration 17.7; Lloyd_iteration 17.68; Lloyd_iteration 17.69; Lloyd_iteration 17.63; Lloyd_iteration 17.71; Lloyd_iteration 17.71; Lloyd_iteration 17.73; Lloyd_iteration 17.7; Lloyd_iteration 17.67; Lloyd_iteration 17.68; Lloyd_iteration 17.73; Lloyd_iteration 17.67; Lloyd_iteration 17.63; Lloyd_iteration 17.71; Lloyd_iteration 17.71; Lloyd_iteration 17.71; Lloyd_iteration 17.69; Lloyd_iteration 17.66; Lloyd_iteration 17.65; Lloyd_iteration 17.73; Lloyd_iteration 17.7; Lloyd_iteration 17.66; Lloyd_iteration 17.68; Lloyd_iteration 17.75; computeUniformSampling: 1803.23; computeWeights: 202.74; computeLinearRegionsSampling: 3.8; updateSampleMaterialProperties: 0.26. File: scenes/steak.pscn using steak-seg3.ppm 5 20; Lloyd_iteration 17.71; Lloyd_iteration 17.73; Lloyd_iteration 17.78; Lloyd_iteration 17.83; Lloyd_iteration 17.79; Lloyd_iteration 17.76; Lloyd_iteration 17.72; Lloyd_iteration 17.74; Lloyd_iteration 17.73; Lloyd_iteration 17.65; Lloyd_iteration 17.75; Lloyd_iteration 17.76; Lloyd_iteration 17.76; Lloyd_iteration 17.74; Lloyd_iteration 17.67; Lloyd_iteration 17.71; Lloyd_iteration 17.74; Lloyd_iteration 17.76; Lloyd_iteration 17.66; Lloyd_iteration 17.78; Lloyd_iteration 17.76; Lloyd_iteration 17.76; Lloyd_iteration 17.74; Lloyd_iteration 17.66; Lloyd_iteration 17.76; Lloyd_iteration 17.7; Lloyd_iteration 17.66; Lloyd_iteration 17.59; Lloyd_iteration 17.64; Lloyd_iteration 17.67; Lloyd_iteration 17.69; Lloyd_iteration 17.66; Lloyd_iteration 17.61; Lloyd_iteration 17.68; Lloyd_iteration 17.7; Lloyd_iteration 17.68; Lloyd_iteration 17.63; Lloyd_iteration 17.71; Lloyd_iteration 17.72; Lloyd_iteration 17.68; Lloyd_ite,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:31942,update,updateSampleMaterialProperties,31942,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,loyd_iteration 17.68; Lloyd_iteration 17.6; Lloyd_iteration 17.66; Lloyd_iteration 17.64; Lloyd_iteration 17.71; Lloyd_iteration 17.64; Lloyd_iteration 17.58; Lloyd_iteration 17.67; Lloyd_iteration 17.66; Lloyd_iteration 17.62; Lloyd_iteration 17.64; Lloyd_iteration 17.62; Lloyd_iteration 17.71; Lloyd_iteration 17.69; Lloyd_iteration 17.59; Lloyd_iteration 17.6; Lloyd_iteration 17.71; Lloyd_iteration 17.69; Lloyd_iteration 17.6; Lloyd_iteration 17.57; Lloyd_iteration 17.64; Lloyd_iteration 17.62; Lloyd_iteration 17.62; Lloyd_iteration 17.58; Lloyd_iteration 17.68; Lloyd_iteration 17.63; Lloyd_iteration 17.71; Lloyd_iteration 17.66; Lloyd_iteration 17.65; Lloyd_iteration 17.72; Lloyd_iteration 17.7; Lloyd_iteration 17.67; Lloyd_iteration 17.62; Lloyd_iteration 17.62; Lloyd_iteration 17.68; Lloyd_iteration 17.63; Lloyd_iteration 17.65; Lloyd_iteration 17.69; Lloyd_iteration 17.65; computeUniformSampling: 1800.54; computeWeights: 202.38; computeLinearRegionsSampling: 3.79; updateSampleMaterialProperties: 0.27. File: scenes/steak.pscn using steak-seg3.ppm 5 10; Lloyd_iteration 17.65; Lloyd_iteration 17.73; Lloyd_iteration 17.78; Lloyd_iteration 17.83; Lloyd_iteration 17.77; Lloyd_iteration 17.73; Lloyd_iteration 17.75; Lloyd_iteration 17.78; Lloyd_iteration 17.72; Lloyd_iteration 17.71; Lloyd_iteration 17.71; Lloyd_iteration 17.75; Lloyd_iteration 17.73; Lloyd_iteration 17.71; Lloyd_iteration 17.73; Lloyd_iteration 17.75; Lloyd_iteration 17.78; Lloyd_iteration 17.73; Lloyd_iteration 17.72; Lloyd_iteration 17.74; Lloyd_iteration 17.72; Lloyd_iteration 17.77; Lloyd_iteration 17.7; Lloyd_iteration 17.72; Lloyd_iteration 17.71; Lloyd_iteration 17.71; Lloyd_iteration 17.61; Lloyd_iteration 17.56; Lloyd_iteration 17.69; Lloyd_iteration 17.66; Lloyd_iteration 17.67; Lloyd_iteration 17.61; Lloyd_iteration 17.67; Lloyd_iteration 17.65; Lloyd_iteration 17.67; Lloyd_iteration 17.59; Lloyd_iteration 17.64; Lloyd_iteration 17.69; Lloyd_iteration 17.65; Lloyd_iteration 17.68; Lloyd_i,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:29470,update,updateSampleMaterialProperties,29470,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,loyd_iteration 18.81; Lloyd_iteration 18.8; Lloyd_iteration 18.83; Lloyd_iteration 18.85; Lloyd_iteration 18.85; Lloyd_iteration 18.87; Lloyd_iteration 18.83; Lloyd_iteration 18.86; Lloyd_iteration 18.85; Lloyd_iteration 18.82; Lloyd_iteration 18.78; Lloyd_iteration 18.8; Lloyd_iteration 18.85; Lloyd_iteration 18.76; Lloyd_iteration 18.84; Lloyd_iteration 18.8; Lloyd_iteration 18.81; Lloyd_iteration 18.83; Lloyd_iteration 18.78; Lloyd_iteration 18.81; Lloyd_iteration 18.85; Lloyd_iteration 18.82; Lloyd_iteration 18.86; Lloyd_iteration 18.86; Lloyd_iteration 18.82; Lloyd_iteration 18.86; Lloyd_iteration 18.83; Lloyd_iteration 18.81; Lloyd_iteration 18.79; Lloyd_iteration 18.82; Lloyd_iteration 18.84; Lloyd_iteration 18.84; Lloyd_iteration 18.86; Lloyd_iteration 18.87; Lloyd_iteration 18.87; Lloyd_iteration 18.81; Lloyd_iteration 18.77; Lloyd_iteration 18.79; Lloyd_iteration 18.82; computeUniformSampling: 2005.9; computeWeights: 333.33; computeLinearRegionsSampling: 6.53; updateSampleMaterialProperties: 0.71. File: scenes/steak.pscn using steak-seg3.ppm 10 20; Lloyd_iteration 19.03; Lloyd_iteration 18.8; Lloyd_iteration 18.74; Lloyd_iteration 18.82; Lloyd_iteration 18.85; Lloyd_iteration 18.84; Lloyd_iteration 18.84; Lloyd_iteration 18.82; Lloyd_iteration 18.86; Lloyd_iteration 18.87; Lloyd_iteration 18.88; Lloyd_iteration 18.89; Lloyd_iteration 18.9; Lloyd_iteration 18.9; Lloyd_iteration 18.86; Lloyd_iteration 18.81; Lloyd_iteration 18.84; Lloyd_iteration 18.85; Lloyd_iteration 18.89; Lloyd_iteration 18.9; Lloyd_iteration 18.84; Lloyd_iteration 18.79; Lloyd_iteration 18.84; Lloyd_iteration 18.84; Lloyd_iteration 18.8; Lloyd_iteration 18.8; Lloyd_iteration 18.78; Lloyd_iteration 18.82; Lloyd_iteration 18.78; Lloyd_iteration 18.8; Lloyd_iteration 18.83; Lloyd_iteration 18.84; Lloyd_iteration 18.85; Lloyd_iteration 18.8; Lloyd_iteration 18.72; Lloyd_iteration 18.84; Lloyd_iteration 18.81; Lloyd_iteration 18.81; Lloyd_iteration 18.8; Lloyd_iteration 18.8; Lloyd_iteration,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:41836,update,updateSampleMaterialProperties,41836,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,lper class for consistent component naming [#2631]( https://github.com/sofa-framework/sofa/pull/2631 ); - [SofaGeneralCollisionMesh] Move TriangleOctree utility class to Helper [#2805]( https://github.com/sofa-framework/sofa/pull/2805 ); - [SofaGeneralObjectInteraction] BoxStiffSpringForceField is now a pack of components [#2621]( https://github.com/sofa-framework/sofa/pull/2621 ); - [SofaGeneralSimpleFEM] Some cleaning in TriangularFEMForceFieldOptim [#2567]( https://github.com/sofa-framework/sofa/pull/2567 ); - [SofaSimpleFEM] Create a TriangleFEMUtils class to factorise Triangle/Triangular[FEMForceField] code [#2287]( https://github.com/sofa-framework/sofa/pull/2287 ); - [SolidMechanics] Remove unused _assembling data [#2901]( https://github.com/sofa-framework/sofa/pull/2901 ); - [Topology.Container.Dynamic] Fix duplicate Data Points in PointSetTopologyContainer [#2993]( https://github.com/sofa-framework/sofa/pull/2993 ). **Plugins / Projects**; - [runSofa] Add a button and a mechanism to activate the scenegraph updates [#3026]( https://github.com/sofa-framework/sofa/pull/3026 ); - [runSofa] Remove not working feature in QSofaListView. [#3025]( https://github.com/sofa-framework/sofa/pull/3025 ). **Examples / Scenes**. **Scripts / Tools**. ### Improvements. **Project**; - [Contributing] Update info regarding GitHub Discussions [#2741]( https://github.com/sofa-framework/sofa/pull/2741 ); - [Project] Add the graph illustrating the workflow of a PR review in CONTRIBUTING [#3051]( https://github.com/sofa-framework/sofa/pull/3051 ). **Architecture**; - [collections] Install collections in their own directory [#3196]( https://github.com/sofa-framework/sofa/pull/3196 ). **Modules**; - [Constraint.Lagrangian.Correction] Searching for Direct Linear Solver in LinearSolverConstraintCorrection [#3055]( https://github.com/sofa-framework/sofa/pull/3055 ) ; - [GUI.Qt] Redirect Qt messages to the SOFA output stream [#3101]( https://github.com/sofa-framework/sofa/pull/3101 ); - [GU,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:97466,update,updates,97466,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['updates']
Deployability,m/sofa-framework/sofa/pull/1321 ); - [SofaSphFluid] Clean SofaFluid plugin compilation warning. [#1296]( https://github.com/sofa-framework/sofa/pull/1296 ). **Examples / Scenes**; - [examples] Fix and remove 3 scenes with deprecated component [#1355]( https://github.com/sofa-framework/sofa/pull/1355 ); - [examples] Remove useless files and add MeshMatrixMass example [#1257]( https://github.com/sofa-framework/sofa/pull/1257 ); - [scenes] Fix scenes from alias [#1292]( https://github.com/sofa-framework/sofa/pull/1292 ); - [scenes] Remove scene warnings due to Rigid template [#1295]( https://github.com/sofa-framework/sofa/pull/1295 ); - [scenes] Fix alias warnings in scenes [#1279]( https://github.com/sofa-framework/sofa/pull/1279 ). ____________________________________________________________. ## [v19.12]( https://github.com/sofa-framework/sofa/tree/v19.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v19.06...v19.12 ). ### Breaking. **Architecture**; - [All] Improve extlibs integration [#1137]( https://github.com/sofa-framework/sofa/pull/1137 ); - [packages] Move all SofaComponent* + rename SofaAllCommonComponents [#1155]( https://github.com/sofa-framework/sofa/pull/1155 ). **Modules**; - [All] Add SingleLink to Topology to reveal all hidden GetMeshTopology [#1183]( https://github.com/sofa-framework/sofa/pull/1183 ); - [All] Remove ExtVecType [#1055]( https://github.com/sofa-framework/sofa/pull/1055 ); - [All] up change on GetMeshTopology [#1223]( https://github.com/sofa-framework/sofa/pull/1223 ); - [SofaBoundaryConditions] Apply doInternalUpdate API to ConstantForceField [#1145]( https://github.com/sofa-framework/sofa/pull/1145 ); - **[SofaKernel]** Replacing const char* with strings for group / help / widget etc. [#1152]( https://github.com/sofa-framework/sofa/pull/1152 ); - **[SofaKernel]** ADD: static method in events to retrieve the classname [#1118]( https://github.com/sofa-framework/sofa/pull/1118 ); - **[SofaKernel]** Set BaseData to non-persi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:243453,integrat,integration,243453,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['integrat'],['integration']
Deployability,"m/sofa-framework/sofa/pull/2062 ); - [SofaCUDA] Add more examples for liver scene and squareTissue [#2016]( https://github.com/sofa-framework/sofa/pull/2016 ). **Examples / Scenes**; - [Benchmark] Introduce benchmark on matrix assembly [#2208]( https://github.com/sofa-framework/sofa/pull/2208 ); - [examples] Improve BeamFEMForceField example [#2092]( https://github.com/sofa-framework/sofa/pull/2092 ); - [scenes] Add scenes to test several components during mesh removal [#2161]( https://github.com/sofa-framework/sofa/pull/2161 ). ### Bug Fixes; **Architecture**; - [CMake] FIX Debug build + more cleaning [#1891]( https://github.com/sofa-framework/sofa/pull/1891 ); - [CMake] FIX SofaFramework aliases [#2175]( https://github.com/sofa-framework/sofa/pull/2175 ); - [CMake] FIX header include tree [#1863]( https://github.com/sofa-framework/sofa/pull/1863 ); - [CMake] FIX resources and translations install on Windows [#1949]( https://github.com/sofa-framework/sofa/pull/1949 ); - [CMake] Set CMake install default component [#2037]( https://github.com/sofa-framework/sofa/pull/2037 ); - [CMake][tools] v20.12.00 changes [#1804]( https://github.com/sofa-framework/sofa/pull/1804 ). **Extlibs**; - [GTest] Fix with GCC11 [#2181]( https://github.com/sofa-framework/sofa/pull/2181 ). **Modules**; - [All] FIX build without SofaPython soft dependencies [#1829]( https://github.com/sofa-framework/sofa/pull/1829 ); - [All] FIX warnings during STC#11 [#2140]( https://github.com/sofa-framework/sofa/pull/2140 ); - [All] Fix compilation warning. [#1699]( https://github.com/sofa-framework/sofa/pull/1699 ); - [All] Fix invalid Memory access in MechanicalObject and Compliant_test [#1849]( https://github.com/sofa-framework/sofa/pull/1849 ); - [All] Fix debug compilation [#2223]( https://github.com/sofa-framework/sofa/pull/2223 ); - [All] Changes needed for v21.06 [#2226]( https://github.com/sofa-framework/sofa/pull/2226 ); - **[Sofa.Type]** Add forgotten function declaration, used in Debug [#1937](",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:181349,install,install,181349,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,m/sofa-framework/sofa/pull/3597) ; - [Contributing] Update file to mention good first issue [#3625](https://github.com/sofa-framework/sofa/pull/3625) ; - [Simulation] Error when trying to load a non-existing file [#3677](https://github.com/sofa-framework/sofa/pull/3677) ; - [all] Give reason when component cannot be created [#3682](https://github.com/sofa-framework/sofa/pull/3682) ; - [Type] Support structured binding for type::fixed_array [#3753](https://github.com/sofa-framework/sofa/pull/3753) ; - Update CONTRIBUTING.md [#3774](https://github.com/sofa-framework/sofa/pull/3774) . **Modules**; - [Collision.Response.Contact] Implement addKToMatrix for PenalityContactForceField [#3626](https://github.com/sofa-framework/sofa/pull/3626) ; - [Mapping.NonLinear] Implement missing applyJT [#3776](https://github.com/sofa-framework/sofa/pull/3776) ; - [Constraint] Add data to access constraint forces in LCPCS [#3796](https://github.com/sofa-framework/sofa/pull/3796) ; - [Rendering3D] OglModel: Use glMapBufferRange to update buffers [#3822](https://github.com/sofa-framework/sofa/pull/3822) ; - [Logging] Suggestion to better highlight warnings in console [#3914](https://github.com/sofa-framework/sofa/pull/3914) . **Plugins / Projects**; - [Multithreading] 2 steps to maximize coalescing memory access [#3572](https://github.com/sofa-framework/sofa/pull/3572) ; - [MultiThreading] Parallel springs [#3596](https://github.com/sofa-framework/sofa/pull/3596) ; - [MultiThreading] Prepare data for rendering in parallel [#3599](https://github.com/sofa-framework/sofa/pull/3599) ; - [MultiThreading] Implement addDForce in ParallelStiffSpringForceField [#3668](https://github.com/sofa-framework/sofa/pull/3668) ; - [SofaCUDA] Add missing templates for Cuda MechanicalObject [#3688](https://github.com/sofa-framework/sofa/pull/3688) ; - [SceneChecking] Add check when setting contactStiffness uselessly [#3843](https://github.com/sofa-framework/sofa/pull/3843) . **Examples / Scenes**; - [example] ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:53910,update,update,53910,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,mechanicalvisitor/MechanicalVNormVisitor.h; ${SRC_ROOT}/mechanicalvisitor/MechanicalVOpVisitor.h; ${SRC_ROOT}/mechanicalvisitor/MechanicalVReallocVisitor.h; ${SRC_ROOT}/mechanicalvisitor/MechanicalVSizeVisitor.h; ). set(SOURCE_FILES; ${SRC_ROOT}/AnimateBeginEvent.cpp; ${SRC_ROOT}/AnimateEndEvent.cpp; ${SRC_ROOT}/AnimateVisitor.cpp; ${SRC_ROOT}/BaseMechanicalVisitor.cpp; ${SRC_ROOT}/BehaviorUpdatePositionVisitor.cpp; ${SRC_ROOT}/CleanupVisitor.cpp; ${SRC_ROOT}/CollisionAnimationLoop.cpp; ${SRC_ROOT}/CollisionBeginEvent.cpp; ${SRC_ROOT}/CollisionEndEvent.cpp; ${SRC_ROOT}/CollisionVisitor.cpp; ${SRC_ROOT}/CpuTask.cpp; ${SRC_ROOT}/CpuTaskStatus.cpp; ${SRC_ROOT}/DeactivatedNodeVisitor.cpp; ${SRC_ROOT}/DefaultAnimationLoop.cpp; ${SRC_ROOT}/DefaultVisualManagerLoop.cpp; ${SRC_ROOT}/DeleteVisitor.cpp; ${SRC_ROOT}/ExportDotVisitor.cpp; ${SRC_ROOT}/ExportGnuplotVisitor.cpp; ${SRC_ROOT}/ExportVisualModelOBJVisitor.cpp; ${SRC_ROOT}/InitVisitor.cpp; ${SRC_ROOT}/IntegrateBeginEvent.cpp; ${SRC_ROOT}/IntegrateEndEvent.cpp; ${SRC_ROOT}/MainTaskSchedulerRegistry.cpp; ${SRC_ROOT}/MainTaskSchedulerFactory.cpp; ${SRC_ROOT}/MechanicalOperations.cpp; ${SRC_ROOT}/MechanicalVPrintVisitor.cpp; ${SRC_ROOT}/MechanicalVisitor.cpp; ${SRC_ROOT}/MutationListener.cpp; ${SRC_ROOT}/Node.cpp; ${SRC_ROOT}/PauseEvent.cpp; ${SRC_ROOT}/PipelineImpl.cpp; ${SRC_ROOT}/PositionEvent.cpp; ${SRC_ROOT}/PrintVisitor.cpp; ${SRC_ROOT}/PropagateEventVisitor.cpp; ${SRC_ROOT}/RequiredPlugin.cpp; ${SRC_ROOT}/ResetVisitor.cpp; ${SRC_ROOT}/SceneLoaderFactory.cpp; ${SRC_ROOT}/SceneCheck.cpp; ${SRC_ROOT}/SceneCheckRegistry.cpp; ${SRC_ROOT}/SceneCheckMainRegistry.cpp; ${SRC_ROOT}/Simulation.cpp; ${SRC_ROOT}/SolveVisitor.cpp; ${SRC_ROOT}/StateChangeVisitor.cpp; ${SRC_ROOT}/TopologyChangeVisitor.cpp; ${SRC_ROOT}/UpdateBoundingBoxVisitor.cpp; ${SRC_ROOT}/UpdateContextVisitor.cpp; ${SRC_ROOT}/UpdateInternalDataVisitor.cpp; ${SRC_ROOT}/UpdateLinksVisitor.cpp; ${SRC_ROOT}/UpdateMappingEndEvent.cpp; ${SRC_ROOT}/UpdateMappingVisitor,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:7342,Integrat,IntegrateEndEvent,7342,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Integrat'],['IntegrateEndEvent']
Deployability,"mework/sofa/pull/2360 ); - [Sofa.Core] Fix diamond inheritance in PairInteractionConstraint [#2488]( https://github.com/sofa-framework/sofa/pull/2488 ); - [Sofa.DefaultType] Fix declaration of global variables [#2317]( https://github.com/sofa-framework/sofa/pull/2317 ); - [Sofa.GL] Set glew as mandatory [#2358]( https://github.com/sofa-framework/sofa/pull/2358 ); - [Sofa.Helper] Fix and micro-optimize AdvancedTimer [#2349]( https://github.com/sofa-framework/sofa/pull/2349 ); - [Sofa.Helper] More tests for NameDecoder + fix them [#2380]( https://github.com/sofa-framework/sofa/pull/2380 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ); - [Sofa.Helper_test] ""fix"" wstring unittest [#2320]( https://github.com/sofa-framework/sofa/pull/2320 ); - [Sofa.LinearAlgebra] Fix assert in CompressedRowSparseMatrix [#2347]( https://github.com/sofa-framework/sofa/pull/2347 ); - [Sofa.LinearAlgebra] Fix installation (fwd.h) [#2337]( https://github.com/sofa-framework/sofa/pull/2337 ); - [Sofa.Type, Sofa.Topology] Fix testEdgeBuffer with clang (and add constexpr default constructors) [#2357]( https://github.com/sofa-framework/sofa/pull/2357 ); - [Sofa.Type] FIX createFromRotationVEctor, the inequality was wrong [#2332]( https://github.com/sofa-framework/sofa/pull/2332 ); - [Sofa.Type] Optimize constructor with params for sofa::type::vec [#2439]( https://github.com/sofa-framework/sofa/pull/2439 ); - [SofaBaseLinearSolver] CGLinearSolver must call super init() to check required Data [#2419]( https://github.com/sofa-framework/sofa/pull/2419 ); - [SofaBaseLinearSolver] CRS explicit instantiation [#2306]( https://github.com/sofa-framework/sofa/pull/2306 ); - [SofaBaseLinearSolver] Fix compilation when enabling CRSMultiMatrixAccessor [#2456]( https://github.com/sofa-framework/sofa/pull/2456 ); - [SofaBaseLinearSolver] Fix mulTranspose for scalar types [#2331]( https://github.com/sofa-framewor",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:146444,install,installation,146444,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['installation']
Deployability,n & Simulation start. [#1173]( https://github.com/sofa-framework/sofa/pull/1173 ); - **[SofaKernel]** Add option in StiffSpringFF to track list of input springs [#1093]( https://github.com/sofa-framework/sofa/pull/1093 ); - **[SofaKernel]** Change several AdvancedTimer logs for a better tracking [#1094]( https://github.com/sofa-framework/sofa/pull/1094 ); - **[SofaKernel]** Consistent SofaFramework modules [#1200]( https://github.com/sofa-framework/sofa/pull/1200 ); - **[SofaKernel]** Make componentState a real data field [#1168]( https://github.com/sofa-framework/sofa/pull/1168 ); - [SofaMiscForceField] Use doUpdateInternal API in MeshMatrixMass [#1151]( https://github.com/sofa-framework/sofa/pull/1151 ); - [SofaQtQuick] Pass extra command-line arguments for python scenes in a more high-level function call [#992]( https://github.com/sofa-framework/sofa/pull/992 ); - [SofaSphFluid] Add sprite-based point render [#1194]( https://github.com/sofa-framework/sofa/pull/1194 ); - [SofaSphFluid] Update rendering & other [#1215]( https://github.com/sofa-framework/sofa/pull/1215 ). **Plugins / Projects**; - [runSofa] Fix DataWidget display Speicherleck and long loading [#1181]( https://github.com/sofa-framework/sofa/pull/1181 ). **Examples / Scenes**; - [Examples] Add some mesh and PR1000 demo scene [#1112]( https://github.com/sofa-framework/sofa/pull/1112 ). ### Bug Fixes. **Architecture**; - [CMake]**[SofaFramework]** Remove FFMPEG_exec target from the dependencies of SofaFramework [#1177]( https://github.com/sofa-framework/sofa/pull/1177 ); - [CMake] FIX Eigen finding [#1175]( https://github.com/sofa-framework/sofa/pull/1175 ); - [CMake] FIX unknown compiler option on VS2015 [#1192]( https://github.com/sofa-framework/sofa/pull/1192 ); - [SofaMacros] FIX default module version [#1123]( https://github.com/sofa-framework/sofa/pull/1123 ); - [SofaMacros] FIX sofa_set_install_relocatable escaped chars [#1154]( https://github.com/sofa-framework/sofa/pull/1154 ). **Modules**; - [A,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:247724,Update,Update,247724,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"nGLVisual: Fix Spotlight source drawing + add some log for ShaderElement; - OmniDriverEmu plugin and examples; - scene test: ICPRegistration_ShapeMatching.scn is ignored; - Vec: 'normalized' function constness; - SpotLight: direction normalization; - ProjectionTo{Plane,Line}MultiMapping Jacobian insertion order; - SofaGeneralRigid: bug in ArticulatedSystemMapping; - SofaEngine: BoxROI instantiation; - SofaBaseCollision: Fix computeBBox in SPhereModel; - bug in MechanicalPickParticlesWithTagsVisitor input tags were not respected; - SofaOpenGLVisual: fix light's modelview matrix computation (lookat data was not checked); - StateMask method clean needs to resize m_size to 0. - [Test-CI]; - fix crash UncoupledConstraintCorrection_test; - fix SofaComponentBase_test on windows; - fix Mapping and MultiMapping tests; - fix MultiMapping::applyDJT test; - fix {Difference,Addition}Mapping when a pair is composed of the same index.; - fix tested scenes selection; - removed OptiTrackNatNet from ""options"" configurations; - ignore some OptiTrackNatNet scenes testing. - [SofaPython]; - fix GridTopology type on the python side; - fix OBJ loader; - fix loading a scene from a .py in a Node independently from the awful Simulation singleton.; - fix SofaPython.Tools.localPath in some situations; - fix BaseContext_getObjects so it can select objects from a base class name (and adding an example); - quaternion: fix singularity in from_line function. - [Flexible]; - fix case sensitive issues; - API: fix a bug with colors when reloading a scene; - fix the bulk factor in NeoHookean material; - fix NeoHookean traction test; - testing detachFromGraph; - BaseDeformationMapping: remove debug message, fix usage of sout (no need for testing f_printLog); - fix test compilation w/o image plugin; - fix loadVisual; - fix bug in topologygausspointsampler (computation of volume integrals for irregular hexa). - [Compliant]; - CompliantImplicitSolver: fix Lagrange multipliers clear when reseting the simulat",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:358739,configurat,configurations,358739,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['configurat'],['configurations']
Deployability,"nagerSecondaryPass; - Add OglTexturePointer; - adding SquareDistanceMapping to compute the square distance between 2 points.; - add OrderIndependentTransparency Manager (using two passes instead of three); - add OglOITShader to customize the shading of transparent surfaces; - ProjectionToTargetLineMapping and ProjectionToTargetPlaneMapping with precomputed constant Jacobians and using last origin and direction/normal for extra points; - Adding a timer embedding all the animation loop step but would need further doc.; - display of indices has been improved; - Add an example using cloth springs: examples/Components/forcefield/ClothBendingForceField.py; - Improving a few examples by making the embedding nodes as non pickable (tag 'NoPicking'); - Add BaseNode::getRootPath; - Improving performances: - Message::class is now an enum; - Updated draw method of PointSetGeometryAlgorithms, QuadSetGeometryAlgorithms, TetrahedronSetGeometryAlgorithms, TriangleSetGeometryAlgorithms; - Add Blender-like orientation helper in the bottom-left part of the screen while drawing bbox (QtGlViewer); - Add Blender-like orientation helper in the bottom-left part of the screen while drawing bbox (QtViewer); - add of GUIEvent into the STLExporter; - Make the code compatible with ClipPlane (using ClipVertex in shaders, which is deprecated for GLSL > 1.4); - Optimize the callto C-PYTHON side when the functions are not implemented in the python side; - Add color attribute support (and default color if not present in the node); - Reactivate color map in TetraFEM, as it does not depend on SofaOpenGLVisual anymore; - indices data field for UniformMass; - analyze matrix only if number of non-zeroes has changed and no iterative refinement; - update the applyConstraint methods according to the actual API; - Adding ProjectionTo{Plane|Line}MultiMapping where the plane (origin,normal) and the line (origin,direction) are dofs; - add MeshBoundaryROI with an example. - [Tests]; - for (multi)Mapping test, che",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:345857,Update,Updated,345857,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Updated']
Deployability,"name}""); endforeach(); endif(). ## Custom; if(EXISTS ""${CMAKE_CURRENT_LIST_DIR}/custom.cmake""); message(""Adding custom file""); include( ""custom.cmake"" ); endif(). ## IDE directories; # Sofa.Component; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES ""Sofa.Component.*"" AND NOT target MATCHES "".*_relocatable_install""); set_target_properties(${target} PROPERTIES FOLDER Sofa.Component) # IDE folder; endif(); endforeach(); # Testing; if(TARGET Sofa.Testing) # No need to search for test targets if tests are not enabled; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES "".*_test"" OR target MATCHES "".*_simutest""); set_target_properties(${target} PROPERTIES FOLDER Testing) # IDE folder; endif(); endforeach(); endif(); ##. ## Install configuration; #install(FILES ""${CMAKE_BINARY_DIR}/CMakeCache.txt"" DESTINATION . COMPONENT headers); install(FILES ""${CMAKE_SOURCE_DIR}/README.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/CHANGELOG.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/LICENSE-LGPL.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/Authors.txt"" DESTINATION . COMPONENT applications). option(SOFA_INSTALL_RESOURCES_FILES ""Copy resources files (etc/, share/, examples/, tools/sofa-launcher/) when installing"" ON); ## Install resource files; if(SOFA_INSTALL_RESOURCES_FILES); install(DIRECTORY share/ DESTINATION share/sofa COMPONENT resources); install(DIRECTORY examples/ DESTINATION share/sofa/examples COMPONENT resources); install(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about plugins, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#plugin""); install(DIRECTORY ${CMAKE_BINARY_DIR}/plugins/ DESTINATION p",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:10153,install,install,10153,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['install'],['install']
Deployability,"ndencies that can be fetched: cxxopts, gtest, metis, CImg"" ON). # Option to accelerate the compilation; # see https://cmake.org/cmake/help/v3.16/command/target_precompile_headers.html; # and https://cmake.org/cmake/help/v3.16/prop_tgt/DISABLE_PRECOMPILE_HEADERS.html. # https://cmake.org/cmake/help/latest/policy/CMP0127.html; if (${CMAKE_VERSION} VERSION_GREATER_EQUAL 3.22); cmake_policy(SET CMP0127 NEW); endif(); cmake_dependent_option(SOFA_BUILD_WITH_PCH_ENABLED ; ""Compile SOFA using precompiled header (to accelerate the build process)"" OFF; ""CMAKE_VERSION VERSION_GREATER_EQUAL 3.16"" OFF); if(SOFA_BUILD_WITH_PCH_ENABLED); message(""-- Precompiled headers: enabled (SOFA_BUILD_WITH_PCH_ENABLED is ON).""); else(); message(""-- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).""); set(DISABLE_PRECOMPILE_HEADERS ON); endif(). ## Change default install component and prefix; set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME applications); if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT); set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/install CACHE PATH ""Install path prefix, prepended onto install directories."" FORCE); endif(); if(APPLE AND SOFA_BUILD_APP_BUNDLE); set(SOFA_BUILD_RELEASE_PACKAGE ON); set(CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/runSofa.app/Contents/MacOS); message(""SOFA_BUILD_APP_BUNDLE = ${SOFA_BUILD_APP_BUNDLE}\n""; "" Forcing SOFA_BUILD_RELEASE_PACKAGE = ${SOFA_BUILD_RELEASE_PACKAGE}\n""; "" Forcing CMAKE_INSTALL_PREFIX = ${CMAKE_INSTALL_PREFIX}""; ); endif(); message(STATUS ""Install prefix: ${CMAKE_INSTALL_PREFIX}""). # Remove generated CMake files, this prevents CMake from finding packages that; # were disabled (like, unchecked in cmake-gui) after being built once.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/cmake); file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/lib/cmake); # Remove generated SofaPython configuration files, to prevent SofaPython from; # adding paths to disabled plugins.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/etc/sofa/python.d). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:2539,install,install,2539,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,4,"['Install', 'install']","['Install', 'install']"
Deployability,nearRegionsSampling: 1.61; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg2.ppm 20 50; Lloyd_iteration 2.35; Lloyd_iteration 2.32; Lloyd_iteration 2.33; Lloyd_iteration 2.38; Lloyd_iteration 2.32; Lloyd_iteration 2.32; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.36; Lloyd_iteration 2.32; Lloyd_iteration 2.32; computeUniformSampling: 59.97; computeWeights: 62.97; computeLinearRegionsSampling: 1.6; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg3.ppm 3 6; computeUniformSampling: 17.03; computeWeights: 128.26; computeLinearRegionsSampling: 2.31; updateSampleMaterialProperties: 0.17. File: scenes/steak.pscn using steak-seg3.ppm 3 10; computeUniformSampling: 17.07; computeWeights: 128.21; computeLinearRegionsSampling: 2.32; updateSampleMaterialProperties: 0.17. File: scenes/steak.pscn using steak-seg3.ppm 3 20; computeUniformSampling: 17.15; computeWeights: 128.5; computeLinearRegionsSampling: 2.3; updateSampleMaterialProperties: 0.17. File: scenes/steak.pscn using steak-seg3.ppm 3 50; computeUniformSampling: 17.13; computeWeights: 128.59; computeLinearRegionsSampling: 2.32; updateSampleMaterialProperties: 0.18. File: scenes/steak.pscn using steak-seg3.ppm 5 6; Lloyd_iteration 17.73; Lloyd_iteration 17.67; Lloyd_iteration 17.78; Lloyd_iteration 17.71; Lloyd_iteration 17.79; Lloyd_iteration 17.77; Lloyd_iteration 17.71; Lloyd_iteration 17.73; Lloyd_iteration 17.75; Lloyd_iteration 17.74; Lloyd_iteration 17.67; Lloyd_iteration 17.67; Lloyd_iteration 17.68; Lloyd_iteration 17.76; Lloyd_iteration 17.71; Lloyd_iteration 17.59; Lloyd_iteration 17.65; Lloyd_iteration 17.75; Lloyd_iteration 17.62; Lloyd_iteration 17.62; Lloyd_iteration 17.76; Lloyd_iteration 17.73; Lloyd_iteration 17.76; Lloyd_iteration 17.69; Lloyd_iteration 17.71; Lloyd_iteration 17.64; Lloyd_iteration 17.65; Lloyd_iteration 17.56; Lloyd_iteration 17.53; Lloyd_iteration 17.61; Lloyd_iteration 17.62; Lloyd_iteration 17.67; Lloyd_iterat,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:26814,update,updateSampleMaterialProperties,26814,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,"needed include [#169]( https://github.com/sofa-framework/sofa/pull/169 ); - [SofaPython]; - Macros to bind ""sequence"" types [#165]( https://github.com/sofa-framework/sofa/pull/165 ); - ModuleReload [#214]( https://github.com/sofa-framework/sofa/pull/214 ); - light module reload [#202]( https://github.com/sofa-framework/sofa/pull/202 ); - change the way createObject() handle its arguments to simplify scene writing + batch of tests [#286]( https://github.com/sofa-framework/sofa/pull/286 ); - [SofaTest]; - add Backtrace::autodump to all tests to ease debugging [#191]( https://github.com/sofa-framework/sofa/pull/191 ); - add automatic tests for updateForceMask [#209]( https://github.com/sofa-framework/sofa/pull/209 ); - add tests on PluginManager [#240]( https://github.com/sofa-framework/sofa/pull/240 ); - TestMessageHandler : new and robust implementation to connect msg_* message to test failure [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - update to use the new TestMessageHandler where msg_error generates test failures [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - add tests for TestMessageHandler [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - [SofaCUDA]; - FIX NVCC flags for debug build on Windows [#300]( https://github.com/sofa-framework/sofa/pull/300 ). ### Bug Fixes. **Modules**; - Warnings have been fixed [#229]( https://github.com/sofa-framework/sofa/pull/229 ); - [All]; - check that SofaPython is found before lauching the cmake sofa_set_python_directory command [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - use the cmake install DIRECTORY instead of FILES to preserve the files hierarchy when installing [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - fixing issue related to parsing attributes with atof/atoi [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - unify color datafield [#206]( https://github.com/sofa-framework/sofa/pull/206 ); - Fix CMakeLists bug on Sofa.ini and installedS",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:330552,update,update,330552,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,nes/steak.pscn using steak-seg.ppm 10 20; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; computeUniformSampling: 3.59; computeWeights: 4.93; computeLinearRegionsSampling: 0.12; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg.ppm 10 50; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; computeUniformSampling: 3.6; computeWeights: 4.94; computeLinearRegionsSampling: 0.13; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 20 6; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.26; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.6; computeWeights: 8.1; computeLinearRegionsSampling: 0.3; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 10; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.26; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.55; computeWeights: 8.01; computeLinearRegionsSampling: 0.28; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 20; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.27; computeUniformSampling: 6.6; computeWeights: 8.01; computeLinearRegionsSampling: 0.29; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 50; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Ll,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:3753,update,updateSampleMaterialProperties,3753,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,nicalVMultiOpVisitor.h; ${SRC_ROOT}/mechanicalvisitor/MechanicalVNormVisitor.h; ${SRC_ROOT}/mechanicalvisitor/MechanicalVOpVisitor.h; ${SRC_ROOT}/mechanicalvisitor/MechanicalVReallocVisitor.h; ${SRC_ROOT}/mechanicalvisitor/MechanicalVSizeVisitor.h; ). set(SOURCE_FILES; ${SRC_ROOT}/AnimateBeginEvent.cpp; ${SRC_ROOT}/AnimateEndEvent.cpp; ${SRC_ROOT}/AnimateVisitor.cpp; ${SRC_ROOT}/BaseMechanicalVisitor.cpp; ${SRC_ROOT}/BehaviorUpdatePositionVisitor.cpp; ${SRC_ROOT}/CleanupVisitor.cpp; ${SRC_ROOT}/CollisionAnimationLoop.cpp; ${SRC_ROOT}/CollisionBeginEvent.cpp; ${SRC_ROOT}/CollisionEndEvent.cpp; ${SRC_ROOT}/CollisionVisitor.cpp; ${SRC_ROOT}/CpuTask.cpp; ${SRC_ROOT}/CpuTaskStatus.cpp; ${SRC_ROOT}/DeactivatedNodeVisitor.cpp; ${SRC_ROOT}/DefaultAnimationLoop.cpp; ${SRC_ROOT}/DefaultVisualManagerLoop.cpp; ${SRC_ROOT}/DeleteVisitor.cpp; ${SRC_ROOT}/ExportDotVisitor.cpp; ${SRC_ROOT}/ExportGnuplotVisitor.cpp; ${SRC_ROOT}/ExportVisualModelOBJVisitor.cpp; ${SRC_ROOT}/InitVisitor.cpp; ${SRC_ROOT}/IntegrateBeginEvent.cpp; ${SRC_ROOT}/IntegrateEndEvent.cpp; ${SRC_ROOT}/MainTaskSchedulerRegistry.cpp; ${SRC_ROOT}/MainTaskSchedulerFactory.cpp; ${SRC_ROOT}/MechanicalOperations.cpp; ${SRC_ROOT}/MechanicalVPrintVisitor.cpp; ${SRC_ROOT}/MechanicalVisitor.cpp; ${SRC_ROOT}/MutationListener.cpp; ${SRC_ROOT}/Node.cpp; ${SRC_ROOT}/PauseEvent.cpp; ${SRC_ROOT}/PipelineImpl.cpp; ${SRC_ROOT}/PositionEvent.cpp; ${SRC_ROOT}/PrintVisitor.cpp; ${SRC_ROOT}/PropagateEventVisitor.cpp; ${SRC_ROOT}/RequiredPlugin.cpp; ${SRC_ROOT}/ResetVisitor.cpp; ${SRC_ROOT}/SceneLoaderFactory.cpp; ${SRC_ROOT}/SceneCheck.cpp; ${SRC_ROOT}/SceneCheckRegistry.cpp; ${SRC_ROOT}/SceneCheckMainRegistry.cpp; ${SRC_ROOT}/Simulation.cpp; ${SRC_ROOT}/SolveVisitor.cpp; ${SRC_ROOT}/StateChangeVisitor.cpp; ${SRC_ROOT}/TopologyChangeVisitor.cpp; ${SRC_ROOT}/UpdateBoundingBoxVisitor.cpp; ${SRC_ROOT}/UpdateContextVisitor.cpp; ${SRC_ROOT}/UpdateInternalDataVisitor.cpp; ${SRC_ROOT}/UpdateLinksVisitor.cpp; ${SRC_ROOT}/UpdateMappingEndEvent.c,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:7305,Integrat,IntegrateBeginEvent,7305,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Integrat'],['IntegrateBeginEvent']
Deployability,"nstall(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about plugins, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#plugin""); install(DIRECTORY ${CMAKE_BINARY_DIR}/plugins/ DESTINATION plugins COMPONENT resources); file(WRITE ""${CMAKE_BINARY_DIR}/collections/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about collections, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#collection""); install(DIRECTORY ${CMAKE_BINARY_DIR}/collections/ DESTINATION collections COMPONENT resources). sofa_install_git_infos(${PROJECT_NAME} ${CMAKE_CURRENT_SOURCE_DIR}). # Post-install scripts (must be the last add_subdirectory); add_subdirectory(tools/postinstall-fixup). if(SOFA_BUILD_RELEASE_PACKAGE); #######################; # CPack configuration #; #######################. ################; # Package config; include(CPackComponent); if(WIN32 AND ${CMAKE_VERSION} VERSION_LESS ""3.13.0""); include(CPackNSIS); endif(); include(CPackIFW); set(CPACK_PACKAGE_VERSION ""${Sofa_VERSION}""); set(CPACK_PACKAGE_NAME ""SOFA v${CPACK_PACKAGE_VERSION}""); set(CPACK_PACKAGE_VENDOR ""The SOFA Team""); set(CPACK_PACKAGE_CONTACT ""contact@sofa-framework.org""); set(CPACK_PACKAGE_DESCRIPTION ""Real-time multi-physics simulation with an emphasis on medical simulation.""); set(CPACK_PACKAGE_DESCRIPTION_SUMMARY ""Real-time multi-physics simulation with an emphasis on medical simulation.""); set(CPACK_PACKAGE_EXECUTABLES ""runSofa"" ""runSofa""); set(CPACK_PACKAGE_DESCRIPTION_FILE ""${CMAKE_SOURCE_DIR}/README.md""); set(CPACK_PACKAGE_HOMEPAGE_URL ""https://www.sofa-framework.org""); set(CPACK_PACKAGE_FILE_NAME ""SOFA_v${CPACK_PACKAGE_VERSION}""); if(WIN32); set(CPACK_PACKAGE_ICON ""${CMAKE_SOURCE_DIR}/share/icons\\\\SOFA.png""); set(CPACK_PACKAGE_INS",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:11774,configurat,configuration,11774,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['configurat'],['configuration']
Deployability,nt [#2037]( https://github.com/sofa-framework/sofa/pull/2037 ). **Modules**; - [SofaBoundaryCondition] Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - [SofaGuiQt] Fix Expand node [#2069]( https://github.com/sofa-framework/sofa/pull/2069 ); - **[SofaHelper]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - [SofaMiscCollision] Fix config.in cmake file for export [#2052]( https://github.com/sofa-framework/sofa/pull/2052 ); - **[SofaSimulationCore]** Broken URL [#2011]( https://github.com/sofa-framework/sofa/pull/2011 ). **Plugins / Projects**; - [Geomagic] Fix Geomagic plugin compilation [#2033]( https://github.com/sofa-framework/sofa/pull/2033 ). ____________________________________________________________. ## [v20.12.02]( https://github.com/sofa-framework/sofa/tree/v20.12.02 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.01...v20.12.02 ). ### Bug Fixes; **Architecture**; - [CMake] FIX resources and translations install on Windows [#1949]( https://github.com/sofa-framework/sofa/pull/1949 ). **Modules**; - [SofaGeneralExplicitOdeSolver] Fix typo in CentralDifferenceSolver description [#1894]( https://github.com/sofa-framework/sofa/pull/1894 ); - [SofaGuiQt] Fix RealGUI: QDesktopWidget header missing for Qt < 5.11 [#1904]( https://github.com/sofa-framework/sofa/pull/1904 ); - [SofaGuiQt] FIX segfault due to qFatal in GenGraphForm [#1948]( https://github.com/sofa-framework/sofa/pull/1948 ); - **[SofaHelper]** Fix out of bounds error [#1868]( https://github.com/sofa-framework/sofa/pull/1868 ). **Plugins / Projects**; - [SofaCUDA] change the setTopology method signature [#1843]( https://github.com/sofa-framework/sofa/pull/1843 ). **Examples / Scenes**; - [examples] Add missing RequiredPlugin [#1895]( https://github.com/sofa-framework/sofa/pull/1895 ). ____________________________________________________________. ## [v20.12.01]( https://github.com/sofa-framework/sofa/tree/v20.12.01 ),MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:209520,install,install,209520,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,nt.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearVelocityProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearVelocityProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/OscillatorProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/OscillatorProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ParabolicProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ParabolicProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialFixedProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialFixedProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialLinearMovementProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialLinearMovementProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PatchTestMovementProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PatchTestMovementProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PositionBasedDynamicsProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PositionBasedDynamicsProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/SkeletalMotionProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/SkeletalMotionProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LineProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LineProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PlaneProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PlaneProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PointProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PointProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/DirectionProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Projective/CMakeLists.txt:5673,Patch,PatchTestMovementProjectiveConstraint,5673,Sofa/Component/Constraint/Projective/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Projective/CMakeLists.txt,1,['Patch'],['PatchTestMovementProjectiveConstraint']
Deployability,"o contains the number of message eg: ""Messages(5)""; - The Graph view is now displaying the type of message they contains.; - [runSofa]; - Autoload plugins, described in the user-custom file 'plugin_list.conf' if present; else 'plugin_list.conf.default' containing all compiled plugins and generated automatically by CMake. **For developpers**; - Add a Logger component that stores the history of messages into each sofa component.; - Implements new methods to write on-liner's conditional message:; msg_info_when(level<3) << ""This is a conditional info message""; - Implement an implicit version of each of the msg_* API allowing to write; msg_info() << ""Hello"" in place for msg_info(this) << Hello""; - CImgPlugin : creation of a dedicated plugin for image loading based on CImg [#185]( https://github.com/sofa-framework/sofa/pull/185 ); - Remove deprecated miniBoost dependency [#273]( https://github.com/sofa-framework/sofa/pull/273 ). ### Improvements. **Modules**; - [All]; - update containers to support c++x11 features [#113]( https://github.com/sofa-framework/sofa/pull/113 ); - speed up spheres rendering + code cleaning [#170]( https://github.com/sofa-framework/sofa/pull/170 ); - updates externs/gtest to a fresh checkout [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - auto-init/cleanup libraries [#168]( https://github.com/sofa-framework/sofa/pull/168 ); - Improve and clean msg_api and logging of message (#190, #255, #275). See [documentation](https://www.sofa-framework.org/community/doc/programming-with-sofa/logger/) for more information.; - Add CMake option to limit cores used to build specific targets [#254]( https://github.com/sofa-framework/sofa/pull/254 ); - Fix rgbacolor parsing [#305]( https://github.com/sofa-framework/sofa/pull/305 ); - CMake: installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - [SofaKernel]; - Update the RichConsoleStyleMessageFormatter [#126]( https://github.com/sofa-framework/s",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:325582,update,update,325582,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,"o delay the merge and avoid CI overflow.; - **Control the builds**: Dashboard > Details in the pull request checks.; - Merge method: **prefer ""merge""** or ""squash"" over ""rebase"". Remember that:. - You can **add commits** in a pull request: see [GitHub documentation](https://help.github.com/articles/committing-changes-to-a-pull-request-branch-created-from-a-fork/).; - If the pull request contains out of scope commits (from a previous merge with master), **consider rebasing it**. <center><figure><img src=""https://www.sofa-framework.org/wp-content/uploads/2022/06/GitHub-PR-review-workflow.png"" alt=""PullRequestProcess"" style=""width:75%""><figcaption align = ""center""><b>Workflow of a PR review</b></figcaption></figure></center>. For more information on forks and pull request, check out [this GitHub guide](https://guides.github.com/activities/forking/). ### SOFA Developer Certificate Of Origin (DCO). SOFA is using the [mechanism of the linux project](https://www.kernel.org/doc/html/latest/process/submitting-patches.html#sign-your-work-the-developer-s-certificate-of-origin) to track and secure all issues related to copyrights: the Developper Certificate of Origin (DCO). If you are contributing code or documentation to the SOFA project, and using the git signed-off-by mechanism, you are agreeing to this certificate. This DCO essentially means that:. - you offer the changes under the same license agreement as the project, and; - you have the right to do that,; - you did not steal somebody else’s work. The original DCO is available online : [http://developercertificate.org](http://developercertificate.org). ```; Developer Certificate of Origin; Version 1.1. Copyright (C) 2004, 2006 The Linux Foundation and its contributors.; 1 Letterman Drive; Suite D4700; San Francisco, CA, 94129. Everyone is permitted to copy and distribute verbatim copies of this; license document, but changing it is not allowed. Developer's Certificate of Origin 1.1. By making a contribution to this project",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md:7702,patch,patches,7702,CONTRIBUTING.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CONTRIBUTING.md,1,['patch'],['patches']
Deployability,"ocumentation. ColladaSceneLoader Plugin Documentation. 		A skinned and bones animated character walking. Introduction; How to use; Examples; Intellectual property and rights. Introduction; This page explains how to use the ColladaSceneLoader plugin to load collada scene (.dae) into Sofa. What is Collada ?.       COLLADA defines an XML-based schema to make it easy to transport 3D assets between applications ; - enabling diverse 3D authoring and content processing tools to be combined into a production pipeline. ; The intermediate language provides comprehensive encoding of visual scenes including: geometry, shaders and effects, physics, animation, kinematics, ; and even multiple version representations of the same asset.COLLADA FX enables leading 3D authoring tools to work effectively together to create shader ; and effects applications and assets to be authored and packaged using OpenGL Shading Language, Cg, CgFX, and DirectX FX. How to use.       To use this plugin, you just have to go in you sofa configuration file (sofa-local.prf or if you have not this file, use sofa-default.prf in the sofa root directory) and uncomment or add this following line :. DEFINES += SOFA_HAVE_PLUGIN_COLLADA. If you are a Visual Studio user you must generate sofa projects again using the corresponding batch file (Project VC*.bat).       Build the ColladaSceneLoader plugin and load the resulting dynamic library with the Sofa plugin manager available in runSofa or in the sofa Modeler (in the main toolbar : Edit / Plugin Manager...).; You are now able to use the new SceneColladaLoader component. In the Modeler, you can find it in the Loader category. To do so, drag and drop the component into your scene graph and fill up the data ""filename"" with ; the path of the collada scene you want to load. If you launch runSofa with your scene you will see your SceneColladaLoader component and a new generated node below which contains the whole collada scene.       For every skinned mesh, the SceneCo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:1043,configurat,configuration,1043,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['configurat'],['configuration']
Deployability,"ofa-framework/sofa/pull/1658 ); - [SofaGUI] Fix Cmake files for out-of-tree compilation [#1570]( https://github.com/sofa-framework/sofa/pull/1570 ); - [SofaGeneralAnimationLoop] Fix mechanical matrix mapper [#1587]( https://github.com/sofa-framework/sofa/pull/1587 ); - [SofaGeneralEngine] Fix BarycentricMapperEngine parse() function [#1516]( https://github.com/sofa-framework/sofa/pull/1516 ); - [SofaGeneralLoader] fix GIDMeshLoader and add example [#1554]( https://github.com/sofa-framework/sofa/pull/1554 ); - [SofaHelper/image] Fix unit tests [#1585]( https://github.com/sofa-framework/sofa/pull/1585 ); - **[SofaHelper]** Add SOFA/bin to SOFA_PLUGIN_PATH [#1718]( https://github.com/sofa-framework/sofa/pull/1718 ); - **[SofaHelper]** Link necessary Boost macro with SofaHelper (for Windows) [#1578]( https://github.com/sofa-framework/sofa/pull/1578 ); - **[SofaKernel]**[SofaGuiQt] Qt viewer with intel drivers [#1690]( https://github.com/sofa-framework/sofa/pull/1690 ); - **[SofaKernel]** Add updateOnTransformChange update callback on MeshLoader. [#1459]( https://github.com/sofa-framework/sofa/pull/1459 ); - **[SofaKernel]** Data file repository now looks into the SOFA install directory [#1656]( https://github.com/sofa-framework/sofa/pull/1656 ); - **[SofaKernel]** Improve check for already registered plugins [#1472]( https://github.com/sofa-framework/sofa/pull/1472 ); - **[SofaKernel]** In DataFileName, the name FILE used in the PathType enum could be ambigous [#1465]( https://github.com/sofa-framework/sofa/pull/1465 ); - **[SofaKernel]** 🐛 Break link when passing a nullptr to setLinkedBase [#1479]( https://github.com/sofa-framework/sofa/pull/1479 ); - **[SofaKernel]**[SofaGeneralRigid] Minor fixes in ArticulatedSystemMapping and JointSpringForceField [#1448]( https://github.com/sofa-framework/sofa/pull/1448 ); - **[SofaKernel]** Implement an update mechanism on component: RequiredPlugin [#1458]( https://github.com/sofa-framework/sofa/pull/1458 ); - **[SofaKernel]** Swi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:221798,update,updateOnTransformChange,221798,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['update'],"['update', 'updateOnTransformChange']"
Deployability,"ofa-framework/sofa/pull/457 ); - [SofaOpenglVisual] OglSceneFrame; - [SofaUserInteraction] ArticulatedHierarchyBVHController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] ArticulatedHierarchyController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] DisabledContact [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] EdgeSetController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] GraspingManager [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] InterpolationController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] MechanicalStateControllerOmni [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - [SofaUserInteraction] NodeToggleController [#457]( https://github.com/sofa-framework/sofa/pull/457 ). ### Breaking. **Modules**; - [SofaConstraint] Update FreeMotionAnimationLoop so that it can compute a linearised version of the constraint force. [#459]( https://github.com/sofa-framework/sofa/pull/459 ); - **[SofaCore]** Update FreeMotionAnimationLoop so that it can compute a linearised version of the constraint force. [#459]( https://github.com/sofa-framework/sofa/pull/459 ); - **[SofaHelper]** Unifying the way we report file related errors [#669]( https://github.com/sofa-framework/sofa/pull/669 ). ### Improvements. **Architecture**; - [CMake] ADD external projects handling [#649]( https://github.com/sofa-framework/sofa/pull/649 ); - [CMake] ADD the CMAKE_WARN_DEPRECATED option in SOFA [#662]( https://github.com/sofa-framework/sofa/pull/662 ); - [CMake] Improve SOFA installation and packaging [#635]( https://github.com/sofa-framework/sofa/pull/635 ); - [CMake] Cleans for packaging [#789]( https://github.com/sofa-framework/sofa/pull/789 ). **Modules**; - [All] Refactoring in Camera, BackgroundSetting and Light [#676]( https://github.com/sofa-framework/sofa/pull/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:293199,Update,Update,293199,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"ofa.Testing) # No need to search for test targets if tests are not enabled; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES "".*_test"" OR target MATCHES "".*_simutest""); set_target_properties(${target} PROPERTIES FOLDER Testing) # IDE folder; endif(); endforeach(); endif(); ##. ## Install configuration; #install(FILES ""${CMAKE_BINARY_DIR}/CMakeCache.txt"" DESTINATION . COMPONENT headers); install(FILES ""${CMAKE_SOURCE_DIR}/README.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/CHANGELOG.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/LICENSE-LGPL.md"" DESTINATION . COMPONENT applications); install(FILES ""${CMAKE_SOURCE_DIR}/Authors.txt"" DESTINATION . COMPONENT applications). option(SOFA_INSTALL_RESOURCES_FILES ""Copy resources files (etc/, share/, examples/, tools/sofa-launcher/) when installing"" ON); ## Install resource files; if(SOFA_INSTALL_RESOURCES_FILES); install(DIRECTORY share/ DESTINATION share/sofa COMPONENT resources); install(DIRECTORY examples/ DESTINATION share/sofa/examples COMPONENT resources); install(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about plugins, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#plugin""); install(DIRECTORY ${CMAKE_BINARY_DIR}/plugins/ DESTINATION plugins COMPONENT resources); file(WRITE ""${CMAKE_BINARY_DIR}/collections/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about collections, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#collection""); install(DIRECTORY ${CMAKE_BINARY_DIR}/collections/ DESTINATION collections COMPONENT resources). sofa_install_git_infos(${PROJECT_NAME} ${CMAKE_CURRENT_SOURCE_DIR}). # Post-install scripts (must be the ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:10530,install,installing,10530,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,5,"['Install', 'install']","['Install', 'install', 'installing']"
Deployability,"ofa/pull/1373 ); - **[SofaKernel]** Cleaner output when the creation of an object fails [#1266]( https://github.com/sofa-framework/sofa/pull/1266 ); - **[SofaSimulationCore]** Add a way to fill a multi vector from a base vector with a MechanicalOperations (mops). [#1248]( https://github.com/sofa-framework/sofa/pull/1248 ). **Plugins / Projects**; - [plugins] Fix warnings for option compilation [#1316]( https://github.com/sofa-framework/sofa/pull/1316 ); - [sofa-launcher] Change doc on sofa-launcher to markdown [#1311]( https://github.com/sofa-framework/sofa/pull/1311 ); - [SofaCUDA] Compilation without OpenGL [#1242]( https://github.com/sofa-framework/sofa/pull/1242 ). **Examples / Scenes**; - [examples] Add a scene illustrating ShewchukPCG [#1420]( https://github.com/sofa-framework/sofa/pull/1420 ). ### Bug Fixes. **Architecture**; - [CMake] Add SofaNonUniformFem to the dependencies of SofaMisc [#1384]( https://github.com/sofa-framework/sofa/pull/1384 ); - [SofaFramework/CMake] Create configuration type dir before copying lib [#1347]( https://github.com/sofa-framework/sofa/pull/1347 ); - [extlibs/gtest] Add character test in gtest paramName to allow dash character [#1265]( https://github.com/sofa-framework/sofa/pull/1265 ). **Modules**; - [All] Clean warnings for option config, again [#1339]( https://github.com/sofa-framework/sofa/pull/1339 ); - [All] Fix SOFA_LIBSUFFIX used in Debug by PluginManager [#1313]( https://github.com/sofa-framework/sofa/pull/1313 ); - [All] Overridden 'canCreate' methods should always log an error message when they fail [#1294]( https://github.com/sofa-framework/sofa/pull/1294 ); - **[SofaBaseTopology]** Fix GridTopology edge computation [#1323]( https://github.com/sofa-framework/sofa/pull/1323 ); - **[SofaBaseTopology]**[SofaExporter] Fix failing tests due to changes in topology [#1335]( https://github.com/sofa-framework/sofa/pull/1335 ); - [SofaConstraint] Fix test further to #1369 [#1386]( https://github.com/sofa-framework/sofa/pull/1",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:233616,configurat,configuration,233616,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['configurat'],['configuration']
Deployability,ofa/pull/2269 ); - [SofaConstraint] Fix BilateralInteractionConstraint's draw() [#2530]( https://github.com/sofa-framework/sofa/pull/2530 ); - [SofaConstraint] Fix crash when constraint correction is missing [#2222]( https://github.com/sofa-framework/sofa/pull/2222 ); - [SofaConstraint] fix segfault in GenericConstraintSolver [#2265]( https://github.com/sofa-framework/sofa/pull/2265 ); - [SofaCore] Fix potential memory failure on TopologyData Add method [#2459]( https://github.com/sofa-framework/sofa/pull/2459 ); - [SofaCore] FIX BaseData::getLinkPath() [#2354]( https://github.com/sofa-framework/sofa/pull/2354 ); - [SofaCore] Link: case where Data parent is invalid [#2211]( https://github.com/sofa-framework/sofa/pull/2211 ); - [SofaCore_simutest] Fix getobjects and testcomponentstate unit tests [#2326]( https://github.com/sofa-framework/sofa/pull/2326 ); - [SofaDeformable] Forgot minus sign in #2429 [#2448]( https://github.com/sofa-framework/sofa/pull/2448 ); - [SofaGUICommon] Fix configuration file for install with cxxopts [#2279]( https://github.com/sofa-framework/sofa/pull/2279 ); - [SofaGeneralEngine] Fix a typo in the PairBoxRoi.inl [#2324]( https://github.com/sofa-framework/sofa/pull/2324 ); - [SofaGeneralLoader] Make GridMeshCreator work again [#2473]( https://github.com/sofa-framework/sofa/pull/2473 ); - [SofaGuiQt] Fix graph update on startup [#2458]( https://github.com/sofa-framework/sofa/pull/2458 ); - [SofaGuiQt] Revert #2458 [#2479]( https://github.com/sofa-framework/sofa/pull/2479 ); - [SofaGuiQt] Some fixes for Qt6 [#2490]( https://github.com/sofa-framework/sofa/pull/2490 ); - [SofaGuiQt] Switch name and class name for slaves [#2371]( https://github.com/sofa-framework/sofa/pull/2371 ); - [SofaKernel] Remove ambiguous constructors from type::vector [#2270]( https://github.com/sofa-framework/sofa/pull/2270 ); - [SofaKernel] Remove the getXXXAccessor in accessor.h to keep the one in Data.h [#2278]( https://github.com/sofa-framework/sofa/pull/2278 ); - [So,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:149994,configurat,configuration,149994,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['configurat', 'install']","['configuration', 'install']"
Deployability,"ofaGeneralAnimationLoop] Fix mechanical matrix mapper [#1587]( https://github.com/sofa-framework/sofa/pull/1587 ); - [SofaGeneralEngine] Fix BarycentricMapperEngine parse() function [#1516]( https://github.com/sofa-framework/sofa/pull/1516 ); - [SofaGeneralLoader] fix GIDMeshLoader and add example [#1554]( https://github.com/sofa-framework/sofa/pull/1554 ); - [SofaHelper/image] Fix unit tests [#1585]( https://github.com/sofa-framework/sofa/pull/1585 ); - **[SofaHelper]** Add SOFA/bin to SOFA_PLUGIN_PATH [#1718]( https://github.com/sofa-framework/sofa/pull/1718 ); - **[SofaHelper]** Link necessary Boost macro with SofaHelper (for Windows) [#1578]( https://github.com/sofa-framework/sofa/pull/1578 ); - **[SofaKernel]**[SofaGuiQt] Qt viewer with intel drivers [#1690]( https://github.com/sofa-framework/sofa/pull/1690 ); - **[SofaKernel]** Add updateOnTransformChange update callback on MeshLoader. [#1459]( https://github.com/sofa-framework/sofa/pull/1459 ); - **[SofaKernel]** Data file repository now looks into the SOFA install directory [#1656]( https://github.com/sofa-framework/sofa/pull/1656 ); - **[SofaKernel]** Improve check for already registered plugins [#1472]( https://github.com/sofa-framework/sofa/pull/1472 ); - **[SofaKernel]** In DataFileName, the name FILE used in the PathType enum could be ambigous [#1465]( https://github.com/sofa-framework/sofa/pull/1465 ); - **[SofaKernel]** 🐛 Break link when passing a nullptr to setLinkedBase [#1479]( https://github.com/sofa-framework/sofa/pull/1479 ); - **[SofaKernel]**[SofaGeneralRigid] Minor fixes in ArticulatedSystemMapping and JointSpringForceField [#1448]( https://github.com/sofa-framework/sofa/pull/1448 ); - **[SofaKernel]** Implement an update mechanism on component: RequiredPlugin [#1458]( https://github.com/sofa-framework/sofa/pull/1458 ); - **[SofaKernel]** Switch to include_guard() instead of include_guard(GLOBAL) [#1467]( https://github.com/sofa-framework/sofa/pull/1467 ); - [SofaMacros] FIX RELOCATABLE_INSTAL",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:221978,install,install,221978,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,"ollisionDetection.txt). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED); sofa_find_package(CollisionOBBCapsule REQUIRED); sofa_find_package(Sofa.GL REQUIRED); # sofa_find_package(SofaVolumetricData REQUIRED); find_package(Compliant QUIET); find_package(LMConstraint QUIET). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}); find_package(Bullet REQUIRED); include_directories(${BULLET_INCLUDE_DIRS}); link_directories(${BULLET_LIBRARY_DIRS}). message(STATUS ""BULLET_INCLUDE_DIRS: ${BULLET_INCLUDE_DIRS}""); message(STATUS ""BULLET_LIBRARIES: ${BULLET_LIBRARIES}""). # HACD (present in the lib dir of bullet) is not set by FindBullet; # this should set the correct path; set(HACD_LIB """"); if(BULLET_LIBRARIES); list(GET BULLET_LIBRARIES 0 first_bullet_lib_path); get_filename_component(bullet_lib_dir ""${first_bullet_lib_path}"" DIRECTORY); if(WIN32); set(HACD_LIB ""${bullet_lib_dir}/HACD.lib""); elseif(UNIX AND NOT APPLE); # on Ubuntu, this is installed with libbullet-extras-dev; set(HACD_LIB ""${bullet_lib_dir}/libHACD.so""); else(); # MacOS ? todo; endif(); endif(). if(EXISTS ""${HACD_LIB}""); message(STATUS ""HACD_LIB: ${HACD_LIB}""); else(); message(SEND_ERROR ""Could not find HACD, necessary to build ConvexHull."" ); endif(). if(Compliant_FOUND); list(APPEND SOURCE_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullCompliantContacts.cpp); else(); message(STATUS ""BulletCollisionDetection: could not find Compliant, won't build BulletConvexHullCompliantContacts""); endif(). if(LMConstraint_FOUND); list(APPEND HEADER_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContacts.cpp); list(APPEND SOURCE_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContacts.cpp); else(); message(STATUS ""BulletCollisionDetection: could not find LMConstraint, won't build BulletConvexHullContacts""); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Component.Collisio",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt:3014,install,installed,3014,applications/plugins/BulletCollisionDetection/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt,1,['install'],['installed']
Deployability,om/sofa-framework/sofa/pull/423 ); - FIX Sofa installation failure (tries to install non-existing files) [#470]( https://github.com/sofa-framework/sofa/pull/470 ); - ADD _d suffix for debug libs [#511]( https://github.com/sofa-framework/sofa/pull/511 ); - [SofaBoundaryCondition]; - Fix LinearForceField that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - FIX Removed incorrect warning from LinearForceField [#384]( https://github.com/sofa-framework/sofa/pull/384 ); - [SofaConstraint]; - Fix error due to MacOS >= 10.11 using a relative filename [#325]( https://github.com/sofa-framework/sofa/pull/325 ); - Fix issue in GenericConstraintCorrection [#567]( https://github.com/sofa-framework/sofa/pull/567 ); - [SofaDeformable]; - Fix RestShapeSpringsForceField [#367]( https://github.com/sofa-framework/sofa/pull/367 ); - [SofaExporter]; - FIX allow to extend VTKExporter in a plugin [#309]( https://github.com/sofa-framework/sofa/pull/309 ); - [SofaGeneralEngine]; - Fix some XyzTransformMatrixEngine::update() function [#343]( https://github.com/sofa-framework/sofa/pull/343 ); - [SofaGeneralImplicitOdeSolver]; - fix test [#478]( https://github.com/sofa-framework/sofa/pull/478 ); - [SofaGraphComponent]; - Fix the test that was wrong and thus failing in SceneChecker [#405]( https://github.com/sofa-framework/sofa/pull/405 ); - Fix a crashing bug in SceneCheckAPIChange. [#479]( https://github.com/sofa-framework/sofa/pull/479 ); - FIX SceneChecker & RequiredPlugin [#563]( https://github.com/sofa-framework/sofa/pull/563 ); - [SofaGeneralObjectInteraction]; - Remove stiffness multiplicator in SpringForceField [#290]( https://github.com/sofa-framework/sofa/pull/290 ); - [SofaMiscFem]; - Fix FastTetrahedralCorotationalFF topology change [#554]( https://github.com/sofa-framework/sofa/pull/554 ); - [SofaOpenglVisual]; - Fix a bug crashing sofa when the textures cannot be loaded. [#474]( https://github.com/sofa-framework/sofa/pull/474 ). **Extlibs**; - [CImg]; - Refac,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:315575,update,update,315575,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,om/sofa-framework/sofa/pull/442 ); - Replacing afficheResult with resultToString [#473]( https://github.com/sofa-framework/sofa/pull/473 ); - FIX Remove override warnings [#520]( https://github.com/sofa-framework/sofa/pull/520 ); - Fix memory leak while capturing screenshot [#533]( https://github.com/sofa-framework/sofa/pull/533 ); - FIX Windows relative path from runSofa [#568]( https://github.com/sofa-framework/sofa/pull/568 ); - [SofaRigid]; - RigidMapping: fixed setRepartition backward compatibility [#441]( https://github.com/sofa-framework/sofa/pull/441 ); - [SofaSimulationCommon]; - Fix a minor regression introduced during the post-sprint [#476]( https://github.com/sofa-framework/sofa/pull/476 ); - [SofaSimulationCore]; - Add stop in add_mbktomatrixVisitor [#439]( https://github.com/sofa-framework/sofa/pull/439 ). **Other modules**; - [All]; - Fix warnings and strange double incrementation on iterator [#364]( https://github.com/sofa-framework/sofa/pull/364 ); - installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - Fix override warnings [#423]( https://github.com/sofa-framework/sofa/pull/423 ); - FIX Sofa installation failure (tries to install non-existing files) [#470]( https://github.com/sofa-framework/sofa/pull/470 ); - ADD _d suffix for debug libs [#511]( https://github.com/sofa-framework/sofa/pull/511 ); - [SofaBoundaryCondition]; - Fix LinearForceField that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - FIX Removed incorrect warning from LinearForceField [#384]( https://github.com/sofa-framework/sofa/pull/384 ); - [SofaConstraint]; - Fix error due to MacOS >= 10.11 using a relative filename [#325]( https://github.com/sofa-framework/sofa/pull/325 ); - Fix issue in GenericConstraintCorrection [#567]( https://github.com/sofa-framework/sofa/pull/567 ); - [SofaDeformable]; - Fix RestShapeSpringsForceField [#367]( https://github.com/sofa-framework/sofa/pull/367 ); - [SofaExporter,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:314388,install,installing,314388,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['installing']
Deployability,omputeWeights: 1.91; ComputeLinearRegionSampling: 0.32; UpdateSampleMaterialProperties: 0.02. 5F-6E:; 5 Lloyds: 0.24 0.23 0.25 0.24 0.24 (1.2 total); computeWeights: 2.91; ComputeLinearRegionSampling: 0.07; UpdateSampleMaterialProperties: 0. 5F-10E:; 5 Lloyds: 0.24 0.24 0.23 0.24 0.25 (1.18 total); computeWeights: 2.95; ComputeLinearRegionSampling: 0.07; UpdateSampleMaterialProperties: 0. 5F-20E:; 5 Lloyds: 0.23 0.24 0.23 0.24 0.23 (1.17 total); computeWeights: 2.91; ComputeLinearRegionSampling: 0.1; UpdateSampleMaterialProperties: 0.01. 5F-50E:; 5 Lloyds: 0.24 0.24 0.24 0.24 0.24 (1.2 total); computeWeights: 2.95; ComputeLinearRegionSampling: 0.32; UpdateSampleMaterialProperties: 0.01. 10F-6E:; 7 Lloyds: 0.25 0.24 0.25 0.25 0.24 0.25 0.24 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.13; UpdateSampleMaterialProperties: 0.01. 10F-10E:; 7 Lloyds: 0.25 0.25 0.24 0.25 0.24 0.25 0.24 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.12; UpdateSampleMaterialProperties: 0.02. 10F-20E:; 7 Lloyds: 0.25 0.24 0.25 0.24 0.24 0.24 0.24 (1.7 total); computeWeights: 4.93; ComputeLinearRegionSampling: 0.13; UpdateSampleMaterialProperties: 0.01. 10F-50E:; 7 Lloyds: 0.25 0.25 0.24 0.24 0.24 0.25 0.25 (1.72 total); computeWeights: 4.85; ComputeLinearRegionSampling: 0.12; UpdateSampleMaterialProperties: 0.02. 20F-6E:; 9 Lloyds: 0.27 0.27 0.28 0.27 0.27 0.27 0.27 0.27 0.27 (2.44 total); computeWeights: 7.89; ComputeLinearRegionSampling: 0.29; UpdateSampleMaterialProperties: 0.05. 20F-10E:; 9 Lloyds: 0.27 0.27 0.27 0.26 0.27 0.27 0.27 0.27 0.26 (2.41 total); computeWeights: 7.98; ComputeLinearRegionSampling: 0.27; UpdateSampleMaterialProperties: 0.06. 20F-20E:; 9 Lloyds: 0.28 0.28 0.27 0.27 0.27 0.27 0.26 0.27 0.27 (2.44 total); computeWeights: 7.88; ComputeLinearRegionSampling: 0.28; UpdateSampleMaterialProperties: 0.05. 20F-50E:; 9 Lloyds: 0.27 0.27 0.27 0.27 0.26 0.27 0.27 0.26 0.27 (2.41 total); computeWeights: 7.88; ComputeLinearRegionSampling:,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/comparison.txt:1518,Update,UpdateSampleMaterialProperties,1518,applications/projects/sofaInitTimer/output/comparison.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/comparison.txt,1,['Update'],['UpdateSampleMaterialProperties']
Deployability,on 20.51; Lloyd_iteration 20.49; Lloyd_iteration 20.48; Lloyd_iteration 20.47; Lloyd_iteration 20.52; Lloyd_iteration 20.53; Lloyd_iteration 20.52; Lloyd_iteration 20.51; Lloyd_iteration 20.5; Lloyd_iteration 20.51; Lloyd_iteration 20.53; Lloyd_iteration 20.51; Lloyd_iteration 20.52; Lloyd_iteration 20.56; Lloyd_iteration 20.55; Lloyd_iteration 20.55; Lloyd_iteration 20.53; Lloyd_iteration 20.55; Lloyd_iteration 20.54; Lloyd_iteration 20.57; Lloyd_iteration 20.54; Lloyd_iteration 20.56; Lloyd_iteration 20.55; Lloyd_iteration 20.55; Lloyd_iteration 20.53; Lloyd_iteration 20.52; Lloyd_iteration 20.57; Lloyd_iteration 20.59; Lloyd_iteration 20.53; Lloyd_iteration 20.54; Lloyd_iteration 20.58; Lloyd_iteration 20.59; Lloyd_iteration 20.57; Lloyd_iteration 20.55; Lloyd_iteration 20.54; Lloyd_iteration 20.58; Lloyd_iteration 20.56; Lloyd_iteration 20.57; Lloyd_iteration 20.53; Lloyd_iteration 20.57; Lloyd_iteration 20.52; Lloyd_iteration 20.53; Lloyd_iteration 20.56; Lloyd_iteration 20.56; Lloyd_iteration 20.57; Lloyd_iteration 20.56; Lloyd_iteration 20.57; Lloyd_iteration 20.57; Lloyd_iteration 20.57; Lloyd_iteration 20.56; Lloyd_iteration 20.57; Lloyd_iteration 20.55; Lloyd_iteration 20.54; Lloyd_iteration 20.54; Lloyd_iteration 20.56; Lloyd_iteration 20.53; Lloyd_iteration 20.5; Lloyd_iteration 20.54; Lloyd_iteration 20.52; Lloyd_iteration 20.55; Lloyd_iteration 20.56; Lloyd_iteration 20.54; Lloyd_iteration 20.56; Lloyd_iteration 20.57; Lloyd_iteration 20.54; Lloyd_iteration 20.55; Lloyd_iteration 20.58; Lloyd_iteration 20.56; Lloyd_iteration 20.55; Lloyd_iteration 20.56; Lloyd_iteration 20.56; Lloyd_iteration 20.56; Lloyd_iteration 20.53; Lloyd_iteration 20.53; Lloyd_iteration 20.69; Lloyd_iteration 20.71; Lloyd_iteration 20.72; Lloyd_iteration 20.73; Lloyd_iteration 20.73; Lloyd_iteration 20.72; Lloyd_iteration 20.75; Lloyd_iteration 20.75; computeUniformSampling: 2358.51; computeWeights: 529.06; computeLinearRegionsSampling: 12; updateSampleMaterialProperties: 1.84; ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:56682,update,updateSampleMaterialProperties,56682,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,"on [#4320](https://github.com/sofa-framework/sofa/pull/4320); - [All] Changed default plugins [#4322](https://github.com/sofa-framework/sofa/pull/4322); - [ODESolver.Backward] Convert double to SReal in NewmarkImplicitSolver [#4341](https://github.com/sofa-framework/sofa/pull/4341); - [Sofa.Testing] Do not build Sofa.Testing if SOFA_BUILD_TESTS is OFF [#4459](https://github.com/sofa-framework/sofa/pull/4459); - [Simulation.Common] Fix downstream project compilation with tinyXML2 [#4506](https://github.com/sofa-framework/sofa/pull/4506). ### Refactoring; - [Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code [#3278](https://github.com/sofa-framework/sofa/pull/3278); - [all] Rename DefaultContactManager into CollisionResponse [#3891](https://github.com/sofa-framework/sofa/pull/3891); - [FEM.Elastic] Minor refactor of buildStiffnessMatrix in TetrahedronFEMForceField [#3983](https://github.com/sofa-framework/sofa/pull/3983); - [plugins] Remove PSL files, add ExternalProjectConfig and update CMakeLists [#4047](https://github.com/sofa-framework/sofa/pull/4047); - Revert ""[Sofa.Core] minor refactoring for Data::read() to move into BaseData the reading code"" [#4068](https://github.com/sofa-framework/sofa/pull/4068); - [MechanicalLoad] Implement buildStiffnessMatrix for TaitSurfacePressureForceField [#4116](https://github.com/sofa-framework/sofa/pull/4116); - [Constraint.Lagrangian.Solver] Unify lists of constraint corrections into a MultiLink [#4117](https://github.com/sofa-framework/sofa/pull/4117); - [Constraint.Projective] Implement applyConstraint in LinearMovementConstraint [#4144](https://github.com/sofa-framework/sofa/pull/4144); - [all] Generalize the usage of ScopedAdvancedTimer [#4177](https://github.com/sofa-framework/sofa/pull/4177); - [all] Replace ScopedAdvancedTimers by macros [#4203](https://github.com/sofa-framework/sofa/pull/4203); - [LinearSolver] Remove CSparse-based linear solvers [#4258](https://github.com/sofa-framework",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:48815,update,update,48815,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,"on]; - Add unicode to string convertion and a warning message in Binding_BaseContext::pythonToSofaDataString [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add unicode to string convertion in Binding_BaseData::SetDataValuePython [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add a test [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add GIL management [#326]( https://github.com/sofa-framework/sofa/pull/326 ); - Add support for Sofa.msg_ with emitter other than a string [#335]( https://github.com/sofa-framework/sofa/pull/335 ); - Adding new features for AdvancedTimer [#360]( https://github.com/sofa-framework/sofa/pull/360 ); - forward sys.argv to python scripts [#368]( https://github.com/sofa-framework/sofa/pull/368 ); - sparse matrix aliasing scipy/eigen [#411]( https://github.com/sofa-framework/sofa/pull/411 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ). **Other**; - [Tools]; - Update astyle config [#550]( https://github.com/sofa-framework/sofa/pull/550 ). ### Bug Fixes. **Kernel modules**; - [All]; - CMake: Fix and clean boost, when using Sofa as an external lib [#421]( https://github.com/sofa-framework/sofa/pull/421 ); - Fix computeBBox functions [#527]( https://github.com/sofa-framework/sofa/pull/527 ); - CMake: FIX Boost::program_options finding in install [#618]( https://github.com/sofa-framework/sofa/pull/618 ); - [SofaBaseLinearSolver]; - FIX no step if condition on denominator is met at first step [#521]( https://github.com/sofa-framework/sofa/pull/521 ); - FIX breaking condition in CG at first step regarding threshold [#556]( https://github.com/sofa-framework/sofa/pull/556 ); - [SofaBaseMechanics]; - Make sure the mechanical object's state vectors size matches their respective argument size [#406]( https://github.com/sofa-framework/sofa/pull/406 ); - [SofaBaseTopology]; - FIX wrong clean in PointSetTopologyModifier [#380]( https://github.com/sofa-framework/sof",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:311403,Update,Update,311403,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"ork.org/about/jobs/). ## What is SOFA. SOFA is an open source framework targeted at interactive physics simulation based on the Finite Element Method (FEM), with an emphasis on medical simulation and robotics. ; It is mainly intended for the research community to help foster newer algorithms, but can also be used as an efficient prototyping tool. ; SOFA's advanced software architecture allows: ; - the creation of complex and evolving simulations by combining new algorithms with existing algorithms ; - the modification of key parameters of the simulation such as deformable behavior, ; surface representation, solvers, constraints, collision algorithm, etc. ; - the synthesis of complex models from simpler ones using a graph description; - the efficient simulation of the dynamics of interacting objects using abstract equation solvers; - the comparison of various algorithms and mathematical models. SOFA is often presented as a standalone software (runSofa) and a simulation tool, but the project is most importantly a bundle of libraries and thus can be used/integrated in any project. . SOFA provides a plugin system allowing the coupling of additional codes to add functionalities. A lot of plugins are already referenced in the [source code](https://github.com/sofa-framework/sofa/tree/master/applications/plugins), under [sofa-framework organisation](https://github.com/orgs/sofa-framework/repositories?q=plugin&sort=name), and on the [Marketplace](https://www.sofa-framework.org/applications/marketplace/). Feel free to contact us to get your own plugins referenced!. ## How to download and install. Please refer to SOFA download page: https://www.sofa-framework.org/download/. ## How to contribute. The SOFA community will be pleased to welcome you! ; Find all the ways to contribute to the project: https://www.sofa-framework.org/community/get-involved/. Before creating any issue or pull request, please read carefully [our CONTRIBUTING rules](https://github.com/sofa-framework/sofa/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md:2252,integrat,integrated,2252,README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md,1,['integrat'],['integrated']
Deployability,ork/sofa/pull/1197 ); - [All] Replace NULL by nullptr [#1179]( https://github.com/sofa-framework/sofa/pull/1179 ); - [All] Try to reduce the number of compilation warnings [#1196]( https://github.com/sofa-framework/sofa/pull/1196 ); - [SceneCreator] Pluginizing... [#1109]( https://github.com/sofa-framework/sofa/pull/1109 ); - **[SofaBaseLinearSolver]** Remove virtual function BaseLinearSolver::isMultiGroup [#1063]( https://github.com/sofa-framework/sofa/pull/1063 ); - **[SofaBaseLinearSolver][FullMatrix]** Restore fast clear function [#1128]( https://github.com/sofa-framework/sofa/pull/1128 ); - **[SofaFramework]** Remove (painful) check/warning with Rigids [#1229]( https://github.com/sofa-framework/sofa/pull/1229 ); - [SofaGUI] Split OpenGL and Qt dependency [#1121]( https://github.com/sofa-framework/sofa/pull/1121 ); - [SofaGeneralObjectInteraction] Create delegate functions in AttachConstraint [#1185]( https://github.com/sofa-framework/sofa/pull/1185 ); - [SofaGraphComponent] Update sceneCheckerAPI and deprecate MatrixMass [#1107]( https://github.com/sofa-framework/sofa/pull/1107 ); - [SofaHAPI] Fixes for HAPI [#1189]( https://github.com/sofa-framework/sofa/pull/1189 ); - **[SofaKernel]** ADD const specifier on notify methods in Node [#1169]( https://github.com/sofa-framework/sofa/pull/1169 ); - **[SofaKernel]** Remove deprecated SOFA_DEBUG macro [#1232]( https://github.com/sofa-framework/sofa/pull/1232 ); - **[SofaMeshCollision]** Clean deprecated code [#1201]( https://github.com/sofa-framework/sofa/pull/1201 ); - [SofaSphFluid] Clean code of ParticleSource and update scenes [#1190]( https://github.com/sofa-framework/sofa/pull/1190 ); - [SofaSphFluid] Reorder plugin code and scenes files [#1165]( https://github.com/sofa-framework/sofa/pull/1165 ); - [SofaSphFluid] Several clean in the plugin components [#1186]( https://github.com/sofa-framework/sofa/pull/1186 ); - [SofaSphFluid] missing namespace [#1188]( https://github.com/sofa-framework/sofa/pull/1188 ); - [So,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:255045,Update,Update,255045,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,ork/sofa/pull/4432); - [Helper] Fix new[]/delete mismatch [#4447](https://github.com/sofa-framework/sofa/pull/4447); - [CMake] Fix SOFA install [#4451](https://github.com/sofa-framework/sofa/pull/4451); - [GitHub] Fix action using github.context [#4456](https://github.com/sofa-framework/sofa/pull/4456); - [Helper] PluginManager: Check symbol (real) location and avoid calling wrong entrypoint (Mac/Linux) [#4466](https://github.com/sofa-framework/sofa/pull/4466); - [GitHUb] Fix actions using cron condition [#4468](https://github.com/sofa-framework/sofa/pull/4468); - [GitHub] Fix PR messages not properly sent [#4475](https://github.com/sofa-framework/sofa/pull/4475); - [GitHub] Use finally pull_request_target [#4476](https://github.com/sofa-framework/sofa/pull/4476); - [SofaCUDA] Fix spatial grid compilation with double [#4478](https://github.com/sofa-framework/sofa/pull/4478); - [image] Fix compilation on Windows [#4484](https://github.com/sofa-framework/sofa/pull/4484); - [Testing] Fix installation of gtest headers [#4489](https://github.com/sofa-framework/sofa/pull/4489); - [Helper] PluginManager Fix test in debug [#4491](https://github.com/sofa-framework/sofa/pull/4491); - [Topology] Fix method isQuadDeulaunayOriented and its use in splitAlongPath [#4494](https://github.com/sofa-framework/sofa/pull/4494); - [GitHub] Fix review request Discord msg [#4502](https://github.com/sofa-framework/sofa/pull/4502); - [Simulation.Core] RequiredPlugin: Avoid calling loadPlugin() twice on start-up [#4509](https://github.com/sofa-framework/sofa/pull/4509); - [Share] Remove DefaultCollisionGroupManager in the default scenes [#4521](https://github.com/sofa-framework/sofa/pull/4521); - [all] Fix some warnings [#4529](https://github.com/sofa-framework/sofa/pull/4529); - [GitHub] Fix GH Discussions Announcements for Discord [#4530](https://github.com/sofa-framework/sofa/pull/4530); - [Simulation.Core] Make TSAN pass for caduceus [#4535](https://github.com/sofa-framework/sofa/pull/4535),MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:7463,install,installation,7463,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['installation']
Deployability,oyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.24; computeUniformSampling: 3.6; computeWeights: 4.94; computeLinearRegionsSampling: 0.13; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 20 6; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.26; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.6; computeWeights: 8.1; computeLinearRegionsSampling: 0.3; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 10; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.26; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.55; computeWeights: 8.01; computeLinearRegionsSampling: 0.28; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 20; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.27; computeUniformSampling: 6.6; computeWeights: 8.01; computeLinearRegionsSampling: 0.29; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 50; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.54; computeWeights: 8.05; computeLinearRegionsSampling: 0.29; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg2.ppm 3 6; computeUniformSampling: 2.09; computeWeights: 15.09; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 10; ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:4128,update,updateSampleMaterialProperties,4128,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,oyd_iteration 18.75; Lloyd_iteration 18.71; Lloyd_iteration 18.71; Lloyd_iteration 18.76; Lloyd_iteration 18.76; Lloyd_iteration 18.78; Lloyd_iteration 18.77; Lloyd_iteration 18.77; Lloyd_iteration 18.74; Lloyd_iteration 18.73; Lloyd_iteration 18.7; Lloyd_iteration 18.72; Lloyd_iteration 18.76; Lloyd_iteration 18.77; Lloyd_iteration 18.76; Lloyd_iteration 18.77; Lloyd_iteration 18.76; Lloyd_iteration 18.75; Lloyd_iteration 18.68; Lloyd_iteration 18.75; Lloyd_iteration 18.75; Lloyd_iteration 18.76; Lloyd_iteration 18.77; Lloyd_iteration 18.76; Lloyd_iteration 18.77; Lloyd_iteration 18.74; Lloyd_iteration 18.7; Lloyd_iteration 18.73; Lloyd_iteration 18.75; Lloyd_iteration 18.77; Lloyd_iteration 18.75; Lloyd_iteration 18.78; Lloyd_iteration 18.76; Lloyd_iteration 18.73; Lloyd_iteration 18.73; Lloyd_iteration 18.7; Lloyd_iteration 18.76; Lloyd_iteration 18.73; Lloyd_iteration 18.78; computeUniformSampling: 1997.36; computeWeights: 332.65; computeLinearRegionsSampling: 6.65; updateSampleMaterialProperties: 0.71. File: scenes/steak.pscn using steak-seg3.ppm 20 6; Lloyd_iteration 21.04; Lloyd_iteration 20.8; Lloyd_iteration 20.75; Lloyd_iteration 20.67; Lloyd_iteration 20.68; Lloyd_iteration 20.62; Lloyd_iteration 20.63; Lloyd_iteration 20.68; Lloyd_iteration 20.68; Lloyd_iteration 20.72; Lloyd_iteration 20.54; Lloyd_iteration 20.53; Lloyd_iteration 20.57; Lloyd_iteration 20.59; Lloyd_iteration 20.57; Lloyd_iteration 20.57; Lloyd_iteration 20.56; Lloyd_iteration 20.56; Lloyd_iteration 20.54; Lloyd_iteration 20.59; Lloyd_iteration 20.55; Lloyd_iteration 20.61; Lloyd_iteration 20.65; Lloyd_iteration 20.62; Lloyd_iteration 20.64; Lloyd_iteration 20.65; Lloyd_iteration 20.6; Lloyd_iteration 20.66; Lloyd_iteration 20.58; Lloyd_iteration 20.61; Lloyd_iteration 20.59; Lloyd_iteration 20.62; Lloyd_iteration 20.66; Lloyd_iteration 20.63; Lloyd_iteration 20.61; Lloyd_iteration 20.6; Lloyd_iteration 20.61; Lloyd_iteration 20.67; Lloyd_iteration 20.68; Lloyd_iteration 20.67; Lloyd_ite,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:46779,update,updateSampleMaterialProperties,46779,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,oyd_iteration 18.78; Lloyd_iteration 18.82; Lloyd_iteration 18.81; Lloyd_iteration 18.83; Lloyd_iteration 18.8; Lloyd_iteration 18.87; Lloyd_iteration 18.86; Lloyd_iteration 18.82; Lloyd_iteration 18.79; Lloyd_iteration 18.79; Lloyd_iteration 18.78; Lloyd_iteration 18.76; Lloyd_iteration 18.79; Lloyd_iteration 18.79; Lloyd_iteration 18.8; Lloyd_iteration 18.81; Lloyd_iteration 18.82; Lloyd_iteration 18.74; Lloyd_iteration 18.77; Lloyd_iteration 18.81; Lloyd_iteration 18.79; Lloyd_iteration 18.77; Lloyd_iteration 18.83; Lloyd_iteration 18.79; Lloyd_iteration 18.79; Lloyd_iteration 18.76; Lloyd_iteration 18.72; Lloyd_iteration 18.77; Lloyd_iteration 18.79; Lloyd_iteration 18.81; Lloyd_iteration 18.82; Lloyd_iteration 18.79; Lloyd_iteration 18.83; Lloyd_iteration 18.77; Lloyd_iteration 18.76; Lloyd_iteration 18.75; Lloyd_iteration 18.76; Lloyd_iteration 18.85; Lloyd_iteration 18.84; computeUniformSampling: 2003.83; computeWeights: 333.2; computeLinearRegionsSampling: 6.56; updateSampleMaterialProperties: 0.71. File: scenes/steak.pscn using steak-seg3.ppm 10 50; Lloyd_iteration 18.99; Lloyd_iteration 18.76; Lloyd_iteration 18.72; Lloyd_iteration 18.69; Lloyd_iteration 18.69; Lloyd_iteration 18.73; Lloyd_iteration 18.78; Lloyd_iteration 18.82; Lloyd_iteration 18.8; Lloyd_iteration 18.8; Lloyd_iteration 18.81; Lloyd_iteration 18.8; Lloyd_iteration 18.74; Lloyd_iteration 18.79; Lloyd_iteration 18.81; Lloyd_iteration 18.81; Lloyd_iteration 18.84; Lloyd_iteration 18.81; Lloyd_iteration 18.81; Lloyd_iteration 18.83; Lloyd_iteration 18.68; Lloyd_iteration 18.68; Lloyd_iteration 18.76; Lloyd_iteration 18.72; Lloyd_iteration 18.77; Lloyd_iteration 18.75; Lloyd_iteration 18.76; Lloyd_iteration 18.76; Lloyd_iteration 18.74; Lloyd_iteration 18.7; Lloyd_iteration 18.72; Lloyd_iteration 18.76; Lloyd_iteration 18.76; Lloyd_iteration 18.78; Lloyd_iteration 18.75; Lloyd_iteration 18.75; Lloyd_iteration 18.74; Lloyd_iteration 18.71; Lloyd_iteration 18.71; Lloyd_iteration 18.75; Lloyd_ite,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:44305,update,updateSampleMaterialProperties,44305,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,oyd_iteration 2.05; Lloyd_iteration 2.05; Lloyd_iteration 2.09; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.07; Lloyd_iteration 2.1; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.04; Lloyd_iteration 2.09; Lloyd_iteration 2.08; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.07; Lloyd_iteration 2.09; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.11; Lloyd_iteration 2.04; Lloyd_iteration 2.05; Lloyd_iteration 2.04; Lloyd_iteration 2.06; Lloyd_iteration 2.1; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.04; Lloyd_iteration 2.06; Lloyd_iteration 2.1; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.09; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.07; computeUniformSampling: 210.47; computeWeights: 24; computeLinearRegionsSampling: 0.45; updateSampleMaterialProperties: 0.04. File: scenes/steak.pscn using steak-seg2.ppm 5 10; Lloyd_iteration 2.04; Lloyd_iteration 2.03; Lloyd_iteration 2.03; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.02; Lloyd_iteration 2.04; Lloyd_iteration 2.03; Lloyd_iteration 2.07; Lloyd_iteration 2.03; Lloyd_iteration 2.04; Lloyd_iteration 2.02; Lloyd_iteration 2.03; Lloyd_iteration 2.08; Lloyd_iteration 2.02; Lloyd_iteration 2.03; Lloyd_iteration 2.02; Lloyd_iteration 2.03; Lloyd_iteration 2.07; Lloyd_iteration 2.02; Lloyd_iteration 2.02; Lloyd_iteration 2.02; Lloyd_iteration 2.03; Lloyd_iteration 2.07; Lloyd_iteration 2.03; Lloyd_iteration 2.02; Lloyd_iteration 2.03; Lloyd_iteration 2.02; Lloyd_iteration 2.06; Lloyd_iteration 2.04; Lloyd_iteration 2.02; Lloyd_iteration 2.03; Lloyd_iteration 2.02; Lloyd_iteration 2.07; Lloyd_iteration 2.02; Lloyd_iteration 2.03; Lloyd_iteration 2.02; Lloyd_iteration 2.03; Lloyd_iteration 2.07; Lloyd_iteration 2.03; Lloyd_iteration 2.03; Lloyd_iteration 2.03; Ll,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:7957,update,updateSampleMaterialProperties,7957,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,"parsing; - MeshToImage: fix bresenham, be sure dmax>=1; - fix resampling of projection images, and marching cubes default parameter; - fix bug in mhd file loader; - fix rasterization when using vertex colors. ### Cleanings. - warnings were removed; - dead branches were removed; - the ‘using’ directives were removed in header files; - the repository sofa_root/modules/sofa/components has been cleaned (deprecated components removed); - clean many SOFA examples; - removing ""using helper::vector"" from VecTypes.h; - SofaQtGui: Remove qt3 remnants in ui files. - Minor clean; - clean SofaBaseCollision of OpenGL dependency; - cleaning Material::setColor; - Base: write sout as info (rather than warnings); - clean and fix RestShapeSpringsForceField draw functions; - Remove useless tests, optimize and fix potential bugs; - cleanup, precompute barycenters for tetra and hexa; - SofaBaseVisual: clean up and make consistent BaseCamera's code: clean QtViewer projection (remove OpenGL functions); - SofaBaseVisual: clean and fix BaseCamera Z clipping; - SofaOpenGLVisual: cleanup Lights (remove Glu calls and set matrices as data) + Fix typo in Camera; - quaternion to euler: not need for the hack since atan2 is used. - [SofaPython]; - clean examples; - clean the hard-binding example; - clean noPicking visitor. - [Flexible]; - remove unecessary data for Gauss points visualization; - some clean regarding openmp parallelisation; - clean metaFF; - remove unecessary apply in reinit; - clean FlexibleCorotationalMeshFEMForceField. - [Compliant]; - clean RigidJoint{Multi}Mapping. ____________________________________________________________. ## [v15.12]( https://github.com/sofa-framework/sofa/tree/v15.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v15.09...v15.12 ). ____________________________________________________________. ## [v15.09]( https://github.com/sofa-framework/sofa/tree/v15.09 ). [Full log]( https://github.com/sofa-framework/sofa/compare/release-v15.12...v15.09 ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:361896,release,release-,361896,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['release'],['release-']
Deployability,pdate badge with Discord [#4498](https://github.com/sofa-framework/sofa/pull/4498); - [Plugins] Move MeshSTEPLoader to an external repository [#4504](https://github.com/sofa-framework/sofa/pull/4504); - [Plugins] Gather external plugins configs in a same folder (proposal) [#4505](https://github.com/sofa-framework/sofa/pull/4505); - [image] Fix scene test [#4517](https://github.com/sofa-framework/sofa/pull/4517); - [GitHub] Update version of the actions/github-script [#4522](https://github.com/sofa-framework/sofa/pull/4522); - [GUI] Remove the New/Save/SaveAs menu options [#4523](https://github.com/sofa-framework/sofa/pull/4523); - [all] Additional fixes further to v24.06 lifecycle [#4540](https://github.com/sofa-framework/sofa/pull/4540); - [Core] Update NarrowPhaseDetection.cpp use prefix [#4557](https://github.com/sofa-framework/sofa/pull/4557); - [Geomagic] Update GeomagicDriver.cpp to fire error when hd.h is not found [#4576](https://github.com/sofa-framework/sofa/pull/4576); - [CMake] Upgrade cmake_minimum_required to 3.22 [#4586](https://github.com/sofa-framework/sofa/pull/4586); - [Core] Remove unused debug trace [#4590](https://github.com/sofa-framework/sofa/pull/4590); - [Core] cmake: Remove last traces of Sofa.Component.Compat [#4596](https://github.com/sofa-framework/sofa/pull/4596); - [LinearAlgebra] Remove empty source file [#4599](https://github.com/sofa-framework/sofa/pull/4599); - [Type] Clean and test MatSym [#4600](https://github.com/sofa-framework/sofa/pull/4600); - [tests] Use appropriate gtest macro [#4607](https://github.com/sofa-framework/sofa/pull/4607); - [LinearSystem] Remove development artifact [#4620](https://github.com/sofa-framework/sofa/pull/4620); - [all] Minor last fixes using SimpleApi [#4627](https://github.com/sofa-framework/sofa/pull/4627); - [SolidMechanics.FEM] Small update on container access to avoid unecessary check [#4639](https://github.com/sofa-framework/sofa/pull/4639); - [AnimationLoop] Rename Data [#4664](https://gith,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:15954,Upgrade,Upgrade,15954,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Upgrade'],['Upgrade']
Deployability,perties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 3 10; Lloyd_iteration 0.24; Lloyd_iteration 0.23; Lloyd_iteration 0.24; computeUniformSampling: 0.94; computeWeights: 1.94; computeLinearRegionsSampling: 0.04; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 3 20; Lloyd_iteration 0.23; Lloyd_iteration 0.23; Lloyd_iteration 0.24; computeUniformSampling: 0.94; computeWeights: 1.93; computeLinearRegionsSampling: 0.04; updateSampleMaterialProperties: 0. File: scenes/steak.pscn using steak-seg.ppm 3 50; Lloyd_iteration 0.24; Lloyd_iteration 0.25; Lloyd_iteration 0.23; computeUniformSampling: 0.96; computeWeights: 1.92; computeLinearRegionsSampling: 0.04; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 5 6; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.24; computeUniformSampling: 1.89; computeWeights: 2.98; computeLinearRegionsSampling: 0.05; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 5 10; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.23; computeUniformSampling: 1.88; computeWeights: 2.96; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0. File: scenes/steak.pscn using steak-seg.ppm 5 20; Lloyd_iteration 0.25; Lloyd_iteration 0.23; Lloyd_iteration 0.25; Lloyd_iteration 0.23; Lloyd_iteration 0.23; computeUniformSampling: 1.89; computeWeights: 3.03; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0. File: scenes/steak.pscn using steak-seg.ppm 5 50; Lloyd_iteration 0.23; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.24; Lloyd_iteration 0.23; computeUniformSampling: 1.88; computeWeights: 2.96; computeLinearRegionsSampling: 0.07; updateSampleMaterialProperties: 0.01. File: scenes/steak.pscn using steak-seg.ppm 10 6; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_iteration 0.25; Lloyd_ite,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:1210,update,updateSampleMaterialProperties,1210,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,"plit between SOFA_ENABLE_SIMD and SOFA_ENABLE_FAST_MATH. These 2 options will be enabled.""); set(SOFA_ENABLE_SIMD ON); set(SOFA_ENABLE_FAST_MATH ON); endif(); # SIMD flags; if(SOFA_ENABLE_SIMD); include(find_avx); MSVC_CHECK_FOR_AVX() # search for availability of AVX2 (otherwise set to AVX); if (HAVE_AVX2_EXTENSIONS); message(""Your CPU supports AVX2 SIMD. Using flags: ${AVX_FLAGS}""); elseif(HAVE_AVX_EXTENSIONS); message(""Your CPU supports only AVX SIMD. Using flags: ${AVX_FLAGS}""); else(); message(""Your CPU does not support AVX SIMD."") # SSE2 is the default when x64 is set; endif(); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""${AVX_FLAGS}""); endif(); if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/fp:fast""); endif(); endif(). # Use Release flags for MinSizeRel and RelWithDebInfo build types:; set_target_properties(${PROJECT_NAME} PROPERTIES; MAP_IMPORTED_CONFIG_MINSIZEREL Release; MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release; ); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:RELEASE>:${SOFACONFIG_COMPILE_OPTIONS_RELEASE}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:DEBUG>:${SOFACONFIG_COMPILE_OPTIONS_DEBUG}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""${SOFACONFIG_COMPILE_OPTIONS}""). # target_link_option only available with cmake >= 3.13; if(${CMAKE_VERSION} VERSION_LESS ""3.13.0""); if(NOT SOFACONFIG_LINK_OPTIONS_RELEASE STREQUAL """"); string(REPLACE "";"" "" "" SOFACONFIG_LINK_OPTIONS_RELEASE ""${SOFACONFIG_LINK_OPTIONS_RELEASE}""); set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS_RELEASE ""${SOFACONFIG_LINK_OPTIONS_RELEASE}""); endif(); if(NOT SOFACONFIG_LINK_OPTIONS_DEBUG STREQUAL """"); string(REPLACE "";"" "" "" SOFACONFIG_LINK_OPTIONS_DEBUG ""${SOFACONFIG_LINK_OPTIONS_DEBUG}""); set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS_DEBUG ""${SOFACONFIG_LINK_OPTIONS_DEBUG}""); endif(); if(NOT SOFACONFIG_LINK_OPTIONS STREQUAL """"); string(REPLACE "";"" "" "" SOFACONFIG_LINK_OPTIONS ""${SOFACONFIG_LINK_OPTIONS}""); set_target_",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:12892,Release,Release,12892,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,4,"['RELEASE', 'Release']","['RELEASE', 'Release']"
Deployability,ps://github.com/sofa-framework/sofa/pull/1417 ); - **[SofaKernel]** Fix minor bug in BoxROI and add warning message in RestShapeSpringsForceField [#1391]( https://github.com/sofa-framework/sofa/pull/1391 ); - **[SofaKernel]** Fixes a bug where the camera was not moving with the Qt viewer [#1377]( https://github.com/sofa-framework/sofa/pull/1377 ); - **[SofaKernel]** Improve error message when a component cannot be created. [#1332]( https://github.com/sofa-framework/sofa/pull/1332 ); - **[SofaKernel]** Remove the installation of external system libraries [#1387]( https://github.com/sofa-framework/sofa/pull/1387 ); - **[SofaKernel]** Set default visibility to SOFA_EXPORT_DYNAMIC_LIBRARY [#1410]( https://github.com/sofa-framework/sofa/pull/1410 ); - [SofaMiscTopology] Fix bug in TopologicalChangeProcessor [#1247]( https://github.com/sofa-framework/sofa/pull/1247 ); - **[SofaSimpleFem]** Small Fix [#1403]( https://github.com/sofa-framework/sofa/pull/1403 ); - **[SofaSimulationCore]** FIX resizing of bboxes in UpdateBoundingBoxVisitor [#1268]( https://github.com/sofa-framework/sofa/pull/1268 ); - [SofaTopologyMapping] Fix Tetra2TriangleTopologicalMapping [#1319]( https://github.com/sofa-framework/sofa/pull/1319 ). **Plugins / Projects**; - [Geomagic] Fix several wrong behaviors in driver code [#1378]( https://github.com/sofa-framework/sofa/pull/1378 ); - [MeshSTEPLoader] FIX OCC version check [#1312]( https://github.com/sofa-framework/sofa/pull/1312 ); - [MeshSTEPLoader] FIX build with OCC >= 7.4 [#1310]( https://github.com/sofa-framework/sofa/pull/1310 ); - [Modeler] FIX link error on Windows [#1282]( https://github.com/sofa-framework/sofa/pull/1282 ); - [SofaMiscCollision] Fix topological changes in TetrahedronCollisionModel [#1354]( https://github.com/sofa-framework/sofa/pull/1354 ); - [SofaSphFluid] Fix broken behavior for ParticleSink and ParticleSource [#1278]( https://github.com/sofa-framework/sofa/pull/1278 ); - [SofaSphFluid] FIX .scene-tests [#1317]( https://git,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:236900,Update,UpdateBoundingBoxVisitor,236900,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['UpdateBoundingBoxVisitor']
Deployability,ps://github.com/sofa-framework/sofa/pull/2331 ); - [SofaBaseLinearSolver] Link is not overwritten [#2497]( https://github.com/sofa-framework/sofa/pull/2497 ); - [SofaBaseMechanics] Fix UniformMass topology changes handling mode. [#2377]( https://github.com/sofa-framework/sofa/pull/2377 ); - [SofaBaseMechanics] Fix compilation in BarycentricMapping [#2443]( https://github.com/sofa-framework/sofa/pull/2443 ); - [SofaBaseMechanics] Update MechanicalObject resize method to exit if not necessary [#1977]( https://github.com/sofa-framework/sofa/pull/1977 ); - [SofaBaseTopology] Add missing export symbol keyword for TopologySubsetData [#2247]( https://github.com/sofa-framework/sofa/pull/2247 ); - [SofaBaseTopology] Fix TopologySubsetData: call to creation/desctruction callback was missing [#2374]( https://github.com/sofa-framework/sofa/pull/2374 ); - [SofaBaseTopology] use WriteOnlyAccessor in TopologyData [#2414]( https://github.com/sofa-framework/sofa/pull/2414 ); - [SofaBaseVisual] ADD Update callbacks in VisualModelImpl (#1483) [#2245]( https://github.com/sofa-framework/sofa/pull/2245 ); - [SofaBaseVisual] Fix VisualModelImpl updateTextures callback to not call init method [#2298]( https://github.com/sofa-framework/sofa/pull/2298 ); - [SofaBaseVisual] Fix assert [#2417]( https://github.com/sofa-framework/sofa/pull/2417 ); - [SofaBoundaryCondition] Fix ProjectToLineConstraint_RemovingMeshTest.scn [#2241]( https://github.com/sofa-framework/sofa/pull/2241 ); - [SofaBoundaryCondition] Fix constraints in assembled systems [#2269]( https://github.com/sofa-framework/sofa/pull/2269 ); - [SofaConstraint] Fix BilateralInteractionConstraint's draw() [#2530]( https://github.com/sofa-framework/sofa/pull/2530 ); - [SofaConstraint] Fix crash when constraint correction is missing [#2222]( https://github.com/sofa-framework/sofa/pull/2222 ); - [SofaConstraint] fix segfault in GenericConstraintSolver [#2265]( https://github.com/sofa-framework/sofa/pull/2265 ); - [SofaCore] Fix potential m,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:148411,Update,Update,148411,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,pull/2445 ); - [examples] Clean linear solver scenes [#2494]( https://github.com/sofa-framework/sofa/pull/2494 ); - [examples] Limit GlobalSystemMatrixExporter.scn to 1 iteration [#2328]( https://github.com/sofa-framework/sofa/pull/2328 ); - [examples] Make scene resolution independent + doc [#2361]( https://github.com/sofa-framework/sofa/pull/2361 ); - [examples] add a warning comment in the scene header [#2470]( https://github.com/sofa-framework/sofa/pull/2470 ); - [scenes] Replace BruteForceDetection by BruteForceNarrowPhase+BVHNarrowPhase [#2232]( https://github.com/sofa-framework/sofa/pull/2232 ). **Scripts / Tools**. ____________________________________________________________. ## [v21.06.03]( https://github.com/sofa-framework/sofa/tree/v21.06.03 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.02...v21.06.03 ). ### Bug Fixes; **Architecture**; - [CMake][modules] FIX out-of-tree builds [#2453]( https://github.com/sofa-framework/sofa/pull/2453 ); - [All] Update IDE directory for targets [#2239]( https://github.com/sofa-framework/sofa/pull/2239 ). **Modules**; - [SofaGeneralLoader] Make GridMeshCreator work again [#2473]( https://github.com/sofa-framework/sofa/pull/2473 ). ____________________________________________________________. ## [v21.06.02]( https://github.com/sofa-framework/sofa/tree/v21.06.02 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v21.06.01...v21.06.02 ). ### Bug Fixes; **Architecture**; - [CMake] Clean Sofa.Core CMakeLists + Add missing headers [#2444]( https://github.com/sofa-framework/sofa/pull/2444 ); - [SofaMeshCollision] Fix cmake generated config file [#2400]( https://github.com/sofa-framework/sofa/pull/2400 ). **Modules**; - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path [#2352]( https://github.com/sofa-framework/sofa/pull/2352 ). _____________________________________________,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:164460,Update,Update,164460,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,r.cpp; ${SRC_ROOT}/IntegrateBeginEvent.cpp; ${SRC_ROOT}/IntegrateEndEvent.cpp; ${SRC_ROOT}/MainTaskSchedulerRegistry.cpp; ${SRC_ROOT}/MainTaskSchedulerFactory.cpp; ${SRC_ROOT}/MechanicalOperations.cpp; ${SRC_ROOT}/MechanicalVPrintVisitor.cpp; ${SRC_ROOT}/MechanicalVisitor.cpp; ${SRC_ROOT}/MutationListener.cpp; ${SRC_ROOT}/Node.cpp; ${SRC_ROOT}/PauseEvent.cpp; ${SRC_ROOT}/PipelineImpl.cpp; ${SRC_ROOT}/PositionEvent.cpp; ${SRC_ROOT}/PrintVisitor.cpp; ${SRC_ROOT}/PropagateEventVisitor.cpp; ${SRC_ROOT}/RequiredPlugin.cpp; ${SRC_ROOT}/ResetVisitor.cpp; ${SRC_ROOT}/SceneLoaderFactory.cpp; ${SRC_ROOT}/SceneCheck.cpp; ${SRC_ROOT}/SceneCheckRegistry.cpp; ${SRC_ROOT}/SceneCheckMainRegistry.cpp; ${SRC_ROOT}/Simulation.cpp; ${SRC_ROOT}/SolveVisitor.cpp; ${SRC_ROOT}/StateChangeVisitor.cpp; ${SRC_ROOT}/TopologyChangeVisitor.cpp; ${SRC_ROOT}/UpdateBoundingBoxVisitor.cpp; ${SRC_ROOT}/UpdateContextVisitor.cpp; ${SRC_ROOT}/UpdateInternalDataVisitor.cpp; ${SRC_ROOT}/UpdateLinksVisitor.cpp; ${SRC_ROOT}/UpdateMappingEndEvent.cpp; ${SRC_ROOT}/UpdateMappingVisitor.cpp; ${SRC_ROOT}/VectorOperations.cpp; ${SRC_ROOT}/VelocityThresholdVisitor.cpp; ${SRC_ROOT}/Visitor.cpp; ${SRC_ROOT}/VisualVisitor.cpp; ${SRC_ROOT}/WriteStateVisitor.cpp; ${SRC_ROOT}/XMLPrintVisitor.cpp; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/BaseSimulationExporter.cpp; ${SRC_ROOT}/TaskScheduler.cpp; ${SRC_ROOT}/TaskSchedulerFactory.cpp; ${SRC_ROOT}/TaskSchedulerRegistry.cpp; ${SRC_ROOT}/DefaultTaskScheduler.cpp; ${SRC_ROOT}/Task.cpp; ${SRC_ROOT}/InitTasks.cpp; ${SRC_ROOT}/WorkerThread.cpp; ${SRC_ROOT}/events/BuildConstraintSystemEndEvent.cpp; ${SRC_ROOT}/events/SimulationInitDoneEvent.cpp; ${SRC_ROOT}/events/SimulationInitStartEvent.cpp; ${SRC_ROOT}/events/SimulationInitTexturesDoneEvent.cpp; ${SRC_ROOT}/events/SimulationStartEvent.cpp; ${SRC_ROOT}/events/SimulationStopEvent.cpp; ${SRC_ROOT}/events/SolveConstraintSystemEndEvent.cpp. ${SRC_ROOT}/mechanicalvisitor/MechanicalAccFromFVisitor.cpp; ${SRC_ROOT}/mechani,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:8284,Update,UpdateMappingEndEvent,8284,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Update'],['UpdateMappingEndEvent']
Deployability,ramework/sofa/pull/1388 ); - [All] Fix warnings generated due to change in Aspects [#1329]( https://github.com/sofa-framework/sofa/pull/1329 ); - [All] Minor changes in comment or format [#1411]( https://github.com/sofa-framework/sofa/pull/1411 ); - [All] Multiple fixes scenes [#1289]( https://github.com/sofa-framework/sofa/pull/1289 ); - [All] Remove all DISPLAY_TIME define [#1267]( https://github.com/sofa-framework/sofa/pull/1267 ); - [All] Remove some compilation warning. [#1343]( https://github.com/sofa-framework/sofa/pull/1343 ); - [All] Replace usage of sleep functions for the std one [#1394]( https://github.com/sofa-framework/sofa/pull/1394 ); - [All] Uniform use of M_PI [#1264]( https://github.com/sofa-framework/sofa/pull/1264 ); - [All] Update header for cleaner future management [#1375]( https://github.com/sofa-framework/sofa/pull/1375 ); - [All] replace all serr by msg_error/msg_warning [#1236]( https://github.com/sofa-framework/sofa/pull/1236 ); - [SofaConstraint] Set the use of integration factor true by default [#1369]( https://github.com/sofa-framework/sofa/pull/1369 ); - **[SofaDefaultType]** BoundingBox : Remove annoying warnings [#1425]( https://github.com/sofa-framework/sofa/pull/1425 ); - [SofaGeneralEngine] Fix draw of the sphere in SphereROI [#1318]( https://github.com/sofa-framework/sofa/pull/1318 ); - [SofaGeneralEngine] Remove remaining BoxROI after SofaEngine move [#1333]( https://github.com/sofa-framework/sofa/pull/1333 ); - [SofaGeneralLoader] Allow flip normals in Gmsh and STL loaders [#1418]( https://github.com/sofa-framework/sofa/pull/1418 ); - [SofaGui] Pass QDocBrowser as an option [#1315]( https://github.com/sofa-framework/sofa/pull/1315 ); - **[SofaKernel]** Add Data bool d_checkTopology in Topology container to replace the use of CHECK_TOPOLOGY macro [#1351]( https://github.com/sofa-framework/sofa/pull/1351 ); - **[SofaKernel]** Clean occurrences of CHECK_TOPOLOGY macro in code [#1352]( https://github.com/sofa-framework/sofa/pull/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:239989,integrat,integration,239989,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['integrat'],['integration']
Deployability,"ramework/sofa/pull/4151); - [Topology.Grid] Fix SparseGridTopology and SparseGridRamificationTopology crash at init if mesh file is not found [#4164](https://github.com/sofa-framework/sofa/pull/4164); - [Topology] Rename Edge::pointBaryCoefs into Edge::getBarycentricCoordinates [#4165](https://github.com/sofa-framework/sofa/pull/4165); - [LinearSolver.Direct] SparseLDL: Fix crash in addJMInvJtLocal [#4180](https://github.com/sofa-framework/sofa/pull/4180); - [Helper] Fix warning in MeshTopologyLoader.cpp [#4181](https://github.com/sofa-framework/sofa/pull/4181); - [examples] Fix warning of UncoupledCC in caduceus [#4187](https://github.com/sofa-framework/sofa/pull/4187); - [LinearSystem] MatrixLinearSystem: add registration in the factory for BTDMatrix6 [#4189](https://github.com/sofa-framework/sofa/pull/4189); - [SofaCarving] Fix warnings in SofaCarving_test due to use of deprecated methods [#4193](https://github.com/sofa-framework/sofa/pull/4193); - [GUI.Qt] Fix libQGLViewer cmake install [#4198](https://github.com/sofa-framework/sofa/pull/4198); - [Helper] Update ComponentChange for MechanicalMatrixMapper [#4235](https://github.com/sofa-framework/sofa/pull/4235); - [LinearAlgebra] Robustify accesses to empty matrices [#4236](https://github.com/sofa-framework/sofa/pull/4236); - [Topology] Check indices out-of-bound in TriangleSetTopologyContainer [#4242](https://github.com/sofa-framework/sofa/pull/4242); - [github] Fix name of PR author in GitHub workflows [#4267](https://github.com/sofa-framework/sofa/pull/4267); - [SofaCUDA] Dont use both version of cublas (legacy or v2) [#4274](https://github.com/sofa-framework/sofa/pull/4274); - [Sofa.GUI.Qt] Add cmake module for QGLViewer [#4290](https://github.com/sofa-framework/sofa/pull/4290); - [all] Fix warnings [#4291](https://github.com/sofa-framework/sofa/pull/4291); - [LinearAlgera, Core] Fix linking with LTO on MacOS/Clang [#4293](https://github.com/sofa-framework/sofa/pull/4293); - [MultiThreading] Avoid Static Ini",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:37240,install,install,37240,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,ramework/sofa/pull/4607); - [LinearSystem] Remove development artifact [#4620](https://github.com/sofa-framework/sofa/pull/4620); - [all] Minor last fixes using SimpleApi [#4627](https://github.com/sofa-framework/sofa/pull/4627); - [SolidMechanics.FEM] Small update on container access to avoid unecessary check [#4639](https://github.com/sofa-framework/sofa/pull/4639); - [AnimationLoop] Rename Data [#4664](https://github.com/sofa-framework/sofa/pull/4664); - [Guidelines] Format cpp code [#4695](https://github.com/sofa-framework/sofa/pull/4695); - [all] Remove some warnings [#4698](https://github.com/sofa-framework/sofa/pull/4698); - [examples] Run PluginFinder on examples [#4707](https://github.com/sofa-framework/sofa/pull/4707); - [examples] Remove examples using DefaultCollisionGroupManager [#4708](https://github.com/sofa-framework/sofa/pull/4708); - [Core] Warn when module name is empty [#4725](https://github.com/sofa-framework/sofa/pull/4725); - ﻿[PlayBack] Update playback scenes to write/read and compare a beam under gravity motion [#4745](https://github.com/sofa-framework/sofa/pull/4745); - [tools] Factorize and clean plugin list filtering [#4748](https://github.com/sofa-framework/sofa/pull/4748); - [tools] Add new dependency to fix in MacOS post-install-fixup [#4749](https://github.com/sofa-framework/sofa/pull/4749); - [all] Fix typos in comments [#4759](https://github.com/sofa-framework/sofa/pull/4759); - [All] Delete v23.06 disabled header [#4760](https://github.com/sofa-framework/sofa/pull/4760); - [examples] Rename example scenes of constraints [#4769](https://github.com/sofa-framework/sofa/pull/4769). ### Refactoring. - [Constraint] Make name of constraints more explicit [#4302](https://github.com/sofa-framework/sofa/pull/4302); - [Constraint.Projective] Implement applyConstraint from new matrix assembly API [#4309](https://github.com/sofa-framework/sofa/pull/4309); - [Spring] Extract LinearSpring class in its own file [#4454](https://github.com/sofa-fram,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:17503,Update,Update,17503,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,ramework/sofa/pull/520 ); - Fix memory leak while capturing screenshot [#533]( https://github.com/sofa-framework/sofa/pull/533 ); - FIX Windows relative path from runSofa [#568]( https://github.com/sofa-framework/sofa/pull/568 ); - [SofaRigid]; - RigidMapping: fixed setRepartition backward compatibility [#441]( https://github.com/sofa-framework/sofa/pull/441 ); - [SofaSimulationCommon]; - Fix a minor regression introduced during the post-sprint [#476]( https://github.com/sofa-framework/sofa/pull/476 ); - [SofaSimulationCore]; - Add stop in add_mbktomatrixVisitor [#439]( https://github.com/sofa-framework/sofa/pull/439 ). **Other modules**; - [All]; - Fix warnings and strange double incrementation on iterator [#364]( https://github.com/sofa-framework/sofa/pull/364 ); - installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - Fix override warnings [#423]( https://github.com/sofa-framework/sofa/pull/423 ); - FIX Sofa installation failure (tries to install non-existing files) [#470]( https://github.com/sofa-framework/sofa/pull/470 ); - ADD _d suffix for debug libs [#511]( https://github.com/sofa-framework/sofa/pull/511 ); - [SofaBoundaryCondition]; - Fix LinearForceField that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - FIX Removed incorrect warning from LinearForceField [#384]( https://github.com/sofa-framework/sofa/pull/384 ); - [SofaConstraint]; - Fix error due to MacOS >= 10.11 using a relative filename [#325]( https://github.com/sofa-framework/sofa/pull/325 ); - Fix issue in GenericConstraintCorrection [#567]( https://github.com/sofa-framework/sofa/pull/567 ); - [SofaDeformable]; - Fix RestShapeSpringsForceField [#367]( https://github.com/sofa-framework/sofa/pull/367 ); - [SofaExporter]; - FIX allow to extend VTKExporter in a plugin [#309]( https://github.com/sofa-framework/sofa/pull/309 ); - [SofaGeneralEngine]; - Fix some XyzTransformMatrixEngine::update() function [#343]( https://gi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:314593,install,installation,314593,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,['install'],"['install', 'installation']"
Deployability,repository [#2519]( https://github.com/sofa-framework/sofa/pull/2519 ); - [ManifoldTopologies] Move the plugin to an external repository [#2623]( https://github.com/sofa-framework/sofa/pull/2623 ); - [OpenCTMPlugin] Move the plugin to an external repository [#2564]( https://github.com/sofa-framework/sofa/pull/2564 ); - [OptitrackNatNet] Move the plugin to an external repository [#2548]( https://github.com/sofa-framework/sofa/pull/2548 ); - [THMPGSpatialHashing] Move the plugin to an external repository [#2609]( https://github.com/sofa-framework/sofa/pull/2609 ); - [Registration] Move the plugin to an external repository [#2552]( https://github.com/sofa-framework/sofa/pull/2552 ). **Examples / Scenes**. **Scripts / Tools**. ### Breaking. **Architecture**. **Modules**; - [All] Lifecycle update before v22.06 [#3090]( https://github.com/sofa-framework/sofa/pull/3090 ); - [GL.Rendering3D] Clean up GL components [#3115]( https://github.com/sofa-framework/sofa/pull/3115 ); - [LinearSolver] Update data name in SparseLDLSolver [#2904] https://github.com/sofa-framework/sofa/pull/2904; - [Sofa.Core] A helper class for consistent component naming [#2631]( https://github.com/sofa-framework/sofa/pull/2631 ); - [SofaGeneralCollisionMesh] Move TriangleOctree utility class to Helper [#2805]( https://github.com/sofa-framework/sofa/pull/2805 ); - [SofaGeneralObjectInteraction] BoxStiffSpringForceField is now a pack of components [#2621]( https://github.com/sofa-framework/sofa/pull/2621 ); - [SofaGeneralSimpleFEM] Some cleaning in TriangularFEMForceFieldOptim [#2567]( https://github.com/sofa-framework/sofa/pull/2567 ); - [SofaSimpleFEM] Create a TriangleFEMUtils class to factorise Triangle/Triangular[FEMForceField] code [#2287]( https://github.com/sofa-framework/sofa/pull/2287 ); - [SolidMechanics] Remove unused _assembling data [#2901]( https://github.com/sofa-framework/sofa/pull/2901 ); - [Topology.Container.Dynamic] Fix duplicate Data Points in PointSetTopologyContainer [#2993]( http,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:96323,Update,Update,96323,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,request Discord msg [#4502](https://github.com/sofa-framework/sofa/pull/4502); - [Simulation.Core] RequiredPlugin: Avoid calling loadPlugin() twice on start-up [#4509](https://github.com/sofa-framework/sofa/pull/4509); - [Share] Remove DefaultCollisionGroupManager in the default scenes [#4521](https://github.com/sofa-framework/sofa/pull/4521); - [all] Fix some warnings [#4529](https://github.com/sofa-framework/sofa/pull/4529); - [GitHub] Fix GH Discussions Announcements for Discord [#4530](https://github.com/sofa-framework/sofa/pull/4530); - [Simulation.Core] Make TSAN pass for caduceus [#4535](https://github.com/sofa-framework/sofa/pull/4535); - [Config] Add cxxopts cmake find module [#4538](https://github.com/sofa-framework/sofa/pull/4538); - [Sofa.Testing] Add SimpleApi in Config.cmake.in [#4542](https://github.com/sofa-framework/sofa/pull/4542); - [script] Stale action: remove temporary layer and activate closing [#4560](https://github.com/sofa-framework/sofa/pull/4560); - [README] Update link to Discord [#4562](https://github.com/sofa-framework/sofa/pull/4562); - [plugins] Add SimpleApi as a dependency in SofaCarving_test [#4572](https://github.com/sofa-framework/sofa/pull/4572); - [Constraint.Lagrangian.Solver] Make problemId counter id atomic [#4581](https://github.com/sofa-framework/sofa/pull/4581); - [Collision.Response.Contact] Make contactId thread-safe [#4582](https://github.com/sofa-framework/sofa/pull/4582); - [Collision.Detection] Give current intersection methods as parameter to intersection functions [#4583](https://github.com/sofa-framework/sofa/pull/4583); - [LinearAlgebra] Fix compilation of assert [#4598](https://github.com/sofa-framework/sofa/pull/4598); - [Multithreading] fix multithread packaging [#4619](https://github.com/sofa-framework/sofa/pull/4619); - [GitHub] Add timezone info on cron Actions [#4626](https://github.com/sofa-framework/sofa/pull/4626); - [LinearAlgebra] Trigger error on the Eigen version [#4630](https://github.com/sofa-fra,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:8814,Update,Update,8814,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,rk/sofa/pull/2497 ); - [SofaBaseMechanics] Fix UniformMass topology changes handling mode. [#2377]( https://github.com/sofa-framework/sofa/pull/2377 ); - [SofaBaseMechanics] Fix compilation in BarycentricMapping [#2443]( https://github.com/sofa-framework/sofa/pull/2443 ); - [SofaBaseMechanics] Update MechanicalObject resize method to exit if not necessary [#1977]( https://github.com/sofa-framework/sofa/pull/1977 ); - [SofaBaseTopology] Add missing export symbol keyword for TopologySubsetData [#2247]( https://github.com/sofa-framework/sofa/pull/2247 ); - [SofaBaseTopology] Fix TopologySubsetData: call to creation/desctruction callback was missing [#2374]( https://github.com/sofa-framework/sofa/pull/2374 ); - [SofaBaseTopology] use WriteOnlyAccessor in TopologyData [#2414]( https://github.com/sofa-framework/sofa/pull/2414 ); - [SofaBaseVisual] ADD Update callbacks in VisualModelImpl (#1483) [#2245]( https://github.com/sofa-framework/sofa/pull/2245 ); - [SofaBaseVisual] Fix VisualModelImpl updateTextures callback to not call init method [#2298]( https://github.com/sofa-framework/sofa/pull/2298 ); - [SofaBaseVisual] Fix assert [#2417]( https://github.com/sofa-framework/sofa/pull/2417 ); - [SofaBoundaryCondition] Fix ProjectToLineConstraint_RemovingMeshTest.scn [#2241]( https://github.com/sofa-framework/sofa/pull/2241 ); - [SofaBoundaryCondition] Fix constraints in assembled systems [#2269]( https://github.com/sofa-framework/sofa/pull/2269 ); - [SofaConstraint] Fix BilateralInteractionConstraint's draw() [#2530]( https://github.com/sofa-framework/sofa/pull/2530 ); - [SofaConstraint] Fix crash when constraint correction is missing [#2222]( https://github.com/sofa-framework/sofa/pull/2222 ); - [SofaConstraint] fix segfault in GenericConstraintSolver [#2265]( https://github.com/sofa-framework/sofa/pull/2265 ); - [SofaCore] Fix potential memory failure on TopologyData Add method [#2459]( https://github.com/sofa-framework/sofa/pull/2459 ); - [SofaCore] FIX BaseData::getLinkPa,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:148555,update,updateTextures,148555,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['updateTextures']
Deployability,"rk/sofa/pull/2799 ); - [SofaDeformable] Handle division by zero in MeshSpringForceField [#2596]( https://github.com/sofa-framework/sofa/pull/2596 ); - [SofaDeformable] Springs are able to compute their bounding box [#2599]( https://github.com/sofa-framework/sofa/pull/2599 ); - [SofaEngine] Fix BoxROI undefined behavior [#2604]( https://github.com/sofa-framework/sofa/pull/2604 ); - [SofaFramework] Add tests on aliases for ""multiple projects"" out-of-tree build [#2566]( https://github.com/sofa-framework/sofa/pull/2566 ); - [SofaGeneralImplicitOdeSolver] Propagate position inside Newton loop [#2584]( https://github.com/sofa-framework/sofa/pull/2584 ); - [SofaGeneralObjectInteraction] Fix dependencies in cmake [#2659]( https://github.com/sofa-framework/sofa/pull/2659 ); - [SofaGuiCommon] Restore argv [#2802]( https://github.com/sofa-framework/sofa/pull/2802 ); - [SofaGuiQt] Fix some dll export macro missing [#2555]( https://github.com/sofa-framework/sofa/pull/2555 ); - [SofaGui] Restore and update CMake variables and modules [#3011]( https://github.com/sofa-framework/sofa/pull/3011 ); - [SofaHelper] Speedup ReadAccessor conversion operator [#2583]( https://github.com/sofa-framework/sofa/pull/2583 ); - [SofaMiscFEM] Fix TriangleFEMForceField and TriangularFEMForceField to have the same behavior [#2275]( https://github.com/sofa-framework/sofa/pull/2275 ); - [SofaMiscFem] FIX missing Strain Displacement matrix update in TriangularFEMForceField [#2706]( https://github.com/sofa-framework/sofa/pull/2706 ); - [SofaMiscForceField] Fix error while trying to compile a plugin depending on SofaGuiQt [#2707]( https://github.com/sofa-framework/sofa/pull/2707 ); - [SofaMiscForceField][SofaBaseMechanics] Add compile-time conditions to avoid compiling unrealistic cases [#2514]( https://github.com/sofa-framework/sofa/pull/2514 ); - [SofaMiscSolver] Accumulate mapped forces in NewmarkImplicitSolver [#2578]( https://github.com/sofa-framework/sofa/pull/2578 ); - [SofaSparseSolver] Add cmake ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:112972,update,update,112972,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,"rnel]**[SofaGuiQt] Qt viewer with intel drivers [#1690]( https://github.com/sofa-framework/sofa/pull/1690 ); - **[SofaKernel]** Add updateOnTransformChange update callback on MeshLoader. [#1459]( https://github.com/sofa-framework/sofa/pull/1459 ); - **[SofaKernel]** Data file repository now looks into the SOFA install directory [#1656]( https://github.com/sofa-framework/sofa/pull/1656 ); - **[SofaKernel]** Improve check for already registered plugins [#1472]( https://github.com/sofa-framework/sofa/pull/1472 ); - **[SofaKernel]** In DataFileName, the name FILE used in the PathType enum could be ambigous [#1465]( https://github.com/sofa-framework/sofa/pull/1465 ); - **[SofaKernel]** 🐛 Break link when passing a nullptr to setLinkedBase [#1479]( https://github.com/sofa-framework/sofa/pull/1479 ); - **[SofaKernel]**[SofaGeneralRigid] Minor fixes in ArticulatedSystemMapping and JointSpringForceField [#1448]( https://github.com/sofa-framework/sofa/pull/1448 ); - **[SofaKernel]** Implement an update mechanism on component: RequiredPlugin [#1458]( https://github.com/sofa-framework/sofa/pull/1458 ); - **[SofaKernel]** Switch to include_guard() instead of include_guard(GLOBAL) [#1467]( https://github.com/sofa-framework/sofa/pull/1467 ); - [SofaMacros] FIX RELOCATABLE_INSTALL_DIR target property [#1631]( https://github.com/sofa-framework/sofa/pull/1631 ); - [SofaMacros] FIX deprecated macro sofa_generate_package [#1446]( https://github.com/sofa-framework/sofa/pull/1446 ); - [SofaMacros] FIX libs copy and plugin deps finding [#1708]( https://github.com/sofa-framework/sofa/pull/1708 ); - [SofaMacros] FIX missing lib copy on Windows [#1711]( https://github.com/sofa-framework/sofa/pull/1711 ); - [SofaMacros] FIX plugins RPATH [#1619]( https://github.com/sofa-framework/sofa/pull/1619 ); - [SofaMacros] Improve RPATH coverage on MacOS [#1713]( https://github.com/sofa-framework/sofa/pull/1713 ); - [SofaMacros] Recursive deps search for RPATH [#1710]( https://github.com/sofa-framework/so",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:222666,update,update,222666,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,"rom another module [#4453](https://github.com/sofa-framework/sofa/pull/4453); - [SofaDistanceGrid] remove shadow variable [#4455](https://github.com/sofa-framework/sofa/pull/4455); - [Defaulttype, LinearAlgera] Fix warnings [#4465](https://github.com/sofa-framework/sofa/pull/4465); - [Testing] Deprecate BaseSimulationTest::importPlugin [#4467](https://github.com/sofa-framework/sofa/pull/4467); - [All] CMake: Remove deprecation warnings [#4469](https://github.com/sofa-framework/sofa/pull/4469); - [framework] Fix typo [#4474](https://github.com/sofa-framework/sofa/pull/4474); - [all] Apply nested namespaces [#4482](https://github.com/sofa-framework/sofa/pull/4482); - [all] Missing override keyword [#4483](https://github.com/sofa-framework/sofa/pull/4483); - [all] Convert some loops to range-based [#4485](https://github.com/sofa-framework/sofa/pull/4485); - [Config] CMake: fix warning about upper/lowercase for Difflib [#4486](https://github.com/sofa-framework/sofa/pull/4486); - [README] Update badge with Discord [#4498](https://github.com/sofa-framework/sofa/pull/4498); - [Plugins] Move MeshSTEPLoader to an external repository [#4504](https://github.com/sofa-framework/sofa/pull/4504); - [Plugins] Gather external plugins configs in a same folder (proposal) [#4505](https://github.com/sofa-framework/sofa/pull/4505); - [image] Fix scene test [#4517](https://github.com/sofa-framework/sofa/pull/4517); - [GitHub] Update version of the actions/github-script [#4522](https://github.com/sofa-framework/sofa/pull/4522); - [GUI] Remove the New/Save/SaveAs menu options [#4523](https://github.com/sofa-framework/sofa/pull/4523); - [all] Additional fixes further to v24.06 lifecycle [#4540](https://github.com/sofa-framework/sofa/pull/4540); - [Core] Update NarrowPhaseDetection.cpp use prefix [#4557](https://github.com/sofa-framework/sofa/pull/4557); - [Geomagic] Update GeomagicDriver.cpp to fire error when hd.h is not found [#4576](https://github.com/sofa-framework/sofa/pull/4576); - [CM",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:14948,Update,Update,14948,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"s Corresponding Source. The information must; suffice to ensure that the continued functioning of the modified object; code is in no case prevented or interfered with solely because; modification has been made. If you convey an object code work under this section in, or with, or; specifically for use in, a User Product, and the conveying occurs as; part of a transaction in which the right of possession and use of the; User Product is transferred to the recipient in perpetuity or for a; fixed term (regardless of how the transaction is characterized), the; Corresponding Source conveyed under this section must be accompanied; by the Installation Information. But this requirement does not apply; if neither you nor any third party retains the ability to install; modified object code on the User Product (for example, the work has; been installed in ROM). The requirement to provide Installation Information does not include a; requirement to continue to provide support service, warranty, or updates; for a work that has been modified or installed by the recipient, or for; the User Product in which it has been modified or installed. Access to a; network may be denied when the modification itself materially and; adversely affects the operation of the network or violates the rules and; protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided,; in accord with this section must be in a format that is publicly; documented (and with an implementation available to the public in; source code form), and must require no special password or key for; unpacking, reading or copying. 7. Additional Terms. ""Additional permissions"" are terms that supplement the terms of this; License by making exceptions from one or more of its conditions.; Additional permissions that are applicable to the entire Program shall; be treated as though they were included in this License, to the extent; that they are valid under applicable law. If addition",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:35655,Install,Installation,35655,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,4,"['Install', 'install', 'update']","['Installation', 'installed', 'updates']"
Deployability,"s License. Also, you must do one; of these things:. a) Accompany the work with the complete corresponding; machine-readable source code for the Library including whatever; changes were used in the work (which must be distributed under; Sections 1 and 2 above); and, if the work is an executable linked; with the Library, with the complete machine-readable ""work that; uses the Library"", as object code and/or source code, so that the; user can modify the Library and then relink to produce a modified; executable containing the modified Library. (It is understood; that the user who changes the contents of definitions files in the; Library will not necessarily be able to recompile the application; to use the modified definitions.). b) Use a suitable shared library mechanism for linking with the; Library. A suitable mechanism is one that (1) uses at run time a; copy of the library already present on the user's computer system,; rather than copying library functions into the executable, and (2); will operate properly with a modified version of the library, if; the user installs one, as long as the modified version is; interface-compatible with the version that the work was made with. c) Accompany the work with a written offer, valid for at; least three years, to give the same user the materials; specified in Subsection 6a, above, for a charge no more; than the cost of performing this distribution. d) If distribution of the work is made by offering access to copy; from a designated place, offer equivalent access to copy the above; specified materials from the same place. e) Verify that the user has already received a copy of these; materials or that you have already sent this user a copy. For an executable, the required form of the ""work that uses the; Library"" must include any data and utility programs needed for; reproducing the executable from it. However, as a special exception,; the materials to be distributed need not include anything that is; normally distributed (in ei",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:15880,install,installs,15880,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['install'],['installs']
Deployability,"s activated; - clean the config.h (SOFAGUI_HAVE_QWT); - remove boost library links (includes still required). boost chrono is not required anymore.; - remove unused POINT_DATA_VECTOR_ACCESS macro; - make miniflowVR build optional (default OFF); - [SofaKernel]; - remove last direct opengl calls in modules; - add deprecation message on MechanicalObject attributes; - [SofaBaseVisual] clean BaseCamera: remove direct opengl calls; - [SofaHaptics] boost-thread is not used any more, clean cmake; - [SofaGeneralLoader] STLLoader: fixing binary loading in debug and cleaning examples; - [SofaPython]; - remove ScriptEnvironment i.e. automatic initialization of Node; - Node::isInitialized(), not used anymore; - [Flexible]; - clean relativeStrainMapping. ### Moved files. - move CImg from extlibs to image plugin extlibs. ### Documentation. - Add the contribution and guidelines : **CONTRIBUTING.md** and **GUIDELINES.md**; - Add the configuration required (ex: C++, compiler versions); - Add a page to use SOFA in Matlab; - Improve Logger documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an API to display primitives on screen. For now, only the OpenGL (fixed-pipeline version) implementation has been made.; - add a Logger; - add the diffusion effect in SOFA (heat transfer); - SOFA_USE_MASK compi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:340728,configurat,configuration,340728,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['configurat'],['configuration']
Deployability,s for sofa::type::vec [#2439]( https://github.com/sofa-framework/sofa/pull/2439 ); - [SofaBaseLinearSolver] CGLinearSolver must call super init() to check required Data [#2419]( https://github.com/sofa-framework/sofa/pull/2419 ); - [SofaBaseLinearSolver] CRS explicit instantiation [#2306]( https://github.com/sofa-framework/sofa/pull/2306 ); - [SofaBaseLinearSolver] Fix compilation when enabling CRSMultiMatrixAccessor [#2456]( https://github.com/sofa-framework/sofa/pull/2456 ); - [SofaBaseLinearSolver] Fix mulTranspose for scalar types [#2331]( https://github.com/sofa-framework/sofa/pull/2331 ); - [SofaBaseLinearSolver] Link is not overwritten [#2497]( https://github.com/sofa-framework/sofa/pull/2497 ); - [SofaBaseMechanics] Fix UniformMass topology changes handling mode. [#2377]( https://github.com/sofa-framework/sofa/pull/2377 ); - [SofaBaseMechanics] Fix compilation in BarycentricMapping [#2443]( https://github.com/sofa-framework/sofa/pull/2443 ); - [SofaBaseMechanics] Update MechanicalObject resize method to exit if not necessary [#1977]( https://github.com/sofa-framework/sofa/pull/1977 ); - [SofaBaseTopology] Add missing export symbol keyword for TopologySubsetData [#2247]( https://github.com/sofa-framework/sofa/pull/2247 ); - [SofaBaseTopology] Fix TopologySubsetData: call to creation/desctruction callback was missing [#2374]( https://github.com/sofa-framework/sofa/pull/2374 ); - [SofaBaseTopology] use WriteOnlyAccessor in TopologyData [#2414]( https://github.com/sofa-framework/sofa/pull/2414 ); - [SofaBaseVisual] ADD Update callbacks in VisualModelImpl (#1483) [#2245]( https://github.com/sofa-framework/sofa/pull/2245 ); - [SofaBaseVisual] Fix VisualModelImpl updateTextures callback to not call init method [#2298]( https://github.com/sofa-framework/sofa/pull/2298 ); - [SofaBaseVisual] Fix assert [#2417]( https://github.com/sofa-framework/sofa/pull/2417 ); - [SofaBoundaryCondition] Fix ProjectToLineConstraint_RemovingMeshTest.scn [#2241]( https://github.com/sofa,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:147848,Update,Update,147848,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"s the visual representation of our liver.; A node ""Surf"" mapped to the ""Liver"" node by a barycentric mapping, containing the collision model of the liver. Key points. 			In this scene you actually have two kinds of barycentric mappings. A visual barycentric mapping, and a mechanical barycentric mapping.; 			. The visual barycentric mapping concerns the ""Visual"" node (child) and the ""Liver"" node (parent). Here the communication between the parent and the child is only one way. At each time step, the positions of the child are updated knowing the positions and the velocities of the parent and according to the barycentric weights.; 		. Mapping of a visual model to a behaviour model with a barycentric mapping. The mechanical barycentric mapping concerns the ""Surf"" node (child) and the ""Liver"" node (parent). It is this mapping which actually allows you to interact with the object using the mouse. Here the communication works in both ways. Like in a visual mapping, the child positions and velocities are updated knowing their barycentring weights and the parent state vector. On top of that, the interactions (or forces) computed at the level of the child are propagated back to the parent according to the barycentric weights. ; 				. Collision Model (yellow squares) mapped to the behaviour model (white dots) with a tetrahedral topology. Results; ; 		You can interact with the mouse to see how the two barycentric mappings work together in the scene.; . 		With the mouse interaction you can accumlate forces at the level of the collision mechanical object in the ""Surf"" node. These forces are propagated back at the level of the ""Liver"" node using the barycentric mechanical mapping. ; 		. 		The forces computed at the level of the behaviour model - the ""Liver"" node - create a motion, and our liver object now moves. In the ""Visual"" node the visual model now moves in a consistent way with respect to the behaviour model positions and velocities, thanks to the barycentric mapping.; 		. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Mappings/TutorialMappingBarycentric.html:2042,update,updated,2042,examples/Tutorials/Mappings/TutorialMappingBarycentric.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Mappings/TutorialMappingBarycentric.html,1,['update'],['updated']
Deployability,s://github.com/sofa-framework/sofa/pull/1237 ); - [SofaSparseSolver] Move CSparse and metis into SofaSparseSolver [#1357]( https://github.com/sofa-framework/sofa/pull/1357 ). **Plugins / Projects**; - [CGALPlugin] Clean and pluginization [#1308]( https://github.com/sofa-framework/sofa/pull/1308 ); - [Geomagic] Move all code related to device model display in a dedicated class. [#1366]( https://github.com/sofa-framework/sofa/pull/1366 ); - [Geomagic] Fix compilation [#1393]( https://github.com/sofa-framework/sofa/pull/1393 ); - [ManifoldTopologies] Remove CHECK_TOPOLOGY macro occurrences [#1353]( https://github.com/sofa-framework/sofa/pull/1353 ); - [ManifoldTopologies] Update the license in init.cpp [#1414]( https://github.com/sofa-framework/sofa/pull/1414 ); - [OpenCTMPlugin] Fix compilation and clean before moving out [#1359]( https://github.com/sofa-framework/sofa/pull/1359 ); - [PluginExample] Update PluginExample [#1356]( https://github.com/sofa-framework/sofa/pull/1356 ); - [Regression] Update hash [#1321]( https://github.com/sofa-framework/sofa/pull/1321 ); - [SofaSphFluid] Clean SofaFluid plugin compilation warning. [#1296]( https://github.com/sofa-framework/sofa/pull/1296 ). **Examples / Scenes**; - [examples] Fix and remove 3 scenes with deprecated component [#1355]( https://github.com/sofa-framework/sofa/pull/1355 ); - [examples] Remove useless files and add MeshMatrixMass example [#1257]( https://github.com/sofa-framework/sofa/pull/1257 ); - [scenes] Fix scenes from alias [#1292]( https://github.com/sofa-framework/sofa/pull/1292 ); - [scenes] Remove scene warnings due to Rigid template [#1295]( https://github.com/sofa-framework/sofa/pull/1295 ); - [scenes] Fix alias warnings in scenes [#1279]( https://github.com/sofa-framework/sofa/pull/1279 ). ____________________________________________________________. ## [v19.12]( https://github.com/sofa-framework/sofa/tree/v19.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v19.06...v19.12 ). ### Br,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:242411,Update,Update,242411,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"scene, with all the nodes. You can export this graph; into a nice png file.; - the last tab, �Viewer� gives the name and information about; the possibilities of the current viewer, and the shortcuts. Double clicking on a node allows you to modify several values and; change dynamically the simulation (here, the TetrahedronFEMForceField; node). In some cases, you need to press the update button; to apply the changes. Structure ; The main interface uses a Qt; environment (Qt3.3 for Linux and Qt4 for Windows). The Main window,; providing all the interactions possible with the simulation,was created; using QtDesigner. The RealGUI contains the viewer which can be selected; directly in the main window. The possible choices depends on the; configuration file, sofa-default.cfg. The RealGUI gets a pointer to the root of the scene graph, and controls; the application by calling class; sofa::simulation::tree:Simulation.; The RealGUI uses an internal timer to repeatedly call; method sofa::simulation::tree:Simulation::animate(GNode* root, double; dt) and then update the viewer. To select the; viewers:. sofa-default.cfg located in; your Sofa main directory allows to define what kind of viewer you are; willing to have. ; By commenting (adding a�#� in front of the line) or uncommenting; (removing the �#�) lines, you can allow multiple kind of viewer.; For example, if you want to have the choice to render the scene with; QtGLViewer and QtOgreViewer, just modify sofa-default.cfg as below:. # DEFINES += SOFA_GUI_QT ; DEFINES += SOFA_GUI_QTOGREVIEWER; DEFINES += SOFA_GUI_QGLVIEWER. Then, in the main window, you select the kind of viewer you; want. Qt will appear in gray, whereas QGLViewer and Ogre will be; available.; Warning, you must reload the scene when this change is made!. Viewers. The Viewers available now are:. QtViewer: uses openGL, derives a; QGLWidget in order to be embedded within Qt. This class will probably; not be maintained. Use QtGLViewer instead. QtGLViewer: uses the li",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:2647,update,update,2647,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,1,['update'],['update']
Deployability,sofa-framework/sofa/compare/v19.12...v20.06 ). ### Breaking. **Architecture**; - [All] CMake and includes massive clean [#1397]( https://github.com/sofa-framework/sofa/pull/1397 ); - [CMake] Remove the use of an internal Eigen3 version and instead use the one installed on the system. [#1281]( https://github.com/sofa-framework/sofa/pull/1281 ); - [CMake] Remove Collections [#1314]( https://github.com/sofa-framework/sofa/pull/1314 ); - [Modularization] SofaNonUniformFem + SofaAdvanced removal [#1344]( https://github.com/sofa-framework/sofa/pull/1344 ); - [Modularization] SofaValidation [#1302]( https://github.com/sofa-framework/sofa/pull/1302 ). **Modules**; - [All] BaseClass reflection refactoring [#1283]( https://github.com/sofa-framework/sofa/pull/1283 ); - [All] Remove Aspects from Sofa [#1269]( https://github.com/sofa-framework/sofa/pull/1269 ); - [All] Remove compilation warnings related to collision models [#1301]( https://github.com/sofa-framework/sofa/pull/1301 ); - [All] Update code base according to refactoring done in PR1283. [#1330]( https://github.com/sofa-framework/sofa/pull/1330 ); - [All] Remove all deprecation warnings after v1912 [#1241]( https://github.com/sofa-framework/sofa/pull/1241 ); - [All] v19.12 changes + DocBrowser by Defrost [#1275]( https://github.com/sofa-framework/sofa/pull/1275 ); - **[SofaBaseMechanics]** Change data name: handleTopologicalChanges in UniformM [#1291]( https://github.com/sofa-framework/sofa/pull/1291 ); - **[SofaCore/Visual]** Add new functions in drawTool (BREAKING) [#1252]( https://github.com/sofa-framework/sofa/pull/1252 ); - [SofaGeneralEngine] Refresh MeshBarycentricMapperEngine [#1404]( https://github.com/sofa-framework/sofa/pull/1404 ); - **[SofaCore]** ADD directory DataFileNames [#1407]( https://github.com/sofa-framework/sofa/pull/1407 ); - **[SofaKernel]** Refactor DDGNode [#1372]( https://github.com/sofa-framework/sofa/pull/1372 ); - **[SofaKernel]** Totally remove the macro CHECK_TOPOLOGY from BaseMeshTopo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:230112,Update,Update,230112,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,sofa-framework/sofa/pull/1396 ); - **[SofaHelper]** AdvancedTimer wasn't using the good timer ids for the label assignments [#1244]( https://github.com/sofa-framework/sofa/pull/1244 ); - **[SofaHelper]** Fix unloading with PluginManager [#1274]( https://github.com/sofa-framework/sofa/pull/1274 ); - **[SofaHelper]** Fix fixed_array compilation with VS2019 [#1426]( https://github.com/sofa-framework/sofa/pull/1426 ); - **[SofaKernel]** Fix hexahedra detection in BoxROI [#1417]( https://github.com/sofa-framework/sofa/pull/1417 ); - **[SofaKernel]** Fix minor bug in BoxROI and add warning message in RestShapeSpringsForceField [#1391]( https://github.com/sofa-framework/sofa/pull/1391 ); - **[SofaKernel]** Fixes a bug where the camera was not moving with the Qt viewer [#1377]( https://github.com/sofa-framework/sofa/pull/1377 ); - **[SofaKernel]** Improve error message when a component cannot be created. [#1332]( https://github.com/sofa-framework/sofa/pull/1332 ); - **[SofaKernel]** Remove the installation of external system libraries [#1387]( https://github.com/sofa-framework/sofa/pull/1387 ); - **[SofaKernel]** Set default visibility to SOFA_EXPORT_DYNAMIC_LIBRARY [#1410]( https://github.com/sofa-framework/sofa/pull/1410 ); - [SofaMiscTopology] Fix bug in TopologicalChangeProcessor [#1247]( https://github.com/sofa-framework/sofa/pull/1247 ); - **[SofaSimpleFem]** Small Fix [#1403]( https://github.com/sofa-framework/sofa/pull/1403 ); - **[SofaSimulationCore]** FIX resizing of bboxes in UpdateBoundingBoxVisitor [#1268]( https://github.com/sofa-framework/sofa/pull/1268 ); - [SofaTopologyMapping] Fix Tetra2TriangleTopologicalMapping [#1319]( https://github.com/sofa-framework/sofa/pull/1319 ). **Plugins / Projects**; - [Geomagic] Fix several wrong behaviors in driver code [#1378]( https://github.com/sofa-framework/sofa/pull/1378 ); - [MeshSTEPLoader] FIX OCC version check [#1312]( https://github.com/sofa-framework/sofa/pull/1312 ); - [MeshSTEPLoader] FIX build with OCC >= 7.4 [,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:236397,install,installation,236397,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['installation']
Deployability,"sofa/pull/273 ). ### Improvements. **Modules**; - [All]; - update containers to support c++x11 features [#113]( https://github.com/sofa-framework/sofa/pull/113 ); - speed up spheres rendering + code cleaning [#170]( https://github.com/sofa-framework/sofa/pull/170 ); - updates externs/gtest to a fresh checkout [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - auto-init/cleanup libraries [#168]( https://github.com/sofa-framework/sofa/pull/168 ); - Improve and clean msg_api and logging of message (#190, #255, #275). See [documentation](https://www.sofa-framework.org/community/doc/programming-with-sofa/logger/) for more information.; - Add CMake option to limit cores used to build specific targets [#254]( https://github.com/sofa-framework/sofa/pull/254 ); - Fix rgbacolor parsing [#305]( https://github.com/sofa-framework/sofa/pull/305 ); - CMake: installing gtest headers for separate plugin builds [#395]( https://github.com/sofa-framework/sofa/pull/395 ); - [SofaKernel]; - Update the RichConsoleStyleMessageFormatter [#126]( https://github.com/sofa-framework/sofa/pull/126 ); - creation of a defaulttype::RGBAColor [#119]( https://github.com/sofa-framework/sofa/pull/119 ); - add a new method in BaseObjectDescription [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - adding listener mechanism to SceneLoader [#205]( https://github.com/sofa-framework/sofa/pull/205 ); - common usage for DiagonalMass and tests [#230]( https://github.com/sofa-framework/sofa/pull/230 ); - add tests for DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - add tests for DefaultAnimationLoop [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add tests for LocalMinDistance [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - add a way to convert message type to string in Message.cpp [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - MeshSTL.cpp replace a std:cerr by a msg_error so that FIX the corresponding failing test [#213]( https",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:326517,Update,Update,326517,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,sofa/pull/4020); - [GuiQt] Remove some unactivated code [#4025](https://github.com/sofa-framework/sofa/pull/4025); - [constraint] Update PrecomputedConstraintCorrection logs when loading compliance file [#4026](https://github.com/sofa-framework/sofa/pull/4026); - [all] Lifecycle v23.12 2/n [#4040](https://github.com/sofa-framework/sofa/pull/4040); - [GUI.Qt] Remove unused recorder feature [#4041](https://github.com/sofa-framework/sofa/pull/4041); - [MechanicalLoad] Use prefix d_ in DiagonalVelocityDampingForceField [#4046](https://github.com/sofa-framework/sofa/pull/4046); - [all] Lifecycle v23.12 3/n [#4056](https://github.com/sofa-framework/sofa/pull/4056); - [all] Clean unused warnings in SOFA [#4057](https://github.com/sofa-framework/sofa/pull/4057); - [all] Lifecycle v23.12 4/n [#4058](https://github.com/sofa-framework/sofa/pull/4058); - [plugins] Fix OptionGroup deprecated constructor in image and SofaCUDA plugin [#4064](https://github.com/sofa-framework/sofa/pull/4064); - [all] Update code regarding lifecycle in Topology.h [#4065](https://github.com/sofa-framework/sofa/pull/4065); - [all] Fix warnings related to Vec and unused var [#4067](https://github.com/sofa-framework/sofa/pull/4067); - [all] Remove some simple uses of bwdInit() [#4075](https://github.com/sofa-framework/sofa/pull/4075); - [SofaMatrix] Remove CImgPlugin dependency [#4112](https://github.com/sofa-framework/sofa/pull/4112); - [all] Replace deprecated wbloc function by its new function name [#4118](https://github.com/sofa-framework/sofa/pull/4118); - [Core] VecId: set correct message for the deleted function holonomicC [#4120](https://github.com/sofa-framework/sofa/pull/4120); - [IO.Mesh.Tests] Reduce number of logs by unactivating printlog [#4148](https://github.com/sofa-framework/sofa/pull/4148); - [Constraint.Lagrangian.Solver] LCPConstraintSolver: remove useless computation if printLog is enabled [#4170](https://github.com/sofa-framework/sofa/pull/4170); - [Scene] Eigen3-SVD.scn: disable ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:44869,Update,Update,44869,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,splay reference name when pulling external plugins [#4507](https://github.com/sofa-framework/sofa/pull/4507); - [Config] Add TSAN option [#4534](https://github.com/sofa-framework/sofa/pull/4534); - [Project] Start dev phase v24.06 [#4544](https://github.com/sofa-framework/sofa/pull/4544); - [runsofa] Allowing multiple argv [#4591](https://github.com/sofa-framework/sofa/pull/4591); - [GUI] Add ConstraintAttachButtonSetting [#4601](https://github.com/sofa-framework/sofa/pull/4601); - [plugins] Add fetchable ModelOrderReduction [#4608](https://github.com/sofa-framework/sofa/pull/4608); - [GUI.Qt] Add clickable link to online documentation [#4650](https://github.com/sofa-framework/sofa/pull/4650); - [CMake] Start finding Qt6 then Qt5 [#4686](https://github.com/sofa-framework/sofa/pull/4686); - [examples] Use MeshMatrixMass in hyperelastic examples [#4687](https://github.com/sofa-framework/sofa/pull/4687). ### Bug Fixes. - [Geometry] Update method intersectionWithEdge signature and redirect all methods to it in EdgeSetGeometryAlgorithms [#4194](https://github.com/sofa-framework/sofa/pull/4194); - [SofaSPHFluid] Add option in ParticleSource to add/remove random values in the particles generation. Remove noise for CI scenes [#4316](https://github.com/sofa-framework/sofa/pull/4316); - [ODESolver] Fix compilation with SOFA_NO_VMULTIOP [#4325](https://github.com/sofa-framework/sofa/pull/4325); - [Topology.Mapping] Edge2QuadTopologicalMapping: use Links for required QuadSet components [#4361](https://github.com/sofa-framework/sofa/pull/4361); - [MultiThreading] Fix failing test on ParallelImplementationsRegistry [#4392](https://github.com/sofa-framework/sofa/pull/4392); - [Helper] Fix Colormap when using HSV to RGB [#4408](https://github.com/sofa-framework/sofa/pull/4408); - [All] Fix subplugin regression tests [#4420](https://github.com/sofa-framework/sofa/pull/4420); - [sofaInfo] Fix compilation and behavior [#4422](https://github.com/sofa-framework/sofa/pull/4422); - [Core],MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:5315,Update,Update,5315,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,store and update CMake variables and modules [#3011]( https://github.com/sofa-framework/sofa/pull/3011 ); - [SofaHelper] Speedup ReadAccessor conversion operator [#2583]( https://github.com/sofa-framework/sofa/pull/2583 ); - [SofaMiscFEM] Fix TriangleFEMForceField and TriangularFEMForceField to have the same behavior [#2275]( https://github.com/sofa-framework/sofa/pull/2275 ); - [SofaMiscFem] FIX missing Strain Displacement matrix update in TriangularFEMForceField [#2706]( https://github.com/sofa-framework/sofa/pull/2706 ); - [SofaMiscForceField] Fix error while trying to compile a plugin depending on SofaGuiQt [#2707]( https://github.com/sofa-framework/sofa/pull/2707 ); - [SofaMiscForceField][SofaBaseMechanics] Add compile-time conditions to avoid compiling unrealistic cases [#2514]( https://github.com/sofa-framework/sofa/pull/2514 ); - [SofaMiscSolver] Accumulate mapped forces in NewmarkImplicitSolver [#2578]( https://github.com/sofa-framework/sofa/pull/2578 ); - [SofaSparseSolver] Add cmake configuration for Threads [#2739]( https://github.com/sofa-framework/sofa/pull/2739 ); - [SofaSparseSolver] Fix compilation error due to namespace change [#2543]( https://github.com/sofa-framework/sofa/pull/2543 ); - [SofaUserInteraction] Fix compat alias defined in the same scope [#3032]( https://github.com/sofa-framework/sofa/pull/3032 ); - [SolidMechanics] TopologySubsetIndices for RestShapeSpringsForceField [#3037]( https://github.com/sofa-framework/sofa/pull/3037 ); - [StateContainer] Fix VecId names for != V_COORD [#2872]( https://github.com/sofa-framework/sofa/pull/2872 ); - [Topology.Container] Fix save/restoreLastState in draw method were missing [#3143]( https://github.com/sofa-framework/sofa/pull/3143 ). **Plugins / Projects**; - [ArticulatedSystemMapping] Fixed draw method [#3095]( https://github.com/sofa-framework/sofa/pull/3095 ); - [CollisionOBBCapsule] Fix compat for mappers [#2903]( https://github.com/sofa-framework/sofa/pull/2903 ); - [CollisionOBBCapsule] Fi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:113971,configurat,configuration,113971,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['configurat'],['configuration']
Deployability,"t(SOFA_WITH_FLOAT 0); endif(). # Options; option(SOFA_DETECTIONOUTPUT_FREEMOTION ""Compile Sofa with the DETECTIONOUTPUT_FREEMOTION macro defined."" OFF); option(SOFA_NO_UPDATE_BBOX ""Compile Sofa with the SOFA_NO_UPDATE_BBOX macro defined."" OFF); option(SOFA_DUMP_VISITOR_INFO ""Compile Sofa with the SOFA_DUMP_VISITOR_INFO macro defined."" OFF); if(MSVC); option(SOFA_VECTORIZE ""(deprecated) Enable the use of SSE2 instructions by the compiler (Only available for MSVC)."" OFF); option(SOFA_ENABLE_SIMD ""Enable the use of SIMD instructions by the compiler (AVX/AVX2 for msvc, march=native for gcc/clang)."" OFF); endif(); option(SOFA_ENABLE_FAST_MATH ""Enable floating-point model to fast (theoretically faster but can bring unexpected results/bugs)."" OFF). ### SOFA_DEV_TOOL; option(SOFA_WITH_DEVTOOLS ""Compile with development extra features."" ON). # Variables to expose in configured files; sofa_set_01(SOFA_NO_UPDATE_BBOX_ VALUE ${SOFA_NO_UPDATE_BBOX}) # build_option_bbox.h.in. # Create build and install versions of etc/sofa.ini:; # - In build dir, sofa.ini contains absolute paths to distant (in source) share/ and examples/ dirs; # - In install dir, sofa.ini (generated later via installedSofa.ini) contains relative paths to local share/ and examples/ dirs; set(SHARE_DIR ""${CMAKE_SOURCE_DIR}/share""); set(EXAMPLES_DIR ""${CMAKE_SOURCE_DIR}/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/sofa.ini""); set(SHARE_DIR ""../share/sofa""); set(EXAMPLES_DIR ""../share/sofa/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini"" DESTINATION etc RENAME sofa.ini COMPONENT applications). set(SOFACONFIGSRC_ROOT ""src/sofa""); set(HEADER_FILES; ${SOFACONFIGSRC_ROOT}/config.h.in; ${SOFACONFIGSRC_ROOT}/version.h.in; ${SOFACONFIGSRC_ROOT}/url.h.in; ); set(SOURCE_FILES; ${SOFACONFIGSRC_ROOT}/initSofaConfig.cpp # necessary to build a library; ); set(SOFACONFIG_BUILD_OPTIONS_SRC; ${SOFACONFIGSRC_RO",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:3045,install,install,3045,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['install'],['install']
Deployability,tVisitor.h; ${SRC_ROOT}/ExportVisualModelOBJVisitor.h; ${SRC_ROOT}/InitVisitor.h; ${SRC_ROOT}/IntegrateBeginEvent.h; ${SRC_ROOT}/IntegrateEndEvent.h; ${SRC_ROOT}/LocalStorage.h; ${SRC_ROOT}/MechanicalOperations.h; ${SRC_ROOT}/MechanicalVPrintVisitor.h; ${SRC_ROOT}/MechanicalVisitor.h; ${SRC_ROOT}/MutationListener.h; ${SRC_ROOT}/Node.h; ${SRC_ROOT}/Node.inl; ${SRC_ROOT}/ParallelForEach.h; ${SRC_ROOT}/ParallelSparseMatrixProduct.h; ${SRC_ROOT}/ParallelVisitorScheduler.h; ${SRC_ROOT}/PauseEvent.h; ${SRC_ROOT}/PipelineImpl.h; ${SRC_ROOT}/PositionEvent.h; ${SRC_ROOT}/PrintVisitor.h; ${SRC_ROOT}/PropagateEventVisitor.h; ${SRC_ROOT}/RequiredPlugin.h; ${SRC_ROOT}/ResetVisitor.h; ${SRC_ROOT}/SceneLoaderFactory.h; ${SRC_ROOT}/Simulation.h; ${SRC_ROOT}/SimulationLoop.h; ${SRC_ROOT}/SolveVisitor.h; ${SRC_ROOT}/StateChangeVisitor.h; ${SRC_ROOT}/TopologyChangeVisitor.h; ${SRC_ROOT}/UpdateBoundingBoxVisitor.h; ${SRC_ROOT}/UpdateContextVisitor.h; ${SRC_ROOT}/UpdateInternalDataVisitor.h; ${SRC_ROOT}/UpdateLinksVisitor.h; ${SRC_ROOT}/UpdateMappingEndEvent.h; ${SRC_ROOT}/UpdateMappingVisitor.h; ${SRC_ROOT}/VectorOperations.h; ${SRC_ROOT}/VelocityThresholdVisitor.h; ${SRC_ROOT}/Visitor.h; ${SRC_ROOT}/VisitorExecuteFunc.h; ${SRC_ROOT}/VisitorScheduler.h; ${SRC_ROOT}/VisualVisitor.h; ${SRC_ROOT}/WriteStateVisitor.h; ${SRC_ROOT}/XMLPrintVisitor.h; ${SRC_ROOT}/init.h; ${SRC_ROOT}/BaseSimulationExporter.h; ${SRC_ROOT}/TaskScheduler.h; ${SRC_ROOT}/TaskSchedulerFactory.h; ${SRC_ROOT}/TaskSchedulerRegistry.h; ${SRC_ROOT}/DefaultTaskScheduler.h; ${SRC_ROOT}/Task.h; ${SRC_ROOT}/InitTasks.h; ${SRC_ROOT}/Locks.h; ${SRC_ROOT}/MainTaskSchedulerFactory.h; ${SRC_ROOT}/MainTaskSchedulerRegistry.h; ${SRC_ROOT}/SceneCheck.h; ${SRC_ROOT}/SceneCheckRegistry.h; ${SRC_ROOT}/SceneCheckMainRegistry.h; ${SRC_ROOT}/WorkerThread.h; ${SRC_ROOT}/events/BuildConstraintSystemEndEvent.h; ${SRC_ROOT}/events/SimulationInitDoneEvent.h; ${SRC_ROOT}/events/SimulationInitStartEvent.h; ${SRC_ROOT}/events/SimulationInitTextur,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:1817,Update,UpdateLinksVisitor,1817,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,1,['Update'],['UpdateLinksVisitor']
Deployability,teration 2.08; Lloyd_iteration 2.02; Lloyd_iteration 2.04; Lloyd_iteration 2.03; Lloyd_iteration 2.03; Lloyd_iteration 2.08; Lloyd_iteration 2.02; Lloyd_iteration 2.04; Lloyd_iteration 2.02; Lloyd_iteration 2.04; Lloyd_iteration 2.08; Lloyd_iteration 2.02; Lloyd_iteration 2.04; Lloyd_iteration 2.02; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.04; Lloyd_iteration 2.03; Lloyd_iteration 2.02; Lloyd_iteration 2.07; Lloyd_iteration 2.05; Lloyd_iteration 2.03; Lloyd_iteration 2.03; Lloyd_iteration 2.04; Lloyd_iteration 2.07; Lloyd_iteration 2.04; Lloyd_iteration 2.04; Lloyd_iteration 2.03; Lloyd_iteration 2.03; Lloyd_iteration 2.08; Lloyd_iteration 2.04; Lloyd_iteration 2.04; Lloyd_iteration 2.04; Lloyd_iteration 2.02; Lloyd_iteration 2.08; Lloyd_iteration 2.03; Lloyd_iteration 2.03; Lloyd_iteration 2.04; Lloyd_iteration 2.03; Lloyd_iteration 2.08; Lloyd_iteration 2.03; computeUniformSampling: 208.3; computeWeights: 23.72; computeLinearRegionsSampling: 0.45; updateSampleMaterialProperties: 0.04. File: scenes/steak.pscn using steak-seg2.ppm 5 50; Lloyd_iteration 2.06; Lloyd_iteration 2.07; Lloyd_iteration 2.1; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.1; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.08; Lloyd_iteration 2.08; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.04; Lloyd_iteration 2.09; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.1; Lloyd_iteration 2.05; Lloyd_iteration 2.07; Lloyd_iteration 2.05; Lloyd_iteration 2.07; Lloyd_iteration 2.1; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.09; Lloyd_iteration 2.07; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.07; Lloyd_iteration 2.1; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.08; Lloyd_iteration 2.09; Lloyd_i,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:12716,update,updateSampleMaterialProperties,12716,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,teration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.18; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.16; Lloyd_iteration 2.19; Lloyd_iteration 2.13; Lloyd_iteration 2.15; Lloyd_iteration 2.13; Lloyd_iteration 2.15; Lloyd_iteration 2.19; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.18; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.13; Lloyd_iteration 2.21; Lloyd_iteration 2.14; Lloyd_iteration 2.13; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.18; Lloyd_iteration 2.14; Lloyd_iteration 2.13; Lloyd_iteration 2.14; Lloyd_iteration 2.16; Lloyd_iteration 2.16; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.19; Lloyd_iteration 2.15; Lloyd_iteration 2.13; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.18; computeUniformSampling: 229.82; computeWeights: 39.8; computeLinearRegionsSampling: 0.86; updateSampleMaterialProperties: 0.1. File: scenes/steak.pscn using steak-seg2.ppm 10 50; Lloyd_iteration 2.17; Lloyd_iteration 2.14; Lloyd_iteration 2.16; Lloyd_iteration 2.18; Lloyd_iteration 2.13; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.16; Lloyd_iteration 2.18; Lloyd_iteration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.19; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.13; Lloyd_iteration 2.2; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.18; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.18; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.17; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.13; Lloyd_iteration 2.19; Lloyd_iteration 2.16; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.19; Lloyd_iteration 2.14; Llo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:22217,update,updateSampleMaterialProperties,22217,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,teration 2.14; Lloyd_iteration 2.21; Lloyd_iteration 2.14; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.15; Lloyd_iteration 2.19; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.18; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.13; Lloyd_iteration 2.2; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.18; Lloyd_iteration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.13; Lloyd_iteration 2.18; Lloyd_iteration 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.16; Lloyd_iteration 2.13; Lloyd_iteration 2.19; Lloyd_iteration 2.15; Lloyd_iteration 2.13; Lloyd_iteration 2.14; Lloyd_iteration 2.16; Lloyd_iteration 2.16; Lloyd_iteration 2.15; Lloyd_iteration 2.13; Lloyd_iteration 2.13; Lloyd_iteration 2.21; Lloyd_iteration 2.13; Lloyd_iteration 2.15; computeUniformSampling: 229.47; computeWeights: 39.74; computeLinearRegionsSampling: 0.86; updateSampleMaterialProperties: 0.1. File: scenes/steak.pscn using steak-seg2.ppm 10 20; Lloyd_iteration 2.16; Lloyd_iteration 2.18; Lloyd_iteration 2.18; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.16; Lloyd_iteration 2.2; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.14; Lloyd_iteration 2.16; Lloyd_iteration 2.19; Lloyd_iteration 2.16; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.2; Lloyd_iteration 2.16; Lloyd_iteration 2.16; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.2; Lloyd_iteration 2.14; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.2; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.19; Lloyd_iteration 2.16; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.19; Lloyd_iteration 2.16; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_iteration 2.17; Lloyd_iteration 2.16; Lloyd_iteration 2.15; Lloyd_iteration 2.15; Lloyd_,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:19844,update,updateSampleMaterialProperties,19844,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,thub.com/sofa-framework/sofa/pull/782 ); - [All] Remove SOFA_DECL_CLASS and SOFA_LINK_CLASS [#837]( https://github.com/sofa-framework/sofa/pull/837 ); - [All] Remove SOFA_SUPPORT_MOVING_FRAMES and SOFA_SUPPORT_MULTIRESOLUTION [#849]( https://github.com/sofa-framework/sofa/pull/849 ); - **[SofaBaseCollision]** CLEAN CylinderModel [#847]( https://github.com/sofa-framework/sofa/pull/847 ); - **[SofaBaseLinearSolver]** CLEAN GraphScatteredTypes [#844]( https://github.com/sofa-framework/sofa/pull/844 ); - **[SofaFramework]** Various cleaning (non-breaking) [#841]( https://github.com/sofa-framework/sofa/pull/841 ); - **[SofaFramework]** CLEAN: removing unused PS3 files [#851]( https://github.com/sofa-framework/sofa/pull/851 ); - [SofaGeneralSimpleFEM] Clean BeamFemForceField [#846]( https://github.com/sofa-framework/sofa/pull/846 ); - **[SofaHelper]** Change drawTriangle and drawQuad with internal functions [#813]( https://github.com/sofa-framework/sofa/pull/813 ); - **[SofaHelper]** Update ComponentChange with removed Components [#905]( https://github.com/sofa-framework/sofa/pull/905 ); - **[SofaKernel]** Remove commented code since years in SofaBaseMechanics [#733]( https://github.com/sofa-framework/sofa/pull/733 ); - **[SofaKernel]** Move ScriptEvent class from SofaPython to core/objectModel [#764]( https://github.com/sofa-framework/sofa/pull/764 ); - [SofaMiscFem] Clean BaseMaterial::handleTopologyChange [#817]( https://github.com/sofa-framework/sofa/pull/817 ); - [SofaMiscMapping] Clean DeformableOnRigidFrameMapping [#848]( https://github.com/sofa-framework/sofa/pull/848 ); - **[SofaSimpleFem]** Stc clean simplefem [#826]( https://github.com/sofa-framework/sofa/pull/826 ). **Plugins / Projects**; - [Multithreading] Move TaskScheduler files from MultiThreading plugin to SofaKernel [#805]( https://github.com/sofa-framework/sofa/pull/805 ). **Examples / Scenes**; - [examples] Remove scenes about deprecated components [#922]( https://github.com/sofa-framework/sofa/pull/92,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:289165,Update,Update,289165,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"ticular user or of the way in which the particular user; actually uses, or expects or is expected to use, the product. A product; is a consumer product regardless of whether the product has substantial; commercial, industrial or non-consumer uses, unless such uses represent; the only significant mode of use of the product. ""Installation Information"" for a User Product means any methods,; procedures, authorization keys, or other information required to install; and execute modified versions of a covered work in that User Product from; a modified version of its Corresponding Source. The information must; suffice to ensure that the continued functioning of the modified object; code is in no case prevented or interfered with solely because; modification has been made. If you convey an object code work under this section in, or with, or; specifically for use in, a User Product, and the conveying occurs as; part of a transaction in which the right of possession and use of the; User Product is transferred to the recipient in perpetuity or for a; fixed term (regardless of how the transaction is characterized), the; Corresponding Source conveyed under this section must be accompanied; by the Installation Information. But this requirement does not apply; if neither you nor any third party retains the ability to install; modified object code on the User Product (for example, the work has; been installed in ROM). The requirement to provide Installation Information does not include a; requirement to continue to provide support service, warranty, or updates; for a work that has been modified or installed by the recipient, or for; the User Product in which it has been modified or installed. Access to a; network may be denied when the modification itself materially and; adversely affects the operation of the network or violates the rules and; protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided,; in accord with this sec",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:35405,Install,Installation,35405,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['Install'],['Installation']
Deployability,tion 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.54; computeWeights: 8.05; computeLinearRegionsSampling: 0.29; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg2.ppm 3 6; computeUniformSampling: 2.09; computeWeights: 15.09; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 10; computeUniformSampling: 2.08; computeWeights: 15.01; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 20; computeUniformSampling: 2.1; computeWeights: 15.07; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 50; computeUniformSampling: 2.08; computeWeights: 14.87; computeLinearRegionsSampling: 0.25; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 5 6; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.11; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.04; Lloyd_iteration 2.09; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.04; Lloyd_iteration 2.06; Lloyd_iteration 2.09; Lloyd_iteration 2.05; Lloyd_iteration 2.05; Lloyd_iteration 2.05; Lloyd_iteration 2.09; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.1; Lloyd_iteration 2.05; Lloyd_iteration 2.05; Lloyd_iteration 2.04; Lloyd_iteration 2.06; Lloyd_iteration 2.1; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.04; Lloyd_iteration 2.12; Lloyd_iteration 2.04; Lloyd_iteration 2.06; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.09; Lloyd_iteration 2.05; Lloyd_iteration 2.06; Lloyd_iteration 2.05; Lloyd_iteration 2.09; Lloyd,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:5587,update,updateSampleMaterialProperties,5587,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,tion 2.14; Lloyd_iteration 2.14; Lloyd_iteration 2.13; computeUniformSampling: 229.18; computeWeights: 39.73; computeLinearRegionsSampling: 0.87; updateSampleMaterialProperties: 0.1. File: scenes/steak.pscn using steak-seg2.ppm 20 6; Lloyd_iteration 2.42; Lloyd_iteration 2.32; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.37; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.36; Lloyd_iteration 2.35; Lloyd_iteration 2.32; computeUniformSampling: 60.17; computeWeights: 63.02; computeLinearRegionsSampling: 1.62; updateSampleMaterialProperties: 0.26. File: scenes/steak.pscn using steak-seg2.ppm 20 10; Lloyd_iteration 2.34; Lloyd_iteration 2.31; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.3; Lloyd_iteration 2.31; Lloyd_iteration 2.31; Lloyd_iteration 2.35; Lloyd_iteration 2.32; Lloyd_iteration 2.3; Lloyd_iteration 2.3; computeUniformSampling: 59.63; computeWeights: 62.45; computeLinearRegionsSampling: 1.55; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg2.ppm 20 20; Lloyd_iteration 2.36; Lloyd_iteration 2.41; Lloyd_iteration 2.34; Lloyd_iteration 2.33; Lloyd_iteration 2.34; Lloyd_iteration 2.39; Lloyd_iteration 2.33; Lloyd_iteration 2.34; Lloyd_iteration 2.33; Lloyd_iteration 2.36; Lloyd_iteration 2.37; computeUniformSampling: 60.37; computeWeights: 63.36; computeLinearRegionsSampling: 1.61; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg2.ppm 20 50; Lloyd_iteration 2.35; Lloyd_iteration 2.32; Lloyd_iteration 2.33; Lloyd_iteration 2.38; Lloyd_iteration 2.32; Lloyd_iteration 2.32; Lloyd_iteration 2.33; Lloyd_iteration 2.33; Lloyd_iteration 2.36; Lloyd_iteration 2.32; Lloyd_iteration 2.32; computeUniformSampling: 59.97; computeWeights: 62.97; computeLinearRegionsSampling: 1.6; updateSampleMaterialProperties: 0.25. File: scenes/steak.pscn using steak-seg3.ppm 3 6; computeUniformSampling: 17.03; computeWeights: 128.26; computeLinearRegionsSampling:,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:25434,update,updateSampleMaterialProperties,25434,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,"tionTopology crash at init if mesh file is not found [#4164](https://github.com/sofa-framework/sofa/pull/4164); - [Topology] Rename Edge::pointBaryCoefs into Edge::getBarycentricCoordinates [#4165](https://github.com/sofa-framework/sofa/pull/4165); - [LinearSolver.Direct] SparseLDL: Fix crash in addJMInvJtLocal [#4180](https://github.com/sofa-framework/sofa/pull/4180); - [Helper] Fix warning in MeshTopologyLoader.cpp [#4181](https://github.com/sofa-framework/sofa/pull/4181); - [examples] Fix warning of UncoupledCC in caduceus [#4187](https://github.com/sofa-framework/sofa/pull/4187); - [LinearSystem] MatrixLinearSystem: add registration in the factory for BTDMatrix6 [#4189](https://github.com/sofa-framework/sofa/pull/4189); - [SofaCarving] Fix warnings in SofaCarving_test due to use of deprecated methods [#4193](https://github.com/sofa-framework/sofa/pull/4193); - [GUI.Qt] Fix libQGLViewer cmake install [#4198](https://github.com/sofa-framework/sofa/pull/4198); - [Helper] Update ComponentChange for MechanicalMatrixMapper [#4235](https://github.com/sofa-framework/sofa/pull/4235); - [LinearAlgebra] Robustify accesses to empty matrices [#4236](https://github.com/sofa-framework/sofa/pull/4236); - [Topology] Check indices out-of-bound in TriangleSetTopologyContainer [#4242](https://github.com/sofa-framework/sofa/pull/4242); - [github] Fix name of PR author in GitHub workflows [#4267](https://github.com/sofa-framework/sofa/pull/4267); - [SofaCUDA] Dont use both version of cublas (legacy or v2) [#4274](https://github.com/sofa-framework/sofa/pull/4274); - [Sofa.GUI.Qt] Add cmake module for QGLViewer [#4290](https://github.com/sofa-framework/sofa/pull/4290); - [all] Fix warnings [#4291](https://github.com/sofa-framework/sofa/pull/4291); - [LinearAlgera, Core] Fix linking with LTO on MacOS/Clang [#4293](https://github.com/sofa-framework/sofa/pull/4293); - [MultiThreading] Avoid Static Initialization Order Fiasco [#4307](https://github.com/sofa-framework/sofa/pull/4307); - [So",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:37318,Update,Update,37318,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"torial, a cube is represented, implying:; 	 ; A mesh loader to read mesh file. (not necessary in regular mesh); A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A FEM forcefield to create interactions between points; An ODE scheme and a linear solver to solve the system at each time step.; Dynamic topological components.; A visual model which reproduces the current model geometry thanks to the identity mapping. Key points. 	Under the first node representing the hexahedra, a second node is used to represent the quad topology.; 	; 	This second representation won't reproduce all quads of the hexahedra topology, but only quads on the mesh borders. I.e quads with only one adjacent hexahedron. This process is similar to the Tetra2TriangleTopologicalMapping.; 	; 	Edges of hexahedra are represented in yellow in the simulation, whereas the visual model is based on the quads. Thus, display the scene in wire frame to see hexahedra and quads (in green).; 	. 	To create this mapping, the component Hexa2QuadTopologicalMapping is used. This component takes an input topology (Data Object1) which is the container of the ""upper"" topology (hexahedron here) and has an output topology (Data Object2) which is the container of the above topology (quad here).; 	. Results. 	As explained, the visual model uses the output topology (quads) to render the surface model.; 	; 	You can try to use directly the quads created in the HexahedronSetTopologyContainer for the ogl model. The result will be a cube with quads displayed inside the volume.; 	. 	Finally try to remove the HexahedronFEMForceField or QuadularBendingSprings component. The result will be a bad behavior of the cube.; 	. Additional results. 	 When deleting quads (Shift + right click during the simulation), the topological mapping is updated. Thus, hexahedrons behind the selected quad will be deleted as well. Then, the list of quads on the border will be updated and the surface rendering also.; 	. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyDynamicSurfaceMesh.html:2018,update,updated,2018,examples/Tutorials/Topologies/TopologyDynamicSurfaceMesh.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyDynamicSurfaceMesh.html,2,['update'],['updated']
Deployability,tps://github.com/sofa-framework/sofa/pull/1323 ); - **[SofaBaseTopology]**[SofaExporter] Fix failing tests due to changes in topology [#1335]( https://github.com/sofa-framework/sofa/pull/1335 ); - [SofaConstraint] Fix test further to #1369 [#1386]( https://github.com/sofa-framework/sofa/pull/1386 ); - **[SofaEigen2Solver]** Fix CMake test on the version of Eigen [#1416]( https://github.com/sofa-framework/sofa/pull/1416 ); - **[SofaEngine]** Fix engine unit tests [#1280]( https://github.com/sofa-framework/sofa/pull/1280 ); - **[SofaEngine]** Fix Engine_test [#1338]( https://github.com/sofa-framework/sofa/pull/1338 ); - **[SofaFramework]** Windows/VS: Remove warnings flags from definitions [#1368]( https://github.com/sofa-framework/sofa/pull/1368 ); - [SofaGuiQt] Fix compilation for SOFA_DUMP_VISITOR_INFO [#1415]( https://github.com/sofa-framework/sofa/pull/1415 ); - [SofaGuiQt] Fix node graph [#1424]( https://github.com/sofa-framework/sofa/pull/1424 ); - [SofaHeadlessRecorder] Update headless recorder to use the new ffmpeg recorder [#1396]( https://github.com/sofa-framework/sofa/pull/1396 ); - **[SofaHelper]** AdvancedTimer wasn't using the good timer ids for the label assignments [#1244]( https://github.com/sofa-framework/sofa/pull/1244 ); - **[SofaHelper]** Fix unloading with PluginManager [#1274]( https://github.com/sofa-framework/sofa/pull/1274 ); - **[SofaHelper]** Fix fixed_array compilation with VS2019 [#1426]( https://github.com/sofa-framework/sofa/pull/1426 ); - **[SofaKernel]** Fix hexahedra detection in BoxROI [#1417]( https://github.com/sofa-framework/sofa/pull/1417 ); - **[SofaKernel]** Fix minor bug in BoxROI and add warning message in RestShapeSpringsForceField [#1391]( https://github.com/sofa-framework/sofa/pull/1391 ); - **[SofaKernel]** Fixes a bug where the camera was not moving with the Qt viewer [#1377]( https://github.com/sofa-framework/sofa/pull/1377 ); - **[SofaKernel]** Improve error message when a component cannot be created. [#1332]( https:,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:235312,Update,Update,235312,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,tps://github.com/sofa-framework/sofa/pull/2362 ); - [SofaGeneralDeformable] Remove TopologyHandler in FEM to use TopologyData callbacks (part 2) [#2388]( https://github.com/sofa-framework/sofa/pull/2388 ); - [SofaGeneralDeformable] Remove TopologyHandler in FEM to use TopologyData callbacks (part 3) [#2389]( https://github.com/sofa-framework/sofa/pull/2389 ); - [SofaGeneralEngine] Cleaning of MeshBoundaryROI [#2319]( https://github.com/sofa-framework/sofa/pull/2319 ); - [SofaGeneralSimpleFem] Add comments and tests for TriangularFEMForceFieldOptim [#2284]( https://github.com/sofa-framework/sofa/pull/2284 ); - [SofaGeneralSimpleFem] Remove TopologyHandler in FEM to use TopologyData callbacks (part 1) [#2384]( https://github.com/sofa-framework/sofa/pull/2384 ); - [SofaGuiGlut] Unreachable break [#2405]( https://github.com/sofa-framework/sofa/pull/2405 ); - [SofaGuiQt] Get rid of magic numbers when centering the window [#2466]( https://github.com/sofa-framework/sofa/pull/2466 ); - [SofaHelper] replace infinite loop Update PipeProcess.cpp [#2477]( https://github.com/sofa-framework/sofa/pull/2477 ); - [SofaHelper] Remove boost::thread dependency [#2264]( https://github.com/sofa-framework/sofa/pull/2264 ); - [SofaHelper_test] Remove temporary file in FileMonitor_test [#2537]( https://github.com/sofa-framework/sofa/pull/2537 ); - [SofaKernel] change data content copy on write condition [#2285]( https://github.com/sofa-framework/sofa/pull/2285 ); - [SofaMiscFEM] Small optimizations on TriangularFEMForceField (speedup ~x1.6) [#2273]( https://github.com/sofa-framework/sofa/pull/2273 ); - [SofaMiscFem] Minor homogeneization in TriangleFEMFF [#2408]( https://github.com/sofa-framework/sofa/pull/2408 ); - [SofaMiscFem] Remove TopologyHandler in FEM to use TopologyData callbacks (part 4) [#2390]( https://github.com/sofa-framework/sofa/pull/2390 ); - [SofaMiscFem] Remove debug code [#2420]( https://github.com/sofa-framework/sofa/pull/2420 ); - [SofaMiscFem] Remove unnecessary copy/p,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:160627,Update,Update,160627,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,tps://github.com/sofa-framework/sofa/pull/3706) ; - [GUI.Qt] Register meta type to fix asynchronous Qt call [#3749](https://github.com/sofa-framework/sofa/pull/3749) ; - [Tests] S.Components tests compiles with SReal=float [#3755](https://github.com/sofa-framework/sofa/pull/3755) ; - [Mapping.NonLinear] Fix SquareMapping applyDJT [#3761](https://github.com/sofa-framework/sofa/pull/3761); - [LinearAlgebra] Restore insertion operator for BaseVector [#3775](https://github.com/sofa-framework/sofa/pull/3775) ; - [StateContainer] Fix bug in dynamic data registration [#3783](https://github.com/sofa-framework/sofa/pull/3783) ; - [Rendering3D] Missing StateLifeCycle [#3784](https://github.com/sofa-framework/sofa/pull/3784) ; - [Mapping.Nonlinear] Fix matrix assembly in RigidMapping [#3803](https://github.com/sofa-framework/sofa/pull/3803) ; - [Visual] VisualModelImpl: Fix updateVisual() [#3815](https://github.com/sofa-framework/sofa/pull/3815) ; - [LinearSolver.Iterative] CMake: Fix package configuration [#3840](https://github.com/sofa-framework/sofa/pull/3840) ; - [Rendering3D] OglModel: Revert back to glBufferSubData [#3841](https://github.com/sofa-framework/sofa/pull/3841) ; - [SolidMechanics.Spring] CMake: Fix package configuration [#3846](https://github.com/sofa-framework/sofa/pull/3846) ; - [Spring] Remove unused dependencies [#3848](https://github.com/sofa-framework/sofa/pull/3848) ; - [FEM.Linear] FIX & Minor refactor of buildStiffnessMatrix in TriangleFEMForceField [#3989](https://github.com/sofa-framework/sofa/pull/3989). **Plugins / Projects**; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid2D [#3561](https://github.com/sofa-framework/sofa/pull/3561) ; - [MultiThreading] ParallelBruteForceBroadPhase: Fix assertion error [#3574](https://github.com/sofa-framework/sofa/pull/3574) ; - [image] Fix Sofa.GUI dependency [#3591](https://github.com/sofa-framework/sofa/pull/3591) ; - [SofaCUDA] Missing support for double precision floating-points [#3603](https://gi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:58948,configurat,configuration,58948,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['configurat'],['configuration']
Deployability,tps://github.com/sofa-framework/sofa/pull/562 ); - [Meshconv]; - fix build if no miniflowVR [#358]( https://github.com/sofa-framework/sofa/pull/358 ); - [MultiThreading]; - FIX: examples installation [#299]( https://github.com/sofa-framework/sofa/pull/299 ); - Fix build with Boost 1.64.0 [#359]( https://github.com/sofa-framework/sofa/pull/359 ); - FIX Windows dll loading [#507]( https://github.com/sofa-framework/sofa/pull/507 ); - [runSofa]; - FIX plugin config copy on Windows [#451]( https://github.com/sofa-framework/sofa/pull/451 ); - remove non-ASCII chars in string [#327]( https://github.com/sofa-framework/sofa/pull/327 ); - FIX PluginRepository initialization [#502]( https://github.com/sofa-framework/sofa/pull/502 ); - [SofaCUDA]; - Fix compilation problem with cuda. [#320]( https://github.com/sofa-framework/sofa/pull/320 ); - Fix: Headers of the SofaCUDA plugin are now installed in the include folder [#383]( https://github.com/sofa-framework/sofa/pull/383 ); - FIX Configuration/compilation issue with CUDA plugin [#523]( https://github.com/sofa-framework/sofa/pull/523 ); - Fix linearforcefield that disappears [#525]( https://github.com/sofa-framework/sofa/pull/525 ); - [SofaGui]; - FIX draw scenes on classical and retina screens [#311]( https://github.com/sofa-framework/sofa/pull/311 ); - Fixes #183 : Use the qt menu instead of the native one in Mac OS [#366]( https://github.com/sofa-framework/sofa/pull/366 ); - fix ImageBMP issue + remove Laparoscopic stuff [#499]( https://github.com/sofa-framework/sofa/pull/499 ); - Pickhandler minor fixs [#522]( https://github.com/sofa-framework/sofa/pull/522 ); - Fix: Intel graphics on linux now overrides the core profile context [#526]( https://github.com/sofa-framework/sofa/pull/526 ); - [SofaImplicitField]; - Fix package configuration [#422]( https://github.com/sofa-framework/sofa/pull/422 ); - [SofaPhysicsAPI]; - FIX: compilation due to Sofa main API changes [#549]( https://github.com/sofa-framework/sofa/pull/549 ); - [,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:318724,Configurat,Configuration,318724,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Configurat'],['Configuration']
Deployability,traint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearMovementProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearVelocityProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LinearVelocityProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/OscillatorProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/OscillatorProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ParabolicProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/ParabolicProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialFixedProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialFixedProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialLinearMovementProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PartialLinearMovementProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PatchTestMovementProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PatchTestMovementProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PositionBasedDynamicsProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PositionBasedDynamicsProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/SkeletalMotionProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/SkeletalMotionProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LineProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/LineProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PlaneProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PlaneProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PointProjectiveConstraint.h; ${SOFACOMPONENTCONSTRAINTPROJECTIVE_SOURCE_DIR}/PointProjectiveConstraint.inl; ${SOFACOMPONENTCONSTRAINTPROJECTI,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Projective/CMakeLists.txt:5584,Patch,PatchTestMovementProjectiveConstraint,5584,Sofa/Component/Constraint/Projective/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/Constraint/Projective/CMakeLists.txt,1,['Patch'],['PatchTestMovementProjectiveConstraint']
Deployability,"tructure; III) Viewers; IV) QtOgreViewer; . An Overview of the GUI. The main; program is divided in two main parts, a rendering window and a control; panel. A slider between them sets their; dimension. Common Interactions:. ANIM: launch the Simulation.; The text field, DTsets the step of time used during the; simulation. STEP: the simulation will; compute its state at the time: t+DT. Reset Scene: reset the; Simulation to the initial time, t=0. Reset View: set your camera at; initial configuration found in a view file, or default; configuration. Save View: keep in memory the; position and orientation of the camera, for the next time you will load; the scene. Save Screenshot: take a picture; of the current scene. Direct interaction with the scene is; possible. To do so, maintain SHIFT button pressed and click on a; collision model present in the scene; A �Pick Interactor� will be; created, and attached to the picked collision model, if any, with a; spring. ; If; you release the mouse button first, the spring is removed.; If; you release the SHIFT button first, the spring is fixed and exists; until you pick another point in the scene. Several tabs give more information; about the current scene: ; This images were taken for the scene shown above. . - depending on the viewer, you can control what is displayed, and the; way it is. ; - statistical outputs during the simulation (position and velocity for; each elements, time passed at each branch of the graph, gnuplot files); ; - the graph of the scene, with all the nodes. You can export this graph; into a nice png file.; - the last tab, �Viewer� gives the name and information about; the possibilities of the current viewer, and the shortcuts. Double clicking on a node allows you to modify several values and; change dynamically the simulation (here, the TetrahedronFEMForceField; node). In some cases, you need to press the update button; to apply the changes. Structure ; The main interface uses a Qt; environment (Qt3.3 for Lin",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:1050,release,release,1050,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,1,['release'],['release']
Deployability,"ts and Task scheduler classes refactoring [#745]( https://github.com/sofa-framework/sofa/pull/745 ); - [MultiThreading] Add Image plugin Data types in DataExchange component [#770]( https://github.com/sofa-framework/sofa/pull/770 ); - [MultiThreading] TaskScheduler Interface [#775]( https://github.com/sofa-framework/sofa/pull/775 ); - [runSofa] Add data field value change on mouse move [#750]( https://github.com/sofa-framework/sofa/pull/750 ); - [SofaCarving] Refresh and enhancement [#712]( https://github.com/sofa-framework/sofa/pull/712 ); - [SofaCarving] plugin enhancement [#787]( https://github.com/sofa-framework/sofa/pull/787 ); - [SofaPython] ADD forwarding of onMouseMove event into the script controller [#731]( https://github.com/sofa-framework/sofa/pull/731 ); - [SofaPython] ADD: Bindings for BoundingBox [#736]( https://github.com/sofa-framework/sofa/pull/736 ); - [SofaPython][PSDE] Psde derive io [#742]( https://github.com/sofa-framework/sofa/pull/742 ); - [SofaPython][PSDE] Update on demand as designed initially [#751]( https://github.com/sofa-framework/sofa/pull/751 ); - [SofaPython] ADD a custom __dir__ method in Binding_Base. [#762]( https://github.com/sofa-framework/sofa/pull/762 ); - [SofaPython] add getLinkedBase to the binding of a link. [#843]( https://github.com/sofa-framework/sofa/pull/843 ); - [SofaPython] ADD binding python to getCategories [#868]( https://github.com/sofa-framework/sofa/pull/868 ). ### Bug Fixes. **Architecture**; - [CMake] FIX: cyclic recursion [#766]( https://github.com/sofa-framework/sofa/pull/766 ); - [CMake] Backport fixes [#791]( https://github.com/sofa-framework/sofa/pull/791 ); - [CMake] Fix compilation issues due to CPackNSIS [#867]( https://github.com/sofa-framework/sofa/pull/867 ); - [CMake] Add check to prevent the inclusion of non-existant file in cmake 3.13 [#897]( https://github.com/sofa-framework/sofa/pull/897 ). **Modules**; - [All] ISSofa bugfix, lot of fixes [#756]( https://github.com/sofa-framework/sofa/pull/7",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:283023,Update,Update,283023,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,ub.com/sofa-framework/sofa/pull/1183 ); - [All] Remove ExtVecType [#1055]( https://github.com/sofa-framework/sofa/pull/1055 ); - [All] up change on GetMeshTopology [#1223]( https://github.com/sofa-framework/sofa/pull/1223 ); - [SofaBoundaryConditions] Apply doInternalUpdate API to ConstantForceField [#1145]( https://github.com/sofa-framework/sofa/pull/1145 ); - **[SofaKernel]** Replacing const char* with strings for group / help / widget etc. [#1152]( https://github.com/sofa-framework/sofa/pull/1152 ); - **[SofaKernel]** ADD: static method in events to retrieve the classname [#1118]( https://github.com/sofa-framework/sofa/pull/1118 ); - **[SofaKernel]** Set BaseData to non-persistant by default [#1191]( https://github.com/sofa-framework/sofa/pull/1191 ); - **[SofaKernel]** fix root's getPathName [#1146]( https://github.com/sofa-framework/sofa/pull/1146 ). ### Improvements. **Architecture**; - [CMake] v19.06 changes [#1114]( https://github.com/sofa-framework/sofa/pull/1114 ); - [extlibs] Set Eigen as external project + upgrade to 3.2.10 [#1101]( https://github.com/sofa-framework/sofa/pull/1101 ); - [extlibs] Upgrade Qwt extlib from 6.1.2 to 6.1.4 [#1136]( https://github.com/sofa-framework/sofa/pull/1136 ). **Modules**; - [All] Add SingleLink to Topology to reveal hidden GetMeshTopology Part 2 [#1199]( https://github.com/sofa-framework/sofa/pull/1199 ); - [All] Add update internal mechanism [#1131]( https://github.com/sofa-framework/sofa/pull/1131 ); - [All] Update the SOFA Guidelines [#1135]( https://github.com/sofa-framework/sofa/pull/1135 ); - **[SofaBaseMechanics]** Add topological change in barycentric mapping [#1203]( https://github.com/sofa-framework/sofa/pull/1203 ); - **[SofaBaseMechanics]** Use doUpdateInternal API in DiagonalMass [#1150]( https://github.com/sofa-framework/sofa/pull/1150 ); - **[SofaBaseMechanics]** Use doUpdateInternal API in UniformMass [#1149]( https://github.com/sofa-framework/sofa/pull/1149 ); - **[SofaBaseTopology]** Add new geometric ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:244797,upgrade,upgrade,244797,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['upgrade'],['upgrade']
Deployability,"ub.com/sofa-framework/sofa/pull/1947 ); - **[SofaBaseTopology]** Remove public access to propagateTopologyChanges [#1860]( https://github.com/sofa-framework/sofa/pull/1860 ); - **[SofaBaseTopology]** Rename TopologyEngine and TopologyData classes to match file names [#1872]( https://github.com/sofa-framework/sofa/pull/1872 ); - **[SofaBaseTopology]** Secure All Topology modifiers API [#1859]( https://github.com/sofa-framework/sofa/pull/1859 ); - **[SofaBaseTopology]** Secure PointSetTopologyModifier API [#1858]( https://github.com/sofa-framework/sofa/pull/1858 ); - **[SofaBaseTopology]** Totally remove topologyEngine and move mechanism only in TopologyData and TopologyHandler [#1898]( https://github.com/sofa-framework/sofa/pull/1898 ); - **[SofaCore]** Base::findLinkDest returns Base* instead of void* [#1700]( https://github.com/sofa-framework/sofa/pull/1700 ); - **[SofaCore]** FIX SingleLink clear/set behavior [#1749]( https://github.com/sofa-framework/sofa/pull/1749 ); - **[SofaCore]** Move definition of Link::updateLinks to BaseLink.h [#1735]( https://github.com/sofa-framework/sofa/pull/1735 ); - **[SofaCore]** Moves MechanicaMatrix out of MultiMatrix.h [#1870]( https://github.com/sofa-framework/sofa/pull/1870 ); - **[SofaCore]** Remove ""depend"" from Node [#1763]( https://github.com/sofa-framework/sofa/pull/1763 ); - **[SofaCore]** isDiagonal is const [#1903]( https://github.com/sofa-framework/sofa/pull/1903 ); - [SofaExplicitOdeSolver] Introduce visitor to know the number of non-diagonal mass matrices [#2165]( https://github.com/sofa-framework/sofa/pull/2165 ); - [SofaGeneralSimpleFem] Remove \*Containers [#2099]( https://github.com/sofa-framework/sofa/pull/2099 ); - **[SofaHelper]** Add two search paths for every prefixes of the plugin manager [#1824]( https://github.com/sofa-framework/sofa/pull/1824 ); - **[SofaHelper]** Move polygon cube intersection ad-hoc algorithm to SofaBaseTopology [#1772]( https://github.com/sofa-framework/sofa/pull/1772 ); - **[SofaHelp",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:173726,update,updateLinks,173726,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['updateLinks']
Deployability,ub.com/sofa-framework/sofa/pull/2041 ); - **[SofaCore]** Move the streaming operator from .h to .cpp [#1751]( https://github.com/sofa-framework/sofa/pull/1751 ); - **[SofaCore]** Reduce the needs for include in Node.h [#1744]( https://github.com/sofa-framework/sofa/pull/1744 ); - **[SofaCore]** Remove empty file [#2204]( https://github.com/sofa-framework/sofa/pull/2204 ); - **[SofaCore_simutest]** Add tests for Link::CheckPath [#1714]( https://github.com/sofa-framework/sofa/pull/1714 ); - **[SofaCore_test]** Update the two failling tests so they match the new convention for TypeInfo [#1709]( https://github.com/sofa-framework/sofa/pull/1709 ); - **[SofaExplicitOdeSolver]** Mark Data as disabled [#2218]( https://github.com/sofa-framework/sofa/pull/2218 ); - [SofaExporter] Remove SofaBaseVisual dependency [#2039]( https://github.com/sofa-framework/sofa/pull/2039 ); - [SofaExporter] Removed duplicated header guard [#1954]( https://github.com/sofa-framework/sofa/pull/1954 ); - [SofaExporter] Update OBJExporter example [#1782]( https://github.com/sofa-framework/sofa/pull/1782 ); - **[SofaFramework/Sofa.Testing]** remove macro and move testing resources from SofaFramework [#2000]( https://github.com/sofa-framework/sofa/pull/2000 ); - **[SofaFramework]** Remove warnings (a lot) [#1876]( https://github.com/sofa-framework/sofa/pull/1876 ); - [SofaGeneralEngine] Add option in NearestPointROI to use restPosition or position [#1978]( https://github.com/sofa-framework/sofa/pull/1978 ); - [SofaGeneralEngine] Remove dep on IdentityMapping (because of helper::eq) [#2090]( https://github.com/sofa-framework/sofa/pull/2090 ); - [SofaGeneralMeshCollision] Introduce RayTraceNarrowPhase [#2145]( https://github.com/sofa-framework/sofa/pull/2145 ); - [SofaGuiCommon] Clean includes [#2064]( https://github.com/sofa-framework/sofa/pull/2064 ); - [SofaGuiQt] FIX warning in GraphListenerQListView [#2091]( https://github.com/sofa-framework/sofa/pull/2091 ); - **[SofaHelper]** Clarify with global n,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:202234,Update,Update,202234,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,ub.com/sofa-framework/sofa/pull/2300 ); - [SofaCore] Add const version of getMSState to Mass [#2293]( https://github.com/sofa-framework/sofa/pull/2293 ); - [SofaCore] Clearer message when template parameter is not compatible with current context [#2262]( https://github.com/sofa-framework/sofa/pull/2262 ); - [SofaCore] Required data msg now depends on existing default value [#2527]( https://github.com/sofa-framework/sofa/pull/2527 ); - [SofaDefaultType] Introduce test interface for BaseMatrix [#2280]( https://github.com/sofa-framework/sofa/pull/2280 ); - [SofaGeneralAnimationLoop] More optimization on MechanicalMatrixMapper [#2411]( https://github.com/sofa-framework/sofa/pull/2411 ); - [SofaGeneralAnimationLoop] Remove matrix compression [#2367]( https://github.com/sofa-framework/sofa/pull/2367 ); - [SofaGeneralDeformable] Add option to enable/disable spring display in TriangularBendingSprings [#2297]( https://github.com/sofa-framework/sofa/pull/2297 ); - [SofaGeneralSimpleFem] Update BeamFEMForceField topologyHander and add tests [#2382]( https://github.com/sofa-framework/sofa/pull/2382 ); - [SofaGraphComponent] Restore check of deprecated components [#2267]( https://github.com/sofa-framework/sofa/pull/2267 ); - [SofaGuiQt] Introduce expand/collapse buttons [#2322]( https://github.com/sofa-framework/sofa/pull/2322 ); - [SofaGuiQt] Introduce expand/collapse buttons in profiler [#2351]( https://github.com/sofa-framework/sofa/pull/2351 ); - [SofaGuiQt] Multiple selection of timers in the profiler [#2141]( https://github.com/sofa-framework/sofa/pull/2141 ); - [SofaGuiQt] UX: graph is easier to read [#2356]( https://github.com/sofa-framework/sofa/pull/2356 ); - [SofaHelper] Add a method getTrace() to BackTrace class. [#2341]( https://github.com/sofa-framework/sofa/pull/2341 ); - [SofaHelper] Factory key type can be other than std::string [#2259]( https://github.com/sofa-framework/sofa/pull/2259 ); - [SofaMiscFEM_test] Add class to test and compare TriangleFEM and Triangu,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:141648,Update,Update,141648,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,ull/1140 ); - [SofaExporter] Move bindings from SofaPython [#1095]( https://github.com/sofa-framework/sofa/pull/1095 ); - **[SofaFramework]** Add other orders for fromEuler() for Quaternions. [#1221]( https://github.com/sofa-framework/sofa/pull/1221 ); - **[SofaFramework]** Install the SofaSimulationCore target back into the SofaFramework package [#1182]( https://github.com/sofa-framework/sofa/pull/1182 ); - [SofaGuiQt] Fix unexpected symbol in CMakeLists [#1132]( https://github.com/sofa-framework/sofa/pull/1132 ); - [SofaGui] FIX missing find_package in SofaGuiConfig.cmake.in [#1198]( https://github.com/sofa-framework/sofa/pull/1198 ); - [SofaGui] Fix VideoRecorder [#1138]( https://github.com/sofa-framework/sofa/pull/1138 ); - [SofaGui] Prevent the GuiManager to store a pointer for the valid gui name [#1108]( https://github.com/sofa-framework/sofa/pull/1108 ); - [SofaHeadlessRecorder] FIX headlessRecorder_test [#1174]( https://github.com/sofa-framework/sofa/pull/1174 ); - **[SofaHelper]** FIX Eigen install path [#1240]( https://github.com/sofa-framework/sofa/pull/1240 ); - **[SofaKernel]** Add bloc access in basematrix [#1143]( https://github.com/sofa-framework/sofa/pull/1143 ); - **[SofaKernel]** Changes for Visual Studio and c++17 [#1162]( https://github.com/sofa-framework/sofa/pull/1162 ); - **[SofaKernel]** FIX regex in SofaMacros.cmake [#1161]( https://github.com/sofa-framework/sofa/pull/1161 ); - **[SofaKernel]** Fix alloc size [#1142]( https://github.com/sofa-framework/sofa/pull/1142 ); - **[SofaKernel]** Fix some AdvanceTimer log missing [#1158]( https://github.com/sofa-framework/sofa/pull/1158 ); - **[SofaKernel]** Fix useless warnings [#1144]( https://github.com/sofa-framework/sofa/pull/1144 ); - **[SofaKernel]** Several fix in draw methods and topology warnings [#1111]( https://github.com/sofa-framework/sofa/pull/1111 ); - **[SofaKernel]** Small Fix in CollisionModel [#1202]( https://github.com/sofa-framework/sofa/pull/1202 ); - **[SofaKernel]** Use links,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:251062,install,install,251062,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['install'],['install']
Deployability,"ull/2675 ); - [SofaCUDA] Fail gracefully if no cuda device found [#3087]( https://github.com/sofa-framework/sofa/pull/3087 ); - [SofaCUDA] Fix compilation for SOFA_GPU_CUDA_DOUBLE [#2863]( https://github.com/sofa-framework/sofa/pull/2863 ); - [SofaCUDA] Fix some namespace, headers includes and decl exports [#3003]( https://github.com/sofa-framework/sofa/pull/3003 ); - [SofaCUDA] Fix symbol definition at run time and compilation error [#2634]( https://github.com/sofa-framework/sofa/pull/2634 ); - [SofaCUDA] Ignore CudaTLED-related scene on the CI [#2893]( https://github.com/sofa-framework/sofa/pull/2893 ); - [SofaCUDA] Restore CudaHexahedronFEMForceField [#2535]( https://github.com/sofa-framework/sofa/pull/2535 ); - [SofaCUDA] Rework and move benchmark scenes for HexahedronFEMForceField and TetrahedronFEMForceField [#2561]( https://github.com/sofa-framework/sofa/pull/2561 ); - [SofaCUDA] fix HexahedronFEMForceField double compilation [#3081]( https://github.com/sofa-framework/sofa/pull/3081 ); - [SofaCUDA] update .scene-tests files to fix tests on dashboard [#2616]( https://github.com/sofa-framework/sofa/pull/2616 ); - [SofaCUDA] FIX linking error : needed the code of the destructor [#2708]( https://github.com/sofa-framework/sofa/pull/2708 ); - [SofaCUDA] Forward declaration in wrong namespace [#2923]( https://github.com/sofa-framework/sofa/pull/2923 ); - [SofaMatrix] Move CI setting to the plugin folder [#2579]( https://github.com/sofa-framework/sofa/pull/2579 ); - [SofaNewMat] Fix compilation [#2829]( https://github.com/sofa-framework/sofa/pull/2829 ); - [SofaSphFluid] Fix ParticleSource topologicalChanges use new callbacks mechanism [#2868]( https://github.com/sofa-framework/sofa/pull/2868 ); - [image] fix shadow variable [#2606]( https://github.com/sofa-framework/sofa/pull/2606 ); - [image] remove shadow variable [#2910]( https://github.com/sofa-framework/sofa/pull/2910 ); - [runSofa] Clean up in case GUI init fails [#3106]( https://github.com/sofa-framework/sofa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:116283,update,update,116283,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['update'],['update']
Deployability,"vided in two main parts, a rendering window and a control; panel. A slider between them sets their; dimension. Common Interactions:. ANIM: launch the Simulation.; The text field, DTsets the step of time used during the; simulation. STEP: the simulation will; compute its state at the time: t+DT. Reset Scene: reset the; Simulation to the initial time, t=0. Reset View: set your camera at; initial configuration found in a view file, or default; configuration. Save View: keep in memory the; position and orientation of the camera, for the next time you will load; the scene. Save Screenshot: take a picture; of the current scene. Direct interaction with the scene is; possible. To do so, maintain SHIFT button pressed and click on a; collision model present in the scene; A �Pick Interactor� will be; created, and attached to the picked collision model, if any, with a; spring. ; If; you release the mouse button first, the spring is removed.; If; you release the SHIFT button first, the spring is fixed and exists; until you pick another point in the scene. Several tabs give more information; about the current scene: ; This images were taken for the scene shown above. . - depending on the viewer, you can control what is displayed, and the; way it is. ; - statistical outputs during the simulation (position and velocity for; each elements, time passed at each branch of the graph, gnuplot files); ; - the graph of the scene, with all the nodes. You can export this graph; into a nice png file.; - the last tab, �Viewer� gives the name and information about; the possibilities of the current viewer, and the shortcuts. Double clicking on a node allows you to modify several values and; change dynamically the simulation (here, the TetrahedronFEMForceField; node). In some cases, you need to press the update button; to apply the changes. Structure ; The main interface uses a Qt; environment (Qt3.3 for Linux and Qt4 for Windows). The Main window,; providing all the interactions possible with th",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:1114,release,release,1114,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,1,['release'],['release']
Deployability,w plugin adding tools for linear system matrix [#2517]( https://github.com/sofa-framework/sofa/pull/2517 ); - [SofaMatrix] Eigen can be used to reorder a mesh in order to reduce fill-in [#2875]( https://github.com/sofa-framework/sofa/pull/2875 ); - [SofaMatrix] Export the compliance matrix of a constraint solver [#2782]( https://github.com/sofa-framework/sofa/pull/2782 ); - [SofaMatrix] More details in the readme file [#2580]( https://github.com/sofa-framework/sofa/pull/2580 ); - [SofaMatrix] Setup arithmetic precision for matrix export [#2724]( https://github.com/sofa-framework/sofa/pull/2724 ). **Examples / Scenes**; - [examples] An example showing a skybox [#2678]( https://github.com/sofa-framework/sofa/pull/2678 ); - [examples] Minor fix in file for topological change process [#3121]( https://github.com/sofa-framework/sofa/pull/3121 ); - [examples] Speed up the falling cubes [#2646]( https://github.com/sofa-framework/sofa/pull/2646 ). **Scripts / Tools**; - [tools] Update sofa launcher to use SofaPython3 [#2968]( https://github.com/sofa-framework/sofa/pull/2968 ). ### Bug Fixes. **Architecture**; - [CMake] FIX out-of-tree build [#2940]( https://github.com/sofa-framework/sofa/pull/2940 ); - [CMake] FIX out-of-tree build (2) [#2953]( https://github.com/sofa-framework/sofa/pull/2953 ); - [CMake] FIX out-of-tree configure [#2891]( https://github.com/sofa-framework/sofa/pull/2891 ); - [CMake] Fix install config files [#3031]( https://github.com/sofa-framework/sofa/pull/3031 ); - [Config][CMake] Fix include directories [#3023]( https://github.com/sofa-framework/sofa/pull/3023 ); - [project] Remove duplicate entry in clang-format [#3140]( https://github.com/sofa-framework/sofa/pull/3140 ). **Modules**; - [All] Fix compilation when SOFA_FLOATING_POINT_TYPE is set to float [#2560]( https://github.com/sofa-framework/sofa/pull/2560 ); - [All] Move addInput/addOutput from init() to constructor [#2825]( https://github.com/sofa-framework/sofa/pull/2825 ); - [All] Fix missing ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:104005,Update,Update,104005,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,"wn above. . - depending on the viewer, you can control what is displayed, and the; way it is. ; - statistical outputs during the simulation (position and velocity for; each elements, time passed at each branch of the graph, gnuplot files); ; - the graph of the scene, with all the nodes. You can export this graph; into a nice png file.; - the last tab, �Viewer� gives the name and information about; the possibilities of the current viewer, and the shortcuts. Double clicking on a node allows you to modify several values and; change dynamically the simulation (here, the TetrahedronFEMForceField; node). In some cases, you need to press the update button; to apply the changes. Structure ; The main interface uses a Qt; environment (Qt3.3 for Linux and Qt4 for Windows). The Main window,; providing all the interactions possible with the simulation,was created; using QtDesigner. The RealGUI contains the viewer which can be selected; directly in the main window. The possible choices depends on the; configuration file, sofa-default.cfg. The RealGUI gets a pointer to the root of the scene graph, and controls; the application by calling class; sofa::simulation::tree:Simulation.; The RealGUI uses an internal timer to repeatedly call; method sofa::simulation::tree:Simulation::animate(GNode* root, double; dt) and then update the viewer. To select the; viewers:. sofa-default.cfg located in; your Sofa main directory allows to define what kind of viewer you are; willing to have. ; By commenting (adding a�#� in front of the line) or uncommenting; (removing the �#�) lines, you can allow multiple kind of viewer.; For example, if you want to have the choice to render the scene with; QtGLViewer and QtOgreViewer, just modify sofa-default.cfg as below:. # DEFINES += SOFA_GUI_QT ; DEFINES += SOFA_GUI_QTOGREVIEWER; DEFINES += SOFA_GUI_QGLVIEWER. Then, in the main window, you select the kind of viewer you; want. Qt will appear in gray, whereas QGLViewer and Ogre will be; available.; Warning, you ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:2327,configurat,configuration,2327,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,1,['configurat'],['configuration']
Deployability,"work/sofa/compare/v20.12.00...v20.12.01 ). ### Improvements; **Modules**; - [SofaGui] Improve background v20.12 [#1758]( https://github.com/sofa-framework/sofa/pull/1758 ); - **[SofaHelper]** ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). **Plugins / Projects**; - [SofaPython] ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). ### Bug Fixes; **Architecture**; - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ). **Modules**; - [All] FIX build without SofaPython soft dependencies [#1829]( https://github.com/sofa-framework/sofa/pull/1829 ); - [All] Fix invalid Memory access in MechanicalObject and Compliant_test [#1849]( https://github.com/sofa-framework/sofa/pull/1849 ); - [All] Almost green dashboard [#1669]( https://github.com/sofa-framework/sofa/pull/1669 ); - **[SofaCore_test]** Update the two failling tests so they match the new convention for TypeInfo [#1709]( https://github.com/sofa-framework/sofa/pull/1709 ); - **[SofaDefaultType]** FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - **[SofaBaseMechanics]** fixes reinit of BarycentricMapping [#1815]( https://github.com/sofa-framework/sofa/pull/1815 ); - [SofaGuiCommon] Fix computationTimeSampling [#1698]( https://github.com/sofa-framework/sofa/pull/1698 ); - [SofaGuiCommon] fix BackgroundSetting [#1826]( https://github.com/sofa-framework/sofa/pull/1826 ); - [SofaGuiQt] ADD qt.conf.h for custom qt.conf loading at runtime [#1820]( https://github.com/sofa-framework/sofa/pull/1820 ); - [SofaGuiQt] Fix Export Graph option [#1785]( https://github.com/sofa-framework/sofa/pull/1785 ); - [SofaGuiQt] Clean QtGLViewer with key events [#1850]( https://github.com/sofa-framework/sofa/pull/1850 ); - **[SofaHelper]** FIX ""name vs path"" issue in PluginManager + FIX PluginManager_test [#1823]( https://github.co",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:211527,Update,Update,211527,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,work/sofa/pull/2898 ); - [examples] Fix ProjectToPointconstraint scene by using MeshSpringForceField [#2827]( https://github.com/sofa-framework/sofa/pull/2827 ); - [examples] Fix falling cubes scene [#2831]( https://github.com/sofa-framework/sofa/pull/2831 ); - [examples] Fix plugins in a couple of scenes [#2810]( https://github.com/sofa-framework/sofa/pull/2810 ); - [examples] Move PointSplatModel and SpatialGridPointModel scenes into Sph plugin [#2847]( https://github.com/sofa-framework/sofa/pull/2847 ); - [examples] FIX scenes with old CollisionGroupManager component [#3198]( https://github.com/sofa-framework/sofa/pull/3198 ). **Scripts / Tools**; - [tools] Correction of the import of the queue library [#2572]( https://github.com/sofa-framework/sofa/pull/2572 ). ### Cleanings. **Project**; - [GitHub] Update Changelog and version [#2546]( https://github.com/sofa-framework/sofa/pull/2546 ); - [Git] Clean project files [#2884]( https://github.com/sofa-framework/sofa/pull/2884 ); - [Project] Update README [#2905]( https://github.com/sofa-framework/sofa/pull/2905 ); - [Readme] Delete references to removed/moved directories in licence paragraph [#2547]( https://github.com/sofa-framework/sofa/pull/2547 ); - [doc] Remove old doc materials [#2889]( https://github.com/sofa-framework/sofa/pull/2889 ). **Architecture**; - [CMake] Clean modules post-NG [#2980]( https://github.com/sofa-framework/sofa/pull/2980 ); - [CMake] Replace references of SofaNG codename to SOFA [#3102]( https://github.com/sofa-framework/sofa/pull/3102 ); - [CMake] Update all deps to SofaFramework modules [#2958]( https://github.com/sofa-framework/sofa/pull/2958 ); - [CMake] Use standard macros + fix out-of-tree builds [#3120]( https://github.com/sofa-framework/sofa/pull/3120 ); - [CMake] Clean packaging for v22.06 [#3197]( https://github.com/sofa-framework/sofa/pull/3197 ). **Modules**; - [All] Fix minor warnings [#3177]( https://github.com/sofa-framework/sofa/pull/3177 ); - [All] Minor changes to use ne,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:118940,Update,Update,118940,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Update'],['Update']
Deployability,x getRelativePath() in DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - FileRepository::getRelativePath() lowering the case on WIN32 is now a deprecated behavior [#264]( https://github.com/sofa-framework/sofa/pull/264 ); - Fix FileRepository should not be optional [#122]( https://github.com/sofa-framework/sofa/pull/122 ); - FileMonitor: fix the recurrent problem with file 'SofaKernel/framework/framework_test/resources/existing.txt' pointed in Issue #146 [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - Fix wrong inline in exported functions [#449]( https://github.com/sofa-framework/sofa/pull/449 ); - [SofaFramework]; - fix the integration scheme for Quaternion [#172]( https://github.com/sofa-framework/sofa/pull/172 ) and fix values with which the quaternion is being compared after creation from euler angles; - [SofaHelper]; - VisualToolGL: fix single primitive calls [#293]( https://github.com/sofa-framework/sofa/pull/293 ); - ImagePNG: Fix library linking in debug configuration under MSVS [#298]( https://github.com/sofa-framework/sofa/pull/298 ); - [SofaBaseMechanics]; - MechanicalObject: cleaning: symbols & include [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - [SofaPhysicsAPI]; - fix compilation of the project [#167]( https://github.com/sofa-framework/sofa/pull/167 ); - [SofaUserInteraction]; - MouseInteractor: FIX the mouse picking on Mechanical Object [#282]( https://github.com/sofa-framework/sofa/pull/282 ). **Plugins / Projects**; - [image]; - Fixes #135 : Check that SofaPython is found before including python directory [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - Fixes #136 : Use the cmake install DIRECTORY instead of FILES [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - [LeapMotion]; - FIX compilation for LeapMotion plugin due to moved files [#296]( https://github.com/sofa-framework/sofa/pull/296 ); - [runSofa]; - Fix minor consistency issues related to the readOnly flag [#115]( ht,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:333415,configurat,configuration,333415,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['configurat'],['configuration']
Deployability,"xed term (regardless of how the transaction is characterized), the; Corresponding Source conveyed under this section must be accompanied; by the Installation Information. But this requirement does not apply; if neither you nor any third party retains the ability to install; modified object code on the User Product (for example, the work has; been installed in ROM). The requirement to provide Installation Information does not include a; requirement to continue to provide support service, warranty, or updates; for a work that has been modified or installed by the recipient, or for; the User Product in which it has been modified or installed. Access to a; network may be denied when the modification itself materially and; adversely affects the operation of the network or violates the rules and; protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided,; in accord with this section must be in a format that is publicly; documented (and with an implementation available to the public in; source code form), and must require no special password or key for; unpacking, reading or copying. 7. Additional Terms. ""Additional permissions"" are terms that supplement the terms of this; License by making exceptions from one or more of its conditions.; Additional permissions that are applicable to the entire Program shall; be treated as though they were included in this License, to the extent; that they are valid under applicable law. If additional permissions; apply only to part of the Program, that part may be used separately; under those permissions, but the entire Program remains governed by; this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option; remove any additional permissions from that copy, or from any part of; it. (Additional permissions may be written to require their own; removal in certain cases when you modify the work.) You may place; additional p",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:36145,Install,Installation,36145,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['Install'],['Installation']
Deployability,"y resources files (etc/, share/, examples/, tools/sofa-launcher/) when installing"" ON); ## Install resource files; if(SOFA_INSTALL_RESOURCES_FILES); install(DIRECTORY share/ DESTINATION share/sofa COMPONENT resources); install(DIRECTORY examples/ DESTINATION share/sofa/examples COMPONENT resources); install(DIRECTORY tools/sofa-launcher/ DESTINATION share/sofa/sofa-launcher COMPONENT resources); endif(). file(WRITE ""${CMAKE_BINARY_DIR}/plugins/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about plugins, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#plugin""); install(DIRECTORY ${CMAKE_BINARY_DIR}/plugins/ DESTINATION plugins COMPONENT resources); file(WRITE ""${CMAKE_BINARY_DIR}/collections/README.txt""; ""This folder will be automatically scanned by the Plugin Manager.\n""; ""For all info about collections, see https://www.sofa-framework.org/community/doc/using-sofa/lexicography/#collection""); install(DIRECTORY ${CMAKE_BINARY_DIR}/collections/ DESTINATION collections COMPONENT resources). sofa_install_git_infos(${PROJECT_NAME} ${CMAKE_CURRENT_SOURCE_DIR}). # Post-install scripts (must be the last add_subdirectory); add_subdirectory(tools/postinstall-fixup). if(SOFA_BUILD_RELEASE_PACKAGE); #######################; # CPack configuration #; #######################. ################; # Package config; include(CPackComponent); if(WIN32 AND ${CMAKE_VERSION} VERSION_LESS ""3.13.0""); include(CPackNSIS); endif(); include(CPackIFW); set(CPACK_PACKAGE_VERSION ""${Sofa_VERSION}""); set(CPACK_PACKAGE_NAME ""SOFA v${CPACK_PACKAGE_VERSION}""); set(CPACK_PACKAGE_VENDOR ""The SOFA Team""); set(CPACK_PACKAGE_CONTACT ""contact@sofa-framework.org""); set(CPACK_PACKAGE_DESCRIPTION ""Real-time multi-physics simulation with an emphasis on medical simulation.""); set(CPACK_PACKAGE_DESCRIPTION_SUMMARY ""Real-time multi-physics simulation with an emphasis on medical simulation.""); set(CPACK_PACKAGE_EXECUTABLES ""runSofa"" ""runSofa"");",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:11440,install,install,11440,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['install'],['install']
Deployability,yd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.26; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.6; computeWeights: 8.1; computeLinearRegionsSampling: 0.3; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 10; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.26; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.55; computeWeights: 8.01; computeLinearRegionsSampling: 0.28; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 20; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.28; Lloyd_iteration 0.27; computeUniformSampling: 6.6; computeWeights: 8.01; computeLinearRegionsSampling: 0.29; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg.ppm 20 50; Lloyd_iteration 0.27; Lloyd_iteration 0.28; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; Lloyd_iteration 0.27; computeUniformSampling: 6.54; computeWeights: 8.05; computeLinearRegionsSampling: 0.29; updateSampleMaterialProperties: 0.05. File: scenes/steak.pscn using steak-seg2.ppm 3 6; computeUniformSampling: 2.09; computeWeights: 15.09; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 10; computeUniformSampling: 2.08; computeWeights: 15.01; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 20; computeUniformSampling: 2.1; computeWeights: 15.07; computeLinearRegionsSampling: 0.26; updateSampleMaterialProperties: 0.02. File: scenes/steak.pscn using steak-seg2.ppm 3 50; computeUniformSampl,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:4502,update,updateSampleMaterialProperties,4502,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,yd_iteration 18.8; Lloyd_iteration 18.84; Lloyd_iteration 18.79; Lloyd_iteration 18.77; Lloyd_iteration 18.82; Lloyd_iteration 18.79; Lloyd_iteration 18.77; Lloyd_iteration 18.81; Lloyd_iteration 18.81; Lloyd_iteration 18.78; Lloyd_iteration 18.81; Lloyd_iteration 18.79; Lloyd_iteration 18.81; Lloyd_iteration 18.82; Lloyd_iteration 18.76; Lloyd_iteration 18.83; Lloyd_iteration 18.82; Lloyd_iteration 18.84; Lloyd_iteration 18.85; Lloyd_iteration 18.79; Lloyd_iteration 18.72; Lloyd_iteration 18.81; Lloyd_iteration 18.82; Lloyd_iteration 18.82; Lloyd_iteration 18.79; Lloyd_iteration 18.8; Lloyd_iteration 18.84; Lloyd_iteration 18.77; Lloyd_iteration 18.74; Lloyd_iteration 18.72; Lloyd_iteration 18.81; Lloyd_iteration 18.76; Lloyd_iteration 18.84; Lloyd_iteration 18.81; Lloyd_iteration 18.78; Lloyd_iteration 18.76; Lloyd_iteration 18.81; Lloyd_iteration 18.79; Lloyd_iteration 18.73; computeUniformSampling: 2003.85; computeWeights: 333.38; computeLinearRegionsSampling: 6.53; updateSampleMaterialProperties: 0.73. File: scenes/steak.pscn using steak-seg3.ppm 10 10; Lloyd_iteration 19.05; Lloyd_iteration 18.88; Lloyd_iteration 18.81; Lloyd_iteration 18.81; Lloyd_iteration 18.81; Lloyd_iteration 18.87; Lloyd_iteration 18.87; Lloyd_iteration 18.85; Lloyd_iteration 18.82; Lloyd_iteration 18.86; Lloyd_iteration 18.88; Lloyd_iteration 18.83; Lloyd_iteration 18.9; Lloyd_iteration 18.91; Lloyd_iteration 18.91; Lloyd_iteration 18.88; Lloyd_iteration 18.89; Lloyd_iteration 18.77; Lloyd_iteration 18.91; Lloyd_iteration 18.83; Lloyd_iteration 18.79; Lloyd_iteration 18.85; Lloyd_iteration 18.86; Lloyd_iteration 18.86; Lloyd_iteration 18.83; Lloyd_iteration 18.82; Lloyd_iteration 18.76; Lloyd_iteration 18.82; Lloyd_iteration 18.84; Lloyd_iteration 18.85; Lloyd_iteration 18.85; Lloyd_iteration 18.82; Lloyd_iteration 18.85; Lloyd_iteration 18.83; Lloyd_iteration 18.83; Lloyd_iteration 18.74; Lloyd_iteration 18.83; Lloyd_iteration 18.78; Lloyd_iteration 18.83; Lloyd_iteration 18.8; Lloyd_i,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:39361,update,updateSampleMaterialProperties,39361,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,yd_iteration 20.64; Lloyd_iteration 20.66; Lloyd_iteration 20.68; Lloyd_iteration 20.66; Lloyd_iteration 20.61; Lloyd_iteration 20.71; Lloyd_iteration 20.68; Lloyd_iteration 20.61; Lloyd_iteration 20.59; Lloyd_iteration 20.61; Lloyd_iteration 20.64; Lloyd_iteration 20.62; Lloyd_iteration 20.63; Lloyd_iteration 20.6; Lloyd_iteration 20.63; Lloyd_iteration 20.6; Lloyd_iteration 20.66; Lloyd_iteration 20.62; Lloyd_iteration 20.62; Lloyd_iteration 20.64; Lloyd_iteration 20.62; Lloyd_iteration 20.65; Lloyd_iteration 20.59; Lloyd_iteration 20.59; Lloyd_iteration 20.58; Lloyd_iteration 20.55; Lloyd_iteration 20.5; Lloyd_iteration 20.52; Lloyd_iteration 20.55; Lloyd_iteration 20.59; Lloyd_iteration 20.57; Lloyd_iteration 20.72; Lloyd_iteration 20.72; Lloyd_iteration 20.74; Lloyd_iteration 20.72; Lloyd_iteration 20.73; Lloyd_iteration 20.71; Lloyd_iteration 20.72; Lloyd_iteration 20.74; computeUniformSampling: 2361.78; computeWeights: 527.72; computeLinearRegionsSampling: 11.83; updateSampleMaterialProperties: 1.82. File: scenes/steak.pscn using steak-seg3.ppm 20 20; Lloyd_iteration 21.01; Lloyd_iteration 20.78; Lloyd_iteration 20.73; Lloyd_iteration 20.64; Lloyd_iteration 20.68; Lloyd_iteration 20.64; Lloyd_iteration 20.72; Lloyd_iteration 20.65; Lloyd_iteration 20.68; Lloyd_iteration 20.68; Lloyd_iteration 20.59; Lloyd_iteration 20.56; Lloyd_iteration 20.57; Lloyd_iteration 20.56; Lloyd_iteration 20.56; Lloyd_iteration 20.56; Lloyd_iteration 20.56; Lloyd_iteration 20.55; Lloyd_iteration 20.6; Lloyd_iteration 20.56; Lloyd_iteration 20.62; Lloyd_iteration 20.58; Lloyd_iteration 20.62; Lloyd_iteration 20.61; Lloyd_iteration 20.65; Lloyd_iteration 20.61; Lloyd_iteration 20.65; Lloyd_iteration 20.63; Lloyd_iteration 20.64; Lloyd_iteration 20.62; Lloyd_iteration 20.65; Lloyd_iteration 20.61; Lloyd_iteration 20.6; Lloyd_iteration 20.58; Lloyd_iteration 20.63; Lloyd_iteration 20.6; Lloyd_iteration 20.67; Lloyd_iteration 20.64; Lloyd_iteration 20.7; Lloyd_iteration 20.65; Lloyd_ite,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt:51734,update,updateSampleMaterialProperties,51734,applications/projects/sofaInitTimer/output/output.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/sofaInitTimer/output/output.txt,1,['update'],['updateSampleMaterialProperties']
Deployability,ython] PythonScriptDataEngine (PSDE) [#583]( https://github.com/sofa-framework/sofa/pull/583 ); - [SofaPython] Small fix & new features. [#656]( https://github.com/sofa-framework/sofa/pull/656 ). **Tools**; - [tools] FIX sofa-launcher stdout [#592]( https://github.com/sofa-framework/sofa/pull/592 ). ### Bug Fixes. **Modules**; - [All] FIX VS2017 build (Windows) [#630]( https://github.com/sofa-framework/sofa/pull/630 ); - [All] Fix computeBBox() [#634]( https://github.com/sofa-framework/sofa/pull/634 ); - [All] FIX warnings [#584]( https://github.com/sofa-framework/sofa/pull/584 ); - [All] Various small changes in error messages & bugfix from defrost branches [#660]( https://github.com/sofa-framework/sofa/pull/660 ); - [SofaConstraint] FIX: Moving semicolon under preprocessor define [#680]( https://github.com/sofa-framework/sofa/pull/680 ); - **[SofaEngine]** FIX Bug in BoxROI that is not properly initialized [#627]( https://github.com/sofa-framework/sofa/pull/627 ); - **[SofaFramework]** Fix plugin list configuration [#645]( https://github.com/sofa-framework/sofa/pull/645 ); - [SofaGraphComponent] FIX SceneChecker_test + ADD alias test [#711]( https://github.com/sofa-framework/sofa/pull/711 ); - [SofaGraphComponent] FIX SceneCheck build on MacOS [#719]( https://github.com/sofa-framework/sofa/pull/719 ); - [SofaGuiQt] FIX missing resources [#758]( https://github.com/sofa-framework/sofa/pull/758 ); - [SofaGeneralEngine] FIX disabled tests [#675]( https://github.com/sofa-framework/sofa/pull/675 ); - **[SofaHelper]** More robust method to test end of string [#617]( https://github.com/sofa-framework/sofa/pull/617 ); - **[SofaKernel]** FIX macro issue resulted from the #include cleaning. [#672]( https://github.com/sofa-framework/sofa/pull/672 ); - [SofaMiscFem] FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaOpenglVisual] FIX MacOS crash in batch mode [#646]( https://github.com/sofa-framework/sofa/pull/646 ); - **[SofaSimulationGraph]** F,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:296605,configurat,configuration,296605,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['configurat'],['configuration']
Deployability,"{MOC_FILES} ${FORM_FILES} ${SOURCE_FILES} ${QRC_FILES}). # For files generated by the moc; target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>""). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.Common); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Visual); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SceneUtility); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFA_GUI_QT_TARGETS}). if(SOFA_DUMP_VISITOR_INFO); target_link_libraries(${PROJECT_NAME} PRIVATE tinyxml2::tinyxml2); endif(). if(Sofa.GL_FOUND); if(SOFA_GUI_QT_ENABLE_QGLVIEWER); target_link_libraries(${PROJECT_NAME} PUBLIC QGLViewer); endif(); endif(). if(SOFA_GUI_QT_ENABLE_NODEGRAPH); target_link_libraries(${PROJECT_NAME} PUBLIC NodeEditor::nodes); if (SOFA_BUILD_RELEASE_PACKAGE OR CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS NodeEditor::nodes); endif(); endif(). # FFMPEG; if(FFMPEG_EXEC_FOUND); install(PROGRAMS ""${FFMPEG_EXEC_FILE}"" DESTINATION bin COMPONENT applications); endif(). # Create build and install versions of .ini file for resources finding; set(RESOURCES_DIR ""${CMAKE_CURRENT_SOURCE_DIR}/${SRC_ROOT}/resources""); set(FFMPEG_EXEC_PATH ""${FFMPEG_EXEC_FILE}"") # absolute path for build dir, see .ini file; configure_file(${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in ""${CMAKE_BINARY_DIR}/etc/${PROJECT_NAME}.ini""); set(RESOURCES_DIR ""../share/sofa/gui/qt""); get_filename_component(FFMPEG_EXEC_FILENAME ""${FFMPEG_EXEC_FILE}"" NAME); set(FFMPEG_EXEC_PATH ""../bin/${FFMPEG_EXEC_FILENAME}"") # relative path for install dir, see .ini file; configure_file(${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini"" DESTINATION etc RENAME ${PROJECT_NAME}.ini COMPONENT applications). install(DIRECTORY ""${SRC_ROOT}/resources/"" DESTINATION ""share/sofa/gui/qt"" COMPONENT resources). sofa_c",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt:10813,install,install,10813,Sofa/GUI/Qt/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt,1,['install'],['install']
Deployability,"{SOFAGUI_SRC}/config.h.in; ${SOFAGUI_SRC}/initSofaGui.h; ); set(SOURCE_FILES; ${SOFAGUI_SRC}/initSofaGui.cpp; ). set(SOFAGUI_TARGETS Sofa.GUI.Component Sofa.GUI.Common Sofa.GUI.Batch); if(Sofa.GUI.Qt_FOUND); list(APPEND SOFAGUI_TARGETS Sofa.GUI.Qt); endif(); sofa_set_01(SOFAGUI_HAVE_SOFAGUIQT VALUE ${SOFAGUI_HAVE_SOFA_GUI_QT}). if(Sofa.GUI.HeadlessRecorder_FOUND); list(APPEND SOFAGUI_TARGETS Sofa.GUI.HeadlessRecorder); endif(); sofa_set_01(SOFAGUI_HAVE_SOFAHEADLESSRECORDER VALUE ${SOFAGUI_HAVE_SOFA_GUI_HEADLESSRECORDER}). # Keep legacy modules for compatibility; # they merely redirect to the new modules; # legacy (deprecated) module; sofa_add_subdirectory(collection ../modules/SofaGuiCommon SofaGuiCommon ON; BINARY_DIR ""${CMAKE_CURRENT_BINARY_DIR}/SofaGuiCommon""); if(TARGET SofaGuiCommon); list(APPEND SOFAGUI_TARGETS SofaGuiCommon); endif(); if(Sofa.GUI.Qt_FOUND); sofa_add_subdirectory(collection ../modules/SofaGuiQt SofaGuiQt ON; BINARY_DIR ""${CMAKE_CURRENT_BINARY_DIR}/SofaGuiQt""); if(TARGET SofaGuiQt); list(APPEND SOFAGUI_TARGETS SofaGuiQt); endif(); endif(); if(Sofa.GUI.HeadlessRecorder_FOUND); sofa_add_subdirectory(collection ../modules/SofaHeadlessRecorder SofaHeadlessRecorder ON; BINARY_DIR ""${CMAKE_CURRENT_BINARY_DIR}/SofaHeadlessRecorder""); if(TARGET SofaHeadlessRecorder); list(APPEND SOFAGUI_TARGETS SofaHeadlessRecorder); endif(); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAGUI_TARGETS}). foreach(ui_target ${SOFAGUI_TARGETS}); set_target_properties(${ui_target} PROPERTIES FOLDER GUI); endforeach(); set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER GUI). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; # RELOCATABLE ""collections"" # disabled because we need SofaGui installed at root for backward compat; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaGui/CMakeLists.txt:2323,install,installed,2323,applications/collections/deprecated/SofaGui/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaGui/CMakeLists.txt,1,['install'],['installed']
Energy Efficiency," - [Core] Use std::function for Link's Validator (and fix UB) [#3665](https://github.com/sofa-framework/sofa/pull/3665) ; - [Helper] Improve OptionsGroup [#3737](https://github.com/sofa-framework/sofa/pull/3737) ; - [Simulation] Suggest required plugin in the syntax of the scene loader [#3799](https://github.com/sofa-framework/sofa/pull/3799) . **Modules**; - [Mapping] Adds template to RigidMapping [#3680](https://github.com/sofa-framework/sofa/pull/3680) ; - [Analyze] Raw pointers to Links [#3683](https://github.com/sofa-framework/sofa/pull/3683) ; - [MechanicalLoad] Stupid check for consistency between state and topology [#3692](https://github.com/sofa-framework/sofa/pull/3692) ; - [Mapping.NonLinear] Geometric stiffness method in an OptionsGroup [#3740](https://github.com/sofa-framework/sofa/pull/3740) ; - [Core.Visual, Component.Visual] Create VisualState (formerly Vec3State) [#3782](https://github.com/sofa-framework/sofa/pull/3782) . **Plugins / Projects**; - [MultiThreading] Factorize task scheduler user [#3607](https://github.com/sofa-framework/sofa/pull/3607) . ### Improvements. **Architecture**; - [Helper] Use DataTypeInfo in NameDecoder [#3465](https://github.com/sofa-framework/sofa/pull/3465) ; - [DefaultType] RigidCoord/Deriv become iterable [#3536](https://github.com/sofa-framework/sofa/pull/3536) ; - [Core] Give threads a name on Windows [#3551](https://github.com/sofa-framework/sofa/pull/3551) ; - [Core] Display flags spelling suggestion [#3575](https://github.com/sofa-framework/sofa/pull/3575) ; - [Type] Construct matrices based on initializer-lists [#3584](https://github.com/sofa-framework/sofa/pull/3584) ; - [defaulttype] Template aliases for CRS matrices [#3592](https://github.com/sofa-framework/sofa/pull/3592) ; - [Simulation] SceneCheck can be added in plugins [#3597](https://github.com/sofa-framework/sofa/pull/3597) ; - [Contributing] Update file to mention good first issue [#3625](https://github.com/sofa-framework/sofa/pull/3625) ; - [Simulatio",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:52059,schedul,scheduler,52059,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['schedul'],['scheduler']
Energy Efficiency," 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA; Everyone is permitted to copy and distribute verbatim copies; of this license document, but changing it is not allowed. Preamble. The licenses for most software are designed to take away your; freedom to share and change it. By contrast, the GNU General Public; License is intended to guarantee your freedom to share and change free; software--to make sure the software is free for all its users. This; General Public License applies to most of the Free Software; Foundation's software and to any other program whose authors commit to; using it. (Some other Free Software Foundation software is covered by; the GNU Lesser General Public License instead.) You can apply it to; your programs, too. When we speak of free software, we are referring to freedom, not; price. Our General Public Licenses are designed to make sure that you; have the freedom to distribute copies of free software (and charge for; this service if you wish), that you receive source code or can get it; if you want it, that you can change the software or use pieces of it; in new free programs; and that you know you can do these things. To protect your rights, we need to make restrictions that forbid; anyone to deny you these rights or to ask you to surrender the rights.; These restrictions translate to certain responsibilities for you if you; distribute copies of the software, or if you modify it. For example, if you distribute copies of such a program, whether; gratis or for a fee, you must give the recipients all the rights that; you have. You must make sure that they, too, receive or can get the; source code. And you must show them these terms so they know their; rights. We protect your rights with two steps: (1) copyright the software, and; (2) offer you this license which gives you legal permission to copy,; distribute and/or modify the software. Also, for each author's protection and ours, we want to make certain; that everyone understands th",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:1080,charge,charge,1080,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,5,['charge'],['charge']
Energy Efficiency," [#2839]( https://github.com/sofa-framework/sofa/pull/2839 ); - [SofaCore] By default, state accessors get the bbox of their states [#2780]( https://github.com/sofa-framework/sofa/pull/2780 ); - [SofaDefaultType] Speedup MapMapSparseMatrix [#2641]( https://github.com/sofa-framework/sofa/pull/2641 ); - [SofaDeformable] Spring lengths can be a list [#2602]( https://github.com/sofa-framework/sofa/pull/2602 ); - [SofaEngine] BoxROI support for 2d and 1d types [#2600]( https://github.com/sofa-framework/sofa/pull/2600 ); - [SofaGeneralEngine] Extend features of NearestPointROI [#2595]( https://github.com/sofa-framework/sofa/pull/2595 ); - [SofaGeometry] Add geometric methods in class Triangle and Edge [#2587]( https://github.com/sofa-framework/sofa/pull/2587 ); - [SofaGuiQt][WindowProfiler] Add root tree + show overhead [#2643]( https://github.com/sofa-framework/sofa/pull/2643 ); - [SofaHelper] Load image using stb [#2551]( https://github.com/sofa-framework/sofa/pull/2551 ); - [SofaHelper] Reduce AdvancedTimer overhead [#2645]( https://github.com/sofa-framework/sofa/pull/2645 ); - [SofaSimpleFem] Improve data description [#2740]( https://github.com/sofa-framework/sofa/pull/2740 ); - [SofaSimpleFem][SofaGeneralSimpleFem][SofaMiscFem] Avoid vectors normalization [#2647]( https://github.com/sofa-framework/sofa/pull/2647 ); - [SofaSimulationCore] More generic DefaultVisualManagerLoop [#2549]( https://github.com/sofa-framework/sofa/pull/2549 ); - [SofaSimulationGraph] Add the ability to control where the object is added in a node. [#2396]( https://github.com/sofa-framework/sofa/pull/2396 ); - [SofaSparseSolver] Apply fill in permutation in SparseLDLSolver [#2762]( https://github.com/sofa-framework/sofa/pull/2762 ); - [SofaSparseSolver] Introduction of an asynchronous LDL solver [#2661]( https://github.com/sofa-framework/sofa/pull/2661 ); - [SofaSparseSolver] Added the choice to compute the decomposition at each step [#2756]( https://github.com/sofa-framework/sofa/pull/2756 ). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:101046,Reduce,Reduce,101046,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Reduce'],['Reduce']
Energy Efficiency," control compilation; and installation of the library. Activities other than copying, distribution and modification are not; covered by this License; they are outside its scope. The act of; running a program using the Library is not restricted, and output from; such a program is covered only if its contents constitute a work based; on the Library (independent of the use of the Library in a tool for; writing it). Whether that is true depends on what the Library does; and what the program that uses the Library does. 1. You may copy and distribute verbatim copies of the Library's; complete source code as you receive it, in any medium, provided that; you conspicuously and appropriately publish on each copy an; appropriate copyright notice and disclaimer of warranty; keep intact; all the notices that refer to this License and to the absence of any; warranty; and distribute a copy of this License along with the; Library. You may charge a fee for the physical act of transferring a copy,; and you may at your option offer warranty protection in exchange for a; fee. 2. You may modify your copy or copies of the Library or any portion; of it, thus forming a work based on the Library, and copy and; distribute such modifications or work under the terms of Section 1; above, provided that you also meet all of these conditions:. a) The modified work must itself be a software library. b) You must cause the files modified to carry prominent notices; stating that you changed the files and the date of any change. c) You must cause the whole of the work to be licensed at no; charge to all third parties under the terms of this License. d) If a facility in the modified Library refers to a function or a; table of data to be supplied by an application program that uses; the facility, other than as an argument passed when the facility; is invoked, then you must make a good faith effort to ensure that,; in the event an application does not supply such function or; table, the facility still ope",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:8216,charge,charge,8216,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['charge'],['charge']
Energy Efficiency," with the Library, with the complete machine-readable ""work that; uses the Library"", as object code and/or source code, so that the; user can modify the Library and then relink to produce a modified; executable containing the modified Library. (It is understood; that the user who changes the contents of definitions files in the; Library will not necessarily be able to recompile the application; to use the modified definitions.). b) Use a suitable shared library mechanism for linking with the; Library. A suitable mechanism is one that (1) uses at run time a; copy of the library already present on the user's computer system,; rather than copying library functions into the executable, and (2); will operate properly with a modified version of the library, if; the user installs one, as long as the modified version is; interface-compatible with the version that the work was made with. c) Accompany the work with a written offer, valid for at; least three years, to give the same user the materials; specified in Subsection 6a, above, for a charge no more; than the cost of performing this distribution. d) If distribution of the work is made by offering access to copy; from a designated place, offer equivalent access to copy the above; specified materials from the same place. e) Verify that the user has already received a copy of these; materials or that you have already sent this user a copy. For an executable, the required form of the ""work that uses the; Library"" must include any data and utility programs needed for; reproducing the executable from it. However, as a special exception,; the materials to be distributed need not include anything that is; normally distributed (in either source or binary form) with the major; components (compiler, kernel, and so on) of the operating system on; which the executable runs, unless that component itself accompanies; the executable. It may happen that this requirement contradicts the license; restrictions of other proprietary librarie",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:16152,charge,charge,16152,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['charge'],['charge']
Energy Efficiency,"# Cleanings. **Architecture**; - [CMake] Use cmake_dependent_option for plugin tests [#1164]( https://github.com/sofa-framework/sofa/pull/1164 ). **Modules**; - [All] Fix order warnings [#1239]( https://github.com/sofa-framework/sofa/pull/1239 ); - [All] Fix override warning in option mode [#1210]( https://github.com/sofa-framework/sofa/pull/1210 ); - [All] Small cleaning on sout and serr [#1234]( https://github.com/sofa-framework/sofa/pull/1234 ); - [All] Standardize epsilons in SOFA [#1049]( https://github.com/sofa-framework/sofa/pull/1049 ); - [All] Code cleaning of multiple classes [#1116]( https://github.com/sofa-framework/sofa/pull/1116 ); - [All] Remove deprecated macro SOFA_TRANGLEFEM [#1233]( https://github.com/sofa-framework/sofa/pull/1233 ); - [All] Remove references to ""isToPrint"" because it's broken [#1197]( https://github.com/sofa-framework/sofa/pull/1197 ); - [All] Replace NULL by nullptr [#1179]( https://github.com/sofa-framework/sofa/pull/1179 ); - [All] Try to reduce the number of compilation warnings [#1196]( https://github.com/sofa-framework/sofa/pull/1196 ); - [SceneCreator] Pluginizing... [#1109]( https://github.com/sofa-framework/sofa/pull/1109 ); - **[SofaBaseLinearSolver]** Remove virtual function BaseLinearSolver::isMultiGroup [#1063]( https://github.com/sofa-framework/sofa/pull/1063 ); - **[SofaBaseLinearSolver][FullMatrix]** Restore fast clear function [#1128]( https://github.com/sofa-framework/sofa/pull/1128 ); - **[SofaFramework]** Remove (painful) check/warning with Rigids [#1229]( https://github.com/sofa-framework/sofa/pull/1229 ); - [SofaGUI] Split OpenGL and Qt dependency [#1121]( https://github.com/sofa-framework/sofa/pull/1121 ); - [SofaGeneralObjectInteraction] Create delegate functions in AttachConstraint [#1185]( https://github.com/sofa-framework/sofa/pull/1185 ); - [SofaGraphComponent] Update sceneCheckerAPI and deprecate MatrixMass [#1107]( https://github.com/sofa-framework/sofa/pull/1107 ); - [SofaHAPI] Fixes for HAPI [#1189",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:254181,reduce,reduce,254181,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['reduce'],['reduce']
Energy Efficiency,); - [SofaCUDA] Better readme [#2597]( https://github.com/sofa-framework/sofa/pull/2597 ); - [SofaCUDA] Clean Cuda Collision models [#2673]( https://github.com/sofa-framework/sofa/pull/2673 ); - [SofaCUDA] Clean and factorize CudaTriangularFEMForceFieldOptim [#2568]( https://github.com/sofa-framework/sofa/pull/2568 ); - [SofaCUDA] Convert standard stream to msg_* API [#2864]( https://github.com/sofa-framework/sofa/pull/2864 ); - [SofaCUDA] Modernize CMake for CUDA [#2878]( https://github.com/sofa-framework/sofa/pull/2878 ); - [SofaCUDA] QuadSpringsSphere scenes [#2598]( https://github.com/sofa-framework/sofa/pull/2598 ); - [SofaCUDA] Remove calls to __umul24 on device [#2715]( https://github.com/sofa-framework/sofa/pull/2715 ); - [SofaCUDA] Resurrect CudaTetrahedronTLEDForceField [#2865]( https://github.com/sofa-framework/sofa/pull/2865 ); - [SofaCUDA] harmless cleaning of namespace declaration and header inclusion [#2674]( https://github.com/sofa-framework/sofa/pull/2674 ); - [SofaMatrix] Reduce dependency [#2768]( https://github.com/sofa-framework/sofa/pull/2768 ); - [SofaMatrix][SofaBaseLinearSolver] Move GlobalSystemMatrixExporter [#2545]( https://github.com/sofa-framework/sofa/pull/2545 ); - [SofaPhysicsAPI] Clean CMake file and compile without compat [#3091]( https://github.com/sofa-framework/sofa/pull/3091 ); - [image] remove shadow variables [#2936]( https://github.com/sofa-framework/sofa/pull/2936 ); - [image] Remove qt4 usage [#2663]( https://github.com/sofa-framework/sofa/pull/2663 ); - [image] remove shadow variable [#2928]( https://github.com/sofa-framework/sofa/pull/2928 ); - [image] remove shadow variable [#2722]( https://github.com/sofa-framework/sofa/pull/2722 ); - [image] remove shadow variables [#2921]( https://github.com/sofa-framework/sofa/pull/2921 ). **Examples / Scenes**; - [examples] Optimal RequiredPlugin [#2836]( https://github.com/sofa-framework/sofa/pull/2836 ); - [examples] Remove misplaced example file [#2726]( https://github.com/sofa-,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:132242,Reduce,Reduce,132242,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Reduce'],['Reduce']
Energy Efficiency,"*************************************************************************/. :: SOFA Framework ::. The following authors contributed to the design and implementation; of the core SOFA APIs, as well as base features and applications :. Yinoussa Adagolodgo; Michael Adam; Jeremie Allard; Barbara Andre; Pierre-Jean Bensoussan; Alexandre Bilger; Jean-Nicolas Brunet; Paul Maria Scheikl; Guillaume Bousquet; Olivier Carre; Bruno Carrez; Frederic Chateau; Eulalie Coevoet; Hadrien Courtecuisse; Olivier Comas; Stephane Cotin; Jeremie Dequidt; Erwan Douaille; Marie Durand; Christian Duriez; Herve Delingette; Florent Falipou; Francois Faure; Sylvere Fonteneau; Simone Gasparini; Thierry Gaugry; Benjamin Gilles; Christophe Guebert; Laure Heigeas; Tobias Heimann; Everton Hermann; Jeremy Jaussaud; Lenka Jerabkova; Francois Jourdes; Hoeryong Jung; Frederic Largiliere; Geoffrey Lienhart; Vincent Majorczyk; Damien Marchal; Stephanie Marchesseau; Bruno Marques; Cesar Mendoza; Matthieu Nesme; Paul Neumann; Chi-Thanh Nguyen; Marek Olsak; Guillaume Paran; Erik Pernod; Igor Peterlik; Juan Pablo de la Plata Alcalde; Francois Poyer; Jeremy Ringuard; Frederick Roy; Etienne Schmitt; Federico Spadoni; Hugo Talbot; Romain Testylier; Maxime Tournier; Moreno Trlin; Felix Vanneste. :: SOFA Modules ::. In addition to classes created by the SOFA Team mentioned above,; the following authors are to be credited for their contributions :. + Co-rotational FEM; Matthieu Nesme and Francois Faure. + Dynamic Topologies; Barbara Andre, Herve Delingette, Erik Pernod. + Tetrahedral volume rendering; Sebastien Barbier and George-Pierre Bonneau. + Articulated Rigid Bodies based on Penalities; Michael Adam, Francois Faure. + Articulated Rigid Bodies based on Reduced Coordinates; Juan Pablo de la Plata Alcalde, Christian Duriez. + GPU support using CUDA; Jeremie Allard, Hadrien Courtecuisse. + GPU support using OpenCL; Jeremie Allard, Vincent Majorczyk. + Geomagic Interface; Hadrien Courtecuisse; Raffaela Trivisonne; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Authors.txt:1944,Reduce,Reduced,1944,Authors.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Authors.txt,1,['Reduce'],['Reduced']
Energy Efficiency,". Advanced Shader (7/7). Description; This follows the previous part on Shader, but now we will see how to use it more efficiently.; Key points; We have seen how to call a Shader, but we may need to send uniform values to the Shader in order to change parameters on the fly.; 		This can be done with a set of objects called Ogl{Type}{Size}Variable. They can handle a lot of different formats : vectors, matrices, array of vectors in int and float types (see components/visualmodel/OglVariable.h for a list of available types).; Texture can be also given to the Shader, using OglTexture, which has a lot of parameters available; but the most important one is the texture unit id.; Another problem arises if you want to mix different effects (for example: toon shading and normal mapping).; 		You can write a big Shader that does a lot of things, and activate only what you want with a system of macro.; In your favorite editor, open /Sofa/share/shaders/generalRenderingShader.vert and /Sofa/share/shaders/generalRenderingShader.frag.; In the .frag file, look at line 85. This section defines the variables that are needed to execute the Perlin Noise Bump effect.; Now look at line 369. This section executes the Perlin Noise Bump effect.; Notice for either of these sections to be compiled, the variable PERLIN_NOISE_BUMP must be defined. We can define this variable, and the other variables that are needed for this effect, directly in the scene graph.; In the OglShader component, change to vertFilename and the fragFilename to ""/Sofa/share/shaders/generalrenderingshader.vert"" and ""/Sofa/share/shaders/generalrenderingshader.frag""; Add a OglShaderDefineMacro component, and change the name to ""PHONG"".; This will give the same basic shading as in the last step.; Add a OglShaderDefineMacro component, and change the name to ""PERLIN_NOISE_BUMP"".; Add three OglFloatVariables, and name them ""perlinBumpFrequency"", ""perlinBumpFactor"" and ""perlinBumpPersistance"". Set their Uniform Value properties to """,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/6_Visual.html:119,efficient,efficiently,119,examples/Tutorials/StepByStep/Visual/6_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/6_Visual.html,1,['efficient'],['efficiently']
Energy Efficiency,". Collision detection; Description:. 			In this tutorial, we add the collision between the teeth and the instrument.; 		; Key points:. Added a collision pipeline using hierarchical bounding boxes and a proximity detection algorithm ; Added collision model (Triangle, Line, Point) for the teeth; Added collision model (Line, Point) for the instrument; Added a mapping (RigidMapping) to ""connect"" the Mechanical Model and the Collision Model. Note:; The collision model mesh is charged using the objects MeshLoader and Mesh; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_04.html:476,charge,charged,476,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_04.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_04.html,1,['charge'],['charged']
Energy Efficiency,". Composite Object; Creating a composite object using a; SubsetMultiMapping; Fran�ois Faure, 2013. This page explains how to create a composite object as illustrated in; the following image, in an efficient way. The object is composed of a; deformable beam connected to rigid parts at the two ends. This requires; to attach points to the rigid objects using a RigidMapping, and to; connect these points to the FEM.  . Using AttachConstraint is not an option because it works only for; independent DOFs, and the points mapped to the rigid object are not; independent. The classic way would be to connect the deformable object to the rigid; objects using springs. However, this would require stiff springs which; harm the numerical conditioning of the system, without attaching the; points rigidly. . Replacing the spring with hard constraints using Lagrange multipliers; requires a constraint solver which consumes computation time. The solution we propose avoids these drawbacks. An FE model connected to two; rigid objects. The yellow squares highlight FE nodes embedded in the; rigid objects using a mapping. The white points are independent FE; nodes. Our approach is to distribute the FE vertices in two separate groups:; the mapped vertices at the ends, and the independent vertices in the; central part. This requires separate State components and graph nodes.; Unfortunately, the FEM force fields are internal, therefore they can; not be used to connect vertices of different objects. More generally,; FE models are typically defined as a whole and it is not easy to split; them. To overcome this limitation, we define the whole FE model as a common; child of the independent and the mapped particles, using a; MultiMapping, as illustrated in the next figure. The complete FEM,; including elements and masses, is defined at the bottom, while the; independent DOFs are the independent particles and the frames near the; top. The SubsetMultiMapping simply copies values from and to the two; subse",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/tutorials/compositeObject/doc.html:197,efficient,efficient,197,applications/tutorials/compositeObject/doc.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/tutorials/compositeObject/doc.html,1,['efficient'],['efficient']
Energy Efficiency,". Creation of a Pendulum (5/8); Description; Now we will create internal forces to add interactions between the particles of our mechanical object. ; The concept of Forces are handled in SOFA by components called ForceFields. We implemented numerous algorithms to simulate Mass Spring systems, Finite Elements, Rigid Bodies, etc. Again, there are examples available for these different types. In this tutorial, we will add a Spring between the two particles.; Key points; We will use a StiffSpringForceField to model our spring. ; Type ""StiffSpring"" in the Filter textbox. You will see StiffSpringForceField in two categories. Both are the same. Drag and drop the StiffSpringForceField from either category over the FirstObject node. Double click the StiffSpringForceField in the Modeler scene graph.; Click on the Property 2/2 tab. In the spring section, increase the 0 to ""1"", and press Display the values. Then, press the Update button found in the bottom left corner of the window. ; The titles of the columns now describe all the parameters needed to create a spring: two indices (Index1, Index2) corresponding to the particles attached by the spring, a stiffness coefficient (Ks), a damping coefficient (Kd), and the rest length of the spring (L).; Type the values ""0"", ""1"", ""100"", ""5"" and ""1"" into the columns Index1, Index2, Ks, Kd and L respectively. Press OK to return to the Modeler. Run the scene in SOFA, and animate.; Results; The two particles are now linked together by a spring. The second particle continues to fall because of gravity, but a spring, displayed by a green line, keeps them close. (Note: If you can't see the green line, make sure ""Force Fields"" is selected in the View tab in SOFA); We have modeled a very basic pendulum with only 5 components. Take some time to customize this scene. Try modifying the parameters of the spring, the position and parameters of the particles of the mechanical object, or adding particles or springs.; Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/4_Pendulum.html:1583,green,green,1583,examples/Tutorials/StepByStep/Pendulum/4_Pendulum.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/4_Pendulum.html,2,['green'],['green']
Energy Efficiency,". Creation of a Pendulum (7/8); Description; To link the two different mechanical objects, we will create a spring between them.; Find the StiffSpringForceField component. Drag and drop it on the root node. The Modeler will warn you ""No MechanicalState found in your Node root"". Press Ignore. We will define what the ForceField should act on manually.; Double click the new StiffSpringForceField to edit its properties. Towards the bottom of the window, in the First object in interaction textbox, type ""FirstObject"". In the Second object in interaction textbox, type ""SecondObject"". ; Go to the Property 2/2 tab, increase the spring's pairs of indices, stiffness, damping, and rest length to 1, and press Display the values, then Update. Fill in ""1"", ""0"", ""10"", ""0.1"", and ""1"" in the columns Index1, Index2, Ks, Kd, and L respectively.; Run the scene in SOFA. Click the Graph tab.; Key points; We use the same component as in the previous part of the tutorial (StiffSpringForceField). But you may notice the the colour used in the SOFA scene graph is not the same. Internal Springs use a blue color, while Interaction Springs use a red colour. The difference with the previous use of the StiffSpringForceField resides in the fact that we need to specify the two mechanical objects in interaction: we specified the MechanicalObjects FirstObject and SecondObject. The creation of the springs is exactly the same: two indices, Ks, Kd and rest length. The second spring is displayed in green, representing the interaction between the two objects. ; Results; To get a better view of the simulation, reduce the integration time step by finding the DT textbox on the top left of the SOFA window, and changing it from 0.01 to ""0.001"". Press Animate.; Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/6_Pendulum.html:1483,green,green,1483,examples/Tutorials/StepByStep/Pendulum/6_Pendulum.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/6_Pendulum.html,2,"['green', 'reduce']","['green', 'reduce']"
Energy Efficiency,". Euler Implicit Solver. Description. 	The EulerImplicitSolver can be used to solve ODE systems of first or second order, using the Euler implicit integration scheme. The step size of the discretization corresponds to the timeStep of SOFA.; 	; 	At each step of the scheme, the linear equation systems obtained have to be solved by an auxiliary component, the CGLinearSolver, which can be of different kinds (conjugated gradient, ...).; ; Key points. 	Different simulations are proposed:; 	; Green: reference deformation.; Yellow: Mechanical system using springs along edges.; Light blue: Mechanical system using tetrahedron finite elements.; Blue: Same system as before but using a first order integration scheme.; Red: Mechanical system with tetrahedron finite linear elements. Results. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ImplicitEuler.html:491,Green,Green,491,examples/Tutorials/Solvers/ImplicitEuler.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ImplicitEuler.html,1,['Green'],['Green']
Energy Efficiency,". ForceField FEM on Tetrahedra. Description:; 		; 			The TetrahedronFEMForceField component is used to model an object by the Finite Element Method on a mesh composed tetrahedron.; 			There are three main methods of computation: ; 			; small : the simplest method using linear formulation in case of small displacement; large : the corotational formulation allowing large displacement; polar : the polar decomposition formulation allowing large displacement. 				Trivial user can use at least two main parameters related to the linear elasticity property of the modeled object; 			. Young's modulus; Poisson's ratio. 				By adjusting these coefficients, one can understand its relation with the mechanical behavior of objects and then ; 				can choose the appropriated parameters. There are also other parameters for advanced users :; 			. localStiffnessFactor; updateStiffnessMatrix; computeGlobalMatrix; etc. 				By double-clicking on the component, users can see all the parameters of the component. ; 			; Key Points:. TetrahedronFEMForceField works only with a tetrahedra mesh; Technical documentation [Nesme, Matthieu and Payan, Yohan and Faure, Francois] , Efficient Physically Plausible Finite Elements .2005. Results:. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/ForceFields/TutorialTetrahedronFEMForceField.html:1164,Efficient,Efficient,1164,examples/Tutorials/ForceFields/TutorialTetrahedronFEMForceField.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/ForceFields/TutorialTetrahedronFEMForceField.html,1,['Efficient'],['Efficient']
Energy Efficiency,". Get your bearings in SOFA; Description:. 		To identify the axis of the 3D scene, we can display them with the component OglLineAxis. 		; 		We add the component OglLineAxis in the scene file. ; 		With the '@' symbol, we create a link between the size of the grid and the size of the axis.; 		; 		. The red axis corresponds to x (the first coordinate in a 3d vector); The green axis corresponds to y (the second coordinate in a 3d vector); The blue axis corresponds to z (the third coordinate in a 3d vector). Previous; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Getyourbearings/2_getyourbearings.html:372,green,green,372,examples/Tutorials/StepByStep/Getyourbearings/2_getyourbearings.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Getyourbearings/2_getyourbearings.html,1,['green'],['green']
Energy Efficiency,". Lighting (4/7). Description; Next, we will see how to manage lights.; Key points. Clear the scene graph.; Add a GNode to the root node and name it ""Dragon"".; Add an OglModel to the Dragon node, and set the Path to the model to /Sofa/share/mesh/dragon.obj.; By default, a (positional) light is present in the OpenGL Viewer, for those who do not want to mess with it.; 		But if you want to tweak your scene, you may want to modify this light or add other lights.; In order to do that, first you need to add a LightManager, without any kind of parameters; 		(We will see later why we need it). After that, you can add up to the maximum number of lights permitted by OpenGL,; 		which is 8 on most common systems.; Add a LightManager component to the root node. Rename it ""lightManager"".; There are 3 kinds of lights in SOFA. They are basically the same as in OpenGL :; 		. PositionalLight (main parameter : position) ;; DirectionalLight (main parameter : direction) ;; SpotLight (main parameters : position and direction) . color is a common parameter for all these 3 lights.; SpotLight has other non-essential parameters : cutoff and exponent (default value may suffice).; Add three Spotlight components to the root node. Name one ""redLight"", one ""greenLight"", and one ""blueLight"".; In the redLight, set the color of the light to (1 0 0) and the position to (-5 -2.5 20).; In the greenLight, set the color of the light to (0 1 0) and the position to (0 2.5 20).; In the blueLight, set the color of the light to (0 0 1) and the position to (5 -2.5 20).; Run in SOFA; Note:; LightManager and *Light must be in the root node if you want your whole scene to be lighted.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/3_Visual.html:1247,green,greenLight,1247,examples/Tutorials/StepByStep/Visual/3_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/3_Visual.html,2,['green'],['greenLight']
Energy Efficiency,". Mesh Loading and Rendering 3 (3/7). Description; Now we will go into more detail on how to use OglModel.; Key points; Clear the scene graph.; We will start by setting up a simple scene.; Add two GNodes to the root node. Name one ""DragonVisu"" and the other ""TexturedSofaVisu"".; Add an OglModel to each of the two new nodes. Name them ""dragon"" and ""sofa"".; Change the Path to the model in dragon to /Sofa/share/mesh/dragon.obj and the Path to the model in sofa to /Sofa/share/mesh/canapVM.obj.; Run in SOFA; The model is now correctly loaded and rendered; but we want to customize it.; Different kinds of parameters are offered through OglModel :. Transformation : rotation, translation and scale, each as a vector of 3 floats; Materials : describes ambient, diffuse, specular, emissive and shininess components. ; 		This is loaded either in a .MTL file attached to the OBJ; or as a string with the field material. You can also; 		use the color field, which will fill the material fields accordingly.; Texture : basic texture mapping with texturename field. In the properties for dragon, change the Initial Translation of the object to (0 10 2), the Initial Rotation of the object to (90 0 0) and the Initial Scale of the object to (0.5 0.5 0.5).; In the Property 2/3 tab, change the Ambient property to (0 191 0 255) and the Diffuse property to (51 51 0 229). Check the Specular and the Shininess checkboxes. Set Specular to (204 204 204 255) and Shininess to 25.; Run in SOFA.; Now we have a green dragon lying on the sofa.; In the Property 2/3 tab of the sofa, set the Name of the Texture to /Sofa/share/textures/snakeskin.png using the file browser.; Run in SOFA.; Now our sofa has been customized as well.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/2_Visual.html:1494,green,green,1494,examples/Tutorials/StepByStep/Visual/2_Visual.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Visual/2_Visual.html,1,['green'],['green']
Energy Efficiency,". Newmark Implicit Solver. Description. 	The NewmarkImplicitSolver can be used to solve ODE systems, using the Newmark implicit integration scheme. The step size of the discretization corresponds to the timeStep of SOFA.; 	; 	At each step of the scheme, the linear equation systems obtained have to be solved by an auxiliary component, the CGLinearSolver, which can be of different kinds (conjugated gradient, ...).; 	 ; Key points; 	Different simulations are proposed:; 	; Green: reference deformation.; Yellow: Mechanical system using springs along edges. Results. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ImplicitNewmark.html:474,Green,Green,474,examples/Tutorials/Solvers/ImplicitNewmark.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ImplicitNewmark.html,1,['Green'],['Green']
Energy Efficiency,". Topology Surface Different Mesh. Description. 	The aim of this tutorial is to show the different ways to create 2D surface mesh topologies. In this tutorial, three soft tissues are represented, implying:; 	 ; A mesh loader to read mesh file. (not necessary in regular mesh); A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A FEM forcefield to create interaction between points; An ODE scheme and a linear solver to solve the system at each time step.; A topological component.; A visual model which reproduces the current model geometry thanks to the identity mapping. Key points. 	There are three possible ways to build a 2D surface mesh using the following components.; 	These components are extensions of the ones explained in the Tutorial Topology Linear Different Mesh.; 	; MeshTopology creates a static mesh (red model). Here there are triangles and edges, using a mesh file. But no modifications are possible.; RegularGridTopology creates a regular mesh (blue model). Here there are regular quads. No mesh file needed, using only boundaries and the scaling.; TriangleSetTopologyContainer creates a dynamic mesh (green model). Here there are triangles and edges, using a mesh file. Other classes can be added to perform topological operations. Classes are TriangleSetTopologyModifier (for unitary operation), TriangleSetTopologyAlgorithms (for more complex topological operations) and TriangleSetGeometryAlgorithms (to couple topology algorithms and geometry positions). . Results. 	Thus, when simulated, the three models will fall due to gravity. A different behavior can be noticed for the regular grid near the fix points due to the different topology elements used (triangles versus quads). ; 	; 	Note that it is possible to add triangle behavior for the regular grid, using a topological mapping. See TutorialTopologyQuad2TriangleTopologicalMapping.; 	. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologySurfaceDifferentMesh.html:1162,green,green,1162,examples/Tutorials/Topologies/TopologySurfaceDifferentMesh.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologySurfaceDifferentMesh.html,1,['green'],['green']
Energy Efficiency,". Topology Triangle2EdgeTopologicalMapping. Description. 	The aim of this tutorial is to show the interest of using a topological mapping between a 2D surface mesh and a 1D linear mesh. In this tutorial, a soft tissues is represented, implying:; 	 ; A mesh loader to read mesh file.; A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A FEM forcefield to create interactions between points; An ODE scheme and a linear solver to solve the system at each time step.; Dynamic topological components.; A visual model which reproduces the current model geometry thanks to the identity mapping. Key points. 	Under the first node representing the triangulation, a second node is used to represent the linear topology.; 	; 	This second representation won't reproduce all edges of the triangulation, but only edges on the mesh borders. I.e edges with only one adjacent triangle. ; 	; 	They are represented in green in the simulation.; 	. 	To create this mapping, the component Triangle2EdgeTopologicalMapping is used. This component takes an input topology (Data Object1) which is the container of the ""upper"" topology (triangulation here) and has an output topology (Data Object2) which is the container of the above topology (edges here).; 	. Results. 	In this simulation, both triangulation and edge mesh have spring forcefields to create interaction between points. Thus, when simulating, the soft tissue won't stretch.; 	; 	Try to remove the TriangularBendingSprings component. The result will be a tissue completely stretched.; 	. 	Finally, try to remove the MeshSringForceField component. The result will be a bad behavior of the mesh borders.; 	. Additional results. 	When deleting triangles, the topological mapping is updated and so is the list of border edges.; 	. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyTriangle2EdgeTopologicalMapping.html:938,green,green,938,examples/Tutorials/Topologies/TopologyTriangle2EdgeTopologicalMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyTriangle2EdgeTopologicalMapping.html,1,['green'],['green']
Energy Efficiency,.com/sofa-framework/sofa/pull/4057); - [all] Lifecycle v23.12 4/n [#4058](https://github.com/sofa-framework/sofa/pull/4058); - [plugins] Fix OptionGroup deprecated constructor in image and SofaCUDA plugin [#4064](https://github.com/sofa-framework/sofa/pull/4064); - [all] Update code regarding lifecycle in Topology.h [#4065](https://github.com/sofa-framework/sofa/pull/4065); - [all] Fix warnings related to Vec and unused var [#4067](https://github.com/sofa-framework/sofa/pull/4067); - [all] Remove some simple uses of bwdInit() [#4075](https://github.com/sofa-framework/sofa/pull/4075); - [SofaMatrix] Remove CImgPlugin dependency [#4112](https://github.com/sofa-framework/sofa/pull/4112); - [all] Replace deprecated wbloc function by its new function name [#4118](https://github.com/sofa-framework/sofa/pull/4118); - [Core] VecId: set correct message for the deleted function holonomicC [#4120](https://github.com/sofa-framework/sofa/pull/4120); - [IO.Mesh.Tests] Reduce number of logs by unactivating printlog [#4148](https://github.com/sofa-framework/sofa/pull/4148); - [Constraint.Lagrangian.Solver] LCPConstraintSolver: remove useless computation if printLog is enabled [#4170](https://github.com/sofa-framework/sofa/pull/4170); - [Scene] Eigen3-SVD.scn: disable printLog [#4184](https://github.com/sofa-framework/sofa/pull/4184); - [Constraint.Lagrangian.Solver] Clean both constraint solvers [#4185](https://github.com/sofa-framework/sofa/pull/4185); - [Topology.Container] Update and rename methods in EdgeSetGeometryAlgorithms to compute barycentric coordinates [#4190](https://github.com/sofa-framework/sofa/pull/4190); - [Topology.Container] Remove method writeMSHfile in GeometryAlgorithms components [#4192](https://github.com/sofa-framework/sofa/pull/4192); - [all] Fix mismatch on explicit template instantiations [#4210](https://github.com/sofa-framework/sofa/pull/4210); - [SofaCUDA] Move cuda GUI dependent code [#4227](https://github.com/sofa-framework/sofa/pull/4227); - [all] ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:45566,Reduce,Reduce,45566,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Reduce'],['Reduce']
Energy Efficiency,"/img.shields.io/badge/contact-on_website-brightgreen.svg)](https://www.sofa-framework.org/consortium/contact/); [![we're hiring](https://img.shields.io/badge/we're%20hiring!-join%20us-orange)](https://www.sofa-framework.org/about/jobs/). ## What is SOFA. SOFA is an open source framework targeted at interactive physics simulation based on the Finite Element Method (FEM), with an emphasis on medical simulation and robotics. ; It is mainly intended for the research community to help foster newer algorithms, but can also be used as an efficient prototyping tool. ; SOFA's advanced software architecture allows: ; - the creation of complex and evolving simulations by combining new algorithms with existing algorithms ; - the modification of key parameters of the simulation such as deformable behavior, ; surface representation, solvers, constraints, collision algorithm, etc. ; - the synthesis of complex models from simpler ones using a graph description; - the efficient simulation of the dynamics of interacting objects using abstract equation solvers; - the comparison of various algorithms and mathematical models. SOFA is often presented as a standalone software (runSofa) and a simulation tool, but the project is most importantly a bundle of libraries and thus can be used/integrated in any project. . SOFA provides a plugin system allowing the coupling of additional codes to add functionalities. A lot of plugins are already referenced in the [source code](https://github.com/sofa-framework/sofa/tree/master/applications/plugins), under [sofa-framework organisation](https://github.com/orgs/sofa-framework/repositories?q=plugin&sort=name), and on the [Marketplace](https://www.sofa-framework.org/applications/marketplace/). Feel free to contact us to get your own plugins referenced!. ## How to download and install. Please refer to SOFA download page: https://www.sofa-framework.org/download/. ## How to contribute. The SOFA community will be pleased to welcome you! ; Find all the ways",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md:1934,efficient,efficient,1934,README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md,1,['efficient'],['efficient']
Energy Efficiency,27](https://github.com/sofa-framework/sofa/pull/3327) ; - [Constraint.Lagrangian] Remove merge option from BilateralInteractionConstraint [#3328](https://github.com/sofa-framework/sofa/pull/3328) ; - [Constraint.Lagrangian.Solver] Deprecate MechanicalAccumulateConstraint [#3393](https://github.com/sofa-framework/sofa/pull/3393) ; - [TriangularFEMForceField] Avoid double write access to the TriangleInfo Data in TriangularFEMForceField [#3412](https://github.com/sofa-framework/sofa/pull/3412) ; - [all] Fix compilation with float as floating_point_type [#3435](https://github.com/sofa-framework/sofa/pull/3435) . ### Improvements. **Architecture**; - [Core] Linear time getRoot() method in BaseNode and Node [#3059](https://github.com/sofa-framework/sofa/pull/3059) ; - [Type] Add NoInit constructor for Quat class [#3217](https://github.com/sofa-framework/sofa/pull/3217) ; - [Geometry] Make global variables constexpr [#3233](https://github.com/sofa-framework/sofa/pull/3233) ; - [Core] Reduce calls to getValue in collisions [#3264](https://github.com/sofa-framework/sofa/pull/3264) ; - [Type] Fix/clean and speed up of Mat [#3280](https://github.com/sofa-framework/sofa/pull/3280) ; - [Type] Add fixedarray aliases and BoundingBox3D [#3298](https://github.com/sofa-framework/sofa/pull/3298) ; - [Config] Option to set the number of MSVC processes [#3313](https://github.com/sofa-framework/sofa/pull/3313) ; - [Helper] RAII for DrawTool state life cycle [#3338](https://github.com/sofa-framework/sofa/pull/3338) ; - [Config] Option to enable interprocedural optimization [#3345](https://github.com/sofa-framework/sofa/pull/3345) ; - [Config] Change type of CMake message when adding a module [#3381](https://github.com/sofa-framework/sofa/pull/3381) ; - [CMake] Speed-up Configuration (again) [#3382](https://github.com/sofa-framework/sofa/pull/3382) ; - [Helper] Portable thread local storage duration [#3422](https://github.com/sofa-framework/sofa/pull/3422) ; - [Helper.Accessor] Support mor,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:71961,Reduce,Reduce,71961,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Reduce'],['Reduce']
Energy Efficiency,"3D volume mesh and a 2D surface mesh. In this tutorial, a cube is represented, implying:; 	; A mesh loader to read mesh file. (not necessary in regular mesh); A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A FEM forcefield to create interactiona between points; An ODE scheme and a linear solver to solve the system at each time step.; Dynamic topological components.; A visual modela which reproduce the current model geometry thanks to the identity mapping. Key points. 	Under the first node representing the hexahedra, a second node is used to represent the quad topology.; 	; 	This second representation won't reproduce all quads of the hexahedra topology, but only quads on the mesh borders. I.e quads with only one adjacent hexahedron. This process is similar to the Tetra2TriangleTopologicalMapping.; 	; 	Edges of hexahedra are represented in yellow in the simulation whereas the visual model is based on the quads. Thus, display the scene in wire frame to see hexahedra and quads (in green).; 	. 	To create this mapping, the component Hexa2QuadTopologicalMapping is used. This component takes an input topology (Data Object1) which is the container of the ""upper"" topology (hexahedron here) and has an output topology (Data Object2) which is the container of the above topology (quad here).; 	. Results. 	As explained, the visual model uses the output topology (quads) to render the surface model.; 	; 	you can try to use directly the quads created in the HexahedronSetTopologyContainer for the ogl model. The result will be a cube with quads displayed inside the volume.; 	. 	Finally, try to remove the HexahedronFEMForceField or QuadularBendingSprings component. The result will be a bad behavior of the cube.; 	. Additional results. 	When deleting quads, the topological mapping is updated. Thus, hexahedra behind the selected quad will be deleted as well. Then, the list of quads on the border will be updated and the surface rendering also.; 	. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyHexa2QuadTopologicalMapping.html:1178,green,green,1178,examples/Tutorials/Topologies/TopologyHexa2QuadTopologicalMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyHexa2QuadTopologicalMapping.html,1,['green'],['green']
Energy Efficiency,"51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA; Everyone is permitted to copy and distribute verbatim copies; of this license document, but changing it is not allowed. 			 Preamble. The licenses for most software are designed to take away your; freedom to share and change it. By contrast, the GNU General Public; License is intended to guarantee your freedom to share and change free; software--to make sure the software is free for all its users. This; General Public License applies to most of the Free Software; Foundation's software and to any other program whose authors commit to; using it. (Some other Free Software Foundation software is covered by; the GNU Library General Public License instead.) You can apply it to; your programs, too. When we speak of free software, we are referring to freedom, not; price. Our General Public Licenses are designed to make sure that you; have the freedom to distribute copies of free software (and charge for; this service if you wish), that you receive source code or can get it; if you want it, that you can change the software or use pieces of it; in new free programs; and that you know you can do these things. To protect your rights, we need to make restrictions that forbid; anyone to deny you these rights or to ask you to surrender the rights.; These restrictions translate to certain responsibilities for you if you; distribute copies of the software, or if you modify it. For example, if you distribute copies of such a program, whether; gratis or for a fee, you must give the recipients all the rights that; you have. You must make sure that they, too, receive or can get the; source code. And you must show them these terms so they know their; rights. We protect your rights with two steps: (1) copyright the software, and; (2) offer you this license which gives you legal permission to copy,; distribute and/or modify the software. Also, for each author's protection and ours, we want to make certain; that everyone understands th",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:2051,charge,charge,2051,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['charge'],['charge']
Energy Efficiency,"://img.shields.io/badge/chat-on_Discord-darkred.svg)](https://discord.gg/G63t3a8Ra6). <a href=""https://twitter.com/intent/follow?original_referer=https%3A%2F%2Fpublish.twitter.com%2F%3FbuttonType%3DFollowButton%26query%3Dhttps%253A%252F%252Ftwitter.com%252FSofaFramework%26widget%3DButton&ref_src=twsrc%5Etfw&region=follow_link&screen_name=SofaFramework&tw_p=followbutton""><img src=""https://img.shields.io/twitter/follow/SofaFramework?label=Follow%20%40SofaFramework&style=social""></a>; [![Contact](https://img.shields.io/badge/contact-on_website-brightgreen.svg)](https://www.sofa-framework.org/consortium/contact/); [![we're hiring](https://img.shields.io/badge/we're%20hiring!-join%20us-orange)](https://www.sofa-framework.org/about/jobs/). ## What is SOFA. SOFA is an open source framework targeted at interactive physics simulation based on the Finite Element Method (FEM), with an emphasis on medical simulation and robotics. ; It is mainly intended for the research community to help foster newer algorithms, but can also be used as an efficient prototyping tool. ; SOFA's advanced software architecture allows: ; - the creation of complex and evolving simulations by combining new algorithms with existing algorithms ; - the modification of key parameters of the simulation such as deformable behavior, ; surface representation, solvers, constraints, collision algorithm, etc. ; - the synthesis of complex models from simpler ones using a graph description; - the efficient simulation of the dynamics of interacting objects using abstract equation solvers; - the comparison of various algorithms and mathematical models. SOFA is often presented as a standalone software (runSofa) and a simulation tool, but the project is most importantly a bundle of libraries and thus can be used/integrated in any project. . SOFA provides a plugin system allowing the coupling of additional codes to add functionalities. A lot of plugins are already referenced in the [source code](https://github.com/sofa-f",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md:1505,efficient,efficient,1505,README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/README.md,1,['efficient'],['efficient']
Energy Efficiency,"MIT License. Copyright (c) 2019 Pranav. Permission is hereby granted, free of charge, to any person obtaining a copy; of this software and associated documentation files (the ""Software""), to deal; in the Software without restriction, including without limitation the rights; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; copies of the Software, and to permit persons to whom the Software is; furnished to do so, subject to the following conditions:. The above copyright notice and this permission notice shall be included in all; copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; SOFTWARE.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Batch/src/sofa/gui/batch/indicators/LICENSE.txt:78,charge,charge,78,Sofa/GUI/Batch/src/sofa/gui/batch/indicators/LICENSE.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Batch/src/sofa/gui/batch/indicators/LICENSE.txt,1,['charge'],['charge']
Energy Efficiency,To install this plugin you need:. - to install the driver LeapMotion: https://www.leapmotion.com/setup (SDK); - activate the plugin in cmake-gui; - enjoy the power of the LeapMotion with SOFA and give a try to the example scene (examples/buffon.scn). And let us know about your Leap simulations!,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/LeapMotion/README.txt:158,power,power,158,applications/plugins/LeapMotion/README.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/LeapMotion/README.txt,1,['power'],['power']
Energy Efficiency,To install this plugin you need:. - to register on the Geomagic website; - to download and install the Geomagic driver (following the documentation and the instructions of INSTALL); - activate the plugin in cmake-gui; - compile it; - enjoy the power of the Geomagic haptic interfaces with SOFA and give a try to the example scene (examples/DemoGeomagic.scn). And let us know about your Geomagic simulations!,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Geomagic/README.txt:244,power,power,244,applications/plugins/Geomagic/README.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Geomagic/README.txt,1,['power'],['power']
Energy Efficiency,"[SofaGeneralAnimationLoop] Improve MechanicalMatrixMapper [#882]( https://github.com/sofa-framework/sofa/pull/882 ); - [SofaGraphComponent] Run SceneChecker at each load [#938]( https://github.com/sofa-framework/sofa/pull/938 ); - [SofaGuiQt] Change the keyboard shortcut associated to camera mode [#997]( https://github.com/sofa-framework/sofa/pull/997 ); - [SofaGuiQt] Add a profiling window based on AdvanceTimer records [#1028]( https://github.com/sofa-framework/sofa/pull/1028 ); - **[SofaKernel]** Some small changes in debug topology drawing [#952]( https://github.com/sofa-framework/sofa/pull/952 ); - **[SofaKernel]** Update Static Solver [#950]( https://github.com/sofa-framework/sofa/pull/950 ); - **[SofaKernel]** Rename TModels into CollisionModels and update all scenes [#1034]( https://github.com/sofa-framework/sofa/pull/1034 ); - **[SofaKernel]** Add a new video recorder class VideoRecorderFFMPEG [#883]( https://github.com/sofa-framework/sofa/pull/883 ); - **[SofaSimulationCore]** Cpu task and scheduled thread support [#970]( https://github.com/sofa-framework/sofa/pull/970 ); - **[SofaSimulationCore]** call BaseObject::draw() during the Transparent pass [#929]( https://github.com/sofa-framework/sofa/pull/929 ); - [SofaTopologyMapping] Clean, fix, upgrade Tetra2TriangleTopologicalMapping [#876]( https://github.com/sofa-framework/sofa/pull/876 ). **Plugins / Projects**; - [Geomagic] Add some better check at init and method to free driver [#925]( https://github.com/sofa-framework/sofa/pull/925 ); - [Icons] EDIT Sofa icons [#881]( https://github.com/sofa-framework/sofa/pull/881 ); - [MultiThreading] TaskAllocator Interface [#906]( https://github.com/sofa-framework/sofa/pull/906 ); - [PluginExample] Update example + add comments [#1053]( https://github.com/sofa-framework/sofa/pull/1053 ); - [Regression] ADD Regression as external project [#1052]( https://github.com/sofa-framework/sofa/pull/1052 ); - [runSofa] ADD possibility to jump to source/instanciation of select",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:261275,schedul,scheduled,261275,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['schedul'],['scheduled']
Energy Efficiency,_________. ## [v20.12.01]( https://github.com/sofa-framework/sofa/tree/v20.12.01 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.00...v20.12.01 ). ### Improvements; **Modules**; - [SofaGui] Improve background v20.12 [#1758]( https://github.com/sofa-framework/sofa/pull/1758 ); - **[SofaHelper]** ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). **Plugins / Projects**; - [SofaPython] ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). ### Bug Fixes; **Architecture**; - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ). **Modules**; - [All] FIX build without SofaPython soft dependencies [#1829]( https://github.com/sofa-framework/sofa/pull/1829 ); - [All] Fix invalid Memory access in MechanicalObject and Compliant_test [#1849]( https://github.com/sofa-framework/sofa/pull/1849 ); - [All] Almost green dashboard [#1669]( https://github.com/sofa-framework/sofa/pull/1669 ); - **[SofaCore_test]** Update the two failling tests so they match the new convention for TypeInfo [#1709]( https://github.com/sofa-framework/sofa/pull/1709 ); - **[SofaDefaultType]** FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - **[SofaBaseMechanics]** fixes reinit of BarycentricMapping [#1815]( https://github.com/sofa-framework/sofa/pull/1815 ); - [SofaGuiCommon] Fix computationTimeSampling [#1698]( https://github.com/sofa-framework/sofa/pull/1698 ); - [SofaGuiCommon] fix BackgroundSetting [#1826]( https://github.com/sofa-framework/sofa/pull/1826 ); - [SofaGuiQt] ADD qt.conf.h for custom qt.conf loading at runtime [#1820]( https://github.com/sofa-framework/sofa/pull/1820 ); - [SofaGuiQt] Fix Export Graph option [#1785]( https://github.com/sofa-framework/sofa/pull/1785 ); - [SofaGuiQt] Clean QtGLViewer with key events [#1850]( https://github.com/sofa-framework/sofa,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:211428,green,green,211428,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['green'],['green']
Energy Efficiency,"a/pull/2890 ); - [ArticulatedSystemPlugin] ArticulatedSystemMapping new features [#2803]( https://github.com/sofa-framework/sofa/pull/2803 ); - [ArticulatedSystemPlugin] New example [#2804]( https://github.com/sofa-framework/sofa/pull/2804 ); - [SofaCUDA] Add ConstantForceField, MultiMapping and SubsetMultiMapping [#2557]( https://github.com/sofa-framework/sofa/pull/2557 ); - [SofaCUDA] Add benchmark scenes to check CudaMeshSpringForceField [#2556]( https://github.com/sofa-framework/sofa/pull/2556 ); - [SofaCUDA] Add benchmarks logs in .csv file [#2588]( https://github.com/sofa-framework/sofa/pull/2588 ); - [SofaCUDA] Add support for NearestPointROI [#2620]( https://github.com/sofa-framework/sofa/pull/2620 ); - [SofaCUDA] Add support of CudaVector for qt gui dataWidget [#2558]( https://github.com/sofa-framework/sofa/pull/2558 ); - [SofaMatrix] A new plugin adding tools for linear system matrix [#2517]( https://github.com/sofa-framework/sofa/pull/2517 ); - [SofaMatrix] Eigen can be used to reorder a mesh in order to reduce fill-in [#2875]( https://github.com/sofa-framework/sofa/pull/2875 ); - [SofaMatrix] Export the compliance matrix of a constraint solver [#2782]( https://github.com/sofa-framework/sofa/pull/2782 ); - [SofaMatrix] More details in the readme file [#2580]( https://github.com/sofa-framework/sofa/pull/2580 ); - [SofaMatrix] Setup arithmetic precision for matrix export [#2724]( https://github.com/sofa-framework/sofa/pull/2724 ). **Examples / Scenes**; - [examples] An example showing a skybox [#2678]( https://github.com/sofa-framework/sofa/pull/2678 ); - [examples] Minor fix in file for topological change process [#3121]( https://github.com/sofa-framework/sofa/pull/3121 ); - [examples] Speed up the falling cubes [#2646]( https://github.com/sofa-framework/sofa/pull/2646 ). **Scripts / Tools**; - [tools] Update sofa launcher to use SofaPython3 [#2968]( https://github.com/sofa-framework/sofa/pull/2968 ). ### Bug Fixes. **Architecture**; - [CMake] FIX out-of-tr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:103192,reduce,reduce,103192,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['reduce'],['reduce']
Energy Efficiency,amework]** [BREAKING] Rename: data tracker has changed [#822]( https://github.com/sofa-framework/sofa/pull/822 ); - [SofaPreconditioner] modularization [#668]( https://github.com/sofa-framework/sofa/pull/668 ); - [SofaSparseSolver] modularization [#668]( https://github.com/sofa-framework/sofa/pull/668 ). ### Improvements. **Architecture**; - [CMake] use ccache if available [#692]( https://github.com/sofa-framework/sofa/pull/692 ); - [Cmake] Add a findCython.cmake [#734]( https://github.com/sofa-framework/sofa/pull/734 ); - [CMake] ADD QtIFW generator + improvements [#796]( https://github.com/sofa-framework/sofa/pull/796 ); - [SofaMacros] ADD CMake macro to create pybind11 & cython targets and modules #859( https://github.com/sofa-framework/sofa/pull/859 ). **Modules**; - [All] Use drawtool everywhere [#704]( https://github.com/sofa-framework/sofa/pull/704 ); - [All] Sofa add mechanical matrix mapper [#721]( https://github.com/sofa-framework/sofa/pull/721 ); - **[SofaBaseTopology]** Add battery of tests on topology containers [#708]( https://github.com/sofa-framework/sofa/pull/708 ); - **[SofaBaseTopology]** Topology change propagation to Mechanical State [#838]( https://github.com/sofa-framework/sofa/pull/838 ); - **[SofaBaseMechanics]** Optimize barycentric mapping initialization [#798]( https://github.com/sofa-framework/sofa/pull/798 ); - [SofaBoundaryCondition] Factorize partial fixedconstraint [#718]( https://github.com/sofa-framework/sofa/pull/718 ); - [SofaConstraint] add a force data field in SlidingConstraint [#780]( https://github.com/sofa-framework/sofa/pull/780 ); - [SofaConstraint] ADD Data to show constraint forces [#840]( https://github.com/sofa-framework/sofa/pull/840 ); - [SofaConstraint] allow call of constraints' storeLambda() [#854]( https://github.com/sofa-framework/sofa/pull/854 ); - **[SofaCore]** Add new (simpler) DataEngine implementation [#760]( https://github.com/sofa-framework/sofa/pull/760 ); - [SofaExporter] ADD in WriteState all require,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:279163,battery,battery,279163,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['battery'],['battery']
Energy Efficiency,"ary's; complete source code as you receive it, in any medium, provided that; you conspicuously and appropriately publish on each copy an; appropriate copyright notice and disclaimer of warranty; keep intact; all the notices that refer to this License and to the absence of any; warranty; and distribute a copy of this License along with the; Library. You may charge a fee for the physical act of transferring a copy,; and you may at your option offer warranty protection in exchange for a; fee. 2. You may modify your copy or copies of the Library or any portion; of it, thus forming a work based on the Library, and copy and; distribute such modifications or work under the terms of Section 1; above, provided that you also meet all of these conditions:. a) The modified work must itself be a software library. b) You must cause the files modified to carry prominent notices; stating that you changed the files and the date of any change. c) You must cause the whole of the work to be licensed at no; charge to all third parties under the terms of this License. d) If a facility in the modified Library refers to a function or a; table of data to be supplied by an application program that uses; the facility, other than as an argument passed when the facility; is invoked, then you must make a good faith effort to ensure that,; in the event an application does not supply such function or; table, the facility still operates, and performs whatever part of; its purpose remains meaningful. (For example, a function in a library to compute square roots has; a purpose that is entirely well-defined independent of the; application. Therefore, Subsection 2d requires that any; application-supplied function or table used by this function must; be optional: if the application does not supply it, the square; root function must still compute square roots.). These requirements apply to the modified work as a whole. If; identifiable sections of that work are not derived from the Library,; and can be re",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:8859,charge,charge,8859,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['charge'],['charge']
Energy Efficiency,"cmake_minimum_required(VERSION 3.22); project(SofaValidation LANGUAGES CXX). set(SOFAVALIDATION_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAVALIDATION_SRC}/config.h.in; ${SOFAVALIDATION_SRC}/initSofaValidation.h; ${SOFAVALIDATION_SRC}/DataController.h; ${SOFAVALIDATION_SRC}/DataMonitor.h; ${SOFAVALIDATION_SRC}/DevAngleCollisionMonitor.h; ${SOFAVALIDATION_SRC}/DevAngleCollisionMonitor.inl; ${SOFAVALIDATION_SRC}/DevMonitor.h; ${SOFAVALIDATION_SRC}/DevMonitorManager.h; ${SOFAVALIDATION_SRC}/DevTensionMonitor.h; ${SOFAVALIDATION_SRC}/DevTensionMonitor.inl; ${SOFAVALIDATION_SRC}/EvalPointsDistance.h; ${SOFAVALIDATION_SRC}/EvalPointsDistance.inl; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.h; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.inl; ${SOFAVALIDATION_SRC}/ExtraMonitor.h; ${SOFAVALIDATION_SRC}/ExtraMonitor.inl; ${SOFAVALIDATION_SRC}/Monitor.h; ${SOFAVALIDATION_SRC}/Monitor.inl; ). set(SOURCE_FILES; ${SOFAVALIDATION_SRC}/initSofaValidation.cpp; ${SOFAVALIDATION_SRC}/DataController.cpp; ${SOFAVALIDATION_SRC}/DataMonitor.cpp; ${SOFAVALIDATION_SRC}/DevAngleCollisionMonitor.cpp; ${SOFAVALIDATION_SRC}/DevMonitorManager.cpp; ${SOFAVALIDATION_SRC}/DevTensionMonitor.cpp; ${SOFAVALIDATION_SRC}/EvalPointsDistance.cpp; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.cpp; ${SOFAVALIDATION_SRC}/ExtraMonitor.cpp; ${SOFAVALIDATION_SRC}/Monitor.cpp; ). find_package(Sofa.Simulation.Common REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Common Sofa.Component.Collision). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Playback REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Playback). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJEC",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt:849,Monitor,Monitor,849,applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt,2,['Monitor'],['Monitor']
Energy Efficiency,com/sofa-framework/sofa/pull/2859 ); - [SofaBoundaryCondition] Replace deprecated headers [#2574]( https://github.com/sofa-framework/sofa/pull/2574 ); - [SofaBoundaryCondition] Sanitize [#2559]( https://github.com/sofa-framework/sofa/pull/2559 ); - [SofaConstraint] Clean timers in GenericConstraintSolver [#2769]( https://github.com/sofa-framework/sofa/pull/2769 ); - [SofaConstraint] Clean timers in LCPConstraintSolver [#2640]( https://github.com/sofa-framework/sofa/pull/2640 ); - [SofaConstraint] Replace raw pointer to Link [#2770]( https://github.com/sofa-framework/sofa/pull/2770 ); - [SofaConstraint] Sanitize [#2577]( https://github.com/sofa-framework/sofa/pull/2577 ); - [SofaCore] Add ObjectFactory_test.cpp [#2696]( https://github.com/sofa-framework/sofa/pull/2696 ); - [SofaCore] Check link to mstate if specified [#2553]( https://github.com/sofa-framework/sofa/pull/2553 ); - [SofaCore] Fix type conversion [#2639]( https://github.com/sofa-framework/sofa/pull/2639 ); - [SofaCore] Name dynamically allocated vec ids [#2811]( https://github.com/sofa-framework/sofa/pull/2811 ); - [SofaCore_test] Minor clean of few unit tests [#2573]( https://github.com/sofa-framework/sofa/pull/2573 ); - [SofaEulerianFluid] Move examples into plugin [#2833]( https://github.com/sofa-framework/sofa/pull/2833 ); - [SofaGeneralEngine] Fix some warnings [#2723]( https://github.com/sofa-framework/sofa/pull/2723 ); - [SofaGuiQt] Error handling when exporting graph [#2771]( https://github.com/sofa-framework/sofa/pull/2771 ); - [SofaGuiQt] Fix english spelling: AdvancedTimer instead of AdvanceTimer [#2816]( https://github.com/sofa-framework/sofa/pull/2816 ); - [SofaGuiQt] Modernize the 'qt::connect' to use the c++ syntax [#2943]( https://github.com/sofa-framework/sofa/pull/2943 ); - [SofaGuiQt] Remove sec unit from GUI [#2742]( https://github.com/sofa-framework/sofa/pull/2742 ); - [SofaGuiQt] Rename attributes to follow SOFA guidelines. [#2944]( https://github.com/sofa-framework/sofa/pull/2944 );,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:127182,allocate,allocated,127182,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['allocate'],['allocated']
Energy Efficiency,com/sofa-framework/sofa/pull/518 ); - [SofaBaseLinearSolver]; - Add comments in the CGLinearSolver [#469]( https://github.com/sofa-framework/sofa/pull/469 ); - [SofaBaseVisual]; - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ); - [SofaDefaultType]; - remove warning generated by MapMapSparseMatrixEigenUtils [#485]( https://github.com/sofa-framework/sofa/pull/485 ); - [SofaHelper]; - mute extlibs warnings [#397]( https://github.com/sofa-framework/sofa/pull/397 ); - FileMonitor_windows compilation [#448]( https://github.com/sofa-framework/sofa/pull/448 ); - Clean API message [#503]( https://github.com/sofa-framework/sofa/pull/503 ). **Other modules**; - [SofaGeneralEngine]; - add test and minor cleaning for IndexValueMapper [#319]( https://github.com/sofa-framework/sofa/pull/319 ); - [SofaGeneralObjectInteraction]; - Remove stiffness multiplicator in SpringForceField [#290]( https://github.com/sofa-framework/sofa/pull/290 ); - [SofaValidation]; - move code to set default folder for monitor to init function [#500]( https://github.com/sofa-framework/sofa/pull/500 ). **Plugins / Projects**; - [All]; - FIX: compilation warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - [CGALPlugin]; - Fix warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - [image]; - Fix warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - [Registration]; - Remove deprecated scene [#331]( https://github.com/sofa-framework/sofa/pull/331 ); - [SofaPython]; - General cleaning [#304]( https://github.com/sofa-framework/sofa/pull/304 ); - Fix warnings [#361]( https://github.com/sofa-framework/sofa/pull/361 ); - print cleaning + SofaPython quaternion dot product [#404]( https://github.com/sofa-framework/sofa/pull/404 ); - [runSofa]; - Clean : remove non-ASCII chars in string [#327]( https://github.com/sofa-framework/sofa/pull/327 ). ____________________________________________________________. ## [v17.06]( https://github.com/sofa-f,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:322972,monitor,monitor,322972,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['monitor'],['monitor']
Energy Efficiency,"commercially, and; only if you received the object code with such an offer, in accord; with subsection 6b. d) Convey the object code by offering access from a designated; place (gratis or for a charge), and offer equivalent access to the; Corresponding Source in the same way through the same place at no; further charge. You need not require recipients to copy the; Corresponding Source along with the object code. If the place to; copy the object code is a network server, the Corresponding Source; may be on a different server (operated by you or a third party); that supports equivalent copying facilities, provided you maintain; clear directions next to the object code saying where to find the; Corresponding Source. Regardless of what server hosts the; Corresponding Source, you remain obligated to ensure that it is; available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided; you inform other peers where the object code and Corresponding; Source of the work are being offered to the general public at no; charge under subsection 6d. A separable portion of the object code, whose source code is excluded; from the Corresponding Source as a System Library, need not be; included in conveying the object code work. A ""User Product"" is either (1) a ""consumer product"", which means any; tangible personal property which is normally used for personal, family,; or household purposes, or (2) anything designed or sold for incorporation; into a dwelling. In determining whether a product is a consumer product,; doubtful cases shall be resolved in favor of coverage. For a particular; product received by a particular user, ""normally used"" refers to a; typical or common use of that class of product, regardless of the status; of the particular user or of the way in which the particular user; actually uses, or expects or is expected to use, the product. A product; is a consumer product regardless of whether the product has ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:33479,charge,charge,33479,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['charge'],['charge']
Energy Efficiency,"e, version 2, hence; the version number 2.1.]. Preamble. The licenses for most software are designed to take away your; freedom to share and change it. By contrast, the GNU General Public; Licenses are intended to guarantee your freedom to share and change; free software--to make sure the software is free for all its users. This license, the Lesser General Public License, applies to some; specially designated software packages--typically libraries--of the; Free Software Foundation and other authors who decide to use it. You; can use it too, but we suggest you first think carefully about whether; this license or the ordinary General Public License is the better; strategy to use in any particular case, based on the explanations below. When we speak of free software, we are referring to freedom of use,; not price. Our General Public Licenses are designed to make sure that; you have the freedom to distribute copies of free software (and charge; for this service if you wish); that you receive source code or can get; it if you want it; that you can change the software and use pieces of; it in new free programs; and that you are informed that you can do; these things. To protect your rights, we need to make restrictions that forbid; distributors to deny you these rights or to ask you to surrender these; rights. These restrictions translate to certain responsibilities for; you if you distribute copies of the library or if you modify it. For example, if you distribute copies of the library, whether gratis; or for a fee, you must give the recipients all the rights that we gave; you. You must make sure that they, too, receive or can get the source; code. If you link other code with the library, you must provide; complete object files to the recipients, so that they can relink them; with the library after making changes to the library and recompiling; it. And you must show them these terms so they know their rights. We protect your rights with a two-step method: (1) we copyright",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:1368,charge,charge,1368,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['charge'],['charge']
Energy Efficiency,"en you convey a covered work, you waive any legal power to forbid; circumvention of technological measures to the extent such circumvention; is effected by exercising rights under this License with respect to; the covered work, and you disclaim any intention to limit operation or; modification of the work as a means of enforcing, against the work's; users, your or third parties' legal rights to forbid circumvention of; technological measures. 4. Conveying Verbatim Copies. You may convey verbatim copies of the Program's source code as you; receive it, in any medium, provided that you conspicuously and; appropriately publish on each copy an appropriate copyright notice;; keep intact all notices stating that this License and any; non-permissive terms added in accord with section 7 apply to the code;; keep intact all notices of the absence of any warranty; and give all; recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey,; and you may offer support or warranty protection for a fee. 5. Conveying Modified Source Versions. You may convey a work based on the Program, or the modifications to; produce it from the Program, in the form of source code under the; terms of section 4, provided that you also meet all of these conditions:. a) The work must carry prominent notices stating that you modified; it, and giving a relevant date. b) The work must carry prominent notices stating that it is; released under this License and any conditions added under section; 7. This requirement modifies the requirement in section 4 to; ""keep intact all notices"". c) You must license the entire work, as a whole, under this; License to anyone who comes into possession of a copy. This; License will therefore apply, along with any applicable section 7; additional terms, to the whole of the work, and all its parts,; regardless of how they are packaged. This License gives no; permission to license the work in any other way, but it",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:29120,charge,charge,29120,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['charge'],['charge']
Energy Efficiency,ew ImplicitFields and getHessian to ScalarField [#1510]( https://github.com/sofa-framework/sofa/pull/1510 ); - **[SofaKernel]** ADD: add polynomial springs force fields [#1342]( https://github.com/sofa-framework/sofa/pull/1342 ); - **[SofaKernel]** Add DataLink object & PathResolver. [#1485]( https://github.com/sofa-framework/sofa/pull/1485 ); - **[SofaKernel]** Add setLinkedBase method in BaseLink [#1436]( https://github.com/sofa-framework/sofa/pull/1436 ); - **[SofaKernel]** Add whole program optimization (aka link-time optimization) for msvc [#1468]( https://github.com/sofa-framework/sofa/pull/1468 ); - **[SofaKernel]** Exposing Data in ContactListener. [#1678]( https://github.com/sofa-framework/sofa/pull/1678 ); - **[SofaKernel]** Filerepository gettemppath [#1383]( https://github.com/sofa-framework/sofa/pull/1383 ); - **[SofaKernel]** Set read-only all data defined by the file loaded [#1660]( https://github.com/sofa-framework/sofa/pull/1660 ); - [SofaQtGui] Restore GraphWidget for Momentum and Energy using QtCharts instead of Qwt [#1508]( https://github.com/sofa-framework/sofa/pull/1508 ). **Plugins / Projects**; - [Compliant] Add WinchMultiMapping and ContactMultiMapping [#1557]( https://github.com/sofa-framework/sofa/pull/1557 ). ### Bug Fixes; **Architecture**; - [CMake] FIX non-existent target with sofa_add_plugin [#1584]( https://github.com/sofa-framework/sofa/pull/1584 ); - [CMake] Fix Cmake configure step with SOFA_WITH_DEPRECATED_COMPONENTS [#1452]( https://github.com/sofa-framework/sofa/pull/1452 ). **Extlibs**; - [extlibs/gtest] Fix the broken sofa_create_package_with_targets in gtest [#1457]( https://github.com/sofa-framework/sofa/pull/1457 ). **Modules**; - [All] issofa_bugfix: cleans and fixes [#218]( https://github.com/sofa-framework/sofa/pull/218 ); - [SofaBaseLinearSolver] Fix logging info with SPARSEMATRIX_VERBOSE [#1715]( https://github.com/sofa-framework/sofa/pull/1715 ); - [SofaBaseMechanics] Use d_showColor for indices instead of arbitrary w,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:219147,Energy,Energy,219147,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Energy'],['Energy']
Energy Efficiency,"f.org/>; Everyone is permitted to copy and distribute verbatim copies; of this license document, but changing it is not allowed. Preamble. The GNU General Public License is a free, copyleft license for; software and other kinds of works. The licenses for most software and other practical works are designed; to take away your freedom to share and change the works. By contrast,; the GNU General Public License is intended to guarantee your freedom to; share and change all versions of a program--to make sure it remains free; software for all its users. We, the Free Software Foundation, use the; GNU General Public License for most of our software; it applies also to; any other work released this way by its authors. You can apply it to; your programs, too. When we speak of free software, we are referring to freedom, not; price. Our General Public Licenses are designed to make sure that you; have the freedom to distribute copies of free software (and charge for; them if you wish), that you receive source code or can get it if you; want it, that you can change the software or use pieces of it in new; free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you; these rights or asking you to surrender the rights. Therefore, you have; certain responsibilities if you distribute copies of the software, or if; you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether; gratis or for a fee, you must pass on to the recipients the same; freedoms that you received. You must make sure that they, too, receive; or can get the source code. And you must show them these terms so they; know their rights. Developers that use the GNU GPL protect your rights with two steps:; (1) assert copyright on the software, and (2) offer you this License; giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GP",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:19972,charge,charge,19972,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['charge'],['charge']
Energy Efficiency,"fa/pull/3236) ; - [LinearAlgebra] Remove deprecated code [#3251](https://github.com/sofa-framework/sofa/pull/3251) ; - [tests] Fix remove SofaComponentAll plugin which doesn't exist anymore [#3266](https://github.com/sofa-framework/sofa/pull/3266) ; - [Test] Remove the output of a test from file versioning [#3285](https://github.com/sofa-framework/sofa/pull/3285) ; - [Collision] Cleaning pass on types [#3287](https://github.com/sofa-framework/sofa/pull/3287) ; - [S.C.MechanicalLoad] PlaneForcefield: Fix ""potential divide by zero"" warnings in msvc [#3315](https://github.com/sofa-framework/sofa/pull/3315) ; - [LinearAlgebra] Explicit instantiations and extern template for some matrices [#3334](https://github.com/sofa-framework/sofa/pull/3334) ; - [Mapping] Add checks at init in TopologicalMapping [#3339](https://github.com/sofa-framework/sofa/pull/3339) ; - [Topology.Container.Grid] trivial optimization in GridTopology [#3348](https://github.com/sofa-framework/sofa/pull/3348) ; - [All] Reduce calls to getValue [#3356](https://github.com/sofa-framework/sofa/pull/3356) ; - [all] Remove in-class typedefs pointing to common sofa::type [#3357](https://github.com/sofa-framework/sofa/pull/3357) ; - [Lagrangian.Solver] Move MechanicalGetConstraintResolutionVisitor in its own files [#3390](https://github.com/sofa-framework/sofa/pull/3390) ; - [Lagrangian.Solver] Move MechanicalGetConstraintViolationVisitor in its own files [#3391](https://github.com/sofa-framework/sofa/pull/3391) ; - [Lagrangian.Solver] Move ConstraintStoreLambdaVisitor in visitors folder [#3392](https://github.com/sofa-framework/sofa/pull/3392) ; - [Topology.Mapping] Types cleaning in Edge2QuadTopologicalMapping [#3408](https://github.com/sofa-framework/sofa/pull/3408) ; - [SolidMechanics.FEM] Clean and optimise TriangularFEMForceField draw method [#3413](https://github.com/sofa-framework/sofa/pull/3413); - [Topology.Mapping] Replace all beginEdit by writeAccessor to access Loc2GlobMap [#3429](https://github.c",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:87845,Reduce,Reduce,87845,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Reduce'],['Reduce']
Energy Efficiency,"file in cmake 3.13 [#897]( https://github.com/sofa-framework/sofa/pull/897 ); - [CMake] Fix relocatable plugins [#1059]( https://github.com/sofa-framework/sofa/pull/1059 ); - [CMake] FIX: exporting options in SofaFrameworkConfig.cmake [#927]( https://github.com/sofa-framework/sofa/pull/927 ); - [CMake] FIX: wrong paths of installed headers in SofaBaseMechanics [#887]( https://github.com/sofa-framework/sofa/pull/887 ); - [CMake] FIX build/install plugins directory [#959]( https://github.com/sofa-framework/sofa/pull/959 ). **Modules**; - [All] Three small fixes in SofaBaseLinearSolver, SofaBoundaryCondition, runSofa [#931]( https://github.com/sofa-framework/sofa/pull/931 ); - [All] FIXES made for RoboSoft2019 [#1003]( https://github.com/sofa-framework/sofa/pull/1003 ); - [All] Fix some warnings [#873]( https://github.com/sofa-framework/sofa/pull/873 ); - [All] Several bug fixes [#985]( https://github.com/sofa-framework/sofa/pull/985 ); - [All] Some fixes to have a ... green dashboard! [#982]( https://github.com/sofa-framework/sofa/pull/982 ); - [All] Fix compilation with SOFA_NO_OPENGL flag [#1032]( https://github.com/sofa-framework/sofa/pull/1032 ); - [SofaConstraint] Convert static sized arrays to dynamic ones in GenericConstraintSolver [#920]( https://github.com/sofa-framework/sofa/pull/920 ); - **[SofaBaseMechanics]** Fix barycentric mapping again [#924]( https://github.com/sofa-framework/sofa/pull/924 ); - **[SofaBaseTopology]** Fix Crash when loading a vtk file generated by Gmsh using TetrahedronSetTopologyContainer as container [#1008]( https://github.com/sofa-framework/sofa/pull/1008 ); - **[SofaBaseTopology]** Fix right setDirty/clean topologyData [#889]( https://github.com/sofa-framework/sofa/pull/889 ); - **[SofaBaseTopology]**[DrawTools] Some fix/update in topology internal draw methods. [#877]( https://github.com/sofa-framework/sofa/pull/877 ); - **[SofaBaseTopology]** Yet another fix in Tetra2triangleTopologicalMapping [#998]( https://github.com/sofa-fram",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:263863,green,green,263863,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['green'],['green']
Energy Efficiency,"he value is zero, and black; pixel means the value is non-zero.; * **bmp**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero. #### Link to Linear Solver. GlobalSystemMatrixExporter must have a link to a linear solver (a component inheriting from `sofa::core::behavior::LinearSolver`). The link can be explicit. Example:; ```xml; <GlobalSystemMatrixExporter linearSolver=""@pathToLinearSolver""/>; ```. The link can be implicit. I.e the component will search for a linear solver in the current Node. Example:; ```xml; <SparseLDLSolver/>; <GlobalSystemMatrixExporter/>; ```. A use case is available in the examples folder. ### GlobalSystemMatrixImage. GlobalSystemMatrixImage is a component to visualize the matrix of a linear system in a; Qt widget. #### Link to Linear Solver. GlobalSystemMatrixImage must have a link to a linear solver (a component inheriting from `sofa::core::behavior::LinearSolver`). The link can be explicit. Example:; ```xml; <GlobalSystemMatrixImage linearSolver=""@pathToLinearSolver""/>; ```. The link can be implicit. I.e the component will search for a linear solver in the current Node. Example:; ```xml; <SparseLDLSolver/>; <GlobalSystemMatrixImage/>; ```. A use case is available in the examples folder. #### Screenshot. ![GlobalSystemMatrixImage](doc/GlobalSystemMatrixImage.png). ### FillReducingOrdering. This component reorders the degrees of freedom in a mesh in order to reduce fill-in in sparse matrix factorization.; Two methods of reordering are available:; 1) Metis; 2) Approximate minimum degree (AMD) from Eigen. The example `FillReducingOrdering.scn` shows how to use this component.; In this simulation, the same object is simulated twice:; 1) No reordering method is applied; 2) A reordering method is applied. It can be observed that the number of non-zero values in the matrix decomposition is about 80% lower when the vertices are reordered.; It results to a faster matrix system resolution.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md:2869,reduce,reduce,2869,applications/plugins/SofaMatrix/SofaMatrix.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md,1,['reduce'],['reduce']
Energy Efficiency,"hing version number. If the Library; specifies a version number of this License which applies to it and; ""any later version"", you have the option of following the terms and; conditions either of that version or of any later version published by; the Free Software Foundation. If the Library does not specify a; license version number, you may choose any version ever published by; the Free Software Foundation. 14. If you wish to incorporate parts of the Library into other free; programs whose distribution conditions are incompatible with these,; write to the author to ask for permission. For software which is; copyrighted by the Free Software Foundation, write to the Free; Software Foundation; we sometimes make exceptions for this. Our; decision will be guided by the two goals of preserving the free status; of all derivatives of our free software and of promoting the sharing; and reuse of software generally. NO WARRANTY. 15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO; WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.; EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR; OTHER PARTIES PROVIDE THE LIBRARY ""AS IS"" WITHOUT WARRANTY OF ANY; KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR; PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE; LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME; THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN; WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY; AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU; FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR; CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE; LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING; RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PAR",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:23007,CHARGE,CHARGE,23007,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['CHARGE'],['CHARGE']
Energy Efficiency,"is License. You are not responsible; for enforcing compliance by third parties with this License. An ""entity transaction"" is a transaction transferring control of an; organization, or substantially all assets of one, or subdividing an; organization, or merging organizations. If propagation of a covered; work results from an entity transaction, each party to that; transaction who receives a copy of the work also receives whatever; licenses to the work the party's predecessor in interest had or could; give under the previous paragraph, plus a right to possession of the; Corresponding Source of the work from the predecessor in interest, if; the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the; rights granted or affirmed under this License. For example, you may; not impose a license fee, royalty, or other charge for exercise of; rights granted under this License, and you may not initiate litigation; (including a cross-claim or counterclaim in a lawsuit) alleging that; any patent claim is infringed by making, using, selling, offering for; sale, or importing the Program or any portion of it. 11. Patents. A ""contributor"" is a copyright holder who authorizes use under this; License of the Program or a work on which the Program is based. The; work thus licensed is called the contributor's ""contributor version"". A contributor's ""essential patent claims"" are all patent claims; owned or controlled by the contributor, whether already acquired or; hereafter acquired, that would be infringed by some manner, permitted; by this License, of making, using, or selling its contributor version,; but do not include claims that would be infringed only as a; consequence of further modification of the contributor version. For; purposes of this definition, ""control"" includes the right to grant; patent sublicenses in a manner consistent with the requirements of; this License. Each contributor grants you a non-exclusive",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:42670,charge,charge,42670,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['charge'],['charge']
Energy Efficiency,"llisionMonitor.h; ${SOFAVALIDATION_SRC}/DevAngleCollisionMonitor.inl; ${SOFAVALIDATION_SRC}/DevMonitor.h; ${SOFAVALIDATION_SRC}/DevMonitorManager.h; ${SOFAVALIDATION_SRC}/DevTensionMonitor.h; ${SOFAVALIDATION_SRC}/DevTensionMonitor.inl; ${SOFAVALIDATION_SRC}/EvalPointsDistance.h; ${SOFAVALIDATION_SRC}/EvalPointsDistance.inl; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.h; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.inl; ${SOFAVALIDATION_SRC}/ExtraMonitor.h; ${SOFAVALIDATION_SRC}/ExtraMonitor.inl; ${SOFAVALIDATION_SRC}/Monitor.h; ${SOFAVALIDATION_SRC}/Monitor.inl; ). set(SOURCE_FILES; ${SOFAVALIDATION_SRC}/initSofaValidation.cpp; ${SOFAVALIDATION_SRC}/DataController.cpp; ${SOFAVALIDATION_SRC}/DataMonitor.cpp; ${SOFAVALIDATION_SRC}/DevAngleCollisionMonitor.cpp; ${SOFAVALIDATION_SRC}/DevMonitorManager.cpp; ${SOFAVALIDATION_SRC}/DevTensionMonitor.cpp; ${SOFAVALIDATION_SRC}/EvalPointsDistance.cpp; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.cpp; ${SOFAVALIDATION_SRC}/ExtraMonitor.cpp; ${SOFAVALIDATION_SRC}/Monitor.cpp; ). find_package(Sofa.Simulation.Common REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Common Sofa.Component.Collision). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Playback REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Playback). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""plugins""; ). ## Tests; cmake_dependent_option(SOFAVALIDATION_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" O",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt:1340,Monitor,Monitor,1340,applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt,1,['Monitor'],['Monitor']
Energy Efficiency,"luding a physical distribution medium), accompanied by a; written offer, valid for at least three years and valid for as; long as you offer spare parts or customer support for that product; model, to give anyone who possesses the object code either (1) a; copy of the Corresponding Source for all the software in the; product that is covered by this License, on a durable physical; medium customarily used for software interchange, for a price no; more than your reasonable cost of physically performing this; conveying of source, or (2) access to copy the; Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the; written offer to provide the Corresponding Source. This; alternative is allowed only occasionally and noncommercially, and; only if you received the object code with such an offer, in accord; with subsection 6b. d) Convey the object code by offering access from a designated; place (gratis or for a charge), and offer equivalent access to the; Corresponding Source in the same way through the same place at no; further charge. You need not require recipients to copy the; Corresponding Source along with the object code. If the place to; copy the object code is a network server, the Corresponding Source; may be on a different server (operated by you or a third party); that supports equivalent copying facilities, provided you maintain; clear directions next to the object code saying where to find the; Corresponding Source. Regardless of what server hosts the; Corresponding Source, you remain obligated to ensure that it is; available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided; you inform other peers where the object code and Corresponding; Source of the work are being offered to the general public at no; charge under subsection 6d. A separable portion of the object code, whose source code is excluded; from the Corresponding Sourc",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:32586,charge,charge,32586,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,2,['charge'],['charge']
Energy Efficiency,mall cleaning [#2174]( https://github.com/sofa-framework/sofa/pull/2174 ); - **[SofaCore]** Deprecate operator= [#2167]( https://github.com/sofa-framework/sofa/pull/2167 ); - **[SofaCore]** Factoring code in Link.h [#1704]( https://github.com/sofa-framework/sofa/pull/1704 ); - **[SofaCore]** Merge TData in Data. [#1753]( https://github.com/sofa-framework/sofa/pull/1753 ); - **[SofaCore]** Minor cleaning in constraints [#2138]( https://github.com/sofa-framework/sofa/pull/2138 ); - **[SofaCore]** Move Link::CheckPath() method to PathResolver::CheckPath() [#1717]( https://github.com/sofa-framework/sofa/pull/1717 ); - **[SofaCore]** Move definition Link::read() method to BaseLink::read() [#1736]( https://github.com/sofa-framework/sofa/pull/1736 ); - **[SofaCore]** Move function definition in cpp files [#2041]( https://github.com/sofa-framework/sofa/pull/2041 ); - **[SofaCore]** Move the streaming operator from .h to .cpp [#1751]( https://github.com/sofa-framework/sofa/pull/1751 ); - **[SofaCore]** Reduce the needs for include in Node.h [#1744]( https://github.com/sofa-framework/sofa/pull/1744 ); - **[SofaCore]** Remove empty file [#2204]( https://github.com/sofa-framework/sofa/pull/2204 ); - **[SofaCore_simutest]** Add tests for Link::CheckPath [#1714]( https://github.com/sofa-framework/sofa/pull/1714 ); - **[SofaCore_test]** Update the two failling tests so they match the new convention for TypeInfo [#1709]( https://github.com/sofa-framework/sofa/pull/1709 ); - **[SofaExplicitOdeSolver]** Mark Data as disabled [#2218]( https://github.com/sofa-framework/sofa/pull/2218 ); - [SofaExporter] Remove SofaBaseVisual dependency [#2039]( https://github.com/sofa-framework/sofa/pull/2039 ); - [SofaExporter] Removed duplicated header guard [#1954]( https://github.com/sofa-framework/sofa/pull/1954 ); - [SofaExporter] Update OBJExporter example [#1782]( https://github.com/sofa-framework/sofa/pull/1782 ); - **[SofaFramework/Sofa.Testing]** remove macro and move testing resources from S,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:201411,Reduce,Reduce,201411,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Reduce'],['Reduce']
Energy Efficiency,"mpilation's users; beyond what the individual works permit. Inclusion of a covered work; in an aggregate does not cause this License to apply to the other; parts of the aggregate. 6. Conveying Non-Source Forms. You may convey a covered work in object code form under the terms; of sections 4 and 5, provided that you also convey the; machine-readable Corresponding Source under the terms of this License,; in one of these ways:. a) Convey the object code in, or embodied in, a physical product; (including a physical distribution medium), accompanied by the; Corresponding Source fixed on a durable physical medium; customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product; (including a physical distribution medium), accompanied by a; written offer, valid for at least three years and valid for as; long as you offer spare parts or customer support for that product; model, to give anyone who possesses the object code either (1) a; copy of the Corresponding Source for all the software in the; product that is covered by this License, on a durable physical; medium customarily used for software interchange, for a price no; more than your reasonable cost of physically performing this; conveying of source, or (2) access to copy the; Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the; written offer to provide the Corresponding Source. This; alternative is allowed only occasionally and noncommercially, and; only if you received the object code with such an offer, in accord; with subsection 6b. d) Convey the object code by offering access from a designated; place (gratis or for a charge), and offer equivalent access to the; Corresponding Source in the same way through the same place at no; further charge. You need not require recipients to copy the; Corresponding Source along with the object code. If the place to; copy the object code is a network server, the Corres",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:32212,charge,charge,32212,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['charge'],['charge']
Energy Efficiency,"nslation is included without limitation in; the term ""modification"".) Each licensee is addressed as ""you"". Activities other than copying, distribution and modification are not; covered by this License; they are outside its scope. The act of; running the Program is not restricted, and the output from the Program; is covered only if its contents constitute a work based on the; Program (independent of having been made by running the Program).; Whether that is true depends on what the Program does. 1. You may copy and distribute verbatim copies of the Program's; source code as you receive it, in any medium, provided that you; conspicuously and appropriately publish on each copy an appropriate; copyright notice and disclaimer of warranty; keep intact all the; notices that refer to this License and to the absence of any warranty;; and give any other recipients of the Program a copy of this License; along with the Program. You may charge a fee for the physical act of transferring a copy, and; you may at your option offer warranty protection in exchange for a fee. 2. You may modify your copy or copies of the Program or any portion; of it, thus forming a work based on the Program, and copy and; distribute such modifications or work under the terms of Section 1; above, provided that you also meet all of these conditions:. a) You must cause the modified files to carry prominent notices; stating that you changed the files and the date of any change. b) You must cause any work that you distribute or publish, that in; whole or in part contains or is derived from the Program or any; part thereof, to be licensed as a whole at no charge to all third; parties under the terms of this License. c) If the modified program normally reads commands interactively; when run, you must cause it, when started running for such; interactive use in the most ordinary way, to print or display an; announcement including an appropriate copyright notice and a; notice that there is no warranty (or else, s",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:4383,charge,charge,4383,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,6,['charge'],['charge']
Energy Efficiency,"of this tutorial. We add a child node containing the triangular topology which is directly linked to the tetrahedral mesh thanks to the topological mapping component. This will allow us to display a visual model.; Key points; In this step, we add a number of components that will contribute to the visual model. Dynamic topological components to store the surface mesh. ; Tetra2TriangleTopologicalMapping component is used to map triangles on the border of the tetrahedral mesh to the surface topological container. ; Then, OglModel can be used to visualize the surface mesh. Add a new GNode to the Tetrahedrons Mesh node. Rename it ""Triangles Mesh"".; Add the following components to the Triangles Mesh node, giving them appropriate names:. TriangleSetTopologyContainer named ""Container""; TriangleSetTopoologyModifier named ""Modifier""; TriangleSetGeometryAlgorithms named ""GeomAlgo""; Tetra2TriangleTopologicalMapping named ""Mapping"". The TriangleSetTopoologyModifier is a component which can manipulate an; associated TriangleSetTopologyContainer. There is therefore a clean separation between the container, which allocates and store the memory, and the algorithms which can manipulate this data. ; In the Mapping properties, change the Input topology to map to ""@../Container"", and change the Output topology to map to @Container.; This tells the mapping to convert the tetrahedron topology to a triangle topology.; Add a new GNode to the Triangles Mesh node, and rename it ""Visu"".; Add an OglModel component to the Visu node. Rename it ""Visual"".; Find the IdentityMapping component using the Filter. In the dropdown menu on the right, select Vec3d, ExtVec3f, and add it to the Visu node.; In the Property 2/2 tab, change the Input object to map to ""@../../Volume"" and the Output object to map to ""@Visual"".; Results; Run in SOFA and animate.; In this step the mechanical behavior stays the same. But a visual model can now be used to display the surface of the object. Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/3_TopoMapping.html:1184,allocate,allocates,1184,examples/Tutorials/StepByStep/TopologicalMapping/3_TopoMapping.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/TopologicalMapping/3_TopoMapping.html,1,['allocate'],['allocates']
Energy Efficiency,ofa/pull/2068 ); - [SofaOpenglVisual] Fix typo [#2029]( https://github.com/sofa-framework/sofa/pull/2029 ); - [SofaRigid] fixes applyJT of RigidMapping [#1813]( https://github.com/sofa-framework/sofa/pull/1813 ); - **[SofaSimpleFem]** Fix TetrahedronFEMForceField Von Mises stress drawing [#1854]( https://github.com/sofa-framework/sofa/pull/1854 ); - **[SofaSimpleFem]** Fix nasty bug in HexaFEMForceField' s draw() [#1766]( https://github.com/sofa-framework/sofa/pull/1766 ); - **[SofaSimpleFem]** Fix rendering options in TetrahedronFEMFF [#2156]( https://github.com/sofa-framework/sofa/pull/2156 ); - **[SofaSimulation/Tests]** Fix init/cleanup in SofaSimulation modules [#1987]( https://github.com/sofa-framework/sofa/pull/1987 ); - **[SofaSimulationCore]** Set default TaskScheduler worker threads to idle state [#1997]( https://github.com/sofa-framework/sofa/pull/1997 ); - **[SofaSimulationCore]** Broken URL [#2011]( https://github.com/sofa-framework/sofa/pull/2011 ); - **[SofaSimulationCore]** FIX Task scheduler memory leak [#1927]( https://github.com/sofa-framework/sofa/pull/1927 ); - **[SofaSimulationCore]** Reorder according to definition [#2034]( https://github.com/sofa-framework/sofa/pull/2034 ); - **[SofaSimulationCore]** Revert changes in #1927 [#2017]( https://github.com/sofa-framework/sofa/pull/2017 ); - [SofaSimulationGraph] Restore tests [#1988]( https://github.com/sofa-framework/sofa/pull/1988 ); - [SofaSimulationGraph] Reading links fail when owner is invalid [#2166]( https://github.com/sofa-framework/sofa/pull/2166 ); - [SofaSparseSolver] SparseLDLSolver optimizations [#1996]( https://github.com/sofa-framework/sofa/pull/1996 ); - [SofaTopologyMapping] Fix Edge2Quad condition [#2126]( https://github.com/sofa-framework/sofa/pull/2126 ); - [SofaUserInteraction] Fix Bug of removing topological element when a Hexa2TetraTopologicalMapping is in the scene [#1973]( https://github.com/sofa-framework/sofa/pull/1973 ). **Plugins / Projects**; - [CGALPlugin] Fix cgal d,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:190898,schedul,scheduler,190898,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['schedul'],['scheduler']
Energy Efficiency,"olume mesh and a 2D surface mesh. In this tutorial, a cube is represented, implying:; 	 ; A mesh loader to read mesh file. (not necessary in regular mesh); A mechanicalObject with geometry point positions.; A mass for gravity and fixed points.; A FEM forcefield to create interactions between points; An ODE scheme and a linear solver to solve the system at each time step.; Dynamic topological components.; A visual model which reproduces the current model geometry thanks to the identity mapping. Key points. 	Under the first node representing the hexahedra, a second node is used to represent the quad topology.; 	; 	This second representation won't reproduce all quads of the hexahedra topology, but only quads on the mesh borders. I.e quads with only one adjacent hexahedron. This process is similar to the Tetra2TriangleTopologicalMapping.; 	; 	Edges of hexahedra are represented in yellow in the simulation, whereas the visual model is based on the quads. Thus, display the scene in wire frame to see hexahedra and quads (in green).; 	. 	To create this mapping, the component Hexa2QuadTopologicalMapping is used. This component takes an input topology (Data Object1) which is the container of the ""upper"" topology (hexahedron here) and has an output topology (Data Object2) which is the container of the above topology (quad here).; 	. Results. 	As explained, the visual model uses the output topology (quads) to render the surface model.; 	; 	You can try to use directly the quads created in the HexahedronSetTopologyContainer for the ogl model. The result will be a cube with quads displayed inside the volume.; 	. 	Finally try to remove the HexahedronFEMForceField or QuadularBendingSprings component. The result will be a bad behavior of the cube.; 	. Additional results. 	 When deleting quads (Shift + right click during the simulation), the topological mapping is updated. Thus, hexahedrons behind the selected quad will be deleted as well. Then, the list of quads on the border will be u",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyDynamicSurfaceMesh.html:1173,green,green,1173,examples/Tutorials/Topologies/TopologyDynamicSurfaceMesh.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/TopologyDynamicSurfaceMesh.html,1,['green'],['green']
Energy Efficiency,"ou do; not control copyright. Those thus making or running the covered works; for you must do so exclusively on your behalf, under your direction; and control, on terms that prohibit them from making any copies of; your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under; the conditions stated below. Sublicensing is not allowed; section 10; makes it unnecessary. 3. Protecting Users' Legal Rights From Anti-Circumvention Law. No covered work shall be deemed part of an effective technological; measure under any applicable law fulfilling obligations under article; 11 of the WIPO copyright treaty adopted on 20 December 1996, or; similar laws prohibiting or restricting circumvention of such; measures. When you convey a covered work, you waive any legal power to forbid; circumvention of technological measures to the extent such circumvention; is effected by exercising rights under this License with respect to; the covered work, and you disclaim any intention to limit operation or; modification of the work as a means of enforcing, against the work's; users, your or third parties' legal rights to forbid circumvention of; technological measures. 4. Conveying Verbatim Copies. You may convey verbatim copies of the Program's source code as you; receive it, in any medium, provided that you conspicuously and; appropriately publish on each copy an appropriate copyright notice;; keep intact all notices stating that this License and any; non-permissive terms added in accord with section 7 apply to the code;; keep intact all notices of the absence of any warranty; and give all; recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey,; and you may offer support or warranty protection for a fee. 5. Conveying Modified Source Versions. You may convey a work based on the Program, or the modifications to; produce it from the Program, in the form of sour",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:28225,power,power,28225,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['power'],['power']
Energy Efficiency,"ou receive it, in any medium, provided that you; conspicuously and appropriately publish on each copy an appropriate; copyright notice and disclaimer of warranty; keep intact all the; notices that refer to this License and to the absence of any warranty;; and give any other recipients of the Program a copy of this License; along with the Program. You may charge a fee for the physical act of transferring a copy, and; you may at your option offer warranty protection in exchange for a fee. 2. You may modify your copy or copies of the Program or any portion; of it, thus forming a work based on the Program, and copy and; distribute such modifications or work under the terms of Section 1; above, provided that you also meet all of these conditions:. a) You must cause the modified files to carry prominent notices; stating that you changed the files and the date of any change. b) You must cause any work that you distribute or publish, that in; whole or in part contains or is derived from the Program or any; part thereof, to be licensed as a whole at no charge to all third; parties under the terms of this License. c) If the modified program normally reads commands interactively; when run, you must cause it, when started running for such; interactive use in the most ordinary way, to print or display an; announcement including an appropriate copyright notice and a; notice that there is no warranty (or else, saying that you provide; a warranty) and that users may redistribute the program under; these conditions, and telling the user how to view a copy of this; License. (Exception: if the Program itself is interactive but; does not normally print such an announcement, your work based on; the Program is not required to print an announcement.). These requirements apply to the modified work as a whole. If; identifiable sections of that work are not derived from the Program,; and can be reasonably considered independent and separate works in; themselves, then this License, and its ter",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:5086,charge,charge,5086,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,6,['charge'],['charge']
Energy Efficiency,"protect the freedom of users. Finally, every program is threatened constantly by software patents.; States should not allow patents to restrict development and use of; software on general-purpose computers, but in those that do, we wish to; avoid the special danger that patents applied to a free program could; make it effectively proprietary. To prevent this, the GPL assures that; patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and; modification follow. TERMS AND CONDITIONS. 0. Definitions. ""This License"" refers to version 3 of the GNU General Public License. ""Copyright"" also means copyright-like laws that apply to other kinds of; works, such as semiconductor masks. ""The Program"" refers to any copyrightable work licensed under this; License. Each licensee is addressed as ""you"". ""Licensees"" and; ""recipients"" may be individuals or organizations. To ""modify"" a work means to copy from or adapt all or part of the work; in a fashion requiring copyright permission, other than the making of an; exact copy. The resulting work is called a ""modified version"" of the; earlier work or a work ""based on"" the earlier work. A ""covered work"" means either the unmodified Program or a work based; on the Program. To ""propagate"" a work means to do anything with it that, without; permission, would make you directly or secondarily liable for; infringement under applicable copyright law, except executing it on a; computer or modifying a private copy. Propagation includes copying,; distribution (with or without modification), making available to the; public, and in some countries other activities as well. To ""convey"" a work means any kind of propagation that enables other; parties to make or receive copies. Mere interaction with a user through; a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays ""Appropriate Legal Notices""; to the extent that it includes a convenient and promi",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:22892,adapt,adapt,22892,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['adapt'],['adapt']
Energy Efficiency,ps://github.com/sofa-framework/sofa/pull/3313) ; - [Helper] RAII for DrawTool state life cycle [#3338](https://github.com/sofa-framework/sofa/pull/3338) ; - [Config] Option to enable interprocedural optimization [#3345](https://github.com/sofa-framework/sofa/pull/3345) ; - [Config] Change type of CMake message when adding a module [#3381](https://github.com/sofa-framework/sofa/pull/3381) ; - [CMake] Speed-up Configuration (again) [#3382](https://github.com/sofa-framework/sofa/pull/3382) ; - [Helper] Portable thread local storage duration [#3422](https://github.com/sofa-framework/sofa/pull/3422) ; - [Helper.Accessor] Support more std vector methods in WriteAccessorVector [#3426](https://github.com/sofa-framework/sofa/pull/3426) ; - [Topology] Add mechanism to check checkTopologyInputTypes [#3428](https://github.com/sofa-framework/sofa/pull/3428) ; - [Topology.Container] Check at init for Container in Modifier [#3434](https://github.com/sofa-framework/sofa/pull/3434) ; - [Simulation] Task scheduler can accept callable [#3482](https://github.com/sofa-framework/sofa/pull/3482) ; - [Simulation] Worker threads are no longer static [#3491](https://github.com/sofa-framework/sofa/pull/3491) ; - [Core] Support getObjects on set containers [#3495](https://github.com/sofa-framework/sofa/pull/3495) ; - [Type] Conversion to scalar for Mat1x1 [#3498](https://github.com/sofa-framework/sofa/pull/3498) ; - [VectorTypeInfo] Change default handling of data buffer [#3505](https://github.com/sofa-framework/sofa/pull/3505) . **Modules**; - [MappedMatrix] MechanicalMatrixMapper: adds option [#3173](https://github.com/sofa-framework/sofa/pull/3173) ; - [Constraint.Lagrangian.Correction] LinearSolverCC: use FullVector API if detected [#3231](https://github.com/sofa-framework/sofa/pull/3231) ; - [Topology_test] Add tests in EdgeSetTopology_test to check topological changes [#3245](https://github.com/sofa-framework/sofa/pull/3245) ; - [SolidMechanics][Spring] Implement applyRemovedEdges for Sp,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:73336,schedul,scheduler,73336,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['schedul'],['scheduler']
Energy Efficiency,pty system matrix [#3529](https://github.com/sofa-framework/sofa/pull/3529) ; - [Tests] Update required plugins in tests [#3542](https://github.com/sofa-framework/sofa/pull/3542) . **Plugins / Projects**; - [SofaCUDA] FIX namespaces [#2935](https://github.com/sofa-framework/sofa/pull/2935) ; - [Plugins] Fix Cmake configuration w/o compat [#3209](https://github.com/sofa-framework/sofa/pull/3209) ; - [GUI.Qt] Fix MSAA sampling setup [#3220](https://github.com/sofa-framework/sofa/pull/3220) ; - [DrawToolGL] Fix ill-formed drawLines with multiple colors [#3260](https://github.com/sofa-framework/sofa/pull/3260) ; - [SofaSphFluid] Fix required plugin in scenes [#3272](https://github.com/sofa-framework/sofa/pull/3272) ; - [SofaCarving] Fix bug in CarvingManager when searching for target collision model [#3276](https://github.com/sofa-framework/sofa/pull/3276) ; - [GUI/runSofa] Cmake: tweaks and fixes [#3323](https://github.com/sofa-framework/sofa/pull/3323) ; - [CImgPlugin] Replace new keyword with creating unique pointers to properly clean up allocated memory. [#3365](https://github.com/sofa-framework/sofa/pull/3365) ; - [SofaMatrix] Fix crash if init fails in FillReducingOrdering [#3366](https://github.com/sofa-framework/sofa/pull/3366) ; - [SofaDistanceGrid] Set invalid state if cannot load mesh [#3400](https://github.com/sofa-framework/sofa/pull/3400) ; - [SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt [#3423](https://github.com/sofa-framework/sofa/pull/3423) ; - [SofaNewmat] Fix modules [#3427](https://github.com/sofa-framework/sofa/pull/3427) ; - [plugins] Fix warnings in SofaSphFluid and image [#3439](https://github.com/sofa-framework/sofa/pull/3439) ; - [GUI.Qt] Restore QGLViewer for Qt6 [#3454](https://github.com/sofa-framework/sofa/pull/3454) ; - [GUI.Qt] Restore Stats (Charts) and DocBrowser for Qt6 [#3456](https://github.com/sofa-framework/sofa/pull/3456) ; - [Modeler] rename shadow variable [#3546](https://github.com/sofa-framework/sofa/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:82069,allocate,allocated,82069,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['allocate'],['allocated']
Energy Efficiency,"ramework/sofa/pull/457 ); - InterpolationController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - MechanicalStateControllerOmni [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - NodeToggleController [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - RemovePrimitivePerformer [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - StartNavigationPerformer [#457]( https://github.com/sofa-framework/sofa/pull/457 ); - SuturePointPerformer [#457]( https://github.com/sofa-framework/sofa/pull/457 ). ### Breaking. **Kernel modules**; - [All]; - issofa_visitors: Changing the way projective constraints are propagated in visitors [#216]( https://github.com/sofa-framework/sofa/pull/216 ); - [SofaDeformable]; - Change how rest shape is given in RestShapeSpringsForceField [#315]( https://github.com/sofa-framework/sofa/pull/315 ). **Other modules**; - [SofaHelper]; - Rewrite ArgumentParser [#513]( https://github.com/sofa-framework/sofa/pull/513 ); - [SofaValidation]; - ADD Monitor test [#312]( https://github.com/sofa-framework/sofa/pull/312 ). ### Improvements. **Kernel modules**; - [All]; - issofa_topology: Improvement, BugFix and Cleaning on Topology [#243]( https://github.com/sofa-framework/sofa/pull/243 ); - issofa_constraintsolving: improve constraints [#484]( https://github.com/sofa-framework/sofa/pull/484 ); - Improve File:line info in error message (for python and xml error reporting) [#314]( https://github.com/sofa-framework/sofa/pull/314 ); - [SofaDeformable]; - issofa_meshspringff [#497]( https://github.com/sofa-framework/sofa/pull/497 ); - issofa_springff [#498]( https://github.com/sofa-framework/sofa/pull/498 ); - [SofaHelper]; - add ability to use NoArgument for BaseCreator and Factory [#385]( https://github.com/sofa-framework/sofa/pull/385 ); - Remove legacy ImageBMP/ImagePNG and ImageQt [#424]( https://github.com/sofa-framework/sofa/pull/424 ); - Improve advanced timer [#468]( https://github.com/sofa-framework/sofa/pull/468 )",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:304763,Monitor,Monitor,304763,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Monitor'],['Monitor']
Energy Efficiency,"ression for fallingBeamLagrangianCollision.scn [#4643](https://github.com/sofa-framework/sofa/pull/4643); - [Geomagic] Fix compilation. Replace Vector3 by Vec3 [#4661](https://github.com/sofa-framework/sofa/pull/4661); - [CollisionOBBCapsule] Fix duplicated registration in the factory [#4709](https://github.com/sofa-framework/sofa/pull/4709); - [Contact] Fix crash if collision models are not provided [#4710](https://github.com/sofa-framework/sofa/pull/4710); - [Engine.Analyze] Fix initialization of distance type [#4711](https://github.com/sofa-framework/sofa/pull/4711); - [SceneUtility] Initialize pointer to nullptr [#4712](https://github.com/sofa-framework/sofa/pull/4712); - [SofaCUDA] extern template instantiations [#4714](https://github.com/sofa-framework/sofa/pull/4714); - [image_gui] Make it a cleaner SOFA module [#4719](https://github.com/sofa-framework/sofa/pull/4719); - [SensableEmulation] Fix module name [#4721](https://github.com/sofa-framework/sofa/pull/4721); - [tests] Adapt code to any Eigen version [#4724](https://github.com/sofa-framework/sofa/pull/4724); - [image,Mapping.NonLinear] Properly includes config.h before ObjectFactory.h [#4726](https://github.com/sofa-framework/sofa/pull/4726); - [tests] Fix and test value type string of topology primitives [#4732](https://github.com/sofa-framework/sofa/pull/4732); - [MultiThreading] Fix module name in BeamLinearMapping_mt [#4740](https://github.com/sofa-framework/sofa/pull/4740); - [image_gui] Fix module name [#4741](https://github.com/sofa-framework/sofa/pull/4741); - [Analyze] Fix typos [#4742](https://github.com/sofa-framework/sofa/pull/4742); - [PlayBack] Add option to set period in the WriteStateCreator visitor [#4744](https://github.com/sofa-framework/sofa/pull/4744); - [Core] Missing closing brace [#4753](https://github.com/sofa-framework/sofa/pull/4753); - [Helper] Fix dl open when path are not canonical [#4754](https://github.com/sofa-framework/sofa/pull/4754). ### Cleaning. - [MechanicalLoad] Add",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:10946,Adapt,Adapt,10946,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Adapt'],['Adapt']
Energy Efficiency,"rk written entirely by you; rather, the intent is to; exercise the right to control the distribution of derivative or; collective works based on the Program. In addition, mere aggregation of another work not based on the Program; with the Program (or with a work based on the Program) on a volume of; a storage or distribution medium does not bring the other work under; the scope of this License. 3. You may copy and distribute the Program (or a work based on it,; under Section 2) in object code or executable form under the terms of; Sections 1 and 2 above provided that you also do one of the following:. a) Accompany it with the complete corresponding machine-readable; source code, which must be distributed under the terms of Sections; 1 and 2 above on a medium customarily used for software interchange; or,. b) Accompany it with a written offer, valid for at least three; years, to give any third party, for a charge no more than your; cost of physically performing source distribution, a complete; machine-readable copy of the corresponding source code, to be; distributed under the terms of Sections 1 and 2 above on a medium; customarily used for software interchange; or,. c) Accompany it with the information you received as to the offer; to distribute corresponding source code. (This alternative is; allowed only for noncommercial distribution and only if you; received the program in object code or executable form with such; an offer, in accord with Subsection b above.). The source code for a work means the preferred form of the work for; making modifications to it. For an executable work, complete source; code means all the source code for all modules it contains, plus any; associated interface definition files, plus the scripts used to; control compilation and installation of the executable. However, as a; special exception, the source code distributed need not include; anything that is normally distributed (in either source or binary; form) with the major components (co",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:7411,charge,charge,7411,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,6,['charge'],['charge']
Energy Efficiency,"ses in a manner consistent with the requirements of; this License. Each contributor grants you a non-exclusive, worldwide, royalty-free; patent license under the contributor's essential patent claims, to; make, use, sell, offer for sale, import and otherwise run, modify and; propagate the contents of its contributor version. In the following three paragraphs, a ""patent license"" is any express; agreement or commitment, however denominated, not to enforce a patent; (such as an express permission to practice a patent or covenant not to; sue for patent infringement). To ""grant"" such a patent license to a; party means to make such an agreement or commitment not to enforce a; patent against the party. If you convey a covered work, knowingly relying on a patent license,; and the Corresponding Source of the work is not available for anyone; to copy, free of charge and under the terms of this License, through a; publicly available network server or other readily accessible means,; then you must either (1) cause the Corresponding Source to be so; available, or (2) arrange to deprive yourself of the benefit of the; patent license for this particular work, or (3) arrange, in a manner; consistent with the requirements of this License, to extend the patent; license to downstream recipients. ""Knowingly relying"" means you have; actual knowledge that, but for the patent license, your conveying the; covered work in a country, or your recipient's use of the covered work; in a country, would infringe one or more identifiable patents in that; country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or; arrangement, you convey, or propagate by procuring conveyance of, a; covered work, and grant a patent license to some of the parties; receiving the covered work authorizing them to use, propagate, modify; or convey a specific copy of the covered work, then the patent license; you grant is automatically extended to all recipients of the c",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:44533,charge,charge,44533,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['charge'],['charge']
Energy Efficiency,"tinguishing version number. If the Program; specifies a version number of this License which applies to it and ""any; later version"", you have the option of following the terms and conditions; either of that version or of any later version published by the Free; Software Foundation. If the Program does not specify a version number of; this License, you may choose any version ever published by the Free Software; Foundation. 10. If you wish to incorporate parts of the Program into other free; programs whose distribution conditions are different, write to the author; to ask for permission. For software which is copyrighted by the Free; Software Foundation, write to the Free Software Foundation; we sometimes; make exceptions for this. Our decision will be guided by the two goals; of preserving the free status of all derivatives of our free software and; of promoting the sharing and reuse of software generally. NO WARRANTY. 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY; FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN; OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES; PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED; OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF; MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS; TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE; PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,; REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING; WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR; REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,; INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING; OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED; TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY; YOU OR THIRD PAR",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:13841,CHARGE,CHARGE,13841,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,5,['CHARGE'],['CHARGE']
Energy Efficiency,"uishing version number. If the Program; specifies a version number of this License which applies to it and ""any; later version"", you have the option of following the terms and conditions; either of that version or of any later version published by the Free; Software Foundation. If the Program does not specify a version number of; this License, you may choose any version ever published by the Free Software; Foundation. 10. If you wish to incorporate parts of the Program into other free; programs whose distribution conditions are different, write to the author; to ask for permission. For software which is copyrighted by the Free; Software Foundation, write to the Free Software Foundation; we sometimes; make exceptions for this. Our decision will be guided by the two goals; of preserving the free status of all derivatives of our free software and; of promoting the sharing and reuse of software generally. 			 NO WARRANTY. 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY; FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN; OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES; PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED; OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF; MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS; TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE; PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,; REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING; WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR; REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,; INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING; OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED; TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY; YOU OR THIRD PAR",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:14819,CHARGE,CHARGE,14819,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['CHARGE'],['CHARGE']
Energy Efficiency,"when topology changes occur [#839]( https://github.com/sofa-framework/sofa/pull/839 ); - [SofaSparseSolver] ADD saveMatrixToFile to SparseLDLSolver [#845]( https://github.com/sofa-framework/sofa/pull/845 ); - [SofaTest] ADD a PrintTo method so test failure shows human readable informations. [#730]( https://github.com/sofa-framework/sofa/pull/730 ); - [VisualModel] Improve the messages when loading mesh inside VisualModel [#778]( https://github.com/sofa-framework/sofa/pull/778 ); - [WriteState] minor fix with the time attribute, default values [#776]( https://github.com/sofa-framework/sofa/pull/776 ). **Plugins / Projects**; - [Geomagic] ADD an inputForceFeedback data in Geomagic [#648]( https://github.com/sofa-framework/sofa/pull/648 ); - [Geomagic] Fix dll export and some enhancements [#786]( https://github.com/sofa-framework/sofa/pull/786 ); - [MultiThreading] removed the boost thread dependency [#701]( https://github.com/sofa-framework/sofa/pull/701 ); - [MultiThreading] New components and Task scheduler classes refactoring [#745]( https://github.com/sofa-framework/sofa/pull/745 ); - [MultiThreading] Add Image plugin Data types in DataExchange component [#770]( https://github.com/sofa-framework/sofa/pull/770 ); - [MultiThreading] TaskScheduler Interface [#775]( https://github.com/sofa-framework/sofa/pull/775 ); - [runSofa] Add data field value change on mouse move [#750]( https://github.com/sofa-framework/sofa/pull/750 ); - [SofaCarving] Refresh and enhancement [#712]( https://github.com/sofa-framework/sofa/pull/712 ); - [SofaCarving] plugin enhancement [#787]( https://github.com/sofa-framework/sofa/pull/787 ); - [SofaPython] ADD forwarding of onMouseMove event into the script controller [#731]( https://github.com/sofa-framework/sofa/pull/731 ); - [SofaPython] ADD: Bindings for BoundingBox [#736]( https://github.com/sofa-framework/sofa/pull/736 ); - [SofaPython][PSDE] Psde derive io [#742]( https://github.com/sofa-framework/sofa/pull/742 ); - [SofaPython][PSDE] U",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:282037,schedul,scheduler,282037,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['schedul'],['scheduler']
Integrability," # Option to allow some dependencies such as cxxopts to be fetched by cmake if; # the package is not found; option(SOFA_ALLOW_FETCH_DEPENDENCIES ""Allow compatible dependencies to be fetched if the package is not found by cmake.; List of dependencies that can be fetched: cxxopts, gtest, metis, CImg"" ON). # Option to accelerate the compilation; # see https://cmake.org/cmake/help/v3.16/command/target_precompile_headers.html; # and https://cmake.org/cmake/help/v3.16/prop_tgt/DISABLE_PRECOMPILE_HEADERS.html. # https://cmake.org/cmake/help/latest/policy/CMP0127.html; if (${CMAKE_VERSION} VERSION_GREATER_EQUAL 3.22); cmake_policy(SET CMP0127 NEW); endif(); cmake_dependent_option(SOFA_BUILD_WITH_PCH_ENABLED ; ""Compile SOFA using precompiled header (to accelerate the build process)"" OFF; ""CMAKE_VERSION VERSION_GREATER_EQUAL 3.16"" OFF); if(SOFA_BUILD_WITH_PCH_ENABLED); message(""-- Precompiled headers: enabled (SOFA_BUILD_WITH_PCH_ENABLED is ON).""); else(); message(""-- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).""); set(DISABLE_PRECOMPILE_HEADERS ON); endif(). ## Change default install component and prefix; set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME applications); if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT); set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/install CACHE PATH ""Install path prefix, prepended onto install directories."" FORCE); endif(); if(APPLE AND SOFA_BUILD_APP_BUNDLE); set(SOFA_BUILD_RELEASE_PACKAGE ON); set(CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/runSofa.app/Contents/MacOS); message(""SOFA_BUILD_APP_BUNDLE = ${SOFA_BUILD_APP_BUNDLE}\n""; "" Forcing SOFA_BUILD_RELEASE_PACKAGE = ${SOFA_BUILD_RELEASE_PACKAGE}\n""; "" Forcing CMAKE_INSTALL_PREFIX = ${CMAKE_INSTALL_PREFIX}""; ); endif(); message(STATUS ""Install prefix: ${CMAKE_INSTALL_PREFIX}""). # Remove generated CMake files, this prevents CMake from finding packages that; # were disabled (like, unchecked in cmake-gui) after being built once.; file(REMOVE_RECURSE ${CMAKE_BINARY_",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:2377,message,message,2377,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['message'],['message']
Integrability," ### Cleanings. **Modules**; - [All]; - clean the consistency issues related to the readOnly flag [#115]( https://github.com/sofa-framework/sofa/pull/115 ); - Clean licenses [#139]( https://github.com/sofa-framework/sofa/pull/139 ); - [SofaKernel]; - clean DefaultPipeline.cpp/h (API BREAKING); - clean the attributes names in BoxROI (API BREAKING); - TetrahedronFEMForceField clean code [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - GridTopology : clean the code & factor the constructor [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - RegularGridTopology : clean the constructor's code & remove NDEBUG code [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - MechanicalObject : removal of code specific to the grid [#270]( https://github.com/sofa-framework/sofa/pull/270 ). - [SofaVolumetricData]; - Light: clean and strenghening the interface [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - DistanceGrid; - [SofaBoundaryCondition]; - ConstantForceField: clean to follow sofa guideline & fix the ""visible dependencies"" [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - ConstantForceField: replace the ""points"" attribute by ""indices"" with backward compatibility & deprecation message [#258]( https://github.com/sofa-framework/sofa/pull/258 ). **Plugins / Projects**; - [SceneCreator]; - clean with cosmetic changes and removed un-needed includes; - [SofaPython]; - cleaning data binding [#166]( https://github.com/sofa-framework/sofa/pull/166 ). ### Moved files. - The module handling HighOrderTopologies moved into a [separate repository]( https://github.com/sofa-framework/plugin.HighOrder) [#222](https://github.com/sofa-framework/sofa/pull/222 ). ____________________________________________________________. ## [v16.12]( https://github.com/sofa-framework/sofa/tree/v16.12 ). **Last commit: on Jan 08, 2017** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v16.08...v16.12 ). ### Environment; - **C++11 is now mandatory**",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:335749,depend,dependencies,335749,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability," ### Moved files. - Kernel modules of SOFA (SofaFramework, SofaBase, SofaCommon and SofaSimulation) have been moved to one common module SofaKernel, located at _sofa_root/SofaKernel_. SofaKernel is a pure LGPL module.; - code in _sofa_root/modules/sofa/simulation/_ has been splitted into three modules of SofaKernel: SofaSimulationCommon, SofaSimulationTree, SofaSimulationGraph; - MOVE the SofaPardiso module as a plugin; - Move OglTetrahedralModel into a new plugin called VolumetricRendering. - Minor moves; - Move ColorMap code to helper and let (Ogl)ColorMap from SofaOpenGLVisual doing OpenGL stuff; - Move TorsionForceField and ComplementaryROI into SOFA (those two components where in a deprecated repository _sofa_root/modules/sofa/components/_). - [Compliant]; - moving propagate_constraint_force_visitor in a helper file and minor cleaning of CompliantImplicitSolver. ### Improvements. - test examples are now running (on Jenkins for the Continuous Integration); - Add unit test for quaternions; - Improving default mouse manipulation while picking a dof; - MouseWheel events now propagated. - Minor improvements; - runSofa: force loading the SofaPython plugin if existing; - runSofa: adding clang-style formatting (option '-z clang'); - MechanicalObject: adding more visualisation colors for Rigids; - SofaPluginManager: Clear description and components when removing last plugin; - CMake: removing ""-Wno-deprecated-register"" compiler option that is only known by a few compilers; - Collision: add function setConstraintId in BaseConstraintSet; - SPtr: up to 10 parameters in constructor; - Add function in EigenBaseSparseMatrix in order to use eigen matrices with async solvers; - Add CUSPARSESolver in SofaCudaSolversPlugin, this solver uses cusparse library to solve a sparse triangular system on the GPU; - MeshBoundaryROI: allows specifying an input subset; - ColorMap: with face culling enabled; - ColorMap: adding a scale for the legend range values; - ImageViewer: adding new boo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:342979,Integrat,Integration,342979,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Integrat'],['Integration']
Integrability, HexahedronFEMForceField [#2778]( https://github.com/sofa-framework/sofa/pull/2778 ); - [SofaSimulation] Remove DAGNodeMultiMappingElement [#2694]( https://github.com/sofa-framework/sofa/pull/2694 ); - [SofaSparseSolver] Disable matrix export in SparseLDLSolver [#2725]( https://github.com/sofa-framework/sofa/pull/2725 ); - [SofaSparseSolver] SparseLUSolver and SparseCholeskySolver support fill reducing permutation [#2788]( https://github.com/sofa-framework/sofa/pull/2788 ); - [SofaTest] Move last tests to Sofa.Component [#2996]( https://github.com/sofa-framework/sofa/pull/2996 ); - [SofaTest] Remove last usages and make it optional [#3000]( https://github.com/sofa-framework/sofa/pull/3000 ); - [SofaUserInteraction] remove shadow variable [#2795]( https://github.com/sofa-framework/sofa/pull/2795 ); - [SolidMechanics.FEM.HyperElastic] Reformat and clean TetrahedronHyperelasticityFEMForceField [#3141]( https://github.com/sofa-framework/sofa/pull/3141 ); - [SolidMechanics] TetrahedronFEMForceField: adds error message for Poisson's ratio [#2908]( https://github.com/sofa-framework/sofa/pull/2908 ); - [StateContainer] Remove deprecated code for topologicalChanges in MechanicalObject. [#2867]( https://github.com/sofa-framework/sofa/pull/2867 ); - [Topology.Dynamic] Remove implicit conversion warnings [#2973]( https://github.com/sofa-framework/sofa/pull/2973 ). **Plugins / Projects**; - [Plugins] Create ArticulatedSystem plugin (originally from SofaGeneralRigid) [#2684]( https://github.com/sofa-framework/sofa/pull/2684 ); - [Geomagic] Clean scene and code warnings + minor changes [#2846]( https://github.com/sofa-framework/sofa/pull/2846 ); - [Geomagic] Fix CMake and replace includes from legacy header to new architecture [#3076]( https://github.com/sofa-framework/sofa/pull/3076 ); - [SensableEmulation][CMake] Clean Boost dep [#3067]( https://github.com/sofa-framework/sofa/pull/3067 ); - [SofaAssimp] fix shadow variable [#2844]( https://github.com/sofa-framework/sofa/pull/2844,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:129989,message,message,129989,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability, Linear time getRoot() method in BaseNode and Node [#3059](https://github.com/sofa-framework/sofa/pull/3059) ; - [Type] Add NoInit constructor for Quat class [#3217](https://github.com/sofa-framework/sofa/pull/3217) ; - [Geometry] Make global variables constexpr [#3233](https://github.com/sofa-framework/sofa/pull/3233) ; - [Core] Reduce calls to getValue in collisions [#3264](https://github.com/sofa-framework/sofa/pull/3264) ; - [Type] Fix/clean and speed up of Mat [#3280](https://github.com/sofa-framework/sofa/pull/3280) ; - [Type] Add fixedarray aliases and BoundingBox3D [#3298](https://github.com/sofa-framework/sofa/pull/3298) ; - [Config] Option to set the number of MSVC processes [#3313](https://github.com/sofa-framework/sofa/pull/3313) ; - [Helper] RAII for DrawTool state life cycle [#3338](https://github.com/sofa-framework/sofa/pull/3338) ; - [Config] Option to enable interprocedural optimization [#3345](https://github.com/sofa-framework/sofa/pull/3345) ; - [Config] Change type of CMake message when adding a module [#3381](https://github.com/sofa-framework/sofa/pull/3381) ; - [CMake] Speed-up Configuration (again) [#3382](https://github.com/sofa-framework/sofa/pull/3382) ; - [Helper] Portable thread local storage duration [#3422](https://github.com/sofa-framework/sofa/pull/3422) ; - [Helper.Accessor] Support more std vector methods in WriteAccessorVector [#3426](https://github.com/sofa-framework/sofa/pull/3426) ; - [Topology] Add mechanism to check checkTopologyInputTypes [#3428](https://github.com/sofa-framework/sofa/pull/3428) ; - [Topology.Container] Check at init for Container in Modifier [#3434](https://github.com/sofa-framework/sofa/pull/3434) ; - [Simulation] Task scheduler can accept callable [#3482](https://github.com/sofa-framework/sofa/pull/3482) ; - [Simulation] Worker threads are no longer static [#3491](https://github.com/sofa-framework/sofa/pull/3491) ; - [Core] Support getObjects on set containers [#3495](https://github.com/sofa-framework/sofa/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:72638,message,message,72638,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability," REQUIRED). set(SOFAMISCCOLLISION_SRC src/SofaMiscCollision). set(HEADER_FILES; ${SOFAMISCCOLLISION_SRC}/config.h.in; ${SOFAMISCCOLLISION_SRC}/initSofaMiscCollision.h; ). set(SOURCE_FILES; ${SOFAMISCCOLLISION_SRC}/initSofaMiscCollision.cpp; ). set(EXTRA_FILES; ${SOFAMISCCOLLISION_SRC}/README.md; ). list(APPEND HEADER_FILES; ${SOFAMISCCOLLISION_SRC}/DefaultCollisionGroupManager.h; ${SOFAMISCCOLLISION_SRC}/RayTriangleVisitor.h; ${SOFAMISCCOLLISION_SRC}/SolverMerger.h; ). list(APPEND SOURCE_FILES. ${SOFAMISCCOLLISION_SRC}/DefaultCollisionGroupManager.cpp; ${SOFAMISCCOLLISION_SRC}/RayTriangleVisitor.cpp; ${SOFAMISCCOLLISION_SRC}/SolverMerger.cpp. ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaBaseTopology SofaGeneralMeshCollision SofaGeneralDeformable SofaConstraint SofaExplicitOdeSolver SofaGeneralExplicitOdeSolver SofaImplicitOdeSolver SofaBaseCollision SofaBaseMechanics). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Geometry, Sofa.Component.Collision.Detection.Intersection and Sofa.Component.Collision.Response.Contact instead.; # Moreover, OBB and Capsule-related components have been moved into the external plugin CollisionOBBCapsule.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""s",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt:1489,message,message,1489,applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscCollision/CMakeLists.txt,1,['message'],['message']
Integrability," Tutorial. Truth and initial cylinders; Simulation results. Description. 	In these tutorials, we show the different integration schemes and algorithms available to solve the system of Ordinary Differential Equations (ODE) at each step of the simulation. SOFA provides the following integration schemes:; ; Static integration scheme,; Explicit integration schemes,; Implicit integration schemes. Before going any further, it is important to know that state vectors in SOFA are saved in a component called ""State"" (see chapter ""State"" in the documentation).; For instance, when mechanical models are being solved, the user needs to add a ""MechanicalState"" component in the graph.; Inside the component, the format of storage for the state vector is a structure called MultiVector.; The size and the nature of the degrees of freedom is chosen by setting a ""template"" in the State component. Let us now go into details about the different ODE solvers in SOFA. First, the static integration is an integration which does not take the time into account. Such a static integration can be useful for checking the convergence of algorithms. Furthermore, different dynamic solvers have been implement in SOFA. Unlike static solvers, these solvers do take the dynamics of the system into account. However, depending on the aim of the computation, the solver has to be carefully chosen.; Let us review the basic differences between explicit and implicit solvers. Concerning the explicit solvers, they compute the new state variables from the state variables at the previous step.; The advantage is that explicit solvers can be fast, but the stability of the solver is not always granted. Very small time steps can be required to get satisfactory accuracy.; Moreover, such solvers are not suitable for every simulation. For example, explicit solvers do not compute cyclic loadings correctly, but could be advised in case of soft or high-mass objects. Concerning implicit solvers, they compute the new state variable",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html:985,integrat,integration,985,examples/Tutorials/Solvers/Solvers.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html,2,['integrat'],['integration']
Integrability," You want to run a lot of simulation from you own python script. In this case you should look at the file ""integration_example.py"". This example shows how to start simulation in sequence, in parallel or using a cluster. The example also shows how all the simulation results are returned back to your script so you can implement your own number-crunching processing on them, e.g.: plotting graphs with *matplotlib*. - You don't want to write your own python script but still want to start a lot a lot of simulations you should have a look at the sofa-launcher.py application.; Example:; ```batch; ./sofa-launcher example.json; ```. This application is controlled via a json configuration file; ```json; {; ""files"": [; ""example.scn"",; ""example.py""; ],; ""variables"": [; {; ""GRAVITYXML"": ""1 2 3"",; ""nbIterations"": 1000; },; {; ""GRAVITYXML"": ""2 3 4"",; ""nbIterations"": 1000; }; ],; ""launcher"": ""parallel"",; ""numjobs"": 5,; ""resultsstyle"": ""results.thtml"",; ""resultsfile"": ""results.html""; }; ```; with:. - files: The sofa files with your scene; - variables: Some values in your scene can be changed automatically in each run of your scene ; You can use any name as $MYVALUE...it depend on what you put in your scene. ; in my example scene I replace the $GRAVITYXML with a different value at each run; - launcher: Indicate to launch the simulations in parallel (other choice are sequential or ssh); - numjobs: with a maximum of 5 simulation in parallel; - resultsstyle: Name of the report file template, here html but it could be anything else (eg latex array); - resultsfile: The file generated from the template and the results. NB:. - To run the distributed version of the launcher you need all hosts to share directories as well as being able to login using ssh+key (no password login).; - Depending on the files you are using in your scene you may need to protect certain symbols: see [https://pythonhosted.org/Cheetah/users_guide/](https://pythonhosted.org/cheetah/users_guide/parserinstructions.html); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/README.md:1530,depend,depend,1530,tools/sofa-launcher/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/README.md,2,"['Depend', 'depend']","['Depending', 'depend']"
Integrability," add of SceneDataIO to save and load the current state of a simulation; - add of the method getDataFields; - adding automatically tested examples; - add tags to MeshAttributes; - add a helper PythonScriptFunction_call and PythonScriptFunction_callNoResult to call a python controller function from c++ code; - PythonScriptHelper -> PythonScriptControllerHelper: PythonScriptHelper: add convertion for float and std::string; - Add the timingEnabled attribute to the PythonScriptController to control if the script is gather timing statistics; - adding python module to load .obj files; - adding BaseContext_getObject_noWarning that returns None w/o warning if the object is not found; - improving a bit the conversion from a cpp Base* to a PyObject* when the cpp Base* type is (even partially) known.; - adding a test to show how to bind a component outside of SofaPython; - Factory: conversion shortcuts for known types; - PythonScriptController: if the filename is let empty, the controller is supposed to be in an already loaded file, to avoid to read the same file several times; - adding ""loadPlugin"" function to the Sofa python module; - Add a getObjects() method to python BaseContext interface. Allow selection of objects based on type and name.; - object and type names are now both optional when calling BaseContext_getObjects(); - search direction can now optionally be passed to BaseContext_getObjects(); - at object creation failure, print additional error messages from BaseObjectDescription; - adding special Data types in the PythonFactory, so more specific cases can be added outside of the plugin SofaPython.; - adding Node::addObject_noWarning not to print a warning when adding an object to an already initialized node; - add of a method which compute quaternion from a line define by a director vector; - add of few new features to save and load the current state of simulation. - [Flexible]; - adding FlexibleCorotationalMeshFEMForceField (meta-forcefield). Not optimized but wor",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:349865,interface,interface,349865,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['interface'],['interface']
Integrability," and if the mesh is not skinned an IdentityMapping to link the MechanicalObject containing the mesh vertices to the OglModel (this step is ; automatically done by the SkinningMapping if we have a skinned mesh). Examples.       The file example.scn (located in the folder : ColladaSceneLoader/Demos/ ) which loads the collada file ""example.dae"" illustrate pretty well how works the plugin.; Its XML description contains a line with the new SceneColladaLoader component with its filename data filled as below :. <SceneColladaLoader name=""sceneColladaLoader"" filename=""example.dae"" />. The collada file example.dae contains a very basic scene with a mesh skinned with two bones representing an arm which is animated in two step as shown in the following screenshots [took from Blender (software)] :.       . Animation step 1 : Arm is raised. Animation step 2 : Arm is bent. And now the same scene loaded into Sofa :. Animation step 1 : Arm is raised; Animation step 1-2 : Arm animation interpolated by Sofa(animation speed depends of the animation time step); Animation step 2 : Arm is bent. Another example with a scene containing two meshes, one with the same bones as in the previous example and a sphere without skinning.       . The scene in the Sofa Modeler. The same scene in runSofa.       As you can see in Sofa Modeler, the scene to load a collada file is very simple. We have the SceneColladaLoader to load it and, important thing, we also have an EulerSolver ; which will be used by the potential SkeletalMotionProjectiveConstraints to ""play"" the animation updating positions and velocities.; When you launch runSofa with this scene, a new node will be added which contains the whole collada scene. The name of this node is the name you gave to the ; SceneColladaLoader plus the string ""_scene"". On the right picture, the loader generated two child nodes call ""mesh 0"" which contains a mesh without skinning (the sphere), and ; ""mesh 1"" which contains a mesh with skinning and bones animation",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html:3528,depend,depends,3528,applications/plugins/SofaAssimp/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/doc/index.html,1,['depend'],['depends']
Integrability," collision object is mapped to the simulated deformable model using a Mapping, this time a MechanicalMapping: BarycentricMapping. You may wonder what the difference is between this mapping and the one used for the visual model, as we are using the same component! What makes a mapping visual or mechanical?; This is determined by the template used to create the mapping:; Find the BarycentricMapping component using the Filter. From the dropdown menu, select Vec3d, Vec3d.; This mean it transforms a state expressed by Vec3d type into Vec3d. Remember, collision models are only expressed in Vec3d type, so the mapped state must be of Vec3d types.; Open the BarycentricMapping properties and go to the Properties 2/2 tab. Set the Input object to map to ""@.."" and the Output object to map to ""@.""; This corresponds to mapping from the MechanicalObject from one node above to the MechanicalObject of the current node.; Finally, we will remove our old TSphereModel, and replace it with one in the CollisionNode; Delete the current TSphereModel. Add a new TSphereModel to the CollisionNode, and change the Default contact stiffness property to ""1000"".; Results; Run in SOFA. Change to DT to ""0.005"". Animate.; You can see height spheres, corresponding to the height corners of the cube chosen to represent our collision mode. Of course, using four height spheres to do the collision detection is much faster than 171 as in the previous scene. But the behavior is also very different.; Apply a force on one of the spheres by holding down the Shift key, and clicking and dragging a sphere with the mouse.; You will be able to deform the object. This is due to the MechanicalMapping.; We display some debug information about the mechanical mapping using blue lines. Each point of the collision model depends on several points of the simulated object. If a force is applied to one of the collision model's points, the force will be propagated to all the points that depend on it.; Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/6_FullObject.html:3240,depend,depends,3240,examples/Tutorials/StepByStep/FullObject/6_FullObject.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/FullObject/6_FullObject.html,2,['depend'],"['depend', 'depends']"
Integrability," https://github.com/sofa-framework/sofa/pull/1311 ); - [SofaCUDA] Compilation without OpenGL [#1242]( https://github.com/sofa-framework/sofa/pull/1242 ). **Examples / Scenes**; - [examples] Add a scene illustrating ShewchukPCG [#1420]( https://github.com/sofa-framework/sofa/pull/1420 ). ### Bug Fixes. **Architecture**; - [CMake] Add SofaNonUniformFem to the dependencies of SofaMisc [#1384]( https://github.com/sofa-framework/sofa/pull/1384 ); - [SofaFramework/CMake] Create configuration type dir before copying lib [#1347]( https://github.com/sofa-framework/sofa/pull/1347 ); - [extlibs/gtest] Add character test in gtest paramName to allow dash character [#1265]( https://github.com/sofa-framework/sofa/pull/1265 ). **Modules**; - [All] Clean warnings for option config, again [#1339]( https://github.com/sofa-framework/sofa/pull/1339 ); - [All] Fix SOFA_LIBSUFFIX used in Debug by PluginManager [#1313]( https://github.com/sofa-framework/sofa/pull/1313 ); - [All] Overridden 'canCreate' methods should always log an error message when they fail [#1294]( https://github.com/sofa-framework/sofa/pull/1294 ); - **[SofaBaseTopology]** Fix GridTopology edge computation [#1323]( https://github.com/sofa-framework/sofa/pull/1323 ); - **[SofaBaseTopology]**[SofaExporter] Fix failing tests due to changes in topology [#1335]( https://github.com/sofa-framework/sofa/pull/1335 ); - [SofaConstraint] Fix test further to #1369 [#1386]( https://github.com/sofa-framework/sofa/pull/1386 ); - **[SofaEigen2Solver]** Fix CMake test on the version of Eigen [#1416]( https://github.com/sofa-framework/sofa/pull/1416 ); - **[SofaEngine]** Fix engine unit tests [#1280]( https://github.com/sofa-framework/sofa/pull/1280 ); - **[SofaEngine]** Fix Engine_test [#1338]( https://github.com/sofa-framework/sofa/pull/1338 ); - **[SofaFramework]** Windows/VS: Remove warnings flags from definitions [#1368]( https://github.com/sofa-framework/sofa/pull/1368 ); - [SofaGuiQt] Fix compilation for SOFA_DUMP_VISITOR_INFO [#1",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:234167,message,message,234167,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability," https://github.com/sofa-framework/sofa/pull/139 ); - [SofaKernel]; - clean DefaultPipeline.cpp/h (API BREAKING); - clean the attributes names in BoxROI (API BREAKING); - TetrahedronFEMForceField clean code [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - GridTopology : clean the code & factor the constructor [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - RegularGridTopology : clean the constructor's code & remove NDEBUG code [#270]( https://github.com/sofa-framework/sofa/pull/270 ); - MechanicalObject : removal of code specific to the grid [#270]( https://github.com/sofa-framework/sofa/pull/270 ). - [SofaVolumetricData]; - Light: clean and strenghening the interface [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - DistanceGrid; - [SofaBoundaryCondition]; - ConstantForceField: clean to follow sofa guideline & fix the ""visible dependencies"" [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - ConstantForceField: replace the ""points"" attribute by ""indices"" with backward compatibility & deprecation message [#258]( https://github.com/sofa-framework/sofa/pull/258 ). **Plugins / Projects**; - [SceneCreator]; - clean with cosmetic changes and removed un-needed includes; - [SofaPython]; - cleaning data binding [#166]( https://github.com/sofa-framework/sofa/pull/166 ). ### Moved files. - The module handling HighOrderTopologies moved into a [separate repository]( https://github.com/sofa-framework/plugin.HighOrder) [#222](https://github.com/sofa-framework/sofa/pull/222 ). ____________________________________________________________. ## [v16.12]( https://github.com/sofa-framework/sofa/tree/v16.12 ). **Last commit: on Jan 08, 2017** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v16.08...v16.12 ). ### Environment; - **C++11 is now mandatory**. This implies some changes in building tools.; - Generator: CMake 3.1 or higher.; - Compiler: GCC 4.8 or higher, Clang 3.4 or higher, Microsoft Visual C++ 2013 or higher. ### New fe",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:335930,message,message,335930,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability, matrix product and use it in MechanicalMatrixMapper [#2394]( https://github.com/sofa-framework/sofa/pull/2394 ); - [SofaBaseLinearSolver] Introduce GlobalSystemMatrixExporter [#2303]( https://github.com/sofa-framework/sofa/pull/2303 ); - [SofaBaseTopology] Add method to register callbacks directly using the topologyData [#2375]( https://github.com/sofa-framework/sofa/pull/2375 ); - [SofaBaseTopology] Ensure to add a topology EndingEvent before propagating to all topologyData [#2376]( https://github.com/sofa-framework/sofa/pull/2376 ); - [SofaBaseVisual] Fix VisualModelImpl to use topologyData and callback to handle topological changes [#2300]( https://github.com/sofa-framework/sofa/pull/2300 ); - [SofaCore] Add const version of getMSState to Mass [#2293]( https://github.com/sofa-framework/sofa/pull/2293 ); - [SofaCore] Clearer message when template parameter is not compatible with current context [#2262]( https://github.com/sofa-framework/sofa/pull/2262 ); - [SofaCore] Required data msg now depends on existing default value [#2527]( https://github.com/sofa-framework/sofa/pull/2527 ); - [SofaDefaultType] Introduce test interface for BaseMatrix [#2280]( https://github.com/sofa-framework/sofa/pull/2280 ); - [SofaGeneralAnimationLoop] More optimization on MechanicalMatrixMapper [#2411]( https://github.com/sofa-framework/sofa/pull/2411 ); - [SofaGeneralAnimationLoop] Remove matrix compression [#2367]( https://github.com/sofa-framework/sofa/pull/2367 ); - [SofaGeneralDeformable] Add option to enable/disable spring display in TriangularBendingSprings [#2297]( https://github.com/sofa-framework/sofa/pull/2297 ); - [SofaGeneralSimpleFem] Update BeamFEMForceField topologyHander and add tests [#2382]( https://github.com/sofa-framework/sofa/pull/2382 ); - [SofaGraphComponent] Restore check of deprecated components [#2267]( https://github.com/sofa-framework/sofa/pull/2267 ); - [SofaGuiQt] Introduce expand/collapse buttons [#2322]( https://github.com/sofa-framework/sofa/pull/2322,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:140998,depend,depends,140998,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['depends']
Integrability," the Program, in the form of source code under the; terms of section 4, provided that you also meet all of these conditions:. a) The work must carry prominent notices stating that you modified; it, and giving a relevant date. b) The work must carry prominent notices stating that it is; released under this License and any conditions added under section; 7. This requirement modifies the requirement in section 4 to; ""keep intact all notices"". c) You must license the entire work, as a whole, under this; License to anyone who comes into possession of a copy. This; License will therefore apply, along with any applicable section 7; additional terms, to the whole of the work, and all its parts,; regardless of how they are packaged. This License gives no; permission to license the work in any other way, but it does not; invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display; Appropriate Legal Notices; however, if the Program has interactive; interfaces that do not display Appropriate Legal Notices, your; work need not make them do so. A compilation of a covered work with other separate and independent; works, which are not by their nature extensions of the covered work,; and which are not combined with it such as to form a larger program,; in or on a volume of a storage or distribution medium, is called an; ""aggregate"" if the compilation and its resulting copyright are not; used to limit the access or legal rights of the compilation's users; beyond what the individual works permit. Inclusion of a covered work; in an aggregate does not cause this License to apply to the other; parts of the aggregate. 6. Conveying Non-Source Forms. You may convey a covered work in object code form under the terms; of sections 4 and 5, provided that you also convey the; machine-readable Corresponding Source under the terms of this License,; in one of these ways:. a) Convey the object code in, or embodied in, a physical pr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:30286,interface,interfaces,30286,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,2,['interface'],['interfaces']
Integrability," the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any; patents or other property right claims or to contest validity of any; such claims; this section has the sole purpose of protecting the; integrity of the free software distribution system which is; implemented by public license practices. Many people have made; generous contributions to the wide range of software distributed; through that system in reliance on consistent application of that; system; it is up to the author/donor to decide if he or she is willing; to distribute software through any other system and a licensee cannot; impose that choice. This section is intended to make thoroughly clear what is believed to; be a consequence of the rest of this License. 12. If the distribution and/or use of the Library is restricted in; certain countries either by patents or by copyrighted interfaces, the; original copyright holder who places the Library under this License may add; an explicit geographical distribution limitation excluding those countries,; so that distribution is permitted only in or among countries not thus; excluded. In such case, this License incorporates the limitation as if; written in the body of this License. 13. The Free Software Foundation may publish revised and/or new; versions of the Lesser General Public License from time to time.; Such new versions will be similar in spirit to the present version,; but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Library; specifies a version number of this License which applies to it and; ""any later version"", you have the option of following the terms and; conditions either of that version or of any later version published by; the Free Software Foundation. If the Library does not specify a; license version number, you may choose any version ever published by; the Free Software Foundation. 14. If y",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:21384,interface,interfaces,21384,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['interface'],['interfaces']
Integrability," the; simulation. STEP: the simulation will; compute its state at the time: t+DT. Reset Scene: reset the; Simulation to the initial time, t=0. Reset View: set your camera at; initial configuration found in a view file, or default; configuration. Save View: keep in memory the; position and orientation of the camera, for the next time you will load; the scene. Save Screenshot: take a picture; of the current scene. Direct interaction with the scene is; possible. To do so, maintain SHIFT button pressed and click on a; collision model present in the scene; A �Pick Interactor� will be; created, and attached to the picked collision model, if any, with a; spring. ; If; you release the mouse button first, the spring is removed.; If; you release the SHIFT button first, the spring is fixed and exists; until you pick another point in the scene. Several tabs give more information; about the current scene: ; This images were taken for the scene shown above. . - depending on the viewer, you can control what is displayed, and the; way it is. ; - statistical outputs during the simulation (position and velocity for; each elements, time passed at each branch of the graph, gnuplot files); ; - the graph of the scene, with all the nodes. You can export this graph; into a nice png file.; - the last tab, �Viewer� gives the name and information about; the possibilities of the current viewer, and the shortcuts. Double clicking on a node allows you to modify several values and; change dynamically the simulation (here, the TetrahedronFEMForceField; node). In some cases, you need to press the update button; to apply the changes. Structure ; The main interface uses a Qt; environment (Qt3.3 for Linux and Qt4 for Windows). The Main window,; providing all the interactions possible with the simulation,was created; using QtDesigner. The RealGUI contains the viewer which can be selected; directly in the main window. The possible choices depends on the; configuration file, sofa-default.cfg. The RealGUI",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:1338,depend,depending,1338,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,1,['depend'],['depending']
Integrability, with end() [#1781]( https://github.com/sofa-framework/sofa/pull/1781 ); - **[SofaHelper]** Fix compilation in kdtree [#1942]( https://github.com/sofa-framework/sofa/pull/1942 ); - **[SofaHelper]** Fix out of bounds error [#1868]( https://github.com/sofa-framework/sofa/pull/1868 ); - **[SofaHelper]** Fix the use of Read/WriteAccessorVector that is too permisive (in accessor.h) [#1900]( https://github.com/sofa-framework/sofa/pull/1900 ); - **[SofaHelper][SofaBoundaryCondition]** Fix export keywords [#1984]( https://github.com/sofa-framework/sofa/pull/1984 ); - **[SofaKernel]** Fix SimpleApi forward declaration of BaseObject and relocatable of Sofa.GL [#1760]( https://github.com/sofa-framework/sofa/pull/1760 ); - **[SofaKernel]** Removing double load() in Loaders [#2094]( https://github.com/sofa-framework/sofa/pull/2094 ); - [SofaLoader] Fix MeshObjLoader material parsing by using the proper locale. [#2200]( https://github.com/sofa-framework/sofa/pull/2200 ); - [SofaLoader] FIX Circular dependency in the update of MeshObjLoader [#2201]( https://github.com/sofa-framework/sofa/pull/2201 ); - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ); - [SofaMeshCollision] Fix: windows debug linkage of class EmptyFilter [#1839]( https://github.com/sofa-framework/sofa/pull/1839 ); - [SofaMiscCollision] Contact response order [#2134]( https://github.com/sofa-framework/sofa/pull/2134 ); - [SofaMiscCollision] Fix config.in cmake file for export [#2052]( https://github.com/sofa-framework/sofa/pull/2052 ); - [SofaMiscFEM] Minor changes in TrianglePressureFF and TriangularFEMFF [#1779]( https://github.com/sofa-framework/sofa/pull/1779 ); - [SofaMiscForceField] Clean MeshMatrixMass_test and add more tests [#2191]( https://github.com/sofa-framework/sofa/pull/2191 ); - [SofaMiscTopology_test] Replace inheritence of SofaTest by BaseSimulation_test and fix test [#1909]( https://github.com/sofa-framework/sofa/pull/1909 ); - [SofaOpenG,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:188779,depend,dependency,188779,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,"# Code style guide. ## General rules. ### Base rules; The base rules are in Google C++ Style Guide: https://google.github.io/styleguide/cppguide.html ; All rules below **replace** the corresponding base rules. ; For any subject not mentionned below, please refer to the base. ### Commit message; A correct commit message must therefore be structured as: ; `[NAME_OF_MODULE_OR_PLUGIN] ACTION message` ; where ACTION includes ADD, REMOVE, FIX, CLEAN, REVERT. ; Example: `[SofaKernel] ADD test for the mass conservation in UniformMass` . ### Naming; Identifiers must respect the following conventions:. - [N1] Class names are in UpperCamelCase; - [N2] Function names are in lowerCamelCase(); - [N3] Namespaces names are in lowercase; - [N4] Variables names are in lowerCamelCase and must express their use more than their type. **Exceptions**: mathematical objects like `Matrix M`, local iterators variables like `i`, `j`, `k` and usual symbols like `x` for positions or `v` for velocities.; - [N5] Data member variables names must begin with `d_`; - [N6] Link member variables names (e.g. SingleLink) must begin with `l_`; - [N7] Other member variables names must begin with `m_ `(exception: this is not mandatory for PODs as well as public attributes); - [N8] Names for booleans variables must answer a question: `m_isRed`, `m_hasName`; - [N9] C++ files must must have the extension .h, .cpp, or .inl; - [N10] Files that define a class should have the same name as the class and should contain only one class.; - [N11] Each library name should be prefixed with `Sofa`. ### Formatting; - Special characters like TAB and page break must be avoided.; - Indentation must use **4 spaces** everywhere (C++ and Python), but there must be no indentation for namespaces; - Braces use the **Allman style**: the opening brace associated with a control statement is on the next line, indented to the same level as the control statement, and statements within the braces are indented to the next level. ```cpp; whil",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:287,message,message,287,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,3,['message'],['message']
Integrability,"# Post-install scripts; if(NOT SOFA_BUILD_RELEASE_PACKAGE); return(); endif(). find_package(Qt5 COMPONENTS Gui REQUIRED); get_target_property(qt5gui_loc Qt5::Gui LOCATION_RELEASE); get_filename_component(QT_LIB_DIR ""${qt5gui_loc}"" DIRECTORY); if(QT_LIB_DIR MATCHES ""\.framework$""); get_filename_component(QT_LIB_DIR ""${QT_LIB_DIR}"" DIRECTORY); endif(); get_target_property(qjpeg_loc Qt5::QJpegPlugin LOCATION_RELEASE); get_filename_component(imageformats_dir ""${qjpeg_loc}"" DIRECTORY); get_filename_component(plugins_dir ""${imageformats_dir}"" DIRECTORY); get_filename_component(QT_DATA_DIR ""${plugins_dir}"" DIRECTORY). message(""QT_LIB_DIR = ${QT_LIB_DIR}""); message(""QT_DATA_DIR = ${QT_DATA_DIR}""). if(CMAKE_SYSTEM_NAME STREQUAL Linux); install(CODE ""file(WRITE; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/bin/qt.conf\""; \""[Paths]\\n Prefix = ..\\n Plugins = bin\\n LibraryExecutables = bin\""; )""; COMPONENT resources); install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/linux-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""${CMAKE_BINARY_DIR}\""; \""\$ENV{DESTDIR\}\${CMAKE_INSTALL_PREFIX\}\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; )""; COMPONENT resources); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); if(SOFA_BUILD_APP_BUNDLE); include(macdeployqt) # set MACDEPLOYQT_EXECUTABLE; install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/macos-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/../..\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; \""${MACDEPLOYQT_EXECUTABLE}\""; )""; COMPONENT resources); else(); install(CODE ""execute_process(COMMAND /bin/bash; \""${CMAKE_CURRENT_LIST_DIR}/macos-postinstall-fixup.sh\""; \""${CMAKE_CURRENT_LIST_DIR}\""; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}\""; \""${QT_LIB_DIR}\""; \""${QT_DATA_DIR}\""; )""; COMPONENT resources); endif(); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); install(CODE ""file(WRITE; \""\$ENV{DESTDIR}\${CMAKE_INSTALL_PREFIX}/bin/qt.conf\""; \""[Paths]\\n P",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/postinstall-fixup/CMakeLists.txt:619,message,message,619,tools/postinstall-fixup/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/postinstall-fixup/CMakeLists.txt,2,['message'],['message']
Integrability,"# SofaMatrix. SofaMatrix is a SOFA plugin containing components related to linear system matrices. ## Components. The plugin contains the following components that can be placed into a SOFA scene:. ### GlobalSystemMatrixExporter. GlobalSystemMatrixExporter is a component to export the matrix of a linear system as a file. #### Filename. A Data ""filename"" is available to specify the name of the exported file.; If ""filename"" is not set, it gets the name of the component. ""filename"" can be an absolute path, or relative to the SOFA executable.; Directories are created if necessary. The extension in ""filename"" defines the file format. A number is added after the filename.; It corresponds to the number of elapsed time steps when the file is exported. Depending on the Data ""exportEveryNumberOfSteps"", the matrix can be export only at specified number of time steps. #### Supported File Format. GlobalSystemMatrixExporter supports the following file formats:; * **txt**: exports a Python-like list of lists, containing all the matrix values including the zeros.; It uses the `operator<<` in `BaseMatrix`.; * **csv**: exports a simple comma-separated values file, containing all the matrix values including the zeros.; * **jpg**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero.; * **png**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero.; * **bmp**: exports a binary image where white pixel means the value is zero, and black; pixel means the value is non-zero. #### Link to Linear Solver. GlobalSystemMatrixExporter must have a link to a linear solver (a component inheriting from `sofa::core::behavior::LinearSolver`). The link can be explicit. Example:; ```xml; <GlobalSystemMatrixExporter linearSolver=""@pathToLinearSolver""/>; ```. The link can be implicit. I.e the component will search for a linear solver in the current Node. Example:; ```xml; <SparseLDLSolver/>; <",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md:754,Depend,Depending,754,applications/plugins/SofaMatrix/SofaMatrix.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/SofaMatrix.md,1,['Depend'],['Depending']
Integrability,${SRC_ROOT}/io/MeshGmsh.h; ${SRC_ROOT}/io/MeshTopologyLoader.h; ${SRC_ROOT}/io/SphereLoader.h; ${SRC_ROOT}/io/STBImage.h; ${SRC_ROOT}/io/TriangleLoader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cp,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:2897,Message,Message,2897,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['Message'],['Message']
Integrability,"(INSTALL_GTEST OFF CACHE BOOL """" FORCE) # rely on SOFA macros; set(gtest_force_shared_crt ON CACHE BOOL """" FORCE); set(gtest_disable_pthreads OFF CACHE BOOL """" FORCE). message(""${PROJECT_NAME}: adding subdirectory ${googletest_SOURCE_DIR}""). add_subdirectory(${googletest_SOURCE_DIR} ${googletest_BINARY_DIR}). target_compile_options(gtest_main PRIVATE ""-DGTEST_LINKED_AS_SHARED_LIBRARY=0""); target_compile_options(gtest PRIVATE ""-DGTEST_CREATE_SHARED_LIBRARY=1""). install(DIRECTORY ${googletest_SOURCE_DIR}/googletest/include/gtest DESTINATION include/extlibs/GTest/ COMPONENT headers); target_include_directories(gtest PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/GTest/>""); ; include(SofaMacros); sofa_create_package_with_targets(; PACKAGE_NAME GTest; PACKAGE_VERSION 1.14.0; TARGETS gtest AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""include""; INCLUDE_INSTALL_DIR ""extlibs/GTest""; ). set_target_properties(gtest PROPERTIES FOLDER Testing); set_target_properties(gtest_main PROPERTIES FOLDER Testing); endif(); elseif (NOT GTest_FOUND); message(FATAL_ERROR ""${PROJECT_NAME}: DEPENDENCY googletest NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install googletest, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # add custom googletest main; add_subdirectory(SofaGTestMain). set(SOFATESTINGSRC_ROOT ""src/sofa/testing""). set(HEADER_FILES; ${SOFATESTINGSRC_ROOT}/config.h.in; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.h; ${SOFATESTINGSRC_ROOT}/BaseTest.h; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.h; ${SOFATESTINGSRC_ROOT}/NumericTest.h; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.h; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.h; ). set(SOURCE_FILES; ${SOFATESTINGSRC_ROOT}/initSofa.Testing.cpp; ${SOFATESTINGSRC_ROOT}/BaseTest.cpp; ${SOFATESTINGSRC_ROOT}/LinearCongruentialRandomGenerator.cpp; ${SOFATESTINGSRC_ROOT}/NumericTest.cpp; ${SOFATESTINGSRC_ROOT}/TestMessageHandler.cpp; ${SOFATESTINGSRC_ROOT}/BaseSimulationTest.cpp; ). so",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt:1812,message,message,1812,Sofa/framework/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt,2,"['DEPEND', 'message']","['DEPENDENCY', 'message']"
Integrability,); - [SofaCUDA] Better readme [#2597]( https://github.com/sofa-framework/sofa/pull/2597 ); - [SofaCUDA] Clean Cuda Collision models [#2673]( https://github.com/sofa-framework/sofa/pull/2673 ); - [SofaCUDA] Clean and factorize CudaTriangularFEMForceFieldOptim [#2568]( https://github.com/sofa-framework/sofa/pull/2568 ); - [SofaCUDA] Convert standard stream to msg_* API [#2864]( https://github.com/sofa-framework/sofa/pull/2864 ); - [SofaCUDA] Modernize CMake for CUDA [#2878]( https://github.com/sofa-framework/sofa/pull/2878 ); - [SofaCUDA] QuadSpringsSphere scenes [#2598]( https://github.com/sofa-framework/sofa/pull/2598 ); - [SofaCUDA] Remove calls to __umul24 on device [#2715]( https://github.com/sofa-framework/sofa/pull/2715 ); - [SofaCUDA] Resurrect CudaTetrahedronTLEDForceField [#2865]( https://github.com/sofa-framework/sofa/pull/2865 ); - [SofaCUDA] harmless cleaning of namespace declaration and header inclusion [#2674]( https://github.com/sofa-framework/sofa/pull/2674 ); - [SofaMatrix] Reduce dependency [#2768]( https://github.com/sofa-framework/sofa/pull/2768 ); - [SofaMatrix][SofaBaseLinearSolver] Move GlobalSystemMatrixExporter [#2545]( https://github.com/sofa-framework/sofa/pull/2545 ); - [SofaPhysicsAPI] Clean CMake file and compile without compat [#3091]( https://github.com/sofa-framework/sofa/pull/3091 ); - [image] remove shadow variables [#2936]( https://github.com/sofa-framework/sofa/pull/2936 ); - [image] Remove qt4 usage [#2663]( https://github.com/sofa-framework/sofa/pull/2663 ); - [image] remove shadow variable [#2928]( https://github.com/sofa-framework/sofa/pull/2928 ); - [image] remove shadow variable [#2722]( https://github.com/sofa-framework/sofa/pull/2722 ); - [image] remove shadow variables [#2921]( https://github.com/sofa-framework/sofa/pull/2921 ). **Examples / Scenes**; - [examples] Optimal RequiredPlugin [#2836]( https://github.com/sofa-framework/sofa/pull/2836 ); - [examples] Remove misplaced example file [#2726]( https://github.com/sofa-,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:132249,depend,dependency,132249,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,); - [all] Lifecycle v23.12 3/n [#4056](https://github.com/sofa-framework/sofa/pull/4056); - [all] Clean unused warnings in SOFA [#4057](https://github.com/sofa-framework/sofa/pull/4057); - [all] Lifecycle v23.12 4/n [#4058](https://github.com/sofa-framework/sofa/pull/4058); - [plugins] Fix OptionGroup deprecated constructor in image and SofaCUDA plugin [#4064](https://github.com/sofa-framework/sofa/pull/4064); - [all] Update code regarding lifecycle in Topology.h [#4065](https://github.com/sofa-framework/sofa/pull/4065); - [all] Fix warnings related to Vec and unused var [#4067](https://github.com/sofa-framework/sofa/pull/4067); - [all] Remove some simple uses of bwdInit() [#4075](https://github.com/sofa-framework/sofa/pull/4075); - [SofaMatrix] Remove CImgPlugin dependency [#4112](https://github.com/sofa-framework/sofa/pull/4112); - [all] Replace deprecated wbloc function by its new function name [#4118](https://github.com/sofa-framework/sofa/pull/4118); - [Core] VecId: set correct message for the deleted function holonomicC [#4120](https://github.com/sofa-framework/sofa/pull/4120); - [IO.Mesh.Tests] Reduce number of logs by unactivating printlog [#4148](https://github.com/sofa-framework/sofa/pull/4148); - [Constraint.Lagrangian.Solver] LCPConstraintSolver: remove useless computation if printLog is enabled [#4170](https://github.com/sofa-framework/sofa/pull/4170); - [Scene] Eigen3-SVD.scn: disable printLog [#4184](https://github.com/sofa-framework/sofa/pull/4184); - [Constraint.Lagrangian.Solver] Clean both constraint solvers [#4185](https://github.com/sofa-framework/sofa/pull/4185); - [Topology.Container] Update and rename methods in EdgeSetGeometryAlgorithms to compute barycentric coordinates [#4190](https://github.com/sofa-framework/sofa/pull/4190); - [Topology.Container] Remove method writeMSHfile in GeometryAlgorithms components [#4192](https://github.com/sofa-framework/sofa/pull/4192); - [all] Fix mismatch on explicit template instantiations [#4210](https://g,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:45445,message,message,45445,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,); - implement a numerical integration for triangle [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - add brace initializer to helper::vector class [#252]( https://github.com/sofa-framework/sofa/pull/252 ); - Activates thread-safetiness on MessageDispatcher. [#257]( https://github.com/sofa-framework/sofa/pull/257 ); - Fix getRelativePath() in DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - FileRepository::getRelativePath() lowering the case on WIN32 is now a deprecated behavior [#264]( https://github.com/sofa-framework/sofa/pull/264 ); - Fix FileRepository should not be optional [#122]( https://github.com/sofa-framework/sofa/pull/122 ); - FileMonitor: fix the recurrent problem with file 'SofaKernel/framework/framework_test/resources/existing.txt' pointed in Issue #146 [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - Fix wrong inline in exported functions [#449]( https://github.com/sofa-framework/sofa/pull/449 ); - [SofaFramework]; - fix the integration scheme for Quaternion [#172]( https://github.com/sofa-framework/sofa/pull/172 ) and fix values with which the quaternion is being compared after creation from euler angles; - [SofaHelper]; - VisualToolGL: fix single primitive calls [#293]( https://github.com/sofa-framework/sofa/pull/293 ); - ImagePNG: Fix library linking in debug configuration under MSVS [#298]( https://github.com/sofa-framework/sofa/pull/298 ); - [SofaBaseMechanics]; - MechanicalObject: cleaning: symbols & include [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - [SofaPhysicsAPI]; - fix compilation of the project [#167]( https://github.com/sofa-framework/sofa/pull/167 ); - [SofaUserInteraction]; - MouseInteractor: FIX the mouse picking on Mechanical Object [#282]( https://github.com/sofa-framework/sofa/pull/282 ). **Plugins / Projects**; - [image]; - Fixes #135 : Check that SofaPython is found before including python directory [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - Fixe,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:333071,integrat,integration,333071,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['integrat'],['integration']
Integrability,"); - print cleaning + SofaPython quaternion dot product [#404]( https://github.com/sofa-framework/sofa/pull/404 ); - [runSofa]; - Clean : remove non-ASCII chars in string [#327]( https://github.com/sofa-framework/sofa/pull/327 ). ____________________________________________________________. ## [v17.06]( https://github.com/sofa-framework/sofa/tree/v17.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v16.12...v17.06 ). ### New features. **For users**; - [SceneCreator]; - new methods to add basic 3D object: Cube, Cylinder, Sphere and Plane. In rigid or deformable.; - [GeneralTopology]; - SphereGridTopology component to create sphere grids, similar to CylinderGridTopology.; - Adds a new orientedBox dataField in BoxROI so that we can use it to either defined AABoxes or OrientedBox; - Minor improvement on the way warning/error message are presented to the users in runSofa. A single panel is now used instead of of two, it is always displayed, the Panel name also contains the number of message eg: ""Messages(5)""; - The Graph view is now displaying the type of message they contains.; - [runSofa]; - Autoload plugins, described in the user-custom file 'plugin_list.conf' if present; else 'plugin_list.conf.default' containing all compiled plugins and generated automatically by CMake. **For developpers**; - Add a Logger component that stores the history of messages into each sofa component.; - Implements new methods to write on-liner's conditional message:; msg_info_when(level<3) << ""This is a conditional info message""; - Implement an implicit version of each of the msg_* API allowing to write; msg_info() << ""Hello"" in place for msg_info(this) << Hello""; - CImgPlugin : creation of a dedicated plugin for image loading based on CImg [#185]( https://github.com/sofa-framework/sofa/pull/185 ); - Remove deprecated miniBoost dependency [#273]( https://github.com/sofa-framework/sofa/pull/273 ). ### Improvements. **Modules**; - [All]; - update containers to support c++x11 f",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:324628,message,message,324628,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,3,"['Message', 'message']","['Messages', 'message']"
Integrability,"); set(SOFA_USE_CCACHE OFF CACHE bool ""Compile using ccache optimization"" FORCE); endif(); endif(). ### Ninja build pools; option(SOFA_NINJA_BUILD_POOLS ""Activate the Ninja build pools feature, to limit the cores used by specific targets"" OFF). # Sofa.Config sets the environment (options, compiler flags, global variables); sofa_add_subdirectory(library Sofa/framework/Config Sofa.Config ON). ### Extlibs; add_subdirectory(extlibs). ### Compatibility; option(SOFA_ENABLE_LEGACY_HEADERS ""Enable the compatibility layer (headers located in legacy folders) and deprecated cmake modules."" ON); if(SOFA_ENABLE_LEGACY_HEADERS); message(""Using legacy headers is enabled.""); endif(); sofa_add_subdirectory(library Sofa/framework/Compat Sofa.Compat ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF). ### SOFA (framework and components); add_subdirectory(Sofa). ### Compatibility; # Deprecated (hollow) framework and component modules.; # All depend on SOFA_ENABLE_LEGACY_HEADERS; # Some still contain (maybe useful) components not moved in Sofa/ yet.; # TODO: finally empty those remnants; add_subdirectory(applications/collections/deprecated). ## Tutorials option; option(SOFA_BUILD_TUTORIALS ""Build (most of) the tutorials available."" OFF). # SceneCreator plugin; # Library used by SOFA_BUILD_TESTS and SOFA_BUILD_TUTORIALS; sofa_add_subdirectory(plugin applications/plugins/SceneCreator SceneCreator OFF; WHEN_TO_SHOW ""NOT SOFA_BUILD_SCENECREATOR AND NOT SOFA_BUILD_TESTS AND NOT SOFA_BUILD_TUTORIALS AND NOT SOFA_BUILD_RELEASE_PACKAGE""; VALUE_IF_HIDDEN ""ON""). ## Plugins; add_subdirectory(applications/plugins). ## Applications; add_subdirectory(applications/projects). # Tutorial add subdirectory; if(SOFA_BUILD_TUTORIALS); add_subdirectory(applications/tutorials); endif(). ## SOFA scenes; option(SOFA_BUILD_ADD_SCENES ""Add SOFA scenes as a project of the build."" OFF); if (SOFA_BUILD_ADD_SCENES); add_subdirectory(examples); endif(). ## SOFA shaders; option(SOFA_BUILD_ADD_SHADERS ""Add",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:7559,depend,depend,7559,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['depend'],['depend']
Integrability,"** Update Static Solver [#950]( https://github.com/sofa-framework/sofa/pull/950 ); - **[SofaKernel]** Rename TModels into CollisionModels and update all scenes [#1034]( https://github.com/sofa-framework/sofa/pull/1034 ); - **[SofaKernel]** Add a new video recorder class VideoRecorderFFMPEG [#883]( https://github.com/sofa-framework/sofa/pull/883 ); - **[SofaSimulationCore]** Cpu task and scheduled thread support [#970]( https://github.com/sofa-framework/sofa/pull/970 ); - **[SofaSimulationCore]** call BaseObject::draw() during the Transparent pass [#929]( https://github.com/sofa-framework/sofa/pull/929 ); - [SofaTopologyMapping] Clean, fix, upgrade Tetra2TriangleTopologicalMapping [#876]( https://github.com/sofa-framework/sofa/pull/876 ). **Plugins / Projects**; - [Geomagic] Add some better check at init and method to free driver [#925]( https://github.com/sofa-framework/sofa/pull/925 ); - [Icons] EDIT Sofa icons [#881]( https://github.com/sofa-framework/sofa/pull/881 ); - [MultiThreading] TaskAllocator Interface [#906]( https://github.com/sofa-framework/sofa/pull/906 ); - [PluginExample] Update example + add comments [#1053]( https://github.com/sofa-framework/sofa/pull/1053 ); - [Regression] ADD Regression as external project [#1052]( https://github.com/sofa-framework/sofa/pull/1052 ); - [runSofa] ADD possibility to jump to source/instanciation of selected component [#1013]( https://github.com/sofa-framework/sofa/pull/1013 ); - [SofaCUDA] Fix cuda with latest API [#912]( https://github.com/sofa-framework/sofa/pull/912 ); - [SofaPython] Add Sofa.hasViewer function [#964]( https://github.com/sofa-framework/sofa/pull/964 ); - [SofaPython] Change Base.addNewData [#1004]( https://github.com/sofa-framework/sofa/pull/1004 ). **Examples / Scenes**; - [examples] Rename TModels into CollisionModels and update all scenes [#1034]( https://github.com/sofa-framework/sofa/pull/1034 ). ### Bug Fixes. **Architecture**; - [CMake] Add check to prevent the inclusion of non-existant fil",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:261903,Interface,Interface,261903,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Interface'],['Interface']
Integrability,"*************************************************************************/. :: SOFA Framework ::. The following authors contributed to the design and implementation; of the core SOFA APIs, as well as base features and applications :. Yinoussa Adagolodgo; Michael Adam; Jeremie Allard; Barbara Andre; Pierre-Jean Bensoussan; Alexandre Bilger; Jean-Nicolas Brunet; Paul Maria Scheikl; Guillaume Bousquet; Olivier Carre; Bruno Carrez; Frederic Chateau; Eulalie Coevoet; Hadrien Courtecuisse; Olivier Comas; Stephane Cotin; Jeremie Dequidt; Erwan Douaille; Marie Durand; Christian Duriez; Herve Delingette; Florent Falipou; Francois Faure; Sylvere Fonteneau; Simone Gasparini; Thierry Gaugry; Benjamin Gilles; Christophe Guebert; Laure Heigeas; Tobias Heimann; Everton Hermann; Jeremy Jaussaud; Lenka Jerabkova; Francois Jourdes; Hoeryong Jung; Frederic Largiliere; Geoffrey Lienhart; Vincent Majorczyk; Damien Marchal; Stephanie Marchesseau; Bruno Marques; Cesar Mendoza; Matthieu Nesme; Paul Neumann; Chi-Thanh Nguyen; Marek Olsak; Guillaume Paran; Erik Pernod; Igor Peterlik; Juan Pablo de la Plata Alcalde; Francois Poyer; Jeremy Ringuard; Frederick Roy; Etienne Schmitt; Federico Spadoni; Hugo Talbot; Romain Testylier; Maxime Tournier; Moreno Trlin; Felix Vanneste. :: SOFA Modules ::. In addition to classes created by the SOFA Team mentioned above,; the following authors are to be credited for their contributions :. + Co-rotational FEM; Matthieu Nesme and Francois Faure. + Dynamic Topologies; Barbara Andre, Herve Delingette, Erik Pernod. + Tetrahedral volume rendering; Sebastien Barbier and George-Pierre Bonneau. + Articulated Rigid Bodies based on Penalities; Michael Adam, Francois Faure. + Articulated Rigid Bodies based on Reduced Coordinates; Juan Pablo de la Plata Alcalde, Christian Duriez. + GPU support using CUDA; Jeremie Allard, Hadrien Courtecuisse. + GPU support using OpenCL; Jeremie Allard, Vincent Majorczyk. + Geomagic Interface; Hadrien Courtecuisse; Raffaela Trivisonne; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Authors.txt:2153,Interface,Interface,2153,Authors.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Authors.txt,1,['Interface'],['Interface']
Integrability,**[SofaLoader]** Change error into warning in MeshVTKLoader [#1037]( https://github.com/sofa-framework/sofa/pull/1037 ); - [SofaConstraint] Replaced sout calls by msg_info() in LCPConstraintSolver [#981]( https://github.com/sofa-framework/sofa/pull/981 ); - [SofaGeneralLinearSolver] Clean BTDLinearSolver [#907]( https://github.com/sofa-framework/sofa/pull/907 ); - [SofaHaptics] Replace deprecated INCLUDE_ROOT_DIR in CMakeLists.txt [#1023]( https://github.com/sofa-framework/sofa/pull/1023 ); - **[SofaKernel]** Brainless Warnings cleaning [#971]( https://github.com/sofa-framework/sofa/pull/971 ); - **[SofaKernel]** Minor code refactor in BaseData & new StringUtils functions. [#860]( https://github.com/sofa-framework/sofa/pull/860 ); - **[SofaKernel]** Refactor DataTrackerEngine so it match the DataCallback [#1073]( https://github.com/sofa-framework/sofa/pull/1073 ); - **[SofaKernel]** Remove annoying warning [#1062]( https://github.com/sofa-framework/sofa/pull/1062 ); - **[SofaKernel]** Remove boost::locale dependency [#1033]( https://github.com/sofa-framework/sofa/pull/1033 ); - **[SofaKernel]** Remove usage of helper::system::atomic<int> (replaced by STL's) [#1035]( https://github.com/sofa-framework/sofa/pull/1035 ); - **[SofaKernel]** Several changes in Topology components [#999]( https://github.com/sofa-framework/sofa/pull/999 ); - **[SofaKernel]** minor cleaning in mesh loader [#1025]( https://github.com/sofa-framework/sofa/pull/1025 ); - **[SofaKernel]** Remove multigroup option in MatrixLinearSolver [#901]( https://github.com/sofa-framework/sofa/pull/901 ); - [SofaRigid] Clean JointSpringFF [#850]( https://github.com/sofa-framework/sofa/pull/850 ); - [SofaRigid] Cosmetic clean in RigidRigidMapping & msg_* update. [#1005]( https://github.com/sofa-framework/sofa/pull/1005 ); - **[SofaSimpleFem]** Use msg and size_t in TetraDiff [#1016]( https://github.com/sofa-framework/sofa/pull/1016 ). **Plugins / Projects**; - [image] Add warning guiding users regarding plugin,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:273245,depend,dependency,273245,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,", it strips RPATH from installed binaries. Here we; # use CMAKE_INSTALL_RPATH to set a relative RPATH. By doing so, we avoid; # the need to play with LD_LIBRARY_PATH to get applications to run. # see https://cmake.org/Wiki/CMake_RPATH_handling for $ORIGIN doc; set(CMAKE_INSTALL_RPATH; ""$ORIGIN/../lib""; ""$$ORIGIN/../lib""; ). if(APPLE); set(CMAKE_MACOSX_RPATH ON); list(APPEND CMAKE_INSTALL_RPATH; ""@loader_path/../lib""; ""@executable_path/../lib""; ""@loader_path/../../Frameworks""; ""@executable_path/../../Frameworks""; ); set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE); endif(); endif(UNIX). ### Windows config; if(MSVC); # WinDepPack; set(SOFA_DEPENDENCY_PACK_DIR ""${CMAKE_SOURCE_DIR}"" CACHE PATH ""Directory containing Windows Dependency Pack""); if(NOT EXISTS ${SOFA_DEPENDENCY_PACK_DIR}); # force back to default value; set(SOFA_DEPENDENCY_PACK_DIR ""${CMAKE_SOURCE_DIR}"" CACHE PATH ""Directory containing Windows Dependency Pack"" FORCE); endif(); list(APPEND CMAKE_INCLUDE_PATH ${SOFA_DEPENDENCY_PACK_DIR}/include); if(CMAKE_CL_64); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_DEPENDENCY_PACK_DIR}/lib/win64); else(); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_DEPENDENCY_PACK_DIR}/lib/win32); endif(); install(DIRECTORY ${SOFA_DEPENDENCY_PACK_DIR}/include/ DESTINATION include/extlibs/WinDepPack COMPONENT headers); install(DIRECTORY ${SOFA_DEPENDENCY_PACK_DIR}/licenses/ DESTINATION licenses COMPONENT applications); endif(). ### Testing; option(SOFA_BUILD_TESTS ""Compile the automatic tests for Sofa, along with the gtest library."" ON). ## Active or not the use of ccache; option(SOFA_USE_CCACHE ""Compile using ccache optimization"" OFF); if(SOFA_USE_CCACHE); find_program(CCACHE_PROGRAM ccache); if(CCACHE_PROGRAM); # Support Unix Makefiles and Ninja; #TODO replace by <LANG>_COMPILER_LAUNCHER when min cmake version > 3.4; set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ""${CCACHE_PROGRAM}""); set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ""${CCACHE_PROGRAM}""); else(); message(WARNING ""ccache not found, disab",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:5321,Depend,Dependency,5321,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,2,['Depend'],['Dependency']
Integrability,", would make you directly or secondarily liable for; infringement under applicable copyright law, except executing it on a; computer or modifying a private copy. Propagation includes copying,; distribution (with or without modification), making available to the; public, and in some countries other activities as well. To ""convey"" a work means any kind of propagation that enables other; parties to make or receive copies. Mere interaction with a user through; a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays ""Appropriate Legal Notices""; to the extent that it includes a convenient and prominently visible; feature that (1) displays an appropriate copyright notice, and (2); tells the user that there is no warranty for the work (except to the; extent that warranties are provided), that licensees may convey the; work under this License, and how to view a copy of this License. If; the interface presents a list of user commands or options, such as a; menu, a prominent item in the list meets this criterion. 1. Source Code. The ""source code"" for a work means the preferred form of the work; for making modifications to it. ""Object code"" means any non-source; form of a work. A ""Standard Interface"" means an interface that either is an official; standard defined by a recognized standards body, or, in the case of; interfaces specified for a particular programming language, one that; is widely used among developers working in that language. The ""System Libraries"" of an executable work include anything, other; than the work as a whole, that (a) is included in the normal form of; packaging a Major Component, but which is not part of that Major; Component, and (b) serves only to enable use of the work with that; Major Component, or to implement a Standard Interface for which an; implementation is available to the public in source code form. A; ""Major Component"", in this context, means a major essential component; (kernel, window syste",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:24225,interface,interface,24225,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['interface'],['interface']
Integrability,". Creation of a Pendulum (2/8); Description; In the previous scene, no solver was present, so no simulation was done. In this step, we will add an ODE solver in the Root node of the simulation. We provide several ODE solvers, with different integration schemes. Take a look at our tutorials on Solvers later.; Key points; We will use the classic explicit euler solver EulerSolver to update particle positions and velocities at each time step. In SOFA, a solver acts on all the object placed below in the hierarchy. ; In the Modeler's Filter textbox, type ""Euler"". Click and drag the EulerSolver component over the root node. Press the Run in SOFA button. Press Animate.; Results; This time, when you animate the scene, the particule falls along the direction of the gravity.; The gravity is specified in the root node of the simulation. We use a default value of (0, 0, -9.81).; In the Modeler scene graph, double click the root node.; This opens the components for this node, and allows you to edit them. We won't make any changes for now.; Press OK to return to the Modeler window. ; Changing the gravity on child nodes of the simulation will not do anything as at each time step the gravity, and other parameters, (time, dt...) is overwritten using the value specified in the root node.; The component Gravity lets you specify a particular gravity for a node and all its children.; To see an example of this, type ""Gravity"" into the Filter textbox in the Modeler. Click on the Gravity component. In the top right section of the window, a description of the component will appear, with links to examples. Click on the links to open the example scene in the Modeler. When you are done, close the Gravity.scn tab to return to the tutorial scene. ; Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/1_Pendulum.html:241,integrat,integration,241,examples/Tutorials/StepByStep/Pendulum/1_Pendulum.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/1_Pendulum.html,1,['integrat'],['integration']
Integrability,". Creation of a Pendulum (7/8); Description; To link the two different mechanical objects, we will create a spring between them.; Find the StiffSpringForceField component. Drag and drop it on the root node. The Modeler will warn you ""No MechanicalState found in your Node root"". Press Ignore. We will define what the ForceField should act on manually.; Double click the new StiffSpringForceField to edit its properties. Towards the bottom of the window, in the First object in interaction textbox, type ""FirstObject"". In the Second object in interaction textbox, type ""SecondObject"". ; Go to the Property 2/2 tab, increase the spring's pairs of indices, stiffness, damping, and rest length to 1, and press Display the values, then Update. Fill in ""1"", ""0"", ""10"", ""0.1"", and ""1"" in the columns Index1, Index2, Ks, Kd, and L respectively.; Run the scene in SOFA. Click the Graph tab.; Key points; We use the same component as in the previous part of the tutorial (StiffSpringForceField). But you may notice the the colour used in the SOFA scene graph is not the same. Internal Springs use a blue color, while Interaction Springs use a red colour. The difference with the previous use of the StiffSpringForceField resides in the fact that we need to specify the two mechanical objects in interaction: we specified the MechanicalObjects FirstObject and SecondObject. The creation of the springs is exactly the same: two indices, Ks, Kd and rest length. The second spring is displayed in green, representing the interaction between the two objects. ; Results; To get a better view of the simulation, reduce the integration time step by finding the DT textbox on the top left of the SOFA window, and changing it from 0.01 to ""0.001"". Press Animate.; Previous ____________ Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/6_Pendulum.html:1606,integrat,integration,1606,examples/Tutorials/StepByStep/Pendulum/6_Pendulum.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/6_Pendulum.html,1,['integrat'],['integration']
Integrability,". Creation of a Pendulum (8/8); Description; To show the genericity of SOFA, the last tutorial will simulate the same scene but using a different ODE solver and integration scheme.; We will remove the EulerSolver and replace it with the EulerImplicitSolver. This solver contains the algorithm used to update particle positions and velocities at each time step. It uses an auxiliary component, the CGLinearSolver, to solve equation systems.; Key points; Right click on the EulerSolver in the Modeler's scene graph, and select Delete.; Find the EulerImplicitSolver component, and add it on the root node. Find the CGLinearSolver component, and add it on the root node.; Results; Run in SOFA and animate.; The behavior is slightly different. Try modifying the parameters of the ODE Solver and the Linear Solver.; Previous. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/7_Pendulum.html:161,integrat,integration,161,examples/Tutorials/StepByStep/Pendulum/7_Pendulum.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Pendulum/7_Pendulum.html,1,['integrat'],['integration']
Integrability,". Deformable model of the Tongue; Description:. 		We add a deformable model to the tongue. It means the tongue will move and deform depending on the forces applied on it.; 		To do this, we use the component TetrahedralCorotanionalFEMForceField. It uses finite element methods to compute the internal forces.; 		; Key points:. 			To add a deformable model in the scene, we need to create a MechanicalObject. All the forces and displacement are computed using an Euler implicit solver (EulerImplicitSolver) for time integration and a Conjugate Gradient linear solver (CGLinearSolver) to solve a linear system. ; 			We also need a container to store the tetrahedra (TetrahedronSetTopologyContainer). With all these components, we can add a force field to compute internal forces (TetrahedralCorotanionalFEMForceField).; 		. 			The visual model of the tongue is updated because of a mapping (BarycentricMapping) between the deformable model and the visual.; 		; Note:. 			In the current scene, the visual model of the tongue is not displayed, but the deformable model is displayed with the blue tetrahedra.; 		. 			The tetrahedric mesh of the tongue has been generated using the CGAL plugin in SOFA. Read this annex to learn more about mesh generation using CGAL plugin.; 		. 			The mass choosen for the deformable model of the tongue is a DiagonalMass. It has been choosen to show the diversity of masses available in SOFA. This kind of mass computes the mass matrix with non uniform diagonal values, depending on the tetrahedra size.; 		. Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_07.html:132,depend,depending,132,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_07.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_07.html,3,"['depend', 'integrat']","['depending', 'integration']"
Integrability,". Euler Implicit Solver. Description. 	The EulerImplicitSolver can be used to solve ODE systems of first or second order, using the Euler implicit integration scheme. The step size of the discretization corresponds to the timeStep of SOFA.; 	; 	At each step of the scheme, the linear equation systems obtained have to be solved by an auxiliary component, the CGLinearSolver, which can be of different kinds (conjugated gradient, ...).; ; Key points. 	Different simulations are proposed:; 	; Green: reference deformation.; Yellow: Mechanical system using springs along edges.; Light blue: Mechanical system using tetrahedron finite elements.; Blue: Same system as before but using a first order integration scheme.; Red: Mechanical system with tetrahedron finite linear elements. Results. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ImplicitEuler.html:147,integrat,integration,147,examples/Tutorials/Solvers/ImplicitEuler.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ImplicitEuler.html,2,['integrat'],['integration']
Integrability,". Explicit Euler Solver. Description. 		In Sofa, EulerSolver denotes the ODE solver using the explicit integration scheme for the computing of ; 		the dynamic system. This integration scheme resolves the system in relation to time: given the mechanical state; 		at time Tn, compute the state at time Tn+1=Tn + dt. ; 		; Key points		; 		According to Taylor expansion, the error for the first derivative approximation of a function ; 		f(t) is in relation to dt and f""(t). The term f""(t) can represent the dynamic (forces, acceleraion) of the system. Thus, there are two ; 		important criteria for stabilization when using the explicit EulerSolver:; 		; The time step dt.; The dynamic of the system. 		In this example, if the time step is set higher (dt=0.001), or by using [Shift + leftmouse] to tug the object in order to ; 		dynamically unstabilize the system, the system becomes unstable as showm below :; 		. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ExplicitEuler.html:103,integrat,integration,103,examples/Tutorials/Solvers/ExplicitEuler.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ExplicitEuler.html,2,['integrat'],['integration']
Integrability,". ForceField Tutorials. Description; ForceFields are components that exhibit mechanical properties in Sofa. These might be illustrated ; 	by several theories like linear elasticity, hyperelasticity, visco-elasticity, etc. These properties ; 	allow computing of the mechanical response of object when an external force is applied. They are mechanical intrinsic properties, and normally do not depend on the size or shape of the object.; ForceFields in Sofa deeply depend on the object's topology. ; 	When choosing a ForceField, the user must take care to pick the appropriated Topology. ForceField components ; 	sometimes have the name of a specific mechanical model. In this case, the user can search for documentation for a deeper ; 	understanding. In other cases, ForceFields are named by the combining the name of the computation method,; 	topology type, etc. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/ForceFields/ForceFields.html:392,depend,depend,392,examples/Tutorials/ForceFields/ForceFields.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/ForceFields/ForceFields.html,2,['depend'],['depend']
Integrability,". Instrument visual model; Description:. 		In this scene, we build the basics for a moving object. . 		; Key points:. First, we put a gravity in the whole scene with the Gravity component.; We set the instrument as a MechanicalObject. It describes the state of the particles of the object.; To compute the states at each time step, we need a time integrator, like the EulerImplicitSolver.; We need a linear solver, like CGLinearSolver, to solve the linear system generated with our implicit solver.; We finally add a mass to the object with the UniformMass component. Note:; The gravity can be set in a node with the vec3d argument gravity instead of with a component.; See other tutorials to learn more about time integration.; Next. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_03.html:347,integrat,integrator,347,examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_03.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/StepByStep/Dentistry_Haptics/dentalSurgery_03.html,2,['integrat'],"['integration', 'integrator']"
Integrability,". Newmark Implicit Solver. Description. 	The NewmarkImplicitSolver can be used to solve ODE systems, using the Newmark implicit integration scheme. The step size of the discretization corresponds to the timeStep of SOFA.; 	; 	At each step of the scheme, the linear equation systems obtained have to be solved by an auxiliary component, the CGLinearSolver, which can be of different kinds (conjugated gradient, ...).; 	 ; Key points; 	Different simulations are proposed:; 	; Green: reference deformation.; Yellow: Mechanical system using springs along edges. Results. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ImplicitNewmark.html:128,integrat,integration,128,examples/Tutorials/Solvers/ImplicitNewmark.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ImplicitNewmark.html,1,['integrat'],['integration']
Integrability,". OdeSolver Tutorial. Truth and initial cylinders; Simulation results. Description. 	In these tutorials, we show the different integration schemes and algorithms available to solve the system of Ordinary Differential Equations (ODE) at each step of the simulation. SOFA provides the following integration schemes:; ; Static integration scheme,; Explicit integration schemes,; Implicit integration schemes. Before going any further, it is important to know that state vectors in SOFA are saved in a component called ""State"" (see chapter ""State"" in the documentation).; For instance, when mechanical models are being solved, the user needs to add a ""MechanicalState"" component in the graph.; Inside the component, the format of storage for the state vector is a structure called MultiVector.; The size and the nature of the degrees of freedom is chosen by setting a ""template"" in the State component. Let us now go into details about the different ODE solvers in SOFA. First, the static integration is an integration which does not take the time into account. Such a static integration can be useful for checking the convergence of algorithms. Furthermore, different dynamic solvers have been implement in SOFA. Unlike static solvers, these solvers do take the dynamics of the system into account. However, depending on the aim of the computation, the solver has to be carefully chosen.; Let us review the basic differences between explicit and implicit solvers. Concerning the explicit solvers, they compute the new state variables from the state variables at the previous step.; The advantage is that explicit solvers can be fast, but the stability of the solver is not always granted. Very small time steps can be required to get satisfactory accuracy.; Moreover, such solvers are not suitable for every simulation. For example, explicit solvers do not compute cyclic loadings correctly, but could be advised in case of soft or high-mass objects. Concerning implicit solvers, they compute the new sta",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html:127,integrat,integration,127,examples/Tutorials/Solvers/Solvers.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html,5,['integrat'],['integration']
Integrability,". RungeKutta Solver. Description; 	; 		Like EulerSolver in Sofa, RungeKuttaSolver denotes the ODE solver using the explicit integration scheme for computing of ; 		the dynamic system. This integration scheme explicitely resolves the system in relation to time: given the mechanical state; 		at time Tn, compute the state at time Tn+1=Tn + dt. The difference with RungeKuttaSolver is that this ; 		integration use a more sophisticated algorithm for the computation of the state at time Tn+1. Therefore there is more stability; 		and can use a higher time step than the EulerSolver one. Otherwise, RungeKuttaSolver uses a more general explicit method than EulerSolver.; ; Key points. 		As with every Explicit Integration method, RungeKutta accumulates errors for each time step. Therefore, two criteria must be ; 		controled when using it : ; 		; The time step dt.; The dynamic of the system. 		However, RungeKutta4 is certainly more stable than Explicit Euler: The convergence error in RungeKutta4 is in relation to o(dt4), ; 		but in Explicit Euler it's only o(dt). For this example, RungeKutta can resolve the system with dt=0.001, but not the ExplicitEuler (0.0001). ; . 		Users can try several solvers with different values of the dt parameter to gain an idea of the solver's differences (also test the dependence of the solver ; 		according to the dynamics of the system by using [Shift + left mouse]).; 		. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ExplicitRungeKutta4.html:124,integrat,integration,124,examples/Tutorials/Solvers/ExplicitRungeKutta4.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/ExplicitRungeKutta4.html,5,"['Integrat', 'depend', 'integrat']","['Integration', 'dependence', 'integration']"
Integrability,". The Graphic User; Interface in SOFA; I) An overview of the GUI; II) Structure; III) Viewers; IV) QtOgreViewer; . An Overview of the GUI. The main; program is divided in two main parts, a rendering window and a control; panel. A slider between them sets their; dimension. Common Interactions:. ANIM: launch the Simulation.; The text field, DTsets the step of time used during the; simulation. STEP: the simulation will; compute its state at the time: t+DT. Reset Scene: reset the; Simulation to the initial time, t=0. Reset View: set your camera at; initial configuration found in a view file, or default; configuration. Save View: keep in memory the; position and orientation of the camera, for the next time you will load; the scene. Save Screenshot: take a picture; of the current scene. Direct interaction with the scene is; possible. To do so, maintain SHIFT button pressed and click on a; collision model present in the scene; A �Pick Interactor� will be; created, and attached to the picked collision model, if any, with a; spring. ; If; you release the mouse button first, the spring is removed.; If; you release the SHIFT button first, the spring is fixed and exists; until you pick another point in the scene. Several tabs give more information; about the current scene: ; This images were taken for the scene shown above. . - depending on the viewer, you can control what is displayed, and the; way it is. ; - statistical outputs during the simulation (position and velocity for; each elements, time passed at each branch of the graph, gnuplot files); ; - the graph of the scene, with all the nodes. You can export this graph; into a nice png file.; - the last tab, �Viewer� gives the name and information about; the possibilities of the current viewer, and the shortcuts. Double clicking on a node allows you to modify several values and; change dynamically the simulation (here, the TetrahedronFEMForceField; node). In some cases, you need to press the update button; to apply the change",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html:20,Interface,Interface,20,Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/src/sofa/gui/qt/Doc_Viewer/index.html,1,['Interface'],['Interface']
Integrability,". Topology Tutorial. Triangular Topology. Description. 		In these tutorials we will introduce the different topologies that exist in SOFA. Indeed, depending on the number of dimension representing our mechanical object (1D,2D or 3D), a suitable topologies has to be found.; 		For a linear object (1D), beams must be used.; 		For a surface object (2D), the user can choose between different element types such as triangles or quads.; 		And finally, for a volume object (3D), tetrahedral or hexahedral topologies are available.; 		The choice of the element type is very important and has to be done depending on the geometry to mesh and on the aimed simulation. 		Once the type of element has been properly chosen, you need to import the topology of your objects in SOFA.; 		- If you are using an imported mesh, you just need to use the suitable meshLoader or use the MeshTopology to load the whole object topology. 		- Otherwise, you will have to define the following components in your scene file:; 		; SetTopologyContainer,; SetTopologyModifier,; SetTopologyAlgorithms,; SetGeometryAlgorithms. Almost all the topologies implemented in SOFA are linear elements. The implementation of quadratic elements is however possible, but the topology is to be reconsidered. ; Finally, we also introduce in this tutorial the notion of TopologicalMapping. It corresponds to transformation mapping of one topology to another. It is thereby possible to get a tetrahedral mesh based on a hexahedral mesh. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/Topologies.html:147,depend,depending,147,examples/Tutorials/Topologies/Topologies.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Topologies/Topologies.html,2,['depend'],['depending']
Integrability,".00 ). ### SOFA-NG. **Modules**; - [All] Remove more GeometryAlgorithms usage [#2465]( https://github.com/sofa-framework/sofa/pull/2465 ); - [All] Remove some trivial dependencies on SofaBaseTopology [#2449]( https://github.com/sofa-framework/sofa/pull/2449 ); - [Sofa.Core][SofaBaseTopology] Move TopologyData* from SofaBaseTopology to Sofa.Core [#2423]( https://github.com/sofa-framework/sofa/pull/2423 ); - [Sofa.Core][SofaBaseTopology] Refactor TopologyContainer [#2387]( https://github.com/sofa-framework/sofa/pull/2387 ); - [Sofa.LinearAlgebra] Dispatch *Matrix from BTDLinearSolver, and BlockDiagonalMatrix [#2334]( https://github.com/sofa-framework/sofa/pull/2334 ); - [Sofa.LinearAlgebra] Dispatch EigenMatrix and EigenVector from Eigen2Solver [#2339]( https://github.com/sofa-framework/sofa/pull/2339 ); - [Sofa.LinearAlgebra] Gather tests [#2383]( https://github.com/sofa-framework/sofa/pull/2383 ); - [SofaBaseMechanics] BarycentricMapping: Remove avoidable Sofa.BaseTopology dependencies [#2403]( https://github.com/sofa-framework/sofa/pull/2403 ); - [SofaBaseTopology][SofaMiscForcefield] Remove GeometryAlgorithms from DiagonalMass & MeshMatrixMass [#2436]( https://github.com/sofa-framework/sofa/pull/2436 ); - [SofaFramework] Create Sofa.LinearAlgebra (BaseVector/BaseMatrix & co) [#2314]( https://github.com/sofa-framework/sofa/pull/2314 ). **Plugins / Projects**; - [Plugins] Move CGALPlugin to an external repository [#2500]( https://github.com/sofa-framework/sofa/pull/2500 ); - [Plugins] Move Flexible/Compliant/RigidScale to external repositories [#1873]( https://github.com/sofa-framework/sofa/pull/1873 ); - [Plugins] Move SofaPython to an external repository [#2224]( https://github.com/sofa-framework/sofa/pull/2224 ); - [Plugins] Remove LMConstraint from SOFA repository [#2508]( https://github.com/sofa-framework/sofa/pull/2508 ). ### Breaking. **Architecture**. **Modules**; - [All] Unused include directive [#2475]( https://github.com/sofa-framework/sofa/pull/2475 ); -",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:135050,depend,dependencies,135050,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,.FEM] Small update on container access to avoid unecessary check [#4639](https://github.com/sofa-framework/sofa/pull/4639); - [AnimationLoop] Rename Data [#4664](https://github.com/sofa-framework/sofa/pull/4664); - [Guidelines] Format cpp code [#4695](https://github.com/sofa-framework/sofa/pull/4695); - [all] Remove some warnings [#4698](https://github.com/sofa-framework/sofa/pull/4698); - [examples] Run PluginFinder on examples [#4707](https://github.com/sofa-framework/sofa/pull/4707); - [examples] Remove examples using DefaultCollisionGroupManager [#4708](https://github.com/sofa-framework/sofa/pull/4708); - [Core] Warn when module name is empty [#4725](https://github.com/sofa-framework/sofa/pull/4725); - ﻿[PlayBack] Update playback scenes to write/read and compare a beam under gravity motion [#4745](https://github.com/sofa-framework/sofa/pull/4745); - [tools] Factorize and clean plugin list filtering [#4748](https://github.com/sofa-framework/sofa/pull/4748); - [tools] Add new dependency to fix in MacOS post-install-fixup [#4749](https://github.com/sofa-framework/sofa/pull/4749); - [all] Fix typos in comments [#4759](https://github.com/sofa-framework/sofa/pull/4759); - [All] Delete v23.06 disabled header [#4760](https://github.com/sofa-framework/sofa/pull/4760); - [examples] Rename example scenes of constraints [#4769](https://github.com/sofa-framework/sofa/pull/4769). ### Refactoring. - [Constraint] Make name of constraints more explicit [#4302](https://github.com/sofa-framework/sofa/pull/4302); - [Constraint.Projective] Implement applyConstraint from new matrix assembly API [#4309](https://github.com/sofa-framework/sofa/pull/4309); - [Spring] Extract LinearSpring class in its own file [#4454](https://github.com/sofa-framework/sofa/pull/4454); - [VolumetricRendering][SofaCUDA] Move CUDA files related to VolumetricRendering [#4487](https://github.com/sofa-framework/sofa/pull/4487); - [DefaultType] Extract inner classes from SolidTypes in files [#4513](https://github,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:17768,depend,dependency,17768,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,"//github.com/sofa-framework/sofa/pull/4120); - [IO.Mesh.Tests] Reduce number of logs by unactivating printlog [#4148](https://github.com/sofa-framework/sofa/pull/4148); - [Constraint.Lagrangian.Solver] LCPConstraintSolver: remove useless computation if printLog is enabled [#4170](https://github.com/sofa-framework/sofa/pull/4170); - [Scene] Eigen3-SVD.scn: disable printLog [#4184](https://github.com/sofa-framework/sofa/pull/4184); - [Constraint.Lagrangian.Solver] Clean both constraint solvers [#4185](https://github.com/sofa-framework/sofa/pull/4185); - [Topology.Container] Update and rename methods in EdgeSetGeometryAlgorithms to compute barycentric coordinates [#4190](https://github.com/sofa-framework/sofa/pull/4190); - [Topology.Container] Remove method writeMSHfile in GeometryAlgorithms components [#4192](https://github.com/sofa-framework/sofa/pull/4192); - [all] Fix mismatch on explicit template instantiations [#4210](https://github.com/sofa-framework/sofa/pull/4210); - [SofaCUDA] Move cuda GUI dependent code [#4227](https://github.com/sofa-framework/sofa/pull/4227); - [all] Forgotten scoped timers [#4237](https://github.com/sofa-framework/sofa/pull/4237); - [all] Fix warnings [#4238](https://github.com/sofa-framework/sofa/pull/4238); - [all] Remove TODO.md [#4244](https://github.com/sofa-framework/sofa/pull/4244); - [Type, Helper] Remove unused __STL_MEMBER_TEMPLATES parts [#4251](https://github.com/sofa-framework/sofa/pull/4251); - [GL] Remove deprecated (and incomplete) Color class [#4264](https://github.com/sofa-framework/sofa/pull/4264); - [FEM, Mapping] dont mix type::fixed_array and type::Vec [#4269](https://github.com/sofa-framework/sofa/pull/4269); - [all] Fix headeronly extlibs licenses [#4272](https://github.com/sofa-framework/sofa/pull/4272); - [all] Externalize cxxopts [#4273](https://github.com/sofa-framework/sofa/pull/4273); - [Topology.Mapping] SimpleTesselatedHexaTopologicalMapping: use correct type for Index [#4279](https://github.com/sofa-framew",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:46516,depend,dependent,46516,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependent']
Integrability,"/github.com/sofa-framework/sofa/pull/138 ); - fixing issue related to parsing attributes with atof/atoi [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - unify color datafield [#206]( https://github.com/sofa-framework/sofa/pull/206 ); - Fix CMakeLists bug on Sofa.ini and installedSofa.ini creation [#291]( https://github.com/sofa-framework/sofa/pull/291 ); - Fix a lot of failing tests (#271, #279); - Fix compilation with SOFA_FLOATING_POINT_TYPE as float [#262]( https://github.com/sofa-framework/sofa/pull/262 ); - CMake: Fix and clean boost, when using Sofa as an external lib [#421]( https://github.com/sofa-framework/sofa/pull/421 ); - [SofaKernel]; - Fix the Filemonitor_test random failure on MacOs [#143]( https://github.com/sofa-framework/sofa/pull/143 ); - implement a numerical integration for triangle [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - add brace initializer to helper::vector class [#252]( https://github.com/sofa-framework/sofa/pull/252 ); - Activates thread-safetiness on MessageDispatcher. [#257]( https://github.com/sofa-framework/sofa/pull/257 ); - Fix getRelativePath() in DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - FileRepository::getRelativePath() lowering the case on WIN32 is now a deprecated behavior [#264]( https://github.com/sofa-framework/sofa/pull/264 ); - Fix FileRepository should not be optional [#122]( https://github.com/sofa-framework/sofa/pull/122 ); - FileMonitor: fix the recurrent problem with file 'SofaKernel/framework/framework_test/resources/existing.txt' pointed in Issue #146 [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - Fix wrong inline in exported functions [#449]( https://github.com/sofa-framework/sofa/pull/449 ); - [SofaFramework]; - fix the integration scheme for Quaternion [#172]( https://github.com/sofa-framework/sofa/pull/172 ) and fix values with which the quaternion is being compared after creation from euler angles; - [SofaHelper]; - VisualToolGL: fix s",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:332318,Message,MessageDispatcher,332318,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Message'],['MessageDispatcher']
Integrability,"/github.com/sofa-framework/sofa/pull/1761 ); - [SofaDeformable] Fix test in StiffSpringForceField doUpdateInternal [#1979]( https://github.com/sofa-framework/sofa/pull/1979 ); - **[SofaFramework]** Fix config files for Sofa.GL, for out-of-tree [#1911]( https://github.com/sofa-framework/sofa/pull/1911 ); - **[SofaFramework]** Put back Sofa.GL in Framework [#1920]( https://github.com/sofa-framework/sofa/pull/1920 ); - [SofaGeneralEngine] fixes ExtrudeQuadsAndGenerateHexas [#1673]( https://github.com/sofa-framework/sofa/pull/1673 ); - [SofaGeneralExplicitOdeSolver] Fix typo in CentralDifferenceSolver description [#1894]( https://github.com/sofa-framework/sofa/pull/1894 ); - [SofaGraphComponent] Clean format of RequiredPlugin message [#2111]( https://github.com/sofa-framework/sofa/pull/2111 ); - [SofaGraphComponent] Fix a typo in the warning emited by the APIVersion component and add missing allowed versions. [#2103]( https://github.com/sofa-framework/sofa/pull/2103 ); - [SofaGraphComponent] Fix message for RequiredPlugin [#2093]( https://github.com/sofa-framework/sofa/pull/2093 ); - [SofaGuiCommon] FIX build with SOFA_NO_OPENGL [#1724]( https://github.com/sofa-framework/sofa/pull/1724 ); - [SofaGuiCommon] Fix computationTimeSampling [#1698]( https://github.com/sofa-framework/sofa/pull/1698 ); - [SofaGuiCommon] Fix include path for compat files when installing [#1892]( https://github.com/sofa-framework/sofa/pull/1892 ); - [SofaGuiCommon] Remove unneeded include in PickHandler [#1707]( https://github.com/sofa-framework/sofa/pull/1707 ); - [SofaGuiCommon] Write json file [#2018]( https://github.com/sofa-framework/sofa/pull/2018 ); - [SofaGuiCommon] fix BackgroundSetting [#1826]( https://github.com/sofa-framework/sofa/pull/1826 ); - [SofaGuiQt] ADD qt.conf.h for custom qt.conf loading at runtime [#1820]( https://github.com/sofa-framework/sofa/pull/1820 ); - [SofaGuiQt] Clean QtGLViewer with key events [#1850]( https://github.com/sofa-framework/sofa/pull/1850 ); - [SofaGuiQt",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:185483,message,message,185483,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,/sofa/pull/1938 ); - **[SofaSimulation\*]** Fix confusion between namespaces [#1959]( https://github.com/sofa-framework/sofa/pull/1959 ); - **[SofaSimulationCore]** Clean free motion animation loop [#1930]( https://github.com/sofa-framework/sofa/pull/1930 ); - **[SofaSimulationCore]** Move WorkerThread class into its own file [#2002]( https://github.com/sofa-framework/sofa/pull/2002 ); - **[SofaSimulationCore]** Moves code from TopologyChangeVisitor.h into .cpp [#1905]( https://github.com/sofa-framework/sofa/pull/1905 ); - **[SofaSimulationCore]** Remove ClassSystem.h [#1844]( https://github.com/sofa-framework/sofa/pull/1844 ); - **[SofaSimulationCore]** Add tons of details in Euler solver [#2163]( https://github.com/sofa-framework/sofa/pull/2163 ); - **[SofaSimulationCore]** Clean AnimateVisitor [#2194]( https://github.com/sofa-framework/sofa/pull/2194 ); - **[SofaSimulation]** Convert tests to Sofa.Testing [#2154]( https://github.com/sofa-framework/sofa/pull/2154 ); - [SofaSparseSolver] Clean useless dependencies [#2012]( https://github.com/sofa-framework/sofa/pull/2012 ); - [SofaUserInteraction] Minor cleaning of RayTraceDetection [#2009]( https://github.com/sofa-framework/sofa/pull/2009 ); - [SofaUserInteraction] Remove AddFramePerformer as it is not compiled [#1970]( https://github.com/sofa-framework/sofa/pull/1970 ); - [SofaUserInteraction] Deprecate RayTraceDetection [#2212]( https://github.com/sofa-framework/sofa/pull/2212 ); - [Tests] Move tests in their (new) correct locations [#1998]( https://github.com/sofa-framework/sofa/pull/1998 ); - [Tests] Replace sofa::helper::testing by sofa::testing [#2143]( https://github.com/sofa-framework/sofa/pull/2143 ). **Plugins / Projects**; - [CGAL] Remove #pragma once in .cpp files [#2202]( https://github.com/sofa-framework/sofa/pull/2202 ); - [Geomagic] Add macro HAS_OPENHAPTICS to know if library is present [#2115]( https://github.com/sofa-framework/sofa/pull/2115 ); - [Geomagic] Duplicated includes #2070 [#2072]( http,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:205723,depend,dependencies,205723,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,1717 ); - **[SofaCore]** Move definition Link::read() method to BaseLink::read() [#1736]( https://github.com/sofa-framework/sofa/pull/1736 ); - **[SofaCore]** Move function definition in cpp files [#2041]( https://github.com/sofa-framework/sofa/pull/2041 ); - **[SofaCore]** Move the streaming operator from .h to .cpp [#1751]( https://github.com/sofa-framework/sofa/pull/1751 ); - **[SofaCore]** Reduce the needs for include in Node.h [#1744]( https://github.com/sofa-framework/sofa/pull/1744 ); - **[SofaCore]** Remove empty file [#2204]( https://github.com/sofa-framework/sofa/pull/2204 ); - **[SofaCore_simutest]** Add tests for Link::CheckPath [#1714]( https://github.com/sofa-framework/sofa/pull/1714 ); - **[SofaCore_test]** Update the two failling tests so they match the new convention for TypeInfo [#1709]( https://github.com/sofa-framework/sofa/pull/1709 ); - **[SofaExplicitOdeSolver]** Mark Data as disabled [#2218]( https://github.com/sofa-framework/sofa/pull/2218 ); - [SofaExporter] Remove SofaBaseVisual dependency [#2039]( https://github.com/sofa-framework/sofa/pull/2039 ); - [SofaExporter] Removed duplicated header guard [#1954]( https://github.com/sofa-framework/sofa/pull/1954 ); - [SofaExporter] Update OBJExporter example [#1782]( https://github.com/sofa-framework/sofa/pull/1782 ); - **[SofaFramework/Sofa.Testing]** remove macro and move testing resources from SofaFramework [#2000]( https://github.com/sofa-framework/sofa/pull/2000 ); - **[SofaFramework]** Remove warnings (a lot) [#1876]( https://github.com/sofa-framework/sofa/pull/1876 ); - [SofaGeneralEngine] Add option in NearestPointROI to use restPosition or position [#1978]( https://github.com/sofa-framework/sofa/pull/1978 ); - [SofaGeneralEngine] Remove dep on IdentityMapping (because of helper::eq) [#2090]( https://github.com/sofa-framework/sofa/pull/2090 ); - [SofaGeneralMeshCollision] Introduce RayTraceNarrowPhase [#2145]( https://github.com/sofa-framework/sofa/pull/2145 ); - [SofaGuiCommon] Clean inclu,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:202035,depend,dependency,202035,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,"22); project(SofaUserInteraction LANGUAGES CXX). set(SOFAUSERINTERACTION_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAUSERINTERACTION_SRC}/config.h.in; ${SOFAUSERINTERACTION_SRC}/initSofaUserInteraction.h; ). set(SOURCE_FILES; ${SOFAUSERINTERACTION_SRC}/initSofaUserInteraction.cpp; ). list(APPEND HEADER_FILES; ${SOFAUSERINTERACTION_SRC}/SleepController.h; ). list(APPEND SOURCE_FILES; ${SOFAUSERINTERACTION_SRC}/SleepController.cpp; ). sofa_find_package(SofaDeformable REQUIRED); sofa_find_package(SofaGeneralMeshCollision REQUIRED); sofa_find_package(SofaGeneralVisual REQUIRED); sofa_find_package(SofaTopologyMapping REQUIRED); sofa_find_package(SofaBoundaryCondition REQUIRED); sofa_find_package(SofaGraphComponent REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaGeneralMeshCollision SofaGeneralVisual SofaTopologyMapping SofaDeformable SofaBoundaryCondition SofaGraphComponent). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Geometry, Sofa.Component.Collision.Detection.Algorithm, Sofa.Component.Collision.Detection.Intersection, Sofa.Component.Collision.Response.Contact and Sofa.Component.Controller and Sofa.GUI.Component instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); sofa_find_package(Sofa.Component.Controller REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Algorithm); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection); target_l",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt:1007,message,message,1007,applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaUserInteraction/CMakeLists.txt,1,['message'],['message']
Integrability,76]( https://github.com/sofa-framework/sofa/pull/1776 ); - [PreassembledMass] FIX typo in PreassembledMass.inl [#1833]( https://github.com/sofa-framework/sofa/pull/1833 ); - [SofaCUDA] FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - [SofaCUDA] Fix CudaFixedConstraint when indices are not contiguous [#1780]( https://github.com/sofa-framework/sofa/pull/1780 ); - [SofaOpenCL] Fix compilation [#1795]( https://github.com/sofa-framework/sofa/pull/1795 ); - [SofaPardisoSolver] Fix plugin and add example [#1830]( https://github.com/sofa-framework/sofa/pull/1830 ); - [SofaRigid] fixes applyJT of RigidMapping [#1813]( https://github.com/sofa-framework/sofa/pull/1813 ); - [SofaSphFluid] Remove std::execution usage [#1684]( https://github.com/sofa-framework/sofa/pull/1684 ). **Examples / Scenes**; - [Scenes] Fix (new?) failing scenes on the CI [#1798]( https://github.com/sofa-framework/sofa/pull/1798 ). ### Cleanings; **Plugins / Projects**; - [SofaPython] CLEAN PythonEnvironment info messages [#1835]( https://github.com/sofa-framework/sofa/pull/1835 ); - [SofaCUDA] Renaming cudaMatrix methods to use rowSize and colSize [#1788]( https://github.com/sofa-framework/sofa/pull/1788 ). ____________________________________________________________. ## [v20.12.00]( https://github.com/sofa-framework/sofa/tree/v20.12.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.06.01...v20.12.00 ). ### SOFA-NG; Follow the SOFA-NG project on [its board]( https://github.com/sofa-framework/sofa/projects/9) and [its main issue](https://github.com/sofa-framework/sofa/issues/1527 ).; - [SofaMisc] Pluginize all modules [#1306]( https://github.com/sofa-framework/sofa/issues/1306 ); - [SofaGeneral] Pluginize all modules [#1529]( https://github.com/sofa-framework/sofa/issues/1529 ); - [SofaCommon] Pluginize all modules [#1597]( https://github.com/sofa-framework/sofa/issues/1597 ); - [SofaBase] Package all modules [#1633]( https://github.com/sofa-framework,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:213947,message,messages,213947,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['messages']
Integrability,"9.06]( https://github.com/sofa-framework/sofa/tree/v19.06 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v18.12...v19.06 ). ### Breaking. **Modules**; - [All] Run clang-tidy and update license headers [#899]( https://github.com/sofa-framework/sofa/pull/899 ); - [All] Refactor the loading of Xsp files. [#918]( https://github.com/sofa-framework/sofa/pull/918 ); - **[SofaBaseTopology]** Change triangles orientation in tetrahedron [#878]( https://github.com/sofa-framework/sofa/pull/878 ); - **[SofaBaseTopology]** Major Change in Topology Containers [#967]( https://github.com/sofa-framework/sofa/pull/967 ); - **[SofaKernel]** Refactor the MutationListener [#917]( https://github.com/sofa-framework/sofa/pull/917 ); - **[SofaKernel]** Some Topology cleaning... [#866]( https://github.com/sofa-framework/sofa/pull/866 ); - [SofaOpenglVisual] Fix ogl perf problem [#1069]( https://github.com/sofa-framework/sofa/pull/1069 ). ### Modularizations. - [SofaExporter] Modularize (+minor dependency cleaning) [#915]( https://github.com/sofa-framework/sofa/pull/915 ); - [SofaHaptics] Modularize sofa haptics [#945]( https://github.com/sofa-framework/sofa/pull/945 ); - [SofaOpenglVisual] Pluginize. [#1080]( https://github.com/sofa-framework/sofa/pull/1080 ). ### Improvements. **Architecture**; - [CMake] Rework sofa_generate_package [#951]( https://github.com/sofa-framework/sofa/pull/951 ); - [CMake] SofaMacros.cmake: deprecating sofa_create_package [#909]( https://github.com/sofa-framework/sofa/pull/909 ). **Modules**; - [All] Improve install and packaging [#1018]( https://github.com/sofa-framework/sofa/pull/1018 ); - [All] Plugins finding and loading [#913]( https://github.com/sofa-framework/sofa/pull/913 ); - [All] Replace deprecated c++ standard binder component [#908]( https://github.com/sofa-framework/sofa/pull/908 ); - **[SofaBaseMechanics]** BarycentricMapping: spatial hashing, handle limit cases [#896]( https://github.com/sofa-framework/sofa/pull/896 ); - **[SofaBaseTo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:258256,depend,dependency,258256,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,951 ); - **[Sofa.Topology]** remove unnecessary pragma [#1969]( https://github.com/sofa-framework/sofa/pull/1969 ); - **[Sofa.Type & DefaultType]** Adds forward declaration for Vec and StdRigidTypes. [#1907]( https://github.com/sofa-framework/sofa/pull/1907 ); - **[Sofa.Type]** Modernize fixed_array [#1985]( https://github.com/sofa-framework/sofa/pull/1985 ); - **[Sofa.Type]** Remove MIN_DETERMINANT preprocessor value [#1932]( https://github.com/sofa-framework/sofa/pull/1932 ); - **[Sofa.Type]** add operator* for RGBAColor [#1952]( https://github.com/sofa-framework/sofa/pull/1952 ); - **[SofaBaseCollision]** Broad phase and narrow phase separation [#2118]( https://github.com/sofa-framework/sofa/pull/2118 ); - **[SofaBaseCollision]** Fix simulation dependency [#1768]( https://github.com/sofa-framework/sofa/pull/1768 ); - **[SofaBaseMechanics_test]** Update tests to use Sofa.Testing instead of Sofa_Test [#2144]( https://github.com/sofa-framework/sofa/pull/2144 ); - **[SofaBaseTopology]** Improve TopologyDataHandler message [#2152]( https://github.com/sofa-framework/sofa/pull/2152 ); - **[SofaBaseTopology]** Remove definition of real [#1955]( https://github.com/sofa-framework/sofa/pull/1955 ); - **[SofaBaseTopology]** Remove warning when a Data is directly linked to a topoogy Data container [#1971]( https://github.com/sofa-framework/sofa/pull/1971 ); - **[SofaBaseTopology]** Remove warnings [#2046]( https://github.com/sofa-framework/sofa/pull/2046 ); - **[SofaBaseTopology]** Single definition of global variables [#1950]( https://github.com/sofa-framework/sofa/pull/1950 ); - **[SofaBaseUtils]** Clean RequiredPlugin [#1899]( https://github.com/sofa-framework/sofa/pull/1899 ); - **[SofaBaseVisual]** Move #include<Mat.h> from BaseCamera.h to BaseCamera.cpp [#1846]( https://github.com/sofa-framework/sofa/pull/1846 ); - **[SofaBase]** Convert tests to Sofa.Testing [#2146]( https://github.com/sofa-framework/sofa/pull/2146 ); - [SofaBoundaryCondition] Avoid ambiguity [#1958]( ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:199253,message,message,199253,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"; ${SOFAVALIDATION_SRC}/DevMonitorManager.h; ${SOFAVALIDATION_SRC}/DevTensionMonitor.h; ${SOFAVALIDATION_SRC}/DevTensionMonitor.inl; ${SOFAVALIDATION_SRC}/EvalPointsDistance.h; ${SOFAVALIDATION_SRC}/EvalPointsDistance.inl; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.h; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.inl; ${SOFAVALIDATION_SRC}/ExtraMonitor.h; ${SOFAVALIDATION_SRC}/ExtraMonitor.inl; ${SOFAVALIDATION_SRC}/Monitor.h; ${SOFAVALIDATION_SRC}/Monitor.inl; ). set(SOURCE_FILES; ${SOFAVALIDATION_SRC}/initSofaValidation.cpp; ${SOFAVALIDATION_SRC}/DataController.cpp; ${SOFAVALIDATION_SRC}/DataMonitor.cpp; ${SOFAVALIDATION_SRC}/DevAngleCollisionMonitor.cpp; ${SOFAVALIDATION_SRC}/DevMonitorManager.cpp; ${SOFAVALIDATION_SRC}/DevTensionMonitor.cpp; ${SOFAVALIDATION_SRC}/EvalPointsDistance.cpp; ${SOFAVALIDATION_SRC}/EvalSurfaceDistance.cpp; ${SOFAVALIDATION_SRC}/ExtraMonitor.cpp; ${SOFAVALIDATION_SRC}/Monitor.cpp; ). find_package(Sofa.Simulation.Common REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Common Sofa.Component.Collision). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Playback REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Playback). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""plugins""; ). ## Tests; cmake_dependent_option(SOFAVALIDATION_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFAVALIDATION_BUILD_TESTS); enable_testing(); add_subdirectory(SofaValidation_test); endif(). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt:1622,message,message,1622,applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaValidation/CMakeLists.txt,1,['message'],['message']
Integrability,"; ************************************; * BulletCollisionDetection.txt *; ************************************. AUTHOR :; Moreno TRLIN. LICENCE :; - Private. OTHER COMMENTS :. UTILISATION DU PLUGIN :; Tout d'abord il faut le mettre dans le dossier des plugins et le renommer en BulletCollisionDetection si ce n'est pas; le cas. Dans la scène construite il faut mettre les composants BulletCollisionDetection et BulletIntersection pour pouvoir; traiter les BulletCollisionModel (interface entre les collision model de bullet et sofa). BulletCollisionDetection fait office de broad et narrow phase (d'ailleurs il est possible de choisir la broad phase,; les champs useSAP et useSimpleBroadPhase... proposent cette possibilité). Il ne faut donc mettre aucune; autre broad ou narrow phase dans la scène. BulletIntersection sert à insérer les contacts de bullet dans sofa; grâce à l'intermédiaire du BtInterManager en les triant selon leur type. Le champ contactDistance de BulletIntersection; spécifie la distance à partir de laquelle un contact sofa est créé. BulletIntersection hérite d'Intersection et BaseIntersector,; il ne faut en aucun cas mettre d'autres composants héritant d'Intersection dans la scène sofa. Les BulletCollisionModel sont l'interface entre les collision model de bullet et sofa. BulletCollisionModel est une classe; abstraite. Toute classe qui en hérite doit aussi hériter du collision model de sofa lui corresondant. Ainsi, BulletTriangleModel; hérite à la fois de TriangleModel (sofa) et de BulletCollisionModel, et, contient les objets bullet nécessaires à la construction; d'un mesh. Des exemples de scènes sont fournies dans le dossier examples. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/BulletCollisionDetection.txt:478,interface,interface,478,applications/plugins/BulletCollisionDetection/BulletCollisionDetection.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/BulletCollisionDetection.txt,2,['interface'],['interface']
Integrability,; - [SofaBaseTopology] Rework method getIntersectionPointWithPlane [#1545]( https://github.com/sofa-framework/sofa/pull/1545 ); - [SofaBaseVisual][SofaDeformable] Clean some codes [#1449]( https://github.com/sofa-framework/sofa/pull/1449 ); - [SofaDeformable] Update RestShapeSpringsForceField [#1431]( https://github.com/sofa-framework/sofa/pull/1431 ); - [SofaGeneralEngine] Improve mesh barycentric mapper engine [#1487]( https://github.com/sofa-framework/sofa/pull/1487 ); - [SofaGeneralEngine] Remove useless create() function in some components [#1622]( https://github.com/sofa-framework/sofa/pull/1622 ); - [SofaGuiQt] Move libQGLViewer lib into its module [#1617]( https://github.com/sofa-framework/sofa/pull/1617 ); - [SofaHaptics] Small fix on LCPForceFeedback haptic rendering [#1537]( https://github.com/sofa-framework/sofa/pull/1537 ); - **[SofaHelper]** DrawTool uses RGBAColor now (instead of Vec4f) [#1626]( https://github.com/sofa-framework/sofa/pull/1626 ); - **[SofaHelper]** Remove OpenGL dependency in vector_device [#1646]( https://github.com/sofa-framework/sofa/pull/1646 ); - **[SofaKernel]** Clean namespace BarycentricMapper [#1571]( https://github.com/sofa-framework/sofa/pull/1571 ); - **[SofaKernel]** Factorize some code for maintenance [#1569]( https://github.com/sofa-framework/sofa/pull/1569 ); - **[SofaKernel]** Refactor the FileRepository constructors [#1610]( https://github.com/sofa-framework/sofa/pull/1610 ); - **[SofaKernel]** Remove core::Plugin/core::PluginManager [#1612]( https://github.com/sofa-framework/sofa/pull/1612 ); - **[SofaKernel]** Remove parentBaseData in BaseData.h [#1490]( https://github.com/sofa-framework/sofa/pull/1490 ); - **[SofaKernel]** Remove support for BaseData in Link.h [#1503]( https://github.com/sofa-framework/sofa/pull/1503 ); - **[SofaKernel]** Remove un-needed StringUtil.h in Base.h [#1519]( https://github.com/sofa-framework/sofa/pull/1519 ); - **[SofaKernel]** Remove un-needed class reflection system. [#1541]( https:/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:227394,depend,dependency,227394,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,"; Open a command line tool in the MyPlugin directory and use the; script utils/changeClassName.sh ; to replace SofaHAPI; with MyPlugin in all; the file; names and their content:; utils/changeClassName.sh SofaHAPI MyPlugin; cd examples; ../utils/changeClassName.sh SofaHAPI MyPlugin; cd ../doc/; ../utils/changeClassName.sh SofaHAPI MyPlugin. At this point, you may want to add the plugin directory to svn.; You can also reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_SofaHAPI ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_SofaHAPI); {; usePlugin(SofaHAPI) } . if your plugin depends on other plugins, edit file SofaHAPI-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. SofaHAPI.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initSofaHAPI.h. a template of user documentation is found in SofaHAPI.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the examples are in examples/; . The first one is SofaHAPI.scn, and when; runSOFA; opens it, an html page pops; up, with a link to the plugin documentation. Intellectual; property and rights. Authors. You. Contact. You@your.institute. License. Your can distribute this plugin; under; the same license as the core of SOFA, or any other license of your; choice. Patents. APP reg",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/doc/index.html:1483,depend,dependencies,1483,applications/plugins/SofaHAPI/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/doc/index.html,1,['depend'],['dependencies']
Integrability,"CImg). set(CIMG_H_DIR ${cimg_SOURCE_DIR}); sofa_find_package(CImg REQUIRED); endif(); elseif (NOT CImg_FOUND); message(FATAL_ERROR ""CImgPlugin: DEPENDENCY CImg NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install cimg-dev, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # OS X only: if the user installed its own JPEG/PNG lib (typically with homebrew/port),; # it will allow to use those instead of those present in XCode's frameworks; set(CMAKE_FIND_FRAMEWORK LAST). sofa_find_package(TIFF QUIET); sofa_find_package(ZSTD QUIET); sofa_find_package(JPEG QUIET); sofa_find_package(PNG QUIET); sofa_find_package(ZLIB QUIET). # Configure Paths according to detected packages; set(DEP_TARGETS """"); set(CIMG_CFLAGS -Dcimg_no_system_calls) # Remove CImg sys calls; if(TIFF_FOUND AND ( NOT(SOFA_BUILD_RELEASE_PACKAGE) OR ZSTD_FOUND)); message(STATUS ""CImgPlugin: TIFF Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_tiff); list(APPEND DEP_TARGETS TIFF::TIFF); if(ZSTD_FOUND); set(DEP_ZSTD ZSTD::ZSTD); endif(); else(); message(STATUS ""CImgPlugin: TIFF Image Format disabled""); endif(); if(JPEG_FOUND); message(STATUS ""CImgPlugin: JPEG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_jpeg); if(WIN32); # prevent INT32 redefinition on Windows (see jmorecfg.h); list(APPEND CIMG_CFLAGS -DXMD_H); endif(); list(APPEND DEP_TARGETS JPEG::JPEG); else(); message(STATUS ""CImgPlugin: JPEG Image Format disabled""); endif(); if(PNG_FOUND); message(STATUS ""CImgPlugin: PNG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_png); if(UNIX); # Prevent pngconf error (see https://bugs.launchpad.net/ubuntu/+source/libpng/+bug/218409); list(APPEND CIMG_CFLAGS -DPNG_SKIP_SETJMP_CHECK); endif(); list(APPEND DEP_TARGETS PNG::PNG); else(); message(STATUS ""CImgPlugin: PNG Image Format disabled""); endif(); if(ZLIB_FOUND); list(APPEND DEP_TARGETS ZLIB::ZLIB); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). targ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt:1952,message,message,1952,applications/plugins/CImgPlugin/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt,3,['message'],['message']
Integrability,"CKAGE_NAME ""${CPACK_PACKAGE_NAME}""); set(CPACK_IFW_PACKAGE_TITLE ""${CPACK_PACKAGE_NAME}""); set(CPACK_IFW_PRODUCT_URL ""${CPACK_PACKAGE_HOMEPAGE_URL}""); set(CPACK_IFW_PACKAGE_LOGO ""${CPACK_PACKAGE_ICON}""); set(CPACK_IFW_TARGET_DIRECTORY ""@HomeDir@/${CPACK_PACKAGE_INSTALL_DIRECTORY}""); if(WIN32); set(CPACK_IFW_PACKAGE_ICON ""${CMAKE_SOURCE_DIR}/applications/projects/runSofa/runSofa.ico""); elseif(APPLE); set(CPACK_IFW_PACKAGE_ICON ""${CMAKE_SOURCE_DIR}/applications/projects/runSofa/runSofa.icns""); endif(). cpack_ifw_configure_component_group(runtime; SORTING_PRIORITY 50; DEFAULT TRUE; EXPANDED; SCRIPT ""${CMAKE_SOURCE_DIR}/scripts/qtifw/install.qs""; ); cpack_ifw_configure_component_group(development; SORTING_PRIORITY 10; DEFAULT TRUE; EXPANDED; ). cpack_ifw_configure_component(applications; DISPLAY_NAME ""runSofa Application""; DEPENDS runtime; ); cpack_ifw_configure_component(headers; DISPLAY_NAME ""C++ Headers""; DEPENDS development; ); cpack_ifw_configure_component(GTest_headers; DISPLAY_NAME ""GTest Headers""; DEPENDS development; ); cpack_ifw_configure_component(libraries; DISPLAY_NAME ""Libraries""; DEPENDS development; ); cpack_ifw_configure_component(resources; DISPLAY_NAME ""Resources""; DEPENDS runtime; ); endif(); ######################. #######################; # NSIS Generator config; if(CPACK_BINARY_NSIS); # There is a bug in NSIS that does not handle full unix paths properly. Make; # sure there is at least one set of four (4) backslashes.; set(CPACK_NSIS_MUI_ICON ""${CMAKE_SOURCE_DIR}/applications/projects/runSofa/runSofa.ico""); set(CPACK_NSIS_INSTALLED_ICON_NAME ""bin\\\\runSofa.exe""); set(CPACK_NSIS_DISPLAY_NAME ${CPACK_PACKAGE_NAME}); set(CPACK_NSIS_PACKAGE_NAME ${CPACK_PACKAGE_NAME}); set(CPACK_NSIS_HELP_LINK ${CPACK_PACKAGE_HOMEPAGE_URL}); set(CPACK_NSIS_URL_INFO_ABOUT ${CPACK_PACKAGE_HOMEPAGE_URL}); set(CPACK_NSIS_MODIFY_PATH ON); set(CPACK_NSIS_CONTACT ""contact@sofa-framework.org""); set(CPACK_NSIS_INSTALL_ROOT ""$PROFILE""); string(CONCAT EXTRA_INSTALL_COMMAND ""Exec",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:15893,DEPEND,DEPENDS,15893,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,5,['DEPEND'],['DEPENDS']
Integrability,C_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder.cpp; ${SRC_ROOT}/OptionsGroup.cpp; ${SRC_ROOT}/ScopedAdvancedTimer.cpp; ${SRC_ROOT}/Polynomial_LD.cpp; ${SRC_ROOT}/RandomGenerator.cpp; ${SRC_ROOT}/StringUtils.cpp; ${SRC_ROOT}/TagFactory.cpp; ${SRC_ROOT}/TriangleOctree.cpp; ${SRC_ROOT}/Utils.cpp; ${SRC_ROOT}/dec,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:3298,Rout,RoutingMessageHandler,3298,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['Rout'],['RoutingMessageHandler']
Integrability,"Defaulttype to Sofa.Type [#1790]( https://github.com/sofa-framework/sofa/pull/1790 ); - **[SofaKernel]** Port Vec from Defaulttype to Sofa.Type (bis) [#1734]( https://github.com/sofa-framework/sofa/pull/1734 ); - **[SofaKernel]** Port a bunch of types from Helper and Defaulttype to Sofa.Type [#1818]( https://github.com/sofa-framework/sofa/pull/1818 ); - **[SofaKernel]** Port vector (and its siblings) from Helper to Sofa.Type [#1893]( https://github.com/sofa-framework/sofa/pull/1893 ); - **[SofaKernel]** Regroup all compatibility files in a Sofa.Compat module [#1944]( https://github.com/sofa-framework/sofa/pull/1944 ); - **[SofaSimulation]** Package SofaSimulation [#1694]( https://github.com/sofa-framework/sofa/pull/1694 ); - [SofaUserInteraction] Refactor PickParticlePerformer [#2084]( https://github.com/sofa-framework/sofa/pull/2084 ). **Plugins / Projects**; - [SofaPython] Move python-related files to SofaPython [#1887]( https://github.com/sofa-framework/sofa/pull/1887 ); - [SofaPython] Regroup dependencies [#1875]( https://github.com/sofa-framework/sofa/pull/1875 ). ### Breaking; **Modules**; - [All] Add forward declaration and opaque API for ExecParams, MechanicalParams, VisualParams and ConstraintParams [#1794]( https://github.com/sofa-framework/sofa/pull/1794 ); - [All] Remove SOFA_NO_OPENGL (not the cmake option) [#1888]( https://github.com/sofa-framework/sofa/pull/1888 ); - [All] Removes search & searchAll from BaseObject [#1842]( https://github.com/sofa-framework/sofa/pull/1842 ); - [All] ADD forward declaration headers + remove unneeded includes [#1764]( https://github.com/sofa-framework/sofa/pull/1764 ); - [All] Adds forward declaration and opaque api for the base types (the one used in Node.h) [#1765]( https://github.com/sofa-framework/sofa/pull/1765 ); - [All] Clean MechanicalMatrixVisitor [#1992]( https://github.com/sofa-framework/sofa/pull/1992 ); - [All] Data filename in BaseLoader is now using d_ [#2095]( https://github.com/sofa-framework/sofa/pull/2",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:170149,depend,dependencies,170149,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,"ENCIES is OFF and thus cannot be fetched. Install metis (version=5.1.0), or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). set(SOFA_MODULES; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.LinearSolver.Direct; Sofa.Core; Eigen3::Eigen; ). set(SOFAMATRIX_SRC_DIR src/${PROJECT_NAME}). set(HEADER_FILES; ${SOFAMATRIX_SRC_DIR}/config.h.in; ${SOFAMATRIX_SRC_DIR}/ComplianceMatrixExporter.h; ${SOFAMATRIX_SRC_DIR}/GlobalSystemMatrixExporter.h; ${SOFAMATRIX_SRC_DIR}/MatrixImageExporter.h; ${SOFAMATRIX_SRC_DIR}/FillReducingOrdering.h; ${SOFAMATRIX_SRC_DIR}/FillReducingOrdering.inl; ); set(SOURCE_FILES; ${SOFAMATRIX_SRC_DIR}/initSofaMatrix.cpp; ${SOFAMATRIX_SRC_DIR}/ComplianceMatrixExporter.cpp; ${SOFAMATRIX_SRC_DIR}/GlobalSystemMatrixExporter.cpp; ${SOFAMATRIX_SRC_DIR}/MatrixImageExporter.cpp; ${SOFAMATRIX_SRC_DIR}/FillReducingOrdering.cpp; ); set(README_FILES; SofaMatrix.md; ); set(MOC_FILES; ); set(MOC_HEADER_FILES; ). if (NOT Sofa.GUI.Qt_FOUND); message(NOTICE ""[SofaMatrix] Module Sofa.GUI.Qt not found: some components (GlobalSystemMatrixImage) will not be compiled""); else(); list(APPEND HEADER_FILES; ${SOFAMATRIX_SRC_DIR}/ComplianceMatrixImage.h; ${SOFAMATRIX_SRC_DIR}/GlobalSystemMatrixImage.h; ${SOFAMATRIX_SRC_DIR}/BaseMatrixImageProxy.h; ); list(APPEND SOURCE_FILES; ${SOFAMATRIX_SRC_DIR}/ComplianceMatrixImage.cpp; ${SOFAMATRIX_SRC_DIR}/GlobalSystemMatrixImage.cpp; ${SOFAMATRIX_SRC_DIR}/BaseMatrixImageViewerWidget.cpp; ); list(APPEND MOC_HEADER_FILES; ${SOFAMATRIX_SRC_DIR}/BaseMatrixImageViewerWidget.h; ); list(APPEND SOFA_MODULES; Sofa.GUI.Qt; ). find_package(Qt6 COMPONENTS Core CoreTools QUIET); if (NOT Qt6Core_FOUND); find_package(Qt5 COMPONENTS Core QUIET); endif(); if(Qt5Core_FOUND); qt5_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); elseif (Qt6Core_FOUND); qt6_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); endif(); endif(). # Create the plugin library.; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES} ${MOC_HEAD",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/CMakeLists.txt:1806,message,message,1806,applications/plugins/SofaMatrix/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/CMakeLists.txt,1,['message'],['message']
Integrability,"ENEUTILITY_SOURCE_DIR ""src/sofa/component/sceneutility""). set(HEADER_FILES; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/init.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/AddResourceRepository.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/APIVersion.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/InfoComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeAliasComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeDataAliasComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MessageHandlerComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimation.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimationOnEvent.h; ). set(SOURCE_FILES; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/AddResourceRepository.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/APIVersion.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/InfoComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeAliasComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeDataAliasComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MessageHandlerComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimation.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimationOnEvent.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_SCENEUTILITY_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_COMPONENT_SCENEUTILITY_BUILD_TESTS); enable_testing(); add_subdirectory(tests); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SceneUtility/CMakeLists.txt:1205,Message,MessageHandlerComponent,1205,Sofa/Component/SceneUtility/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SceneUtility/CMakeLists.txt,1,['Message'],['MessageHandlerComponent']
Integrability,"E_INCLUDE_PATH ${SOFA_DEPENDENCY_PACK_DIR}/include); if(CMAKE_CL_64); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_DEPENDENCY_PACK_DIR}/lib/win64); else(); list(APPEND CMAKE_LIBRARY_PATH ${SOFA_DEPENDENCY_PACK_DIR}/lib/win32); endif(); install(DIRECTORY ${SOFA_DEPENDENCY_PACK_DIR}/include/ DESTINATION include/extlibs/WinDepPack COMPONENT headers); install(DIRECTORY ${SOFA_DEPENDENCY_PACK_DIR}/licenses/ DESTINATION licenses COMPONENT applications); endif(). ### Testing; option(SOFA_BUILD_TESTS ""Compile the automatic tests for Sofa, along with the gtest library."" ON). ## Active or not the use of ccache; option(SOFA_USE_CCACHE ""Compile using ccache optimization"" OFF); if(SOFA_USE_CCACHE); find_program(CCACHE_PROGRAM ccache); if(CCACHE_PROGRAM); # Support Unix Makefiles and Ninja; #TODO replace by <LANG>_COMPILER_LAUNCHER when min cmake version > 3.4; set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ""${CCACHE_PROGRAM}""); set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ""${CCACHE_PROGRAM}""); else(); message(WARNING ""ccache not found, disabling option""); set(SOFA_USE_CCACHE OFF CACHE bool ""Compile using ccache optimization"" FORCE); endif(); endif(). ### Ninja build pools; option(SOFA_NINJA_BUILD_POOLS ""Activate the Ninja build pools feature, to limit the cores used by specific targets"" OFF). # Sofa.Config sets the environment (options, compiler flags, global variables); sofa_add_subdirectory(library Sofa/framework/Config Sofa.Config ON). ### Extlibs; add_subdirectory(extlibs). ### Compatibility; option(SOFA_ENABLE_LEGACY_HEADERS ""Enable the compatibility layer (headers located in legacy folders) and deprecated cmake modules."" ON); if(SOFA_ENABLE_LEGACY_HEADERS); message(""Using legacy headers is enabled.""); endif(); sofa_add_subdirectory(library Sofa/framework/Compat Sofa.Compat ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF). ### SOFA (framework and components); add_subdirectory(Sofa). ### Compatibility; # Deprecated (hollow) framework and component modules.; # All",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:6557,message,message,6557,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['message'],['message']
Integrability,"FAGUICOMMON_ROOT}/FilesRecentlyOpenedManager.h; ${SOFAGUICOMMON_ROOT}/GuiDataRepository.h; ${SOFAGUICOMMON_ROOT}/GUIManager.h; ${SOFAGUICOMMON_ROOT}/MouseOperations.h; ${SOFAGUICOMMON_ROOT}/OperationFactory.h; ${SOFAGUICOMMON_ROOT}/PickHandler.h; ${SOFAGUICOMMON_ROOT}/ViewerFactory.h; ${SOFAGUICOMMON_ROOT}/ArgumentParser.h; ). set(SOURCE_FILES; ${SOFAGUICOMMON_ROOT}/init.cpp; ${SOFAGUICOMMON_ROOT}/BaseGUI.cpp; ${SOFAGUICOMMON_ROOT}/BaseViewer.cpp; ${SOFAGUICOMMON_ROOT}/ColourPickingVisitor.cpp; ${SOFAGUICOMMON_ROOT}/FilesRecentlyOpenedManager.cpp; ${SOFAGUICOMMON_ROOT}/GuiDataRepository.cpp; ${SOFAGUICOMMON_ROOT}/GUIManager.cpp; ${SOFAGUICOMMON_ROOT}/MouseOperations.cpp; ${SOFAGUICOMMON_ROOT}/PickHandler.cpp; ${SOFAGUICOMMON_ROOT}/ViewerFactory.cpp; ${SOFAGUICOMMON_ROOT}/ArgumentParser.cpp; ). sofa_find_package(Sofa.Simulation.Common REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED); sofa_find_package(Sofa.GL QUIET) # ColourPickingVisitor. if(Sofa.GL_FOUND); message(STATUS ""-- ${PROJECT_NAME}: Sofa.GL dependent features enabled.""); else(); message(WARNING ""-- ${PROJECT_NAME}: Sofa.GL dependent features disabled.""); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Common); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Setting); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.Component); target_link_libraries(${PROJECT_NAME} PUBLIC cxxopts::cxxopts). if(Sofa.GL_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL); endif(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Common/CMakeLists.txt:2421,message,message,2421,Sofa/GUI/Common/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Common/CMakeLists.txt,4,"['depend', 'message']","['dependent', 'message']"
Integrability,"Field.h; sofa/gpu/cuda/CudaSPHFluidForceField.inl; sofa/gpu/cuda/CudaParticlesRepulsionForceField.h; sofa/gpu/cuda/CudaParticlesRepulsionForceField.inl; sofa/gpu/cuda/CudaSpatialGridContainer.h; sofa/gpu/cuda/CudaSpatialGridContainer.inl; ); list(APPEND SOURCE_FILES; sofa/gpu/cuda/CudaParticleSource.cpp; sofa/gpu/cuda/CudaSPHFluidForceField.cpp; sofa/gpu/cuda/CudaParticlesRepulsionForceField.cpp; sofa/gpu/cuda/CudaSpatialGridContainer.cpp; ); list(APPEND CUDA_SOURCES; sofa/gpu/cuda/CudaParticleSource.cu; sofa/gpu/cuda/CudaSPHFluidForceField.cu; sofa/gpu/cuda/CudaParticlesRepulsionForceField.cu; sofa/gpu/cuda/CudaSpatialGridContainer.cu; ); message(STATUS ""SofaCUDA: optional dependency to SofaSphFluid found. ""); else(); message(STATUS ""SofaCUDA: optional dependency SofaSphFluid not found. ""); endif(). sofa_find_package(SofaValidation QUIET); if(SofaValidation_FOUND); list(APPEND SOURCE_FILES; sofa/gpu/cuda/CudaExtraMonitor.cpp; ); message(STATUS ""SofaCUDA: found SofaValidation, enabling CudaExtraMonitor (Warning: this component is being deprecated). ""); endif(). option(SOFACUDA_VERBOSE_PTXAS ""???"" OFF); if(SOFACUDA_VERBOSE_PTXAS); set(VERBOSE_PTXAS --ptxas-options=-v); endif(). option(SOFACUDA_CUBLAS ""Activate cublas support in CUDA (requires SOFACUDA_DOUBLE)."" OFF); if(SOFACUDA_CUBLAS); set(SOFA_GPU_CUBLAS 1) # #cmakedefine; list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}); find_package(CUDASparse REQUIRED); endif(). option(SOFACUDA_CUDPP ""Activate CUDPP (for RadixSort)."" OFF); if(SOFACUDA_CUDPP); set(SOFA_GPU_CUDPP 1) # #cmakedefine; endif(). # Note: THRUST is included in CUDA SDK 4.0+, it is recommended to use it if available; option(SOFACUDA_THRUST ""Activate THRUST (for RadixSort)."" ON); if(SOFACUDA_THRUST); set(SOFA_GPU_THRUST 1) # #cmakedefine; endif(). option(SOFACUDA_DOUBLE ""Activate double-precision support in CUDA (requires GT200+ GPU and -arch sm_13 flag."" OFF); if(SOFACUDA_DOUBLE); set(SOFA_GPU_CUDA_DOUBLE 1) # #cmakedefine; endif(). option(SOFA",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:16872,message,message,16872,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,1,['message'],['message']
Integrability,"Full log]( https://github.com/sofa-framework/sofa/compare/v16.12...v17.06 ). ### New features. **For users**; - [SceneCreator]; - new methods to add basic 3D object: Cube, Cylinder, Sphere and Plane. In rigid or deformable.; - [GeneralTopology]; - SphereGridTopology component to create sphere grids, similar to CylinderGridTopology.; - Adds a new orientedBox dataField in BoxROI so that we can use it to either defined AABoxes or OrientedBox; - Minor improvement on the way warning/error message are presented to the users in runSofa. A single panel is now used instead of of two, it is always displayed, the Panel name also contains the number of message eg: ""Messages(5)""; - The Graph view is now displaying the type of message they contains.; - [runSofa]; - Autoload plugins, described in the user-custom file 'plugin_list.conf' if present; else 'plugin_list.conf.default' containing all compiled plugins and generated automatically by CMake. **For developpers**; - Add a Logger component that stores the history of messages into each sofa component.; - Implements new methods to write on-liner's conditional message:; msg_info_when(level<3) << ""This is a conditional info message""; - Implement an implicit version of each of the msg_* API allowing to write; msg_info() << ""Hello"" in place for msg_info(this) << Hello""; - CImgPlugin : creation of a dedicated plugin for image loading based on CImg [#185]( https://github.com/sofa-framework/sofa/pull/185 ); - Remove deprecated miniBoost dependency [#273]( https://github.com/sofa-framework/sofa/pull/273 ). ### Improvements. **Modules**; - [All]; - update containers to support c++x11 features [#113]( https://github.com/sofa-framework/sofa/pull/113 ); - speed up spheres rendering + code cleaning [#170]( https://github.com/sofa-framework/sofa/pull/170 ); - updates externs/gtest to a fresh checkout [#213]( https://github.com/sofa-framework/sofa/pull/213 ); - auto-init/cleanup libraries [#168]( https://github.com/sofa-framework/sofa/pull/168 ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:324999,message,messages,324999,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['messages']
Integrability,"G_COMPILE_OPTIONS ""-stdlib=libc++""); endif(). if(CMAKE_SYSTEM_NAME STREQUAL Linux AND NOT CMAKE_BUILD_TYPE MATCHES ""Debug""); target_compile_definitions(${PROJECT_NAME} PUBLIC ""NDEBUG""); # On Windows and MacOS, NDEBUG and _DEBUG are automatically; # set in the default c/cxx flags of the right configurations; endif(); if(MSVC); # Increase Number of Sections in .Obj file; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/bigobj""); if(SOFA_VECTORIZE); message(""SOFA_VECTORIZE option is deprecated and has been split between SOFA_ENABLE_SIMD and SOFA_ENABLE_FAST_MATH. These 2 options will be enabled.""); set(SOFA_ENABLE_SIMD ON); set(SOFA_ENABLE_FAST_MATH ON); endif(); # SIMD flags; if(SOFA_ENABLE_SIMD); include(find_avx); MSVC_CHECK_FOR_AVX() # search for availability of AVX2 (otherwise set to AVX); if (HAVE_AVX2_EXTENSIONS); message(""Your CPU supports AVX2 SIMD. Using flags: ${AVX_FLAGS}""); elseif(HAVE_AVX_EXTENSIONS); message(""Your CPU supports only AVX SIMD. Using flags: ${AVX_FLAGS}""); else(); message(""Your CPU does not support AVX SIMD."") # SSE2 is the default when x64 is set; endif(); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""${AVX_FLAGS}""); endif(); if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/fp:fast""); endif(); endif(). # Use Release flags for MinSizeRel and RelWithDebInfo build types:; set_target_properties(${PROJECT_NAME} PROPERTIES; MAP_IMPORTED_CONFIG_MINSIZEREL Release; MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release; ); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:RELEASE>:${SOFACONFIG_COMPILE_OPTIONS_RELEASE}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:DEBUG>:${SOFACONFIG_COMPILE_OPTIONS_DEBUG}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""${SOFACONFIG_COMPILE_OPTIONS}""). # target_link_option only available with cmake >= 3.13; if(${CMAKE_VERSION} VERSION_LESS ""3.13.0""); if(NOT SOFACONFIG_LINK_OPTIONS_RELEASE STREQUAL """"); string(REPLACE "";"" "" "" SOFACONFIG_LINK_OPTIONS_RELEASE ""${SOFACONFIG_LINK_OPTIONS_RELEASE}""); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:12629,message,message,12629,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['message'],['message']
Integrability,"GridForceField.inl; ). set(SOURCE_FILES; ${SOFADISTANCEGRID_SRC}/initSofaDistanceGrid.cpp; ${SOFADISTANCEGRID_SRC}/DistanceGrid.cpp; ${SOFADISTANCEGRID_SRC}/RegisterModelToCollisionFactory.cpp; ${SOFADISTANCEGRID_SRC}/components/forcefield/DistanceGridForceField.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/FFDDistanceGridDiscreteIntersection.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/RayDistanceGridContact.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/RigidDistanceGridDiscreteIntersection.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/DistanceGridCollisionModel.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/BarycentricPenalityContact_DistanceGrid.cpp; ). set(EXTRA_FILES; README.md; examples/README.md; examples/DistanceGridCollisionModel.scn; examples/FFDDistanceGridCollisionModel.scn; examples/DistanceGridForceField-liver.scn; ). find_package(MiniFlowVR QUIET); sofa_find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED); sofa_find_package(Sofa.GL QUIET). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Core); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision). if(Sofa.GL_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL); endif(). if(MiniFlowVR_FOUND); target_link_libraries(${PROJECT_NAME} PRIVATE miniFlowVR) # Private because not exported in API; message(STATUS ""SofaDistanceGrid: MiniFlowVR found.""); else(); message(STATUS ""SofaDistanceGrid: MiniFlowVR not found, some features will not be compiled.""); endif(). if(SOFA_BUILD_TESTS); add_subdirectory(SofaDistanceGrid_test); endif(). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaDistanceGrid/CMakeLists.txt:2933,message,message,2933,applications/plugins/SofaDistanceGrid/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaDistanceGrid/CMakeLists.txt,2,['message'],['message']
Integrability,"I_QT_ENABLE_QGLVIEWER); list(APPEND MOC_HEADER_FILES ${SRC_ROOT}/viewer/qgl/QtGLViewer.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/viewer/qgl/QtGLViewer.cpp); endif(); endif(). # QtCharts; if(Qt5Charts_FOUND OR Qt6Charts_FOUND); list(APPEND MOC_HEADER_FILES ; ${SRC_ROOT}/SofaWindowProfiler.h; ${SRC_ROOT}/QGraphStatWidget.h; ${SRC_ROOT}/QEnergyStatWidget.h; ${SRC_ROOT}/QMomentumStatWidget.h; ${SRC_ROOT}/GraphDataWidget.h; ); list(APPEND SOURCE_FILES ; ${SRC_ROOT}/SofaWindowProfiler.cpp; ${SRC_ROOT}/QGraphStatWidget.cpp; ${SRC_ROOT}/QEnergyStatWidget.cpp; ${SRC_ROOT}/QMomentumStatWidget.cpp; ${SRC_ROOT}/GraphDataWidget.cpp; ); list(APPEND UI_FILES ${SRC_ROOT}/WindowProfiler.ui); else(); message(STATUS ""${PROJECT_NAME}: QtCharts not found, SofaWindowProfiler will not be built.""); endif(). if(SOFA_GUI_QT_ENABLE_QDOCBROWSER); list(APPEND MOC_HEADER_FILES ${SRC_ROOT}/panels/QDocBrowser.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/panels/QDocBrowser.cpp); else(); message(STATUS ""${PROJECT_NAME}: QtWebEngine not found, QDocBrowser will not be built.""); endif(). #NodeEditor; if (SOFA_GUI_QT_ENABLE_NODEGRAPH); list(APPEND MOC_HEADER_FILES ; ${SRC_ROOT}/SofaWindowDataGraph.h; ${SRC_ROOT}/dataGraph/SofaComponentNodeModel.h; ). list(APPEND SOURCE_FILES ; ${SRC_ROOT}/SofaWindowDataGraph.cpp; ${SRC_ROOT}/dataGraph/SofaComponentNodeModel.cpp; ); endif(). if (Qt5Core_FOUND); qt5_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); qt5_wrap_ui(FORM_FILES ${UI_FILES}); elseif (Qt6Core_FOUND); qt6_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); qt6_wrap_ui(FORM_FILES ${UI_FILES}); endif(); set(MOC_FILES_GROUP ""Generated""); set(FORM_FILES_GROUP ""Generated""). sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.SceneUtility REQUIRED). set(CMAKE_AUTORCC ON); add_library(${PROJECT_NAME} SHARED ${MOC_HEADER_FILES} ${HEADER_FILES} ${MOC_FILES} ${FORM_FILES} ${SOURCE_FILES} ${QRC_FILES}). # For files generated by the moc; target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFA",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt:8961,message,message,8961,Sofa/GUI/Qt/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt,1,['message'],['message']
Integrability,"L REQUIRED); # sofa_find_package(SofaVolumetricData REQUIRED); find_package(Compliant QUIET); find_package(LMConstraint QUIET). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}); find_package(Bullet REQUIRED); include_directories(${BULLET_INCLUDE_DIRS}); link_directories(${BULLET_LIBRARY_DIRS}). message(STATUS ""BULLET_INCLUDE_DIRS: ${BULLET_INCLUDE_DIRS}""); message(STATUS ""BULLET_LIBRARIES: ${BULLET_LIBRARIES}""). # HACD (present in the lib dir of bullet) is not set by FindBullet; # this should set the correct path; set(HACD_LIB """"); if(BULLET_LIBRARIES); list(GET BULLET_LIBRARIES 0 first_bullet_lib_path); get_filename_component(bullet_lib_dir ""${first_bullet_lib_path}"" DIRECTORY); if(WIN32); set(HACD_LIB ""${bullet_lib_dir}/HACD.lib""); elseif(UNIX AND NOT APPLE); # on Ubuntu, this is installed with libbullet-extras-dev; set(HACD_LIB ""${bullet_lib_dir}/libHACD.so""); else(); # MacOS ? todo; endif(); endif(). if(EXISTS ""${HACD_LIB}""); message(STATUS ""HACD_LIB: ${HACD_LIB}""); else(); message(SEND_ERROR ""Could not find HACD, necessary to build ConvexHull."" ); endif(). if(Compliant_FOUND); list(APPEND SOURCE_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullCompliantContacts.cpp); else(); message(STATUS ""BulletCollisionDetection: could not find Compliant, won't build BulletConvexHullCompliantContacts""); endif(). if(LMConstraint_FOUND); list(APPEND HEADER_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContacts.cpp); list(APPEND SOURCE_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContacts.cpp); else(); message(STATUS ""BulletCollisionDetection: could not find LMConstraint, won't build BulletConvexHullContacts""); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Component.Collision ${BULLET_LIBRARIES} ${HACD_LIB} CollisionOBBCapsule Sofa.GL). if(Compliant_FOUND); target_link_libraries(${PROJECT_NAME} Compliant); endif(). sofa_create_package_with_targets(; PACKAGE_",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt:3165,message,message,3165,applications/plugins/BulletCollisionDetection/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt,2,['message'],['message']
Integrability,"LEDForceField.cu; ${SOFACUDA_SOURCE_DIR}/component/solidmechanics/fem/elastic/CudaTriangularFEMForceFieldOptim.cu. ### ForceFields; ${SOFACUDA_SOURCE_DIR}/component/mechanicalload/CudaEllipsoidForceField.cu; ${SOFACUDA_SOURCE_DIR}/component/mechanicalload/CudaLinearForceField.cu; ${SOFACUDA_SOURCE_DIR}/component/collision/response/contact/CudaPenalityContactForceField.cu; ${SOFACUDA_SOURCE_DIR}/component/mechanicalload/CudaPlaneForceField.cu; ${SOFACUDA_SOURCE_DIR}/component/mechanicalload/CudaSphereForceField.cu; ${SOFACUDA_SOURCE_DIR}/component/solidmechanics/spring/CudaSpringForceField.cu. ### Collisions; ; ### Constraints; ${SOFACUDA_SOURCE_DIR}/component/constraint/projective/CudaFixedProjectiveConstraint.cu; ${SOFACUDA_SOURCE_DIR}/component/constraint/projective/CudaLinearMovementProjectiveConstraint.cu; ; ; ). sofa_find_package(Sofa.GL QUIET); if(NOT Sofa.GL_FOUND); message(WARNING ""Sofa.GL is not active.""); message(""OpenGL-related code wont be enabled (Sharing OpenGL buffers with CUDA)""); else(); list(APPEND HEADER_FILES; sofa/gpu/cuda/CudaVisualModel.h; sofa/gpu/cuda/CudaVisualModel.inl; ); list(APPEND SOURCE_FILES; sofa/gpu/cuda/CudaVisualModel.cpp; ); list(APPEND CUDA_SOURCES; sofa/gpu/cuda/CudaVisualModel.cu; ); endif(). #Compatibility; if(SOFA_ENABLE_LEGACY_HEADERS); list(APPEND HEADER_FILES; sofa/gpu/cuda/CudaBarycentricMapping.h; sofa/gpu/cuda/CudaBarycentricMapping.inl; sofa/gpu/cuda/CudaBarycentricMappingRigid.h; sofa/gpu/cuda/CudaRigidMapping.h; sofa/gpu/cuda/CudaRigidMapping.inl; sofa/gpu/cuda/CudaIdentityMapping.h; sofa/gpu/cuda/CudaIdentityMapping.inl; sofa/gpu/cuda/CudaSubsetMapping.h; sofa/gpu/cuda/CudaSubsetMapping.inl. sofa/gpu/cuda/CudaDiagonalMass.h; sofa/gpu/cuda/CudaDiagonalMass.inl. sofa/gpu/cuda/CudaMeshMatrixMass.h; sofa/gpu/cuda/CudaMeshMatrixMass.inl. sofa/gpu/cuda/CudaUniformMass.h; sofa/gpu/cuda/CudaUniformMass.inl. sofa/gpu/cuda/CudaHexahedronFEMForceField.h; sofa/gpu/cuda/CudaHexahedronFEMForceField.inl; sofa/gpu/cuda/CudaStandar",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:11253,message,message,11253,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,1,['message'],['message']
Integrability,"LIBRARIES); list(GET BULLET_LIBRARIES 0 first_bullet_lib_path); get_filename_component(bullet_lib_dir ""${first_bullet_lib_path}"" DIRECTORY); if(WIN32); set(HACD_LIB ""${bullet_lib_dir}/HACD.lib""); elseif(UNIX AND NOT APPLE); # on Ubuntu, this is installed with libbullet-extras-dev; set(HACD_LIB ""${bullet_lib_dir}/libHACD.so""); else(); # MacOS ? todo; endif(); endif(). if(EXISTS ""${HACD_LIB}""); message(STATUS ""HACD_LIB: ${HACD_LIB}""); else(); message(SEND_ERROR ""Could not find HACD, necessary to build ConvexHull."" ); endif(). if(Compliant_FOUND); list(APPEND SOURCE_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullCompliantContacts.cpp); else(); message(STATUS ""BulletCollisionDetection: could not find Compliant, won't build BulletConvexHullCompliantContacts""); endif(). if(LMConstraint_FOUND); list(APPEND HEADER_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContacts.cpp); list(APPEND SOURCE_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContacts.cpp); else(); message(STATUS ""BulletCollisionDetection: could not find LMConstraint, won't build BulletConvexHullContacts""); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Component.Collision ${BULLET_LIBRARIES} ${HACD_LIB} CollisionOBBCapsule Sofa.GL). if(Compliant_FOUND); target_link_libraries(${PROJECT_NAME} Compliant); endif(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(BULLETCOLLISIONDETECTION_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(BULLETCOLLISIONDETECTION_BUILD_TESTS); enable_testing(); add_subdirectory(BulletCollisionDetection_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt:3759,message,message,3759,applications/plugins/BulletCollisionDetection/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt,1,['message'],['message']
Integrability,LinearSolver] Introduce GlobalSystemMatrixExporter [#2303]( https://github.com/sofa-framework/sofa/pull/2303 ); - [SofaBaseTopology] Add method to register callbacks directly using the topologyData [#2375]( https://github.com/sofa-framework/sofa/pull/2375 ); - [SofaBaseTopology] Ensure to add a topology EndingEvent before propagating to all topologyData [#2376]( https://github.com/sofa-framework/sofa/pull/2376 ); - [SofaBaseVisual] Fix VisualModelImpl to use topologyData and callback to handle topological changes [#2300]( https://github.com/sofa-framework/sofa/pull/2300 ); - [SofaCore] Add const version of getMSState to Mass [#2293]( https://github.com/sofa-framework/sofa/pull/2293 ); - [SofaCore] Clearer message when template parameter is not compatible with current context [#2262]( https://github.com/sofa-framework/sofa/pull/2262 ); - [SofaCore] Required data msg now depends on existing default value [#2527]( https://github.com/sofa-framework/sofa/pull/2527 ); - [SofaDefaultType] Introduce test interface for BaseMatrix [#2280]( https://github.com/sofa-framework/sofa/pull/2280 ); - [SofaGeneralAnimationLoop] More optimization on MechanicalMatrixMapper [#2411]( https://github.com/sofa-framework/sofa/pull/2411 ); - [SofaGeneralAnimationLoop] Remove matrix compression [#2367]( https://github.com/sofa-framework/sofa/pull/2367 ); - [SofaGeneralDeformable] Add option to enable/disable spring display in TriangularBendingSprings [#2297]( https://github.com/sofa-framework/sofa/pull/2297 ); - [SofaGeneralSimpleFem] Update BeamFEMForceField topologyHander and add tests [#2382]( https://github.com/sofa-framework/sofa/pull/2382 ); - [SofaGraphComponent] Restore check of deprecated components [#2267]( https://github.com/sofa-framework/sofa/pull/2267 ); - [SofaGuiQt] Introduce expand/collapse buttons [#2322]( https://github.com/sofa-framework/sofa/pull/2322 ); - [SofaGuiQt] Introduce expand/collapse buttons in profiler [#2351]( https://github.com/sofa-framework/sofa/pull/2351 ); -,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:141128,interface,interface,141128,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['interface'],['interface']
Integrability,Loader.h; ${SRC_ROOT}/kdTree.h; ${SRC_ROOT}/kdTree.inl; ${SRC_ROOT}/list.h; ${SRC_ROOT}/map.h; ${SRC_ROOT}/map_ptr_stable_compare.h; ${SRC_ROOT}/pair.h; ${SRC_ROOT}/proximity.h; ${SRC_ROOT}/random.h; ${SRC_ROOT}/rmath.h; ${SRC_ROOT}/set.h; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/system/DynamicLibrary.h; ${SRC_ROOT}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:3038,Message,MessageHandler,3038,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['Message'],['MessageHandler']
Integrability,"MIT License. Copyright (c) 2019 Pranav. Permission is hereby granted, free of charge, to any person obtaining a copy; of this software and associated documentation files (the ""Software""), to deal; in the Software without restriction, including without limitation the rights; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; copies of the Software, and to permit persons to whom the Software is; furnished to do so, subject to the following conditions:. The above copyright notice and this permission notice shall be included in all; copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; SOFTWARE.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Batch/src/sofa/gui/batch/indicators/LICENSE.txt:941,CONTRACT,CONTRACT,941,Sofa/GUI/Batch/src/sofa/gui/batch/indicators/LICENSE.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Batch/src/sofa/gui/batch/indicators/LICENSE.txt,1,['CONTRACT'],['CONTRACT']
Integrability,"MODIFICATION. 0. This License applies to any program or other work which contains; a notice placed by the copyright holder saying it may be distributed; under the terms of this General Public License. The ""Program"", below,; refers to any such program or work, and a ""work based on the Program""; means either the Program or any derivative work under copyright law:; that is to say, a work containing the Program or a portion of it,; either verbatim or with modifications and/or translated into another; language. (Hereinafter, translation is included without limitation in; the term ""modification"".) Each licensee is addressed as ""you"". Activities other than copying, distribution and modification are not; covered by this License; they are outside its scope. The act of; running the Program is not restricted, and the output from the Program; is covered only if its contents constitute a work based on the; Program (independent of having been made by running the Program).; Whether that is true depends on what the Program does. 1. You may copy and distribute verbatim copies of the Program's; source code as you receive it, in any medium, provided that you; conspicuously and appropriately publish on each copy an appropriate; copyright notice and disclaimer of warranty; keep intact all the; notices that refer to this License and to the absence of any warranty;; and give any other recipients of the Program a copy of this License; along with the Program. You may charge a fee for the physical act of transferring a copy, and; you may at your option offer warranty protection in exchange for a fee. 2. You may modify your copy or copies of the Program or any portion; of it, thus forming a work based on the Program, and copy and; distribute such modifications or work under the terms of Section 1; above, provided that you also meet all of these conditions:. a) You must cause the modified files to carry prominent notices; stating that you changed the files and the date of any change. b) You mu",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:3911,depend,depends,3911,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,6,['depend'],['depends']
Integrability,"MatrixExporter.cpp; ${SOFAMATRIX_SRC_DIR}/MatrixImageExporter.cpp; ${SOFAMATRIX_SRC_DIR}/FillReducingOrdering.cpp; ); set(README_FILES; SofaMatrix.md; ); set(MOC_FILES; ); set(MOC_HEADER_FILES; ). if (NOT Sofa.GUI.Qt_FOUND); message(NOTICE ""[SofaMatrix] Module Sofa.GUI.Qt not found: some components (GlobalSystemMatrixImage) will not be compiled""); else(); list(APPEND HEADER_FILES; ${SOFAMATRIX_SRC_DIR}/ComplianceMatrixImage.h; ${SOFAMATRIX_SRC_DIR}/GlobalSystemMatrixImage.h; ${SOFAMATRIX_SRC_DIR}/BaseMatrixImageProxy.h; ); list(APPEND SOURCE_FILES; ${SOFAMATRIX_SRC_DIR}/ComplianceMatrixImage.cpp; ${SOFAMATRIX_SRC_DIR}/GlobalSystemMatrixImage.cpp; ${SOFAMATRIX_SRC_DIR}/BaseMatrixImageViewerWidget.cpp; ); list(APPEND MOC_HEADER_FILES; ${SOFAMATRIX_SRC_DIR}/BaseMatrixImageViewerWidget.h; ); list(APPEND SOFA_MODULES; Sofa.GUI.Qt; ). find_package(Qt6 COMPONENTS Core CoreTools QUIET); if (NOT Qt6Core_FOUND); find_package(Qt5 COMPONENTS Core QUIET); endif(); if(Qt5Core_FOUND); qt5_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); elseif (Qt6Core_FOUND); qt6_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); endif(); endif(). # Create the plugin library.; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES} ${MOC_HEADER_FILES} ${MOC_FILES}). # Link the plugin library to its dependency(ies).; target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFA_MODULES}); target_link_libraries(${PROJECT_NAME} PRIVATE metis). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; # cmake_dependent_option(SOFAMATRIX_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); #if(SOFAMATRIX_BUILD_TESTS); # enable_testing(); # add_subdirectory(SofaMatrix_test); # endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/CMakeLists.txt:2879,depend,dependency,2879,applications/plugins/SofaMatrix/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/CMakeLists.txt,1,['depend'],['dependency']
Integrability,ModelImpl: Fix updateVisual() [#3815](https://github.com/sofa-framework/sofa/pull/3815) ; - [LinearSolver.Iterative] CMake: Fix package configuration [#3840](https://github.com/sofa-framework/sofa/pull/3840) ; - [Rendering3D] OglModel: Revert back to glBufferSubData [#3841](https://github.com/sofa-framework/sofa/pull/3841) ; - [SolidMechanics.Spring] CMake: Fix package configuration [#3846](https://github.com/sofa-framework/sofa/pull/3846) ; - [Spring] Remove unused dependencies [#3848](https://github.com/sofa-framework/sofa/pull/3848) ; - [FEM.Linear] FIX & Minor refactor of buildStiffnessMatrix in TriangleFEMForceField [#3989](https://github.com/sofa-framework/sofa/pull/3989). **Plugins / Projects**; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid2D [#3561](https://github.com/sofa-framework/sofa/pull/3561) ; - [MultiThreading] ParallelBruteForceBroadPhase: Fix assertion error [#3574](https://github.com/sofa-framework/sofa/pull/3574) ; - [image] Fix Sofa.GUI dependency [#3591](https://github.com/sofa-framework/sofa/pull/3591) ; - [SofaCUDA] Missing support for double precision floating-points [#3603](https://github.com/sofa-framework/sofa/pull/3603) ; - [SofaPhysicsAPI] Fix compilation by replacing use of SofaGUI by sofa::GUI::common [#3612](https://github.com/sofa-framework/sofa/pull/3612) ; - [SofaCUDA] No longer use deprecated texture references in TetraTLED [#3650](https://github.com/sofa-framework/sofa/pull/3650) ; - [MultiThreading] Empty string instead of null pointer in DataExchange [#3686](https://github.com/sofa-framework/sofa/pull/3686) ; - [Geomagic] Fix potential crash at exit when device has not been init [#3698](https://github.com/sofa-framework/sofa/pull/3698) ; - [SofaCUDA] Fix includes pointing to compatibility layer [#3727](https://github.com/sofa-framework/sofa/pull/3727) ; - [plugins] ArticulatedSystemMapping : adds size check & fixes typo [#3751](https://github.com/sofa-framework/sofa/pull/3751) . **Examples / Scenes**; - [All] Fix ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:59797,depend,dependency,59797,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,"N VERSION_LESS ""10.9"" AND ${CMAKE_CXX_COMPILER_ID} MATCHES ""Clang"" ); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-stdlib=libc++""); endif(). if(CMAKE_SYSTEM_NAME STREQUAL Linux AND NOT CMAKE_BUILD_TYPE MATCHES ""Debug""); target_compile_definitions(${PROJECT_NAME} PUBLIC ""NDEBUG""); # On Windows and MacOS, NDEBUG and _DEBUG are automatically; # set in the default c/cxx flags of the right configurations; endif(); if(MSVC); # Increase Number of Sections in .Obj file; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/bigobj""); if(SOFA_VECTORIZE); message(""SOFA_VECTORIZE option is deprecated and has been split between SOFA_ENABLE_SIMD and SOFA_ENABLE_FAST_MATH. These 2 options will be enabled.""); set(SOFA_ENABLE_SIMD ON); set(SOFA_ENABLE_FAST_MATH ON); endif(); # SIMD flags; if(SOFA_ENABLE_SIMD); include(find_avx); MSVC_CHECK_FOR_AVX() # search for availability of AVX2 (otherwise set to AVX); if (HAVE_AVX2_EXTENSIONS); message(""Your CPU supports AVX2 SIMD. Using flags: ${AVX_FLAGS}""); elseif(HAVE_AVX_EXTENSIONS); message(""Your CPU supports only AVX SIMD. Using flags: ${AVX_FLAGS}""); else(); message(""Your CPU does not support AVX SIMD."") # SSE2 is the default when x64 is set; endif(); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""${AVX_FLAGS}""); endif(); if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/fp:fast""); endif(); endif(). # Use Release flags for MinSizeRel and RelWithDebInfo build types:; set_target_properties(${PROJECT_NAME} PROPERTIES; MAP_IMPORTED_CONFIG_MINSIZEREL Release; MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release; ); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:RELEASE>:${SOFACONFIG_COMPILE_OPTIONS_RELEASE}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:DEBUG>:${SOFACONFIG_COMPILE_OPTIONS_DEBUG}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""${SOFACONFIG_COMPILE_OPTIONS}""). # target_link_option only available with cmake >= 3.13; if(${CMAKE_VERSION} VERSION_LESS ""3.13.0""); if(NOT SOFACONFIG_LINK_OPTIONS_RELEASE STREQUAL """"); str",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:12550,message,message,12550,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['message'],['message']
Integrability,"OFA_GUI_QT_TARGETS """"); set(QT_USE_IMPORTED_TARGETS 1); set(QT5_NO_LINK_QTMAIN 1). # Will only use Qt5 if Qt5 is found and Qt6 is not found; # if Qt5 and Qt6 are both found, Qt6 will take priority; find_package(Qt6 COMPONENTS Core CoreTools QUIET); if (NOT Qt6Core_FOUND); find_package(Qt5 COMPONENTS Core QUIET); endif(). if (Qt6Core_FOUND); message(""${PROJECT_NAME}: will use Qt6""); sofa_find_package(Qt6 COMPONENTS Gui GuiTools Widgets WidgetsTools OpenGLWidgets REQUIRED); set(SOFA_GUI_QT_TARETS ${SOFA_GUI_QT_TARGETS} Qt::Core Qt::Gui Qt::Widgets Qt::OpenGLWidgets ); elseif (Qt5Core_FOUND); message(""${PROJECT_NAME}: will use Qt5 (deprecated)""); sofa_find_package(Qt5 COMPONENTS Core Gui OpenGL REQUIRED); set(SOFA_GUI_QT_TARGETS ${SOFA_GUI_QT_TARGETS} Qt5::Core Qt5::Gui Qt5::OpenGL); else(); message(SEND_ERROR ""${PROJECT_NAME}: Could not find either Qt5 or Qt6.""); endif(). if (Qt5Core_FOUND); # Profiling; sofa_find_package(Qt5 COMPONENTS Charts QUIET BOTH_SCOPES); if(Qt5Charts_FOUND); set(SOFA_GUI_QT_TARGETS ${SOFA_GUI_QT_TARGETS} Qt5::Charts); else(); message(STATUS ""${PROJECT_NAME}: Qt5Charts not found. No chart nor Profile will be compiled""); endif(). # QDocBrowser; find_package(Qt5 COMPONENTS WebEngine QUIET) # if found, then QDocBrowser will be ON by default; option(SOFA_GUI_QT_ENABLE_QDOCBROWSER ""Build the QDocBrowser. QtWebEngine is needed."" ${Qt5WebEngine_FOUND}). if(SOFA_GUI_QT_ENABLE_QDOCBROWSER); sofa_find_package(Qt5 COMPONENTS WebEngine WebEngineWidgets REQUIRED BOTH_SCOPES); set(SOFA_GUI_QT_TARGETS ${SOFA_GUI_QT_TARGETS} Qt5::WebEngine Qt5::WebEngineWidgets); endif(); elseif (Qt6Core_FOUND). # Profiling; sofa_find_package(Qt6 COMPONENTS Charts QUIET BOTH_SCOPES); if(Qt6Charts_FOUND); set(SOFA_GUI_QT_TARGETS ${SOFA_GUI_QT_TARGETS} Qt::Charts); else(); message(STATUS ""${PROJECT_NAME}: Qt6 Charts not found. No chart nor Profile will be compiled""); endif(). # # QDocBrowser; find_package(Qt6 COMPONENTS WebEngineCore QUIET) # if found, then QDocBrowser will be O",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt:1164,message,message,1164,Sofa/GUI/Qt/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt,1,['message'],['message']
Integrability,"ON 3.22); project(Sofa.GUI LANGUAGES CXX). set(SOFAGUI_SOURCE_DIR ""src/sofa/gui""). set(SOFAGUI_TARGETS); set(SOFAGUI_MISSINGTARGETS). sofa_add_subdirectory(module Component ${PROJECT_NAME}.Component ON); if(TARGET ${PROJECT_NAME}.Component); list(APPEND SOFAGUI_TARGETS ${PROJECT_NAME}.Component); else(); list(APPEND SOFAGUI_MISSINGTARGETS ${PROJECT_NAME}.Component); endif(). sofa_add_subdirectory(library Common ${PROJECT_NAME}.Common ON); if(TARGET ${PROJECT_NAME}.Common); list(APPEND SOFAGUI_TARGETS ${PROJECT_NAME}.Common); else(); list(APPEND SOFAGUI_MISSINGTARGETS ${PROJECT_NAME}.Common); endif(). set(SOFAGUI_DIRS Batch Qt); foreach(dir ${SOFAGUI_DIRS}); sofa_add_subdirectory(plugin ${dir} ${PROJECT_NAME}.${dir} ON); if(TARGET ${PROJECT_NAME}.${dir}); list(APPEND SOFAGUI_TARGETS ${PROJECT_NAME}.${dir}); else(); list(APPEND SOFAGUI_MISSINGTARGETS ${PROJECT_NAME}.${dir}); endif(); endforeach(). # HeadlessRecorder is still an ""optional"" dependency of Sofa.GUI; sofa_add_subdirectory(plugin HeadlessRecorder ${PROJECT_NAME}.HeadlessRecorder OFF); if(TARGET ${PROJECT_NAME}.HeadlessRecorder); list(APPEND SOFAGUI_TARGETS ${PROJECT_NAME}.HeadlessRecorder); set(SOFA_GUI_HAVE_SOFA_GUI_HEADLESSRECORDER 1); endif(). option(LIBRARY_SOFA_GUI ""Build the Sofa.Gui library."" ON). if(LIBRARY_SOFA_GUI); if(SOFAGUI_MISSINGTARGETS); message(""${PROJECT_NAME}: package and library will not be created because some dependencies are missing or disabled: ${SOFAGUI_MISSINGTARGETS}""); return(); endif(). set(HEADER_FILES; ${SOFAGUI_SOURCE_DIR}/config.h.in; ${SOFAGUI_SOURCE_DIR}/init.h; ); set(SOURCE_FILES; ${SOFAGUI_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAGUI_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/CMakeLists.txt:1362,message,message,1362,Sofa/GUI/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/CMakeLists.txt,2,"['depend', 'message']","['dependencies', 'message']"
Integrability,"OT}/viewer/GLBackend.cpp; ${SRC_ROOT}/viewer/OglModelPolicy.cpp; ). # QtViewer; if(SOFA_GUI_QT_ENABLE_QTVIEWER); list(APPEND MOC_HEADER_FILES ${SRC_ROOT}/viewer/qt/QtViewer.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/viewer/qt/QtViewer.cpp); endif(). # QGLViewer; if(SOFA_GUI_QT_ENABLE_QGLVIEWER); list(APPEND MOC_HEADER_FILES ${SRC_ROOT}/viewer/qgl/QtGLViewer.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/viewer/qgl/QtGLViewer.cpp); endif(); endif(). # QtCharts; if(Qt5Charts_FOUND OR Qt6Charts_FOUND); list(APPEND MOC_HEADER_FILES ; ${SRC_ROOT}/SofaWindowProfiler.h; ${SRC_ROOT}/QGraphStatWidget.h; ${SRC_ROOT}/QEnergyStatWidget.h; ${SRC_ROOT}/QMomentumStatWidget.h; ${SRC_ROOT}/GraphDataWidget.h; ); list(APPEND SOURCE_FILES ; ${SRC_ROOT}/SofaWindowProfiler.cpp; ${SRC_ROOT}/QGraphStatWidget.cpp; ${SRC_ROOT}/QEnergyStatWidget.cpp; ${SRC_ROOT}/QMomentumStatWidget.cpp; ${SRC_ROOT}/GraphDataWidget.cpp; ); list(APPEND UI_FILES ${SRC_ROOT}/WindowProfiler.ui); else(); message(STATUS ""${PROJECT_NAME}: QtCharts not found, SofaWindowProfiler will not be built.""); endif(). if(SOFA_GUI_QT_ENABLE_QDOCBROWSER); list(APPEND MOC_HEADER_FILES ${SRC_ROOT}/panels/QDocBrowser.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/panels/QDocBrowser.cpp); else(); message(STATUS ""${PROJECT_NAME}: QtWebEngine not found, QDocBrowser will not be built.""); endif(). #NodeEditor; if (SOFA_GUI_QT_ENABLE_NODEGRAPH); list(APPEND MOC_HEADER_FILES ; ${SRC_ROOT}/SofaWindowDataGraph.h; ${SRC_ROOT}/dataGraph/SofaComponentNodeModel.h; ). list(APPEND SOURCE_FILES ; ${SRC_ROOT}/SofaWindowDataGraph.cpp; ${SRC_ROOT}/dataGraph/SofaComponentNodeModel.cpp; ); endif(). if (Qt5Core_FOUND); qt5_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); qt5_wrap_ui(FORM_FILES ${UI_FILES}); elseif (Qt6Core_FOUND); qt6_wrap_cpp(MOC_FILES ${MOC_HEADER_FILES}); qt6_wrap_ui(FORM_FILES ${UI_FILES}); endif(); set(MOC_FILES_GROUP ""Generated""); set(FORM_FILES_GROUP ""Generated""). sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.SceneU",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt:8688,message,message,8688,Sofa/GUI/Qt/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt,1,['message'],['message']
Integrability,"PEND SOFACONFIG_COMPILE_OPTIONS ""/fp:fast""); endif(); endif(); endif(); endif(). # Mac specific; if(APPLE); #remove OpenGL deprecation message; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-DGL_SILENCE_DEPRECATION""); endif(). ## OpenMP; option(SOFA_OPENMP ""Compile Sofa with OpenMP multithreading."" OFF); if(SOFA_OPENMP); sofa_find_package(OpenMP QUIET); if (OPENMP_FOUND); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""${OpenMP_CXX_FLAGS}""); list(APPEND SOFACONFIG_LINK_OPTIONS ""${OpenMP_CXX_FLAGS}""); else(); message(""WARNING: Your compiler does not implement OpenMP.""); endif(); endif(). ## Tracy; option(SOFA_TRACY ""Compile SOFA with the Tracy profiler client"" OFF); if (SOFA_TRACY); set(SOFA_TRACY_VERSION v0.9.1); include(FetchContent); option(TRACY_STATIC ""Whether to build Tracy as a static library"" OFF); FetchContent_Declare (; tracy; GIT_REPOSITORY https://github.com/wolfpld/tracy.git; GIT_TAG ${SOFA_TRACY_VERSION}; GIT_SHALLOW TRUE; GIT_PROGRESS TRUE; ); FetchContent_MakeAvailable (tracy); target_link_libraries(${PROJECT_NAME} PUBLIC TracyClient ); message(STATUS ""SOFA is compiled with the Tracy profiler client. Use the Tracy server ${SOFA_TRACY_VERSION}.""); endif(). option(SOFA_ENABLE_BUILTIN_TIMER ""Enable the builtin timers"" ON); if(SOFA_ENABLE_BUILTIN_TIMER); set(SOFA_ENABLE_SCOPED_ADVANCED_TIMER 1); endif(). # An important C++11 feature may be not enabled due to; # the compiler being built without the --enable-libstdcxx-time option.; if(CMAKE_COMPILER_IS_GNUCXX); if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.8); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-D_GLIBCXX_USE_NANOSLEEP -D_GLIBCXX_USE_SCHED_YIELD""); endif(); endif(). # hack for clang on old macosx (version < 10.9, such as the dashboard servers); # that is using, by default at that time, a libstdc++ that did not fully implement c++11; if(APPLE AND ${CMAKE_SYSTEM_NAME} MATCHES ""Darwin"" AND CMAKE_SYSTEM_VERSION VERSION_LESS ""10.9"" AND ${CMAKE_CXX_COMPILER_ID} MATCHES ""Clang"" ); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-st",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:10708,message,message,10708,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['message'],['message']
Integrability,"PI_SRC_DIR ""src/SofaPhysicsAPI""); set(HEADER_FILES; ${SOFAPHYSICSAPI_SRC_DIR}/config.h.in; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsAPI.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsOutputMesh_impl.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsSimulation.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsBindings.h; ${SOFAPHYSICSAPI_SRC_DIR}/fakegui.h; ). set(SOURCE_FILES; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsOutputMesh.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsSimulation.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsBindings.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/fakegui.cpp; ). find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED); sofa_find_package(Sofa.Component REQUIRED); sofa_find_package(Sofa.GUI.Common REQUIRED); sofa_find_package(SofaValidation QUIET). if(SofaValidation_FOUND); message(""SofaPhysicsAPI: SofaValidation has been found; enabling DataController and DataMonitor support.""); list(APPEND HEADER_FILES ; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataController_impl.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataMonitor_impl.h; ); list(APPEND HEADER_FILES ; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataController.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataMonitor.cpp; ); else(); message(""SofaPhysicsAPI: SofaValidation has not been found; DataController and DataMonitor will not be supported.""); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Graph Sofa.GUI.Common Sofa.SimpleApi); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component). if(SofaValidation_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC SofaValidation); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${Sofa_VERSION}). ## Install rules and CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaPhysicsAPI/CMakeLists.txt:1291,message,message,1291,applications/projects/SofaPhysicsAPI/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaPhysicsAPI/CMakeLists.txt,1,['message'],['message']
Integrability,Plugin: Avoid calling loadPlugin() twice on start-up [#4509](https://github.com/sofa-framework/sofa/pull/4509); - [Share] Remove DefaultCollisionGroupManager in the default scenes [#4521](https://github.com/sofa-framework/sofa/pull/4521); - [all] Fix some warnings [#4529](https://github.com/sofa-framework/sofa/pull/4529); - [GitHub] Fix GH Discussions Announcements for Discord [#4530](https://github.com/sofa-framework/sofa/pull/4530); - [Simulation.Core] Make TSAN pass for caduceus [#4535](https://github.com/sofa-framework/sofa/pull/4535); - [Config] Add cxxopts cmake find module [#4538](https://github.com/sofa-framework/sofa/pull/4538); - [Sofa.Testing] Add SimpleApi in Config.cmake.in [#4542](https://github.com/sofa-framework/sofa/pull/4542); - [script] Stale action: remove temporary layer and activate closing [#4560](https://github.com/sofa-framework/sofa/pull/4560); - [README] Update link to Discord [#4562](https://github.com/sofa-framework/sofa/pull/4562); - [plugins] Add SimpleApi as a dependency in SofaCarving_test [#4572](https://github.com/sofa-framework/sofa/pull/4572); - [Constraint.Lagrangian.Solver] Make problemId counter id atomic [#4581](https://github.com/sofa-framework/sofa/pull/4581); - [Collision.Response.Contact] Make contactId thread-safe [#4582](https://github.com/sofa-framework/sofa/pull/4582); - [Collision.Detection] Give current intersection methods as parameter to intersection functions [#4583](https://github.com/sofa-framework/sofa/pull/4583); - [LinearAlgebra] Fix compilation of assert [#4598](https://github.com/sofa-framework/sofa/pull/4598); - [Multithreading] fix multithread packaging [#4619](https://github.com/sofa-framework/sofa/pull/4619); - [GitHub] Add timezone info on cron Actions [#4626](https://github.com/sofa-framework/sofa/pull/4626); - [LinearAlgebra] Trigger error on the Eigen version [#4630](https://github.com/sofa-framework/sofa/pull/4630); - [Core] Missing call to super init [#4634](https://github.com/sofa-framework/sofa/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:8927,depend,dependency,8927,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,"RCE_DIR}/component/solidmechanics/fem/elastic/CudaTetrahedronFEMForceField.cu; sofa/gpu/cuda/CudaTetrahedronTLEDForceField.cu; ${SOFACUDA_SOURCE_DIR}/component/solidmechanics/fem/elastic/CudaTriangularFEMForceFieldOptim.cu. ### ForceFields; ${SOFACUDA_SOURCE_DIR}/component/mechanicalload/CudaEllipsoidForceField.cu; ${SOFACUDA_SOURCE_DIR}/component/mechanicalload/CudaLinearForceField.cu; ${SOFACUDA_SOURCE_DIR}/component/collision/response/contact/CudaPenalityContactForceField.cu; ${SOFACUDA_SOURCE_DIR}/component/mechanicalload/CudaPlaneForceField.cu; ${SOFACUDA_SOURCE_DIR}/component/mechanicalload/CudaSphereForceField.cu; ${SOFACUDA_SOURCE_DIR}/component/solidmechanics/spring/CudaSpringForceField.cu. ### Collisions; ; ### Constraints; ${SOFACUDA_SOURCE_DIR}/component/constraint/projective/CudaFixedProjectiveConstraint.cu; ${SOFACUDA_SOURCE_DIR}/component/constraint/projective/CudaLinearMovementProjectiveConstraint.cu; ; ; ). sofa_find_package(Sofa.GL QUIET); if(NOT Sofa.GL_FOUND); message(WARNING ""Sofa.GL is not active.""); message(""OpenGL-related code wont be enabled (Sharing OpenGL buffers with CUDA)""); else(); list(APPEND HEADER_FILES; sofa/gpu/cuda/CudaVisualModel.h; sofa/gpu/cuda/CudaVisualModel.inl; ); list(APPEND SOURCE_FILES; sofa/gpu/cuda/CudaVisualModel.cpp; ); list(APPEND CUDA_SOURCES; sofa/gpu/cuda/CudaVisualModel.cu; ); endif(). #Compatibility; if(SOFA_ENABLE_LEGACY_HEADERS); list(APPEND HEADER_FILES; sofa/gpu/cuda/CudaBarycentricMapping.h; sofa/gpu/cuda/CudaBarycentricMapping.inl; sofa/gpu/cuda/CudaBarycentricMappingRigid.h; sofa/gpu/cuda/CudaRigidMapping.h; sofa/gpu/cuda/CudaRigidMapping.inl; sofa/gpu/cuda/CudaIdentityMapping.h; sofa/gpu/cuda/CudaIdentityMapping.inl; sofa/gpu/cuda/CudaSubsetMapping.h; sofa/gpu/cuda/CudaSubsetMapping.inl. sofa/gpu/cuda/CudaDiagonalMass.h; sofa/gpu/cuda/CudaDiagonalMass.inl. sofa/gpu/cuda/CudaMeshMatrixMass.h; sofa/gpu/cuda/CudaMeshMatrixMass.inl. sofa/gpu/cuda/CudaUniformMass.h; sofa/gpu/cuda/CudaUniformMass.inl. sofa/gpu",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:11210,message,message,11210,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,1,['message'],['message']
Integrability,"RC_ROOT}/vector_T.h; ${SOFATYPESRC_ROOT}/vector_T.inl; ${SOFATYPESRC_ROOT}/vector_algebra.h; ${SOFATYPESRC_ROOT}/vector_algorithm.h; ${SOFATYPESRC_ROOT}/vector_device.h; ). set(SOURCE_FILES; ${SOFATYPESRC_ROOT}/init.cpp; ${SOFATYPESRC_ROOT}/BoundingBox.cpp; ${SOFATYPESRC_ROOT}/DualQuat.cpp; ${SOFATYPESRC_ROOT}/Frame.cpp; ${SOFATYPESRC_ROOT}/Material.cpp; ${SOFATYPESRC_ROOT}/PrimitiveGroup.cpp; ${SOFATYPESRC_ROOT}/Quat.cpp; ${SOFATYPESRC_ROOT}/RGBAColor.cpp; ${SOFATYPESRC_ROOT}/SVector.cpp; ${SOFATYPESRC_ROOT}/SpatialVector.cpp; ${SOFATYPESRC_ROOT}/Transform.cpp; ${SOFATYPESRC_ROOT}/Vec.cpp; ${SOFATYPESRC_ROOT}/fixed_array.cpp; ${SOFATYPESRC_ROOT}/vector.cpp; ${SOFATYPESRC_ROOT}/vector_Integral.cpp; ${SOFATYPESRC_ROOT}/vector_Real.cpp; ${SOFATYPESRC_ROOT}/vector_String.cpp; ). sofa_find_package(Sofa.Config REQUIRED). ## Boost (1.54.0 or higher) is now mandatory.; set(BOOST_MIN_VERSION ""1.54.0""); set(Boost_NO_BOOST_CMAKE TRUE); sofa_find_package(Boost ${BOOST_MIN_VERSION} QUIET); if(NOT Boost_FOUND); if(WIN32); message(FATAL_ERROR ""Boost (${BOOST_MIN_VERSION} or higher) is mandatory.\n""; ""Note that Boost autodetection on Windows was removed.\n""; ""Please follow CMake documentation to find Boost on your system.\n""; ""Hint: set BOOST_ROOT to your Boost location.""; ); else(); message(FATAL_ERROR ""Boost (${BOOST_MIN_VERSION} or higher) is mandatory.""); endif(); endif(); sofa_find_package(Boost QUIET REQUIRED); sofa_find_package(Sofa.Compat QUIET BOTH_SCOPES). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Config); target_link_libraries(${PROJECT_NAME} PUBLIC Boost::boost); if(Sofa.Compat_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Compat); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SO",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Type/CMakeLists.txt:2430,message,message,2430,Sofa/framework/Type/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Type/CMakeLists.txt,1,['message'],['message']
Integrability,"README.md; =========. This plugin requires the following dependencies:; - gfortran; - blas; - lapack; - gomp. Download the Pardiso library and license key from https://www.pardiso-project.org. In your home directory, create a file ""pardiso.lic"" which includes the license key. When configuring SOFA in CMake, fill the path variable ""PARDISO_LIB"" with the path to the pardiso library you downloaded.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaPardisoSolver/README.md:57,depend,dependencies,57,applications/plugins/SofaPardisoSolver/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaPardisoSolver/README.md,1,['depend'],['dependencies']
Integrability,"SE_CCACHE); find_program(CCACHE_PROGRAM ccache); if(CCACHE_PROGRAM); # Support Unix Makefiles and Ninja; #TODO replace by <LANG>_COMPILER_LAUNCHER when min cmake version > 3.4; set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ""${CCACHE_PROGRAM}""); set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ""${CCACHE_PROGRAM}""); else(); message(WARNING ""ccache not found, disabling option""); set(SOFA_USE_CCACHE OFF CACHE bool ""Compile using ccache optimization"" FORCE); endif(); endif(). ### Ninja build pools; option(SOFA_NINJA_BUILD_POOLS ""Activate the Ninja build pools feature, to limit the cores used by specific targets"" OFF). # Sofa.Config sets the environment (options, compiler flags, global variables); sofa_add_subdirectory(library Sofa/framework/Config Sofa.Config ON). ### Extlibs; add_subdirectory(extlibs). ### Compatibility; option(SOFA_ENABLE_LEGACY_HEADERS ""Enable the compatibility layer (headers located in legacy folders) and deprecated cmake modules."" ON); if(SOFA_ENABLE_LEGACY_HEADERS); message(""Using legacy headers is enabled.""); endif(); sofa_add_subdirectory(library Sofa/framework/Compat Sofa.Compat ON WHEN_TO_SHOW ""SOFA_ENABLE_LEGACY_HEADERS"" VALUE_IF_HIDDEN OFF). ### SOFA (framework and components); add_subdirectory(Sofa). ### Compatibility; # Deprecated (hollow) framework and component modules.; # All depend on SOFA_ENABLE_LEGACY_HEADERS; # Some still contain (maybe useful) components not moved in Sofa/ yet.; # TODO: finally empty those remnants; add_subdirectory(applications/collections/deprecated). ## Tutorials option; option(SOFA_BUILD_TUTORIALS ""Build (most of) the tutorials available."" OFF). # SceneCreator plugin; # Library used by SOFA_BUILD_TESTS and SOFA_BUILD_TUTORIALS; sofa_add_subdirectory(plugin applications/plugins/SceneCreator SceneCreator OFF; WHEN_TO_SHOW ""NOT SOFA_BUILD_SCENECREATOR AND NOT SOFA_BUILD_TESTS AND NOT SOFA_BUILD_TUTORIALS AND NOT SOFA_BUILD_RELEASE_PACKAGE""; VALUE_IF_HIDDEN ""ON""). ## Plugins; add_subdirectory(applications/plugins). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:7232,message,message,7232,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['message'],['message']
Integrability,"SOFA launcher; =============. The tool *sofa-launcher* ease the scripting of **numerous SOFA simulations**. This can be done from XML or python scripts. To accelerate the processing of the simulations the script has the ability to run the simulation either: sequentially, in parallel or on a cluster. There is two options to use it depending on your needs:. - You want to run a lot of simulation from you own python script. In this case you should look at the file ""integration_example.py"". This example shows how to start simulation in sequence, in parallel or using a cluster. The example also shows how all the simulation results are returned back to your script so you can implement your own number-crunching processing on them, e.g.: plotting graphs with *matplotlib*. - You don't want to write your own python script but still want to start a lot a lot of simulations you should have a look at the sofa-launcher.py application.; Example:; ```batch; ./sofa-launcher example.json; ```. This application is controlled via a json configuration file; ```json; {; ""files"": [; ""example.scn"",; ""example.py""; ],; ""variables"": [; {; ""GRAVITYXML"": ""1 2 3"",; ""nbIterations"": 1000; },; {; ""GRAVITYXML"": ""2 3 4"",; ""nbIterations"": 1000; }; ],; ""launcher"": ""parallel"",; ""numjobs"": 5,; ""resultsstyle"": ""results.thtml"",; ""resultsfile"": ""results.html""; }; ```; with:. - files: The sofa files with your scene; - variables: Some values in your scene can be changed automatically in each run of your scene ; You can use any name as $MYVALUE...it depend on what you put in your scene. ; in my example scene I replace the $GRAVITYXML with a different value at each run; - launcher: Indicate to launch the simulations in parallel (other choice are sequential or ssh); - numjobs: with a maximum of 5 simulation in parallel; - resultsstyle: Name of the report file template, here html but it could be anything else (eg latex array); - resultsfile: The file generated from the template and the results. NB:. - To run the di",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/README.md:332,depend,depending,332,tools/sofa-launcher/README.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/sofa-launcher/README.md,1,['depend'],['depending']
Integrability,"T_DIRECTORY}). # Option for packaging; option(SOFA_BUILD_RELEASE_PACKAGE ""Run package specific configure"" OFF). # Option to allow some dependencies such as cxxopts to be fetched by cmake if; # the package is not found; option(SOFA_ALLOW_FETCH_DEPENDENCIES ""Allow compatible dependencies to be fetched if the package is not found by cmake.; List of dependencies that can be fetched: cxxopts, gtest, metis, CImg"" ON). # Option to accelerate the compilation; # see https://cmake.org/cmake/help/v3.16/command/target_precompile_headers.html; # and https://cmake.org/cmake/help/v3.16/prop_tgt/DISABLE_PRECOMPILE_HEADERS.html. # https://cmake.org/cmake/help/latest/policy/CMP0127.html; if (${CMAKE_VERSION} VERSION_GREATER_EQUAL 3.22); cmake_policy(SET CMP0127 NEW); endif(); cmake_dependent_option(SOFA_BUILD_WITH_PCH_ENABLED ; ""Compile SOFA using precompiled header (to accelerate the build process)"" OFF; ""CMAKE_VERSION VERSION_GREATER_EQUAL 3.16"" OFF); if(SOFA_BUILD_WITH_PCH_ENABLED); message(""-- Precompiled headers: enabled (SOFA_BUILD_WITH_PCH_ENABLED is ON).""); else(); message(""-- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).""); set(DISABLE_PRECOMPILE_HEADERS ON); endif(). ## Change default install component and prefix; set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME applications); if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT); set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/install CACHE PATH ""Install path prefix, prepended onto install directories."" FORCE); endif(); if(APPLE AND SOFA_BUILD_APP_BUNDLE); set(SOFA_BUILD_RELEASE_PACKAGE ON); set(CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/runSofa.app/Contents/MacOS); message(""SOFA_BUILD_APP_BUNDLE = ${SOFA_BUILD_APP_BUNDLE}\n""; "" Forcing SOFA_BUILD_RELEASE_PACKAGE = ${SOFA_BUILD_RELEASE_PACKAGE}\n""; "" Forcing CMAKE_INSTALL_PREFIX = ${CMAKE_INSTALL_PREFIX}""; ); endif(); message(STATUS ""Install prefix: ${CMAKE_INSTALL_PREFIX}""). # Remove generated CMake files, this prevents CMake from finding packages t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:2288,message,message,2288,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['message'],['message']
Integrability,To install this plugin you need:. - to register on the Geomagic website; - to download and install the Geomagic driver (following the documentation and the instructions of INSTALL); - activate the plugin in cmake-gui; - compile it; - enjoy the power of the Geomagic haptic interfaces with SOFA and give a try to the example scene (examples/DemoGeomagic.scn). And let us know about your Geomagic simulations!,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Geomagic/README.txt:273,interface,interfaces,273,applications/plugins/Geomagic/README.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Geomagic/README.txt,1,['interface'],['interfaces']
Integrability,TopologyData callbacks (part 5) [#2391]( https://github.com/sofa-framework/sofa/pull/2391 ); - [SofaBaseMechanics] Remove unused handleEvent in UniformMass [#2521]( https://github.com/sofa-framework/sofa/pull/2521 ); - [SofaBaseMechanics] Simplify expression [#2468]( https://github.com/sofa-framework/sofa/pull/2468 ); - [SofaBaseMechanics] Use directly clear() when resetting force in MechanicalObject [#2518]( https://github.com/sofa-framework/sofa/pull/2518 ); - [SofaBaseTopology] 'createTopologyHandler' overrides a member function but is not marked 'override' [#2260]( https://github.com/sofa-framework/sofa/pull/2260 ); - [SofaBaseVisual] Split VisualModelImpl init method in several methods for more clarity [#2299]( https://github.com/sofa-framework/sofa/pull/2299 ); - [SofaConstraint] Better includes [#2266]( https://github.com/sofa-framework/sofa/pull/2266 ); - [SofaConstraint] Divide a timer in 2 [#2469]( https://github.com/sofa-framework/sofa/pull/2469 ); - [SofaConstraint] Remove dependency on TetrahedronFEMForcefield [#2250]( https://github.com/sofa-framework/sofa/pull/2250 ); - [SofaCore] Clean force fields [#2243]( https://github.com/sofa-framework/sofa/pull/2243 ); - [SofaCore] Fix two determiners in a row [#2271]( https://github.com/sofa-framework/sofa/pull/2271 ); - [SofaCore] Remove unused addSubMBKToMatrix in force fields [#2244]( https://github.com/sofa-framework/sofa/pull/2244 ); - [SofaCore] Remove unwanted logs in TopologyHandler. [#2401]( https://github.com/sofa-framework/sofa/pull/2401 ); - [SofaDeformable] clean and optimize addKToMatrix [#2429]( https://github.com/sofa-framework/sofa/pull/2429 ); - [SofaDenseSolver][SofaBaseLinearSolver] CLEAN macros *_CHECK and *_VERBOSE [#2310]( https://github.com/sofa-framework/sofa/pull/2310 ); - [SofaEigen2Solver] Description + timers + support of any BaseMatrix [#2336]( https://github.com/sofa-framework/sofa/pull/2336 ); - [SofaExporter] Rename OBJExporter into VisualModelOBJExporter [#2505]( https://githu,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:158342,depend,dependency,158342,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,T}/init.cpp; ${SRC_ROOT}/fwd.cpp; ${SRC_ROOT}/io/BaseFileAccess.cpp; ${SRC_ROOT}/io/FileAccess.cpp; ${SRC_ROOT}/io/File.cpp; ${SRC_ROOT}/io/Image.cpp; ${SRC_ROOT}/io/ImageDDS.cpp; ${SRC_ROOT}/io/ImageRAW.cpp; ${SRC_ROOT}/io/Mesh.cpp; ${SRC_ROOT}/io/MeshOBJ.cpp; ${SRC_ROOT}/io/MeshGmsh.cpp; ${SRC_ROOT}/io/MeshTopologyLoader.cpp; ${SRC_ROOT}/io/SphereLoader.cpp; ${SRC_ROOT}/io/STBImage.cpp; ${SRC_ROOT}/io/TriangleLoader.cpp; ${SRC_ROOT}/io/XspLoader.cpp; ${SRC_ROOT}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/Fi,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5323,Message,MessageFormatter,5323,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['Message'],['MessageFormatter']
Integrability,T}/kdTree.cpp; ${SRC_ROOT}/system/DynamicLibrary.cpp; ${SRC_ROOT}/system/FileSystem.cpp; ${SRC_ROOT}/system/Locale.cpp; ${SRC_ROOT}/system/PipeProcess.cpp; ${SRC_ROOT}/system/PluginManager.cpp; ${SRC_ROOT}/system/SetDirectory.cpp; ${SRC_ROOT}/system/console.cpp; ${SRC_ROOT}/system/thread/CTime.cpp; ${SRC_ROOT}/system/thread/CircularQueue.cpp; ${SRC_ROOT}/system/thread/debug.cpp; ${SRC_ROOT}/system/FileRepository.cpp; ${SRC_ROOT}/set.cpp; ${SRC_ROOT}/logging/Message.cpp; ${SRC_ROOT}/logging/MessageDispatcher.cpp; ${SRC_ROOT}/logging/MessageFormatter.cpp; ${SRC_ROOT}/logging/ComponentInfo.cpp; ${SRC_ROOT}/logging/ClangMessageHandler.cpp; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.cpp; ${SRC_ROOT}/logging/ConsoleMessageHandler.cpp; ${SRC_ROOT}/logging/SilentMessageHandler.cpp; ${SRC_ROOT}/logging/FileMessageHandler.cpp; ${SRC_ROOT}/logging/CountingMessageHandler.cpp; ${SRC_ROOT}/logging/LoggingMessageHandler.cpp; ${SRC_ROOT}/logging/RoutingMessageHandler.cpp; ${SRC_ROOT}/logging/ExceptionMessageHandler.cpp; ${SRC_ROOT}/messaging/FileMessage.cpp; ${SRC_ROOT}/visual/DrawTool.cpp; ${SRC_ROOT}/visual/Transformation.cpp; ${SRC_ROOT}/visual/Trackball.cpp; ); if(CMAKE_SYSTEM_NAME STREQUAL Linux); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_linux.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Darwin); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_macosx.cpp); elseif(CMAKE_SYSTEM_NAME STREQUAL Windows); list(APPEND SOURCE_FILES ${SRC_ROOT}/system/FileMonitor_windows.cpp); endif(). if (SOFA_TRACY); list(APPEND HEADER_FILES ${SRC_ROOT}/logging/TracyMessageHandler.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/logging/TracyMessageHandler.cpp); endif(). sofa_find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Type REQUIRED); sofa_find_package(Sofa.Topology REQUIRED). # LIBRARY; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directorie,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:5787,Rout,RoutingMessageHandler,5787,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['Rout'],['RoutingMessageHandler']
Integrability,T}/system/FileSystem.h; ${SRC_ROOT}/system/Locale.h; ${SRC_ROOT}/system/PipeProcess.h; ${SRC_ROOT}/system/PluginManager.h; ${SRC_ROOT}/system/SetDirectory.h; ${SRC_ROOT}/system/console.h; ${SRC_ROOT}/system/console_internal.h; ${SRC_ROOT}/system/thread/CTime.h; ${SRC_ROOT}/system/thread/CircularQueue.h; ${SRC_ROOT}/system/thread/CircularQueue.inl; ${SRC_ROOT}/system/thread/debug.h; ${SRC_ROOT}/system/thread/thread_specific_ptr.h; ${SRC_ROOT}/system/FileMonitor.h; ${SRC_ROOT}/system/FileRepository.h; ${SRC_ROOT}/logging/Messaging.h; ${SRC_ROOT}/logging/Message.h; ${SRC_ROOT}/logging/ComponentInfo.h; ${SRC_ROOT}/logging/FileInfo.h; ${SRC_ROOT}/logging/MessageDispatcher.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/ConsoleMessageHandler.h; ${SRC_ROOT}/logging/SilentMessageHandler.h; ${SRC_ROOT}/logging/FileMessageHandler.h; ${SRC_ROOT}/logging/CountingMessageHandler.h; ${SRC_ROOT}/logging/LoggingMessageHandler.h; ${SRC_ROOT}/logging/RoutingMessageHandler.h; ${SRC_ROOT}/logging/MessageHandler.h; ${SRC_ROOT}/logging/MessageFormatter.h; ${SRC_ROOT}/logging/ClangMessageHandler.h; ${SRC_ROOT}/logging/ClangStyleMessageFormatter.h; ${SRC_ROOT}/logging/DefaultStyleMessageFormatter.h; ${SRC_ROOT}/logging/ExceptionMessageHandler.h; ${SRC_ROOT}/messaging/FileMessage.h; ${SRC_ROOT}/visual/Transformation.h; ${SRC_ROOT}/visual/DrawTool.h; ${SRC_ROOT}/visual/Trackball.h; ); set(SOURCE_FILES; ${SRC_ROOT}/AdvancedTimer.cpp; ${SRC_ROOT}/BackTrace.cpp; ${SRC_ROOT}/ColorMap.cpp; ${SRC_ROOT}/ComponentChange.cpp; ${SRC_ROOT}/DiffLib.cpp; ${SRC_ROOT}/Factory.cpp; ${SRC_ROOT}/GenerateRigid.cpp; ${SRC_ROOT}/LCPcalc.cpp; ${SRC_ROOT}/MarchingCubeUtility.cpp; ${SRC_ROOT}/NameDecoder.cpp; ${SRC_ROOT}/OptionsGroup.cpp; ${SRC_ROOT}/ScopedAdvancedTimer.cpp; ${SRC_ROOT}/Polynomial_LD.cpp; ${SRC_ROOT}/RandomGenerator.cpp; ${SRC_ROOT}/StringUtils.cpp; ${SRC_ROOT}/TagFactory.cpp; ${SRC_ROOT}/TriangleOctree.cpp; ${SRC_ROOT}/Utils.cpp; ${SRC_ROOT}/decompose.cpp; ${SRC_ROOT}/init.cpp; ${SRC_R,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt:3343,Message,MessageHandler,3343,Sofa/framework/Helper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/CMakeLists.txt,1,['Message'],['MessageHandler']
Integrability,"T}/visual/VisualLoop.cpp; ${SRC_ROOT}/visual/VisualManager.cpp; ${SRC_ROOT}/visual/VisualModel.cpp; ${SRC_ROOT}/visual/VisualParams.cpp; ${SRC_ROOT}/visual/VisualState.cpp; ). sofa_find_package(Sofa.Topology REQUIRED); sofa_find_package(Sofa.Helper REQUIRED); sofa_find_package(Sofa.DefaultType REQUIRED). # to move to core ?; option(SOFA_CORE_ENABLE_CRSMULTIMATRIXACCESSOR ""Use CompressedRowSparseMatrix to store global matrix (caution: it will lead to compile CRSMultiMatrixAcessor, which takes a considerable time to compile)"" OFF); mark_as_advanced(FORCE SOFA_CORE_ENABLE_CRSMULTIMATRIXACCESSOR); if(SOFA_CORE_ENABLE_CRSMULTIMATRIXACCESSOR); list(APPEND HEADER_FILES ${SRC_ROOT}/behavior/CRSMultiMatrixAccessor.h); list(APPEND SOURCE_FILES ${SRC_ROOT}/behavior/CRSMultiMatrixAccessor.cpp); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.Topology Sofa.DefaultType). if(SOFA_BUILD_WITH_PCH_ENABLED); message(""Adding precompiled header for Sofa.Core""); target_precompile_headers(${PROJECT_NAME} PUBLIC ${SRC_ROOT}/objectmodel/BaseObject.h ${SRC_ROOT}/objectmodel/Data.h); endif(). if (NOT ""${CMAKE_CXX_COMPILER_ID}"" STREQUAL ""MSVC""); # Silence attribute warnings (for example, ignored already defined external template); target_compile_options(${PROJECT_NAME} PRIVATE -Wno-attributes); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Sofa.Framework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_CORE_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(SOFA_CORE_BUILD_TESTS); add_subdirectory(test); add_subdirectory(simutest); end",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt:13217,message,message,13217,Sofa/framework/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/CMakeLists.txt,1,['message'],['message']
Integrability,"VERSION_PATCH}""). ## Default build type; if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES); message(STATUS ""Setting build type to Release as none was specified.""); set(CMAKE_BUILD_TYPE ""Release"" CACHE STRING ""Build type"" FORCE); endif(). # Output Directories definition; set(ARCHIVE_OUTPUT_DIRECTORY lib); set(RUNTIME_OUTPUT_DIRECTORY bin); if(WIN32); set(LIBRARY_OUTPUT_DIRECTORY ${RUNTIME_OUTPUT_DIRECTORY}); else(); set(LIBRARY_OUTPUT_DIRECTORY ${ARCHIVE_OUTPUT_DIRECTORY}); endif(); ## Set the output directories globally; set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${ARCHIVE_OUTPUT_DIRECTORY}); set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${RUNTIME_OUTPUT_DIRECTORY}); set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${LIBRARY_OUTPUT_DIRECTORY}). # Option for packaging; option(SOFA_BUILD_RELEASE_PACKAGE ""Run package specific configure"" OFF). # Option to allow some dependencies such as cxxopts to be fetched by cmake if; # the package is not found; option(SOFA_ALLOW_FETCH_DEPENDENCIES ""Allow compatible dependencies to be fetched if the package is not found by cmake.; List of dependencies that can be fetched: cxxopts, gtest, metis, CImg"" ON). # Option to accelerate the compilation; # see https://cmake.org/cmake/help/v3.16/command/target_precompile_headers.html; # and https://cmake.org/cmake/help/v3.16/prop_tgt/DISABLE_PRECOMPILE_HEADERS.html. # https://cmake.org/cmake/help/latest/policy/CMP0127.html; if (${CMAKE_VERSION} VERSION_GREATER_EQUAL 3.22); cmake_policy(SET CMP0127 NEW); endif(); cmake_dependent_option(SOFA_BUILD_WITH_PCH_ENABLED ; ""Compile SOFA using precompiled header (to accelerate the build process)"" OFF; ""CMAKE_VERSION VERSION_GREATER_EQUAL 3.16"" OFF); if(SOFA_BUILD_WITH_PCH_ENABLED); message(""-- Precompiled headers: enabled (SOFA_BUILD_WITH_PCH_ENABLED is ON).""); else(); message(""-- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).""); set(DISABLE_PRECOMPILE_HEADERS ON); endif(). ## Change",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:1440,depend,dependencies,1440,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,2,['depend'],['dependencies']
Integrability,[GUI.Qt] Fix MSAA sampling setup [#3220](https://github.com/sofa-framework/sofa/pull/3220) ; - [DrawToolGL] Fix ill-formed drawLines with multiple colors [#3260](https://github.com/sofa-framework/sofa/pull/3260) ; - [SofaSphFluid] Fix required plugin in scenes [#3272](https://github.com/sofa-framework/sofa/pull/3272) ; - [SofaCarving] Fix bug in CarvingManager when searching for target collision model [#3276](https://github.com/sofa-framework/sofa/pull/3276) ; - [GUI/runSofa] Cmake: tweaks and fixes [#3323](https://github.com/sofa-framework/sofa/pull/3323) ; - [CImgPlugin] Replace new keyword with creating unique pointers to properly clean up allocated memory. [#3365](https://github.com/sofa-framework/sofa/pull/3365) ; - [SofaMatrix] Fix crash if init fails in FillReducingOrdering [#3366](https://github.com/sofa-framework/sofa/pull/3366) ; - [SofaDistanceGrid] Set invalid state if cannot load mesh [#3400](https://github.com/sofa-framework/sofa/pull/3400) ; - [SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt [#3423](https://github.com/sofa-framework/sofa/pull/3423) ; - [SofaNewmat] Fix modules [#3427](https://github.com/sofa-framework/sofa/pull/3427) ; - [plugins] Fix warnings in SofaSphFluid and image [#3439](https://github.com/sofa-framework/sofa/pull/3439) ; - [GUI.Qt] Restore QGLViewer for Qt6 [#3454](https://github.com/sofa-framework/sofa/pull/3454) ; - [GUI.Qt] Restore Stats (Charts) and DocBrowser for Qt6 [#3456](https://github.com/sofa-framework/sofa/pull/3456) ; - [Modeler] rename shadow variable [#3546](https://github.com/sofa-framework/sofa/pull/3546) ; - [GUI.Common] Cmake: Fix message when searching for Sofa.GL [#3549](https://github.com/sofa-framework/sofa/pull/3549) ; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid3D [#3557](https://github.com/sofa-framework/sofa/pull/3557); - [CollisionOBBCapsule] Fix generation of configuration file for installation [#3576](https://github.com/sofa-framework/sofa/pull/3576). **Examples /,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:82445,depend,dependency,82445,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,[SofaSimpleFem] Move duplicated code into a function [#2231]( https://github.com/sofa-framework/sofa/pull/2231 ); - [SofaSimpleFem] Remove branches based on type of matrix [#2323]( https://github.com/sofa-framework/sofa/pull/2323 ); - [SofaSparseSolver] Clean examples scenes of sparse linear solvers [#2422]( https://github.com/sofa-framework/sofa/pull/2422 ); - [SofaTopologyMapping] Fix shadowed variable #2158 [#2413]( https://github.com/sofa-framework/sofa/pull/2413 ); - [Tests] Update SceneCreator_test to inherit from BaseSimulationTest and remove some warnings [#2406]( https://github.com/sofa-framework/sofa/pull/2406 ). **Plugins / Projects**; - [Plugins] Move Newmat matters into the new SofaNewmat plugin [#2532]( https://github.com/sofa-framework/sofa/pull/2532 ); - [CImgPlugin] Minimize plugin dependencies [#2318]( https://github.com/sofa-framework/sofa/pull/2318 ); - [image] fix shadow variable #2432 [#2437]( https://github.com/sofa-framework/sofa/pull/2437 ); - [image] Remove useless DiffusionSolver dependency [#2308]( https://github.com/sofa-framework/sofa/pull/2308 ); - [image] Clean init members warning [#2536]( https://github.com/sofa-framework/sofa/pull/2536 ); - [SofaCUDA] reorder CMakeLists just for more clarity [#2534]( https://github.com/sofa-framework/sofa/pull/2534 ). **Examples / Scenes**; - [examples] Add handleDynamicTopology in OglModel with dynamic texcoords [#2445]( https://github.com/sofa-framework/sofa/pull/2445 ); - [examples] Clean linear solver scenes [#2494]( https://github.com/sofa-framework/sofa/pull/2494 ); - [examples] Limit GlobalSystemMatrixExporter.scn to 1 iteration [#2328]( https://github.com/sofa-framework/sofa/pull/2328 ); - [examples] Make scene resolution independent + doc [#2361]( https://github.com/sofa-framework/sofa/pull/2361 ); - [examples] add a warning comment in the scene header [#2470]( https://github.com/sofa-framework/sofa/pull/2470 ); - [scenes] Replace BruteForceDetection by BruteForceNarrowPhase+BVHNarrowPhase ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:163036,depend,dependency,163036,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,"_DIR ""${CMAKE_SOURCE_DIR}/share""); set(EXAMPLES_DIR ""${CMAKE_SOURCE_DIR}/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/sofa.ini""); set(SHARE_DIR ""../share/sofa""); set(EXAMPLES_DIR ""../share/sofa/examples""); configure_file(""etc/sofa.ini.in"" ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installedSofa.ini"" DESTINATION etc RENAME sofa.ini COMPONENT applications). set(SOFACONFIGSRC_ROOT ""src/sofa""); set(HEADER_FILES; ${SOFACONFIGSRC_ROOT}/config.h.in; ${SOFACONFIGSRC_ROOT}/version.h.in; ${SOFACONFIGSRC_ROOT}/url.h.in; ); set(SOURCE_FILES; ${SOFACONFIGSRC_ROOT}/initSofaConfig.cpp # necessary to build a library; ); set(SOFACONFIG_BUILD_OPTIONS_SRC; ${SOFACONFIGSRC_ROOT}/config/sharedlibrary_defines.h.in; ${SOFACONFIGSRC_ROOT}/config/build_option_dump_visitor.h.in; ${SOFACONFIGSRC_ROOT}/config/build_option_bbox.h.in; ). # Header-only library (not handled well by macros & stuff so commented); # add_library(${PROJECT_NAME} INTERFACE); # target_sources(${PROJECT_NAME} INTERFACE ""$<BUILD_INTERFACE:${HEADER_FILES};${SOFACONFIG_BUILD_OPTIONS_SRC}>""). # Library; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOFACONFIG_BUILD_OPTIONS_SRC} ${SOURCE_FILES}). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>""). if(CMAKE_SYSTEM_NAME STREQUAL Windows); target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(). # Compile options; # Set C++17; target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_17). set(SOFACONFIG_COMPILE_OPTIONS_DEBUG """"); set(SOFACONFIG_COMPILE_OPTIONS_RELEASE """"); set(SOFACONFIG_COMPILE_OPTIONS """"); set(SOFACONFIG_LINK_OPTIONS """"); set(SOFACONFIG_LINK_OPTIONS_DEBUG """"); set(SOFACONFIG_LINK_OPTIONS_RELEASE """"). ## Link-time optimization; if(NOT IPO_CHECK_DONE); include(CheckIPOSupported); check_ipo_supported(RESULT IS_IPO_SUPPORTED OUTPUT IPO_ERROR); set(IPO_CHECK_DONE ON CACHE INTERNAL ""IPO",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:4309,INTERFACE,INTERFACE,4309,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,2,['INTERFACE'],['INTERFACE']
Integrability,"_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/WinDepPack>""); endif(). # Compile options; # Set C++17; target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_17). set(SOFACONFIG_COMPILE_OPTIONS_DEBUG """"); set(SOFACONFIG_COMPILE_OPTIONS_RELEASE """"); set(SOFACONFIG_COMPILE_OPTIONS """"); set(SOFACONFIG_LINK_OPTIONS """"); set(SOFACONFIG_LINK_OPTIONS_DEBUG """"); set(SOFACONFIG_LINK_OPTIONS_RELEASE """"). ## Link-time optimization; if(NOT IPO_CHECK_DONE); include(CheckIPOSupported); check_ipo_supported(RESULT IS_IPO_SUPPORTED OUTPUT IPO_ERROR); set(IPO_CHECK_DONE ON CACHE INTERNAL ""IPO check has been done"" FORCE); if (IS_IPO_SUPPORTED); set(IPO_SUPPORTED ON CACHE INTERNAL ""IPO can be activated"" FORCE); else(); message(STATUS ""IPO / LTO not supported: <${IPO_ERROR}>""); endif(); endif(). if (IPO_SUPPORTED); # Focus on max speed with link-time optimization; option(SOFA_ENABLE_LINK_TIME_OPTIMIZATION ""Enable interprocedural optimization"" OFF); if (SOFA_ENABLE_LINK_TIME_OPTIMIZATION); set(CMAKE_INTERPROCEDURAL_OPTIMIZATION_RELEASE TRUE PARENT_SCOPE); endif(); else(); message(STATUS ""IPO / LTO not supported: <${IPO_ERROR}>""); endif(). ## GCC-specific; if(${CMAKE_CXX_COMPILER_ID} MATCHES ""GNU""); ## Find out the version of g++ (and save it in GCXX_VERSION); if(CMAKE_CXX_COMPILER_ARG1) # CXX=""ccache g++""; string(STRIP ${CMAKE_CXX_COMPILER_ARG1} CMAKE_CXX_COMPILER_ARG1_stripped); execute_process(COMMAND ${CMAKE_CXX_COMPILER_ARG1_stripped} -dumpversion OUTPUT_VARIABLE GCXX_VERSION); else(); execute_process(COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE GCXX_VERSION); endif(). ## Disable partial inlining under gcc 4.6 (Why? -> the memory was exploding); if(""${GCXX_VERSION}"" VERSION_EQUAL 4.6); list(APPEND SOFACONFIG_COMPILE_OPTIONS_RELEASE ""-fno-partial-inlining""); endif(). # stack-protector; list(APPEND SOFACONFIG_COMPILE_OPTIONS_RELEASE ""-fstack-protector;--param=ssp-buffer-size=4""); # _FORTIFY_SOURCE; list(APPEND SOFACONFIG_COMPILE_OPT",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:5806,message,message,5806,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['message'],['message']
Integrability,"_subdirectory(plugin SofaEulerianFluid SofaEulerianFluid); sofa_add_subdirectory(plugin SofaSphFluid SofaSphFluid EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SofaDistanceGrid SofaDistanceGrid) # Depends on SofaMiscCollision; sofa_add_subdirectory(plugin SofaImplicitField SofaImplicitField); sofa_add_subdirectory(plugin MultiThreading MultiThreading ON); sofa_add_subdirectory(plugin DiffusionSolver DiffusionSolver) # Depends on CImgPlugin; sofa_add_subdirectory(plugin image image) # Depends on CImgPlugin, DiffusionSolver, MultiThreading (soft); sofa_add_subdirectory(plugin SofaNewmat SofaNewmat). sofa_add_subdirectory(directory SofaPython3 SofaPython3 EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CGALPlugin CGALPlugin EXTERNAL GIT_REF v24.06) # Depends on image; sofa_add_subdirectory(plugin Registration Registration EXTERNAL GIT_REF v24.06) # Depends on image, SofaPython, SofaGui and SofaDistanceGrid; sofa_add_subdirectory(plugin BulletCollisionDetection BulletCollisionDetection) # Depends on Compliant and LMConstraint; sofa_add_subdirectory(plugin InvertibleFVM InvertibleFVM EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin MeshSTEPLoader MeshSTEPLoader EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin PluginExample PluginExample EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ManifoldTopologies ManifoldTopologies EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SixenseHydra SixenseHydra); sofa_add_subdirectory(plugin SofaOpenCL SofaOpenCL); sofa_add_subdirectory(plugin Xitact Xitact); sofa_add_subdirectory(plugin Haption Haption); sofa_add_subdirectory(plugin PersistentContact PersistentContact); sofa_add_subdirectory(plugin Sensable Sensable); sofa_add_subdirectory(plugin SensableEmulation SensableEmulation); sofa_add_subdirectory(plugin SofaHAPI SofaHAPI); sofa_add_subdirectory(plugin SofaCarving SofaCarving); sofa_add_subdirectory(plugin LeapMotion LeapMotion); sofa_add_subdirectory(plugin Geomagic Geomagic); sofa_add_su",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:1498,Depend,Depends,1498,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,2,['Depend'],['Depends']
Integrability,"a Standard Interface for which an; implementation is available to the public in source code form. A; ""Major Component"", in this context, means a major essential component; (kernel, window system, and so on) of the specific operating system; (if any) on which the executable work runs, or a compiler used to; produce the work, or an object code interpreter used to run it. The ""Corresponding Source"" for a work in object code form means all; the source code needed to generate, install, and (for an executable; work) run the object code and to modify the work, including scripts to; control those activities. However, it does not include the work's; System Libraries, or general-purpose tools or generally available free; programs which are used unmodified in performing those activities but; which are not part of the work. For example, Corresponding Source; includes interface definition files associated with source files for; the work, and the source code for shared libraries and dynamically; linked subprograms that the work is specifically designed to require,; such as by intimate data communication or control flow between those; subprograms and other parts of the work. The Corresponding Source need not include anything that users; can regenerate automatically from other parts of the Corresponding; Source. The Corresponding Source for a work in source code form is that; same work. 2. Basic Permissions. All rights granted under this License are granted for the term of; copyright on the Program, and are irrevocable provided the stated; conditions are met. This License explicitly affirms your unlimited; permission to run the unmodified Program. The output from running a; covered work is covered by this License only if the output, given its; content, constitutes a covered work. This License acknowledges your; rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not; convey, without conditions so long as you",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:25957,interface,interface,25957,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['interface'],['interface']
Integrability,"a/pull/4158); - [LinearSolver] Implement parallel inverse product for all linear solvers [#4255](https://github.com/sofa-framework/sofa/pull/4255). ### Breaking; - [Constraint.Lagrangian] Activate the export of lambda forces by default [#3857](https://github.com/sofa-framework/sofa/pull/3857); - [all] Change variable name supportOnlySymmetricMatrix in MParams [#3861](https://github.com/sofa-framework/sofa/pull/3861); - [all] Unify how Animation/Visual loops are handling their ""targetNode"" [#3945](https://github.com/sofa-framework/sofa/pull/3945); - [MechanicalLoad] Implement buildStiffnessMatrix for PlaneForceField [#3972](https://github.com/sofa-framework/sofa/pull/3972); - [AnimationLoop] Change the default constraint solver in FreeMotionAnimationLoop [#3994](https://github.com/sofa-framework/sofa/pull/3994); - [Spring] Implement buildStiffnessMatrix in PolynomialRestShapeSpringsForceField [#4009](https://github.com/sofa-framework/sofa/pull/4009); - [MechanicalLoad] Remove the data force in ConstantFF and solves circular dependency [#4019](https://github.com/sofa-framework/sofa/pull/4019); - [all] Lifecycle v23.12 1/n [#4034](https://github.com/sofa-framework/sofa/pull/4034); - [Core] Make doDrawVisual final [#4045](https://github.com/sofa-framework/sofa/pull/4045); - [Visual] ADD a visualization flag and draw method for NarrowPhaseDetection [#4048](https://github.com/sofa-framework/sofa/pull/4048); - [SolidMechanics.TensorMass] Implement buildStiffnessMatrix for TetrahedralTensorMassForceField [#4127](https://github.com/sofa-framework/sofa/pull/4127); - [BatchGUI] Show progress bar [#4168](https://github.com/sofa-framework/sofa/pull/4168); - [Constraint.Lagrangian.Solver] Another step to factorize both constraint solvers [#4213](https://github.com/sofa-framework/sofa/pull/4213); - [all] Replace tinyxml by external tinyxml2 [#4240](https://github.com/sofa-framework/sofa/pull/4240). ### Improvements; - [all] Add namespaces in the factory and a python-like import mec",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:23684,depend,dependency,23684,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,a::type namespace missing. [#2229]( https://github.com/sofa-framework/sofa/pull/2229 ); - [SofaGuiGlut] FIX compilation for v21.06 [#2274]( https://github.com/sofa-framework/sofa/pull/2274 ). ### Cleanings; **Modules**; - [All] Minor code cleaning [#2225]( https://github.com/sofa-framework/sofa/pull/2225 ). ____________________________________________________________. ## [v21.06.00]( https://github.com/sofa-framework/sofa/tree/v21.06.00 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.03...v21.06.00 ). ### SOFA-NG; **Architecture**; - [CMake] Macro replace dot with underscore for preprocessor defines [#1701]( https://github.com/sofa-framework/sofa/pull/1701 ). **Modules**; - **[Sofa.Type]** Remove stdtype subdirectory [#1946]( https://github.com/sofa-framework/sofa/pull/1946 ); - **[SofaBaseCollision]** Move OBB/Capsule-related intersections/detections/contacts to SofaMiscCollision [#2073]( https://github.com/sofa-framework/sofa/pull/2073 ); - **[SofaBaseCollision]** Remove dependencies on BaseIntTool [#2081]( https://github.com/sofa-framework/sofa/pull/2081 ); - **[SofaCore]** Clean dependencies to SimulationCore [#1928]( https://github.com/sofa-framework/sofa/pull/1928 ); - **[SofaFramework]** Create Sofa.Config module [#1674]( https://github.com/sofa-framework/sofa/pull/1674 ); - **[SofaFramework]** Create Sofa.Testing module [#1834]( https://github.com/sofa-framework/sofa/pull/1834 ); - **[SofaFramework]** Isolate OpenGL code into a single module (Sofa.GL) [#1649]( https://github.com/sofa-framework/sofa/pull/1649 ); - **[SofaFramework]** Rename modules (cmake) [#2001]( https://github.com/sofa-framework/sofa/pull/2001 ); - [SofaGui] Package SofaGui [#1719]( https://github.com/sofa-framework/sofa/pull/1719 ); - **[SofaHelper]** Clean dependencies to defaulttype [#1915]( https://github.com/sofa-framework/sofa/pull/1915 ); - **[SofaHelper]** Remove some SofaCore dependencies [#1810]( https://github.com/sofa-framework/sofa/pull/1810 ); - **[SofaKe,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:167656,depend,dependencies,167656,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,aGeneralMeshCollision] Introduce RayTraceNarrowPhase [#2145]( https://github.com/sofa-framework/sofa/pull/2145 ); - [SofaGuiCommon] Clean includes [#2064]( https://github.com/sofa-framework/sofa/pull/2064 ); - [SofaGuiQt] FIX warning in GraphListenerQListView [#2091]( https://github.com/sofa-framework/sofa/pull/2091 ); - **[SofaHelper]** Clarify with global namespace [#1953]( https://github.com/sofa-framework/sofa/pull/1953 ); - **[SofaHelper]** Moves operator>> specialisation for int from set.h to set.cpp [#1902]( https://github.com/sofa-framework/sofa/pull/1902 ); - **[SofaHelper]** Remove unused UnitTest class + clean FnDispatcher includes [#1983]( https://github.com/sofa-framework/sofa/pull/1983 ); - [SofaImplicitOdeSolver] Fix Latex format for doxygen [#2205]( https://github.com/sofa-framework/sofa/pull/2205 ); - **[SofaKernel]** Remove last template parameter in Visitor::for_each/for_each_r [#1689]( https://github.com/sofa-framework/sofa/pull/1689 ); - **[SofaKernel]** Remove some dependencies from SofaHelper to SofaCore [#1686]( https://github.com/sofa-framework/sofa/pull/1686 ); - **[SofaKernel]** Removes the method BaseData::getOwnerClass() [#1890]( https://github.com/sofa-framework/sofa/pull/1890 ); - **[SofaKernel][SofaGui]** Move Boost::program_option and remove Boost::system dependencies [#1848]( https://github.com/sofa-framework/sofa/pull/1848 ); - [SofaMiscCollision] Move back to modules (instead of applications/plugins) [#2127]( https://github.com/sofa-framework/sofa/pull/2127 ); - [SofaMiscMapping] Remove unused global variable [#1956]( https://github.com/sofa-framework/sofa/pull/1956 ); - [SofaNonUniformFem] Remove shadow variable [#1874]( https://github.com/sofa-framework/sofa/pull/1874 ); - **[SofaSimpleFem]** FIX wrong initialization order [#1938]( https://github.com/sofa-framework/sofa/pull/1938 ); - **[SofaSimulation\*]** Fix confusion between namespaces [#1959]( https://github.com/sofa-framework/sofa/pull/1959 ); - **[SofaSimulationCore]** Cle,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:203874,depend,dependencies,203874,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,"a_set_python_directory command [#137]( https://github.com/sofa-framework/sofa/pull/137 ); - use the cmake install DIRECTORY instead of FILES to preserve the files hierarchy when installing [#138]( https://github.com/sofa-framework/sofa/pull/138 ); - fixing issue related to parsing attributes with atof/atoi [#161]( https://github.com/sofa-framework/sofa/pull/161 ); - unify color datafield [#206]( https://github.com/sofa-framework/sofa/pull/206 ); - Fix CMakeLists bug on Sofa.ini and installedSofa.ini creation [#291]( https://github.com/sofa-framework/sofa/pull/291 ); - Fix a lot of failing tests (#271, #279); - Fix compilation with SOFA_FLOATING_POINT_TYPE as float [#262]( https://github.com/sofa-framework/sofa/pull/262 ); - CMake: Fix and clean boost, when using Sofa as an external lib [#421]( https://github.com/sofa-framework/sofa/pull/421 ); - [SofaKernel]; - Fix the Filemonitor_test random failure on MacOs [#143]( https://github.com/sofa-framework/sofa/pull/143 ); - implement a numerical integration for triangle [#249]( https://github.com/sofa-framework/sofa/pull/249 ); - add brace initializer to helper::vector class [#252]( https://github.com/sofa-framework/sofa/pull/252 ); - Activates thread-safetiness on MessageDispatcher. [#257]( https://github.com/sofa-framework/sofa/pull/257 ); - Fix getRelativePath() in DataFileName [#250]( https://github.com/sofa-framework/sofa/pull/250 ); - FileRepository::getRelativePath() lowering the case on WIN32 is now a deprecated behavior [#264]( https://github.com/sofa-framework/sofa/pull/264 ); - Fix FileRepository should not be optional [#122]( https://github.com/sofa-framework/sofa/pull/122 ); - FileMonitor: fix the recurrent problem with file 'SofaKernel/framework/framework_test/resources/existing.txt' pointed in Issue #146 [#258]( https://github.com/sofa-framework/sofa/pull/258 ); - Fix wrong inline in exported functions [#449]( https://github.com/sofa-framework/sofa/pull/449 ); - [SofaFramework]; - fix the integration schem",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:332094,integrat,integration,332094,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['integrat'],['integration']
Integrability,"ages.cpp; MeshToImageEngine.cpp; TransferFunction.cpp; VoronoiToMeshEngine.cpp; DepthMapToMeshEngine.cpp; ImageViewer.cpp; ); endif(). set(README_FILES; image.txt; ). if(SofaPython_FOUND); set(PYTHON_FILES; python/SofaImage/API.py; python/SofaImage/__init__.py; ); list(APPEND SOURCE_FILES python/Binding_ImageData.cpp); list(APPEND HEADER_FILES python/Binding_ImageData.h python/Binding_ImageData.inl). # Config files and install rules for pythons scripts; sofa_install_pythonscripts(PLUGIN_NAME ${PROJECT_NAME} PYTHONSCRIPTS_SOURCE_DIR ""python""); endif(). if(Sofa.GL_FOUND); if(FREENECT_FOUND); list(APPEND HEADER_FILES Kinect.h); list(APPEND SOURCE_FILES Kinect.cpp); message(STATUS ""image: found the freenect library""); else(); message(STATUS ""image: could not find the freenect library, won't build the Kinect component""); endif(); endif(). # OpenMP is bugged in image, forcing it to be single threaded for now; if(SOFA_OPENMP); message( WARNING ""image: deactivating OpenMP"" ); string(REPLACE ""${OpenMP_CXX_FLAGS}"" """" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS}); string(REPLACE ""${OpenMP_CXX_FLAGS}"" """" CMAKE_CXX_LINK_FLAGS ${CMAKE_CXX_LINK_FLAGS}); endif(). set(PLUGIN_IMAGE_COMPILE_SET_VALUE 0) # none; if(PLUGIN_IMAGE_COMPILE_SET STREQUAL ""standard""); set(PLUGIN_IMAGE_COMPILE_SET_VALUE 1); elseif(PLUGIN_IMAGE_COMPILE_SET STREQUAL ""full""); set(PLUGIN_IMAGE_COMPILE_SET_VALUE 2); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES} ${PYTHON_FILES}); target_compile_definitions(${PROJECT_NAME} PRIVATE ""-DSOFA_BUILD_IMAGE""); target_link_libraries(${PROJECT_NAME} Sofa.Core CImgPlugin Sofa.Component.Visual). if(Sofa.GL_FOUND); target_link_libraries(${PROJECT_NAME} Sofa.GL) ; endif(). if(FREENECT_FOUND); target_link_libraries(${PROJECT_NAME} freenect freenect_sync); target_include_directories(${PROJECT_NAME} PUBLIC ""${FREENECT_INCLUDE_DIR}""); endif(). if(ZLIB_FOUND); target_link_libraries(${PROJECT_NAME} ZLIB::ZLIB); if(CMAKE_SYSTEM_NAME STREQUAL Windows);",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/CMakeLists.txt:2639,message,message,2639,applications/plugins/image/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/image/CMakeLists.txt,1,['message'],['message']
Integrability,"alAnimationLoop] Improvement on MMMapper [#772]( https://github.com/sofa-framework/sofa/pull/772 ); - **[SofaHelper]** EDIT FileSystem and FileRepository for regression tests [#830]( https://github.com/sofa-framework/sofa/pull/830 ); - **[SofaKernel]** Improve Displayflags [#671]( https://github.com/sofa-framework/sofa/pull/671 ); - **[SofaKernel]** Add a ""sofa_add_module"" in SofaMacro.cmake [#732]( https://github.com/sofa-framework/sofa/pull/732 ); - **[SofaKernel]** use string in base object description [#862]( https://github.com/sofa-framework/sofa/pull/862 ); - [SofaMeshCollision] TriangleModel optimization when topology changes occur [#839]( https://github.com/sofa-framework/sofa/pull/839 ); - [SofaSparseSolver] ADD saveMatrixToFile to SparseLDLSolver [#845]( https://github.com/sofa-framework/sofa/pull/845 ); - [SofaTest] ADD a PrintTo method so test failure shows human readable informations. [#730]( https://github.com/sofa-framework/sofa/pull/730 ); - [VisualModel] Improve the messages when loading mesh inside VisualModel [#778]( https://github.com/sofa-framework/sofa/pull/778 ); - [WriteState] minor fix with the time attribute, default values [#776]( https://github.com/sofa-framework/sofa/pull/776 ). **Plugins / Projects**; - [Geomagic] ADD an inputForceFeedback data in Geomagic [#648]( https://github.com/sofa-framework/sofa/pull/648 ); - [Geomagic] Fix dll export and some enhancements [#786]( https://github.com/sofa-framework/sofa/pull/786 ); - [MultiThreading] removed the boost thread dependency [#701]( https://github.com/sofa-framework/sofa/pull/701 ); - [MultiThreading] New components and Task scheduler classes refactoring [#745]( https://github.com/sofa-framework/sofa/pull/745 ); - [MultiThreading] Add Image plugin Data types in DataExchange component [#770]( https://github.com/sofa-framework/sofa/pull/770 ); - [MultiThreading] TaskScheduler Interface [#775]( https://github.com/sofa-framework/sofa/pull/775 ); - [runSofa] Add data field value change on mou",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:281403,message,messages,281403,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['messages']
Integrability,"all] Add PenalityContact vector Data display [#4637](https://github.com/sofa-framework/sofa/pull/4637); - [GUI.Component] Add virtualization for attachment performer [#4638](https://github.com/sofa-framework/sofa/pull/4638); - [GUI.Qt] Some cleaning in qt RealGui [#4641](https://github.com/sofa-framework/sofa/pull/4641); - [FEM.HyperElastic] Convert string Data to OptionsGroup [#4651](https://github.com/sofa-framework/sofa/pull/4651); - [AnimationLoop] Remove duplicated Constraint Visitors [#4715](https://github.com/sofa-framework/sofa/pull/4715). ### Improvements. - [Lagrangian.Correction] Add callbacks to check zero compliance [#4205](https://github.com/sofa-framework/sofa/pull/4205); - [SolidMechanics.Spring] Implement buildStiffnessMatrix for TriangularBendingSprings [#4295](https://github.com/sofa-framework/sofa/pull/4295); - [SolidMechanics] Implement buildStiffnessMatrix for PolynomialSpringsFF [#4301](https://github.com/sofa-framework/sofa/pull/4301); - [Config] CMake: support interface-type target for install macro [#4356](https://github.com/sofa-framework/sofa/pull/4356); - [Core] BaseMapping: link mapConstraints to the ""meta-alias"" isMechanical [#4360](https://github.com/sofa-framework/sofa/pull/4360); - [github] Add new action checking PR age [#4386](https://github.com/sofa-framework/sofa/pull/4386); - [Topology.Mapping] Edge2QuadTopologicalMapping: use States directly [#4388](https://github.com/sofa-framework/sofa/pull/4388); - [README] Minor update badges [#4417](https://github.com/sofa-framework/sofa/pull/4417); - [StateContainer] Accelerate copy of MatrixDeriv for CRS matrices [#4443](https://github.com/sofa-framework/sofa/pull/4443); - [GitHub] Add new actions to connect GitHub and Discord [#4445](https://github.com/sofa-framework/sofa/pull/4445); - [All] Display reference name when pulling external plugins [#4507](https://github.com/sofa-framework/sofa/pull/4507); - [Config] Add TSAN option [#4534](https://github.com/sofa-framework/sofa/pull/4534); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:3567,interface,interface-type,3567,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['interface'],['interface-type']
Integrability,"and rename it, for example,; MyPlugin; Open a command line tool in the MyPlugin directory and use the; script utils/changeClassName.sh ; to replace SofaHAPI; with MyPlugin in all; the file; names and their content:; utils/changeClassName.sh SofaHAPI MyPlugin; cd examples; ../utils/changeClassName.sh SofaHAPI MyPlugin; cd ../doc/; ../utils/changeClassName.sh SofaHAPI MyPlugin. At this point, you may want to add the plugin directory to svn.; You can also reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_SofaHAPI ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_SofaHAPI); {; usePlugin(SofaHAPI) } . if your plugin depends on other plugins, edit file SofaHAPI-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. SofaHAPI.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initSofaHAPI.h. a template of user documentation is found in SofaHAPI.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the examples are in examples/; . The first one is SofaHAPI.scn, and when; runSOFA; opens it, an html page pops; up, with a link to the plugin documentation. Intellectual; property and rights. Authors. You. Contact. You@your.institute. License. Your can distribute this plugin; under; the same license as the core of SOFA, or any other lice",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/doc/index.html:1445,depend,dependencies,1445,applications/plugins/SofaHAPI/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaHAPI/doc/index.html,1,['depend'],['dependencies']
Integrability,"arning & commented code. [#3044]( https://github.com/sofa-framework/sofa/pull/3044 ); - [All] Update the code to remove some deprecation warnings [#2529]( https://github.com/sofa-framework/sofa/pull/2529 ); - [Collision.Geometry] Remove unnecessary *_API in template class definition [#3022]( https://github.com/sofa-framework/sofa/pull/3022 ); - [Collision.Response.Mapper] Missing override keyword [#3083]( https://github.com/sofa-framework/sofa/pull/3083 ); - [Component] All modules have a version [#2948]( https://github.com/sofa-framework/sofa/pull/2948 ); - [Components.Engine.Transform] remove shadow variable in ROIValueMapper [#2987]( https://github.com/sofa-framework/sofa/pull/2987 ); - [Config] Remove unused option SOFA_WITH_DEPRECATED_COMPONENTS [#3172]( https://github.com/sofa-framework/sofa/pull/3172 ); - [Constraint.Lagrangian.Solver] Convert double to SReal [#2922]( https://github.com/sofa-framework/sofa/pull/2922 ); - [Core.Topology] Fix info message when Topology given to topologyHandler is not dynamic [#3142]( https://github.com/sofa-framework/sofa/pull/3142 ); - [Core.Topology] Remove array quadsInHexahedronArray, QuadsOrientationInHexahedronArray should be used [#2995]( https://github.com/sofa-framework/sofa/pull/2995 ); - [Core] Extract BaseLinearSolver class into its own files [#2938]( https://github.com/sofa-framework/sofa/pull/2938 ); - [DefaultType] Prevent division by zero [#2929]( https://github.com/sofa-framework/sofa/pull/2929 ); - [FEM.Elastic] Fix typo on Poisson's ratio [#2911]( https://github.com/sofa-framework/sofa/pull/2911 ); - [FEM.Elastic] Minor changes in TetraXX FEM at init and to be able to access Data [#2845]( https://github.com/sofa-framework/sofa/pull/2845 ); - [FEM.Elastic] Simplify addkToMatrix in TriangularFEMForceFieldOptim [#2861]( https://github.com/sofa-framework/sofa/pull/2861 ); - [FEM.HyperElastic] Remove optimization based on type of matrix in StandardTetrahedralFEMForceField [#2858]( https://github.com/sofa-framework/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:121493,message,message,121493,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"asic size verifications (could be performed in debug); - [Flexible]; - add support for shapefunction viewer; - new feature of strain smoothing; - improve readme file; - [Compliant]; - simulation unit: convert gravity, dt; - MaskMapping: every input are now mapped; - add LinearDiagonalCompliance component; - fix use of VLA in python mappings; - improve readme file. ### Bug Fixes. - fix ConstantForceField::updateForceMask(); - fix ObjExporter memory leak; - [SofaOpenGLVisual] OglTexture: fix possible memory leaks; - [Compliant]; - clean python. ### Cleanings. - clean the compilation when SOFA_NO_OPENGL flag is activated; - clean the config.h (SOFAGUI_HAVE_QWT); - remove boost library links (includes still required). boost chrono is not required anymore.; - remove unused POINT_DATA_VECTOR_ACCESS macro; - make miniflowVR build optional (default OFF); - [SofaKernel]; - remove last direct opengl calls in modules; - add deprecation message on MechanicalObject attributes; - [SofaBaseVisual] clean BaseCamera: remove direct opengl calls; - [SofaHaptics] boost-thread is not used any more, clean cmake; - [SofaGeneralLoader] STLLoader: fixing binary loading in debug and cleaning examples; - [SofaPython]; - remove ScriptEnvironment i.e. automatic initialization of Node; - Node::isInitialized(), not used anymore; - [Flexible]; - clean relativeStrainMapping. ### Moved files. - move CImg from extlibs to image plugin extlibs. ### Documentation. - Add the contribution and guidelines : **CONTRIBUTING.md** and **GUIDELINES.md**; - Add the configuration required (ex: C++, compiler versions); - Add a page to use SOFA in Matlab; - Improve Logger documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/s",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:340123,message,message,340123,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"atch file names [#1872]( https://github.com/sofa-framework/sofa/pull/1872 ); - **[SofaBaseTopology]** Secure All Topology modifiers API [#1859]( https://github.com/sofa-framework/sofa/pull/1859 ); - **[SofaBaseTopology]** Secure PointSetTopologyModifier API [#1858]( https://github.com/sofa-framework/sofa/pull/1858 ); - **[SofaBaseTopology]** Totally remove topologyEngine and move mechanism only in TopologyData and TopologyHandler [#1898]( https://github.com/sofa-framework/sofa/pull/1898 ); - **[SofaCore]** Base::findLinkDest returns Base* instead of void* [#1700]( https://github.com/sofa-framework/sofa/pull/1700 ); - **[SofaCore]** FIX SingleLink clear/set behavior [#1749]( https://github.com/sofa-framework/sofa/pull/1749 ); - **[SofaCore]** Move definition of Link::updateLinks to BaseLink.h [#1735]( https://github.com/sofa-framework/sofa/pull/1735 ); - **[SofaCore]** Moves MechanicaMatrix out of MultiMatrix.h [#1870]( https://github.com/sofa-framework/sofa/pull/1870 ); - **[SofaCore]** Remove ""depend"" from Node [#1763]( https://github.com/sofa-framework/sofa/pull/1763 ); - **[SofaCore]** isDiagonal is const [#1903]( https://github.com/sofa-framework/sofa/pull/1903 ); - [SofaExplicitOdeSolver] Introduce visitor to know the number of non-diagonal mass matrices [#2165]( https://github.com/sofa-framework/sofa/pull/2165 ); - [SofaGeneralSimpleFem] Remove \*Containers [#2099]( https://github.com/sofa-framework/sofa/pull/2099 ); - **[SofaHelper]** Add two search paths for every prefixes of the plugin manager [#1824]( https://github.com/sofa-framework/sofa/pull/1824 ); - **[SofaHelper]** Move polygon cube intersection ad-hoc algorithm to SofaBaseTopology [#1772]( https://github.com/sofa-framework/sofa/pull/1772 ); - **[SofaHelper]** Remove SofaSimulationCore dependency from AdvancedTimer [#1770]( https://github.com/sofa-framework/sofa/pull/1770 ); - **[SofaHelper]** Replace boost::shared_ptr for std::shared_ptr [#1901]( https://github.com/sofa-framework/sofa/pull/1901 ); -",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:173959,depend,depend,173959,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['depend']
Integrability,ate [#1733]( https://github.com/sofa-framework/sofa/pull/1733 ); - [SofaGeneralMeshCollision] Direct SAP is written as a narrow phase [#2030]( https://github.com/sofa-framework/sofa/pull/2030 ); - [SofaGuiQt] Add new about window UI and url redirect [#1801]( https://github.com/sofa-framework/sofa/pull/1801 ); - [SofaGuiQt] Qt6 support [#1756]( https://github.com/sofa-framework/sofa/pull/1756 ); - [SofaGuiQt] Tooltips [#2139]( https://github.com/sofa-framework/sofa/pull/2139 ); - [SofaGui] Improve background v20.12 [#1758]( https://github.com/sofa-framework/sofa/pull/1758 ); - **[SofaHelper]** Optimize use of map_ptr_stable_compare [#2105]( https://github.com/sofa-framework/sofa/pull/2105 ); - **[SofaHelper][SofaPython]** ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ); - [SofaImplicitOdeSolver] Rewrite of the static Newton-Raphson ODE solver [#2050]( https://github.com/sofa-framework/sofa/pull/2050 ); - **[SofaKernel]** Write template list in error message [#2207]( https://github.com/sofa-framework/sofa/pull/2207 ); - [SofaMiscFem] Proposal of FEM force field for Reissner-Mindlin Flat Shell Element [#1745]( https://github.com/sofa-framework/sofa/pull/1745 ); - [SofaMiscTopology] Add component TopologyChecker [#1594]( https://github.com/sofa-framework/sofa/pull/1594 ); - [SofaOpenglVisual] Add transparency when we draw triangles (this allows to see inside the volume). [#1742]( https://github.com/sofa-framework/sofa/pull/1742 ); - **[SofaSimulationCore]** Add option to call ODE::solve in parallel in SolveVisitor [#2135]( https://github.com/sofa-framework/sofa/pull/2135 ); - **[SofaSimulationCore]** Launch a new event when textures have been initialized. [#1832]( https://github.com/sofa-framework/sofa/pull/1832 ). **Plugins / Projects**; - [MultiThreading] Parallel BVH narrow phase [#2053]( https://github.com/sofa-framework/sofa/pull/2053 ); - [MultiThreading] Parallel brute force broad phase [#2038]( https,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:179269,message,message,179269,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"ator: CMake 3.1 or higher.; - Compiler: GCC 4.8 or higher, Clang 3.4 or higher, Microsoft Visual C++ 2013 or higher. ### New features for users. - new Geomagic plugin: supporting latest versions of force feedback interfaces from Geomagic; - add ForceMaskOff, a component to locally (in a branch of the scene graph) cancel the force mask; - live-coding for python; - live-coding for GLSL; - new component MakeAlias; - new component MakeDataAlias; - improved error message & console rendering. ### New features for developpers. - Preliminary Markdown support in the msg_* API. You can now write much better formatting & alignement as well as adding URL to documentations related to the error.; - class RichStyleConsoleFormatter which interprete the markdowns in the message and format this to a resizable console with nice alignement.; - class CountingMessageHandler (count the number of message for each message type); - class RoutingMessageHandler (to implement context specific routing of the messages to different handler); - class ExpectMessage and MessageAsATestFailure can be used to check that a component did or didn't send a message and generate a test failure.; - FileMonitor is now implemented on MacOS & Windows (for live-coding features, for example); - RequiredPlugin: modified API to take a list of plugins to load; - Implements the move semantics on sofa::helper::vector. ### Improvements. - **372 new tests**: DAGNode, MeshObj, DiagonalMass, BoxROI, ComplementaryROI, DifferenceEngine, BilateralInteractionConstraint, Quaternion, ImagePNG, etc.; - 184/480 components have an associated example; - [SofaKernel]; - replace raw pointers with a smart ones; - add a ComponentState attribute to BaseObject; - BaseData::typeName is now public: useful to debug; - implement DataTrackerEngine, a kind of DataEngine but that is not a BaseObject; - fix SVector<std::string>. The string serialization changed; - [SofaRigid]; - in case jetJs is called several times per step; - [SofaGeneralLoader];",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:337633,message,message,337633,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,7,"['Message', 'Rout', 'message', 'rout']","['MessageAsATestFailure', 'RoutingMessageHandler', 'message', 'messages', 'routing']"
Integrability,b.com/sofa-framework/sofa/pull/1424 ); - [SofaHeadlessRecorder] Update headless recorder to use the new ffmpeg recorder [#1396]( https://github.com/sofa-framework/sofa/pull/1396 ); - **[SofaHelper]** AdvancedTimer wasn't using the good timer ids for the label assignments [#1244]( https://github.com/sofa-framework/sofa/pull/1244 ); - **[SofaHelper]** Fix unloading with PluginManager [#1274]( https://github.com/sofa-framework/sofa/pull/1274 ); - **[SofaHelper]** Fix fixed_array compilation with VS2019 [#1426]( https://github.com/sofa-framework/sofa/pull/1426 ); - **[SofaKernel]** Fix hexahedra detection in BoxROI [#1417]( https://github.com/sofa-framework/sofa/pull/1417 ); - **[SofaKernel]** Fix minor bug in BoxROI and add warning message in RestShapeSpringsForceField [#1391]( https://github.com/sofa-framework/sofa/pull/1391 ); - **[SofaKernel]** Fixes a bug where the camera was not moving with the Qt viewer [#1377]( https://github.com/sofa-framework/sofa/pull/1377 ); - **[SofaKernel]** Improve error message when a component cannot be created. [#1332]( https://github.com/sofa-framework/sofa/pull/1332 ); - **[SofaKernel]** Remove the installation of external system libraries [#1387]( https://github.com/sofa-framework/sofa/pull/1387 ); - **[SofaKernel]** Set default visibility to SOFA_EXPORT_DYNAMIC_LIBRARY [#1410]( https://github.com/sofa-framework/sofa/pull/1410 ); - [SofaMiscTopology] Fix bug in TopologicalChangeProcessor [#1247]( https://github.com/sofa-framework/sofa/pull/1247 ); - **[SofaSimpleFem]** Small Fix [#1403]( https://github.com/sofa-framework/sofa/pull/1403 ); - **[SofaSimulationCore]** FIX resizing of bboxes in UpdateBoundingBoxVisitor [#1268]( https://github.com/sofa-framework/sofa/pull/1268 ); - [SofaTopologyMapping] Fix Tetra2TriangleTopologicalMapping [#1319]( https://github.com/sofa-framework/sofa/pull/1319 ). **Plugins / Projects**; - [Geomagic] Fix several wrong behaviors in driver code [#1378]( https://github.com/sofa-framework/sofa/pull/1378 ); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:236262,message,message,236262,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,b.com/sofa-framework/sofa/pull/4307); - [SofaCUDA] FIX compilation SofaCUDA along with SparseGrid with Cuda12 [#4319](https://github.com/sofa-framework/sofa/pull/4319); - [SofaAssimp] Fix the FindAssimp.cmake [#4326](https://github.com/sofa-framework/sofa/pull/4326); - [image] image_gui to compile with Qt6 [#4330](https://github.com/sofa-framework/sofa/pull/4330); - [Haption] Partially fix the plugin [#4338](https://github.com/sofa-framework/sofa/pull/4338); - [github] quick fix for GHD script [#4347](https://github.com/sofa-framework/sofa/pull/4347); - [github] fix stale action [#4348](https://github.com/sofa-framework/sofa/pull/4348); - [GUI] Fix compilation using QDocBrowser [#4354](https://github.com/sofa-framework/sofa/pull/4354); - [VolumetricRendering] Fix the compilation [#4398](https://github.com/sofa-framework/sofa/pull/4398); - [VolumetricRendering] Fix crashes in batch mode [#4436](https://github.com/sofa-framework/sofa/pull/4436); - [LinearSolver.Direct] Fix metis dependency [#4450](https://github.com/sofa-framework/sofa/pull/4450); - [Simulation.Common] Fix tinyXML2 install for windows [#4525](https://github.com/sofa-framework/sofa/pull/4525); - [all] Install FindTinyXML2 [#4545](https://github.com/sofa-framework/sofa/pull/4545); - [cmake] Remove error in Findcxxopt [#4554](https://github.com/sofa-framework/sofa/pull/4554); - [GUI.qt] Set link to tinyxml2 to PRIVATE and fix config file [#4558](https://github.com/sofa-framework/sofa/pull/4558); - [Config] Fix findcxxopt when version is not specified [#4564](https://github.com/sofa-framework/sofa/pull/4564); - [Config] Fix Findmetis module when using config mode [#4570](https://github.com/sofa-framework/sofa/pull/4570); - [all] Fix tinyxml2 dependency [#4574](https://github.com/sofa-framework/sofa/pull/4574). ### Cleaning; - [plugins] Remove fetching of SofaPython [#3855](https://github.com/sofa-framework/sofa/pull/3855); - [Constraint.Lagrangian] Add messages when no compliance is given [#3858](https://,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:39280,depend,dependency,39280,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,"ber of effective processors on the computer""); if (SOFA_MSVC_NB_COMPILER_PROCESSES EQUAL ""0""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/MP""); else(); if (SOFA_MSVC_NB_COMPILER_PROCESSES MATCHES ""^[0-9]+$""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/MP${SOFA_MSVC_NB_COMPILER_PROCESSES}""); else(); message(FATAL_ERROR ""A number is expected for SOFA_MSVC_NB_COMPILER_PROCESSES""); endif(); endif(). list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/wd4250;/wd4251;/wd4275;/wd4675;/wd4661""); # 4661: no suitable definition provided for explicit template instantiation request; # it happens because we put explicit instantiation in a separate translation unit; # it is by design, so this warning is irrelevant in our project. if(MSVC_TOOLSET_VERSION GREATER 140) # > VS 2015; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/Zc:__cplusplus""); endif(). # Experimental: compilation with MSVC/Clang-cl; if(${CMAKE_CXX_COMPILER_ID} MATCHES ""Clang""); if( ${CMAKE_CXX_COMPILER_FRONTEND_VARIANT} STREQUAL MSVC) # something weird happens if we put the two test in one if ??; message(WARNING ""Experimental: you are trying to compile with MSVC and the clang-cl toolchain; this is not officially supported.""); # remove lots of warnings (the Wall of ""normal"" clang seems different of Wall of clang-cl); list(APPEND SOFACONFIG_COMPILE_OPTIONS -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-double-promotion -Wno-old-style-cast -Wno-reserved-id-macro -Wno-language-extension-token -Wno-dllexport-explicit-instantiation-decl -Wno-nonportable-system-include-path -Wno-zero-as-null-pointer-constant -Wno-documentation); # optimization flags (not sure if necessary..); list(APPEND SOFACONFIG_COMPILE_OPTIONS_RELEASE -march=native); if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/fp:fast""); endif(); endif(); endif(); endif(). # Mac specific; if(APPLE); #remove OpenGL deprecation message; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-DGL_SILENCE_DEPRECATION""); endif(). ## OpenMP; option(SOFA_OPENMP ""Compile Sofa with Op",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:8970,message,message,8970,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['message'],['message']
Integrability,buildStiffnessMatrix for StandardTetrahedralFEMForceField [#4110](https://github.com/sofa-framework/sofa/pull/4110); - [MechanicalLoad] Implement buildStiffnessMatrix for TorsionForceField [#4115](https://github.com/sofa-framework/sofa/pull/4115); - [Mass] Add a callback on the lumping data in MMMass [#4128](https://github.com/sofa-framework/sofa/pull/4128); - [Constraint.Lagrangian.Solver] GenericConstraintSolver: use given re-ordered list for unbuilt GS [#4132](https://github.com/sofa-framework/sofa/pull/4132); - [Core] Store default value in a Data [#4133](https://github.com/sofa-framework/sofa/pull/4133); - [all] Use SimulationInitDoneEvent instead of AnimateBeginEvent [#4160](https://github.com/sofa-framework/sofa/pull/4160); - [GitHub] filter action if not on sofa-framework repository [#4171](https://github.com/sofa-framework/sofa/pull/4171); - [LinearSystem] Assemble non-mapped and mapped matrices in parallel [#4172](https://github.com/sofa-framework/sofa/pull/4172); - [Config] Integrate Tracy profiler [#4182](https://github.com/sofa-framework/sofa/pull/4182); - [Config] CMake: Dont check for IPO at every configure step [#4191](https://github.com/sofa-framework/sofa/pull/4191); - [Constraint.Lagrangian.Solver] GenericConstraintSolver: avoid repeated allocation in loops [#4195](https://github.com/sofa-framework/sofa/pull/4195); - [LinearSolver.Direct] Better distribution of tasks among threads [#4220](https://github.com/sofa-framework/sofa/pull/4220); - [all] Add the folder sofa-launcher to the resources component [#4245](https://github.com/sofa-framework/sofa/pull/4245); - [MatrixAccumulator] adds 6x6 matrix handling [#4247](https://github.com/sofa-framework/sofa/pull/4247); - [LinearAlgebra] Speedup accumulation on BTDMatrix [#4248](https://github.com/sofa-framework/sofa/pull/4248); - [LinearAlgebra] Support 6x6 matrices accumulation in BaseMatrix [#4253](https://github.com/sofa-framework/sofa/pull/4253); - [example] Speedup TorusFall with parallel inverse pr,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:31520,Integrat,Integrate,31520,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Integrat'],['Integrate']
Integrability,"buted under the terms of; this Lesser General Public License (also called ""this License"").; Each licensee is addressed as ""you"". A ""library"" means a collection of software functions and/or data; prepared so as to be conveniently linked with application programs; (which use some of those functions and data) to form executables. The ""Library"", below, refers to any such software library or work; which has been distributed under these terms. A ""work based on the; Library"" means either the Library or any derivative work under; copyright law: that is to say, a work containing the Library or a; portion of it, either verbatim or with modifications and/or translated; straightforwardly into another language. (Hereinafter, translation is; included without limitation in the term ""modification"".). ""Source code"" for a work means the preferred form of the work for; making modifications to it. For a library, complete source code means; all the source code for all modules it contains, plus any associated; interface definition files, plus the scripts used to control compilation; and installation of the library. Activities other than copying, distribution and modification are not; covered by this License; they are outside its scope. The act of; running a program using the Library is not restricted, and output from; such a program is covered only if its contents constitute a work based; on the Library (independent of the use of the Library in a tool for; writing it). Whether that is true depends on what the Library does; and what the program that uses the Library does. 1. You may copy and distribute verbatim copies of the Library's; complete source code as you receive it, in any medium, provided that; you conspicuously and appropriately publish on each copy an; appropriate copyright notice and disclaimer of warranty; keep intact; all the notices that refer to this License and to the absence of any; warranty; and distribute a copy of this License along with the; Library. You may charge ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:7227,interface,interface,7227,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['interface'],['interface']
Integrability,"ce the position of a point (and force its velocity to zero value); void forcePointPosition( const unsigned int i, const sofa::helper::vector< double >& m_x);; ; /// src and dest must have the same size.; /// Performs: dest[i][j] += src[offset + i][j] 0<= i < src_entries 0<= j < 3 (for 3D objects) 0 <= j < 2 (for 2D objects); /// @param offset the offset in the BaseVector where the scalar values will be used. It will be updated to the first scalar value after the ones used by this operation when this method returns; virtual void addFromBaseVectorSameSize(core::VecId dest, const defaulttype::BaseVector* src, unsigned int &offset);; }; ``` ; More info about Doxygen here: https://www.stack.nl/~dimitri/doxygen/manual/index.html . ### Good practices; - [G1] You should try to use as few `#include` directive as possible.; - [G2] You should limit as much as possible the amount of code in included files (*.h, *.inl).; - [G3] All definitions should reside in source files. The header files should declare an interface only.; - [G4] Variables should be initialized when they are declared.; - [G5] You should use `const` profusely.; - [G6] You should use `assert` profusely.; - [G7] You must avoid the `using` directive in header files (.h and .inl): ~~`using namespace foo;`~~; - [G8] You should declare automatic variables only when you need them (not before).; - [G9] You must always initialize pointers, either to the address of something, or to `nullptr`; - [G10] You may use the type specifier `auto` (since C++11) when:; - you are in a for loop; - you deal with iterators; - you deal with long typenames AND or when the variable type is obvious. ## SOFA specific rules; - Tricky code should not be commented but rewritten! In general, the use of comments should be minimized by making the code self-documenting by appropriate name choices and an explicit logical structure.; - The use of magic numbers in the code should be avoided. Numbers other than 0 and 1 should be declared as named const",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:4704,interface,interface,4704,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,1,['interface'],['interface']
Integrability,"ces.; - adding SafeDistanceFromTargetMapping; - using the new SofaPython API; - SafeDistanceFromTargetMapping can now be ""safe"" by giving the edge directions when they are known; - adding the SofaCompliant python module (first module created outside of SofaPython!); - adding DotProductFromTargetMapping (with test); - adding RigidJointFromTargetMapping and RigidJointFromWorldFrameMapping; - add of complementary API to create deformable articulated systems; - adding NegativeUnilateralConstraint to guarantee negativeness; - adding PenaltyForceField and using it in penalty contact response; - add of two file from the SohusimDev plugin. - [image]; - API: Sampler.addMechanicalObject() more versatile; - API: refactor python API; - API: add addClosingVisual(); - add function in python API to retrieve perspective property; - MeshToImageEngine: move getValue out of for loops; - add a python ImagePlaneController; - Data<Image<T>> are now specifically bound in python; - remove pthread and X11 dependencies; - add metaimage tags that may be used to define orientation; - add python function to retrieve image type; - simpler imagePlane python controller; - add a createTransferFunction method; - improved cutplane texture resolution; - half perspective, half orthographic image transforms; - add imageCoordValuesFromPositions engine. ### Bug Fixes. - [PluginManager] crashed when a plugin was removed; - [SofaCUDA] fix the compilation using SofaCUDA on Windows; - unstable behavior of masks - USE-MASK variable added; - fix DAGNode traversal when a visitor is run from a node with a not up-to-date descendancy; - fix flaws in glText (memory leak and an other bug); - EigenBaseSparseMatrix: fix parallel matrix-vector product; - XML export. - Minor fix; - Sofa helper: leak when drawing 3d text; - compilation with SofaDumpVisitor flag enabled; - compilation of BezierTriangleSetGeometryAlgorithms (color changed from Vec3f to Vec4f); - runSofa: viewport aspect issue and loss of interaction in QtGLV",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:355558,depend,dependencies,355558,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,clude base class inl file [#3865](https://github.com/sofa-framework/sofa/pull/3865); - [SofaCUDA] No longer use deprecated texture references in HexaTLED [#3868](https://github.com/sofa-framework/sofa/pull/3868); - [SofaCUDA] Deprecated CudaTexture.h [#3869](https://github.com/sofa-framework/sofa/pull/3869); - [Config] Fix cross-compilation for embedded external libs [#3870](https://github.com/sofa-framework/sofa/pull/3870); - [all] Deprecate unused verbose data [#3871](https://github.com/sofa-framework/sofa/pull/3871); - [contact] Add missing call to super init [#3884](https://github.com/sofa-framework/sofa/pull/3884); - [examples] Fix unstable scene constantMomentum.scn [#3886](https://github.com/sofa-framework/sofa/pull/3886); - [SolidMechanics] Use accessors & make geometrical data required in BFF [#3887](https://github.com/sofa-framework/sofa/pull/3887); - [SofaCUDA] Replace deprecated vector types [#3902](https://github.com/sofa-framework/sofa/pull/3902); - [Helper] Improve text message for users in ComponentChange [#3913](https://github.com/sofa-framework/sofa/pull/3913); - [all] Minor clean of types [#3915](https://github.com/sofa-framework/sofa/pull/3915); - [examples] Remove example for MechanicalMatrixMapper [#3919](https://github.com/sofa-framework/sofa/pull/3919); - [MechanicalLoad] Replace doUpdateInternal by callback: ConstantFF [#3924](https://github.com/sofa-framework/sofa/pull/3924); - [FEM.Elastic] Implement buildStiffnessMatrix for FastTetrahedralCorotationalForceField [#3929](https://github.com/sofa-framework/sofa/pull/3929); - [all] Cosmetic: apply nested namespaces style [#3932](https://github.com/sofa-framework/sofa/pull/3932); - [Helper] Properly deprecate an already deprecated function [#3933](https://github.com/sofa-framework/sofa/pull/3933); - [all] Make local variables const [#3937](https://github.com/sofa-framework/sofa/pull/3937); - [Tests] Properly remove exported files [#3942](https://github.com/sofa-framework/sofa/pull/3942); - [all,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:41341,message,message,41341,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22). find_package(Sofa.Config REQUIRED). if(SOFA_BUILD_TESTS OR SOFA_BUILD_RELEASE_PACKAGE); # (Deprecated) Library used to write high level tests involving many components.; sofa_add_subdirectory(plugin SofaTest SofaTest); endif(). sofa_add_subdirectory(plugin CollisionOBBCapsule CollisionOBBCapsule). sofa_add_subdirectory(directory SofaHighOrder SofaHighOrder EXTERNAL GIT_REF v24.06). sofa_add_subdirectory(plugin CImgPlugin CImgPlugin) # ON by default and first as it is used by other plugins.; sofa_add_subdirectory(plugin ArticulatedSystemPlugin ArticulatedSystemPlugin ON); sofa_add_subdirectory(plugin SofaEulerianFluid SofaEulerianFluid); sofa_add_subdirectory(plugin SofaSphFluid SofaSphFluid EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SofaDistanceGrid SofaDistanceGrid) # Depends on SofaMiscCollision; sofa_add_subdirectory(plugin SofaImplicitField SofaImplicitField); sofa_add_subdirectory(plugin MultiThreading MultiThreading ON); sofa_add_subdirectory(plugin DiffusionSolver DiffusionSolver) # Depends on CImgPlugin; sofa_add_subdirectory(plugin image image) # Depends on CImgPlugin, DiffusionSolver, MultiThreading (soft); sofa_add_subdirectory(plugin SofaNewmat SofaNewmat). sofa_add_subdirectory(directory SofaPython3 SofaPython3 EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CGALPlugin CGALPlugin EXTERNAL GIT_REF v24.06) # Depends on image; sofa_add_subdirectory(plugin Registration Registration EXTERNAL GIT_REF v24.06) # Depends on image, SofaPython, SofaGui and SofaDistanceGrid; sofa_add_subdirectory(plugin BulletCollisionDetection BulletCollisionDetection) # Depends on Compliant and LMConstraint; sofa_add_subdirectory(plugin InvertibleFVM InvertibleFVM EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin MeshSTEPLoader MeshSTEPLoader EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin PluginExample PluginExample EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ManifoldTopologies ManifoldTopologies EXTE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:830,Depend,Depends,830,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,3,['Depend'],['Depends']
Integrability,"cmake_minimum_required(VERSION 3.22). message(FATAL_ERROR ""SofaSimulationCore module has been deprecated since v21.06 and has been removed since v22.06. Use Sofa.Simulation.Core instead.""); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaSimulationCore/CMakeLists.txt:38,message,message,38,applications/collections/deprecated/modules/SofaSimulationCore/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaSimulationCore/CMakeLists.txt,1,['message'],['message']
Integrability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.LinearSolver.Direct_test). set(SOURCE_FILES; SparseLDLSolver_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); # dependencies are managed directly in the target_link_libraries pass; target_link_libraries(${PROJECT_NAME} Sofa.Testing; Sofa.Component.LinearSolver.Direct; ); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Direct/tests/CMakeLists.txt:186,depend,dependencies,186,Sofa/Component/LinearSolver/Direct/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSolver/Direct/tests/CMakeLists.txt,1,['depend'],['dependencies']
Integrability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.LinearSystem_test). set(SOURCE_FILES; MatrixLinearSystem_test.cpp; MappingGraph_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); # dependencies are managed directly in the target_link_libraries pass; target_link_libraries(${PROJECT_NAME} Sofa.Testing; Sofa.Component.LinearSystem; Sofa.Component.StateContainer; Sofa.Component.Mapping.Linear; Sofa.Component.SolidMechanics.Spring; ); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSystem/tests/CMakeLists.txt:205,depend,dependencies,205,Sofa/Component/LinearSystem/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/LinearSystem/tests/CMakeLists.txt,1,['depend'],['dependencies']
Integrability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Component.ODESolver.Backward_test). set(SOURCE_FILES; EulerImplicitSolverDynamic_test.cpp; EulerImplicitSolverStatic_test.cpp; NewmarkImplicitSolverDynamic_test.cpp; StaticSolver_test.cpp; SpringSolverDynamic_test.cpp; VariationalSymplecticExplicitSolverDynamic_test.cpp; VariationalSymplecticImplicitSolverDynamic_test.cpp; ). add_definitions(""-DSOFACOMPONENTODESOLVERBACKWARD_TEST_SCENES_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/scenes\""""). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); # dependencies are managed directly in the target_link_libraries pass; target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.ODESolver.Testing Sofa.Component.ODESolver.Backward Sofa.Component.StateContainer); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Backward/tests/CMakeLists.txt:538,depend,dependencies,538,Sofa/Component/ODESolver/Backward/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Backward/tests/CMakeLists.txt,1,['depend'],['dependencies']
Integrability,cmake_minimum_required(VERSION 3.22). project(Sofa.Component.ODESolver.Forward_test). set(SOURCE_FILES; CentralDifferenceExplicitSolverDynamic_test.cpp; EulerExplicitSolverDynamic_test.cpp; RungeKutta2ExplicitSolverDynamic_test.cpp; RungeKutta4ExplicitSolverDynamic_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); # dependencies are managed directly in the target_link_libraries pass; target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.ODESolver.Testing Sofa.Component.ODESolver.Forward Sofa.Component.StateContainer); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Forward/tests/CMakeLists.txt:330,depend,dependencies,330,Sofa/Component/ODESolver/Forward/tests/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/ODESolver/Forward/tests/CMakeLists.txt,1,['depend'],['dependencies']
Integrability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Core_simutest). # Do not find dependencies explicitely, let CMake decide the appropriate time to do it; #sofa_find_package(SofaBase REQUIRED). set(SOURCE_FILES; objectmodel/Base_test.cpp; objectmodel/BaseContext_test.cpp; objectmodel/BaseLink_simutest.cpp; objectmodel/PathResolver_simutest.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Component.SceneUtility). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/simutest/CMakeLists.txt:81,depend,dependencies,81,Sofa/framework/Core/simutest/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Core/simutest/CMakeLists.txt,1,['depend'],['dependencies']
Integrability,"cmake_minimum_required(VERSION 3.22). project(Sofa.Helper_simutest). # Do not find dependencies explicitely, let CMake decide the appropriate time to do it; #sofa_find_package(SofaBase REQUIRED). set(SOURCE_FILES; AdvancedTimer_test.cpp; ). add_executable(${PROJECT_NAME} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Testing Sofa.Helper). add_test(NAME ${PROJECT_NAME} COMMAND ${PROJECT_NAME}); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/simutest/CMakeLists.txt:83,depend,dependencies,83,Sofa/framework/Helper/simutest/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Helper/simutest/CMakeLists.txt,1,['depend'],['dependencies']
Integrability,"cmake_minimum_required(VERSION 3.22). project(stylecheck.exe). if( CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR ); message(STATUS ""Stylecheck out-of-tree configuration""). if( NOT DEFINED LLVM_PATH ); message(FATAL_ERROR ""LLVM_PATH must be provided using -DLLVM_PATH=<path to llvm package root>""); endif(). link_directories(${LLVM_PATH}/lib); include_directories(${LLVM_PATH}/include). add_definitions(; -D__STDC_LIMIT_MACROS; -D__STDC_CONSTANT_MACROS; ). if( CMAKE_SYSTEM_NAME MATCHES ""Darwin"" ); set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -fvisibility-inlines-hidden""); endif(); else(); message(STATUS ""Stylecheck in-tree configuration""); endif(). add_executable(stylecheck.exe; stylecheck.cpp; utilsllvm.cpp; fileutils.cpp; ). if( MSVC ); # Disable warnings for Stylecheck; add_definitions(; -wd4722 # Suppress ''destructor'' : destructor never returns, potential memory leak; ). # Put project in solution folder; set_target_properties(stylecheck; PROPERTIES FOLDER ""Clang executables""; ); else(); # Disable RTTI to be compatible with LLVM/Clang libraries.; set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -std=c++11 -fno-rtti""); endif(). # Clang dependencies.; target_link_libraries(stylecheck.exe; clangTooling ; clangFrontend; clangSerialization; clangDriver; clangParse; clangSema; clangAnalysis; clangAST; clangBasic; clangEdit; clangLex; clangASTMatchers ; clang; ). # LLVM dependencies.; target_link_libraries(stylecheck.exe; #LLVMSupport; #LLVMTransformUtils; #LLVMMC # Object, Support; #LLVMMCParser # MC, Support; #LLVMObject # Support; #LLVMCore # Support; #LLVMBitReader; #LLVMScalarOpts; LLVMSupport; LLVMOption; ). # Platform dependencies.; if( WIN32 ); target_link_libraries(stylecheck.exe; shlwapi; ); else(); target_link_libraries(stylecheck.exe; pthread; dl; ncurses; z; ); endif(). install(TARGETS stylecheck.exe; RUNTIME DESTINATION bin); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/stylechecker/CMakeLists.txt:121,message,message,121,tools/stylechecker/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/tools/stylechecker/CMakeLists.txt,6,"['depend', 'message']","['dependencies', 'message']"
Integrability,"cmake_minimum_required(VERSION 3.22); project(CImgPlugin VERSION 0.1). set(HEADER_FILES; src/CImgPlugin/ImageCImg.h; src/CImgPlugin/CImgPlugin.h.in; src/CImgPlugin/SOFACImg.h; ). set(SOURCE_FILES; src/CImgPlugin/ImageCImg.cpp; src/CImgPlugin/initCImgPlugin.cpp; ). sofa_find_package(Sofa.Helper REQUIRED); sofa_find_package(Sofa.DefaultType REQUIRED). # add FindCImg.cmake; list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake); configure_file(${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindCImg.cmake ${CMAKE_BINARY_DIR}/lib/cmake/FindCImg.cmake COPYONLY); install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindCImg.cmake DESTINATION lib/cmake/${PROJECT_NAME} COMPONENT headers). sofa_find_package(CImg QUIET). if(NOT CImg_FOUND AND SOFA_ALLOW_FETCH_DEPENDENCIES); message(""CImgPlugin: DEPENDENCY CImg NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is ON, fetching CImg...""). include(FetchContent); FetchContent_Declare(CImg; GIT_REPOSITORY https://github.com/GreycLab/CImg; GIT_TAG v.3.3.2; ). FetchContent_GetProperties(CImg); if(NOT CImg_POPULATED); FetchContent_Populate(CImg). set(CIMG_H_DIR ${cimg_SOURCE_DIR}); sofa_find_package(CImg REQUIRED); endif(); elseif (NOT CImg_FOUND); message(FATAL_ERROR ""CImgPlugin: DEPENDENCY CImg NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install cimg-dev, or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). # OS X only: if the user installed its own JPEG/PNG lib (typically with homebrew/port),; # it will allow to use those instead of those present in XCode's frameworks; set(CMAKE_FIND_FRAMEWORK LAST). sofa_find_package(TIFF QUIET); sofa_find_package(ZSTD QUIET); sofa_find_package(JPEG QUIET); sofa_find_package(PNG QUIET); sofa_find_package(ZLIB QUIET). # Configure Paths according to detected packages; set(DEP_TARGETS """"); set(CIMG_CFLAGS -Dcimg_no_system_calls) # Remove CImg sys calls; if(TIFF_FOUND AND ( NOT(SOFA_BUILD_RELEASE_PACKAGE) OR ZSTD_FOUND)); message(STATUS ""CImgPlugin: TIFF Image Format ena",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt:766,message,message,766,applications/plugins/CImgPlugin/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt,2,"['DEPEND', 'message']","['DEPENDENCY', 'message']"
Integrability,"cmake_minimum_required(VERSION 3.22); project(DiffusionSolver VERSION 0.1). find_package(CImgPlugin REQUIRED). set(HEADER_FILES; config.h; DiffusionSolver.h; ). set(SOURCE_FILES; initDiffusionSolver.cpp; DiffusionSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). if(""${CMAKE_BUILD_TYPE}"" MATCHES ""^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$"") # no need for openmp in debug; find_package(OpenMP QUIET); if (OPENMP_FOUND); set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}""); if(WIN32); set(CMAKE_CXX_LINK_FLAGS ""${CMAKE_CXX_LINK_FLAGS} ${OpenMP_CXX_FLAGS}""); else(); target_link_libraries(${PROJECT_NAME} -lm ${OpenMP_CXX_FLAGS}); endif(); message(STATUS ""DiffusionSolver: forcing OpenMP""); else(); message(WARNING ""DiffusionSolver: your compiler does not implement OpenMP, it will be single-threaded and very inefficient...""); endif(). if(NOT WIN32); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-O3""); endif(); endif(). target_compile_options(${PROJECT_NAME} PRIVATE ""-DSOFA_BUILD_DIFFUSIONSOLVER""); target_link_libraries(${PROJECT_NAME} CImgPlugin). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/DiffusionSolver/CMakeLists.txt:672,message,message,672,applications/plugins/DiffusionSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/DiffusionSolver/CMakeLists.txt,2,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(Geomagic VERSION 0.1). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Controller REQUIRED); sofa_find_package(Sofa.Component.IO.Mesh REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.Mapping.NonLinear REQUIRED); sofa_find_package(Sofa.GL.Component.Rendering3D REQUIRED); sofa_find_package(Sofa.Component.Haptics REQUIRED). sofa_find_package(OpenHaptics QUIET); if( NOT OPENHAPTICS_FOUND ); message(WARNING ""OpenHaptics dependency not found, Geomagic will miss all haptic features.""); endif(). set(GEOMAGIC_SRC_DIR src/Geomagic). set(HEADER_FILES; ${GEOMAGIC_SRC_DIR}/config.h.in; ${GEOMAGIC_SRC_DIR}/GeomagicDriver.h; ${GEOMAGIC_SRC_DIR}/GeomagicEmulator.h; ${GEOMAGIC_SRC_DIR}/GeomagicVisualModel.h; ); set(SOURCE_FILES	 ; ${GEOMAGIC_SRC_DIR}/GeomagicDriver.cpp; ${GEOMAGIC_SRC_DIR}/GeomagicEmulator.cpp; ${GEOMAGIC_SRC_DIR}/GeomagicVisualModel.cpp; ${GEOMAGIC_SRC_DIR}/initPlugin.cpp; ); set(README_FILES README.txt). # Create the plugin library.; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}). # Link the plugin library to its dependencies (other libraries).; target_link_libraries(${PROJECT_NAME} Sofa.Component.Controller Sofa.Component.IO.Mesh Sofa.Component.StateContainer Sofa.Component.Mapping.NonLinear Sofa.Component.Haptics Sofa.GL.Component.Rendering3D); if(OPENHAPTICS_FOUND); target_link_libraries(${PROJECT_NAME} ${OPENHAPTICS_LIBRARIES}) ; target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${OPENHAPTICS_INCLUDE_DIR}>""); endif(). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Geomagic/CMakeLists.txt:511,message,message,511,applications/plugins/Geomagic/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/Geomagic/CMakeLists.txt,3,"['depend', 'message']","['dependencies', 'dependency', 'message']"
Integrability,"cmake_minimum_required(VERSION 3.22); project(Modeler). if(APPLE); set(RC_FILES ""../Modeler.icns""); else(); set(RC_FILES ""sofa.rc""); endif(). sofa_find_package(Qt5 COMPONENTS Core REQUIRED); sofa_find_package(SofaComponentAll REQUIRED). if(Qt5Core_FOUND); message(""Modeler executable: Using Qt5""); qt5_add_resources(RESOURCE_FILES ""${CMAKE_SOURCE_DIR}/share/textures/modeler/icons.qrc""); endif(). add_executable(${PROJECT_NAME} Main.cpp ${RC_FILES} ${RESOURCE_FILES}); target_link_libraries(${PROJECT_NAME} SofaModeler SofaComponentAll SofaSimulationGraph). sofa_install_targets(SofaModeler Modeler ""Modeler""); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/Modeler/exec/CMakeLists.txt:256,message,message,256,applications/projects/Modeler/exec/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/Modeler/exec/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SceneCreator VERSION 0.1). sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Eigen3 REQUIRED). set(HEADER_FILES; src/SceneCreator/config.h.in; src/SceneCreator/GetAssembledSizeVisitor.h; src/SceneCreator/GetVectorVisitor.h; src/SceneCreator/SceneCreator.h; src/SceneCreator/SceneUtils.h; ); set(SOURCE_FILES; src/SceneCreator/GetAssembledSizeVisitor.cpp; src/SceneCreator/GetVectorVisitor.cpp; src/SceneCreator/SceneCreator.cpp; src/SceneCreator/SceneUtils.cpp; src/SceneCreator/initSceneCreator.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Graph Sofa.SimpleApi Sofa.Component.StateContainer); target_link_libraries(${PROJECT_NAME} PUBLIC Eigen3::Eigen); target_compile_definitions(${PROJECT_NAME} PRIVATE ""-DSOFA_BUILD_SCENECREATOR""). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SceneCreator""; RELOCATABLE ""plugins""; ). ## Add example project to use sceneCreator; sofa_find_package(Sofa.GUI.Common QUIET); if(Sofa.GUI.Common_FOUND); add_subdirectory(sceneCreatorExamples); else(); message(STATUS ""${PROJECT_NAME}: Sofa.GUI.Common not found, sceneCreatorExamples will not be built.""); endif(). ## Add test project; if(SOFA_BUILD_TESTS); add_subdirectory(SceneCreator_test); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SceneCreator/CMakeLists.txt:1469,message,message,1469,applications/plugins/SceneCreator/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SceneCreator/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Component.SceneUtility LANGUAGES CXX). set(SOFACOMPONENTSCENEUTILITY_SOURCE_DIR ""src/sofa/component/sceneutility""). set(HEADER_FILES; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/config.h.in; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/init.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/AddResourceRepository.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/APIVersion.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/InfoComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeAliasComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeDataAliasComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MessageHandlerComponent.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimation.h; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimationOnEvent.h; ). set(SOURCE_FILES; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/init.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/AddResourceRepository.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/APIVersion.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/InfoComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeAliasComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MakeDataAliasComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/MessageHandlerComponent.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimation.cpp; ${SOFACOMPONENTSCENEUTILITY_SOURCE_DIR}/PauseAnimationOnEvent.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(SOFA_COMPONENT_SCENEUTILITY_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SceneUtility/CMakeLists.txt:630,Message,MessageHandlerComponent,630,Sofa/Component/SceneUtility/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/Component/SceneUtility/CMakeLists.txt,1,['Message'],['MessageHandlerComponent']
Integrability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Config LANGUAGES CXX). list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules""); list(APPEND CMAKE_PREFIX_PATH ""${CMAKE_BINARY_DIR}/lib/cmake""). include(SofaMacros). # Clear internal target list (set by the macro sofa_add_generic() ); set_property(GLOBAL PROPERTY __GlobalTargetList__ """"); set_property(GLOBAL PROPERTY __GlobalTargetNameList__ """"). # Help RELOCATABLE plugins to resolve their dependencies.; # See SofaMacrosInstall.cmake for usage of this property.; define_property(TARGET; PROPERTY ""RELOCATABLE_INSTALL_DIR""; BRIEF_DOCS ""Install directory of RELOCATABLE target""; FULL_DOCS ""Install directory of RELOCATABLE target""; ). # Enable the organisation in folders for generators that support; # it. (E.g. some versions of Visual Studio have 'solution folders'); set_property(GLOBAL PROPERTY USE_FOLDERS ON). ### Sofa using type double or float; set(SOFA_FLOATING_POINT_TYPE double CACHE STRING; ""Type used for floating point values in SOFA. It actually determines:; - what template instanciations will be compiled (via the definition of the; SOFA_FLOAT and SOFA_DOUBLE macros); - what is the type behind the 'SReal' typedef used throughout SOFA.""); set_property(CACHE SOFA_FLOATING_POINT_TYPE PROPERTY STRINGS float double). if(${SOFA_FLOATING_POINT_TYPE} STREQUAL double); set(SOFA_DOUBLE 1); set(SOFA_FLOAT 0); elseif(${SOFA_FLOATING_POINT_TYPE} STREQUAL float); set(SOFA_DOUBLE 0); set(SOFA_FLOAT 1); endif(). # If you really don't understand the negated logics of SOFA_DOUBLE and; # SOFA_FLOAT please consider using SOFA_WITH_FLOAT and SOFA_WITH_DOUBLE.; # Eg: SOFA_WITH_FLOAT indicate that you need to generate the; # float code and SOFA_WITH_DOUBLE indicates that you; # need to generate the double related code.; if(${SOFA_FLOATING_POINT_TYPE} STREQUAL float); set(SOFA_WITH_FLOAT 1); set(SOFA_WITH_DOUBLE 0); endif(); if(${SOFA_FLOATING_POINT_TYP",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:530,depend,dependencies,530,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['depend'],['dependencies']
Integrability,"cmake_minimum_required(VERSION 3.22); project(Sofa.GUI LANGUAGES CXX). set(SOFAGUI_SOURCE_DIR ""src/sofa/gui""). set(SOFAGUI_TARGETS); set(SOFAGUI_MISSINGTARGETS). sofa_add_subdirectory(module Component ${PROJECT_NAME}.Component ON); if(TARGET ${PROJECT_NAME}.Component); list(APPEND SOFAGUI_TARGETS ${PROJECT_NAME}.Component); else(); list(APPEND SOFAGUI_MISSINGTARGETS ${PROJECT_NAME}.Component); endif(). sofa_add_subdirectory(library Common ${PROJECT_NAME}.Common ON); if(TARGET ${PROJECT_NAME}.Common); list(APPEND SOFAGUI_TARGETS ${PROJECT_NAME}.Common); else(); list(APPEND SOFAGUI_MISSINGTARGETS ${PROJECT_NAME}.Common); endif(). set(SOFAGUI_DIRS Batch Qt); foreach(dir ${SOFAGUI_DIRS}); sofa_add_subdirectory(plugin ${dir} ${PROJECT_NAME}.${dir} ON); if(TARGET ${PROJECT_NAME}.${dir}); list(APPEND SOFAGUI_TARGETS ${PROJECT_NAME}.${dir}); else(); list(APPEND SOFAGUI_MISSINGTARGETS ${PROJECT_NAME}.${dir}); endif(); endforeach(). # HeadlessRecorder is still an ""optional"" dependency of Sofa.GUI; sofa_add_subdirectory(plugin HeadlessRecorder ${PROJECT_NAME}.HeadlessRecorder OFF); if(TARGET ${PROJECT_NAME}.HeadlessRecorder); list(APPEND SOFAGUI_TARGETS ${PROJECT_NAME}.HeadlessRecorder); set(SOFA_GUI_HAVE_SOFA_GUI_HEADLESSRECORDER 1); endif(). option(LIBRARY_SOFA_GUI ""Build the Sofa.Gui library."" ON). if(LIBRARY_SOFA_GUI); if(SOFAGUI_MISSINGTARGETS); message(""${PROJECT_NAME}: package and library will not be created because some dependencies are missing or disabled: ${SOFAGUI_MISSINGTARGETS}""); return(); endif(). set(HEADER_FILES; ${SOFAGUI_SOURCE_DIR}/config.h.in; ${SOFAGUI_SOURCE_DIR}/init.h; ); set(SOURCE_FILES; ${SOFAGUI_SOURCE_DIR}/init.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAGUI_TARGETS}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${P",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/CMakeLists.txt:979,depend,dependency,979,Sofa/GUI/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/CMakeLists.txt,1,['depend'],['dependency']
Integrability,"cmake_minimum_required(VERSION 3.22); project(Sofa.GUI.Common LANGUAGES CXX). find_package(cxxopts 3.1 QUIET); if(NOT cxxopts_FOUND AND SOFA_ALLOW_FETCH_DEPENDENCIES); message(""Sofa.GUI.Common: DEPENDENCY cxxopts NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is ON, fetching cxxopts...""). include(FetchContent); FetchContent_Declare(cxxopts; GIT_REPOSITORY https://github.com/jarro2783/cxxopts; GIT_TAG v3.1.1; ). FetchContent_GetProperties(cxxopts); if(NOT cxxopts_POPULATED); FetchContent_Populate(cxxopts). set(CXXOPTS_BUILD_EXAMPLES OFF CACHE INTERNAL """"); set(CXXOPTS_BUILD_TESTS OFF CACHE INTERNAL """"); set(CXXOPTS_ENABLE_INSTALL ON CACHE INTERNAL """"); message(""Sofa.GUI.Common: adding subdirectory ${cxxopts_SOURCE_DIR}""). add_subdirectory(${cxxopts_SOURCE_DIR} ${cxxopts_BINARY_DIR}); endif(); elseif (NOT cxxopts_FOUND); message(FATAL_ERROR ""Sofa.GUI.Common: DEPENDENCY cxxopts NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install libcxxopts-dev (version>=3.1.0), or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). set(SOFAGUICOMMON_ROOT src/sofa/gui/common). set(HEADER_FILES; ${SOFAGUICOMMON_ROOT}/config.h.in; ${SOFAGUICOMMON_ROOT}/init.h; ${SOFAGUICOMMON_ROOT}/BaseGUI.h; ${SOFAGUICOMMON_ROOT}/BaseViewer.h; ${SOFAGUICOMMON_ROOT}/ColourPickingVisitor.h; ${SOFAGUICOMMON_ROOT}/FilesRecentlyOpenedManager.h; ${SOFAGUICOMMON_ROOT}/GuiDataRepository.h; ${SOFAGUICOMMON_ROOT}/GUIManager.h; ${SOFAGUICOMMON_ROOT}/MouseOperations.h; ${SOFAGUICOMMON_ROOT}/OperationFactory.h; ${SOFAGUICOMMON_ROOT}/PickHandler.h; ${SOFAGUICOMMON_ROOT}/ViewerFactory.h; ${SOFAGUICOMMON_ROOT}/ArgumentParser.h; ). set(SOURCE_FILES; ${SOFAGUICOMMON_ROOT}/init.cpp; ${SOFAGUICOMMON_ROOT}/BaseGUI.cpp; ${SOFAGUICOMMON_ROOT}/BaseViewer.cpp; ${SOFAGUICOMMON_ROOT}/ColourPickingVisitor.cpp; ${SOFAGUICOMMON_ROOT}/FilesRecentlyOpenedManager.cpp; ${SOFAGUICOMMON_ROOT}/GuiDataRepository.cpp; ${SOFAGUICOMMON_ROOT}/GUIManager.cpp; ${SOFAGUICOMMON_ROOT}/MouseOperations.cpp; ${SO",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Common/CMakeLists.txt:168,message,message,168,Sofa/GUI/Common/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Common/CMakeLists.txt,5,"['DEPEND', 'message']","['DEPENDENCY', 'message']"
Integrability,"cmake_minimum_required(VERSION 3.22); project(Sofa.GUI.HeadlessRecorder). find_package(Sofa.GL REQUIRED); sofa_find_package(Sofa.GUI.Common REQUIRED). # FFMPEG; find_package(FFMPEG_exec). # X11; sofa_find_package(X11 QUIET); if(X11_FOUND); message(""Found X11 libraries""); include_directories(${X11_INCLUDE_DIR}); else(); message(SEND_ERROR ""Can't find X11 libraries.""); endif(). set(SRC_ROOT src/sofa/gui/headlessrecorder). set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/init.h; ${SRC_ROOT}/HeadlessRecorder.h; ). set(SOURCE_FILES; ${SRC_ROOT}/init.cpp; ${SRC_ROOT}/HeadlessRecorder.cpp; ). if(SOFA_BUILD_TESTS); configure_file(${SRC_ROOT}/headlessRecorder_test.sh ${CMAKE_BINARY_DIR}/bin/headlessRecorder_test COPYONLY); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.Common Sofa.GL); target_link_libraries(${PROJECT_NAME} PUBLIC ${X11_LIBRARIES}). # Create build and install versions of .ini file for resources finding; set(FFMPEG_EXEC_PATH ""${FFMPEG_EXEC_FILE}"") # FFMPEG_EXEC_FILE is set by FindFFMEG_exec.cmake; configure_file(${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in ""${CMAKE_BINARY_DIR}/etc/${PROJECT_NAME}.ini""); get_filename_component(FFMPEG_EXEC_FILENAME ""${FFMPEG_EXEC_FILE}"" NAME); set(FFMPEG_EXEC_PATH ""../bin/${FFMPEG_EXEC_FILENAME}"") # relative path for install dir, see .ini file; configure_file(${CMAKE_CURRENT_SOURCE_DIR}/etc/${PROJECT_NAME}.ini.in ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini""); install(FILES ""${CMAKE_BINARY_DIR}/etc/installed${PROJECT_NAME}.ini"" DESTINATION etc RENAME ${PROJECT_NAME}.ini COMPONENT applications). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/HeadlessRecorder/CMakeLists.txt:240,message,message,240,Sofa/GUI/HeadlessRecorder/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/HeadlessRecorder/CMakeLists.txt,2,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(Sofa.GUI.Qt LANGUAGES CXX). # Qt dependencies; set(SOFA_GUI_QT_TARGETS """"); set(QT_USE_IMPORTED_TARGETS 1); set(QT5_NO_LINK_QTMAIN 1). # Will only use Qt5 if Qt5 is found and Qt6 is not found; # if Qt5 and Qt6 are both found, Qt6 will take priority; find_package(Qt6 COMPONENTS Core CoreTools QUIET); if (NOT Qt6Core_FOUND); find_package(Qt5 COMPONENTS Core QUIET); endif(). if (Qt6Core_FOUND); message(""${PROJECT_NAME}: will use Qt6""); sofa_find_package(Qt6 COMPONENTS Gui GuiTools Widgets WidgetsTools OpenGLWidgets REQUIRED); set(SOFA_GUI_QT_TARETS ${SOFA_GUI_QT_TARGETS} Qt::Core Qt::Gui Qt::Widgets Qt::OpenGLWidgets ); elseif (Qt5Core_FOUND); message(""${PROJECT_NAME}: will use Qt5 (deprecated)""); sofa_find_package(Qt5 COMPONENTS Core Gui OpenGL REQUIRED); set(SOFA_GUI_QT_TARGETS ${SOFA_GUI_QT_TARGETS} Qt5::Core Qt5::Gui Qt5::OpenGL); else(); message(SEND_ERROR ""${PROJECT_NAME}: Could not find either Qt5 or Qt6.""); endif(). if (Qt5Core_FOUND); # Profiling; sofa_find_package(Qt5 COMPONENTS Charts QUIET BOTH_SCOPES); if(Qt5Charts_FOUND); set(SOFA_GUI_QT_TARGETS ${SOFA_GUI_QT_TARGETS} Qt5::Charts); else(); message(STATUS ""${PROJECT_NAME}: Qt5Charts not found. No chart nor Profile will be compiled""); endif(). # QDocBrowser; find_package(Qt5 COMPONENTS WebEngine QUIET) # if found, then QDocBrowser will be ON by default; option(SOFA_GUI_QT_ENABLE_QDOCBROWSER ""Build the QDocBrowser. QtWebEngine is needed."" ${Qt5WebEngine_FOUND}). if(SOFA_GUI_QT_ENABLE_QDOCBROWSER); sofa_find_package(Qt5 COMPONENTS WebEngine WebEngineWidgets REQUIRED BOTH_SCOPES); set(SOFA_GUI_QT_TARGETS ${SOFA_GUI_QT_TARGETS} Qt5::WebEngine Qt5::WebEngineWidgets); endif(); elseif (Qt6Core_FOUND). # Profiling; sofa_find_package(Qt6 COMPONENTS Charts QUIET BOTH_SCOPES); if(Qt6Charts_FOUND); set(SOFA_GUI_QT_TARGETS ${SOFA_GUI_QT_TARGETS} Qt::Charts); else(); message(STATUS ""${PROJECT_NAME}: Qt6 Charts not found. No chart nor Profile will be compiled""); endif(). # # QD",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt:79,depend,dependencies,79,Sofa/GUI/Qt/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt,4,"['depend', 'message']","['dependencies', 'message']"
Integrability,"cmake_minimum_required(VERSION 3.22); project(Sofa.LinearAlgebra.Testing LANGUAGES CXX). set(HEADER_FILES; src/Sofa.LinearAlgebra.Testing/BaseMatrix_test.h; src/Sofa.LinearAlgebra.Testing/SparseMatrixTest.h; src/Sofa.LinearAlgebra.Testing/SparseMatrixProduct_test.h; ). add_library(${PROJECT_NAME} INTERFACE). target_link_libraries(${PROJECT_NAME} INTERFACE Sofa.Testing); target_include_directories(${PROJECT_NAME} INTERFACE ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src/>""); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/LinearAlgebra/Testing/CMakeLists.txt:298,INTERFACE,INTERFACE,298,Sofa/framework/LinearAlgebra/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/LinearAlgebra/Testing/CMakeLists.txt,3,['INTERFACE'],['INTERFACE']
Integrability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Simulation.Core). set(SRC_ROOT ""src/sofa/simulation""). set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/fwd.h; ${SRC_ROOT}/AnimateBeginEvent.h; ${SRC_ROOT}/AnimateEndEvent.h; ${SRC_ROOT}/AnimateVisitor.h; ${SRC_ROOT}/BaseMechanicalVisitor.h; ${SRC_ROOT}/BehaviorUpdatePositionVisitor.h; ${SRC_ROOT}/CactusStackStorage.h; ${SRC_ROOT}/CleanupVisitor.h; ${SRC_ROOT}/CollisionAnimationLoop.h; ${SRC_ROOT}/CollisionBeginEvent.h; ${SRC_ROOT}/CollisionEndEvent.h; ${SRC_ROOT}/CollisionVisitor.h; ${SRC_ROOT}/Colors.h; ${SRC_ROOT}/CpuTask.h; ${SRC_ROOT}/CpuTaskStatus.h; ${SRC_ROOT}/DeactivatedNodeVisitor.h; ${SRC_ROOT}/DefaultAnimationLoop.h; ${SRC_ROOT}/DefaultVisualManagerLoop.h; ${SRC_ROOT}/DeleteVisitor.h; ${SRC_ROOT}/ExportDotVisitor.h; ${SRC_ROOT}/ExportGnuplotVisitor.h; ${SRC_ROOT}/ExportVisualModelOBJVisitor.h; ${SRC_ROOT}/InitVisitor.h; ${SRC_ROOT}/IntegrateBeginEvent.h; ${SRC_ROOT}/IntegrateEndEvent.h; ${SRC_ROOT}/LocalStorage.h; ${SRC_ROOT}/MechanicalOperations.h; ${SRC_ROOT}/MechanicalVPrintVisitor.h; ${SRC_ROOT}/MechanicalVisitor.h; ${SRC_ROOT}/MutationListener.h; ${SRC_ROOT}/Node.h; ${SRC_ROOT}/Node.inl; ${SRC_ROOT}/ParallelForEach.h; ${SRC_ROOT}/ParallelSparseMatrixProduct.h; ${SRC_ROOT}/ParallelVisitorScheduler.h; ${SRC_ROOT}/PauseEvent.h; ${SRC_ROOT}/PipelineImpl.h; ${SRC_ROOT}/PositionEvent.h; ${SRC_ROOT}/PrintVisitor.h; ${SRC_ROOT}/PropagateEventVisitor.h; ${SRC_ROOT}/RequiredPlugin.h; ${SRC_ROOT}/ResetVisitor.h; ${SRC_ROOT}/SceneLoaderFactory.h; ${SRC_ROOT}/Simulation.h; ${SRC_ROOT}/SimulationLoop.h; ${SRC_ROOT}/SolveVisitor.h; ${SRC_ROOT}/StateChangeVisitor.h; ${SRC_ROOT}/TopologyChangeVisitor.h; ${SRC_ROOT}/UpdateBoundingBoxVisitor.h; ${SRC_ROOT}/UpdateContextVisitor.h; ${SRC_ROOT}/UpdateInternalDataVisitor.h; ${SRC_ROOT}/UpdateLinksVisitor.h; ${SRC_ROOT}/UpdateMappingEndEvent.h; ${SRC_ROOT}/UpdateMappingVisitor.h; ${SRC_ROOT}/VectorOperations.h; ${SRC_ROOT}/VelocityThresholdVisitor.h; ${SRC_ROOT}/Visit",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt:913,Integrat,IntegrateBeginEvent,913,Sofa/framework/Simulation/Core/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Simulation/Core/CMakeLists.txt,2,['Integrat'],"['IntegrateBeginEvent', 'IntegrateEndEvent']"
Integrability,"cmake_minimum_required(VERSION 3.22); project(Sofa.SimulationCore). set(SOURCE_FILES; empty.cpp; ). add_library(${PROJECT_NAME} SHARED ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Simulation.Core instead.""). sofa_find_package(Sofa.Simulation.Core REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER SofaFramework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/Sofa.SimulationCore/CMakeLists.txt:154,message,message,154,applications/collections/deprecated/modules/Sofa.SimulationCore/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/Sofa.SimulationCore/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(Sofa.Testing LANGUAGES CXX). # Enable testing features of cmake, like the add_test() command.; enable_testing(). # add googletest library; # set(googletest_disable_pthreads ON CACHE INTERNAL """"); find_package(GTest QUIET); if(NOT GTest_FOUND AND SOFA_ALLOW_FETCH_DEPENDENCIES); message(""${PROJECT_NAME}: DEPENDENCY googletest NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is ON, fetching googletest...""). include(FetchContent); FetchContent_Declare(googletest; GIT_REPOSITORY https://github.com/google/googletest; GIT_TAG v1.14.0; ). FetchContent_GetProperties(googletest); if(NOT googletest_POPULATED); FetchContent_Populate(googletest). set(BUILD_GMOCK OFF CACHE INTERNAL """"); set(BUILD_SHARED_LIBS ON CACHE BOOL """" FORCE); set(INSTALL_GTEST OFF CACHE BOOL """" FORCE) # rely on SOFA macros; set(gtest_force_shared_crt ON CACHE BOOL """" FORCE); set(gtest_disable_pthreads OFF CACHE BOOL """" FORCE). message(""${PROJECT_NAME}: adding subdirectory ${googletest_SOURCE_DIR}""). add_subdirectory(${googletest_SOURCE_DIR} ${googletest_BINARY_DIR}). target_compile_options(gtest_main PRIVATE ""-DGTEST_LINKED_AS_SHARED_LIBRARY=0""); target_compile_options(gtest PRIVATE ""-DGTEST_CREATE_SHARED_LIBRARY=1""). install(DIRECTORY ${googletest_SOURCE_DIR}/googletest/include/gtest DESTINATION include/extlibs/GTest/ COMPONENT headers); target_include_directories(gtest PUBLIC ""$<INSTALL_INTERFACE:include/extlibs/GTest/>""); ; include(SofaMacros); sofa_create_package_with_targets(; PACKAGE_NAME GTest; PACKAGE_VERSION 1.14.0; TARGETS gtest AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""include""; INCLUDE_INSTALL_DIR ""extlibs/GTest""; ). set_target_properties(gtest PROPERTIES FOLDER Testing); set_target_properties(gtest_main PROPERTIES FOLDER Testing); endif(); elseif (NOT GTest_FOUND); message(FATAL_ERROR ""${PROJECT_NAME}: DEPENDENCY googletest NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install googletest, or enable SOFA_ALLOW_FETCH_DEPEND",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt:324,message,message,324,Sofa/framework/Testing/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/CMakeLists.txt,3,"['DEPEND', 'message']","['DEPENDENCY', 'message']"
Integrability,"cmake_minimum_required(VERSION 3.22); project(Sofa; HOMEPAGE_URL https://www.sofa-framework.org/; ) # Cannot use VERSION with patch like ""00"". include(CMakeDependentOption). # Manually define VERSION; set(Sofa_VERSION_MAJOR 24); set(Sofa_VERSION_MINOR 06); set(Sofa_VERSION_PATCH 00); set(Sofa_VERSION ${Sofa_VERSION_MAJOR}.${Sofa_VERSION_MINOR}.${Sofa_VERSION_PATCH}). set(SOFA_URL ""${CMAKE_PROJECT_HOMEPAGE_URL}""). set(SOFA_VERSION_STR ""\""${Sofa_VERSION}\""""); set(SOFA_VERSION ""${Sofa_VERSION_MAJOR}${Sofa_VERSION_MINOR}${Sofa_VERSION_PATCH}""). ## Default build type; if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES); message(STATUS ""Setting build type to Release as none was specified.""); set(CMAKE_BUILD_TYPE ""Release"" CACHE STRING ""Build type"" FORCE); endif(). # Output Directories definition; set(ARCHIVE_OUTPUT_DIRECTORY lib); set(RUNTIME_OUTPUT_DIRECTORY bin); if(WIN32); set(LIBRARY_OUTPUT_DIRECTORY ${RUNTIME_OUTPUT_DIRECTORY}); else(); set(LIBRARY_OUTPUT_DIRECTORY ${ARCHIVE_OUTPUT_DIRECTORY}); endif(); ## Set the output directories globally; set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${ARCHIVE_OUTPUT_DIRECTORY}); set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${RUNTIME_OUTPUT_DIRECTORY}); set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${LIBRARY_OUTPUT_DIRECTORY}). # Option for packaging; option(SOFA_BUILD_RELEASE_PACKAGE ""Run package specific configure"" OFF). # Option to allow some dependencies such as cxxopts to be fetched by cmake if; # the package is not found; option(SOFA_ALLOW_FETCH_DEPENDENCIES ""Allow compatible dependencies to be fetched if the package is not found by cmake.; List of dependencies that can be fetched: cxxopts, gtest, metis, CImg"" ON). # Option to accelerate the compilation; # see https://cmake.org/cmake/help/v3.16/command/target_precompile_headers.html; # and https://cmake.org/cmake/help/v3.16/prop_tgt/DISABLE_PRECOMPILE_HEADERS.html. # https://cmake.org/cmake/help/latest/policy/CMP0127.html; if (${CMAKE_VERSI",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:630,message,message,630,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaAdvanced). ## Version; set(SOFAADVANCED_VERSION ${SofaFramework_VERSION}). ## Subdirectories; set(SOFAADVANCED_MODULES; SofaNonUniformFem; ). foreach(module ${SOFAADVANCED_MODULES}); sofa_find_package(${module} QUIET); if(NOT ${module}_FOUND); string(TOUPPER module_${module} MODULE_TO_CHECK); list(APPEND LIST_MODULES_TO_CHECK ${MODULE_TO_CHECK}); endif(); endforeach(); if(LIST_MODULES_TO_CHECK); message(FATAL_ERROR; "" If you still want to use ${PROJECT_NAME}, please enable the following CMake option(s): \n""; "" ${LIST_MODULES_TO_CHECK}""; ); endif(). set(SOFAADVANCED_SRC src/${PROJECT_NAME}). set(HEADER_FILES; ${SOFAADVANCED_SRC}/config.h.in ; ${SOFAADVANCED_SRC}/initSofaAdvanced.h; ). set(SOURCE_FILES; ${SOFAADVANCED_SRC}/initSofaAdvanced.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAADVANCED_MODULES}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaAdvanced/CMakeLists.txt:449,message,message,449,applications/collections/deprecated/SofaAdvanced/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaAdvanced/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaAssimp VERSION 0.2). set(HEADER_FILES; config.h; AssimpLoader.h; SceneColladaLoader.h; ). set(SOURCE_FILES; initAssimpPlugin.cpp; AssimpLoader.cpp; SceneColladaLoader.cpp; ). set(README_FILES README_AssimpPlugin.txt). ## Assimp dependencies; list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/""). ### Dependencies; find_package(Sofa.Core REQUIRED); sofa_find_package(assimp REQUIRED); sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.Mass REQUIRED); sofa_find_package(Sofa.Component.Mapping REQUIRED); sofa_find_package(Sofa.GL.Component.Rendering3D REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(image QUIET); sofa_find_package(Flexible QUIET). # Create the plugin library.; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_SOFAASSIMP""); target_link_libraries(${PROJECT_NAME} PUBLIC ${ASSIMP_LIBRARIES} Sofa.Core Sofa.Component.Constraint.Projective Sofa.Component.Mass Sofa.Component.Mapping Sofa.GL.Component.Rendering3D Sofa.Component.StateContainer Sofa.Component.Collision.Geometry). if(image_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC image); endif(); if(Flexible_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC Flexible); endif(). target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>""); target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>/..""); target_include_directories(${PROJECT_NAME} PUBLIC ""$<BUILD_INTERFACE:${ASSIMP_INCLUDE_DIR}>""). if(ASSIMP_DLL); sofa_install_libraries(PATHS ${ASSIMP_DLL}); endif(). #TODO; if(SOFA_BUILD_TESTS); # add_subdirectory(CGALPlugin_test); endif(). ## Install rules for the library; CMake package configurations files; s",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/CMakeLists.txt:278,depend,dependencies,278,applications/plugins/SofaAssimp/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaAssimp/CMakeLists.txt,2,"['Depend', 'depend']","['Dependencies', 'dependencies']"
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaBaseCollision LANGUAGES CXX). set(SOFABASECOLLISION_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFABASECOLLISION_SRC}/config.h.in; ${SOFABASECOLLISION_SRC}/initSofaBaseCollision.h; ). set(SOURCE_FILES; ${SOFABASECOLLISION_SRC}/initSofaBaseCollision.cpp; ). sofa_find_package(SofaFramework REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Core Sofa.Simulation.Core). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Model, Sofa.Component.Collision.Detection.Algorithm, Sofa.Component.Collision.Detection.Intersection, Sofa.Component.Collision.Response.Mapper and Sofa.Component.Collision.Response.Contact instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Mapper REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Algorithm); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Mapper); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseCollision/CMakeLists.txt:503,message,message,503,applications/collections/deprecated/modules/SofaBaseCollision/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseCollision/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaBaseLinearSolver LANGUAGES CXX). set(SOFABASELINEARSOLVER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFABASELINEARSOLVER_SRC}/config.h.in; ${SOFABASELINEARSOLVER_SRC}/initSofaBaseLinearSolver.h; ). set(SOURCE_FILES; ${SOFABASELINEARSOLVER_SRC}/initSofaBaseLinearSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.LinearSolver.Iterative instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.LinearSolver.Iterative REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.LinearSolver.Iterative). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseLinearSolver/CMakeLists.txt:403,message,message,403,applications/collections/deprecated/modules/SofaBaseLinearSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseLinearSolver/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaBaseMechanics LANGUAGES CXX). set(SOFABASEMECHANICS_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFABASEMECHANICS_SRC}/config.h.in; ${SOFABASEMECHANICS_SRC}/initSofaBaseMechanics.h; ). set(SOURCE_FILES; ${SOFABASEMECHANICS_SRC}/initSofaBaseMechanics.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Mass, Sofa.Component.Mapping.Linear and Sofa.Component.StateContainer instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Mass REQUIRED); sofa_find_package(Sofa.Component.Mapping.Linear REQUIRED); sofa_find_package(Sofa.Component.StateContainer REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mass); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping.Linear); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.StateContainer). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseMechanics/CMakeLists.txt:382,message,message,382,applications/collections/deprecated/modules/SofaBaseMechanics/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseMechanics/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaBaseTopology LANGUAGES CXX). set(SOFABASETOPOLOGY_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFABASETOPOLOGY_SRC}/config.h.in; ${SOFABASETOPOLOGY_SRC}/initSofaBaseTopology.h; ). set(SOURCE_FILES; ${SOFABASETOPOLOGY_SRC}/initSofaBaseTopology.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Topology.Container.Grid, Sofa.Component.Topology.Container.Constant and Sofa.Component.Topology.Container.Dynamic instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Topology.Container.Constant REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Grid REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Constant Sofa.Component.Topology.Container.Grid Sofa.Component.Topology.Container.Dynamic). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseTopology/CMakeLists.txt:375,message,message,375,applications/collections/deprecated/modules/SofaBaseTopology/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseTopology/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaBaseUtils LANGUAGES CXX). set(SOFABASEUTILS_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFABASEUTILS_SRC}/config.h.in; ${SOFABASEUTILS_SRC}/initSofaBaseUtils.h; ). set(SOURCE_FILES; ${SOFABASEUTILS_SRC}/initSofaBaseUtils.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.SceneUtility instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.SceneUtility REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SceneUtility). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseUtils/CMakeLists.txt:354,message,message,354,applications/collections/deprecated/modules/SofaBaseUtils/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseUtils/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaBaseVisual LANGUAGES CXX). set(SOFABASEVISUAL_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFABASEVISUAL_SRC}/config.h.in; ${SOFABASEVISUAL_SRC}/initSofaBaseVisual.h; ). set(SOURCE_FILES; ${SOFABASEVISUAL_SRC}/initSofaBaseVisual.cpp; ). sofa_find_package(Sofa.Simulation.Core REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Core). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Visual and Sofa.Component.Setting instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Visual REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Visual); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Setting). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseVisual/CMakeLists.txt:479,message,message,479,applications/collections/deprecated/modules/SofaBaseVisual/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBaseVisual/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaBoundaryCondition LANGUAGES CXX). set(SOFABOUNDARYCONDITION_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFABOUNDARYCONDITION_SRC}/config.h.in; ${SOFABOUNDARYCONDITION_SRC}/initSofaBoundaryCondition.h; ). set(SOURCE_FILES; ${SOFABOUNDARYCONDITION_SRC}/initSofaBoundaryCondition.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Constraint.Projective and Sofa.Component.MechanicalLoad instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Constraint.Projective REQUIRED); sofa_find_package(Sofa.Component.MechanicalLoad REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Projective); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.MechanicalLoad). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBoundaryCondition/CMakeLists.txt:410,message,message,410,applications/collections/deprecated/modules/SofaBoundaryCondition/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaBoundaryCondition/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaCommon). # Modules; set(SOFACOMMON_MODULES; SofaSimpleFem; SofaRigid; SofaDeformable; SofaObjectInteraction; SofaEngine; SofaExplicitOdeSolver; SofaImplicitOdeSolver; SofaLoader; ). foreach(module ${SOFACOMMON_MODULES}); sofa_find_package(${module} QUIET); if(NOT ${module}_FOUND); string(TOUPPER module_${module} MODULE_TO_CHECK); list(APPEND LIST_MODULES_TO_CHECK ${MODULE_TO_CHECK}); endif(); endforeach(); if(LIST_MODULES_TO_CHECK); message(FATAL_ERROR; "" If you still want to use ${PROJECT_NAME}, please enable the following CMake option(s): \n""; "" ${LIST_MODULES_TO_CHECK}""; ); endif(). set(SOFACOMMON_SRC src/${PROJECT_NAME}); set(HEADER_FILES; ${SOFACOMMON_SRC}/config.h.in; ${SOFACOMMON_SRC}/initSofaCommon.h; ); set(SOURCE_FILES; ${SOFACOMMON_SRC}/initSofaCommon.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFACOMMON_MODULES}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaCommon/CMakeLists.txt:487,message,message,487,applications/collections/deprecated/SofaCommon/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaCommon/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaConstraint). set(SOFACONSTRAINT_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFACONSTRAINT_SRC}/config.h.in; ${SOFACONSTRAINT_SRC}/initSofaConstraint.h; ). set(SOURCE_FILES; ${SOFACONSTRAINT_SRC}/initSofaConstraint.cpp; ). sofa_find_package(SofaBase REQUIRED) # SofaBaseLinearSolver; sofa_find_package(SofaImplicitOdeSolver REQUIRED) ; sofa_find_package(SofaUserInteraction REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaImplicitOdeSolver SofaUserInteraction SofaBaseLinearSolver). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Mapping.MappedMatrix, Sofa.Component.Constraint.Lagrangian.Model, Sofa.Component.Constraint.Lagrangian.Correction, Sofa.Component.Constraint.Lagrangian.Solver, Sofa.Component.AnimationLoop, Sofa.Component.Collision.Detection.Intersection, Sofa.Component.Collision.Response.Contact and Sofa.GUI.Component instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Mapping.MappedMatrix REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Model REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Correction REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Solver REQUIRED); sofa_find_package(Sofa.Component.AnimationLoop REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping.MappedMatrix); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian.Model); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian.Correction); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Constraint.Lagrangian.Solver); target_link_libraries(${PR",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaConstraint/CMakeLists.txt:619,message,message,619,applications/collections/deprecated/modules/SofaConstraint/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaConstraint/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaCore). set(SOURCE_FILES; empty.cpp; ). add_library(${PROJECT_NAME} SHARED ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Core instead.""). sofa_find_package(Sofa.Core REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Core). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER SofaFramework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaCore/CMakeLists.txt:143,message,message,143,applications/collections/deprecated/modules/SofaCore/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaCore/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaDefaultType). set(SOURCE_FILES; empty.cpp; ). add_library(${PROJECT_NAME} SHARED ${SOURCE_FILES}); #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.DefaultType instead.""). sofa_find_package(Sofa.DefaultType REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.DefaultType). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER SofaFramework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaDefaultType/CMakeLists.txt:150,message,message,150,applications/collections/deprecated/modules/SofaDefaultType/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaDefaultType/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaDeformable LANGUAGES CXX). set(SOFADEFORMABLE_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFADEFORMABLE_SRC}/config.h.in; ${SOFADEFORMABLE_SRC}/initSofaDeformable.h; ). set(SOURCE_FILES; ${SOFADEFORMABLE_SRC}/initSofaDeformable.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.SolidMechanics.Spring instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.Spring). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaDeformable/CMakeLists.txt:361,message,message,361,applications/collections/deprecated/modules/SofaDeformable/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaDeformable/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaDenseSolver LANGUAGES CXX). set(SOFADENSESOLVER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFADENSESOLVER_SRC}/config.h.in; ${SOFADENSESOLVER_SRC}/initSofaDenseSolver.h; ). set(SOURCE_FILES; ${SOFADENSESOLVER_SRC}/initSofaDenseSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.LinearSolver.Direct instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.LinearSolver.Direct REQUIRED) # SVDLinearSolver; target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.LinearSolver.Direct). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaDenseSolver""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaDenseSolver/CMakeLists.txt:368,message,message,368,applications/collections/deprecated/modules/SofaDenseSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaDenseSolver/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaDistanceGrid LANGUAGES CXX). option(SOFADISTANCEGRID_USE_MINIFLOWVR ""Build and use the miniFlowVR library with DistanceGrid."" OFF); if(SOFADISTANCEGRID_USE_MINIFLOWVR); add_subdirectory(extlibs/miniFlowVR); set_target_properties(miniFlowVR PROPERTIES DEBUG_POSTFIX ""_d""); #set_target_properties(miniFlowVR PROPERTIES FOLDER ""SofaExtlibs""); endif(). option(SOFADISTANCEGRID_USE_MESHCONV ""Build meshconv, mainly used to generate DistanceGrid file. Needs miniFlowVR."" OFF); if(SOFADISTANCEGRID_USE_MESHCONV); find_package(MiniFlowVR QUIET); if(MiniFlowVR_FOUND); sofa_add_subdirectory(application applications/meshconv meshconv OFF); else(); message(WARNING ""meshconv needs miniFlowVR; enable SOFADISTANCEGRID_USE_MINIFLOWVR to build it.""); endif(); endif(). set(SOFADISTANCEGRID_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFADISTANCEGRID_SRC}/config.h.in; ${SOFADISTANCEGRID_SRC}/DistanceGrid.h; ${SOFADISTANCEGRID_SRC}/components/collision/FFDDistanceGridDiscreteIntersection.h; ${SOFADISTANCEGRID_SRC}/components/collision/FFDDistanceGridDiscreteIntersection.inl; ${SOFADISTANCEGRID_SRC}/components/collision/RigidDistanceGridDiscreteIntersection.h; ${SOFADISTANCEGRID_SRC}/components/collision/RigidDistanceGridDiscreteIntersection.inl; ${SOFADISTANCEGRID_SRC}/components/collision/DistanceGridCollisionModel.h; ${SOFADISTANCEGRID_SRC}/components/forcefield/DistanceGridForceField.h; ${SOFADISTANCEGRID_SRC}/components/forcefield/DistanceGridForceField.inl; ). set(SOURCE_FILES; ${SOFADISTANCEGRID_SRC}/initSofaDistanceGrid.cpp; ${SOFADISTANCEGRID_SRC}/DistanceGrid.cpp; ${SOFADISTANCEGRID_SRC}/RegisterModelToCollisionFactory.cpp; ${SOFADISTANCEGRID_SRC}/components/forcefield/DistanceGridForceField.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/FFDDistanceGridDiscreteIntersection.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/RayDistanceGridContact.cpp; ${SOFADISTANCEGRID_SRC}/components/collision/RigidDistanceGridDiscreteIntersect",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaDistanceGrid/CMakeLists.txt:689,message,message,689,applications/plugins/SofaDistanceGrid/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaDistanceGrid/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaEigen2Solver LANGUAGES CXX). set(SOFAEIGEN2SOLVER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAEIGEN2SOLVER_SRC}/config.h.in; ${SOFAEIGEN2SOLVER_SRC}/initSofaEigen2Solver.h; ). set(SOURCE_FILES; ${SOFAEIGEN2SOLVER_SRC}/initSofaEigen2Solver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.LinearAlgebra (Eigen classes) and Sofa.Component.LinearSolver.Direct (SVDLinearSolver) instead.""). # forward to the new sofang module; sofa_find_package(Sofa.LinearAlgebra REQUIRED); sofa_find_package(Sofa.Component.LinearSolver.Direct REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.LinearAlgebra); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.LinearSolver.Direct). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaEigen2Solver/CMakeLists.txt:375,message,message,375,applications/collections/deprecated/modules/SofaEigen2Solver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaEigen2Solver/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaEngine LANGUAGES CXX). set(SOFAENGINE_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAENGINE_SRC}/config.h.in; ${SOFAENGINE_SRC}/initSofaEngine.h; ). set(SOURCE_FILES; ${SOFAENGINE_SRC}/initSofaEngine.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Engine.Select instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Engine.Select REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Engine.Select). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaEngine/CMakeLists.txt:333,message,message,333,applications/collections/deprecated/modules/SofaEngine/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaEngine/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaExplicitOdeSolver LANGUAGES CXX). set(SOFAEXPLICITEODESOLVER_SRC ""src/${PROJECT_NAME}""). sofa_find_package(SofaFramework REQUIRED). set(HEADER_FILES; ${SOFAEXPLICITEODESOLVER_SRC}/config.h.in; ${SOFAEXPLICITEODESOLVER_SRC}/initSofaExplicitOdeSolver.h; ). set(SOURCE_FILES; ${SOFAEXPLICITEODESOLVER_SRC}/initSofaExplicitOdeSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.ODESolver.Forward instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.ODESolver.Forward REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.ODESolver.Forward). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaExplicitOdeSolver/CMakeLists.txt:457,message,message,457,applications/collections/deprecated/modules/SofaExplicitOdeSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaExplicitOdeSolver/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaExporter LANGUAGES CXX). set(SRC_ROOT src/SofaExporter). set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/initSofaExporter.h; ). set(SOURCE_FILES; ${SRC_ROOT}/initSofaExporter.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.IO.Mesh and Sofa.Component.Playback instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.IO.Mesh REQUIRED); sofa_find_package(Sofa.Component.Playback REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.IO.Mesh); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Playback). sofa_create_package_with_targets(; PACKAGE_NAME SofaExporter; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaExporter""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaExporter/CMakeLists.txt:310,message,message,310,applications/collections/deprecated/modules/SofaExporter/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaExporter/CMakeLists.txt,1,['message'],['message']
Integrability,cmake_minimum_required(VERSION 3.22); project(SofaGTestMain). ## Dependencies; sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(GTest REQUIRED). add_library(${PROJECT_NAME} SofaGTestMain.cpp); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.Simulation.Graph); target_link_libraries(${PROJECT_NAME} PUBLIC GTest::gtest). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; ). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER Testing); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/SofaGTestMain/CMakeLists.txt:65,Depend,Dependencies,65,Sofa/framework/Testing/SofaGTestMain/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Testing/SofaGTestMain/CMakeLists.txt,1,['Depend'],['Dependencies']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneral). # Send warnings when deprecated CMake project is activated; option(CMAKE_WARN_DEPRECATED ""Send warning when deprecated projects are found"" ON). # Modules; set(SOFAGENERAL_MODULES; SofaBoundaryCondition; SofaGeneralMeshCollision; SofaGeneralVisual; SofaGraphComponent; SofaGeneralAnimationLoop; SofaGeneralDeformable; SofaGeneralEngine; SofaGeneralExplicitOdeSolver; SofaGeneralImplicitOdeSolver; SofaGeneralLinearSolver; SofaGeneralRigid; SofaGeneralTopology; SofaTopologyMapping; SofaUserInteraction; SofaConstraint; SofaGeneralLoader; ). foreach(module ${SOFAGENERAL_MODULES}); sofa_find_package(${module} QUIET); if(NOT ${module}_FOUND); string(TOUPPER module_${module} MODULE_TO_CHECK); list(APPEND LIST_MODULES_TO_CHECK ${MODULE_TO_CHECK}); endif(); endforeach(); if(LIST_MODULES_TO_CHECK); message(FATAL_ERROR; "" If you still want to use ${PROJECT_NAME}, please enable the following CMake option(s): \n""; "" ${LIST_MODULES_TO_CHECK}""; ); endif(). set(SOFAGENERAL_SRC src/${PROJECT_NAME}). set(HEADER_FILES; ${SOFAGENERAL_SRC}/config.h.in; ${SOFAGENERAL_SRC}/initSofaGeneral.h; ). set(SOURCE_FILES; ${SOFAGENERAL_SRC}/initSofaGeneral.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAGENERAL_MODULES}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; # RELOCATABLE ""collections"" # disabled because we need SofaGeneral to be directly available; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaGeneral/CMakeLists.txt:856,message,message,856,applications/collections/deprecated/SofaGeneral/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaGeneral/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralAnimationLoop LANGUAGES CXX). set(SOFAGENERALANIMATIONLOOP_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALANIMATIONLOOP_SRC}/config.h.in; ${SOFAGENERALANIMATIONLOOP_SRC}/initSofaGeneralAnimationLoop.h; ). set(SOURCE_FILES; ${SOFAGENERALANIMATIONLOOP_SRC}/initSofaGeneralAnimationLoop.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Mapping.MappedMatrix and Sofa.Component.AnimationLoop instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Mapping.MappedMatrix REQUIRED); sofa_find_package(Sofa.Component.AnimationLoop REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping.MappedMatrix); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.AnimationLoop). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralAnimationLoop/CMakeLists.txt:431,message,message,431,applications/collections/deprecated/modules/SofaGeneralAnimationLoop/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralAnimationLoop/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralDeformable LANGUAGES CXX). set(SOFAGENERALDEFORMABLE_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALDEFORMABLE_SRC}/config.h.in; ${SOFAGENERALDEFORMABLE_SRC}/initSofaGeneralDeformable.h; ). set(SOURCE_FILES; ${SOFAGENERALDEFORMABLE_SRC}/initSofaGeneralDeformable.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.SolidMechanics.Spring and Sofa.Component.SolidMechanics.TensorMass instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.TensorMass REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.Spring); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.TensorMass). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralDeformable/CMakeLists.txt:410,message,message,410,applications/collections/deprecated/modules/SofaGeneralDeformable/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralDeformable/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralEngine LANGUAGES CXX). set(SOFAGENERALENGINE_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALENGINE_SRC}/config.h.in; ${SOFAGENERALENGINE_SRC}/initSofaGeneralEngine.h; ). set(SOURCE_FILES; ${SOFAGENERALENGINE_SRC}/initSofaGeneralEngine.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Engine.Analyze, Sofa.Component.Engine.Generate, Sofa.Component.Engine.Select and Sofa.Component.Engine.Transform instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Engine.Analyze REQUIRED); sofa_find_package(Sofa.Component.Engine.Generate REQUIRED); sofa_find_package(Sofa.Component.Engine.Select REQUIRED); sofa_find_package(Sofa.Component.Engine.Transform REQUIRED). target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Engine.Analyze); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Engine.Generate); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Engine.Select); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Engine.Transform). sofa_find_package(Sofa.GL.Component.Engine QUIET); if(Sofa.GL.Component.Engine_FOUND); # message(WARNING ""Moreover, use Sofa.GL.Component.Engine if you need TextureInterpolation.""); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL.Component.Engine) ; endif(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralEngine/CMakeLists.txt:382,message,message,382,applications/collections/deprecated/modules/SofaGeneralEngine/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralEngine/CMakeLists.txt,2,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralExplicitOdeSolver LANGUAGES CXX). set(SOFAGENERALEXPLICITODESOLVER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALEXPLICITODESOLVER_SRC}/config.h.in; ${SOFAGENERALEXPLICITODESOLVER_SRC}/initSofaGeneralExplicitOdeSolver.h; ). set(SOURCE_FILES; ${SOFAGENERALEXPLICITODESOLVER_SRC}/initSofaGeneralExplicitOdeSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.ODESolver.Forward instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.ODESolver.Forward REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.ODESolver.Forward). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralExplicitOdeSolver/CMakeLists.txt:459,message,message,459,applications/collections/deprecated/modules/SofaGeneralExplicitOdeSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralExplicitOdeSolver/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralImplicitOdeSolver LANGUAGES CXX). set(SOFAGENERALIMPLICITODESOLVER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALIMPLICITODESOLVER_SRC}/config.h.in; ${SOFAGENERALIMPLICITODESOLVER_SRC}/initSofaGeneralImplicitOdeSolver.h; ). set(SOURCE_FILES; ${SOFAGENERALIMPLICITODESOLVER_SRC}/initSofaGeneralImplicitOdeSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.ODESolver.Backward instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.ODESolver.Backward REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.ODESolver.Backward). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralImplicitOdeSolver/CMakeLists.txt:459,message,message,459,applications/collections/deprecated/modules/SofaGeneralImplicitOdeSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralImplicitOdeSolver/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralLinearSolver LANGUAGES CXX). set(SOFAGENERALLINEARSOLVER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALLINEARSOLVER_SRC}/config.h.in; ${SOFAGENERALLINEARSOLVER_SRC}/initSofaGeneralLinearSolver.h; ). set(SOURCE_FILES; ${SOFAGENERALLINEARSOLVER_SRC}/initSofaGeneralLinearSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.LinearSolver.Iterative and Sofa.Component.LinearSolver.Direct instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.LinearSolver.Iterative REQUIRED); sofa_find_package(Sofa.Component.LinearSolver.Direct REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.LinearSolver.Iterative); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.LinearSolver.Direct). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralLinearSolver/CMakeLists.txt:424,message,message,424,applications/collections/deprecated/modules/SofaGeneralLinearSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralLinearSolver/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralLoader LANGUAGES CXX). set(SOFAGENERALLOADER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALLOADER_SRC}/config.h.in; ${SOFAGENERALLOADER_SRC}/initSofaGeneralLoader.h; ). set(SOURCE_FILES; ${SOFAGENERALLOADER_SRC}/initSofaGeneralLoader.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.IO.Mesh and Sofa.Component.Playback instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.IO.Mesh REQUIRED); sofa_find_package(Sofa.Component.Playback REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.IO.Mesh); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Playback). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralLoader/CMakeLists.txt:382,message,message,382,applications/collections/deprecated/modules/SofaGeneralLoader/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralLoader/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralMeshCollision LANGUAGES CXX). set(SOFAGENERALMESHCOLLISION_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALMESHCOLLISION_SRC}/config.h.in; ${SOFAGENERALMESHCOLLISION_SRC}/initSofaGeneralMeshCollision.h; ). set(SOURCE_FILES; ${SOFAGENERALMESHCOLLISION_SRC}/initSofaGeneralMeshCollision.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Geometry, Sofa.Component.Collision.Detection.Algorithm and Sofa.Component.Collision.Detection.Intersection instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Geometry REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Algorithm REQUIRED); sofa_find_package(Sofa.Component.Collision.Detection.Intersection REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Geometry); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Algorithm); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Detection.Intersection). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralMeshCollision/CMakeLists.txt:431,message,message,431,applications/collections/deprecated/modules/SofaGeneralMeshCollision/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralMeshCollision/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralRigid LANGUAGES CXX). set(SOFAGENERALRIGID_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALRIGID_SRC}/config.h.in; ${SOFAGENERALRIGID_SRC}/initSofaGeneralRigid.h; ). set(SOURCE_FILES; ${SOFAGENERALRIGID_SRC}/initSofaGeneralRigid.cpp; ). sofa_find_package(SofaBaseMechanics REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaBaseMechanics). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Mapping instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Mapping REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralRigid/CMakeLists.txt:487,message,message,487,applications/collections/deprecated/modules/SofaGeneralRigid/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralRigid/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralTopology LANGUAGES CXX). set(SOFAGENERALTOPOLOGY_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALTOPOLOGY_SRC}/config.h.in; ${SOFAGENERALTOPOLOGY_SRC}/initSofaGeneralTopology.h; ). set(SOURCE_FILES; ${SOFAGENERALTOPOLOGY_SRC}/initSofaGeneralTopology.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Topology.Container.Grid and Sofa.Component.Topology.Container.Constant instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Topology.Container.Constant REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Grid REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Constant Sofa.Component.Topology.Container.Grid). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralTopology/CMakeLists.txt:396,message,message,396,applications/collections/deprecated/modules/SofaGeneralTopology/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralTopology/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaGeneralVisual LANGUAGES CXX). set(SOFAGENERALVISUAL_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGENERALVISUAL_SRC}/config.h.in; ${SOFAGENERALVISUAL_SRC}/initSofaGeneralVisual.h; ). set(SOURCE_FILES; ${SOFAGENERALVISUAL_SRC}/initSofaGeneralVisual.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Visual instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Visual REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Visual). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralVisual/CMakeLists.txt:382,message,message,382,applications/collections/deprecated/modules/SofaGeneralVisual/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGeneralVisual/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaGraphComponent LANGUAGES CXX). sofa_find_package(SofaBase REQUIRED). set(SOFAGRAPHCOMPONENT_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAGRAPHCOMPONENT_SRC}/config.h.in; ${SOFAGRAPHCOMPONENT_SRC}/initSofaGraphComponent.h; ). set(SOURCE_FILES; ${SOFAGRAPHCOMPONENT_SRC}/initSofaGraphComponent.cpp; ). list(APPEND HEADER_FILES; ${SOFAGRAPHCOMPONENT_SRC}/Gravity.h; ${SOFAGRAPHCOMPONENT_SRC}/InteractingBehaviorModel.h; ); list(APPEND SOURCE_FILES; ${SOFAGRAPHCOMPONENT_SRC}/Gravity.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.Simulation.Core SofaBaseUtils SofaBaseCollision). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.SceneUtility, Sofa.Component.Setting,; #Sofa.GUI.Component and the plugin SceneChecking instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.SceneUtility REQUIRED); sofa_find_package(Sofa.Component.Setting REQUIRED); sofa_find_package(Sofa.GUI.Component REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SceneUtility); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Setting); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.Component). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGraphComponent/CMakeLists.txt:727,message,message,727,applications/collections/deprecated/modules/SofaGraphComponent/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGraphComponent/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaGuiCommon). set(SOURCE_FILES; empty.cpp; ). add_library(${PROJECT_NAME} SHARED ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.GUI.Common and Sofa.GUI.Batch instead.""). # forward to the new sofang module; sofa_find_package(Sofa.GUI.Common REQUIRED); sofa_find_package(Sofa.GUI.Batch REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.Common); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.Batch). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGuiCommon/CMakeLists.txt:148,message,message,148,applications/collections/deprecated/modules/SofaGuiCommon/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGuiCommon/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaGuiQt LANGUAGES CXX). set(SOURCE_FILES; empty.cpp; ). add_library(${PROJECT_NAME} SHARED ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.GUI.Qt instead.""). # forward to the new sofang module; sofa_find_package(Sofa.GUI.Qt REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.Qt). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGuiQt/CMakeLists.txt:158,message,message,158,applications/collections/deprecated/modules/SofaGuiQt/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaGuiQt/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaHaptics LANGUAGES CXX). set(HEADER_FILES; src/SofaHaptics/config.h; src/SofaHaptics/initSofaHaptics.h; ). set(SOURCE_FILES; src/SofaHaptics/initSofaHaptics.cpp; ). set(EXTRA_FILES; README.md; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Haptics instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Haptics REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Haptics). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaHaptics/CMakeLists.txt:330,message,message,330,applications/collections/deprecated/modules/SofaHaptics/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaHaptics/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaHeadlessRecorder). set(SOURCE_FILES; empty.cpp; ). add_library(${PROJECT_NAME} SHARED ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.GUI.HeadlessRecorder instead.""). # forward to the new sofang module; sofa_find_package(Sofa.GUI.HeadlessRecorder REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GUI.HeadlessRecorder). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaHeadlessRecorder/CMakeLists.txt:155,message,message,155,applications/collections/deprecated/modules/SofaHeadlessRecorder/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaHeadlessRecorder/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaHelper). set(SOURCE_FILES; empty.cpp; ). add_library(${PROJECT_NAME} SHARED ${SOURCE_FILES}); #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Helper instead.""). sofa_find_package(Sofa.Helper REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper). set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER SofaFramework) # IDE folder. sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaHelper/CMakeLists.txt:145,message,message,145,applications/collections/deprecated/modules/SofaHelper/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaHelper/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaImplicitOdeSolver LANGUAGES CXX). set(SOFAIMPLICITEODESOLVER_SRC ""src/${PROJECT_NAME}""). sofa_find_package(SofaFramework REQUIRED). set(HEADER_FILES; ${SOFAIMPLICITEODESOLVER_SRC}/config.h.in; ${SOFAIMPLICITEODESOLVER_SRC}/initSofaImplicitOdeSolver.h; ). set(SOURCE_FILES; ${SOFAIMPLICITEODESOLVER_SRC}/initSofaImplicitOdeSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.ODESolver.Backward instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.ODESolver.Backward REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.ODESolver.Backward). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaImplicitOdeSolver/CMakeLists.txt:457,message,message,457,applications/collections/deprecated/modules/SofaImplicitOdeSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaImplicitOdeSolver/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaLoader LANGUAGES CXX). set(SOFALOADER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFALOADER_SRC}/config.h.in; ${SOFALOADER_SRC}/initSofaLoader.h; ). set(SOURCE_FILES; ${SOFALOADER_SRC}/initSofaLoader.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.IO.Mesh instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.IO.Mesh REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.IO.Mesh). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaLoader/CMakeLists.txt:333,message,message,333,applications/collections/deprecated/modules/SofaLoader/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaLoader/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaMatrix VERSION 1.0 LANGUAGES CXX). sofa_find_package(Sofa.Core REQUIRED); sofa_find_package(Sofa.Component.Constraint.Lagrangian.Solver REQUIRED); sofa_find_package(Sofa.Component.LinearSolver.Direct REQUIRED); sofa_find_package(Eigen3 REQUIRED); sofa_find_package(Sofa.GUI.Qt QUIET). find_package(metis 5.1.0 EXACT QUIET); if(NOT metis_FOUND AND SOFA_ALLOW_FETCH_DEPENDENCIES); message(""SofaMatrix: DEPENDENCY metis NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is ON, fetching metis...""); include(FetchContent); FetchContent_Declare(metis; GIT_REPOSITORY https://github.com/sofa-framework/METIS; GIT_TAG v5.1.0-ModernInstall; ); FetchContent_MakeAvailable(metis); elseif (NOT metis_FOUND); message(FATAL_ERROR ""SofaMatrix: DEPENDENCY metis NOT FOUND. SOFA_ALLOW_FETCH_DEPENDENCIES is OFF and thus cannot be fetched. Install metis (version=5.1.0), or enable SOFA_ALLOW_FETCH_DEPENDENCIES to fix this issue.""); endif(). set(SOFA_MODULES; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.LinearSolver.Direct; Sofa.Core; Eigen3::Eigen; ). set(SOFAMATRIX_SRC_DIR src/${PROJECT_NAME}). set(HEADER_FILES; ${SOFAMATRIX_SRC_DIR}/config.h.in; ${SOFAMATRIX_SRC_DIR}/ComplianceMatrixExporter.h; ${SOFAMATRIX_SRC_DIR}/GlobalSystemMatrixExporter.h; ${SOFAMATRIX_SRC_DIR}/MatrixImageExporter.h; ${SOFAMATRIX_SRC_DIR}/FillReducingOrdering.h; ${SOFAMATRIX_SRC_DIR}/FillReducingOrdering.inl; ); set(SOURCE_FILES; ${SOFAMATRIX_SRC_DIR}/initSofaMatrix.cpp; ${SOFAMATRIX_SRC_DIR}/ComplianceMatrixExporter.cpp; ${SOFAMATRIX_SRC_DIR}/GlobalSystemMatrixExporter.cpp; ${SOFAMATRIX_SRC_DIR}/MatrixImageExporter.cpp; ${SOFAMATRIX_SRC_DIR}/FillReducingOrdering.cpp; ); set(README_FILES; SofaMatrix.md; ); set(MOC_FILES; ); set(MOC_HEADER_FILES; ). if (NOT Sofa.GUI.Qt_FOUND); message(NOTICE ""[SofaMatrix] Module Sofa.GUI.Qt not found: some components (GlobalSystemMatrixImage) will not be compiled""); else(); list(APPEND HEADER_FILES; ${SOFAMATRIX_SRC_DIR}/ComplianceMatr",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/CMakeLists.txt:429,message,message,429,applications/plugins/SofaMatrix/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaMatrix/CMakeLists.txt,4,"['DEPEND', 'message']","['DEPENDENCY', 'message']"
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaMisc). ## Version; set(SOFAMISC_VERSION ${SofaFramework_VERSION}). ## Subdirectories; set(SOFAMISC_MODULES; SofaMiscExtra; SofaMiscEngine; SofaMiscFem; SofaMiscForceField; SofaMiscMapping; SofaMiscSolver; SofaMiscTopology; ). foreach(module ${SOFAMISC_MODULES}); sofa_find_package(${module} QUIET); if(NOT ${module}_FOUND); string(TOUPPER module_${module} MODULE_TO_CHECK); list(APPEND LIST_MODULES_TO_CHECK ${MODULE_TO_CHECK}); endif(); endforeach(); if(LIST_MODULES_TO_CHECK); message(FATAL_ERROR; "" If you still want to use ${PROJECT_NAME}, please enable the following CMake option(s): \n""; "" ${LIST_MODULES_TO_CHECK}""; ); endif(). set(SOFAMISC_SRC src/${PROJECT_NAME}). set(HEADER_FILES; ${SOFAMISC_SRC}/config.h.in ; ${SOFAMISC_SRC}/initSofaMisc.h; ). set(SOURCE_FILES; ${SOFAMISC_SRC}/initSofaMisc.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC ${SOFAMISC_MODULES}). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaMisc/CMakeLists.txt:529,message,message,529,applications/collections/deprecated/SofaMisc/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaMisc/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaMiscEngine LANGUAGES CXX). sofa_find_package(SofaNonUniformFem REQUIRED). set(SOFAMISCENGINE_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAMISCENGINE_SRC}/config.h.in; ${SOFAMISCENGINE_SRC}/initSofaMiscEngine.h; ). set(SOURCE_FILES; ${SOFAMISCENGINE_SRC}/initSofaMiscEngine.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Engine.Analyze and Sofa.Component.Engine.Transform instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Engine.Analyze REQUIRED); sofa_find_package(Sofa.Component.Engine.Transform REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Engine.Analyze); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Engine.Transform). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscEngine/CMakeLists.txt:408,message,message,408,applications/collections/deprecated/modules/SofaMiscEngine/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscEngine/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaMiscExtra LANGUAGES CXX). set(SOFAMISCEXTRA_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAMISCEXTRA_SRC}/initSofaMiscExtra.h; ${SOFAMISCEXTRA_SRC}/config.h.in; ). set(SOURCE_FILES; ${SOFAMISCEXTRA_SRC}/initSofaMiscExtra.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Engine.Generate instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Engine.Generate REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Engine.Generate). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscExtra/CMakeLists.txt:354,message,message,354,applications/collections/deprecated/modules/SofaMiscExtra/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscExtra/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaMiscFem LANGUAGES CXX). set(SOFAMISCFEM_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAMISCFEM_SRC}/config.h.in; ${SOFAMISCFEM_SRC}/initSofaMiscFem.h; ). set(SOURCE_FILES; ${SOFAMISCFEM_SRC}/initSofaMiscFem.cpp; ); ; add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.SolidMechanics.FEM.Elastic, Sofa.Component.SolidMechanics.FEM.HyperElastic and Sofa.Component.SolidMechanics.TensorMass instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.SolidMechanics.FEM.Elastic REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.HyperElastic REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.TensorMass REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.FEM.Elastic); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.FEM.HyperElastic); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.TensorMass). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscFem/CMakeLists.txt:342,message,message,342,applications/collections/deprecated/modules/SofaMiscFem/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscFem/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaMiscForceField LANGUAGES CXX). set(SOFAMISCFORCEFIELD_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAMISCFORCEFIELD_SRC}/config.h.in; ${SOFAMISCFORCEFIELD_SRC}/initSofaMiscForceField.h; ). set(SOURCE_FILES; ${SOFAMISCFORCEFIELD_SRC}/initSofaMiscForceField.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Mass and Sofa.Component.SolidMechanics.Spring instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Mass REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.Elastic REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mass); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.FEM.Elastic). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscForceField/CMakeLists.txt:389,message,message,389,applications/collections/deprecated/modules/SofaMiscForceField/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscForceField/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaMiscMapping LANGUAGES CXX). set(SOFAMISCMAPPING_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAMISCMAPPING_SRC}/config.h.in; ${SOFAMISCMAPPING_SRC}/initSofaMiscMapping.h; ). set(SOURCE_FILES; ${SOFAMISCMAPPING_SRC}/initSofaMiscMapping.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Mapping.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Mapping REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscMapping/CMakeLists.txt:368,message,message,368,applications/collections/deprecated/modules/SofaMiscMapping/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscMapping/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaMiscSolver LANGUAGES CXX). set(SOFAMISCSOLVER_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAMISCSOLVER_SRC}/config.h.in; ${SOFAMISCSOLVER_SRC}/initSofaMiscSolver.h; ). set(SOURCE_FILES; ${SOFAMISCSOLVER_SRC}/initSofaMiscSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Core Sofa.Simulation.Core). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.ODESolver.Backward and Sofa.Component.ODESolver.Forward instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.ODESolver.Backward REQUIRED); sofa_find_package(Sofa.Component.ODESolver.Forward REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.ODESolver.Backward Sofa.Component.ODESolver.Forward). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscSolver/CMakeLists.txt:439,message,message,439,applications/collections/deprecated/modules/SofaMiscSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscSolver/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaMiscTopology LANGUAGES CXX). set(SOFAMISCTOPOLOGY_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; 	${SOFAMISCTOPOLOGY_SRC}/config.h.in; 	${SOFAMISCTOPOLOGY_SRC}/initSofaMiscTopology.h; ). set(SOURCE_FILES; 	${SOFAMISCTOPOLOGY_SRC}/initSofaMiscTopology.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Topology.Utility instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Topology.Utility REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Utility). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscTopology/CMakeLists.txt:378,message,message,378,applications/collections/deprecated/modules/SofaMiscTopology/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaMiscTopology/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaNonUniformFem LANGUAGES CXX). set(SOFANONUNIFORMFEM_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFANONUNIFORMFEM_SRC}/config.h.in; ${SOFANONUNIFORMFEM_SRC}/initSofaNonUniformFem.h; ). set(SOURCE_FILES; ${SOFANONUNIFORMFEM_SRC}/initSofaNonUniformFem.cpp; ). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Topology.Container.Grid, Sofa.Component.Topology.Container.Dynamic and Sofa.Component.SolidMechanics.FEM.NonUniform instead.""). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). # forward to the new sofang module; sofa_find_package(Sofa.Component.Topology.Container.Grid REQUIRED); sofa_find_package(Sofa.Component.Topology.Container.Dynamic REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.NonUniform REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Grid); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Container.Dynamic); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.FEM.NonUniform). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaNonUniformFem/CMakeLists.txt:313,message,message,313,applications/collections/deprecated/modules/SofaNonUniformFem/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaNonUniformFem/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaObjectInteraction LANGUAGES CXX). set(SOFAOBJECTINTERACTION_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFAOBJECTINTERACTION_SRC}/config.h.in; ${SOFAOBJECTINTERACTION_SRC}/initSofaObjectInteraction.h; ). set(SOURCE_FILES; ${SOFAOBJECTINTERACTION_SRC}/initSofaObjectInteraction.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Collision.Response.Contact instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Collision.Response.Contact REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Collision.Response.Contact). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaObjectInteraction/CMakeLists.txt:410,message,message,410,applications/collections/deprecated/modules/SofaObjectInteraction/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaObjectInteraction/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaOpenglVisual LANGUAGES CXX). set(HEADER_FILES; src/SofaOpenglVisual/config.h; src/SofaOpenglVisual/initSofaOpenglVisual.h; ); set(SOURCE_FILES; src/SofaOpenglVisual/initSofaOpenglVisual.cpp; ); set(EXTRA_FILES; README.md; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.GL.Component.Rendering2D, Sofa.GL.Component.Rendering3D and Sofa.GL.Component.Shader instead.""). # forward to the new sofang module; sofa_find_package(Sofa.GL.Component.Rendering2D REQUIRED); sofa_find_package(Sofa.GL.Component.Rendering3D REQUIRED); sofa_find_package(Sofa.GL.Component.Shader REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL.Component.Rendering2D); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL.Component.Rendering3D); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.GL.Component.Shader). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaOpenglVisual""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaOpenglVisual/CMakeLists.txt:345,message,message,345,applications/collections/deprecated/modules/SofaOpenglVisual/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaOpenglVisual/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaPhysicsAPI LANGUAGES CXX). set(SOFAPHYSICSAPI_SRC_DIR ""src/SofaPhysicsAPI""); set(HEADER_FILES; ${SOFAPHYSICSAPI_SRC_DIR}/config.h.in; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsAPI.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsOutputMesh_impl.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsSimulation.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsBindings.h; ${SOFAPHYSICSAPI_SRC_DIR}/fakegui.h; ). set(SOURCE_FILES; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsOutputMesh.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsSimulation.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsBindings.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/fakegui.cpp; ). find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.SimpleApi REQUIRED); sofa_find_package(Sofa.Component REQUIRED); sofa_find_package(Sofa.GUI.Common REQUIRED); sofa_find_package(SofaValidation QUIET). if(SofaValidation_FOUND); message(""SofaPhysicsAPI: SofaValidation has been found; enabling DataController and DataMonitor support.""); list(APPEND HEADER_FILES ; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataController_impl.h; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataMonitor_impl.h; ); list(APPEND HEADER_FILES ; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataController.cpp; ${SOFAPHYSICSAPI_SRC_DIR}/SofaPhysicsDataMonitor.cpp; ); else(); message(""SofaPhysicsAPI: SofaValidation has not been found; DataController and DataMonitor will not be supported.""); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Simulation.Graph Sofa.GUI.Common Sofa.SimpleApi); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component). if(SofaValidation_FOUND); target_link_libraries(${PROJECT_NAME} PUBLIC SofaValidation); endif(). set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${Sofa_VERSION}). ## Install rules and CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AU",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaPhysicsAPI/CMakeLists.txt:887,message,message,887,applications/projects/SofaPhysicsAPI/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/SofaPhysicsAPI/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaPreconditioner). set(SRC_ROOT src/SofaPreconditioner). # Config; set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/initSofaPreconditioner.h; ); set(SOURCE_FILES; ${SRC_ROOT}/initSofaPreconditioner.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.LinearSolver.Iterative and Sofa.Component.LinearSolver.Preconditioner instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.LinearSolver.Preconditioner REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.LinearSolver.Preconditioner). sofa_create_package_with_targets(; PACKAGE_NAME SofaPreconditioner; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS SofaPreconditioner AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaPreconditioner""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaPreconditioner/CMakeLists.txt:330,message,message,330,applications/collections/deprecated/modules/SofaPreconditioner/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaPreconditioner/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaRigid LANGUAGES CXX). set(SOFARIGID_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFARIGID_SRC}/config.h.in; ${SOFARIGID_SRC}/initSofaRigid.h; ). set(SOURCE_FILES; ${SOFARIGID_SRC}/initSofaRigid.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Mapping and Sofa.Component.SolidMechanics.Spring instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Mapping REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.Spring REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.Spring). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaRigid/CMakeLists.txt:326,message,message,326,applications/collections/deprecated/modules/SofaRigid/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaRigid/CMakeLists.txt,1,['message'],['message']
Integrability,cmake_minimum_required(VERSION 3.22); project(SofaScenes). file(GLOB_RECURSE EXAMPLES_FILES ../*.scn ../*.pscn ../*.pyscn). add_library(${PROJECT_NAME} INTERFACE ${EXAMPLES_FILES}),MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/CMakeLists.txt:152,INTERFACE,INTERFACE,152,examples/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/CMakeLists.txt,1,['INTERFACE'],['INTERFACE']
Integrability,cmake_minimum_required(VERSION 3.22); project(SofaShaders). file(GLOB_RECURSE SHADER_FILES *.vert *.frag *.geo). add_library(${PROJECT_NAME} INTERFACE ${SHADER_FILES}),MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/share/shaders/CMakeLists.txt:141,INTERFACE,INTERFACE,141,share/shaders/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/share/shaders/CMakeLists.txt,1,['INTERFACE'],['INTERFACE']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaSimpleFem LANGUAGES CXX). set(SOFASIMPLEFEM_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFASIMPLEFEM_SRC}/config.h.in; ${SOFASIMPLEFEM_SRC}/initSofaSimpleFem.h; ). set(SOURCE_FILES; ${SOFASIMPLEFEM_SRC}/initSofaSimpleFem.cpp; ). sofa_find_package(SofaBaseTopology REQUIRED); sofa_find_package(SofaBaseLinearSolver REQUIRED). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}); target_link_libraries(${PROJECT_NAME} PUBLIC SofaBaseTopology SofaBaseLinearSolver). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Diffusion and Sofa.Component.SolidMechanics.FEM.Elastic instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Diffusion REQUIRED); sofa_find_package(Sofa.Component.SolidMechanics.FEM.Elastic REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Diffusion); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.SolidMechanics.FEM.Elastic). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ). ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaSimpleFem/CMakeLists.txt:535,message,message,535,applications/collections/deprecated/modules/SofaSimpleFem/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaSimpleFem/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaSparseSolver LANGUAGES CXX). set(SRC_ROOT src/SofaSparseSolver). # Sources; set(HEADER_FILES; ${SRC_ROOT}/config.h.in; ${SRC_ROOT}/initSofaSparseSolver.h; ); set(SOURCE_FILES; ${SRC_ROOT}/initSofaSparseSolver.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.LinearSolver.Iterative and Sofa.Component.LinearSolver.Direct instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.LinearSolver.Direct REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.LinearSolver.Direct). sofa_create_package_with_targets(; PACKAGE_NAME SofaSparseSolver; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS SofaSparseSolver AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaSparseSolver""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaSparseSolver/CMakeLists.txt:337,message,message,337,applications/collections/deprecated/modules/SofaSparseSolver/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaSparseSolver/CMakeLists.txt,1,['message'],['message']
Integrability,"cmake_minimum_required(VERSION 3.22); project(SofaTopologyMapping LANGUAGES CXX). set(SOFATOPOLOGYMAPPING_SRC ""src/${PROJECT_NAME}""). set(HEADER_FILES; ${SOFATOPOLOGYMAPPING_SRC}/config.h.in; ${SOFATOPOLOGYMAPPING_SRC}/initSofaTopologyMapping.h; ). set(SOURCE_FILES; ${SOFATOPOLOGYMAPPING_SRC}/initSofaTopologyMapping.cpp; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). #message(WARNING ""${PROJECT_NAME} module is deprecated. It will be removed at v23.06. Use Sofa.Component.Topology.Mapping and Sofa.Component.Mapping instead.""). # forward to the new sofang module; sofa_find_package(Sofa.Component.Topology.Mapping REQUIRED); sofa_find_package(Sofa.Component.Mapping REQUIRED); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Topology.Mapping); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Component.Mapping). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""${PROJECT_NAME}""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaTopologyMapping/CMakeLists.txt:396,message,message,396,applications/collections/deprecated/modules/SofaTopologyMapping/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/modules/SofaTopologyMapping/CMakeLists.txt,1,['message'],['message']
Integrability,cmake_minimum_required(VERSION 3.22); project(getDeprecatedComponents). ## Dependencies; find_package(SofaFramework REQUIRED). add_executable(${PROJECT_NAME} main.cpp); target_link_libraries(${PROJECT_NAME} Sofa.Helper); ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/getDeprecatedComponents/CMakeLists.txt:75,Depend,Dependencies,75,applications/projects/getDeprecatedComponents/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/getDeprecatedComponents/CMakeLists.txt,1,['Depend'],['Dependencies']
Integrability,"cmake_minimum_required(VERSION 3.22); project(runSofa). ###################################; # Generate plugin_list.conf.default; include(cmake/GeneratePluginConfig.cmake); if(MSVC); # plugins are located in bin/; set(_pluginLocation ""bin""); else(); # plugins are located in lib/; set(_pluginLocation ""lib""); endif(); set(_configPluginFileName plugin_list.conf); set(_defaultConfigPluginFileName ""${_configPluginFileName}.default""); set(_defaultConfigPluginFilePath ""${CMAKE_BINARY_DIR}/${_pluginLocation}/${_defaultConfigPluginFileName}""); sofa_generate_plugin_config(${_defaultConfigPluginFilePath}); message(""Write Plugin list at ${_defaultConfigPluginFilePath}""); configure_file(${_defaultConfigPluginFilePath} ${PROJECT_BINARY_DIR}/${_defaultConfigPluginFileName} COPYONLY); install(FILES ""${_defaultConfigPluginFilePath}"" DESTINATION ${_pluginLocation}/ COMPONENT applications); ###################################. sofa_find_package(Sofa.Component.Playback QUIET). sofa_find_package(Sofa.Simulation.Graph REQUIRED); sofa_find_package(Sofa.GUI.Common REQUIRED); sofa_find_package(Sofa.GUI.Batch REQUIRED); sofa_find_package(SceneChecking REQUIRED). set(HEADER_FILES; runSofaValidation.h; ); set(SOURCE_FILES; Main.cpp; ). if(Sofa.Component.Playback_FOUND); list(APPEND SOURCE_FILES runSofaValidation.cpp); else(); list(APPEND SOURCE_FILES runSofaNoValidation.cpp); endif(). set(RESOURCE_FILES; resources/docs/runsofa.html; ${PROJECT_BINARY_DIR}/${_defaultConfigPluginFileName}; ); if(APPLE); set(RC_FILES ""${CMAKE_CURRENT_SOURCE_DIR}/runSofa.icns""); set_source_files_properties(${RC_FILES} PROPERTIES MACOSX_PACKAGE_LOCATION ""Resources""); else(); set(RC_FILES ""${CMAKE_CURRENT_SOURCE_DIR}/runSofa.rc""); endif(). if(APPLE AND SOFA_BUILD_APP_BUNDLE); add_executable(${PROJECT_NAME} MACOSX_BUNDLE ${RC_FILES} ${RESOURCE_FILES} ${HEADER_FILES} ${SOURCE_FILES}); set_target_properties(${PROJECT_NAME} PROPERTIES MACOSX_BUNDLE_INFO_PLIST ""${CMAKE_CURRENT_SOURCE_DIR}/runSofa.plist""); else(); add_execu",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/runSofa/CMakeLists.txt:603,message,message,603,applications/projects/runSofa/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/runSofa/CMakeLists.txt,1,['message'],['message']
Integrability,com/sofa-framework/sofa/pull/3931); - [all] Add DeprecatedData and RemovedData [#3934](https://github.com/sofa-framework/sofa/pull/3934); - [Helper] add the experimental filesystem library for gcc-8 compilation [#3944](https://github.com/sofa-framework/sofa/pull/3944); - [FEM.Elastic] Implement buildStiffnessMatrix in HexahedralFEMForceField [#3969](https://github.com/sofa-framework/sofa/pull/3969); - [Spring] Implement buildStiffnessMatrix for SpringForceField [#3970](https://github.com/sofa-framework/sofa/pull/3970); - [MechanicalLoad] Implement buildStiffnessMatrix for LinearForceField [#3973](https://github.com/sofa-framework/sofa/pull/3973); - [Collision.Response.Contact] Implement buildStiffnessMatrix in PenalityContactForceField [#3974](https://github.com/sofa-framework/sofa/pull/3974); - [FEM.Elastic] Implement buildStiffnessMatrix for TetrahedralCorotationalFEMForceField [#3981](https://github.com/sofa-framework/sofa/pull/3981); - [LinearSystem.Direct] More details in the error message [#3985](https://github.com/sofa-framework/sofa/pull/3985); - [FEM.Linear] Implement buildStiffnessMatrix and addKToMatrix for TriangularFEMForceField [#3991](https://github.com/sofa-framework/sofa/pull/3991); - [Spring] Implement buildStiffnessMatrix for AngularSpringForceField [#3993](https://github.com/sofa-framework/sofa/pull/3993); - [MechanicalLoad] Implement buildStiffnessMatrix for ConicalForceField [#3997](https://github.com/sofa-framework/sofa/pull/3997); - [MechanicalLoad] Restore computation of derivatives in DiagonalVelocityDampingForceField [#3999](https://github.com/sofa-framework/sofa/pull/3999); - [SofaCUDA] Implement buildStiffnessMatrix and buildDampingMatrix in TLED [#4000](https://github.com/sofa-framework/sofa/pull/4000); - [MechanicalLoad] Implement buildStiffnessMatrix in EdgePressureForceField [#4004](https://github.com/sofa-framework/sofa/pull/4004); - [MechanicalLoad] Implement buildStiffnessMatrix in EllipsoidForceField [#4005](https://github.com/sof,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:27225,message,message,27225,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"cription for mouse interaction with springs [#3122]( https://github.com/sofa-framework/sofa/pull/3122 ); - [HyperElastic] Add draw method to StandardTetrahedralFEMForceField [#2838]( https://github.com/sofa-framework/sofa/pull/2838 ); - [HyperElastic] Introduce example scene for StandardTetrahedralFEMForceField [#2857]( https://github.com/sofa-framework/sofa/pull/2857 ); - [LinearSolver.Direct] LU solver can be templated to CRSMat3x3 [#2862]( https://github.com/sofa-framework/sofa/pull/2862 ); - [LinearSolver.Direct] Unit tests around SparseLDLSolver [#3050]( https://github.com/sofa-framework/sofa/pull/3050 ); - [LinearSolver] Introduce Eigen solvers [#2926]( https://github.com/sofa-framework/sofa/pull/2926 ); - [Regression] Test linear solvers for regression [#2776]( https://github.com/sofa-framework/sofa/pull/2776 ); - [SceneUtility] Move RequiredPlugin to Sofa.SimulationCore [#2849]( https://github.com/sofa-framework/sofa/pull/2849 ); - [Simulation.Core] Special message if extension is Python [#2998]( https://github.com/sofa-framework/sofa/pull/2998 ); - [Sofa.Config][MSVC] Change SIMD cmake option and flags [#2652]( https://github.com/sofa-framework/sofa/pull/2652 ); - [Sofa.GL] Add method drawScaledTetrahedron [#2586]( https://github.com/sofa-framework/sofa/pull/2586 ); - [Sofa.GUI.Common] Change the current GUI by default choice [#2979]( https://github.com/sofa-framework/sofa/pull/2979 ); - [Sofa.LinearAlgebra] Test CRS product compared to Eigen [#2839]( https://github.com/sofa-framework/sofa/pull/2839 ); - [SofaCore] By default, state accessors get the bbox of their states [#2780]( https://github.com/sofa-framework/sofa/pull/2780 ); - [SofaDefaultType] Speedup MapMapSparseMatrix [#2641]( https://github.com/sofa-framework/sofa/pull/2641 ); - [SofaDeformable] Spring lengths can be a list [#2602]( https://github.com/sofa-framework/sofa/pull/2602 ); - [SofaEngine] BoxROI support for 2d and 1d types [#2600]( https://github.com/sofa-framework/sofa/pull/2600 ); - [So",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:99552,message,message,99552,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"ct description [#862]( https://github.com/sofa-framework/sofa/pull/862 ); - [SofaMeshCollision] TriangleModel optimization when topology changes occur [#839]( https://github.com/sofa-framework/sofa/pull/839 ); - [SofaSparseSolver] ADD saveMatrixToFile to SparseLDLSolver [#845]( https://github.com/sofa-framework/sofa/pull/845 ); - [SofaTest] ADD a PrintTo method so test failure shows human readable informations. [#730]( https://github.com/sofa-framework/sofa/pull/730 ); - [VisualModel] Improve the messages when loading mesh inside VisualModel [#778]( https://github.com/sofa-framework/sofa/pull/778 ); - [WriteState] minor fix with the time attribute, default values [#776]( https://github.com/sofa-framework/sofa/pull/776 ). **Plugins / Projects**; - [Geomagic] ADD an inputForceFeedback data in Geomagic [#648]( https://github.com/sofa-framework/sofa/pull/648 ); - [Geomagic] Fix dll export and some enhancements [#786]( https://github.com/sofa-framework/sofa/pull/786 ); - [MultiThreading] removed the boost thread dependency [#701]( https://github.com/sofa-framework/sofa/pull/701 ); - [MultiThreading] New components and Task scheduler classes refactoring [#745]( https://github.com/sofa-framework/sofa/pull/745 ); - [MultiThreading] Add Image plugin Data types in DataExchange component [#770]( https://github.com/sofa-framework/sofa/pull/770 ); - [MultiThreading] TaskScheduler Interface [#775]( https://github.com/sofa-framework/sofa/pull/775 ); - [runSofa] Add data field value change on mouse move [#750]( https://github.com/sofa-framework/sofa/pull/750 ); - [SofaCarving] Refresh and enhancement [#712]( https://github.com/sofa-framework/sofa/pull/712 ); - [SofaCarving] plugin enhancement [#787]( https://github.com/sofa-framework/sofa/pull/787 ); - [SofaPython] ADD forwarding of onMouseMove event into the script controller [#731]( https://github.com/sofa-framework/sofa/pull/731 ); - [SofaPython] ADD: Bindings for BoundingBox [#736]( https://github.com/sofa-framework/sofa/pull/7",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:281924,depend,dependency,281924,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,"ctory(plugin applications/plugins/SceneCreator SceneCreator OFF; WHEN_TO_SHOW ""NOT SOFA_BUILD_SCENECREATOR AND NOT SOFA_BUILD_TESTS AND NOT SOFA_BUILD_TUTORIALS AND NOT SOFA_BUILD_RELEASE_PACKAGE""; VALUE_IF_HIDDEN ""ON""). ## Plugins; add_subdirectory(applications/plugins). ## Applications; add_subdirectory(applications/projects). # Tutorial add subdirectory; if(SOFA_BUILD_TUTORIALS); add_subdirectory(applications/tutorials); endif(). ## SOFA scenes; option(SOFA_BUILD_ADD_SCENES ""Add SOFA scenes as a project of the build."" OFF); if (SOFA_BUILD_ADD_SCENES); add_subdirectory(examples); endif(). ## SOFA shaders; option(SOFA_BUILD_ADD_SHADERS ""Add SOFA shaders as a project of the build."" OFF); if (SOFA_BUILD_ADD_SHADERS); add_subdirectory(share/shaders); endif(). ## Build external projects at the same time; set(SOFA_EXTERNAL_DIRECTORIES """" CACHE STRING ""list of paths separated by ';'""); if(NOT ""${SOFA_EXTERNAL_DIRECTORIES}"" STREQUAL """"); foreach(dir ${SOFA_EXTERNAL_DIRECTORIES}); get_filename_component(name ${dir} NAME) # Get the name of the actual directory; message(""Adding external directory: ${name} (${dir})""); add_subdirectory(${dir} ""${CMAKE_CURRENT_BINARY_DIR}/external_directories/${name}""); endforeach(); endif(). ## Custom; if(EXISTS ""${CMAKE_CURRENT_LIST_DIR}/custom.cmake""); message(""Adding custom file""); include( ""custom.cmake"" ); endif(). ## IDE directories; # Sofa.Component; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES ""Sofa.Component.*"" AND NOT target MATCHES "".*_relocatable_install""); set_target_properties(${target} PROPERTIES FOLDER Sofa.Component) # IDE folder; endif(); endforeach(); # Testing; if(TARGET Sofa.Testing) # No need to search for test targets if tests are not enabled; sofa_get_all_targets(all_targets); foreach(target ${all_targets}); if(target MATCHES "".*_test"" OR target MATCHES "".*_simutest""); set_target_properties(${target} PROPERTIES FOLDER Testing) # IDE folder; endif(); endforeach(); endif(); ##. ## I",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:9030,message,message,9030,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,1,['message'],['message']
Integrability,"dashboard servers); # that is using, by default at that time, a libstdc++ that did not fully implement c++11; if(APPLE AND ${CMAKE_SYSTEM_NAME} MATCHES ""Darwin"" AND CMAKE_SYSTEM_VERSION VERSION_LESS ""10.9"" AND ${CMAKE_CXX_COMPILER_ID} MATCHES ""Clang"" ); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-stdlib=libc++""); endif(). if(CMAKE_SYSTEM_NAME STREQUAL Linux AND NOT CMAKE_BUILD_TYPE MATCHES ""Debug""); target_compile_definitions(${PROJECT_NAME} PUBLIC ""NDEBUG""); # On Windows and MacOS, NDEBUG and _DEBUG are automatically; # set in the default c/cxx flags of the right configurations; endif(); if(MSVC); # Increase Number of Sections in .Obj file; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/bigobj""); if(SOFA_VECTORIZE); message(""SOFA_VECTORIZE option is deprecated and has been split between SOFA_ENABLE_SIMD and SOFA_ENABLE_FAST_MATH. These 2 options will be enabled.""); set(SOFA_ENABLE_SIMD ON); set(SOFA_ENABLE_FAST_MATH ON); endif(); # SIMD flags; if(SOFA_ENABLE_SIMD); include(find_avx); MSVC_CHECK_FOR_AVX() # search for availability of AVX2 (otherwise set to AVX); if (HAVE_AVX2_EXTENSIONS); message(""Your CPU supports AVX2 SIMD. Using flags: ${AVX_FLAGS}""); elseif(HAVE_AVX_EXTENSIONS); message(""Your CPU supports only AVX SIMD. Using flags: ${AVX_FLAGS}""); else(); message(""Your CPU does not support AVX SIMD."") # SSE2 is the default when x64 is set; endif(); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""${AVX_FLAGS}""); endif(); if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/fp:fast""); endif(); endif(). # Use Release flags for MinSizeRel and RelWithDebInfo build types:; set_target_properties(${PROJECT_NAME} PROPERTIES; MAP_IMPORTED_CONFIG_MINSIZEREL Release; MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release; ); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:RELEASE>:${SOFACONFIG_COMPILE_OPTIONS_RELEASE}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""$<$<CONFIG:DEBUG>:${SOFACONFIG_COMPILE_OPTIONS_DEBUG}>""); target_compile_options(${PROJECT_NAME} PUBLIC ""${SOF",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:12454,message,message,12454,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['message'],['message']
Integrability,"der; copyright law: that is to say, a work containing the Library or a; portion of it, either verbatim or with modifications and/or translated; straightforwardly into another language. (Hereinafter, translation is; included without limitation in the term ""modification"".). ""Source code"" for a work means the preferred form of the work for; making modifications to it. For a library, complete source code means; all the source code for all modules it contains, plus any associated; interface definition files, plus the scripts used to control compilation; and installation of the library. Activities other than copying, distribution and modification are not; covered by this License; they are outside its scope. The act of; running a program using the Library is not restricted, and output from; such a program is covered only if its contents constitute a work based; on the Library (independent of the use of the Library in a tool for; writing it). Whether that is true depends on what the Library does; and what the program that uses the Library does. 1. You may copy and distribute verbatim copies of the Library's; complete source code as you receive it, in any medium, provided that; you conspicuously and appropriately publish on each copy an; appropriate copyright notice and disclaimer of warranty; keep intact; all the notices that refer to this License and to the absence of any; warranty; and distribute a copy of this License along with the; Library. You may charge a fee for the physical act of transferring a copy,; and you may at your option offer warranty protection in exchange for a; fee. 2. You may modify your copy or copies of the Library or any portion; of it, thus forming a work based on the Library, and copy and; distribute such modifications or work under the terms of Section 1; above, provided that you also meet all of these conditions:. a) The modified work must itself be a software library. b) You must cause the files modified to carry prominent notices; stating that",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md:7716,depend,depends,7716,LICENSE-LGPL.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/LICENSE-LGPL.md,2,['depend'],['depends']
Integrability,der] ADD frameskip option to headless recorder [#615]( https://github.com/sofa-framework/sofa/pull/615 ); - [HeadlessRecorder] Remove avcodec dependency in HeadlessRecorder.h [#752]( https://github.com/sofa-framework/sofa/pull/752 ); - [runSofa] Save&restore the scenegraph state when live-code & add info panel [#657]( https://github.com/sofa-framework/sofa/pull/657 ); - [SofaPython] PythonScriptDataEngine (PSDE) [#583]( https://github.com/sofa-framework/sofa/pull/583 ); - [SofaPython] Small fix & new features. [#656]( https://github.com/sofa-framework/sofa/pull/656 ). **Tools**; - [tools] FIX sofa-launcher stdout [#592]( https://github.com/sofa-framework/sofa/pull/592 ). ### Bug Fixes. **Modules**; - [All] FIX VS2017 build (Windows) [#630]( https://github.com/sofa-framework/sofa/pull/630 ); - [All] Fix computeBBox() [#634]( https://github.com/sofa-framework/sofa/pull/634 ); - [All] FIX warnings [#584]( https://github.com/sofa-framework/sofa/pull/584 ); - [All] Various small changes in error messages & bugfix from defrost branches [#660]( https://github.com/sofa-framework/sofa/pull/660 ); - [SofaConstraint] FIX: Moving semicolon under preprocessor define [#680]( https://github.com/sofa-framework/sofa/pull/680 ); - **[SofaEngine]** FIX Bug in BoxROI that is not properly initialized [#627]( https://github.com/sofa-framework/sofa/pull/627 ); - **[SofaFramework]** Fix plugin list configuration [#645]( https://github.com/sofa-framework/sofa/pull/645 ); - [SofaGraphComponent] FIX SceneChecker_test + ADD alias test [#711]( https://github.com/sofa-framework/sofa/pull/711 ); - [SofaGraphComponent] FIX SceneCheck build on MacOS [#719]( https://github.com/sofa-framework/sofa/pull/719 ); - [SofaGuiQt] FIX missing resources [#758]( https://github.com/sofa-framework/sofa/pull/758 ); - [SofaGeneralEngine] FIX disabled tests [#675]( https://github.com/sofa-framework/sofa/pull/675 ); - **[SofaHelper]** More robust method to test end of string [#617]( https://github.com/sofa-framework,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:296213,message,messages,296213,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['messages']
Integrability,"dif(). sofa_find_package(Sofa.GUI.Qt QUIET); if(Sofa.GUI.Qt_FOUND); list(APPEND HEADER_FILES sofa/gpu/gui/CudaDataWidget.h); list(APPEND SOURCE_FILES sofa/gpu/gui/CudaDataWidget.cpp); endif(). find_package(SofaDistanceGrid QUIET); if(SofaDistanceGrid_FOUND); sofa_find_package(MiniFlowVR QUIET); if(MiniFlowVR_FOUND); message(STATUS ""SofaCUDA: MiniFlowVR enabled.""); else(); message(STATUS ""SofaCUDA: MiniFlowVR was not enabled, therefore some feature of CudaDistanceGridCollisionModel will not be compiled.""); endif(). list(APPEND HEADER_FILES; sofa/gpu/cuda/CudaDistanceGridCollisionModel.h; sofa/gpu/cuda/CudaContactMapper.h; sofa/gpu/cuda/CudaCollisionDetection.h). list(APPEND SOURCE_FILES; sofa/gpu/cuda/CudaDistanceGridCollisionModel.cpp; sofa/gpu/cuda/CudaCollisionDistanceGrid.cpp; sofa/gpu/cuda/CudaCollisionDetection.cpp). list(APPEND CUDA_SOURCES; sofa/gpu/cuda/CudaContactMapper.cu; sofa/gpu/cuda/CudaCollisionDetection.cu); else(); message(STATUS ""SofaCUDA: SofaDistanceGrid was not enabled, therefore CudaDistanceGridCollisionModel will not be compiled.""); endif(). find_package(SofaSphFluid QUIET); if(SofaSphFluid_FOUND); list(APPEND HEADER_FILES; sofa/gpu/cuda/CudaParticleSource.h; sofa/gpu/cuda/CudaParticleSource.inl; sofa/gpu/cuda/CudaSPHFluidForceField.h; sofa/gpu/cuda/CudaSPHFluidForceField.inl; sofa/gpu/cuda/CudaParticlesRepulsionForceField.h; sofa/gpu/cuda/CudaParticlesRepulsionForceField.inl; sofa/gpu/cuda/CudaSpatialGridContainer.h; sofa/gpu/cuda/CudaSpatialGridContainer.inl; ); list(APPEND SOURCE_FILES; sofa/gpu/cuda/CudaParticleSource.cpp; sofa/gpu/cuda/CudaSPHFluidForceField.cpp; sofa/gpu/cuda/CudaParticlesRepulsionForceField.cpp; sofa/gpu/cuda/CudaSpatialGridContainer.cpp; ); list(APPEND CUDA_SOURCES; sofa/gpu/cuda/CudaParticleSource.cu; sofa/gpu/cuda/CudaSPHFluidForceField.cu; sofa/gpu/cuda/CudaParticlesRepulsionForceField.cu; sofa/gpu/cuda/CudaSpatialGridContainer.cu; ); message(STATUS ""SofaCUDA: optional dependency to SofaSphFluid found. ""); else(); me",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:15604,message,message,15604,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,1,['message'],['message']
Integrability,"directories(${BULLET_LIBRARY_DIRS}). message(STATUS ""BULLET_INCLUDE_DIRS: ${BULLET_INCLUDE_DIRS}""); message(STATUS ""BULLET_LIBRARIES: ${BULLET_LIBRARIES}""). # HACD (present in the lib dir of bullet) is not set by FindBullet; # this should set the correct path; set(HACD_LIB """"); if(BULLET_LIBRARIES); list(GET BULLET_LIBRARIES 0 first_bullet_lib_path); get_filename_component(bullet_lib_dir ""${first_bullet_lib_path}"" DIRECTORY); if(WIN32); set(HACD_LIB ""${bullet_lib_dir}/HACD.lib""); elseif(UNIX AND NOT APPLE); # on Ubuntu, this is installed with libbullet-extras-dev; set(HACD_LIB ""${bullet_lib_dir}/libHACD.so""); else(); # MacOS ? todo; endif(); endif(). if(EXISTS ""${HACD_LIB}""); message(STATUS ""HACD_LIB: ${HACD_LIB}""); else(); message(SEND_ERROR ""Could not find HACD, necessary to build ConvexHull."" ); endif(). if(Compliant_FOUND); list(APPEND SOURCE_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullCompliantContacts.cpp); else(); message(STATUS ""BulletCollisionDetection: could not find Compliant, won't build BulletConvexHullCompliantContacts""); endif(). if(LMConstraint_FOUND); list(APPEND HEADER_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContacts.cpp); list(APPEND SOURCE_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContacts.cpp); else(); message(STATUS ""BulletCollisionDetection: could not find LMConstraint, won't build BulletConvexHullContacts""); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${README_FILES}); target_link_libraries(${PROJECT_NAME} Sofa.Component.Collision ${BULLET_LIBRARIES} ${HACD_LIB} CollisionOBBCapsule Sofa.GL). if(Compliant_FOUND); target_link_libraries(${PROJECT_NAME} Compliant); endif(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests wil",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt:3425,message,message,3425,applications/plugins/BulletCollisionDetection/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt,1,['message'],['message']
Integrability,"distributed under the terms of Sections; 1 and 2 above on a medium customarily used for software interchange; or,. b) Accompany it with a written offer, valid for at least three; years, to give any third party, for a charge no more than your; cost of physically performing source distribution, a complete; machine-readable copy of the corresponding source code, to be; distributed under the terms of Sections 1 and 2 above on a medium; customarily used for software interchange; or,. c) Accompany it with the information you received as to the offer; to distribute corresponding source code. (This alternative is; allowed only for noncommercial distribution and only if you; received the program in object code or executable form with such; an offer, in accord with Subsection b above.). The source code for a work means the preferred form of the work for; making modifications to it. For an executable work, complete source; code means all the source code for all modules it contains, plus any; associated interface definition files, plus the scripts used to; control compilation and installation of the executable. However, as a; special exception, the source code distributed need not include; anything that is normally distributed (in either source or binary; form) with the major components (compiler, kernel, and so on) of the; operating system on which the executable runs, unless that component; itself accompanies the executable. If distribution of executable or object code is made by offering; access to copy from a designated place, then offering equivalent; access to copy the source code from the same place counts as; distribution of the source code, even though third parties are not; compelled to copy the source along with the object code. 4. You may not copy, modify, sublicense, or distribute the Program; except as expressly provided under this License. Any attempt; otherwise to copy, modify, sublicense or distribute the Program is; void, and will automatically terminate your ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt:8201,interface,interface,8201,applications/projects/LICENSE.GPL.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/projects/LICENSE.GPL.txt,6,['interface'],['interface']
Integrability,dows/VS: Remove warnings flags from definitions [#1368]( https://github.com/sofa-framework/sofa/pull/1368 ); - [SofaGuiQt] Fix compilation for SOFA_DUMP_VISITOR_INFO [#1415]( https://github.com/sofa-framework/sofa/pull/1415 ); - [SofaGuiQt] Fix node graph [#1424]( https://github.com/sofa-framework/sofa/pull/1424 ); - [SofaHeadlessRecorder] Update headless recorder to use the new ffmpeg recorder [#1396]( https://github.com/sofa-framework/sofa/pull/1396 ); - **[SofaHelper]** AdvancedTimer wasn't using the good timer ids for the label assignments [#1244]( https://github.com/sofa-framework/sofa/pull/1244 ); - **[SofaHelper]** Fix unloading with PluginManager [#1274]( https://github.com/sofa-framework/sofa/pull/1274 ); - **[SofaHelper]** Fix fixed_array compilation with VS2019 [#1426]( https://github.com/sofa-framework/sofa/pull/1426 ); - **[SofaKernel]** Fix hexahedra detection in BoxROI [#1417]( https://github.com/sofa-framework/sofa/pull/1417 ); - **[SofaKernel]** Fix minor bug in BoxROI and add warning message in RestShapeSpringsForceField [#1391]( https://github.com/sofa-framework/sofa/pull/1391 ); - **[SofaKernel]** Fixes a bug where the camera was not moving with the Qt viewer [#1377]( https://github.com/sofa-framework/sofa/pull/1377 ); - **[SofaKernel]** Improve error message when a component cannot be created. [#1332]( https://github.com/sofa-framework/sofa/pull/1332 ); - **[SofaKernel]** Remove the installation of external system libraries [#1387]( https://github.com/sofa-framework/sofa/pull/1387 ); - **[SofaKernel]** Set default visibility to SOFA_EXPORT_DYNAMIC_LIBRARY [#1410]( https://github.com/sofa-framework/sofa/pull/1410 ); - [SofaMiscTopology] Fix bug in TopologicalChangeProcessor [#1247]( https://github.com/sofa-framework/sofa/pull/1247 ); - **[SofaSimpleFem]** Small Fix [#1403]( https://github.com/sofa-framework/sofa/pull/1403 ); - **[SofaSimulationCore]** FIX resizing of bboxes in UpdateBoundingBoxVisitor [#1268]( https://github.com/sofa-framework/so,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:235987,message,message,235987,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"e resulting work is called a ""modified version"" of the; earlier work or a work ""based on"" the earlier work. A ""covered work"" means either the unmodified Program or a work based; on the Program. To ""propagate"" a work means to do anything with it that, without; permission, would make you directly or secondarily liable for; infringement under applicable copyright law, except executing it on a; computer or modifying a private copy. Propagation includes copying,; distribution (with or without modification), making available to the; public, and in some countries other activities as well. To ""convey"" a work means any kind of propagation that enables other; parties to make or receive copies. Mere interaction with a user through; a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays ""Appropriate Legal Notices""; to the extent that it includes a convenient and prominently visible; feature that (1) displays an appropriate copyright notice, and (2); tells the user that there is no warranty for the work (except to the; extent that warranties are provided), that licensees may convey the; work under this License, and how to view a copy of this License. If; the interface presents a list of user commands or options, such as a; menu, a prominent item in the list meets this criterion. 1. Source Code. The ""source code"" for a work means the preferred form of the work; for making modifications to it. ""Object code"" means any non-source; form of a work. A ""Standard Interface"" means an interface that either is an official; standard defined by a recognized standards body, or, in the case of; interfaces specified for a particular programming language, one that; is widely used among developers working in that language. The ""System Libraries"" of an executable work include anything, other; than the work as a whole, that (a) is included in the normal form of; packaging a Major Component, but which is not part of that Major; Component, and (b) serve",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:23828,interface,interface,23828,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['interface'],['interface']
Integrability,"e(STATUS ""${PROJECT_NAME}: Qt6 Charts not found. No chart nor Profile will be compiled""); endif(). # # QDocBrowser; find_package(Qt6 COMPONENTS WebEngineCore QUIET) # if found, then QDocBrowser will be ON by default; option(SOFA_GUI_QT_ENABLE_QDOCBROWSER ""Build the QDocBrowser. QtWebEngine is needed."" ${Qt6WebEngineCore_FOUND}); if(SOFA_GUI_QT_ENABLE_QDOCBROWSER); # WebEngineCore needs Positioning WebChannel at cmake configure step (?); sofa_find_package(Qt6 COMPONENTS Positioning WebChannel WebEngineCore WebEngineWidgets REQUIRED BOTH_SCOPES); set(SOFA_GUI_QT_TARGETS ${SOFA_GUI_QT_TARGETS} Qt::WebEngineCore Qt::WebEngineWidgets); endif(); endif(). find_package(Sofa.GL QUIET). # QtViewer and QGLViewer; if(Sofa.GL_FOUND); # QtViewer; option(SOFA_GUI_QT_ENABLE_QTVIEWER ""Compile the QtViewer for the Qt GUI"" ON). # QGLViewer; option(SOFA_GUI_QT_ENABLE_QGLVIEWER ""Compile the QGLViewer for the Qt GUI"" ON). if(SOFA_GUI_QT_ENABLE_QGLVIEWER); find_package(QGLViewer); if(NOT QGLViewer_FOUND); add_subdirectory(libQGLViewer/QGLViewer); endif(); endif(); else(); message(STATUS ""Sofa.GUI.Qt: Sofa.GL has not been activated, QtViewer/QGLViewer will be disabled.""); set(SOFA_GUI_QT_ENABLE_QTVIEWER OFF); set(SOFA_GUI_QT_ENABLE_QGLVIEWER OFF); endif(). # VSync; option(SOFA_GUI_QT_ENABLE_VSYNC ""Enable vertical refresh sync"" OFF). # Qt native menu; set(DEFAULT_SOFA_GUI_QT_ENABLE_NATIVE_MENU ON); if(${CMAKE_SYSTEM_NAME} MATCHES ""Darwin""); set(DEFAULT_SOFA_GUI_QT_ENABLE_NATIVE_MENU OFF); endif(); option(SOFA_GUI_QT_ENABLE_NATIVE_MENU ""Enable Qt to use the operating system's native menu for the Qt GUI"" ${DEFAULT_SOFA_GUI_QT_ENABLE_NATIVE_MENU}). # NodeEditor; option(SOFA_GUI_QT_ENABLE_NODEGRAPH ""Build the Node graph representation. NodeEditor library is needed."" OFF); if(SOFA_GUI_QT_ENABLE_NODEGRAPH); sofa_find_package(NodeEditor REQUIRED BOTH_SCOPES); endif(). # FFMPEG_exec; sofa_find_package(FFMPEG_exec BOTH_SCOPES). # TinyXML; if(SOFA_DUMP_VISITOR_INFO); sofa_find_package(TinyXML2 REQUIR",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt:2962,message,message,2962,Sofa/GUI/Qt/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/CMakeLists.txt,1,['message'],['message']
Integrability,"e. automatic initialization of Node; - Node::isInitialized(), not used anymore; - [Flexible]; - clean relativeStrainMapping. ### Moved files. - move CImg from extlibs to image plugin extlibs. ### Documentation. - Add the contribution and guidelines : **CONTRIBUTING.md** and **GUIDELINES.md**; - Add the configuration required (ex: C++, compiler versions); - Add a page to use SOFA in Matlab; - Improve Logger documentation; - Add a page to use SOFA in Matlab. ____________________________________________________________. ## [v16.08]( https://github.com/sofa-framework/sofa/tree/v16.08 ). **Last commit: on Jul 28, 2016** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v15.12...v16.08 ). ### New features. - SOFA on GitHub - [https://github.com/sofa-framework/sofa]( https://github.com/sofa-framework/sofa ); - creation of a RigidScale plugin: implementing mappings, especially allowing to get the DOF with Rigid+Scale type, while reusing affine DOF (Rigid+Scale+Shear) already implemented in Flexible; - creation of a LeapMotion plugin: allowing to integrate a Leap in your SOFA simulation; - add the DrawTool: DrawTool is an interface, describing an API to display primitives on screen. For now, only the OpenGL (fixed-pipeline version) implementation has been made.; - add a Logger; - add the diffusion effect in SOFA (heat transfer); - SOFA_USE_MASK compilation variable to activate or de-activate the masks in SOFA; - DataTracker: simple and elegant way to track Data in Engine; - extlibs: update cimg to version 1.7.3; - Add guidelines for contributions in CONTRIBUTING.md. ### Moved files. - Kernel modules of SOFA (SofaFramework, SofaBase, SofaCommon and SofaSimulation) have been moved to one common module SofaKernel, located at _sofa_root/SofaKernel_. SofaKernel is a pure LGPL module.; - code in _sofa_root/modules/sofa/simulation/_ has been splitted into three modules of SofaKernel: SofaSimulationCommon, SofaSimulationTree, SofaSimulationGraph; - MOVE the SofaPardiso mo",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:341489,integrat,integrate,341489,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,2,"['integrat', 'interface']","['integrate', 'interface']"
Integrability,"e.bat  in Windows ; to replace TestPlugin; with MyPlugin in all; the file; names and their content:; On Unix:; utils/changeClassName.bash TestPlugin MyPlugin. On Windows:; utils\changeClassName.bat TestPlugin MyPlugin; cd examples; ..\utils\changeClassName.bat TestPlugin MyPlugin; cd ../doc/; ..\utils\changeClassName.bat TestPlugin MyPlugin  This can take some time !. At this point, you may want to add the plugin directory to svn.; You can also reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_TestPlugin ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_TestPlugin); {; usePlugin(TestPlugin) } . if your plugin depends on other plugins, edit file TestPlugin-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. TestPlugin.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initTestPlugin.h. a template of user documentation is found in TestPlugin.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the examples are in examples/; . The first one is TestPlugin.scn, and when; runSOFA; opens it, an html page pops; up, with a link to the plugin documentation. Intellectual; property and rights. Authors. You. Contact. You@your.institute. License. Your can distribute this plugin; under; the same license as the core of SOFA, or any ot",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html:1621,depend,dependencies,1621,applications/plugins/SofaTest/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html,1,['depend'],['dependencies']
Integrability,"eGridCollisionModel will not be compiled.""); endif(). find_package(SofaSphFluid QUIET); if(SofaSphFluid_FOUND); list(APPEND HEADER_FILES; sofa/gpu/cuda/CudaParticleSource.h; sofa/gpu/cuda/CudaParticleSource.inl; sofa/gpu/cuda/CudaSPHFluidForceField.h; sofa/gpu/cuda/CudaSPHFluidForceField.inl; sofa/gpu/cuda/CudaParticlesRepulsionForceField.h; sofa/gpu/cuda/CudaParticlesRepulsionForceField.inl; sofa/gpu/cuda/CudaSpatialGridContainer.h; sofa/gpu/cuda/CudaSpatialGridContainer.inl; ); list(APPEND SOURCE_FILES; sofa/gpu/cuda/CudaParticleSource.cpp; sofa/gpu/cuda/CudaSPHFluidForceField.cpp; sofa/gpu/cuda/CudaParticlesRepulsionForceField.cpp; sofa/gpu/cuda/CudaSpatialGridContainer.cpp; ); list(APPEND CUDA_SOURCES; sofa/gpu/cuda/CudaParticleSource.cu; sofa/gpu/cuda/CudaSPHFluidForceField.cu; sofa/gpu/cuda/CudaParticlesRepulsionForceField.cu; sofa/gpu/cuda/CudaSpatialGridContainer.cu; ); message(STATUS ""SofaCUDA: optional dependency to SofaSphFluid found. ""); else(); message(STATUS ""SofaCUDA: optional dependency SofaSphFluid not found. ""); endif(). sofa_find_package(SofaValidation QUIET); if(SofaValidation_FOUND); list(APPEND SOURCE_FILES; sofa/gpu/cuda/CudaExtraMonitor.cpp; ); message(STATUS ""SofaCUDA: found SofaValidation, enabling CudaExtraMonitor (Warning: this component is being deprecated). ""); endif(). option(SOFACUDA_VERBOSE_PTXAS ""???"" OFF); if(SOFACUDA_VERBOSE_PTXAS); set(VERBOSE_PTXAS --ptxas-options=-v); endif(). option(SOFACUDA_CUBLAS ""Activate cublas support in CUDA (requires SOFACUDA_DOUBLE)."" OFF); if(SOFACUDA_CUBLAS); set(SOFA_GPU_CUBLAS 1) # #cmakedefine; list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}); find_package(CUDASparse REQUIRED); endif(). option(SOFACUDA_CUDPP ""Activate CUDPP (for RadixSort)."" OFF); if(SOFACUDA_CUDPP); set(SOFA_GPU_CUDPP 1) # #cmakedefine; endif(). # Note: THRUST is included in CUDA SDK 4.0+, it is recommended to use it if available; option(SOFACUDA_THRUST ""Activate THRUST (for RadixSort)."" ON); if(SOFACUDA_THRUST); set(SO",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt:16657,message,message,16657,applications/plugins/SofaCUDA/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaCUDA/CMakeLists.txt,2,"['depend', 'message']","['dependency', 'message']"
Integrability,"e] Restore default component naming for python [#2801]( https://github.com/sofa-framework/sofa/pull/2801 ); - [SofaCore] Restore xml and python different naming conventions [#2773]( https://github.com/sofa-framework/sofa/pull/2773 ); - [SofaCore] Virtual inheritance of BaseObject [#2799]( https://github.com/sofa-framework/sofa/pull/2799 ); - [SofaDeformable] Handle division by zero in MeshSpringForceField [#2596]( https://github.com/sofa-framework/sofa/pull/2596 ); - [SofaDeformable] Springs are able to compute their bounding box [#2599]( https://github.com/sofa-framework/sofa/pull/2599 ); - [SofaEngine] Fix BoxROI undefined behavior [#2604]( https://github.com/sofa-framework/sofa/pull/2604 ); - [SofaFramework] Add tests on aliases for ""multiple projects"" out-of-tree build [#2566]( https://github.com/sofa-framework/sofa/pull/2566 ); - [SofaGeneralImplicitOdeSolver] Propagate position inside Newton loop [#2584]( https://github.com/sofa-framework/sofa/pull/2584 ); - [SofaGeneralObjectInteraction] Fix dependencies in cmake [#2659]( https://github.com/sofa-framework/sofa/pull/2659 ); - [SofaGuiCommon] Restore argv [#2802]( https://github.com/sofa-framework/sofa/pull/2802 ); - [SofaGuiQt] Fix some dll export macro missing [#2555]( https://github.com/sofa-framework/sofa/pull/2555 ); - [SofaGui] Restore and update CMake variables and modules [#3011]( https://github.com/sofa-framework/sofa/pull/3011 ); - [SofaHelper] Speedup ReadAccessor conversion operator [#2583]( https://github.com/sofa-framework/sofa/pull/2583 ); - [SofaMiscFEM] Fix TriangleFEMForceField and TriangularFEMForceField to have the same behavior [#2275]( https://github.com/sofa-framework/sofa/pull/2275 ); - [SofaMiscFem] FIX missing Strain Displacement matrix update in TriangularFEMForceField [#2706]( https://github.com/sofa-framework/sofa/pull/2706 ); - [SofaMiscForceField] Fix error while trying to compile a plugin depending on SofaGuiQt [#2707]( https://github.com/sofa-framework/sofa/pull/2707 ); - [SofaM",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:112664,depend,dependencies,112664,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,"ection.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContactMapper.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullContacts.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletCylinderModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletOBBModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletSphereModel.cpp; ${BULLETCOLLISIONDETECTION_SRC}/BulletTriangleModel.cpp; ). set(README_FILES BulletCollisionDetection.txt). find_package(Sofa.Config REQUIRED); sofa_find_package(Sofa.Component.Collision REQUIRED); sofa_find_package(CollisionOBBCapsule REQUIRED); sofa_find_package(Sofa.GL REQUIRED); # sofa_find_package(SofaVolumetricData REQUIRED); find_package(Compliant QUIET); find_package(LMConstraint QUIET). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}); find_package(Bullet REQUIRED); include_directories(${BULLET_INCLUDE_DIRS}); link_directories(${BULLET_LIBRARY_DIRS}). message(STATUS ""BULLET_INCLUDE_DIRS: ${BULLET_INCLUDE_DIRS}""); message(STATUS ""BULLET_LIBRARIES: ${BULLET_LIBRARIES}""). # HACD (present in the lib dir of bullet) is not set by FindBullet; # this should set the correct path; set(HACD_LIB """"); if(BULLET_LIBRARIES); list(GET BULLET_LIBRARIES 0 first_bullet_lib_path); get_filename_component(bullet_lib_dir ""${first_bullet_lib_path}"" DIRECTORY); if(WIN32); set(HACD_LIB ""${bullet_lib_dir}/HACD.lib""); elseif(UNIX AND NOT APPLE); # on Ubuntu, this is installed with libbullet-extras-dev; set(HACD_LIB ""${bullet_lib_dir}/libHACD.so""); else(); # MacOS ? todo; endif(); endif(). if(EXISTS ""${HACD_LIB}""); message(STATUS ""HACD_LIB: ${HACD_LIB}""); else(); message(SEND_ERROR ""Could not find HACD, necessary to build ConvexHull."" ); endif(). if(Compliant_FOUND); list(APPEND SOURCE_FILES ${BULLETCOLLISIONDETECTION_SRC}/BulletConvexHullCompliantContacts.cpp); else(); message(STATUS ""BulletCollisionDetection: could not find Compliant, won't build BulletConvexHullCompliantContacts""); endif(). if(LMConstraint_FOUND); l",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt:2517,message,message,2517,applications/plugins/BulletCollisionDetection/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/BulletCollisionDetection/CMakeLists.txt,2,['message'],['message']
Integrability,"edefinition on Windows (see jmorecfg.h); list(APPEND CIMG_CFLAGS -DXMD_H); endif(); list(APPEND DEP_TARGETS JPEG::JPEG); else(); message(STATUS ""CImgPlugin: JPEG Image Format disabled""); endif(); if(PNG_FOUND); message(STATUS ""CImgPlugin: PNG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_png); if(UNIX); # Prevent pngconf error (see https://bugs.launchpad.net/ubuntu/+source/libpng/+bug/218409); list(APPEND CIMG_CFLAGS -DPNG_SKIP_SETJMP_CHECK); endif(); list(APPEND DEP_TARGETS PNG::PNG); else(); message(STATUS ""CImgPlugin: PNG Image Format disabled""); endif(); if(ZLIB_FOUND); list(APPEND DEP_TARGETS ZLIB::ZLIB); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<BUILD_INTERFACE:${CImg_INCLUDE_DIRS}>""); target_compile_options(${PROJECT_NAME} PUBLIC ${CIMG_CFLAGS}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.DefaultType ); target_link_libraries(${PROJECT_NAME} INTERFACE CImg); target_link_libraries(${PROJECT_NAME} PUBLIC ${DEP_TARGETS}). if(SOFA_BUILD_RELEASE_PACKAGE OR CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS ${DEP_TARGETS} ${DEP_ZSTD}); endif(). if(MSVC); target_link_options(${PROJECT_NAME} PRIVATE ""/DEF:${CMAKE_CURRENT_SOURCE_DIR}/exports.def""); endif(). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} CImg AUTO_SET_TARGET_PROPERTIES ; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""CImgPlugin""; RELOCATABLE ""plugins""; ). install(FILES; ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindCImg.cmake""; DESTINATION lib/cmake/Modules; COMPONENT headers; ). # Tests; # If SOFA_BUILD_TESTS exists and is OFF, then these tests will be auto-disabled; cmake_dependent_option(CIMGPLUGIN_BUILD_TESTS ""Compile the automatic tests"" ON ""SOFA_BUILD_TESTS OR NOT DEFINED SOFA_BUILD_TESTS"" OFF); if(CIMGPLUGIN_BUILD_TE",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt:3345,INTERFACE,INTERFACE,3345,applications/plugins/CImgPlugin/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt,1,['INTERFACE'],['INTERFACE']
Integrability,"efined external template); target_compile_options(${PROJECT_NAME} PUBLIC -Wno-attributes). if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-ffast-math""); endif(). option(SOFA_ENABLE_THREAD_SANITIZER ""Enable thread sanitizer (only gcc or clang)"" OFF); if(SOFA_ENABLE_THREAD_SANITIZER); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-fsanitize=thread""); list(APPEND SOFACONFIG_LINK_OPTIONS ""-fsanitize=thread""); endif(); endif(). ## Windows-specific; if(WIN32); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-D_USE_MATH_DEFINES""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-D_CRT_SECURE_NO_WARNINGS""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-D_CRT_NONSTDC_NO_DEPRECATE""). set(SOFA_MSVC_NB_COMPILER_PROCESSES ""0"" CACHE STRING ""The maximum number of processes that the compiler can create. 0 (default) for the number of effective processors on the computer""); if (SOFA_MSVC_NB_COMPILER_PROCESSES EQUAL ""0""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/MP""); else(); if (SOFA_MSVC_NB_COMPILER_PROCESSES MATCHES ""^[0-9]+$""); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/MP${SOFA_MSVC_NB_COMPILER_PROCESSES}""); else(); message(FATAL_ERROR ""A number is expected for SOFA_MSVC_NB_COMPILER_PROCESSES""); endif(); endif(). list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/wd4250;/wd4251;/wd4275;/wd4675;/wd4661""); # 4661: no suitable definition provided for explicit template instantiation request; # it happens because we put explicit instantiation in a separate translation unit; # it is by design, so this warning is irrelevant in our project. if(MSVC_TOOLSET_VERSION GREATER 140) # > VS 2015; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/Zc:__cplusplus""); endif(). # Experimental: compilation with MSVC/Clang-cl; if(${CMAKE_CXX_COMPILER_ID} MATCHES ""Clang""); if( ${CMAKE_CXX_COMPILER_FRONTEND_VARIANT} STREQUAL MSVC) # something weird happens if we put the two test in one if ??; message(WARNING ""Experimental: you are trying to compile with MSVC and the clang-cl toolchain; this is not officially supported.""); # remove ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:8222,message,message,8222,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['message'],['message']
Integrability,"eld.py; - Improving a few examples by making the embedding nodes as non pickable (tag 'NoPicking'); - Add BaseNode::getRootPath; - Improving performances: - Message::class is now an enum; - Updated draw method of PointSetGeometryAlgorithms, QuadSetGeometryAlgorithms, TetrahedronSetGeometryAlgorithms, TriangleSetGeometryAlgorithms; - Add Blender-like orientation helper in the bottom-left part of the screen while drawing bbox (QtGlViewer); - Add Blender-like orientation helper in the bottom-left part of the screen while drawing bbox (QtViewer); - add of GUIEvent into the STLExporter; - Make the code compatible with ClipPlane (using ClipVertex in shaders, which is deprecated for GLSL > 1.4); - Optimize the callto C-PYTHON side when the functions are not implemented in the python side; - Add color attribute support (and default color if not present in the node); - Reactivate color map in TetraFEM, as it does not depend on SofaOpenGLVisual anymore; - indices data field for UniformMass; - analyze matrix only if number of non-zeroes has changed and no iterative refinement; - update the applyConstraint methods according to the actual API; - Adding ProjectionTo{Plane|Line}MultiMapping where the plane (origin,normal) and the line (origin,direction) are dofs; - add MeshBoundaryROI with an example. - [Tests]; - for (multi)Mapping test, check the size of the mapping output is correct; - adding TestMessageHandler that raises a gtest failure each time an error message is processed; - test for node removal; - test for removal of a node containing an UncoupledConstraintCorrection (for now the test fails because there is a problem with the removal of that component); - add of Multi2Mapping_test; - add DistanceMapping_test. - [SofaPython]; - logger: cleaning emitter; - sml.Mesh: adding load function; - sml: python set for tags is created by objects themselves; - sml: add tag to JointGeneric; - sml: add the printLog flag; - sml: setup units in BaseScene for all sml Scene class; - sml: m",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:346589,depend,depend,346589,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['depend']
Integrability,"eme,; Explicit integration schemes,; Implicit integration schemes. Before going any further, it is important to know that state vectors in SOFA are saved in a component called ""State"" (see chapter ""State"" in the documentation).; For instance, when mechanical models are being solved, the user needs to add a ""MechanicalState"" component in the graph.; Inside the component, the format of storage for the state vector is a structure called MultiVector.; The size and the nature of the degrees of freedom is chosen by setting a ""template"" in the State component. Let us now go into details about the different ODE solvers in SOFA. First, the static integration is an integration which does not take the time into account. Such a static integration can be useful for checking the convergence of algorithms. Furthermore, different dynamic solvers have been implement in SOFA. Unlike static solvers, these solvers do take the dynamics of the system into account. However, depending on the aim of the computation, the solver has to be carefully chosen.; Let us review the basic differences between explicit and implicit solvers. Concerning the explicit solvers, they compute the new state variables from the state variables at the previous step.; The advantage is that explicit solvers can be fast, but the stability of the solver is not always granted. Very small time steps can be required to get satisfactory accuracy.; Moreover, such solvers are not suitable for every simulation. For example, explicit solvers do not compute cyclic loadings correctly, but could be advised in case of soft or high-mass objects. Concerning implicit solvers, they compute the new state variables by solving an equation involving the previous state variables and the new ones.; In contrast, implicit solvers are very stable (without conditions on the time step) and therefore work with larger time steps. The drawback of such a method is that it is more time consuming.; For example, implicit solvers would be advised for s",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html:1305,depend,depending,1305,examples/Tutorials/Solvers/Solvers.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html,1,['depend'],['depending']
Integrability,"emove CImg sys calls; if(TIFF_FOUND AND ( NOT(SOFA_BUILD_RELEASE_PACKAGE) OR ZSTD_FOUND)); message(STATUS ""CImgPlugin: TIFF Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_tiff); list(APPEND DEP_TARGETS TIFF::TIFF); if(ZSTD_FOUND); set(DEP_ZSTD ZSTD::ZSTD); endif(); else(); message(STATUS ""CImgPlugin: TIFF Image Format disabled""); endif(); if(JPEG_FOUND); message(STATUS ""CImgPlugin: JPEG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_jpeg); if(WIN32); # prevent INT32 redefinition on Windows (see jmorecfg.h); list(APPEND CIMG_CFLAGS -DXMD_H); endif(); list(APPEND DEP_TARGETS JPEG::JPEG); else(); message(STATUS ""CImgPlugin: JPEG Image Format disabled""); endif(); if(PNG_FOUND); message(STATUS ""CImgPlugin: PNG Image Format enabled""); list(APPEND CIMG_CFLAGS -Dcimg_use_png); if(UNIX); # Prevent pngconf error (see https://bugs.launchpad.net/ubuntu/+source/libpng/+bug/218409); list(APPEND CIMG_CFLAGS -DPNG_SKIP_SETJMP_CHECK); endif(); list(APPEND DEP_TARGETS PNG::PNG); else(); message(STATUS ""CImgPlugin: PNG Image Format disabled""); endif(); if(ZLIB_FOUND); list(APPEND DEP_TARGETS ZLIB::ZLIB); endif(). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES}). target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC ""$<BUILD_INTERFACE:${CImg_INCLUDE_DIRS}>""); target_compile_options(${PROJECT_NAME} PUBLIC ${CIMG_CFLAGS}); target_link_libraries(${PROJECT_NAME} PUBLIC Sofa.Helper Sofa.DefaultType ); target_link_libraries(${PROJECT_NAME} INTERFACE CImg); target_link_libraries(${PROJECT_NAME} PUBLIC ${DEP_TARGETS}). if(SOFA_BUILD_RELEASE_PACKAGE OR CMAKE_SYSTEM_NAME STREQUAL Windows); sofa_install_libraries(TARGETS ${DEP_TARGETS} ${DEP_ZSTD}); endif(). if(MSVC); target_link_options(${PROJECT_NAME} PRIVATE ""/DEF:${CMAKE_CURRENT_SOURCE_DIR}/exports.def""); endif(). ## Install rules for the library; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJEC",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt:2869,message,message,2869,applications/plugins/CImgPlugin/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CImgPlugin/CMakeLists.txt,1,['message'],['message']
Integrability,"ent_option(SOFA_BUILD_WITH_PCH_ENABLED ; ""Compile SOFA using precompiled header (to accelerate the build process)"" OFF; ""CMAKE_VERSION VERSION_GREATER_EQUAL 3.16"" OFF); if(SOFA_BUILD_WITH_PCH_ENABLED); message(""-- Precompiled headers: enabled (SOFA_BUILD_WITH_PCH_ENABLED is ON).""); else(); message(""-- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).""); set(DISABLE_PRECOMPILE_HEADERS ON); endif(). ## Change default install component and prefix; set(CMAKE_INSTALL_DEFAULT_COMPONENT_NAME applications); if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT); set(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/install CACHE PATH ""Install path prefix, prepended onto install directories."" FORCE); endif(); if(APPLE AND SOFA_BUILD_APP_BUNDLE); set(SOFA_BUILD_RELEASE_PACKAGE ON); set(CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/runSofa.app/Contents/MacOS); message(""SOFA_BUILD_APP_BUNDLE = ${SOFA_BUILD_APP_BUNDLE}\n""; "" Forcing SOFA_BUILD_RELEASE_PACKAGE = ${SOFA_BUILD_RELEASE_PACKAGE}\n""; "" Forcing CMAKE_INSTALL_PREFIX = ${CMAKE_INSTALL_PREFIX}""; ); endif(); message(STATUS ""Install prefix: ${CMAKE_INSTALL_PREFIX}""). # Remove generated CMake files, this prevents CMake from finding packages that; # were disabled (like, unchecked in cmake-gui) after being built once.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/cmake); file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/lib/cmake); # Remove generated SofaPython configuration files, to prevent SofaPython from; # adding paths to disabled plugins.; file(REMOVE_RECURSE ${CMAKE_BINARY_DIR}/etc/sofa/python.d). ## Custom Environment; list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules""); list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}/Sofa/framework/Config/cmake""); list(APPEND CMAKE_IGNORE_PATH ""${CMAKE_INSTALL_PREFIX}"") # ignore install directory for findXXX commands; include(SofaMacros). install(FILES; ""${CMAKE_CURRENT_SOURCE_DIR}/c",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt:2965,message,message,2965,CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CMakeLists.txt,2,['message'],['message']
Integrability,"erms of the GNU General Public License as published by; the Free Software Foundation, either version 3 of the License, or; (at your option) any later version. This program is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU General Public License for more details. You should have received a copy of the GNU General Public License; along with this program. If not, see <http://www.gnu.org/licenses/>. Also add information on how to contact you by electronic and paper mail. If the program does terminal interaction, make it output a short; notice like this when it starts in an interactive mode:. <program> Copyright (C) <year> <name of author>; This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.; This is free software, and you are welcome to redistribute it; under certain conditions; type `show c' for details. The hypothetical commands `show w' and `show c' should show the appropriate; parts of the General Public License. Of course, your program's commands; might be different; for a GUI interface, you would use an ""about box"". You should also get your employer (if you work as a programmer) or school,; if any, to sign a ""copyright disclaimer"" for the program, if necessary.; For more information on this, and how to apply and follow the GNU GPL, see; <http://www.gnu.org/licenses/>. The GNU General Public License does not permit incorporating your program; into proprietary programs. If your program is a subroutine library, you; may consider it more useful to permit linking proprietary applications with; the library. If this is what you want to do, use the GNU Lesser General; Public License instead of this License. But first, please read; <http://www.gnu.org/philosophy/why-not-lgpl.html>. -------------------------------------------------------------------------. The QGLViewer library is Copyright (C) 2002-2014 Gilles Debunne.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt:52918,interface,interface,52918,Sofa/GUI/Qt/libQGLViewer/licence.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/licence.txt,1,['interface'],['interface']
Integrability,"es particles belonging ; 			to the same mechanical object, the ForceField is said to be internal. Otherwise, if it links several mechanical objects, it is said to be an interaction forcefield. 			; 			Examples of SpringForceField components in Sofa are JointSpringForceField (for rigid mechanical objects) StiffSpringForceField, and MeshSpringForceField ; 		 (for deformable mechanical objects). ; 			; 			To describe a SpringForceField, we therefore have to specify the following parameters: ; 			; The two mechanical objects that are in interaction. It can be a unique mechanical object in the case of an internal ForceField.; A set of pairs of indices which specify the end particles for each spring to be created. ; Finally, the internal parameters of each spring, like the rest length, the stiffness, and damping factor. . Key Points:. If you have a limited number of particles that you want to connect with springs, you can use JointSpringForceField (for rigid bodies) ; 			or StiffSpringForceField (for deformable bodies) and specify manually the indices and spring parameters.; If you load particles from a mesh using a MeshTopology component, there is a corresponding MeshSpringForceField component which ; 			does the job of creating springs for you, leaving you only to specify global parameters for the springs. You can do fine tuning later on; 			if you wish to. Results:; 		At each time step, the force computed by the SpringForceField is added to the mechanical objects in interaction. When the spring network ; 		becomes large this can result in some instability, particularly if you wish to interact with your object using the mouse. ; 		You can tweak spring parameters or the simulation parameters to resolve that issue, (like the vdamping factor if you use an implicit integration scheme) ; 		but this can be a fastidious operation. ; 		As a general rule, FEM ForceField methods provide a neater way to handle deformations.; 		; 		. 	 A MeshSpringForceField becoming unstable; 		. ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/ForceFields/TutorialForceFieldSprings.html:1956,integrat,integration,1956,examples/Tutorials/ForceFields/TutorialForceFieldSprings.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/ForceFields/TutorialForceFieldSprings.html,1,['integrat'],['integration']
Integrability,essor define [#680]( https://github.com/sofa-framework/sofa/pull/680 ); - **[SofaEngine]** FIX Bug in BoxROI that is not properly initialized [#627]( https://github.com/sofa-framework/sofa/pull/627 ); - **[SofaFramework]** Fix plugin list configuration [#645]( https://github.com/sofa-framework/sofa/pull/645 ); - [SofaGraphComponent] FIX SceneChecker_test + ADD alias test [#711]( https://github.com/sofa-framework/sofa/pull/711 ); - [SofaGraphComponent] FIX SceneCheck build on MacOS [#719]( https://github.com/sofa-framework/sofa/pull/719 ); - [SofaGuiQt] FIX missing resources [#758]( https://github.com/sofa-framework/sofa/pull/758 ); - [SofaGeneralEngine] FIX disabled tests [#675]( https://github.com/sofa-framework/sofa/pull/675 ); - **[SofaHelper]** More robust method to test end of string [#617]( https://github.com/sofa-framework/sofa/pull/617 ); - **[SofaKernel]** FIX macro issue resulted from the #include cleaning. [#672]( https://github.com/sofa-framework/sofa/pull/672 ); - [SofaMiscFem] FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaOpenglVisual] FIX MacOS crash in batch mode [#646]( https://github.com/sofa-framework/sofa/pull/646 ); - **[SofaSimulationGraph]** FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaSparseSolver] FIX SparseLDL crash and add proper SOFA_FLOAT/DOUBLE mangement [#655]( https://github.com/sofa-framework/sofa/pull/655 ). **Plugins / Projects**; - [CGALPlugin] FIX compilation issue with recent version of CGAL (4.11) & Ubunu 18.04 LTS [#664]( https://github.com/sofa-framework/sofa/pull/664 ); - [CImgPlugin] Export CImg_CFLAGS [#595]( https://github.com/sofa-framework/sofa/pull/595 ); - [CImgPlugin] FIX CMakeLists install fail since pluginization [#609]( https://github.com/sofa-framework/sofa/pull/609 ); - [CImgPlugin] FIX malformed cflag append [#622]( https://github.com/sofa-framework/sofa/pull/622 ); - [HeadlessRecorder] Fix headless recorder stream definition [#666]( htt,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:297376,depend,dependencies,297376,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,"ework/sofa/pull/541 ); - [runSofa]; - autoload plugins (2nd version) [#301]( https://github.com/sofa-framework/sofa/pull/301 ); - Extend the live coding support, message API available for nodes, add an openInEditor [#337]( https://github.com/sofa-framework/sofa/pull/337 ); - add verification if help is not null from displayed data [#382]( https://github.com/sofa-framework/sofa/pull/382 ); - improve the html DocBrowser [#540]( https://github.com/sofa-framework/sofa/pull/540 ); - [SceneChecker]; - Add mechanism to report API & SceneChange to users [#329]( https://github.com/sofa-framework/sofa/pull/329 ); - [SofaDistanceGrid]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaImplicitField]; - Pluginizing SofaVolumetricData [#389]( https://github.com/sofa-framework/sofa/pull/389 ); - [SofaMiscCollision]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ); - [SofaPython]; - Add unicode to string convertion and a warning message in Binding_BaseContext::pythonToSofaDataString [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add unicode to string convertion in Binding_BaseData::SetDataValuePython [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add a test [#313]( https://github.com/sofa-framework/sofa/pull/313 ); - Add GIL management [#326]( https://github.com/sofa-framework/sofa/pull/326 ); - Add support for Sofa.msg_ with emitter other than a string [#335]( https://github.com/sofa-framework/sofa/pull/335 ); - Adding new features for AdvancedTimer [#360]( https://github.com/sofa-framework/sofa/pull/360 ); - forward sys.argv to python scripts [#368]( https://github.com/sofa-framework/sofa/pull/368 ); - sparse matrix aliasing scipy/eigen [#411]( https://github.com/sofa-framework/sofa/pull/411 ); - [SofaSphFluid]; - Pluginizing the module [#453]( https://github.com/sofa-framework/sofa/pull/453 ). **Other**; - [Tools]; - Update astyle config [#550]( https://github.com/sofa",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:310466,message,message,310466,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"ework/sofa/tree/v16.12 ). **Last commit: on Jan 08, 2017** ; [Full log]( https://github.com/sofa-framework/sofa/compare/v16.08...v16.12 ). ### Environment; - **C++11 is now mandatory**. This implies some changes in building tools.; - Generator: CMake 3.1 or higher.; - Compiler: GCC 4.8 or higher, Clang 3.4 or higher, Microsoft Visual C++ 2013 or higher. ### New features for users. - new Geomagic plugin: supporting latest versions of force feedback interfaces from Geomagic; - add ForceMaskOff, a component to locally (in a branch of the scene graph) cancel the force mask; - live-coding for python; - live-coding for GLSL; - new component MakeAlias; - new component MakeDataAlias; - improved error message & console rendering. ### New features for developpers. - Preliminary Markdown support in the msg_* API. You can now write much better formatting & alignement as well as adding URL to documentations related to the error.; - class RichStyleConsoleFormatter which interprete the markdowns in the message and format this to a resizable console with nice alignement.; - class CountingMessageHandler (count the number of message for each message type); - class RoutingMessageHandler (to implement context specific routing of the messages to different handler); - class ExpectMessage and MessageAsATestFailure can be used to check that a component did or didn't send a message and generate a test failure.; - FileMonitor is now implemented on MacOS & Windows (for live-coding features, for example); - RequiredPlugin: modified API to take a list of plugins to load; - Implements the move semantics on sofa::helper::vector. ### Improvements. - **372 new tests**: DAGNode, MeshObj, DiagonalMass, BoxROI, ComplementaryROI, DifferenceEngine, BilateralInteractionConstraint, Quaternion, ImagePNG, etc.; - 184/480 components have an associated example; - [SofaKernel]; - replace raw pointers with a smart ones; - add a ComponentState attribute to BaseObject; - BaseData::typeName is now public: useful t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:337511,message,message,337511,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,f a plugin is init at the load stage [#2425]( https://github.com/sofa-framework/sofa/pull/2425 ); - [Sofa.LinearAlgebra] Introduce fast sparse matrix product and use it in MechanicalMatrixMapper [#2394]( https://github.com/sofa-framework/sofa/pull/2394 ); - [SofaBaseLinearSolver] Introduce GlobalSystemMatrixExporter [#2303]( https://github.com/sofa-framework/sofa/pull/2303 ); - [SofaBaseTopology] Add method to register callbacks directly using the topologyData [#2375]( https://github.com/sofa-framework/sofa/pull/2375 ); - [SofaBaseTopology] Ensure to add a topology EndingEvent before propagating to all topologyData [#2376]( https://github.com/sofa-framework/sofa/pull/2376 ); - [SofaBaseVisual] Fix VisualModelImpl to use topologyData and callback to handle topological changes [#2300]( https://github.com/sofa-framework/sofa/pull/2300 ); - [SofaCore] Add const version of getMSState to Mass [#2293]( https://github.com/sofa-framework/sofa/pull/2293 ); - [SofaCore] Clearer message when template parameter is not compatible with current context [#2262]( https://github.com/sofa-framework/sofa/pull/2262 ); - [SofaCore] Required data msg now depends on existing default value [#2527]( https://github.com/sofa-framework/sofa/pull/2527 ); - [SofaDefaultType] Introduce test interface for BaseMatrix [#2280]( https://github.com/sofa-framework/sofa/pull/2280 ); - [SofaGeneralAnimationLoop] More optimization on MechanicalMatrixMapper [#2411]( https://github.com/sofa-framework/sofa/pull/2411 ); - [SofaGeneralAnimationLoop] Remove matrix compression [#2367]( https://github.com/sofa-framework/sofa/pull/2367 ); - [SofaGeneralDeformable] Add option to enable/disable spring display in TriangularBendingSprings [#2297]( https://github.com/sofa-framework/sofa/pull/2297 ); - [SofaGeneralSimpleFem] Update BeamFEMForceField topologyHander and add tests [#2382]( https://github.com/sofa-framework/sofa/pull/2382 ); - [SofaGraphComponent] Restore check of deprecated components [#2267]( https://github.c,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:140831,message,message,140831,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"f(${CMAKE_CXX_COMPILER_ID} MATCHES ""Clang""); if( ${CMAKE_CXX_COMPILER_FRONTEND_VARIANT} STREQUAL MSVC) # something weird happens if we put the two test in one if ??; message(WARNING ""Experimental: you are trying to compile with MSVC and the clang-cl toolchain; this is not officially supported.""); # remove lots of warnings (the Wall of ""normal"" clang seems different of Wall of clang-cl); list(APPEND SOFACONFIG_COMPILE_OPTIONS -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-double-promotion -Wno-old-style-cast -Wno-reserved-id-macro -Wno-language-extension-token -Wno-dllexport-explicit-instantiation-decl -Wno-nonportable-system-include-path -Wno-zero-as-null-pointer-constant -Wno-documentation); # optimization flags (not sure if necessary..); list(APPEND SOFACONFIG_COMPILE_OPTIONS_RELEASE -march=native); if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/fp:fast""); endif(); endif(); endif(); endif(). # Mac specific; if(APPLE); #remove OpenGL deprecation message; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-DGL_SILENCE_DEPRECATION""); endif(). ## OpenMP; option(SOFA_OPENMP ""Compile Sofa with OpenMP multithreading."" OFF); if(SOFA_OPENMP); sofa_find_package(OpenMP QUIET); if (OPENMP_FOUND); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""${OpenMP_CXX_FLAGS}""); list(APPEND SOFACONFIG_LINK_OPTIONS ""${OpenMP_CXX_FLAGS}""); else(); message(""WARNING: Your compiler does not implement OpenMP.""); endif(); endif(). ## Tracy; option(SOFA_TRACY ""Compile SOFA with the Tracy profiler client"" OFF); if (SOFA_TRACY); set(SOFA_TRACY_VERSION v0.9.1); include(FetchContent); option(TRACY_STATIC ""Whether to build Tracy as a static library"" OFF); FetchContent_Declare (; tracy; GIT_REPOSITORY https://github.com/wolfpld/tracy.git; GIT_TAG ${SOFA_TRACY_VERSION}; GIT_SHALLOW TRUE; GIT_PROGRESS TRUE; ); FetchContent_MakeAvailable (tracy); target_link_libraries(${PROJECT_NAME} PUBLIC TracyClient ); message(STATUS ""SOFA is compiled with the Tracy profiler client. Use the Tracy server ${SOFA_TRA",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:9789,message,message,9789,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['message'],['message']
Integrability,fa/pull/2845 ); - [FEM.Elastic] Simplify addkToMatrix in TriangularFEMForceFieldOptim [#2861]( https://github.com/sofa-framework/sofa/pull/2861 ); - [FEM.HyperElastic] Remove optimization based on type of matrix in StandardTetrahedralFEMForceField [#2858]( https://github.com/sofa-framework/sofa/pull/2858 ); - [LMConstraint] Remove LMConstraint folder as it is an external plugin [#2828]( https://github.com/sofa-framework/sofa/pull/2828 ); - [LinearSolver.Direct] Minor clean up in SparseCholeskySolver [#2881]( https://github.com/sofa-framework/sofa/pull/2881 ); - [LinearSolver.Direct] Move advice message into parse method [#3029]( https://github.com/sofa-framework/sofa/pull/3029 ); - [LinearSolver.Iterative] Clean floating point types in CG [#2808]( https://github.com/sofa-framework/sofa/pull/2808 ); - [LinearSolver] Remove explicit template instantiation for floating point types different from SReal [#2939]( https://github.com/sofa-framework/sofa/pull/2939 ); - [LinearSolver] SparseLDLSolver: template warning to info message [#2969]( https://github.com/sofa-framework/sofa/pull/2969 ); - [Mapping.Linear] Fix some warnings [#2933]( https://github.com/sofa-framework/sofa/pull/2933 ); - [Mass] fix some warnings [#2931]( https://github.com/sofa-framework/sofa/pull/2931 ); - [Mass] Make warnings become info_msg in masses [#3116]( https://github.com/sofa-framework/sofa/pull/3116 ) ; - [Metis] Add header files to the project [#2581]( https://github.com/sofa-framework/sofa/pull/2581 ); - [Metis] Disable compilation warnings [#2874]( https://github.com/sofa-framework/sofa/pull/2874 ); - [S.C.LinearSolver] Restore specialized functions in SSORPreconditioner [#2885]( https://github.com/sofa-framework/sofa/pull/2885 ); - [Sofa.Component.Collision] Remove un-needed msg_warning in LocalMinDistance.cpp [#2976]( https://github.com/sofa-framework/sofa/pull/2976 ); - [Sofa.Component.ODESolver] Rewrite tests without SceneCreator [#2733]( https://github.com/sofa-framework/sofa/pull/2733 ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:123268,message,message,123268,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,faFramework]** Fix plugin list configuration [#645]( https://github.com/sofa-framework/sofa/pull/645 ); - [SofaGraphComponent] FIX SceneChecker_test + ADD alias test [#711]( https://github.com/sofa-framework/sofa/pull/711 ); - [SofaGraphComponent] FIX SceneCheck build on MacOS [#719]( https://github.com/sofa-framework/sofa/pull/719 ); - [SofaGuiQt] FIX missing resources [#758]( https://github.com/sofa-framework/sofa/pull/758 ); - [SofaGeneralEngine] FIX disabled tests [#675]( https://github.com/sofa-framework/sofa/pull/675 ); - **[SofaHelper]** More robust method to test end of string [#617]( https://github.com/sofa-framework/sofa/pull/617 ); - **[SofaKernel]** FIX macro issue resulted from the #include cleaning. [#672]( https://github.com/sofa-framework/sofa/pull/672 ); - [SofaMiscFem] FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaOpenglVisual] FIX MacOS crash in batch mode [#646]( https://github.com/sofa-framework/sofa/pull/646 ); - **[SofaSimulationGraph]** FIX dependencies [#588]( https://github.com/sofa-framework/sofa/pull/588 ); - [SofaSparseSolver] FIX SparseLDL crash and add proper SOFA_FLOAT/DOUBLE mangement [#655]( https://github.com/sofa-framework/sofa/pull/655 ). **Plugins / Projects**; - [CGALPlugin] FIX compilation issue with recent version of CGAL (4.11) & Ubunu 18.04 LTS [#664]( https://github.com/sofa-framework/sofa/pull/664 ); - [CImgPlugin] Export CImg_CFLAGS [#595]( https://github.com/sofa-framework/sofa/pull/595 ); - [CImgPlugin] FIX CMakeLists install fail since pluginization [#609]( https://github.com/sofa-framework/sofa/pull/609 ); - [CImgPlugin] FIX malformed cflag append [#622]( https://github.com/sofa-framework/sofa/pull/622 ); - [HeadlessRecorder] Fix headless recorder stream definition [#666]( https://github.com/sofa-framework/sofa/pull/666 ); - [MultiThreading] FIX: add createSubelements param in MeshGmshLoader [#626]( https://github.com/sofa-framework/sofa/pull/626 ); - [runSofa] Fix compilation whe,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:297590,depend,dependencies,297590,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,faMiscFem][SofaNonUniformFem] Remove newmat usage [#2531]( https://github.com/sofa-framework/sofa/pull/2531 ); - [SofaPreconditioner] Cleaning [#2493]( https://github.com/sofa-framework/sofa/pull/2493 ); - [SofaSimpleFem] Move duplicated code into a function [#2231]( https://github.com/sofa-framework/sofa/pull/2231 ); - [SofaSimpleFem] Remove branches based on type of matrix [#2323]( https://github.com/sofa-framework/sofa/pull/2323 ); - [SofaSparseSolver] Clean examples scenes of sparse linear solvers [#2422]( https://github.com/sofa-framework/sofa/pull/2422 ); - [SofaTopologyMapping] Fix shadowed variable #2158 [#2413]( https://github.com/sofa-framework/sofa/pull/2413 ); - [Tests] Update SceneCreator_test to inherit from BaseSimulationTest and remove some warnings [#2406]( https://github.com/sofa-framework/sofa/pull/2406 ). **Plugins / Projects**; - [Plugins] Move Newmat matters into the new SofaNewmat plugin [#2532]( https://github.com/sofa-framework/sofa/pull/2532 ); - [CImgPlugin] Minimize plugin dependencies [#2318]( https://github.com/sofa-framework/sofa/pull/2318 ); - [image] fix shadow variable #2432 [#2437]( https://github.com/sofa-framework/sofa/pull/2437 ); - [image] Remove useless DiffusionSolver dependency [#2308]( https://github.com/sofa-framework/sofa/pull/2308 ); - [image] Clean init members warning [#2536]( https://github.com/sofa-framework/sofa/pull/2536 ); - [SofaCUDA] reorder CMakeLists just for more clarity [#2534]( https://github.com/sofa-framework/sofa/pull/2534 ). **Examples / Scenes**; - [examples] Add handleDynamicTopology in OglModel with dynamic texcoords [#2445]( https://github.com/sofa-framework/sofa/pull/2445 ); - [examples] Clean linear solver scenes [#2494]( https://github.com/sofa-framework/sofa/pull/2494 ); - [examples] Limit GlobalSystemMatrixExporter.scn to 1 iteration [#2328]( https://github.com/sofa-framework/sofa/pull/2328 ); - [examples] Make scene resolution independent + doc [#2361]( https://github.com/sofa-framework/sofa/pu,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:162824,depend,dependencies,162824,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,"fa_add_subdirectory(plugin Sensable Sensable); sofa_add_subdirectory(plugin SensableEmulation SensableEmulation); sofa_add_subdirectory(plugin SofaHAPI SofaHAPI); sofa_add_subdirectory(plugin SofaCarving SofaCarving); sofa_add_subdirectory(plugin LeapMotion LeapMotion); sofa_add_subdirectory(plugin Geomagic Geomagic); sofa_add_subdirectory(plugin SofaAssimp SofaAssimp) # ColladaSceneLoader Depends on Flexible and image; sofa_add_subdirectory(plugin SofaMatrix SofaMatrix ON) # Depends on image, CImgPlugin; sofa_add_subdirectory(plugin BeamAdapter BeamAdapter EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin STLIB STLIB EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SoftRobots SoftRobots EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CollisionAlgorithm CollisionAlgorithm EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ConstraintGeometry ConstraintGeometry EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ShapeMatchingPlugin ShapeMatchingPlugin EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CSparseSolvers CSparseSolvers EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ModelOrderReduction ModelOrderReduction EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin Sofa.Metis Sofa.Metis EXTERNAL GIT_REF v24.06). sofa_add_subdirectory(plugin PSL PSL EXTERNAL GIT_REF v24.06). if((${CMAKE_CXX_COMPILER_ID} STREQUAL ""GNU"") AND (${CMAKE_SYSTEM_NAME} MATCHES ""Linux"")); sofa_add_subdirectory(plugin SofaPardisoSolver SofaPardisoSolver) # SofaPardisoSolver is only available under linux with gcc; endif(). sofa_add_subdirectory(plugin SofaCUDA SofaCUDA). sofa_find_package(Sofa.GL QUIET); if(Sofa.GL_FOUND); sofa_add_subdirectory(plugin SofaSimpleGUI SofaSimpleGUI) # SofaSimpleGUI plugin can't work without OPENGL; sofa_add_subdirectory(plugin VolumetricRendering VolumetricRendering) # VolumetricRendering plugin can't work without OPENGL; else(); message(""Sofa.GL not found; disabling SofaSimpleGUI and VolumetricRendering plugins""); endif(); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:4198,message,message,4198,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,1,['message'],['message']
Integrability,"failure shows human readable informations. [#730]( https://github.com/sofa-framework/sofa/pull/730 ); - [VisualModel] Improve the messages when loading mesh inside VisualModel [#778]( https://github.com/sofa-framework/sofa/pull/778 ); - [WriteState] minor fix with the time attribute, default values [#776]( https://github.com/sofa-framework/sofa/pull/776 ). **Plugins / Projects**; - [Geomagic] ADD an inputForceFeedback data in Geomagic [#648]( https://github.com/sofa-framework/sofa/pull/648 ); - [Geomagic] Fix dll export and some enhancements [#786]( https://github.com/sofa-framework/sofa/pull/786 ); - [MultiThreading] removed the boost thread dependency [#701]( https://github.com/sofa-framework/sofa/pull/701 ); - [MultiThreading] New components and Task scheduler classes refactoring [#745]( https://github.com/sofa-framework/sofa/pull/745 ); - [MultiThreading] Add Image plugin Data types in DataExchange component [#770]( https://github.com/sofa-framework/sofa/pull/770 ); - [MultiThreading] TaskScheduler Interface [#775]( https://github.com/sofa-framework/sofa/pull/775 ); - [runSofa] Add data field value change on mouse move [#750]( https://github.com/sofa-framework/sofa/pull/750 ); - [SofaCarving] Refresh and enhancement [#712]( https://github.com/sofa-framework/sofa/pull/712 ); - [SofaCarving] plugin enhancement [#787]( https://github.com/sofa-framework/sofa/pull/787 ); - [SofaPython] ADD forwarding of onMouseMove event into the script controller [#731]( https://github.com/sofa-framework/sofa/pull/731 ); - [SofaPython] ADD: Bindings for BoundingBox [#736]( https://github.com/sofa-framework/sofa/pull/736 ); - [SofaPython][PSDE] Psde derive io [#742]( https://github.com/sofa-framework/sofa/pull/742 ); - [SofaPython][PSDE] Update on demand as designed initially [#751]( https://github.com/sofa-framework/sofa/pull/751 ); - [SofaPython] ADD a custom __dir__ method in Binding_Base. [#762]( https://github.com/sofa-framework/sofa/pull/762 ); - [SofaPython] add getLinkedBase ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:282291,Interface,Interface,282291,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['Interface'],['Interface']
Integrability,"ficially supported.""); # remove lots of warnings (the Wall of ""normal"" clang seems different of Wall of clang-cl); list(APPEND SOFACONFIG_COMPILE_OPTIONS -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-double-promotion -Wno-old-style-cast -Wno-reserved-id-macro -Wno-language-extension-token -Wno-dllexport-explicit-instantiation-decl -Wno-nonportable-system-include-path -Wno-zero-as-null-pointer-constant -Wno-documentation); # optimization flags (not sure if necessary..); list(APPEND SOFACONFIG_COMPILE_OPTIONS_RELEASE -march=native); if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/fp:fast""); endif(); endif(); endif(); endif(). # Mac specific; if(APPLE); #remove OpenGL deprecation message; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-DGL_SILENCE_DEPRECATION""); endif(). ## OpenMP; option(SOFA_OPENMP ""Compile Sofa with OpenMP multithreading."" OFF); if(SOFA_OPENMP); sofa_find_package(OpenMP QUIET); if (OPENMP_FOUND); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""${OpenMP_CXX_FLAGS}""); list(APPEND SOFACONFIG_LINK_OPTIONS ""${OpenMP_CXX_FLAGS}""); else(); message(""WARNING: Your compiler does not implement OpenMP.""); endif(); endif(). ## Tracy; option(SOFA_TRACY ""Compile SOFA with the Tracy profiler client"" OFF); if (SOFA_TRACY); set(SOFA_TRACY_VERSION v0.9.1); include(FetchContent); option(TRACY_STATIC ""Whether to build Tracy as a static library"" OFF); FetchContent_Declare (; tracy; GIT_REPOSITORY https://github.com/wolfpld/tracy.git; GIT_TAG ${SOFA_TRACY_VERSION}; GIT_SHALLOW TRUE; GIT_PROGRESS TRUE; ); FetchContent_MakeAvailable (tracy); target_link_libraries(${PROJECT_NAME} PUBLIC TracyClient ); message(STATUS ""SOFA is compiled with the Tracy profiler client. Use the Tracy server ${SOFA_TRACY_VERSION}.""); endif(). option(SOFA_ENABLE_BUILTIN_TIMER ""Enable the builtin timers"" ON); if(SOFA_ENABLE_BUILTIN_TIMER); set(SOFA_ENABLE_SCOPED_ADVANCED_TIMER 1); endif(). # An important C++11 feature may be not enabled due to; # the compiler being built without the --enabl",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:10154,message,message,10154,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['message'],['message']
Integrability,framework/sofa/pull/1946 ); - **[SofaBaseCollision]** Move OBB/Capsule-related intersections/detections/contacts to SofaMiscCollision [#2073]( https://github.com/sofa-framework/sofa/pull/2073 ); - **[SofaBaseCollision]** Remove dependencies on BaseIntTool [#2081]( https://github.com/sofa-framework/sofa/pull/2081 ); - **[SofaCore]** Clean dependencies to SimulationCore [#1928]( https://github.com/sofa-framework/sofa/pull/1928 ); - **[SofaFramework]** Create Sofa.Config module [#1674]( https://github.com/sofa-framework/sofa/pull/1674 ); - **[SofaFramework]** Create Sofa.Testing module [#1834]( https://github.com/sofa-framework/sofa/pull/1834 ); - **[SofaFramework]** Isolate OpenGL code into a single module (Sofa.GL) [#1649]( https://github.com/sofa-framework/sofa/pull/1649 ); - **[SofaFramework]** Rename modules (cmake) [#2001]( https://github.com/sofa-framework/sofa/pull/2001 ); - [SofaGui] Package SofaGui [#1719]( https://github.com/sofa-framework/sofa/pull/1719 ); - **[SofaHelper]** Clean dependencies to defaulttype [#1915]( https://github.com/sofa-framework/sofa/pull/1915 ); - **[SofaHelper]** Remove some SofaCore dependencies [#1810]( https://github.com/sofa-framework/sofa/pull/1810 ); - **[SofaKernel]** Create Sofa.Geometry and Sofa.Topology modules [#1912]( https://github.com/sofa-framework/sofa/pull/1912 ); - **[SofaKernel]** Create Sofa.Type module [#1555]( https://github.com/sofa-framework/sofa/pull/1555 ); - **[SofaKernel]** Package all modules of SofaFramework [#1990]( https://github.com/sofa-framework/sofa/pull/1990 ); - **[SofaKernel]** Port Mat from Defaulttype to Sofa.Type [#1775]( https://github.com/sofa-framework/sofa/pull/1775 ); - **[SofaKernel]** Port Quat from Defaulttype to Sofa.Type [#1790]( https://github.com/sofa-framework/sofa/pull/1790 ); - **[SofaKernel]** Port Vec from Defaulttype to Sofa.Type (bis) [#1734]( https://github.com/sofa-framework/sofa/pull/1734 ); - **[SofaKernel]** Port a bunch of types from Helper and Defaulttype to Sofa.Typ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:168433,depend,dependencies,168433,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,"framework/sofa/pull/3727) ; - [plugins] ArticulatedSystemMapping : adds size check & fixes typo [#3751](https://github.com/sofa-framework/sofa/pull/3751) . **Examples / Scenes**; - [All] Fix example scenes showing warnings or errors [#3526](https://github.com/sofa-framework/sofa/pull/3526) ; - [all] Update totalmass to totalMass [#3622](https://github.com/sofa-framework/sofa/pull/3622) . **Scripts / Tools**; - [CI, Scenes] Restore custom parameters for the scene-tests [#3674](https://github.com/sofa-framework/sofa/pull/3674) . ### Cleaning. **Architecture**; - [all] Lifecycle v22.06 [#3535](https://github.com/sofa-framework/sofa/pull/3535) ; - [Type] Quat: small optimization for axisToQuat() [#3559](https://github.com/sofa-framework/sofa/pull/3559) ; - [Config] Remove unused SOFA_WITH_THREADING option [#3565](https://github.com/sofa-framework/sofa/pull/3565) ; - [Project] Start v23.06 dev phase [#3573](https://github.com/sofa-framework/sofa/pull/3573) ; - [Cmake] Update warning replacement message for deprecated macro sofa_add_XX [#3611](https://github.com/sofa-framework/sofa/pull/3611) ; - [Sofa] Remove warnings [#3627](https://github.com/sofa-framework/sofa/pull/3627) ; - [Sofa.framework] Compile and run tests when SReal is float [#3628](https://github.com/sofa-framework/sofa/pull/3628) ; - [Type] Fix massive warning due to Mat.h [#3633](https://github.com/sofa-framework/sofa/pull/3633) ; - [Core] TLink: Fix warnings about comparisons between unnamed enums [#3714](https://github.com/sofa-framework/sofa/pull/3714) ; - [Helper] Deprecate constructor of OptionsGroup [#3741](https://github.com/sofa-framework/sofa/pull/3741) ; - [Config] Remove suspicious Eigen macro preventing vectorization [#3780](https://github.com/sofa-framework/sofa/pull/3780) . **Modules**; - [StateContainer] Avoid code duplication in MechanicalObject [#3541](https://github.com/sofa-framework/sofa/pull/3541) ; - [FEM.Elastic] Fix unit tests warnings [#3545](https://github.com/sofa-framework/sofa/",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:61626,message,message,61626,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,g [#1319]( https://github.com/sofa-framework/sofa/pull/1319 ). **Plugins / Projects**; - [Geomagic] Fix several wrong behaviors in driver code [#1378]( https://github.com/sofa-framework/sofa/pull/1378 ); - [MeshSTEPLoader] FIX OCC version check [#1312]( https://github.com/sofa-framework/sofa/pull/1312 ); - [MeshSTEPLoader] FIX build with OCC >= 7.4 [#1310]( https://github.com/sofa-framework/sofa/pull/1310 ); - [Modeler] FIX link error on Windows [#1282]( https://github.com/sofa-framework/sofa/pull/1282 ); - [SofaMiscCollision] Fix topological changes in TetrahedronCollisionModel [#1354]( https://github.com/sofa-framework/sofa/pull/1354 ); - [SofaSphFluid] Fix broken behavior for ParticleSink and ParticleSource [#1278]( https://github.com/sofa-framework/sofa/pull/1278 ); - [SofaSphFluid] FIX .scene-tests [#1317]( https://github.com/sofa-framework/sofa/pull/1317 ); - [SofaOpenCL] Make it work with 20.06 [#1361]( https://github.com/sofa-framework/sofa/pull/1361 ); - [SofaPython] Restrict the plugin and its dependers to C++11 [#1284]( https://github.com/sofa-framework/sofa/pull/1284 ). **Examples / Scenes**; - [examples] Fix SurfacePressureForceField example [#1273]( https://github.com/sofa-framework/sofa/pull/1273 ); - [examples] Fix caduceus [#1392]( https://github.com/sofa-framework/sofa/pull/1392 ); - [examples] Update the scene StandardTetrahedralFEMForceField.scn [#1064]( https://github.com/sofa-framework/sofa/pull/1064 ). ### Cleanings. **Architecture**. **Modules**; - [All] Clean namespace for some classes [#1422]( https://github.com/sofa-framework/sofa/pull/1422 ); - [All] Fix warnings due to visibility attribute [#1421]( https://github.com/sofa-framework/sofa/pull/1421 ); - [All] Clean due to doc [#1398]( https://github.com/sofa-framework/sofa/pull/1398 ); - [All] Clean warnings [#1376]( https://github.com/sofa-framework/sofa/pull/1376 ); - [All] Fix minor warnings [#1388]( https://github.com/sofa-framework/sofa/pull/1388 ); - [All] Fix warnings generated due t,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:238064,depend,dependers,238064,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependers']
Integrability,https://github.com/sofa-framework/sofa/pull/1446 ); - [SofaMacros] FIX libs copy and plugin deps finding [#1708]( https://github.com/sofa-framework/sofa/pull/1708 ); - [SofaMacros] FIX missing lib copy on Windows [#1711]( https://github.com/sofa-framework/sofa/pull/1711 ); - [SofaMacros] FIX plugins RPATH [#1619]( https://github.com/sofa-framework/sofa/pull/1619 ); - [SofaMacros] Improve RPATH coverage on MacOS [#1713]( https://github.com/sofa-framework/sofa/pull/1713 ); - [SofaMacros] Recursive deps search for RPATH [#1710]( https://github.com/sofa-framework/sofa/pull/1710 ); - [SofaOpenglVisual] OglViewport: a fix for compatibility with modern OpenGL [#1500]( https://github.com/sofa-framework/sofa/pull/1500 ); - [SofaSimulationGraph] No reason to have moveChild in private [#1470]( https://github.com/sofa-framework/sofa/pull/1470 ). **Plugins / Projects**; - [CGALPlugin] Fix compilation for CGal version > 5 [#1522]( https://github.com/sofa-framework/sofa/pull/1522 ); - [CImgPlugin] CLEAN dependencies in CMakeLists [#1651]( https://github.com/sofa-framework/sofa/pull/1651 ); - [Flexible] FIX deps to pluginized modules [#1590]( https://github.com/sofa-framework/sofa/pull/1590 ); - [Geomagic] Fix scenes ForceFeedBack behavior due to a change in UncoupledConstraintCorrection [#1435]( https://github.com/sofa-framework/sofa/pull/1435 ); - [OmniDriverEmul] Fix thread behavior and replace boost/pthread by std::thread [#1665]( https://github.com/sofa-framework/sofa/pull/1665 ); - [SofaOpenCL] Fix Cmake configuration [#1647]( https://github.com/sofa-framework/sofa/pull/1647 ); - [SofaPython] Small fixes to import plugin and remove scene warnings [#1466]( https://github.com/sofa-framework/sofa/pull/1466 ); - [runSofa] CLEAN unused dep to SofaGeneralLoader [#1648]( https://github.com/sofa-framework/sofa/pull/1648 ); - [SofaSPHFluid] Fix compilation with std::execution [#1542]( https://github.com/sofa-framework/sofa/pull/1542 ). **Examples / Scenes**; - [examples] Fix Hexahedron,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:224103,depend,dependencies,224103,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,https://github.com/sofa-framework/sofa/pull/1843 ). **Examples / Scenes**; - [examples] Add missing RequiredPlugin [#1895]( https://github.com/sofa-framework/sofa/pull/1895 ). ____________________________________________________________. ## [v20.12.01]( https://github.com/sofa-framework/sofa/tree/v20.12.01 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v20.12.00...v20.12.01 ). ### Improvements; **Modules**; - [SofaGui] Improve background v20.12 [#1758]( https://github.com/sofa-framework/sofa/pull/1758 ); - **[SofaHelper]** ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). **Plugins / Projects**; - [SofaPython] ADD PluginManager callback and use it in SofaPython [#1777]( https://github.com/sofa-framework/sofa/pull/1777 ). ### Bug Fixes; **Architecture**; - [SofaMacros] Shorter name for relocatable targets [#1769]( https://github.com/sofa-framework/sofa/pull/1769 ). **Modules**; - [All] FIX build without SofaPython soft dependencies [#1829]( https://github.com/sofa-framework/sofa/pull/1829 ); - [All] Fix invalid Memory access in MechanicalObject and Compliant_test [#1849]( https://github.com/sofa-framework/sofa/pull/1849 ); - [All] Almost green dashboard [#1669]( https://github.com/sofa-framework/sofa/pull/1669 ); - **[SofaCore_test]** Update the two failling tests so they match the new convention for TypeInfo [#1709]( https://github.com/sofa-framework/sofa/pull/1709 ); - **[SofaDefaultType]** FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - **[SofaBaseMechanics]** fixes reinit of BarycentricMapping [#1815]( https://github.com/sofa-framework/sofa/pull/1815 ); - [SofaGuiCommon] Fix computationTimeSampling [#1698]( https://github.com/sofa-framework/sofa/pull/1698 ); - [SofaGuiCommon] fix BackgroundSetting [#1826]( https://github.com/sofa-framework/sofa/pull/1826 ); - [SofaGuiQt] ADD qt.conf.h for custom qt.conf loading at runtime [#1820]( https://github.com/,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:211205,depend,dependencies,211205,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,https://github.com/sofa-framework/sofa/pull/2091 ); - **[SofaHelper]** Clarify with global namespace [#1953]( https://github.com/sofa-framework/sofa/pull/1953 ); - **[SofaHelper]** Moves operator>> specialisation for int from set.h to set.cpp [#1902]( https://github.com/sofa-framework/sofa/pull/1902 ); - **[SofaHelper]** Remove unused UnitTest class + clean FnDispatcher includes [#1983]( https://github.com/sofa-framework/sofa/pull/1983 ); - [SofaImplicitOdeSolver] Fix Latex format for doxygen [#2205]( https://github.com/sofa-framework/sofa/pull/2205 ); - **[SofaKernel]** Remove last template parameter in Visitor::for_each/for_each_r [#1689]( https://github.com/sofa-framework/sofa/pull/1689 ); - **[SofaKernel]** Remove some dependencies from SofaHelper to SofaCore [#1686]( https://github.com/sofa-framework/sofa/pull/1686 ); - **[SofaKernel]** Removes the method BaseData::getOwnerClass() [#1890]( https://github.com/sofa-framework/sofa/pull/1890 ); - **[SofaKernel][SofaGui]** Move Boost::program_option and remove Boost::system dependencies [#1848]( https://github.com/sofa-framework/sofa/pull/1848 ); - [SofaMiscCollision] Move back to modules (instead of applications/plugins) [#2127]( https://github.com/sofa-framework/sofa/pull/2127 ); - [SofaMiscMapping] Remove unused global variable [#1956]( https://github.com/sofa-framework/sofa/pull/1956 ); - [SofaNonUniformFem] Remove shadow variable [#1874]( https://github.com/sofa-framework/sofa/pull/1874 ); - **[SofaSimpleFem]** FIX wrong initialization order [#1938]( https://github.com/sofa-framework/sofa/pull/1938 ); - **[SofaSimulation\*]** Fix confusion between namespaces [#1959]( https://github.com/sofa-framework/sofa/pull/1959 ); - **[SofaSimulationCore]** Clean free motion animation loop [#1930]( https://github.com/sofa-framework/sofa/pull/1930 ); - **[SofaSimulationCore]** Move WorkerThread class into its own file [#2002]( https://github.com/sofa-framework/sofa/pull/2002 ); - **[SofaSimulationCore]** Moves code from Topo,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:204181,depend,dependencies,204181,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,https://github.com/sofa-framework/sofa/pull/2221 ); - [SofaSparseSolver] Fix msg readibility in SparseLDL [#2294]( https://github.com/sofa-framework/sofa/pull/2294 ); - [SofaSparseSolver] Introduce FillReducingOrdering [#2501]( https://github.com/sofa-framework/sofa/pull/2501 ). **Plugins / Projects**; - [image] Restore ability to select a subset of instanciations [#2340]( https://github.com/sofa-framework/sofa/pull/2340 ). **Examples / Scenes**; - [examples] Add a new example how to create heterogeneous tet FEM [#2289]( https://github.com/sofa-framework/sofa/pull/2289 ); - [examples] Speedup the caduceus [#2471]( https://github.com/sofa-framework/sofa/pull/2471 ); - [Scenes] Update TriangleSurfaceCutting scene to use a bigger mesh with texture [#2381]( https://github.com/sofa-framework/sofa/pull/2381 ). **Scripts / Tools**. ### Bug Fixes. **Architecture**; - [CMake] Clean Sofa.Core CMakeLists + Add missing headers [#2444]( https://github.com/sofa-framework/sofa/pull/2444 ); - [CMake] FIX Threads dependency [#2511]( https://github.com/sofa-framework/sofa/pull/2511 ); - [CMake] FIX libs copy on Windows [#2261]( https://github.com/sofa-framework/sofa/pull/2261 ); - [CMake][modules] FIX out-of-tree builds [#2453]( https://github.com/sofa-framework/sofa/pull/2453 ); - [CMake] Fix return values of Qt5/Qt6 find_packages [#2346]( https://github.com/sofa-framework/sofa/pull/2346 ). **Modules**; - [All] Fix potential bugs/crashes (from warnings) [#2379]( https://github.com/sofa-framework/sofa/pull/2379 ); - [All] Update IDE directory for targets [#2239]( https://github.com/sofa-framework/sofa/pull/2239 ); - [SofaMiscForceField] Fix massDensity vector update when adding new elements in MeshMatrixMass [#2257]( https://github.com/sofa-framework/sofa/pull/2257 ); - [Sofa.Compat] Fix Matrixexpr alias [#2369]( https://github.com/sofa-framework/sofa/pull/2369 ); - [Sofa.Compat] Fix install [#2360]( https://github.com/sofa-framework/sofa/pull/2360 ); - [Sofa.Core] Fix diamond inheri,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:144512,depend,dependency,144512,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,"hub.com/sofa-framework/sofa/pull/2083 ); - [plugins] Disable old python2 examples [#2025]( https://github.com/sofa-framework/sofa/pull/2025 ); - [runSofa/Modules] Fix various problems with Sofa.GL [#1743]( https://github.com/sofa-framework/sofa/pull/1743 ). **Examples / Scenes**; - [scenes] Fix (new?) failing scenes on the CI [#1798]( https://github.com/sofa-framework/sofa/pull/1798 ). ### Cleanings; **Architecture**; - [CMake] CLEAN old metapackage usage [#1883]( https://github.com/sofa-framework/sofa/pull/1883 ); - [CMake] CLEAN option SOFA_BUILD_WITH_PCH_ENABLED [#1755]( https://github.com/sofa-framework/sofa/pull/1755 ); - [CMake] CLEAN/FIX deprecated things (MSVC mainly) [#2217]( https://github.com/sofa-framework/sofa/pull/2217 ). **Modules**; - [All] Remove commented code & fix trivial issues [#1693]( https://github.com/sofa-framework/sofa/pull/1693 ); - [All] Remove useless pragma guards in cpp files [#1929]( https://github.com/sofa-framework/sofa/pull/1929 ); - [All] CLEAN tests, use CMake weak dependencies [#1886]( https://github.com/sofa-framework/sofa/pull/1886 ); - [All] Disable Drawtool functions using Vec4f [#2197]( https://github.com/sofa-framework/sofa/pull/2197 ); - [All] Rename SOFA_NO_OPENGL + Relocate Sofa.GL + Improve sofa_add_* macros [#1913]( https://github.com/sofa-framework/sofa/pull/1913 ); - [All] Avoid redundant printLog check [#2102]( https://github.com/sofa-framework/sofa/pull/2102 ); - [All] Depreciate one of the missing use of Aspect in Link and update the code base [#1712]( https://github.com/sofa-framework/sofa/pull/1712 ); - [All] Fix warnings [#2196]( https://github.com/sofa-framework/sofa/pull/2196 ); - [All] Fix warnings [#2097]( https://github.com/sofa-framework/sofa/pull/2097 ); - [All] Refactor Read/Write Accessor. [#1807]( https://github.com/sofa-framework/sofa/pull/1807 ); - [All] Refactor vector & vector_device [#1799]( https://github.com/sofa-framework/sofa/pull/1799 ); - [All] Remove last includes of SofaSimulationTree [",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:195735,depend,dependencies,195735,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,"ials, we show the different integration schemes and algorithms available to solve the system of Ordinary Differential Equations (ODE) at each step of the simulation. SOFA provides the following integration schemes:; ; Static integration scheme,; Explicit integration schemes,; Implicit integration schemes. Before going any further, it is important to know that state vectors in SOFA are saved in a component called ""State"" (see chapter ""State"" in the documentation).; For instance, when mechanical models are being solved, the user needs to add a ""MechanicalState"" component in the graph.; Inside the component, the format of storage for the state vector is a structure called MultiVector.; The size and the nature of the degrees of freedom is chosen by setting a ""template"" in the State component. Let us now go into details about the different ODE solvers in SOFA. First, the static integration is an integration which does not take the time into account. Such a static integration can be useful for checking the convergence of algorithms. Furthermore, different dynamic solvers have been implement in SOFA. Unlike static solvers, these solvers do take the dynamics of the system into account. However, depending on the aim of the computation, the solver has to be carefully chosen.; Let us review the basic differences between explicit and implicit solvers. Concerning the explicit solvers, they compute the new state variables from the state variables at the previous step.; The advantage is that explicit solvers can be fast, but the stability of the solver is not always granted. Very small time steps can be required to get satisfactory accuracy.; Moreover, such solvers are not suitable for every simulation. For example, explicit solvers do not compute cyclic loadings correctly, but could be advised in case of soft or high-mass objects. Concerning implicit solvers, they compute the new state variables by solving an equation involving the previous state variables and the new ones.; In c",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html:1072,integrat,integration,1072,examples/Tutorials/Solvers/Solvers.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/examples/Tutorials/Solvers/Solvers.html,1,['integrat'],['integration']
Integrability,"ield example [#2092]( https://github.com/sofa-framework/sofa/pull/2092 ); - [scenes] Add scenes to test several components during mesh removal [#2161]( https://github.com/sofa-framework/sofa/pull/2161 ). ### Bug Fixes; **Architecture**; - [CMake] FIX Debug build + more cleaning [#1891]( https://github.com/sofa-framework/sofa/pull/1891 ); - [CMake] FIX SofaFramework aliases [#2175]( https://github.com/sofa-framework/sofa/pull/2175 ); - [CMake] FIX header include tree [#1863]( https://github.com/sofa-framework/sofa/pull/1863 ); - [CMake] FIX resources and translations install on Windows [#1949]( https://github.com/sofa-framework/sofa/pull/1949 ); - [CMake] Set CMake install default component [#2037]( https://github.com/sofa-framework/sofa/pull/2037 ); - [CMake][tools] v20.12.00 changes [#1804]( https://github.com/sofa-framework/sofa/pull/1804 ). **Extlibs**; - [GTest] Fix with GCC11 [#2181]( https://github.com/sofa-framework/sofa/pull/2181 ). **Modules**; - [All] FIX build without SofaPython soft dependencies [#1829]( https://github.com/sofa-framework/sofa/pull/1829 ); - [All] FIX warnings during STC#11 [#2140]( https://github.com/sofa-framework/sofa/pull/2140 ); - [All] Fix compilation warning. [#1699]( https://github.com/sofa-framework/sofa/pull/1699 ); - [All] Fix invalid Memory access in MechanicalObject and Compliant_test [#1849]( https://github.com/sofa-framework/sofa/pull/1849 ); - [All] Fix debug compilation [#2223]( https://github.com/sofa-framework/sofa/pull/2223 ); - [All] Changes needed for v21.06 [#2226]( https://github.com/sofa-framework/sofa/pull/2226 ); - **[Sofa.Type]** Add forgotten function declaration, used in Debug [#1937]( https://github.com/sofa-framework/sofa/pull/1937 ); - **[Sofa.Type]** Add missing header in fixed_array [#2006]( https://github.com/sofa-framework/sofa/pull/2006 ); - **[SofaBaseCollision]** Fix pipeline warning test [#2132]( https://github.com/sofa-framework/sofa/pull/2132 ); - **[SofaBaseCollision]** Clean code related to inte",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:181686,depend,dependencies,181686,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,"ile drawing bbox (QtViewer); - add of GUIEvent into the STLExporter; - Make the code compatible with ClipPlane (using ClipVertex in shaders, which is deprecated for GLSL > 1.4); - Optimize the callto C-PYTHON side when the functions are not implemented in the python side; - Add color attribute support (and default color if not present in the node); - Reactivate color map in TetraFEM, as it does not depend on SofaOpenGLVisual anymore; - indices data field for UniformMass; - analyze matrix only if number of non-zeroes has changed and no iterative refinement; - update the applyConstraint methods according to the actual API; - Adding ProjectionTo{Plane|Line}MultiMapping where the plane (origin,normal) and the line (origin,direction) are dofs; - add MeshBoundaryROI with an example. - [Tests]; - for (multi)Mapping test, check the size of the mapping output is correct; - adding TestMessageHandler that raises a gtest failure each time an error message is processed; - test for node removal; - test for removal of a node containing an UncoupledConstraintCorrection (for now the test fails because there is a problem with the removal of that component); - add of Multi2Mapping_test; - add DistanceMapping_test. - [SofaPython]; - logger: cleaning emitter; - sml.Mesh: adding load function; - sml: python set for tags is created by objects themselves; - sml: add tag to JointGeneric; - sml: add the printLog flag; - sml: setup units in BaseScene for all sml Scene class; - sml: mesh has a clear id; - sml:insertVisual: bug fix for solid with multiple meshes (just impacting the Display scene); - sml: handy constructor for Dof creation; - sml: like <mesh> <image> can be defined in <solid>; - sml: add a utility function: look into the valueByTag dictionary for a tag contained in tags; - sml: adding a warning if a vertex group is empty; - sml: can have offsets under solids; - sml: remove deprecated setTagFromTag() method; - API: add subsetFromDeformables function; - binding Node::isInitialized;",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:347137,message,message,347137,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"ils/changeClassName.sh  in Unix and utils\changeClassName.bat  in Windows ; to replace TestPlugin; with MyPlugin in all; the file; names and their content:; On Unix:; utils/changeClassName.bash TestPlugin MyPlugin. On Windows:; utils\changeClassName.bat TestPlugin MyPlugin; cd examples; ..\utils\changeClassName.bat TestPlugin MyPlugin; cd ../doc/; ..\utils\changeClassName.bat TestPlugin MyPlugin  This can take some time !. At this point, you may want to add the plugin directory to svn.; You can also reload this page, since its content was changed by the; last command.; Finally, you can generate the (almost empty) code documentation; using in the same command line tool:; doxygen Doxyfile . To insert the plugin in the SOFA development project, you can:. add the following line to your sofa-local.prf; DEFINES += SOFA_HAVE_PLUGIN_TestPlugin ; add the following line to Sofa.pro; contains(DEFINES, SOFA_HAVE_PLUGIN_TestPlugin); {; usePlugin(TestPlugin) } . if your plugin depends on other plugins, edit file TestPlugin-dependencies.prf; .; See sofa-dependencies.prf; for examples of how dependencies are defined. Examples. Currently there is only one example:. TestPlugin.scn  , which does nothing, as shown in the figure. Project structure. the C++ code is in the root directory; the documentation starts in doc/index.html and it is; linked to the code documentation; which you can generate using; doxygen.; The main page of the code documentation is written in file initTestPlugin.h. a template of user documentation is found in TestPlugin.tex. Is should; be filled in for every component in the plugin, then compiled with your; favourite Latex distribution. The filename should match the name of the; component. ; the examples are in examples/; . The first one is TestPlugin.scn, and when; runSOFA; opens it, an html page pops; up, with a link to the plugin documentation. Intellectual; property and rights. Authors. You. Contact. You@your.institute. License. Your can distribute this plugin",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html:1544,depend,depends,1544,applications/plugins/SofaTest/doc/index.html,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaTest/doc/index.html,2,['depend'],"['dependencies', 'depends']"
Integrability,"ime option.; if(CMAKE_COMPILER_IS_GNUCXX); if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.8); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-D_GLIBCXX_USE_NANOSLEEP -D_GLIBCXX_USE_SCHED_YIELD""); endif(); endif(). # hack for clang on old macosx (version < 10.9, such as the dashboard servers); # that is using, by default at that time, a libstdc++ that did not fully implement c++11; if(APPLE AND ${CMAKE_SYSTEM_NAME} MATCHES ""Darwin"" AND CMAKE_SYSTEM_VERSION VERSION_LESS ""10.9"" AND ${CMAKE_CXX_COMPILER_ID} MATCHES ""Clang"" ); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""-stdlib=libc++""); endif(). if(CMAKE_SYSTEM_NAME STREQUAL Linux AND NOT CMAKE_BUILD_TYPE MATCHES ""Debug""); target_compile_definitions(${PROJECT_NAME} PUBLIC ""NDEBUG""); # On Windows and MacOS, NDEBUG and _DEBUG are automatically; # set in the default c/cxx flags of the right configurations; endif(); if(MSVC); # Increase Number of Sections in .Obj file; list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/bigobj""); if(SOFA_VECTORIZE); message(""SOFA_VECTORIZE option is deprecated and has been split between SOFA_ENABLE_SIMD and SOFA_ENABLE_FAST_MATH. These 2 options will be enabled.""); set(SOFA_ENABLE_SIMD ON); set(SOFA_ENABLE_FAST_MATH ON); endif(); # SIMD flags; if(SOFA_ENABLE_SIMD); include(find_avx); MSVC_CHECK_FOR_AVX() # search for availability of AVX2 (otherwise set to AVX); if (HAVE_AVX2_EXTENSIONS); message(""Your CPU supports AVX2 SIMD. Using flags: ${AVX_FLAGS}""); elseif(HAVE_AVX_EXTENSIONS); message(""Your CPU supports only AVX SIMD. Using flags: ${AVX_FLAGS}""); else(); message(""Your CPU does not support AVX SIMD."") # SSE2 is the default when x64 is set; endif(); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""${AVX_FLAGS}""); endif(); if(SOFA_ENABLE_FAST_MATH); list(APPEND SOFACONFIG_COMPILE_OPTIONS ""/fp:fast""); endif(); endif(). # Use Release flags for MinSizeRel and RelWithDebInfo build types:; set_target_properties(${PROJECT_NAME} PROPERTIES; MAP_IMPORTED_CONFIG_MINSIZEREL Release; MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release; ); t",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt:12075,message,message,12075,Sofa/framework/Config/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/framework/Config/CMakeLists.txt,1,['message'],['message']
Integrability,ing applyDJT [#3761](https://github.com/sofa-framework/sofa/pull/3761); - [LinearAlgebra] Restore insertion operator for BaseVector [#3775](https://github.com/sofa-framework/sofa/pull/3775) ; - [StateContainer] Fix bug in dynamic data registration [#3783](https://github.com/sofa-framework/sofa/pull/3783) ; - [Rendering3D] Missing StateLifeCycle [#3784](https://github.com/sofa-framework/sofa/pull/3784) ; - [Mapping.Nonlinear] Fix matrix assembly in RigidMapping [#3803](https://github.com/sofa-framework/sofa/pull/3803) ; - [Visual] VisualModelImpl: Fix updateVisual() [#3815](https://github.com/sofa-framework/sofa/pull/3815) ; - [LinearSolver.Iterative] CMake: Fix package configuration [#3840](https://github.com/sofa-framework/sofa/pull/3840) ; - [Rendering3D] OglModel: Revert back to glBufferSubData [#3841](https://github.com/sofa-framework/sofa/pull/3841) ; - [SolidMechanics.Spring] CMake: Fix package configuration [#3846](https://github.com/sofa-framework/sofa/pull/3846) ; - [Spring] Remove unused dependencies [#3848](https://github.com/sofa-framework/sofa/pull/3848) ; - [FEM.Linear] FIX & Minor refactor of buildStiffnessMatrix in TriangleFEMForceField [#3989](https://github.com/sofa-framework/sofa/pull/3989). **Plugins / Projects**; - [SofaEulerianFluid] Fix: rename shadow variable in Fluid2D [#3561](https://github.com/sofa-framework/sofa/pull/3561) ; - [MultiThreading] ParallelBruteForceBroadPhase: Fix assertion error [#3574](https://github.com/sofa-framework/sofa/pull/3574) ; - [image] Fix Sofa.GUI dependency [#3591](https://github.com/sofa-framework/sofa/pull/3591) ; - [SofaCUDA] Missing support for double precision floating-points [#3603](https://github.com/sofa-framework/sofa/pull/3603) ; - [SofaPhysicsAPI] Fix compilation by replacing use of SofaGUI by sofa::GUI::common [#3612](https://github.com/sofa-framework/sofa/pull/3612) ; - [SofaCUDA] No longer use deprecated texture references in TetraTLED [#3650](https://github.com/sofa-framework/sofa/pull/3650) ; - ,MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:59283,depend,dependencies,59283,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependencies']
Integrability,"ink software (hereafter referred to as ""Your Software""); against the Licensed Software and/or distribute binaries of Your Software; linked against the Licensed Software, provided that:. A) Your Software is licensed under one of the following licenses:. License name Version(s)/Copyright Date; Academic Free License 2.0, 2.1, 3.0; Apache Software License 1.0 or 1.1; Apache License 2.0; Apple Public Source License 2.0; BSD license ""July 22 1999""; Common Development and Distribution; License (CDDL) 1.0; Common Public License 1.0; Eclipse Public License 1.0; GNU Library or ""Lesser""; General Public License (LGPL) 2.0, 2.1, 3.0; Jabber Open Source License 1.0; Mozilla Public License (MPL) 1.0 or 1.1; Open Software License 2.0, 3.0; PHP License 3.0; Python Software Foundation License 2.1.1; Q Public License 1.0; Sleepycat License ""1999""; W3C License ""2001""; X11 License X11R6.6; Zope Public License 2.0, 2.1. and. B) You must, on request, make a complete package including the complete ; source code of Your Software (as defined in the GNU General Public ; License version 2, section 3, but excluding anything excluded by the; special exception in the same section) available to Gilles Debunne; under the same license as that granted to other recipients of the ; source code of Your Software. and. C) Your or any other contributor's rights to:. i) distribute the source code of Your Software to anyone for; any purpose;. and. ii) publicly discuss the development project for Your; Software and its goals in any form and in any forum. are not prohibited by any legal instrument, including but not limited to; contracts, non-disclosure agreements, and employee contracts. 2) The right to link non-Open Source applications with versions of the ; Licensed Software: You may link applications with versions of the Licensed ; Software, provided that such applications have been developed and are deployed; in accordance with the terms and conditions of the libQGLViewer Commercial ; License Agreement.; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/GPL_exception.txt:2423,contract,contracts,2423,Sofa/GUI/Qt/libQGLViewer/GPL_exception.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/Sofa/GUI/Qt/libQGLViewer/GPL_exception.txt,2,['contract'],['contracts']
Integrability,"ion; - fix Jacobian reserved size; - fix contacts and associated test. - [image]; - python tools: fix bug in mhd parsing; - MeshToImage: fix bresenham, be sure dmax>=1; - fix resampling of projection images, and marching cubes default parameter; - fix bug in mhd file loader; - fix rasterization when using vertex colors. ### Cleanings. - warnings were removed; - dead branches were removed; - the ‘using’ directives were removed in header files; - the repository sofa_root/modules/sofa/components has been cleaned (deprecated components removed); - clean many SOFA examples; - removing ""using helper::vector"" from VecTypes.h; - SofaQtGui: Remove qt3 remnants in ui files. - Minor clean; - clean SofaBaseCollision of OpenGL dependency; - cleaning Material::setColor; - Base: write sout as info (rather than warnings); - clean and fix RestShapeSpringsForceField draw functions; - Remove useless tests, optimize and fix potential bugs; - cleanup, precompute barycenters for tetra and hexa; - SofaBaseVisual: clean up and make consistent BaseCamera's code: clean QtViewer projection (remove OpenGL functions); - SofaBaseVisual: clean and fix BaseCamera Z clipping; - SofaOpenGLVisual: cleanup Lights (remove Glu calls and set matrices as data) + Fix typo in Camera; - quaternion to euler: not need for the hack since atan2 is used. - [SofaPython]; - clean examples; - clean the hard-binding example; - clean noPicking visitor. - [Flexible]; - remove unecessary data for Gauss points visualization; - some clean regarding openmp parallelisation; - clean metaFF; - remove unecessary apply in reinit; - clean FlexibleCorotationalMeshFEMForceField. - [Compliant]; - clean RigidJoint{Multi}Mapping. ____________________________________________________________. ## [v15.12]( https://github.com/sofa-framework/sofa/tree/v15.12 ). [Full log]( https://github.com/sofa-framework/sofa/compare/v15.09...v15.12 ). ____________________________________________________________. ## [v15.09]( https://github.com/sofa-fra",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:360534,depend,dependency,360534,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['depend'],['dependency']
Integrability,"ionLoop; SofaGeneralDeformable; SofaGeneralEngine; SofaGeneralExplicitOdeSolver; SofaGeneralImplicitOdeSolver; SofaGeneralLinearSolver; SofaGeneralLoader; SofaGeneralMeshCollision; SofaGeneralObjectInteraction; SofaGeneralRigid; SofaGeneralTopology; SofaGeneralVisual; SofaGraphComponent; SofaTopologyMapping; SofaUserInteraction. # SofaAdvanced; SofaNonUniformFem. # SofaMisc; SofaMiscCollision; SofaMiscEngine; SofaMiscExtra; SofaMiscFem; SofaMiscForceField; SofaMiscMapping; SofaMiscSolver; SofaMiscTopology. # Other (pluginized from SofaGeneral); SofaDenseSolver; SofaExporter; SofaHaptics; SofaOpenglVisual; SofaPreconditioner; SofaSparseSolver; SofaValidation; ). set(HEADER_FILES; config.h.in; components.h.in; initSofaComponentAll.h; ); set(SOURCE_FILES; initSofaComponentAll.cpp; ); set(EXTRA_FILES; README.md; ). add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${EXTRA_FILES}). set(SOFACOMPONENTALL_MODULES_INCLUDES """"); set(SOFACOMPONENTALL_MODULES_INITS """"); set(SOFACOMPONENTALL_MODULES_HAVES """"); foreach(module ${SOFACOMPONENTALL_MODULES}); string(TOUPPER ""${module}"" module_upper). sofa_find_package(${module} QUIET). if(${module}_FOUND); target_link_libraries(${PROJECT_NAME} ${module}); set(SOFACOMPONENTALL_MODULES_INCLUDES ""${SOFACOMPONENTALL_MODULES_INCLUDES}\n#include <${module}/init${module}.h>""); set(SOFACOMPONENTALL_MODULES_INITS ""${SOFACOMPONENTALL_MODULES_INITS} \\\n init${module}();""); else(); message(""${PROJECT_NAME}: ${module} will not be in the collection.""); endif(); set(SOFACOMPONENTALL_MODULES_HAVES ""${SOFACOMPONENTALL_MODULES_HAVES}\nset(SOFACOMPONENTALL_HAVE_${module_upper} ${SOFACOMPONENTALL_HAVE_${module_upper}})""); endforeach(). ## Install rules for the library and headers; CMake package configurations files; sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${PROJECT_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_INSTALL_DIR ""SofaComponentAll""; RELOCATABLE ""collections""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaComponentAll/CMakeLists.txt:1972,message,message,1972,applications/collections/deprecated/SofaComponentAll/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/collections/deprecated/SofaComponentAll/CMakeLists.txt,1,['message'],['message']
Integrability,"istration Registration EXTERNAL GIT_REF v24.06) # Depends on image, SofaPython, SofaGui and SofaDistanceGrid; sofa_add_subdirectory(plugin BulletCollisionDetection BulletCollisionDetection) # Depends on Compliant and LMConstraint; sofa_add_subdirectory(plugin InvertibleFVM InvertibleFVM EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin MeshSTEPLoader MeshSTEPLoader EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin PluginExample PluginExample EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ManifoldTopologies ManifoldTopologies EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SixenseHydra SixenseHydra); sofa_add_subdirectory(plugin SofaOpenCL SofaOpenCL); sofa_add_subdirectory(plugin Xitact Xitact); sofa_add_subdirectory(plugin Haption Haption); sofa_add_subdirectory(plugin PersistentContact PersistentContact); sofa_add_subdirectory(plugin Sensable Sensable); sofa_add_subdirectory(plugin SensableEmulation SensableEmulation); sofa_add_subdirectory(plugin SofaHAPI SofaHAPI); sofa_add_subdirectory(plugin SofaCarving SofaCarving); sofa_add_subdirectory(plugin LeapMotion LeapMotion); sofa_add_subdirectory(plugin Geomagic Geomagic); sofa_add_subdirectory(plugin SofaAssimp SofaAssimp) # ColladaSceneLoader Depends on Flexible and image; sofa_add_subdirectory(plugin SofaMatrix SofaMatrix ON) # Depends on image, CImgPlugin; sofa_add_subdirectory(plugin BeamAdapter BeamAdapter EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin STLIB STLIB EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin SoftRobots SoftRobots EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CollisionAlgorithm CollisionAlgorithm EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ConstraintGeometry ConstraintGeometry EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ShapeMatchingPlugin ShapeMatchingPlugin EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin CSparseSolvers CSparseSolvers EXTERNAL GIT_REF v24.06); sofa_add_subdirectory(plugin ModelOrderReduction ModelO",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt:2687,Depend,Depends,2687,applications/plugins/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/CMakeLists.txt,2,['Depend'],['Depends']
Integrability,"ith iterators; - you deal with long typenames AND or when the variable type is obvious. ## SOFA specific rules; - Tricky code should not be commented but rewritten! In general, the use of comments should be minimized by making the code self-documenting by appropriate name choices and an explicit logical structure.; - The use of magic numbers in the code should be avoided. Numbers other than 0 and 1 should be declared as named constants instead.; - The definition of ε-definition of limit ('epsilon', an arbitrarily small positive quantity) should not be code specific but rather use the class template [`std::numeric_limits`](https://en.cppreference.com/w/cpp/types/numeric_limits/epsilon). Here is an example: `const DataTypes::Real EPSILON = std::numeric_limits<DataTypes::Real>::epsilon();`; `const DataTypes::Real EPSILON = std::numeric_limits<DataTypes::Real>::epsilon();`; - All internal data, needed by your component, and that can’t be recomputed must be put inside a `Data` or a `DataPtr`. This way, your component can be saved. Also, this `Data` will be automatically displayed inside the GUI.; - For messaging in SOFA components, the [dedicated Messaging API](https://www.sofa-framework.org/community/doc/programming-with-sofa/start-coding/message-api/) must be used.; - `msg_info()` will display the message in the console only if the `printLog` flag is activated.; - `msg_warning()` will display the message in the console with an warning message.; - `msg_error()` will display the message in the console with an error message.; - Use `sofa::type::vector` instead of `std::vector`; - Only use `sofa::simulation::tree::GNode` when you need to directly use access to the children or the parent of the node. If not, use the more generic `sofa::simulation::Node`; - When an information, a function or an internal variable from an external component is needed in a component, prefer an explicit Link to connect both components instead of implicitly browsing the graph using `getContext`; ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md:6514,message,message-api,6514,GUIDELINES.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/GUIDELINES.md,6,['message'],"['message', 'message-api']"
Integrability,"ix explicit instantiations with MultiMapping [#1982]( https://github.com/sofa-framework/sofa/pull/1982 ); - **[SofaCore]** Remove duplicated explicit instanciation [#1981]( https://github.com/sofa-framework/sofa/pull/1981 ); - **[SofaDefaultType][SofaCUDA]** FIX compilation errors [#1761]( https://github.com/sofa-framework/sofa/pull/1761 ); - [SofaDeformable] Fix test in StiffSpringForceField doUpdateInternal [#1979]( https://github.com/sofa-framework/sofa/pull/1979 ); - **[SofaFramework]** Fix config files for Sofa.GL, for out-of-tree [#1911]( https://github.com/sofa-framework/sofa/pull/1911 ); - **[SofaFramework]** Put back Sofa.GL in Framework [#1920]( https://github.com/sofa-framework/sofa/pull/1920 ); - [SofaGeneralEngine] fixes ExtrudeQuadsAndGenerateHexas [#1673]( https://github.com/sofa-framework/sofa/pull/1673 ); - [SofaGeneralExplicitOdeSolver] Fix typo in CentralDifferenceSolver description [#1894]( https://github.com/sofa-framework/sofa/pull/1894 ); - [SofaGraphComponent] Clean format of RequiredPlugin message [#2111]( https://github.com/sofa-framework/sofa/pull/2111 ); - [SofaGraphComponent] Fix a typo in the warning emited by the APIVersion component and add missing allowed versions. [#2103]( https://github.com/sofa-framework/sofa/pull/2103 ); - [SofaGraphComponent] Fix message for RequiredPlugin [#2093]( https://github.com/sofa-framework/sofa/pull/2093 ); - [SofaGuiCommon] FIX build with SOFA_NO_OPENGL [#1724]( https://github.com/sofa-framework/sofa/pull/1724 ); - [SofaGuiCommon] Fix computationTimeSampling [#1698]( https://github.com/sofa-framework/sofa/pull/1698 ); - [SofaGuiCommon] Fix include path for compat files when installing [#1892]( https://github.com/sofa-framework/sofa/pull/1892 ); - [SofaGuiCommon] Remove unneeded include in PickHandler [#1707]( https://github.com/sofa-framework/sofa/pull/1707 ); - [SofaGuiCommon] Write json file [#2018]( https://github.com/sofa-framework/sofa/pull/2018 ); - [SofaGuiCommon] fix BackgroundSetting [#1826]( h",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md:185208,message,message,185208,CHANGELOG.md,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/CHANGELOG.md,1,['message'],['message']
Integrability,"ixSort/RadixSort.cpp; oclRadixSort/Scan.cpp; tools/showvector.cpp; tools/top.cpp; ). set(OTHER_FILES; kernels/OpenCLFixedConstraint.cl; kernels/OpenCLGenericParticleForceField.cl; kernels/OpenCLGenericParticleForceField_Plane.macrocl; kernels/OpenCLGenericParticleForceField_Sphere.macrocl; kernels/OpenCLMechanicalObject.cl; kernels/OpenCLMemoryManager.cl; kernels/OpenCLSpatialGridForce.cl; kernels/OpenCLSpringForceField.cl; kernels/OpenCLUniformMass.cl; kernels/oclRadixSort/RadixSort.cl; kernels/oclRadixSort/Scan_b.cl; ). if(SofaSphFluid_FOUND); list(APPEND HEADER_FILES; OpenCLSPHFluidForceField.h; OpenCLSPHFluidForceField.inl; OpenCLSpatialGridContainer.h; OpenCLSpatialGridContainer.inl); list(APPEND SOURCE_FILES; OpenCLSPHFluidForceField.cpp; OpenCLSpatialGridContainer.cpp); list(APPEND OTHER_FILES; kernels/OpenCLSPHFluidForceField.cl; kernels/OpenCLSpatialGridContainer.cl; ); message(STATUS ""SofaOpenCL: optional dependency to SofaSphFluid found. Activing <OpenCLSPHFluidForceField>.""); else(); message(STATUS ""SofaOpenCL: optional dependency to SofaSphFluid not found. De-activing <OpenCLSPHFluidForceField>""); endif(). message(WARNING ""SofaOpenCL: TODO: don't use absolute path (SOFA_SRC_DIR)""). include_directories(${OPENCL_INCLUDE_DIRS}); add_library(${PROJECT_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} ${OTHER_FILES}); add_definitions(""-DSOFA_SRC_DIR=\""${CMAKE_CURRENT_SOURCE_DIR}/../../..\""""). add_definitions(""-DSOFA_BUILD_GPU_OPENCL""); target_link_libraries(${PROJECT_NAME} ${OPENCL_LIBRARIES} Sofa.Helper SofaEngine SofaUserInteraction csparse SofaGeneralObjectInteraction SofaGeneralDeformable Sofa.GL) # taucs taucs_mt system-taucs); if(SofaSphFluid_FOUND); target_link_libraries(${PROJECT_NAME} SofaSphFluid) # taucs taucs_mt system-taucs); endif(). sofa_create_package_with_targets(; PACKAGE_NAME ${PROJECT_NAME}; PACKAGE_VERSION ${SOFAOPENCL_VERSION}; TARGETS ${PROJECT_NAME} AUTO_SET_TARGET_PROPERTIES; INCLUDE_INSTALL_DIR ${PROJECT_NAME}; RELOCATABLE ""plugins""; ); ",MatchSource.DOCS,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaOpenCL/CMakeLists.txt:2483,message,message,2483,applications/plugins/SofaOpenCL/CMakeLists.txt,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/tree/v24.06.00/applications/plugins/SofaOpenCL/CMakeLists.txt,3,"['depend', 'message']","['dependency', 'message']"
