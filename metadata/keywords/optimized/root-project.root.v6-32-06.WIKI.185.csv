quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Usability," (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 139 of file TGSplitFrame.h. ◆ Cleanup(). void TGSplitFrame::Cleanup ; (; ). overridevirtual . Recursively cleanup child frames. ; Reimplemented from TGCompositeFrame.; Definition at line 298 of file TGSplitFrame.cxx. ◆ Close(). void TGSplitFrame::Close ; (; ). Close (unmap and remove from the list of frames) the frame contained in this split frame. ; Definition at line 327 of file TGSplitFrame.cxx. ◆ CloseAndCollapse(). void TGSplitFrame::CloseAndCollapse ; (; ). Close (unmap, remove from the list of frames and destroy) the frame contained in this split frame. ; Then unsplit the parent frame. ; Definition at line 340 of file TGSplitFrame.cxx. ◆ DeclFileName(). static const char * TGSplitFrame::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 139 of file TGSplitFrame.h. ◆ Docked(). void TGSplitFrame::Docked ; (; TGFrame * ; frame). Emit Undocked() signal. ; Definition at line 355 of file TGSplitFrame.cxx. ◆ ExtractFrame(). void TGSplitFrame::ExtractFrame ; (; ). Extract the frame contained in this split frame an reparent it in a transient frame. ; Keep a pointer on the transient frame to be able to swallow the child frame back to this. ; Definition at line 365 of file TGSplitFrame.cxx. ◆ GetFirst(). TGSplitFrame * TGSplitFrame::GetFirst ; (; ); const. inline . Definition at line 105 of file TGSplitFrame.h. ◆ GetFrame(). TGFrame * TGSplitFrame::GetFrame ; (; ); const. inline . Definition at line 106 of file TGSplitFrame.h. ◆ GetHRatio(). Float_t TGSplitFrame::GetHRatio ; (; ); const. inline . Definition at line 112 of file TGSplitFrame.h. ◆ GetSecond(). TGSplitFrame * TGSplitFrame::GetSecond ; (; ); const. inline . Definition at line 107 of file TGSplitFrame.h. ◆ GetSplitter(). TGSplitter * TGSplitFrame::GetSplitter ; (; ); const. inline . Definition at line 108 of file TGSplitFrame.h. ◆ GetSplitTool(). TGSplitTool * TGSplit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSplitFrame.html:35427,Undo,Undocked,35427,doc/master/classTGSplitFrame.html,https://root.cern,https://root.cern/doc/master/classTGSplitFrame.html,1,['Undo'],['Undocked']
Usability," (; ). override . Definition at line 29 of file RRangeBase.cxx. Member Function Documentation. ◆ InitNode(). void RRangeBase::InitNode ; (; ). Definition at line 21 of file RRangeBase.cxx. ◆ operator=(). RRangeBase & ROOT::Detail::RDF::RRangeBase::operator= ; (; const RRangeBase & ; ). delete . Member Data Documentation. ◆ fHasStopped. bool ROOT::Detail::RDF::RRangeBase::fHasStopped {false}. protected . True if the end of the range has been reached. ; Definition at line 41 of file RRangeBase.hxx. ◆ fLastCheckedEntry. Long64_t ROOT::Detail::RDF::RRangeBase::fLastCheckedEntry {-1}. protected . Definition at line 38 of file RRangeBase.hxx. ◆ fLastResult. bool ROOT::Detail::RDF::RRangeBase::fLastResult {true}. protected . Definition at line 39 of file RRangeBase.hxx. ◆ fNProcessedEntries. ULong64_t ROOT::Detail::RDF::RRangeBase::fNProcessedEntries {0}. protected . Definition at line 40 of file RRangeBase.hxx. ◆ fNSlots. const unsigned int ROOT::Detail::RDF::RRangeBase::fNSlots. protected . Number of thread slots used by this node, inherited from parent node. ; Definition at line 42 of file RRangeBase.hxx. ◆ fStart. unsigned int ROOT::Detail::RDF::RRangeBase::fStart. protected . Definition at line 35 of file RRangeBase.hxx. ◆ fStop. unsigned int ROOT::Detail::RDF::RRangeBase::fStop. protected . Definition at line 36 of file RRangeBase.hxx. ◆ fStride. unsigned int ROOT::Detail::RDF::RRangeBase::fStride. protected . Definition at line 37 of file RRangeBase.hxx. ◆ fVariedRanges. std::unordered_map<std::string, std::shared_ptr<RRangeBase> > ROOT::Detail::RDF::RRangeBase::fVariedRanges. protected . Definition at line 43 of file RRangeBase.hxx. Libraries for ROOT::Detail::RDF::RRangeBase:. [legend]; The documentation for this class was generated from the following files:; tree/dataframe/inc/ROOT/RDF/RRangeBase.hxx; tree/dataframe/src/RRangeBase.cxx. ROOTDetailRDFRRangeBase. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:02 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RRangeBase.html:5036,Guid,Guide,5036,doc/master/classROOT_1_1Detail_1_1RDF_1_1RRangeBase.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RRangeBase.html,1,['Guid'],['Guide']
Usability, (; ). overridevirtual . Remove file event handler from system file handler list. ; Implements TSysEvtHandler.; Definition at line 137 of file TSysEvtHandler.cxx. ◆ ResetReadyMask(). virtual void TFileHandler::ResetReadyMask ; (; ). inlinevirtual . Definition at line 87 of file TSysEvtHandler.h. ◆ SetFd(). void TFileHandler::SetFd ; (; int ; fd). inline . Definition at line 80 of file TSysEvtHandler.h. ◆ SetInterest(). void TFileHandler::SetInterest ; (; Int_t ; mask). virtual . Set interest mask to 'mask'. ; Definition at line 116 of file TSysEvtHandler.cxx. ◆ SetReadReady(). virtual void TFileHandler::SetReadReady ; (; ). inlinevirtual . Definition at line 88 of file TSysEvtHandler.h. ◆ SetWriteReady(). virtual void TFileHandler::SetWriteReady ; (; ). inlinevirtual . Definition at line 89 of file TSysEvtHandler.h. ◆ Streamer(). void TFileHandler::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TFileHandler::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 95 of file TSysEvtHandler.h. ◆ WriteNotify(). Bool_t TFileHandler::WriteNotify ; (; ). virtual . Notify when something can be written to the descriptor associated with this handler. ; Reimplemented in TSocketHandler.; Definition at line 91 of file TSysEvtHandler.cxx. Member Data Documentation. ◆ fFileNum. int TFileHandler::fFileNum. protected . Definition at line 68 of file TSysEvtHandler.h. ◆ fMask. int TFileHandler::fMask. protected . Definition at line 69 of file TSysEvtHandler.h. ◆ fReadyMask. int TFileHandler::fReadyMask. protected . Definition at line 70 of file TSysEvtHandler.h. Libraries for TFileHandler:. [legend]; The documentation for this class was generated from the following files:; core/base/inc/TSysEvtHandler.h; core/base/src/TSysEvtHandler.cxx. TFileHandler. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:50 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileHandler.html:21646,Guid,Guide,21646,doc/master/classTFileHandler.html,https://root.cern,https://root.cern/doc/master/classTFileHandler.html,1,['Guid'],['Guide']
Usability," (; ). protected . Return TRUE (non-zero) if we are currently wrapping text around one or more images. ; Definition at line 1044 of file TGHtmlLayout.cxx. ◆ LayoutBlock(). void TGHtmlLayoutContext::LayoutBlock ; (; ). Do as much layout as possible on the block of text defined by the HtmlLayoutContext. ; Definition at line 1076 of file TGHtmlLayout.cxx. ◆ Paragraph(). void TGHtmlLayoutContext::Paragraph ; (; TGHtmlElement * ; p). protected . Increase the headroom to create a paragraph break at the current token. ; Definition at line 657 of file TGHtmlLayout.cxx. ◆ PopExpiredMargins(). void TGHtmlLayoutContext::PopExpiredMargins ; (; SHtmlMargin_t ** ; ppMarginStack, . int ; y . ). protected . Pop all expired margins from the stack. ; An expired margin is one with a non-negative bottom parameter that is less than the value ""y"". ""y"" is the Y-coordinate of the top edge the next line of text to by positioned. What this function does is check to see if we have cleared any obstacles (an obstacle is an <IMG ALIGN=left> or <IMG ALIGN=right>) and expands the margins if we have. ; Definition at line 152 of file TGHtmlLayout.cxx. ◆ PopIndent(). void TGHtmlLayoutContext::PopIndent ; (; ). Adjust (pop) ident. ; Definition at line 1168 of file TGHtmlLayout.cxx. ◆ PopMargin(). void TGHtmlLayoutContext::PopMargin ; (; SHtmlMargin_t ** ; ppMargin, . int ; tag . ). protected . Pop as many margins as necessary until the margin that was created with ""tag"" is popped off. ; Update the layout context to move past obstacles, if necessary.; If there are some margins on the stack that contain non-negative bottom fields, that means there are some obstacles that we have not yet cleared. If these margins get popped off the stack, then we have to be careful to advance the 'bottom' value so that the next line of text will clear the obstacle. ; Definition at line 119 of file TGHtmlLayout.cxx. ◆ PopOneMargin(). void TGHtmlLayoutContext::PopOneMargin ; (; SHtmlMargin_t ** ; ppMargin). protected . Pop ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHtmlLayoutContext.html:18169,clear,cleared,18169,doc/master/classTGHtmlLayoutContext.html,https://root.cern,https://root.cern/doc/master/classTGHtmlLayoutContext.html,1,['clear'],['cleared']
Usability," (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 70 of file RooPolynomial.h. ◆ isReducerNode(). bool RooPolynomial::isReducerNode ; (; ); const. inlineoverridevirtual . Reimplemented from RooAbsArg.; Definition at line 49 of file RooPolynomial.h. ◆ lowestOrder(). int RooPolynomial::lowestOrder ; (; ); const. inline . Return the order for the first coefficient in the list. ; Definition at line 45 of file RooPolynomial.h. ◆ Streamer(). void RooPolynomial::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsPdf. ◆ StreamerNVirtual(). void RooPolynomial::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 70 of file RooPolynomial.h. ◆ translate(). void RooPolynomial::translate ; (; RooFit::Detail::CodeSquashContext & ; ctx); const. overridevirtual . This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ; The function adds the code represented by each class as an std::string (that is later concatenated with code strings from translate calls) to form the C++ code that AD tools can understand. Any class that wants to support AD, has to implement this function.; Parameters. [in]ctxAn object to manage auxiliary information for code-squashing. Also takes the code string that this class outputs into the squashed code through the 'addToCodeBody' function. . Reimplemented from RooAbsArg.; Definition at line 114 of file RooPolynomial.cxx. ◆ x(). RooAbsReal const & RooPolynomial::x ; (; ); const. inline . Get the x variable. ; Definition at line 39 of file RooPolynomial.h. Member Data Documentation. ◆ _coefList. RooListProxy RooPolynomial::_coefList. protected . Definition at line 57 of file RooPolynomial.h. ◆ _lowestOrder. Int_t RooPolynomial::_lowestOrder = 1. protected . Definition at line 58 of file RooPolynomial.h. ◆ _wksp. st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPolynomial.html:79960,simpl,simple,79960,doc/master/classRooPolynomial.html,https://root.cern,https://root.cern/doc/master/classRooPolynomial.html,1,['simpl'],['simple']
Usability," (; Bool_t ; ascend = kTRUE). inlinevirtual . Definition at line 120 of file TGComboBox.h. ◆ Streamer(). void TGComboBox::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TGLineStyleComboBox, TGLineWidthComboBox, TGFontTypeComboBox, and TGFSComboBox. ◆ StreamerNVirtual(). void TGComboBox::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 131 of file TGComboBox.h. Member Data Documentation. ◆ fBpic. const TGPicture* TGComboBox::fBpic. protected . down arrow picture used in fDDButton ; Definition at line 59 of file TGComboBox.h. ◆ fComboFrame. TGComboBoxPopup* TGComboBox::fComboFrame. protected . popup containing a listbox ; Definition at line 57 of file TGComboBox.h. ◆ fDDButton. TGScrollBarElement* TGComboBox::fDDButton. protected . button controlling drop down of popup ; Definition at line 56 of file TGComboBox.h. ◆ fLhb. TGLayoutHints* TGComboBox::fLhb. protected . layout hints for fDDButton ; Definition at line 61 of file TGComboBox.h. ◆ fLhdd. TGLayoutHints* TGComboBox::fLhdd. protected . layout hints for fListBox ; Definition at line 62 of file TGComboBox.h. ◆ fLhs. TGLayoutHints* TGComboBox::fLhs. protected . layout hints for selected item frame ; Definition at line 60 of file TGComboBox.h. ◆ fListBox. TGListBox* TGComboBox::fListBox. protected . the listbox with text items ; Definition at line 58 of file TGComboBox.h. ◆ fSelEntry. TGLBEntry* TGComboBox::fSelEntry. protected . selected item frame ; Definition at line 54 of file TGComboBox.h. ◆ fTextEntry. TGTextEntry* TGComboBox::fTextEntry. protected . text entry ; Definition at line 55 of file TGComboBox.h. Libraries for TGComboBox:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGComboBox.h; gui/gui/src/TGComboBox.cxx. TGComboBox. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:57 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGComboBox.html:47236,Guid,Guide,47236,doc/master/classTGComboBox.html,https://root.cern,https://root.cern/doc/master/classTGComboBox.html,1,['Guid'],['Guide']
Usability," (; Bool_t ; on = kTRUE). virtual . Show/hide close icon on the tab element, then apply layout to compute correct elements size. ; Definition at line 230 of file TGTab.cxx. ◆ Streamer(). void TGTabElement::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGFrame. ◆ StreamerNVirtual(). void TGTabElement::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 157 of file TGTab.h. Member Data Documentation. ◆ fActive. Bool_t TGTabElement::fActive. protected . true if active (in front) ; Definition at line 129 of file TGTab.h. ◆ fClosePic. const TGPicture* TGTabElement::fClosePic. protected . ""close tab"" icon ; Definition at line 121 of file TGTab.h. ◆ fClosePicD. const TGPicture* TGTabElement::fClosePicD. protected . ""close tab"" icon (disabled) ; Definition at line 122 of file TGTab.h. ◆ fEnabled. Bool_t TGTabElement::fEnabled. protected . enabled or disabled ; Definition at line 127 of file TGTab.h. ◆ fFontStruct. FontStruct_t TGTabElement::fFontStruct. protected . font used for tab ; Definition at line 124 of file TGTab.h. ◆ fNormGC. GContext_t TGTabElement::fNormGC. protected . graphics context for drawing tab ; Definition at line 123 of file TGTab.h. ◆ fShowClose. Bool_t TGTabElement::fShowClose. protected . show or hide close icon ; Definition at line 128 of file TGTab.h. ◆ fText. TGString* TGTabElement::fText. protected . text on tab ; Definition at line 120 of file TGTab.h. ◆ fTHeight. UInt_t TGTabElement::fTHeight. protected . height of tab text ; Definition at line 126 of file TGTab.h. ◆ fTWidth. UInt_t TGTabElement::fTWidth. protected . width of tab text ; Definition at line 125 of file TGTab.h. Libraries for TGTabElement:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGTab.h; gui/gui/src/TGTab.cxx. TGTabElement. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:36 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTabElement.html:33725,Guid,Guide,33725,doc/master/classTGTabElement.html,https://root.cern,https://root.cern/doc/master/classTGTabElement.html,1,['Guid'],['Guide']
Usability," (; Int_t ; subpadnumber = 0). overridevirtual . Set current canvas & pad. ; Returns the new current pad, or 0 in case of failure. See TPad::cd() for an explanation of the parameter. ; Implements TVirtualPad.; Definition at line 716 of file TCanvas.cxx. ◆ Class(). static TClass * TCanvas::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TCanvas::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TCanvas::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 238 of file TCanvas.h. ◆ Clear(). void TCanvas::Clear ; (; Option_t * ; option = """"). overridevirtual . Remove all primitives from the canvas. ; If option ""D"" is specified, direct sub-pads are cleared but not deleted. This option is not recursive, i.e. pads in direct sub-pads are deleted. ; Implements TVirtualPad.; Definition at line 734 of file TCanvas.cxx. ◆ Cleared(). void TCanvas::Cleared ; (; TVirtualPad * ; pad). virtual . Emit pad Cleared signal. ; Definition at line 767 of file TCanvas.cxx. ◆ ClearPadSave(). void TCanvas::ClearPadSave ; (; ). inline . Definition at line 140 of file TCanvas.h. ◆ Close(). void TCanvas::Close ; (; Option_t * ; option = """"). overridevirtual . Close canvas. ; Delete window/pads data structure ; Implements TVirtualPad.; Definition at line 785 of file TCanvas.cxx. ◆ Closed(). void TCanvas::Closed ; (; ). overridevirtual . Emit Closed signal. ; Reimplemented from TPad.; Definition at line 775 of file TCanvas.cxx. ◆ Constructor() [1/4]. void TCanvas::Constructor ; (; ). Canvas default constructor. ; Definition at line 188 of file TCanvas.cxx. ◆ Constructor() [2/4]. void TCanvas::Constructor ; (; const char * ; name, . const char * ; title, . Int_t ; form . ). Create a new canvas with a predefined size form. ; If form < 0 the menubar is not shown. form = 1 700x500 at 10,10 (set by TStyle::SetCanvasDefH,W,X,Y); form = 2 500x500 at 20,20; form = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCanvas.html:66537,Clear,Cleared,66537,doc/v632/classTCanvas.html,https://root.cern,https://root.cern/doc/v632/classTCanvas.html,1,['Clear'],['Cleared']
Usability," (; Int_t ; subpadnumber = 0). overridevirtual . Set current canvas & pad. ; Returns the new current pad, or 0 in case of failure. See TPad::cd() for an explanation of the parameter. ; Implements TVirtualPad.; Definition at line 719 of file TCanvas.cxx. ◆ Class(). static TClass * TCanvas::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TCanvas::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TCanvas::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 238 of file TCanvas.h. ◆ Clear(). void TCanvas::Clear ; (; Option_t * ; option = """"). overridevirtual . Remove all primitives from the canvas. ; If option ""D"" is specified, direct sub-pads are cleared but not deleted. This option is not recursive, i.e. pads in direct sub-pads are deleted. ; Implements TVirtualPad.; Definition at line 737 of file TCanvas.cxx. ◆ Cleared(). void TCanvas::Cleared ; (; TVirtualPad * ; pad). virtual . Emit pad Cleared signal. ; Definition at line 770 of file TCanvas.cxx. ◆ ClearPadSave(). void TCanvas::ClearPadSave ; (; ). inline . Definition at line 140 of file TCanvas.h. ◆ Close(). void TCanvas::Close ; (; Option_t * ; option = """"). overridevirtual . Close canvas. ; Delete window/pads data structure ; Implements TVirtualPad.; Definition at line 788 of file TCanvas.cxx. ◆ Closed(). void TCanvas::Closed ; (; ). overridevirtual . Emit Closed signal. ; Reimplemented from TPad.; Definition at line 778 of file TCanvas.cxx. ◆ Constructor() [1/4]. void TCanvas::Constructor ; (; ). Canvas default constructor. ; Definition at line 191 of file TCanvas.cxx. ◆ Constructor() [2/4]. void TCanvas::Constructor ; (; const char * ; name, . const char * ; title, . Int_t ; form . ). Create a new canvas with a predefined size form. ; If form < 0 the menubar is not shown. form = 1 700x500 at 10,10 (set by TStyle::SetCanvasDefH,W,X,Y); form = 2 500x500 at 20,20; form = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCanvas.html:66913,Clear,Cleared,66913,doc/master/classTCanvas.html,https://root.cern,https://root.cern/doc/master/classTCanvas.html,1,['Clear'],['Cleared']
Usability," (; Int_t ; value = 1). inlineoverridevirtual . Implements TVirtualPad.; Definition at line 55 of file TDialogCanvas.h. ◆ SetLogy(). void TDialogCanvas::SetLogy ; (; Int_t ; value = 1). inlineoverridevirtual . Implements TVirtualPad.; Definition at line 56 of file TDialogCanvas.h. ◆ SetName(). void TDialogCanvas::SetName ; (; const char * ; name). inlineoverridevirtual . Set canvas name. ; In case name is an empty string, a default name is set. Canvas automatically marked as modified when SetName method called ; Reimplemented from TCanvas.; Definition at line 45 of file TDialogCanvas.h. ◆ SetRefObject(). virtual void TDialogCanvas::SetRefObject ; (; TObject * ; obj). inlinevirtual . Definition at line 46 of file TDialogCanvas.h. ◆ SetRefPad(). virtual void TDialogCanvas::SetRefPad ; (; TPad * ; pad). inlinevirtual . Definition at line 47 of file TDialogCanvas.h. ◆ Streamer(). void TDialogCanvas::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TCanvas. ◆ StreamerNVirtual(). void TDialogCanvas::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 50 of file TDialogCanvas.h. ◆ x3d(). void TDialogCanvas::x3d ; (; Option_t * ; type = """"). inlineoverridevirtual . Deprecated: use TPad::GetViewer3D() instead. ; Reimplemented from TPad.; Definition at line 57 of file TDialogCanvas.h. Member Data Documentation. ◆ fRefObject. TObject* TDialogCanvas::fRefObject {nullptr}. protected . Pointer to object to set attributes. ; Definition at line 26 of file TDialogCanvas.h. ◆ fRefPad. TPad* TDialogCanvas::fRefPad {nullptr}. protected . Pad containing object. ; Definition at line 27 of file TDialogCanvas.h. Libraries for TDialogCanvas:. [legend]; The documentation for this class was generated from the following files:; graf2d/gpad/inc/TDialogCanvas.h; graf2d/gpad/src/TDialogCanvas.cxx. TDialogCanvas. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDialogCanvas.html:70151,Guid,Guide,70151,doc/master/classTDialogCanvas.html,https://root.cern,https://root.cern/doc/master/classTDialogCanvas.html,1,['Guid'],['Guide']
Usability," (; Long64_t ; bin, . Double_t ; e2 . ). overridevirtual . Set error of bin with index ""bin"" to ""e"", enable errors if needed. ; Implements THnBase.; Definition at line 914 of file THnSparse.cxx. ◆ SetFilledBins(). void THnSparse::SetFilledBins ; (; Long64_t ; nbins). inlineoverridevirtual . Reimplemented from THnBase.; Definition at line 94 of file THnSparse.h. ◆ Streamer(). void THnSparse::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from THnBase.; Reimplemented in THnSparseT< CONT >. ◆ StreamerNVirtual(). void THnSparse::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 169 of file THnSparse.h. ◆ Sumw2(). void THnSparse::Sumw2 ; (; ). overridevirtual . Enable calculation of errors. ; Implements THnBase.; Definition at line 948 of file THnSparse.cxx. Member Data Documentation. ◆ fBinContent. TObjArray THnSparse::fBinContent. private . Array of THnSparseArrayChunk. ; Definition at line 41 of file THnSparse.h. ◆ fBins. TExMap THnSparse::fBins. private . ! Filled bins ; Definition at line 42 of file THnSparse.h. ◆ fBinsContinued. TExMap THnSparse::fBinsContinued. private . ! Filled bins for non-unique hashes, containing pairs of (bin index 0, bin index 1) ; Definition at line 43 of file THnSparse.h. ◆ fChunkSize. Int_t THnSparse::fChunkSize. private . Number of entries for each chunk. ; Definition at line 39 of file THnSparse.h. ◆ fCompactCoord. THnSparseCompactBinCoord* THnSparse::fCompactCoord. private . ! Compact coordinate ; Definition at line 44 of file THnSparse.h. ◆ fFilledBins. Long64_t THnSparse::fFilledBins. private . Number of filled bins. ; Definition at line 40 of file THnSparse.h. Libraries for THnSparse:. [legend]; The documentation for this class was generated from the following files:; hist/hist/inc/THnSparse.h; hist/hist/src/THnSparse.cxx. THnSparse. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:49 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHnSparse.html:41499,Guid,Guide,41499,doc/master/classTHnSparse.html,https://root.cern,https://root.cern/doc/master/classTHnSparse.html,1,['Guid'],['Guide']
Usability," (; Option_t * ; option = """"); const. inlineoverridevirtual . This method must be overridden when a class wants to print itself. ; Reimplemented from TObject.; Definition at line 76 of file TGridCollection.h. ◆ Remove(). virtual Bool_t TGridCollection::Remove ; (; TMap * ; ). inlinevirtual . Definition at line 43 of file TGridCollection.h. ◆ Reset(). virtual void TGridCollection::Reset ; (; ). inlinevirtual . Definition at line 39 of file TGridCollection.h. ◆ SelectFile(). virtual Bool_t TGridCollection::SelectFile ; (; const char * ; , . Int_t ; = -1, . Int_t ; = -1 . ). inlinevirtual . Definition at line 61 of file TGridCollection.h. ◆ SetExportUrl(). virtual Bool_t TGridCollection::SetExportUrl ; (; const char * ; = nullptr). inlinevirtual . Definition at line 74 of file TGridCollection.h. ◆ SetTag(). virtual void TGridCollection::SetTag ; (; const char * ; , . const char * ; , . TMap * ;  . ). inlinevirtual . Definition at line 59 of file TGridCollection.h. ◆ SetTagFilterList(). virtual void TGridCollection::SetTagFilterList ; (; TList * ; ). inlinevirtual . Definition at line 106 of file TGridCollection.h. ◆ Stage(). virtual Bool_t TGridCollection::Stage ; (; Bool_t ; = kFALSE, . Option_t * ; = """" . ). inlinevirtual . Definition at line 92 of file TGridCollection.h. ◆ Status(). virtual void TGridCollection::Status ; (; ). inlinevirtual . Definition at line 57 of file TGridCollection.h. ◆ Streamer(). void TGridCollection::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGridCollection::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 115 of file TGridCollection.h. Libraries for TGridCollection:. [legend]; The documentation for this class was generated from the following file:; net/net/inc/TGridCollection.h. TGridCollection. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGridCollection.html:19409,Guid,Guide,19409,doc/master/classTGridCollection.html,https://root.cern,https://root.cern/doc/master/classTGridCollection.html,1,['Guid'],['Guide']
Usability," (; Option_t * ; option = """"); const. overridevirtual . Print font info. ; Reimplemented from TObject.; Definition at line 308 of file TGFont.cxx. ◆ SavePrimitive(). void TGFont::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; = """" . ). overridevirtual . Save the used font as a C++ statement(s) on output stream out. ; Reimplemented from TObject.; Definition at line 1884 of file TGFont.cxx. ◆ Streamer(). void TGFont::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGFont::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 209 of file TGFont.h. ◆ TextHeight(). Int_t TGFont::TextHeight ; (; ); const. inline . Definition at line 192 of file TGFont.h. ◆ TextWidth(). Int_t TGFont::TextWidth ; (; const char * ; string, . Int_t ; numChars = -1 . ); const. A wrapper function for the more complicated interface of MeasureChars. ; Computes how much space the given simple string needs.; The return value is the width (in pixels) of the given string.; string – String whose width will be computed. numChars – Number of characters to consider from string, or < 0 for strlen(). ; Definition at line 575 of file TGFont.cxx. ◆ UnderlineChars(). void TGFont::UnderlineChars ; (; Drawable_t ; dst, . GContext_t ; gc, . const char * ; string, . Int_t ; x, . Int_t ; y, . Int_t ; firstChar, . Int_t ; lastChar . ); const. This procedure draws an underline for a given range of characters in a given string. ; It doesn't draw the characters (which are assumed to have been displayed previously); it just draws the underline. This procedure would mainly be used to quickly underline a few characters without having to construct an underlined font. To produce properly underlined text, the appropriate underlined font should be constructed and used.; dst – Window or pixmap in which to draw. gc – Graphics context for actually drawing line. string – String containing c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFont.html:23480,simpl,simple,23480,doc/master/classTGFont.html,https://root.cern,https://root.cern/doc/master/classTGFont.html,1,['simpl'],['simple']
Usability," (; RooAbsReal const & ; eff). inlineprivate . Definition at line 36 of file RooEffGenContext.h. ◆ IsA(). TClass * RooEffGenContext::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsGenContext.; Definition at line 47 of file RooEffGenContext.h. ◆ printMultiline(). void RooEffGenContext::printMultiline ; (; std::ostream & ; os, . Int_t ; content, . bool ; verbose = false, . TString ; indent = """" . ); const. overridevirtual . Detailed printing interface. ; Reimplemented from RooAbsGenContext.; Definition at line 91 of file RooEffGenContext.cxx. ◆ Streamer(). void RooEffGenContext::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsGenContext. ◆ StreamerNVirtual(). void RooEffGenContext::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 47 of file RooEffGenContext.h. Member Data Documentation. ◆ _cloneSet. RooArgSet RooEffGenContext::_cloneSet. private . Internal clone of p.d.f. ; Definition at line 41 of file RooEffGenContext.h. ◆ _eff. RooAbsReal* RooEffGenContext::_eff. private . Pointer to efficiency function. ; Definition at line 42 of file RooEffGenContext.h. ◆ _generator. std::unique_ptr<RooAbsGenContext> RooEffGenContext::_generator. private . Generator context for p.d.f. ; Definition at line 43 of file RooEffGenContext.h. ◆ _maxEff. double RooEffGenContext::_maxEff. private . Maximum of efficiency in vars. ; Definition at line 45 of file RooEffGenContext.h. ◆ _vars. RooArgSet RooEffGenContext::_vars. private . Vars to generate. ; Definition at line 44 of file RooEffGenContext.h. Libraries for RooEffGenContext:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooEffGenContext.h; roofit/roofitcore/src/RooEffGenContext.cxx. RooEffGenContext. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:51 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooEffGenContext.html:21085,Guid,Guide,21085,doc/master/classRooEffGenContext.html,https://root.cern,https://root.cern/doc/master/classRooEffGenContext.html,1,['Guid'],['Guide']
Usability," (; TMatrixD & ; gamma, . TMatrixD & ; delta, . Double_t * ; buffer . ). protected . Sets the gamma \((g_{(t+1)}-g_{(t)})\) and delta \((w_{(t+1)}-w_{(t)})\) vectors Gamma is computed here, so ComputeDEDw cannot have been called before, and delta is a direct translation of buffer into a TMatrixD. ; Definition at line 2431 of file TMultiLayerPerceptron.cxx. ◆ SetLearningMethod(). void TMultiLayerPerceptron::SetLearningMethod ; (; TMultiLayerPerceptron::ELearningMethod ; method). Sets the learning method. ; Available methods are: kStochastic, kBatch, kSteepestDescent, kRibierePolak, kFletcherReeves and kBFGS. (look at the constructor for the complete description of learning methods and parameters) ; Definition at line 690 of file TMultiLayerPerceptron.cxx. ◆ SetReset(). void TMultiLayerPerceptron::SetReset ; (; Int_t ; reset). Sets number of epochs between two resets of the search direction to the steepest descent. ; (look at the constructor for the complete description of learning methods and parameters) ; Definition at line 751 of file TMultiLayerPerceptron.cxx. ◆ SetTau(). void TMultiLayerPerceptron::SetTau ; (; Double_t ; tau). Sets Tau - used in line search (look at the constructor for the complete description of learning methods and parameters) ; Definition at line 740 of file TMultiLayerPerceptron.cxx. ◆ SetTestDataSet() [1/2]. void TMultiLayerPerceptron::SetTestDataSet ; (; const char * ; test). Sets the Test dataset. ; Those events will not be used for the minimization but for control. Note that the tree must be already defined. ; Definition at line 666 of file TMultiLayerPerceptron.cxx. ◆ SetTestDataSet() [2/2]. void TMultiLayerPerceptron::SetTestDataSet ; (; TEventList * ; test). Sets the Test dataset. ; Those events will not be used for the minimization but for control ; Definition at line 633 of file TMultiLayerPerceptron.cxx. ◆ SetTrainingDataSet() [1/2]. void TMultiLayerPerceptron::SetTrainingDataSet ; (; const char * ; train). Sets the Training dataset",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiLayerPerceptron.html:46814,learn,learning,46814,doc/master/classTMultiLayerPerceptron.html,https://root.cern,https://root.cern/doc/master/classTMultiLayerPerceptron.html,1,['learn'],['learning']
Usability," (; UniqueId< Class > const & ; other); const. inline . Definition at line 62 of file UniqueId.h. ◆ operator=() [1/2]. template<class Class > . UniqueId & RooFit::UniqueId< Class >::operator= ; (; const UniqueId< Class > & ; ). delete . ◆ operator=() [2/2]. template<class Class > . UniqueId & RooFit::UniqueId< Class >::operator= ; (; UniqueId< Class > && ; ). delete . ◆ operator==(). template<class Class > . bool RooFit::UniqueId< Class >::operator== ; (; UniqueId< Class > const & ; other); const. inline . Definition at line 61 of file UniqueId.h. ◆ value(). template<class Class > . constexpr Value_t RooFit::UniqueId< Class >::value ; (; ); const. inlineconstexpr . Return numerical value of ID. ; Use only if necessary, as the UniqueId type information is lost and copying/moving is not prohibited for the value type. Please don't turn this into a cast operator, as a function with an explicit name is easier to track in the codebase. ; Definition at line 59 of file UniqueId.h. Member Data Documentation. ◆ _val. template<class Class > . Value_t RooFit::UniqueId< Class >::_val. private . Numerical value of the ID. ; Definition at line 76 of file UniqueId.h. ◆ counter. template<class Class > . std::atomic< typename UniqueId< Class >::Value_t > RooFit::UniqueId< Class >::counter {UniqueId<Class>::nullval}. staticprivate . The static object counter to get the next ID value. ; Definition at line 78 of file UniqueId.h. ◆ nullval. template<class Class > . constexpr Value_t RooFit::UniqueId< Class >::nullval = 0UL. staticconstexpr . The value of the nullid. ; Definition at line 71 of file UniqueId.h. Collaboration diagram for RooFit::UniqueId< Class >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; roofit/roofitcore/inc/RooFit/UniqueId.h. RooFitUniqueId. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:51 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structRooFit_1_1UniqueId.html:5390,Guid,Guide,5390,doc/master/structRooFit_1_1UniqueId.html,https://root.cern,https://root.cern/doc/master/structRooFit_1_1UniqueId.html,1,['Guid'],['Guide']
Usability," (; const RooAbsCollection & ; newServerList, . bool ; mustReplaceAll, . bool ; nameChange, . bool ; isRecursive . ). overrideprotectedvirtual . Intercept a server redirection all and update list of dependents if necessary Specifically update the set proxy 'deps' which introduces the dependency on server value dirty flags of ourselves. ; Reimplemented from RooAbsPdf.; Definition at line 211 of file RooProjectedPdf.cxx. ◆ selfNormalized(). bool RooProjectedPdf::selfNormalized ; (; ); const. inlineoverridevirtual . Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ; Always returns false, unless a PDF overrides this function. ; Reimplemented from RooAbsPdf.; Definition at line 36 of file RooProjectedPdf.h. ◆ Streamer(). void RooProjectedPdf::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsPdf. ◆ StreamerNVirtual(). void RooProjectedPdf::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 73 of file RooProjectedPdf.h. Member Data Documentation. ◆ _cacheMgr. RooObjCacheManager RooProjectedPdf::_cacheMgr. mutableprotected . ! The cache manager ; Definition at line 64 of file RooProjectedPdf.h. ◆ deps. RooSetProxy RooProjectedPdf::deps. protected . dependents of this p.d.f ; Definition at line 54 of file RooProjectedPdf.h. ◆ intobs. RooSetProxy RooProjectedPdf::intobs. protected . observables that p.d.f is integrated over ; Definition at line 53 of file RooProjectedPdf.h. ◆ intpdf. RooRealProxy RooProjectedPdf::intpdf. protected . p.d.f that is integrated ; Definition at line 52 of file RooProjectedPdf.h. Libraries for RooProjectedPdf:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooProjectedPdf.h; roofit/roofitcore/src/RooProjectedPdf.cxx. RooProjectedPdf. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:06 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooProjectedPdf.html:82161,Guid,Guide,82161,doc/master/classRooProjectedPdf.html,https://root.cern,https://root.cern/doc/master/classRooProjectedPdf.html,1,['Guid'],['Guide']
Usability," (ClassInfo_t *info, const char *method, const char *proto, Longptr_t *offset, ROOT::EFunctionMatchMode=ROOT::kConversionMatch) const final;  ; const char * ClassInfo_Name (ClassInfo_t *info) const final;  ; void * ClassInfo_New (ClassInfo_t *info) const final;  ; void * ClassInfo_New (ClassInfo_t *info, int n) const final;  ; void * ClassInfo_New (ClassInfo_t *info, int n, void *arena) const final;  ; void * ClassInfo_New (ClassInfo_t *info, void *arena) const final;  ; int ClassInfo_Next (ClassInfo_t *info) const final;  ; Long_t ClassInfo_Property (ClassInfo_t *info) const final;  ; int ClassInfo_Size (ClassInfo_t *info) const final;  ; Longptr_t ClassInfo_Tagnum (ClassInfo_t *info) const final;  ; const char * ClassInfo_Title (ClassInfo_t *info) const final;  ; const char * ClassInfo_TmpltName (ClassInfo_t *info) const final;  ; void ClearFileBusy () final;  Reset the interpreter internal state in case a previous action was not correctly terminated. ;  ; void ClearStack () final;  Delete existing temporary values. ;  ; void CodeComplete (const std::string &, size_t &, std::vector< std::string > &) final;  The call to Cling's tab complition. ;  ; TEnum * CreateEnum (void *VD, TClass *cl) const final;  ; void CreateListOfBaseClasses (TClass *cl) const final;  Create list of pointers to base class(es) for TClass cl. ;  ; void CreateListOfDataMembers (TClass *cl) const final;  Create list of pointers to data members for TClass cl. ;  ; void CreateListOfMethodArgs (TFunction *m) const final;  Create list of pointers to method arguments for TMethod m. ;  ; void CreateListOfMethods (TClass *cl) const final;  Create list of pointers to methods for TClass cl. ;  ; int DataMemberInfo_ArrayDim (DataMemberInfo_t *dminfo) const final;  ; void DataMemberInfo_Delete (DataMemberInfo_t *dminfo) const final;  ; DataMemberInfo_t * DataMemberInfo_Factory (ClassInfo_t *clinfo, TDictionary::EMemberSelection selection) const final;  ; DataMemberInfo_t * DataMemberInfo_Factory (DeclId_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling.html:9555,Clear,ClearStack,9555,doc/master/classTCling.html,https://root.cern,https://root.cern/doc/master/classTCling.html,1,['Clear'],['ClearStack']
Usability," (T obj);  Some datatypes of ROOT or c++ can be wrapped in to a TRObject, this method lets you wrap those datatypes. ;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *err",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1R_1_1TRObject.html:4192,Clear,Clear,4192,doc/master/classROOT_1_1R_1_1TRObject.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1R_1_1TRObject.html,1,['Clear'],['Clear']
Usability," (TObject *) R__DEPRECATED(6;  ; virtual ~TList ();  Delete the list. ;  ; void Add (TObject *obj) override;  ; virtual void Add (TObject *obj, Option_t *opt);  ; void AddAfter (const TObject *after, TObject *obj) override;  Insert object after object after in the list. ;  ; void AddAt (TObject *obj, Int_t idx) override;  Insert object at position idx in the list. ;  ; void AddBefore (const TObject *before, TObject *obj) override;  Insert object before object before in the list. ;  ; void AddFirst (TObject *obj) override;  Add object at the beginning of the list. ;  ; void AddLast (TObject *obj) override;  Add object at the end of the list. ;  ; TObject * After (const TObject *obj) const override;  Returns the object after object obj. ;  ; TObject * At (Int_t idx) const override;  Returns the object at position idx. Returns 0 if idx is out of range. ;  ; TObject * Before (const TObject *obj) const override;  Returns the object before object obj. ;  ; void Clear (Option_t *option="""") override;  Remove all objects from the list. ;  ; void Delete (Option_t *option="""") override;  Remove all objects from the list AND delete all heap based objects. ;  ; TObject * FindObject (const char *name) const override;  Find an object in this list using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find an object in this list using the object's IsEqual() member function. ;  ; TObject * First () const override;  Return the first object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * FirstLink () const;  ; TObject ** GetObjectRef (const TObject *obj) const override;  Return address of pointer to obj. ;  ; TClass * IsA () const override;  ; Bool_t IsAscending ();  ; TObject * Last () const override;  Return the last object in the list. Returns 0 when list is empty. ;  ; virtual TObjLink * LastLink () const;  ; TIterator * MakeIterator (Bool_t dir=kIterForward) const override;  Return a list iterator. ;  ; void RecursiveRemove (TObject *obj)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHashList.html:4740,Clear,Clear,4740,doc/master/classTHashList.html,https://root.cern,https://root.cern/doc/master/classTHashList.html,1,['Clear'],['Clear']
Usability," (UInt_t)fs.Height();; 2652 }; 2653}; 2654 ; 2655////////////////////////////////////////////////////////////////////////////////; 2656/// Return size of the formula along Y in pad coordinates when the text precision; 2657/// is smaller than 3.; 2658 ; 2659Double_t TLatex::GetYsize(); 2660{; 2661 if (!gPad) return 0.;; 2662 TString newText = GetTitle();; 2663 if( newText.Length() == 0) return 0;; 2664 ; 2665 // The text is a TMathText.; 2666 if ( newText.Contains(""\\"") ) {; 2667 TMathText tm(0., 0., newText.Data());; 2668 return tm.GetYsize();; 2669 }; 2670 ; 2671 fError = nullptr;; 2672 if (CheckLatexSyntax(newText)) {; 2673 std::cout<<""\n*ERROR<TLatex>: ""<<fError<<std::endl;; 2674 std::cout<<""==> ""<<GetTitle()<<std::endl;; 2675 return 0;; 2676 }; 2677 fError = nullptr;; 2678 ; 2679 const Char_t *text = newText.Data();; 2680 Double_t angsav = fTextAngle;; 2681 TLatexFormSize fs = FirstParse(0,GetTextSize(),text);; 2682 fTextAngle = angsav;; 2683 fTabSize.clear();; 2684 return TMath::Abs(gPad->AbsPixeltoY(Int_t(fs.Height())) - gPad->AbsPixeltoY(0));; 2685}; 2686 ; 2687////////////////////////////////////////////////////////////////////////////////; 2688/// Read fs in fTabSize; 2689 ; 2690TLatex::TLatexFormSize TLatex::Readfs(); 2691{; 2692 if (fTabSize.empty()) {; 2693 Error(""Readfs"", ""No data in fTabSize stack"");; 2694 return TLatexFormSize(0,0,0);; 2695 }; 2696 ; 2697 TLatexFormSize result = fTabSize.back();; 2698 fTabSize.pop_back();; 2699 return result;; 2700}; 2701 ; 2702////////////////////////////////////////////////////////////////////////////////; 2703/// Save fs values in array fTabSize; 2704 ; 2705void TLatex::Savefs(TLatex::TLatexFormSize *fs); 2706{; 2707 fTabSize.emplace_back(*fs);; 2708}; 2709 ; 2710////////////////////////////////////////////////////////////////////////////////; 2711/// Save primitive as a C++ statement(s) on output stream out; 2712 ; 2713void TLatex::SavePrimitive(std::ostream &out, Option_t * /*= """"*/); 2714{; 2715 char quote = '""'",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLatex_8cxx_source.html:94836,clear,clear,94836,doc/master/TLatex_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLatex_8cxx_source.html,1,['clear'],['clear']
Usability," (const MiserParameters &p);  ; MCIntegration::Type Type () const override;  ;  Public Member Functions inherited from ROOT::Math::GSLMCIntegrationWorkspace;  GSLMCIntegrationWorkspace ();  ; virtual ~GSLMCIntegrationWorkspace ();  . Private Member Functions; void SetMiserParameters ();  . Private Attributes; bool fHaveNewParams;  ; MiserParameters fParams;  ; gsl_monte_miser_state * fWs;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/math/mathmore/src/GSLMCIntegrationWorkspace.h>. Inheritance diagram for ROOT::Math::GSLMiserIntegrationWorkspace:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ GSLMiserIntegrationWorkspace(). ROOT::Math::GSLMiserIntegrationWorkspace::GSLMiserIntegrationWorkspace ; (; size_t ; dim = 0). inline . Definition at line 166 of file GSLMCIntegrationWorkspace.h. Member Function Documentation. ◆ Clear(). void ROOT::Math::GSLMiserIntegrationWorkspace::Clear ; (; ). inlineoverridevirtual . free the workspace deleting the GSL pointer ; Reimplemented from ROOT::Math::GSLMCIntegrationWorkspace.; Definition at line 190 of file GSLMCIntegrationWorkspace.h. ◆ GetWS(). gsl_monte_miser_state * ROOT::Math::GSLMiserIntegrationWorkspace::GetWS ; (; ). inline . Definition at line 195 of file GSLMCIntegrationWorkspace.h. ◆ Init(). bool ROOT::Math::GSLMiserIntegrationWorkspace::Init ; (; size_t ; dim). inlineoverridevirtual . initialize the workspace creating the GSL pointer if it is not there ; Implements ROOT::Math::GSLMCIntegrationWorkspace.; Definition at line 174 of file GSLMCIntegrationWorkspace.h. ◆ NDim(). size_t ROOT::Math::GSLMiserIntegrationWorkspace::NDim ; (; ); const. inlineoverridevirtual . Reimplemented from ROOT::Math::GSLMCIntegrationWorkspace.; Definition at line 203 of file GSLMCIntegrationWorkspace.h. ◆ Options(). std::unique_ptr< ROOT::Math::IOptions > ROOT::Math::GSLMiserIntegrationWorkspace::Options ; (; );",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMiserIntegrationWorkspace.html:2187,Clear,Clear,2187,doc/master/classROOT_1_1Math_1_1GSLMiserIntegrationWorkspace.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMiserIntegrationWorkspace.html,1,['Clear'],['Clear']
Usability," (const TArchiveMember &rhs);  Assignment operator. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *err",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTZIPMember.html:2902,Clear,Clear,2902,doc/master/classTZIPMember.html,https://root.cern,https://root.cern/doc/master/classTZIPMember.html,1,['Clear'],['Clear']
Usability," (const char *par, Long64_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long_t value);  Set an input list parameter. ;  ; void SetPerfTree (const char *pf=""perftree.root"", Bool_t withWrks=kFALSE);  Enable/Disable saving of the performance tree. ;  ; void SetPrintProgress (PrintProgress_t pp);  ; void SetProgressDialog (Bool_t on=kTRUE);  Enable/Disable the graphic progress dialog. ;  ; void SetQueryMode (EQueryMode mode);  Change query running mode to the one specified by 'mode'. ;  ; void SetRealTimeLog (Bool_t on=kTRUE);  Switch ON/OFF the real-time logging facility. ;  ; void ShowDataSet (const char *dataset="""", const char *opt=""filter:SsCc"");  display meta-info for given dataset usi ;  ; void ShowDataSetQuota (Option_t *opt=0);  shows the quota and usage of all groups if opt contains ""U"" shows also distribution of usage on user-level ;  ; void ShowEnabledPackages (Bool_t all=kFALSE);  List which packages are enabled. ;  ; void ShowFeedback () const;  Show items in feedback list. ;  ; void ShowLog (const char *queryref);  Display on screen the content of the temporary log file for query in reference. ;  ; void ShowLog (Int_t qry=-1);  Display on screen the content of the temporary log file. ;  ; void ShowMissingFiles (TQueryResult *qr=0);  Show information about missing files during query described by 'qr' or the last query if qr is null (default). ;  ; void ShowPackages (Bool_t all=kFALSE, Bool_t redirlog=kFALSE);  List contents of package directory. ;  ; void ShowParameters (const char *wildcard=""PROOF_*"") const;  Show the input list parameters specified by the wildcard. ;  ; void ShowQueries (Option_t *opt="""");  Ask the master for the list of queries. ;  ; virtual void ShowStagingStatusDataSet (const char *dataset, const char *optStr=""filter:SsCc"");  Like GetStagingStatusDataSet, but displays results immediately. ;  ; void StartupMessage (const char *msg, Bool_t status, Int_t done, Int_t total);  Send startup message. ;  ; voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLite.html:18650,feedback,feedback,18650,doc/master/classTProofLite.html,https://root.cern,https://root.cern/doc/master/classTProofLite.html,1,['feedback'],['feedback']
Usability," (const char *uuids);  Add uuid with name uuids to the table of UUIDs return entry number in the table. ;  ; UInt_t AddUUID (TUUID &uuid, TObject *obj);  Add uuid to the table of UUIDs The TObject *obj has its uniqueID set to the UUID number return entry number in the table. ;  ; TObjString * FindUUID (UInt_t number) const;  Find the TObjString by slot number. ;  ; TBits * GetActive () const;  ; TList * GetUUIDs () const;  ; TClass * IsA () const override;  ; void RemoveUUID (UInt_t number);  Remove entry number in the list of uuids. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TProcessID;  TProcessID ();  Default constructor. ;  ; virtual ~TProcessID ();  Destructor. ;  ; void CheckInit ();  Initialize fObjects. ;  ; void Clear (Option_t *option="""") override;  delete the TObjArray pointing to referenced objects this function is called by TFile::Close(""R"") ;  ; Int_t DecrementCount ();  The reference fCount is used to delete the TProcessID in the TFile destructor when fCount = 0. ;  ; Int_t GetCount () const;  ; TObjArray * GetObjects () const;  ; TObject * GetObjectWithID (UInt_t uid);  returns the TObject with unique identifier uid in the table of objects ;  ; Int_t IncrementCount ();  Increase the reference count to this object. ;  ; void PutObjectWithID (TObject *obj, UInt_t uid=0);  stores the object at the uid th slot in the table of objects The object uniqued is set as well as its kMustCleanup bit ;  ; void RecursiveRemove (TObject *obj) override;  called by the object destructor remove reference to obj from the current table if it is referenced ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TStri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProcessUUID.html:2565,Clear,Clear,2565,doc/master/classTProcessUUID.html,https://root.cern,https://root.cern/doc/master/classTProcessUUID.html,1,['Clear'],['Clear']
Usability," (const char *word);  ; virtual Bool_t Copy ();  Copy selected text to clipboard. ;  ; virtual void DataChanged ();  ; virtual void DataDropped (const char *fname);  ; virtual void DoubleClicked (const char *word);  ; TGText * GetText () const;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button event in text editor. ;  ; Bool_t HandleCrossing (Event_t *event) override;  Handle mouse crossing event. ;  ; Bool_t HandleDNDDrop (TDNDData *data) override;  Handle Drop event. ;  ; Atom_t HandleDNDEnter (Atom_t *typelist) override;  Handle Drag Enter event. ;  ; Bool_t HandleDNDLeave () override;  Handle Drag Leave event. ;  ; Atom_t HandleDNDPosition (Int_t x, Int_t y, Atom_t action, Int_t xroot, Int_t yroot) override;  Handle Drag position event. ;  ; Bool_t HandleDoubleClick (Event_t *event) override;  handle double click ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle mouse motion event in the text editor widget. ;  ; Bool_t HandleSelectionClear (Event_t *event) override;  Handle selection clear event. ;  ; Bool_t HandleSelectionRequest (Event_t *event) override;  Handle request to send current clipboard contents to requestor window. ;  ; Bool_t HandleTimer (TTimer *t) override;  Handle scroll timer. ;  ; Bool_t IsMarked () const;  ; Bool_t IsReadOnly () const;  ; virtual Bool_t IsSaved ();  ; void Layout () override;  Layout the components of view. ;  ; virtual Bool_t LoadBuffer (const char *txtbuf);  Load text from a text buffer. Return false in case of failure. ;  ; virtual Bool_t LoadFile (const char *fname, long startpos=0, long length=-1);  Load a file in the text view widget. ;  ; virtual void Marked (Bool_t mark);  ; virtual Long_t ReturnHeighestColHeight ();  ; virtual Long_t ReturnLineCount ();  ; virtual Long_t ReturnLineLength (Long_t line);  ; virtual Long_t ReturnLongestLine ();  ; virtual Long_t ReturnLongestLineWidth ();  Return width of longest line. ;  ; void SavePrimitive (std::ostream &out, Option_t *="""") override;  Sa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextViewostream.html:3153,clear,clear,3153,doc/master/classTGTextViewostream.html,https://root.cern,https://root.cern/doc/master/classTGTextViewostream.html,1,['clear'],['clear']
Usability," (const char *word);  ; virtual Bool_t Copy ();  Copy selected text to clipboard. ;  ; virtual void DataChanged ();  ; virtual void DataDropped (const char *fname);  ; virtual void DoubleClicked (const char *word);  ; TGText * GetText () const;  ; Bool_t HandleButton (Event_t *event) override;  Handle mouse button event in text editor. ;  ; Bool_t HandleCrossing (Event_t *event) override;  Handle mouse crossing event. ;  ; Bool_t HandleDNDDrop (TDNDData *data) override;  Handle Drop event. ;  ; Atom_t HandleDNDEnter (Atom_t *typelist) override;  Handle Drag Enter event. ;  ; Bool_t HandleDNDLeave () override;  Handle Drag Leave event. ;  ; Atom_t HandleDNDPosition (Int_t x, Int_t y, Atom_t action, Int_t xroot, Int_t yroot) override;  Handle Drag position event. ;  ; Bool_t HandleDoubleClick (Event_t *event) override;  handle double click ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle mouse motion event in the text editor widget. ;  ; Bool_t HandleSelectionClear (Event_t *event) override;  Handle selection clear event. ;  ; Bool_t HandleSelectionRequest (Event_t *event) override;  Handle request to send current clipboard contents to requestor window. ;  ; Bool_t HandleTimer (TTimer *t) override;  Handle scroll timer. ;  ; TClass * IsA () const override;  ; Bool_t IsMarked () const;  ; Bool_t IsReadOnly () const;  ; virtual Bool_t IsSaved ();  ; void Layout () override;  Layout the components of view. ;  ; virtual Bool_t LoadBuffer (const char *txtbuf);  Load text from a text buffer. Return false in case of failure. ;  ; virtual Bool_t LoadFile (const char *fname, long startpos=0, long length=-1);  Load a file in the text view widget. ;  ; virtual void Marked (Bool_t mark);  ; virtual Long_t ReturnHeighestColHeight ();  ; virtual Long_t ReturnLineCount ();  ; virtual Long_t ReturnLineLength (Long_t line);  ; virtual Long_t ReturnLongestLine ();  ; virtual Long_t ReturnLongestLineWidth ();  Return width of longest line. ;  ; void SavePrimitive (std::ostream",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextView.html:2798,clear,clear,2798,doc/master/classTGTextView.html,https://root.cern,https://root.cern/doc/master/classTGTextView.html,1,['clear'],['clear']
Usability," (delta function); tm = ROOT.RooTruthModel(""tm"", ""truth model"", dt); ; # Construct decay(t) (x) delta(t); decay_tm = ROOT.RooDecay(""decay_tm"", ""decay"", dt, tau, tm, type=""DoubleSided""); ; # Plot pdf (dashed); frame = dt.frame(Title=""Bdecay (x) resolution""); decay_tm.plotOn(frame, LineStyle=""--""); ; # B-physics pdf with Gaussian resolution; # ----------------------------------------------------------------------------; ; # Build a gaussian resolution model; bias1 = ROOT.RooRealVar(""bias1"", ""bias1"", 0); sigma1 = ROOT.RooRealVar(""sigma1"", ""sigma1"", 1); gm1 = ROOT.RooGaussModel(""gm1"", ""gauss model 1"", dt, bias1, sigma1); ; # Construct decay(t) (x) gauss1(t); decay_gm1 = ROOT.RooDecay(""decay_gm1"", ""decay"", dt, tau, gm1, type=""DoubleSided""); ; # Plot pdf; decay_gm1.plotOn(frame); ; # B-physics pdf with double Gaussian resolution; # ------------------------------------------------------------------------------------------; ; # Build another gaussian resolution model; bias2 = ROOT.RooRealVar(""bias2"", ""bias2"", 0); sigma2 = ROOT.RooRealVar(""sigma2"", ""sigma2"", 5); gm2 = ROOT.RooGaussModel(""gm2"", ""gauss model 2"", dt, bias2, sigma2); ; # Build a composite resolution model f*gm1+(1-f)*gm2; gm1frac = ROOT.RooRealVar(""gm1frac"", ""fraction of gm1"", 0.5); gmsum = ROOT.RooAddModel(""gmsum"", ""sum of gm1 and gm2"", [gm1, gm2], [gm1frac]); ; # Construct decay(t) (x) (f*gm1 + (1-f)*gm2); decay_gmsum = ROOT.RooDecay(""decay_gmsum"", ""decay"", dt, tau, gmsum, ROOT.RooDecay.DoubleSided); ; # Plot pdf (red); decay_gmsum.plotOn(frame, LineColor=""r""); ; # Draw all frames on canvas; c = ROOT.TCanvas(""rf209_anaconv"", ""rf209_anaconv"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf209_anaconv.png""); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf209_anaconv.py. tutorialsroofitrf209_anaconv.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf209__anaconv_8py.html:2756,Guid,Guide,2756,doc/master/rf209__anaconv_8py.html,https://root.cern,https://root.cern/doc/master/rf209__anaconv_8py.html,1,['Guid'],['Guide']
Usability," (from FitConfig) and fNFree (from minimizer) are consistent; 172 if (nfree != fNFree ) {; 173 MATH_ERROR_MSG(""FitResult"",""FitConfiguration and Minimizer result are not consistent"");; 174 std::cout << ""Number of free parameters from FitConfig = "" << nfree << std::endl;; 175 std::cout << ""Number of free parameters from Minimizer = "" << fNFree << std::endl;; 176 }; 177 ; 178 // if flag is binned compute a chi2 when a chi2 function is given; 179 if (fitType == 1) {; 180 if (chi2func == nullptr); 181 fChi2 = fVal;; 182 else {; 183 // compute chi2 equivalent for likelihood fits; 184 // NB: empty bins are considered; 185 fChi2 = (*chi2func)(&fParams[0]);; 186 }; 187 }; 188 else if (fitType == 3) {; 189 // case of binned likelihood fits (use Baker-Cousins chi2); 190 fChi2 = 2 * fVal;; 191 }; 192 ; 193 // fill error matrix; 194 // if minimizer provides error provides also error matrix; 195 // clear in case of re-filling an existing result; 196 if (!fCovMatrix.empty()) fCovMatrix.clear();; 197 if (!fGlobalCC.empty()) fGlobalCC.clear();; 198 ; 199 if (min->Errors() != nullptr) {; 200 ; 201 fErrors = std::vector<double>(min->Errors(), min->Errors() + npar ) ;; 202 ; 203 if (fCovStatus != 0) {; 204 unsigned int r = npar * ( npar + 1 )/2;; 205 fCovMatrix.reserve(r);; 206 for (unsigned int i = 0; i < npar; ++i); 207 for (unsigned int j = 0; j <= i; ++j); 208 fCovMatrix.push_back(min->CovMatrix(i,j) );; 209 }; 210 // minos errors are set separately when calling Fitter::CalculateMinosErrors(); 211 ; 212 // globalCC; 213 fGlobalCC.reserve(npar);; 214 for (unsigned int i = 0; i < npar; ++i) {; 215 double globcc = min->GlobalCC(i);; 216 if (globcc < 0) break; // it is not supported by that minimizer; 217 fGlobalCC.push_back(globcc);; 218 }; 219 ; 220 }; 221 ; 222}; 223 ; 224bool FitResult::Update(const std::shared_ptr<ROOT::Math::Minimizer> & min, const ROOT::Fit::FitConfig & fconfig, bool isValid, unsigned int ncalls) {; 225 // update fit result with new status from minimizer; 226 // ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitResult_8cxx_source.html:6876,clear,clear,6876,doc/master/FitResult_8cxx_source.html,https://root.cern,https://root.cern/doc/master/FitResult_8cxx_source.html,1,['clear'],['clear']
Usability," (other._specGeneratorConfig) {; 268 _specGeneratorConfig = std::make_unique<RooNumGenConfig>(*other._specGeneratorConfig);; 269 }; 270}; 271 ; 272 ; 273 ; 274////////////////////////////////////////////////////////////////////////////////; 275/// Destructor; 276 ; 277RooAbsPdf::~RooAbsPdf(); 278{; 279}; 280 ; 281 ; 282double RooAbsPdf::normalizeWithNaNPacking(double rawVal, double normVal) const {; 283 ; 284 if (normVal < 0. || (normVal == 0. && rawVal != 0)) {; 285 //Unreasonable normalisations. A zero integral can be tolerated if the function vanishes, though.; 286 const std::string msg = ""p.d.f normalization integral is zero or negative: "" + std::to_string(normVal);; 287 logEvalError(msg.c_str());; 288 clearValueAndShapeDirty();; 289 return RooNaNPacker::packFloatIntoNaN(-normVal + (rawVal < 0. ? -rawVal : 0.));; 290 }; 291 ; 292 if (rawVal < 0.) {; 293 logEvalError(Form(""p.d.f value is less than zero (%f), trying to recover"", rawVal));; 294 clearValueAndShapeDirty();; 295 return RooNaNPacker::packFloatIntoNaN(-rawVal);; 296 }; 297 ; 298 if (TMath::IsNaN(rawVal)) {; 299 logEvalError(""p.d.f value is Not-a-Number"");; 300 clearValueAndShapeDirty();; 301 return rawVal;; 302 }; 303 ; 304 return (rawVal == 0. && normVal == 0.) ? 0. : rawVal / normVal;; 305}; 306 ; 307 ; 308////////////////////////////////////////////////////////////////////////////////; 309/// Return current value, normalized by integrating over; 310/// the observables in `nset`. If `nset` is 0, the unnormalized value; 311/// is returned. All elements of `nset` must be lvalues.; 312///; 313/// Unnormalized values are not cached.; 314/// Doing so would be complicated as `_norm->getVal()` could; 315/// spoil the cache and interfere with returning the cached; 316/// return value. Since unnormalized calls are typically; 317/// done in integration calls, there is no performance hit.; 318 ; 319double RooAbsPdf::getValV(const RooArgSet* nset) const; 320{; 321 ; 322 // Special handling of case without normali",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:11196,clear,clearValueAndShapeDirty,11196,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['clear'],['clearValueAndShapeDirty']
Usability," (see also comments in TProfile::GetBinError); 880 ; 881Double_t TProfile2D::GetBinError(Int_t bin) const; 882{; 883 return TProfileHelper::GetBinError((TProfile2D*)this, bin);; 884}; 885 ; 886////////////////////////////////////////////////////////////////////////////////; 887/// Return option to compute profile2D errors.; 888 ; 889Option_t *TProfile2D::GetErrorOption() const; 890{; 891 if (fErrorMode == kERRORSPREAD) return ""s"";; 892 if (fErrorMode == kERRORSPREADI) return ""i"";; 893 if (fErrorMode == kERRORSPREADG) return ""g"";; 894 return """";; 895}; 896 ; 897////////////////////////////////////////////////////////////////////////////////; 898/// Fill the array stats from the contents of this profile.; 899/// The array stats must be correctly dimensioned in the calling program.; 900///; 901/// - stats[0] = sumw; 902/// - stats[1] = sumw2; 903/// - stats[2] = sumwx; 904/// - stats[3] = sumwx2; 905/// - stats[4] = sumwy; 906/// - stats[5] = sumwy2; 907/// - stats[6] = sumwxy; 908/// - stats[7] = sumwz; 909/// - stats[8] = sumwz2; 910///; 911/// If no axis-subrange is specified (via TAxis::SetRange), the array stats; 912/// is simply a copy of the statistics quantities computed at filling time.; 913/// If a sub-range is specified, the function recomputes these quantities; 914/// from the bin contents in the current axis range.; 915 ; 916void TProfile2D::GetStats(Double_t *stats) const; 917{; 918 if (fBuffer) ((TProfile2D*)this)->BufferEmpty();; 919 ; 920 // check for labels axis . In that case corresponding statistics do not make sense and it is set to zero; 921 Bool_t labelXaxis = ((const_cast<TAxis&>(fXaxis)).GetLabels() && fXaxis.CanExtend() );; 922 Bool_t labelYaxis = ((const_cast<TAxis&>(fYaxis)).GetLabels() && fYaxis.CanExtend() );; 923 ; 924 // Loop on bins; 925 if ( (fTsumw == 0 /* && fEntries > 0 */) || fXaxis.TestBit(TAxis::kAxisRange) || fYaxis.TestBit(TAxis::kAxisRange)) {; 926 Int_t bin, binx, biny;; 927 Double_t w, w2;; 928 Double_t x,y;; 929 for (bin=0;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8cxx_source.html:32058,simpl,simply,32058,doc/master/TProfile2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8cxx_source.html,1,['simpl'],['simply']
Usability," )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGProgressBar (const TGWindow *p, UInt_t w, UInt_t h, Pixel_t back=GetWhitePixel(), Pixel_t barcolor=GetDefaultSelectedBackground(), GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t options=kDoubleBorder|kSunkenFrame);  Create progress bar. ;  ;  ~TGProgressBar () override;  ; virtual void Format (const char *format=""%.2f"");  Set format for displaying a value. ;  ; Pixel_t GetBarColor () const;  ; EBarType GetBarType () const;  ; EFillType GetFillType () const;  ; FontStruct_t GetFontStruct () const;  ; TString GetFormat () const;  ; Float_t GetMax () const;  ; Float_t GetMin () const;  ; GContext_t GetNormGC () const;  ; Float_t GetPosition () const;  ; Bool_t GetShowPos () const;  ; const char * GetValueFormat () const;  ; void Increment (Float_t inc);  Increment progress position. ;  ; TClass * IsA () const override;  ; virtual void Percent (Bool_t on);  ; virtual void Reset ();  Reset progress bar (i.e. set pos to 0). ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save progress bar parameters as a C++ statement(s) on output stream out. ;  ; void SetBarColor (const char *color=""blue"");  Set progress bar color. ;  ; virtual void SetBarColor (Pixel_t color);  Set progress bar color. ;  ; void SetBarType (EBarType type);  Set bar type. ;  ; void SetFillType (EFillType type);  Set fill type. ;  ; void SetForegroundColor (Pixel_t pixel) override;  Change text color drawing. ;  ; void SetMax (Float_t max);  ; void SetMin (Float_t min);  ; void SetPosition (Float_t pos);  Set progress position between [min,max]. ;  ; void SetRange (Float_t min, Float_t max);  Set min and max of progress bar. ;  ; virtual void ShowPos (Bool_t on);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t UsePercent () const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGProgressBar.html:3063,progress bar,progress bar,3063,doc/master/classTGProgressBar.html,https://root.cern,https://root.cern/doc/master/classTGProgressBar.html,1,['progress bar'],['progress bar']
Usability," )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooStats/SimpleInterval.h>. Inheritance diagram for RooStats::SimpleInterval:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ SimpleInterval() [1/3]. SimpleInterval::SimpleInterval ; (; const char * ; name = nullptr). explicit . default constructor ; Default constructor. ; Definition at line 42 of file SimpleInterval.cxx. ◆ SimpleInterval() [2/3]. SimpleInterval::SimpleInterval ; (; const SimpleInterval & ; other, . const char * ; name . ). default constructor ; fParameters.add( other.fParameters ); ; Definition at line 51 of file SimpleInterval.cxx. ◆ SimpleInterval() [3/3]. SimpleInterval::SimpleInterval ; (; const char * ; name, . const RooRealVar & ; var, . double ; lower, . double ; upper, . double ; cl . ). constructor from name, the Parameter of interest and lower/upper bound values ; Alternate constructor. ; Definition at line 85 of file SimpleInterval.cxx. Member Function Documentation. ◆ CheckParameters(). bool SimpleInterval::CheckParameters ; (; const RooArgSet & ; parameterPoint); const. overridevirtual . check if parameters are correct (i.e. they are the POI of this interval) ; Implements RooStats::ConfIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SimpleInterval.html:13277,Simpl,SimpleInterval,13277,doc/master/classRooStats_1_1SimpleInterval.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SimpleInterval.html,1,['Simpl'],['SimpleInterval']
Usability," )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/tutorials/tree/JetEvent.h>. Inheritance diagram for Hit:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ Hit(). Hit::Hit ; (; ). inline . Definition at line 24 of file JetEvent.h. ◆ ~Hit(). Hit::~Hit ; (; ). inlineoverride . Definition at line 25 of file JetEvent.h. Member Data Documentation. ◆ fX. Float_t Hit::fX. Definition at line 19 of file JetEvent.h. ◆ fY. Float_t Hit::fY. Definition at line 20 of file JetEvent.h. ◆ fZ. Float_t Hit::fZ. Definition at line 21 of file JetEvent.h. tutorials/tree/JetEvent.h. Hit. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:36 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classHit.html:10259,Guid,Guide,10259,doc/master/classHit.html,https://root.cern,https://root.cern/doc/master/classHit.html,1,['Guid'],['Guide']
Usability," )); };  . #include <TBits.h>. Inheritance diagram for TBits:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TBits() [1/2]. TBits::TBits ; (; UInt_t ; nbits = 8). TBits constructor. All bits set to 0. ; Definition at line 33 of file TBits.cxx. ◆ TBits() [2/2]. TBits::TBits ; (; const TBits & ; original). TBits copy constructor. ; Definition at line 45 of file TBits.cxx. ◆ ~TBits(). TBits::~TBits ; (; ). virtual . TBits destructor. ; Definition at line 76 of file TBits.cxx. Member Function Documentation. ◆ Class(). static TClass * TBits::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TBits::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TBits::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 144 of file TBits.h. ◆ Clear(). void TBits::Clear ; (; Option_t * ; option = """"). overridevirtual . Clear the value. ; Reimplemented from TObject.; Definition at line 84 of file TBits.cxx. ◆ Compact(). void TBits::Compact ; (; ). Reduce the storage used by the object to a minimun. ; Definition at line 95 of file TBits.cxx. ◆ CountBits(). UInt_t TBits::CountBits ; (; UInt_t ; startBit = 0); const. Return number of bits set to 1 starting at bit startBit. ; Definition at line 118 of file TBits.cxx. ◆ DeclFileName(). static const char * TBits::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 144 of file TBits.h. ◆ DoAndEqual(). void TBits::DoAndEqual ; (; const TBits & ; rhs). protected . Execute (*this) &= rhs; Extra bits in rhs are ignored Missing bits in rhs are assumed to be zero. ; Definition at line 165 of file TBits.cxx. ◆ DoFlip(). void TBits::DoFlip ; (; ). protected . Execute ~(*this) ; Definition at line 205 of file TBits.cxx. ◆ DoLeftShift(). void TBits::DoLeftShift ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBits.html:14549,Clear,Clear,14549,doc/master/classTBits.html,https://root.cern,https://root.cern/doc/master/classTBits.html,1,['Clear'],['Clear']
Usability," )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TGTextView; void Copy (TObject &) const override;  Copy this to obj. ;  ; void DrawRegion (Int_t x, Int_t y, UInt_t w, UInt_t h) override;  Draw lines in exposed region. ;  ; virtual void HLayout ();  Horizontal layout of widgets (canvas, scrollbar). ;  ; void Init (Pixel_t bg);  Initialize a text view widget. ;  ; virtual void Mark (Long_t xPos, Long_t yPos);  Mark a text region from xPos to yPos. ;  ; virtual void UnMark ();  Clear marked region. ;  ; virtual void VLayout ();  Vertical layout of widgets (canvas, scrollbar). ;  ;  Protected Member Functions inherited from TGView; void DoRedraw () override;  redraw ;  ; virtual Bool_t ItemLayout ();  ; virtual void UpdateRegion (Int_t x, Int_t y, UInt_t w, UInt_t h);  update a part of view ;  ;  Protected Member Functions inherited from TGFrame; virtual void Draw3dRectangle (UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h);  Draw 3D rectangle on the frame border. ;  ; TString GetOptionString () const;  Returns a frame option string - used in SavePrimitive(). ;  ; const TGResourcePool * GetResourcePool () const;  ; void * GetSender () override;  ; virtual void StartGuiBuilding (Bool_t on=kTRUE);  Go into GUI building mode. ;  ;  Protected Member Functions inherited from TGWindow;  TGWindow (const TGWindow &tgw);  ;  TGWindow (Window_t id);  ; TGWindow & operator= (const TGWindow &tgw);  ;  Protected Member Functions inherited from TGObject; TGObject & o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextViewostream.html:36874,Clear,Clear,36874,doc/master/classTGTextViewostream.html,https://root.cern,https://root.cern/doc/master/classTGTextViewostream.html,1,['Clear'],['Clear']
Usability," ). Definition at line 63 of file gifencode.c. ◆ output() [1/2]. static void output ; (; ). static . ◆ output() [2/2]. static void output ; (; int ; code). static . Definition at line 226 of file gifencode.c. ◆ put_short() [1/2]. static void put_short ; (; ). static . ◆ put_short() [2/2]. static void put_short ; (; int ; word). static . Definition at line 301 of file gifencode.c. Variable Documentation. ◆ a_count. int a_count. static . Definition at line 209 of file gifencode.c. ◆ accum. char accum[256]. static . Definition at line 210 of file gifencode.c. ◆ BitsPixel. int BitsPixel. static . Definition at line 25 of file gifencode.c. ◆ ClearCode. int ClearCode. static . Definition at line 29 of file gifencode.c. ◆ CodeTab. int CodeTab[5003]. static . Definition at line 23 of file gifencode.c. ◆ cur_accum. unsigned long cur_accum. static . Definition at line 207 of file gifencode.c. ◆ cur_bits. int cur_bits. static . Definition at line 208 of file gifencode.c. ◆ CurCodeSize. int CurCodeSize. static . Definition at line 27 of file gifencode.c. ◆ CurMaxCode. int CurMaxCode. static . Definition at line 28 of file gifencode.c. ◆ EOFCode. int EOFCode. static . Definition at line 30 of file gifencode.c. ◆ FreeCode. int FreeCode. static . Definition at line 31 of file gifencode.c. ◆ HashTab. long HashTab[5003]. static . Definition at line 22 of file gifencode.c. ◆ IniCodeSize. int IniCodeSize. static . Definition at line 26 of file gifencode.c. ◆ masks. unsigned long masks[]. static . Initial value:= { 0x0000,; 0x0001, 0x0003, 0x0007, 0x000F,; 0x001F, 0x003F, 0x007F, 0x00FF,; 0x01FF, 0x03FF, 0x07FF, 0x0FFF,; 0x1FFF, 0x3FFF, 0x7FFF, 0xFFFF }. Definition at line 211 of file gifencode.c. ◆ Nbyte. long Nbyte. static . Definition at line 33 of file gifencode.c. ◆ put_b. void(* put_b) () ; (; ). static . Definition at line 34 of file gifencode.c. graf2dwin32gdksrcgifencode.c. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/win32gdk_2src_2gifencode_8c.html:4703,Guid,Guide,4703,doc/master/win32gdk_2src_2gifencode_8c.html,https://root.cern,https://root.cern/doc/master/win32gdk_2src_2gifencode_8c.html,1,['Guid'],['Guide']
Usability," ). Generate a string for the dictionary from the headers-classes map. ; Definition at line 3378 of file rootcling_impl.cxx. ◆ GenReflexMain(). int GenReflexMain ; (; int ; argc, . char ** ; argv . ). Translate the arguments of genreflex into rootcling ones and forward them to the RootCling function. ; These are two typical genreflex and rootcling commandlines 1) genreflex header1.h [header2.h ...] [options] [preprocessor options] 2) rootcling [-v] [-v0-4] [-f] [out.cxx] [-s sharedlib.so] [-m pcmfilename] header1.h[{+,-}][!] ..headerN.h[{+,-}][!] [{LinkDef.h,selectionRules.xml}] The rules with which the arguments are translated are (1st column genreflex): –debug -v4 –quiet -v0 -o ofile positional arg after -f -s selection file Last argument of the call –fail_on_warning Wrap ROOT::TMetaUtils::Warning and throw if selected; New arguments: -l –library targetLib name (new) -s targetLib name -m pcmname (can be many -m) (new) -m pcmname (can be many -m) –rootmap -rmf (new) –rootmap-lib -rml (new); genreflex options which rise warnings (feedback is desirable) –no_membertypedefs (it should be irrelevant) –no_templatetypedefs (it should be irrelevant); genreflex options which are ignored (know for sure they are not needed) –pool, –dataonly –interpreteronly –gccxml{path,opt,post}; Exceptions The –deep option of genreflex is passed as function parameter to rootcling since it's not needed at the moment there. ; Definition at line 5608 of file rootcling_impl.cxx. ◆ GetExePath(). const char * GetExePath ; (; ). Returns the executable path name, used e.g. by SetRootSys(). ; Definition at line 196 of file rootcling_impl.cxx. ◆ GetExternalNamespaceAndContainedEntities(). std::pair< std::string, std::string > GetExternalNamespaceAndContainedEntities ; (; const std::string ; line). Performance is not critical here. ; Definition at line 2356 of file rootcling_impl.cxx. ◆ GetFullArrayLength(). size_t GetFullArrayLength ; (; const clang::ConstantArrayType * ; arrayType). Definition at li",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx.html:39850,feedback,feedback,39850,doc/master/rootcling__impl_8cxx.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx.html,1,['feedback'],['feedback']
Usability, ). inline . Definition at line 108 of file GSLMultiMinFunctionWrapper.h. Member Function Documentation. ◆ GetFunc(). gsl_multimin_function_fdf * ROOT::Math::GSLMultiMinDerivFunctionWrapper::GetFunc ; (; ). inline . Definition at line 136 of file GSLMultiMinFunctionWrapper.h. ◆ IsValid(). bool ROOT::Math::GSLMultiMinDerivFunctionWrapper::IsValid ; (; ). inline . check if function is valid (has been set) ; Definition at line 147 of file GSLMultiMinFunctionWrapper.h. ◆ SetDerivPointer(). void ROOT::Math::GSLMultiMinDerivFunctionWrapper::SetDerivPointer ; (; GSLMultiMinDfPointer ; f). inline . Definition at line 119 of file GSLMultiMinFunctionWrapper.h. ◆ SetDim(). void ROOT::Math::GSLMultiMinDerivFunctionWrapper::SetDim ; (; unsigned int ; n). inline . Definition at line 121 of file GSLMultiMinFunctionWrapper.h. ◆ SetFdfPointer(). void ROOT::Math::GSLMultiMinDerivFunctionWrapper::SetFdfPointer ; (; GSLMultiMinFdfPointer ; f). inline . Definition at line 120 of file GSLMultiMinFunctionWrapper.h. ◆ SetFuncPointer(). void ROOT::Math::GSLMultiMinDerivFunctionWrapper::SetFuncPointer ; (; GSLMultiMinFuncPointer ; f). inline . Definition at line 118 of file GSLMultiMinFunctionWrapper.h. ◆ SetFunction(). template<class FuncType > . void ROOT::Math::GSLMultiMinDerivFunctionWrapper::SetFunction ; (; const FuncType & ; f). inline . Fill gsl function structure from a C++ Function class. ; Definition at line 126 of file GSLMultiMinFunctionWrapper.h. ◆ SetParams(). void ROOT::Math::GSLMultiMinDerivFunctionWrapper::SetParams ; (; void * ; p). inline . Definition at line 122 of file GSLMultiMinFunctionWrapper.h. Member Data Documentation. ◆ fFunc. gsl_multimin_function_fdf ROOT::Math::GSLMultiMinDerivFunctionWrapper::fFunc. private . Definition at line 153 of file GSLMultiMinFunctionWrapper.h. math/mathmore/src/GSLMultiMinFunctionWrapper.h. ROOTMathGSLMultiMinDerivFunctionWrapper. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:21 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiMinDerivFunctionWrapper.html:3342,Guid,Guide,3342,doc/master/classROOT_1_1Math_1_1GSLMultiMinDerivFunctionWrapper.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiMinDerivFunctionWrapper.html,1,['Guid'],['Guide']
Usability, ). inlineoverride . Definition at line 234 of file TGeoNode.h. Member Function Documentation. ◆ Class(). static TClass * TGeoIteratorPlugin::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoIteratorPlugin::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoIteratorPlugin::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 239 of file TGeoNode.h. ◆ DeclFileName(). static const char * TGeoIteratorPlugin::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 239 of file TGeoNode.h. ◆ IsA(). TClass * TGeoIteratorPlugin::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 239 of file TGeoNode.h. ◆ operator=(). TGeoIteratorPlugin & TGeoIteratorPlugin::operator= ; (; const TGeoIteratorPlugin & ; ). private . ◆ ProcessNode(). virtual void TGeoIteratorPlugin::ProcessNode ; (; ). pure virtual . Implemented in iterplugin. ◆ SetIterator(). void TGeoIteratorPlugin::SetIterator ; (; const TGeoIterator * ; iter). inline . Definition at line 237 of file TGeoNode.h. ◆ Streamer(). void TGeoIteratorPlugin::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGeoIteratorPlugin::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 239 of file TGeoNode.h. Member Data Documentation. ◆ fIterator. const TGeoIterator* TGeoIteratorPlugin::fIterator = nullptr. protected . Definition at line 226 of file TGeoNode.h. Libraries for TGeoIteratorPlugin:. [legend]; The documentation for this class was generated from the following file:; geom/geom/inc/TGeoNode.h. TGeoIteratorPlugin. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:04 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoIteratorPlugin.html:12631,Guid,Guide,12631,doc/master/classTGeoIteratorPlugin.html,https://root.cern,https://root.cern/doc/master/classTGeoIteratorPlugin.html,1,['Guid'],['Guide']
Usability," ). inlineprotected . Definition at line 113 of file TAxis3D.h. ◆ ToggleRulers(). TAxis3D * TAxis3D::ToggleRulers ; (; TVirtualPad * ; pad = nullptr). static . Turn ON / OFF the ""Ruler"", TAxis3D object attached to the current pad. ; Definition at line 738 of file TAxis3D.cxx. ◆ ToggleZoom(). TAxis3D * TAxis3D::ToggleZoom ; (; TVirtualPad * ; pad = nullptr). static . Turn ON / OFF the ""Ruler"" and ""zoom mode"" of the TAxis3D object attached to the current pad (if pad = 0; gPad is used ""by default"") ; User is given a chance to either:; move the center of the 3D scene at the cursor position; zoom view with mouse ""drugging"" the bounder rectangle with ""left"" mouse; Change the axis attributes via TContextMenu with ""right mouse button click"" . Definition at line 766 of file TAxis3D.cxx. ◆ UseCurrentStyle(). void TAxis3D::UseCurrentStyle ; (; ). overridevirtual . Replace current attributes by current style. ; Reimplemented from TObject.; Definition at line 490 of file TAxis3D.cxx. ◆ Zoom(). Bool_t & TAxis3D::Zoom ; (; ). inline . Definition at line 61 of file TAxis3D.h. Member Data Documentation. ◆ fAxis. TAxis TAxis3D::fAxis[3]. protected . Definition at line 38 of file TAxis3D.h. ◆ fgRulerName. const Char_t * TAxis3D::fgRulerName = ""axis3druler"". staticprotected . Definition at line 40 of file TAxis3D.h. ◆ fOption. TString TAxis3D::fOption. protected . Definition at line 39 of file TAxis3D.h. ◆ fSelected. TAxis* TAxis3D::fSelected. protected . Definition at line 41 of file TAxis3D.h. ◆ fStickyZoom. Bool_t TAxis3D::fStickyZoom. protected . Definition at line 43 of file TAxis3D.h. ◆ fZoomMode. Bool_t TAxis3D::fZoomMode. protected . The selected axis to play with. ; Definition at line 42 of file TAxis3D.h. Libraries for TAxis3D:. [legend]; The documentation for this class was generated from the following files:; graf3d/g3d/inc/TAxis3D.h; graf3d/g3d/src/TAxis3D.cxx. TAxis3D. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:17 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAxis3D.html:28336,Guid,Guide,28336,doc/master/classTAxis3D.html,https://root.cern,https://root.cern/doc/master/classTAxis3D.html,1,['Guid'],['Guide']
Usability, ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 51 of file RooDouble.h. ◆ Compare(). Int_t RooDouble::Compare ; (; const TObject * ; other); const. overridevirtual . Implement comparison to other TObjects that are also RooDouble to facilitate sorting of RooDoubles in a ROOT container. ; Reimplemented from TObject.; Definition at line 43 of file RooDouble.cxx. ◆ DeclFileName(). static const char * RooDouble::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 51 of file RooDouble.h. ◆ IsA(). TClass * RooDouble::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 51 of file RooDouble.h. ◆ IsSortable(). bool RooDouble::IsSortable ; (; ); const. inlineoverridevirtual . We are a sortable object. ; Reimplemented from TObject.; Definition at line 44 of file RooDouble.h. ◆ operator double(). RooDouble::operator double ; (; ); const. inline . Return value of contained double. ; Definition at line 33 of file RooDouble.h. ◆ operator=(). RooDouble & RooDouble::operator= ; (; double ; value). inline . Return true if contained double equals value. ; Definition at line 37 of file RooDouble.h. ◆ Streamer(). void RooDouble::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void RooDouble::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 51 of file RooDouble.h. Member Data Documentation. ◆ _value. double RooDouble::_value. protected . Value payload. ; Definition at line 50 of file RooDouble.h. Libraries for RooDouble:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooDouble.h; roofit/roofitcore/src/RooDouble.cxx. RooDouble. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:51 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDouble.html:14432,Guid,Guide,14432,doc/master/classRooDouble.html,https://root.cern,https://root.cern/doc/master/classRooDouble.html,1,['Guid'],['Guide']
Usability, ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFileMergeInfo::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFileMergeInfo::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 62 of file TFileMergeInfo.h. ◆ DeclFileName(). static const char * TFileMergeInfo::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 62 of file TFileMergeInfo.h. ◆ IsA(). virtual TClass * TFileMergeInfo::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 62 of file TFileMergeInfo.h. ◆ operator=(). TFileMergeInfo & TFileMergeInfo::operator= ; (; const TFileMergeInfo & ; ). privatedelete . ◆ Reset(). void TFileMergeInfo::Reset ; (; ). inline . Definition at line 60 of file TFileMergeInfo.h. ◆ Streamer(). virtual void TFileMergeInfo::Streamer ; (; TBuffer & ; ). virtual . ◆ StreamerNVirtual(). void TFileMergeInfo::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 62 of file TFileMergeInfo.h. Member Data Documentation. ◆ fIOFeatures. TIOFeatures* TFileMergeInfo::fIOFeatures {nullptr}. Definition at line 55 of file TFileMergeInfo.h. ◆ fIsFirst. Bool_t TFileMergeInfo::fIsFirst {kTRUE}. Definition at line 52 of file TFileMergeInfo.h. ◆ fOptions. TString TFileMergeInfo::fOptions. Definition at line 53 of file TFileMergeInfo.h. ◆ fOutputDirectory. TDirectory* TFileMergeInfo::fOutputDirectory {nullptr}. Definition at line 51 of file TFileMergeInfo.h. ◆ fUserData. TObject* TFileMergeInfo::fUserData {nullptr}. Definition at line 54 of file TFileMergeInfo.h. Libraries for TFileMergeInfo:. [legend]; The documentation for this class was generated from the following file:; core/meta/inc/TFileMergeInfo.h. TFileMergeInfo. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:50 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileMergeInfo.html:3930,Guid,Guide,3930,doc/master/classTFileMergeInfo.html,https://root.cern,https://root.cern/doc/master/classTFileMergeInfo.html,1,['Guid'],['Guide']
Usability," ); const. Returns a number of undo arguments. ; Definition at line 776 of file TQCommand.cxx. ◆ GetObject(). void * TQCommand::GetObject ; (; ); const. Returns an object for which undo redo actions are applied. ; Definition at line 784 of file TQCommand.cxx. ◆ GetRedo(). TQConnection * TQCommand::GetRedo ; (; ); const. inline . Definition at line 75 of file TQCommand.h. ◆ GetRedoArgs(). Long_t * TQCommand::GetRedoArgs ; (; ); const. Returns a pointer to array of redo arguments. ; Definition at line 752 of file TQCommand.cxx. ◆ GetRedoName(). const char * TQCommand::GetRedoName ; (; ); const. Returns the name of redo command. ; Definition at line 736 of file TQCommand.cxx. ◆ GetStatus(). Int_t TQCommand::GetStatus ; (; ); const. Returns a number of sequential undo or redo operations. ; Definition at line 792 of file TQCommand.cxx. ◆ GetTitle(). const char * TQCommand::GetTitle ; (; ); const. overridevirtual . Returns command description. ; By default, ""ClassName::RedoName(args)_ClassName::UndoName(args)"" ; Reimplemented from TObject.; Definition at line 713 of file TQCommand.cxx. ◆ GetUndo(). TQConnection * TQCommand::GetUndo ; (; ); const. inline . Definition at line 76 of file TQCommand.h. ◆ GetUndoArgs(). Long_t * TQCommand::GetUndoArgs ; (; ); const. Returns a pointer to array of undo arguments. ; Definition at line 760 of file TQCommand.cxx. ◆ GetUndoName(). const char * TQCommand::GetUndoName ; (; ); const. Returns the name of undo command. ; Definition at line 744 of file TQCommand.cxx. ◆ Init(). void TQCommand::Init ; (; const char * ; cl, . void * ; object, . const char * ; redo, . const char * ; undo . ). protectedvirtual . Common protected method used in several constructors. ; Definition at line 120 of file TQCommand.cxx. ◆ IsA(). TClass * TQCommand::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TList.; Reimplemented in TQUndoManager.; Definition at line 98 of file TQCommand.h. ◆ IsEqual(). Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQCommand.html:38760,Undo,UndoName,38760,doc/master/classTQCommand.html,https://root.cern,https://root.cern/doc/master/classTQCommand.html,1,['Undo'],['UndoName']
Usability," ); const. inline . Definition at line 49 of file TProofNodes.h. ◆ GetNWorkersCluster(). Int_t TProofNodes::GetNWorkersCluster ; (; ); const. inline . Definition at line 48 of file TProofNodes.h. ◆ IsA(). TClass * TProofNodes::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 57 of file TProofNodes.h. ◆ Print(). void TProofNodes::Print ; (; Option_t * ; option = """"); const. overridevirtual . Description: Print node information. ; Reimplemented from TObject.; Definition at line 271 of file TProofNodes.cxx. ◆ Streamer(). void TProofNodes::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TProofNodes::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 57 of file TProofNodes.h. Member Data Documentation. ◆ fActiveNodes. TMap* TProofNodes::fActiveNodes. private . Definition at line 32 of file TProofNodes.h. ◆ fMaxWrksNode. Int_t TProofNodes::fMaxWrksNode. private . Definition at line 33 of file TProofNodes.h. ◆ fMinWrksNode. Int_t TProofNodes::fMinWrksNode. private . Definition at line 34 of file TProofNodes.h. ◆ fNActiveWrks. Int_t TProofNodes::fNActiveWrks. private . Definition at line 37 of file TProofNodes.h. ◆ fNCores. Int_t TProofNodes::fNCores. private . Definition at line 38 of file TProofNodes.h. ◆ fNNodes. Int_t TProofNodes::fNNodes. private . Definition at line 35 of file TProofNodes.h. ◆ fNodes. TMap* TProofNodes::fNodes. private . Definition at line 31 of file TProofNodes.h. ◆ fNWrks. Int_t TProofNodes::fNWrks. private . Definition at line 36 of file TProofNodes.h. ◆ fProof. TProof* TProofNodes::fProof. private . Definition at line 30 of file TProofNodes.h. proof/proofbench/inc/TProofNodes.h; proof/proofbench/src/TProofNodes.cxx. TProofNodes. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:15 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofNodes.html:15604,Guid,Guide,15604,doc/master/classTProofNodes.html,https://root.cern,https://root.cern/doc/master/classTProofNodes.html,1,['Guid'],['Guide']
Usability," ); const. privatepure virtual . Implemented in ROOT::Math::GSLMultiRootSolver, and ROOT::Math::GSLMultiRootDerivSolver. ◆ InitSolver(). bool ROOT::Math::GSLMultiRootBaseSolver::InitSolver ; (; const std::vector< ROOT::Math::IMultiGenFunction * > & ; funcVec, . const double * ; x . ). inline . init the solver with function list and initial values ; Definition at line 71 of file GSLMultiRootSolver.h. ◆ Iterate(). virtual int ROOT::Math::GSLMultiRootBaseSolver::Iterate ; (; ). pure virtual . perform an iteration ; Implemented in ROOT::Math::GSLMultiRootSolver, and ROOT::Math::GSLMultiRootDerivSolver. ◆ Name(). virtual const std::string & ROOT::Math::GSLMultiRootBaseSolver::Name ; (; ); const. pure virtual . return name ; Implemented in ROOT::Math::GSLMultiRootSolver, and ROOT::Math::GSLMultiRootDerivSolver. ◆ SetSolver(). virtual int ROOT::Math::GSLMultiRootBaseSolver::SetSolver ; (; const std::vector< ROOT::Math::IMultiGenFunction * > & ; funcVec, . const double * ; x . ). privatepure virtual . Implemented in ROOT::Math::GSLMultiRootSolver, and ROOT::Math::GSLMultiRootDerivSolver. ◆ TestDelta(). int ROOT::Math::GSLMultiRootBaseSolver::TestDelta ; (; double ; absTol, . double ; relTol . ); const. inline . test using abs and relative tolerance |dx| < absTol + relTol*|x| for every component ; Definition at line 117 of file GSLMultiRootSolver.h. ◆ TestResidual(). int ROOT::Math::GSLMultiRootBaseSolver::TestResidual ; (; double ; absTol); const. inline . test using abs tolerance Sum |f|_i < absTol ; Definition at line 126 of file GSLMultiRootSolver.h. ◆ X(). const double * ROOT::Math::GSLMultiRootBaseSolver::X ; (; ); const. inline . solution values at the current iteration ; Definition at line 98 of file GSLMultiRootSolver.h. The documentation for this class was generated from the following file:; math/mathmore/src/GSLMultiRootSolver.h. ROOTMathGSLMultiRootBaseSolver. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootBaseSolver.html:4981,Guid,Guide,4981,doc/master/classROOT_1_1Math_1_1GSLMultiRootBaseSolver.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootBaseSolver.html,1,['Guid'],['Guide']
Usability," * TBranchRef::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TBranch.; Definition at line 60 of file TBranchRef.h. ◆ Notify(). bool TBranchRef::Notify ; (; ). overridevirtual . This function is called by TRefTable::Notify, itself called by TRef::GetObject. ; The function reads the branch containing the object referenced by the TRef. ; Reimplemented from TObject.; Definition at line 115 of file TBranchRef.cxx. ◆ Print(). void TBranchRef::Print ; (; Option_t * ; option = """"); const. overridevirtual . Print the TRefTable branch. ; Reimplemented from TBranch.; Definition at line 159 of file TBranchRef.cxx. ◆ ReadLeavesImpl(). void TBranchRef::ReadLeavesImpl ; (; TBuffer & ; b). protected . This function called by TBranch::GetEntry overloads TBranch::ReadLeaves. ; Definition at line 167 of file TBranchRef.cxx. ◆ Reset(). void TBranchRef::Reset ; (; Option_t * ; option = """"). overridevirtual . Existing buffers are deleted; Entries, max and min are reset; TRefTable is cleared. . Reimplemented from TBranch.; Definition at line 187 of file TBranchRef.cxx. ◆ ResetAfterMerge(). void TBranchRef::ResetAfterMerge ; (; TFileMergeInfo * ; info). overridevirtual . Reset a Branch after a Merge operation (drop data but keep customizations) TRefTable is cleared. ; Reimplemented from TBranch.; Definition at line 198 of file TBranchRef.cxx. ◆ SetParent(). Int_t TBranchRef::SetParent ; (; const TObject * ; object, . Int_t ; branchID . ). virtual . Set the current parent branch. ; This function is called by TBranchElement::GetEntry() and TBranchElement::Fill() when reading or writing branches that may contain referenced objects. ; Definition at line 212 of file TBranchRef.cxx. ◆ SetRequestedEntry(). virtual void TBranchRef::SetRequestedEntry ; (; Long64_t ; entry). inlinevirtual . Definition at line 55 of file TBranchRef.h. ◆ Streamer(). void TBranchRef::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimpl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranchRef.html:31180,clear,cleared,31180,doc/master/classTBranchRef.html,https://root.cern,https://root.cern/doc/master/classTBranchRef.html,1,['clear'],['cleared']
Usability," * TProofPlayerRemote::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TProofPlayerRemote::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 366 of file TProofPlayer.h. ◆ DeclFileName(). static const char * TProofPlayerRemote::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 366 of file TProofPlayer.h. ◆ DrawSelect(). Long64_t TProofPlayerRemote::DrawSelect ; (; TDSet * ; set, . const char * ; varexp, . const char * ; selection, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; firstentry = 0 . ). overridevirtual . Draw (support for TChain::Draw()). ; Returns -1 in case of error or number of selected events in case of success. ; Reimplemented from TProofPlayer.; Definition at line 4232 of file TProofPlayer.cxx. ◆ Feedback(). void TProofPlayerRemote::Feedback ; (; TList * ; objs). overridevirtual . Feedback signal. ; Reimplemented from TProofPlayer.; Definition at line 3317 of file TProofPlayer.cxx. ◆ Finalize() [1/2]. Long64_t TProofPlayerRemote::Finalize ; (; Bool_t ; force = kFALSE, . Bool_t ; sync = kFALSE . ). overridevirtual . Finalize query (may not be used in this class). ; Reimplemented from TProofPlayer.; Definition at line 2781 of file TProofPlayer.cxx. ◆ Finalize() [2/2]. Long64_t TProofPlayerRemote::Finalize ; (; TQueryResult * ; qr). overridevirtual . Finalize the results of a query already processed. ; Reimplemented from TProofPlayer.; Definition at line 2973 of file TProofPlayer.cxx. ◆ GetNextPacket(). TDSetElement * TProofPlayerRemote::GetNextPacket ; (; TSlave * ; slave, . TMessage * ; r . ). overridevirtual . Get next packet for specified slave. ; Reimplemented from TProofPlayer.; Definition at line 4188 of file TProofPlayer.cxx. ◆ GetPacketizer(). TVirtualPacketizer * TProofPlayerRemote::GetPacketizer ; (; ); const. inlineoverridevirtual . Reimplemented from TProofPla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPlayerRemote.html:28016,Feedback,Feedback,28016,doc/master/classTProofPlayerRemote.html,https://root.cern,https://root.cern/doc/master/classTProofPlayerRemote.html,1,['Feedback'],['Feedback']
Usability," *) constTInterpreterinlinevirtual; TypedefInfo_Title(TypedefInfo_t *) constTInterpreterinlinevirtual; TypedefInfo_TrueName(TypedefInfo_t *) constTInterpreterinlinevirtual; TypeInfo_Delete(TypeInfo_t *) constTInterpreterinlinevirtual; TypeInfo_Factory() constTInterpreterinlinevirtual; TypeInfo_Factory(const char *) constTInterpreterinlinevirtual; TypeInfo_FactoryCopy(TypeInfo_t *) constTInterpreterinlinevirtual; TypeInfo_Init(TypeInfo_t *, const char *) constTInterpreterinlinevirtual; TypeInfo_IsValid(TypeInfo_t *) constTInterpreterinlinevirtual; TypeInfo_Name(TypeInfo_t *) constTInterpreterinlinevirtual; TypeInfo_Property(TypeInfo_t *) constTInterpreterinlinevirtual; TypeInfo_QualTypePtr(TypeInfo_t *) constTInterpreterinlinevirtual; TypeInfo_RefType(TypeInfo_t *) constTInterpreterinlinevirtual; TypeInfo_Size(TypeInfo_t *) constTInterpreterinlinevirtual; TypeInfo_TrueName(TypeInfo_t *) constTInterpreterinlinevirtual; TypeName(const char *s)=0TInterpreterpure virtual; UnloadAllSharedLibraryMaps()=0TInterpreterpure virtual; UnloadFile(const char *) constTInterpreterinlinevirtual; UnloadLibraryMap(const char *library)=0TInterpreterpure virtual; UnRegisterTClassUpdate(const TClass *oldcl)=0TInterpreterpure virtual; UpdateEnumConstants(TEnum *enumObj, TClass *cl) const =0TInterpreterpure virtual; UpdateListOfGlobalFunctions()=0TInterpreterpure virtual; UpdateListOfGlobals()=0TInterpreterpure virtual; UpdateListOfMethods(TClass *cl) const =0TInterpreterpure virtual; UpdateListOfTypes()=0TInterpreterpure virtual; UseCurrentStyle()TObjectvirtual; Warning(const char *method, const char *msgfmt,...) constTObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)TObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) constTObjectvirtual; ~TInterpreter()TInterpreterinlinevirtual; ~TNamed()TNamedvirtual; ~TObject()TObjectvirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:52 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTInterpreter-members.html:30788,Guid,Guide,30788,doc/master/classTInterpreter-members.html,https://root.cern,https://root.cern/doc/master/classTInterpreter-members.html,1,['Guid'],['Guide']
Usability," *axis=""X"");  ; void SetTitle (const char *name) override;  Set the title of the RooPlot to 'title'. ;  ; void SetTitleFont (Style_t font=62, Option_t *axis=""X"");  ; void SetTitleOffset (Float_t offset=1, Option_t *axis=""X"");  ; void SetTitleSize (Float_t size=0.02, Option_t *axis=""X"");  ; void SetXTitle (const char *title);  ; void SetYTitle (const char *title);  ; void SetZTitle (const char *title);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void updateNormVars (const RooArgSet &vars);  Install the given set of observables are reference normalization variables for this frame. ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:13459,Clear,Clear,13459,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,1,['Clear'],['Clear']
Usability," *medium, Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2)Make in one step a volume pointing to a tube segment shape with given medium.Definition TGeoManager.cxx:3213; TGeoMaterialBase class describing materials.Definition TGeoMaterial.h:34; TGeoMediumMedia are used to store properties related to tracking and which are useful only when using geometry ...Definition TGeoMedium.h:23; TGeoRotationClass describing rotations.Definition TGeoMatrix.h:168; TGeoTranslationClass describing translations.Definition TGeoMatrix.h:116; TGeoVolumeTGeoVolume, TGeoVolumeMulti, TGeoVolumeAssembly are the volume classes.Definition TGeoVolume.h:43; TGeoVolume::AddNodevirtual TGeoNode * AddNode(TGeoVolume *vol, Int_t copy_no, TGeoMatrix *mat=nullptr, Option_t *option="""")Add a TGeoNode to the list of nodes.Definition TGeoVolume.cxx:975; TGeoVolume::Drawvoid Draw(Option_t *option="""") overridedraw top volume according to optionDefinition TGeoVolume.cxx:1206; TGeoVolume::SetLineColorvoid SetLineColor(Color_t lcolor) overrideSet the line color.Definition TGeoVolume.cxx:2169; TRandom::SetSeedvirtual void SetSeed(ULong_t seed=0)Set the random generator seed.Definition TRandom.cxx:615; TRandom::RndmDouble_t Rndm() overrideMachine independent random number generator.Definition TRandom.cxx:559; TRandom::Rannorvirtual void Rannor(Float_t &a, Float_t &b)Return 2 numbers distributed following a gaussian with mean=0 and sigma=1.Definition TRandom.cxx:507; TRandom::Integervirtual UInt_t Integer(UInt_t imax)Returns a random integer uniformly distributed on the interval [ 0, imax-1 ].Definition TRandom.cxx:361; ROOT::VecOps::powRVec< PromoteTypes< T0, T1 > > pow(const T0 &x, const RVec< T1 > &v)Definition RVec.hxx:1846; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; AuthorRichard Maunder ; Definition in file glViewerLOD.C. tutorialsglglViewerLOD.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:28 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/glViewerLOD_8C.html:9514,Guid,Guide,9514,doc/master/glViewerLOD_8C.html,https://root.cern,https://root.cern/doc/master/glViewerLOD_8C.html,1,['Guid'],['Guide']
Usability," *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins, Int_t nbinsz, const Float_t *zbins)TH3protected; TH3(const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins)TH3protected; TH3(const TH3 &)=deleteTH3private; TH3D()TH3D; TH3D(const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup)TH3D; TH3D(const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins, Int_t nbinsz, const Float_t *zbins)TH3D; TH3D(const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins)TH3D; TH3D(const TH3D &h3d)TH3D; TNamed()TNamedinline; TNamed(const char *name, const char *title)TNamedinline; TNamed(const TString &name, const TString &title)TNamedinline; TNamed(const TNamed &named)TNamed; TObject()TObjectinline; TObject(const TObject &object)TObjectinline; TransformHisto(TVirtualFFT *fft, TH1 *h_output, Option_t *option)TH1static; UpdateBinContent(Int_t bin, Double_t content) overrideTH3Dinlineprotectedvirtual; UseCurrentStyle() overrideTH1virtual; Warning(const char *method, const char *msgfmt,...) constTObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)TObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) constTObjectvirtual; WriteArray(TBuffer &b, const TArray *a)TArraystatic; ~TArray()TArrayinlinevirtual; ~TArrayD()TArrayDvirtual; ~TAtt3D()TAtt3Dinlinevirtual; ~TAttFill()TAttFillvirtual; ~TAttLine()TAttLinevirtual; ~TAttMarker()TAttMarkervirtual; ~TH1() overrideTH1; ~TH3() overrideTH3; ~TH3D() overrideTH3D; ~TNamed()TNamedvirtual; ~TObject()TObjectvirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:47 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3D-members.html:30558,Guid,Guide,30558,doc/master/classTH3D-members.html,https://root.cern,https://root.cern/doc/master/classTH3D-members.html,1,['Guid'],['Guide']
Usability," *vol;; 1580 TIter next(fVolumes);; 1581 while ((vol = (TGeoVolume *)next())) {; 1582 vol->SortNodes();; 1583 }; 1584 }; 1585 if (fgVerboseLevel > 0); 1586 Info(""CloseGeometry"", ""Building cache..."");; 1587 CountLevels();; 1588 for (Int_t i = 0; i < nnavigators; i++) {; 1589 nav = (TGeoNavigator *)GetListOfNavigators()->At(i);; 1590 nav->GetCache()->BuildInfoBranch();; 1591 if (nodeid); 1592 nav->GetCache()->BuildIdArray();; 1593 }; 1594 fClosed = kTRUE;; 1595 if (fgVerboseLevel > 0) {; 1596 Info(""CloseGeometry"", ""%i nodes/ %i volume UID's in %s"", fNNodes, fUniqueVolumes->GetEntriesFast() - 1,; 1597 GetTitle());; 1598 Info(""CloseGeometry"", ""----------------modeler ready----------------"");; 1599 }; 1600}; 1601 ; 1602////////////////////////////////////////////////////////////////////////////////; 1603/// Clear the list of overlaps.; 1604 ; 1605void TGeoManager::ClearOverlaps(); 1606{; 1607 if (fOverlaps) {; 1608 fOverlaps->Delete();; 1609 delete fOverlaps;; 1610 }; 1611 fOverlaps = new TObjArray();; 1612}; 1613 ; 1614////////////////////////////////////////////////////////////////////////////////; 1615/// Remove a shape from the list of shapes.; 1616 ; 1617void TGeoManager::ClearShape(const TGeoShape *shape); 1618{; 1619 if (fShapes->FindObject(shape)); 1620 fShapes->Remove((TGeoShape *)shape);; 1621 delete shape;; 1622}; 1623 ; 1624////////////////////////////////////////////////////////////////////////////////; 1625/// Clean temporary volumes and shapes from garbage collection.; 1626 ; 1627void TGeoManager::CleanGarbage(); 1628{; 1629 if (!fGVolumes && !fGShapes); 1630 return;; 1631 Int_t i, nentries;; 1632 if (fGVolumes) {; 1633 nentries = fGVolumes->GetEntries();; 1634 TGeoVolume *vol = nullptr;; 1635 for (i = 0; i < nentries; i++) {; 1636 vol = (TGeoVolume *)fGVolumes->At(i);; 1637 if (vol); 1638 vol->SetFinder(nullptr);; 1639 }; 1640 fGVolumes->Delete();; 1641 delete fGVolumes;; 1642 fGVolumes = nullptr;; 1643 }; 1644 if (fGShapes) {; 1645 fGShapes->Delete();; 16",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8cxx_source.html:59584,Clear,ClearOverlaps,59584,doc/master/TGeoManager_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8cxx_source.html,1,['Clear'],['ClearOverlaps']
Usability," * ; addChildren = nullptr . ). pure virtual . Implemented in TGLViewer, TViewer3DPad, and TGLScenePad. ◆ PadPaint(). virtual void TVirtualViewer3D::PadPaint ; (; TVirtualPad * ; ). inlinevirtual . Reimplemented in TGLScenePad, and TGLViewer.; Definition at line 48 of file TVirtualViewer3D.h. ◆ PreferLocalFrame(). virtual Bool_t TVirtualViewer3D::PreferLocalFrame ; (; ); const. pure virtual . Implemented in TViewer3DPad, TGLScenePad, and TGLViewer. ◆ PrintObjects(). virtual void TVirtualViewer3D::PrintObjects ; (; ). inlinevirtual . Reimplemented in TGLViewer.; Definition at line 70 of file TVirtualViewer3D.h. ◆ ResetCameras(). virtual void TVirtualViewer3D::ResetCameras ; (; ). inlinevirtual . Reimplemented in TGLViewer.; Definition at line 71 of file TVirtualViewer3D.h. ◆ ResetCamerasAfterNextUpdate(). virtual void TVirtualViewer3D::ResetCamerasAfterNextUpdate ; (; ). inlinevirtual . Reimplemented in TGLViewer.; Definition at line 72 of file TVirtualViewer3D.h. ◆ SelectObject(). virtual TObject * TVirtualViewer3D::SelectObject ; (; Int_t ; , . Int_t ;  . ). inlinevirtual . Definition at line 67 of file TVirtualViewer3D.h. ◆ Streamer(). void TVirtualViewer3D::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TVirtualViewer3D::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 76 of file TVirtualViewer3D.h. ◆ Viewer3D(). TVirtualViewer3D * TVirtualViewer3D::Viewer3D ; (; TVirtualPad * ; pad = nullptr, . Option_t * ; type = """" . ). static . Create a Viewer 3D of specified type. ; Definition at line 281 of file TVirtualViewer3D.cxx. Libraries for TVirtualViewer3D:. [legend]; The documentation for this class was generated from the following files:; core/base/inc/TVirtualViewer3D.h; core/base/src/TVirtualViewer3D.cxx. TVirtualViewer3D. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:46 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualViewer3D.html:27071,Guid,Guide,27071,doc/master/classTVirtualViewer3D.html,https://root.cern,https://root.cern/doc/master/classTVirtualViewer3D.html,1,['Guid'],['Guide']
Usability," * ; dir, . XMLNodePointer_t ; topnode . ). protected . Read list of keys for directory. ; Definition at line 630 of file TXMLFile.cxx. ◆ ReadStreamerElement(). void TXMLFile::ReadStreamerElement ; (; XMLNodePointer_t ; node, . TStreamerInfo * ; info . ). protected . read and reconstruct single TStreamerElement from xml node ; Definition at line 825 of file TXMLFile.cxx. ◆ Recover(). Int_t TXMLFile::Recover ; (; ). inlinefinalvirtual . Attempt to recover file if not correctly closed. ; The function returns the number of keys that have been recovered. If no keys can be recovered, the file will be declared Zombie by the calling function. This function is automatically called when opening a file. If the file is open in read only mode, the file is not modified. If open in update mode and the function finds something to recover, a new directory header is written to the file. When opening the file gain no message from Recover will be reported. If keys have been recovered, the file is usable and you can safely read the corresponding objects. If the file is not usable (a zombie), you can test for this case with code like:; TFile f(""myfile.root"");; if (f.IsZombie()) {<actions to take if file is unusable>}; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; If the file has been recovered, the bit kRecovered is set in the TFile object in memory. You can test if the file has been recovered with if (f.TestBit(TFile::kRecovered)) {... the file has been recovered}; When writing TTrees to a file, it is important to save the Tree header at regular intervals (see TTree::AutoSave). If a file containing a Tree is recovered, the last Tree header written to the file will be used. In this case all the entries in all the branches written before writing the header are valid entries. One can disable the automatic recovery procedure by setting TFile.Recover 0; in the system.rootrc file. ; Reimplemented from TFile.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLFile.html:67051,usab,usable,67051,doc/master/classTXMLFile.html,https://root.cern,https://root.cern/doc/master/classTXMLFile.html,1,['usab'],['usable']
Usability," * ; el, . Bool_t ; isWriting . ). protected . Produce code of xml streamer for data member of stl type. ; Definition at line 943 of file TXMLPlayer.cxx. ◆ ProduceStreamerSource(). void TXMLPlayer::ProduceStreamerSource ; (; std::ostream & ; fs, . TClass * ; cl, . TList * ; cllist . ). protected . Produce source code of streamer function for specified class. ; Definition at line 429 of file TXMLPlayer.cxx. ◆ ReadSTLarg(). void TXMLPlayer::ReadSTLarg ; (; std::ostream & ; fs, . TString & ; argname, . int ; argtyp, . Bool_t ; isargptr, . TClass * ; argcl, . TString & ; tname, . TString & ; ifcond . ). protected . Produce code to read argument of stl container from xml file. ; Definition at line 832 of file TXMLPlayer.cxx. ◆ Streamer(). void TXMLPlayer::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TXMLPlayer::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 52 of file TXMLPlayer.h. ◆ WriteSTLarg(). void TXMLPlayer::WriteSTLarg ; (; std::ostream & ; fs, . const char * ; accname, . int ; argtyp, . Bool_t ; isargptr, . TClass * ; argcl . ). protected . Produce code to write argument of stl container to xml file. ; Definition at line 893 of file TXMLPlayer.cxx. Member Data Documentation. ◆ fGetterName. TString TXMLPlayer::fGetterName. protected . Definition at line 48 of file TXMLPlayer.h. ◆ fSetterName. TString TXMLPlayer::fSetterName. protected . buffer for name of getter method ; Definition at line 49 of file TXMLPlayer.h. ◆ fXmlSetup. TXMLSetup TXMLPlayer::fXmlSetup. protected . buffer for name of setter method ; Definition at line 50 of file TXMLPlayer.h. Libraries for TXMLPlayer:. [legend]; The documentation for this class was generated from the following files:; io/xml/inc/TXMLPlayer.h; io/xml/src/TXMLPlayer.cxx. TXMLPlayer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:49 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLPlayer.html:17076,Guid,Guide,17076,doc/master/classTXMLPlayer.html,https://root.cern,https://root.cern/doc/master/classTXMLPlayer.html,1,['Guid'],['Guide']
Usability," * ; frame, . PlotOpt ; o . ); const. protectedvirtual . Plotting engine function for internal use. ; Plot ourselves on given frame. If frame contains a histogram, all dimensions of the plotted function that occur in the previously plotted dataset are projected via partial integration, otherwise no projections are performed. Optionally, certain projections can be performed by summing over the values present in a provided dataset ('projData'), to correctly project out data dependents that are not properly described by the PDF (e.g. per-event errors).; The functions value can be multiplied with an optional scale factor. The interpretation of the scale factor is unique for generic real functions, for PDFs there are various interpretations possible, which can be selection with 'stype' (see RooAbsPdf::plotOn() for details).; The default projection behaviour can be overridden by supplying an optional set of dependents to project. For most cases, plotSliceOn() and plotProjOn() provide a more intuitive interface to modify the default projection behaviour. ; Reimplemented in RooAbsPdf, and RooSimultaneous.; Definition at line 1931 of file RooAbsReal.cxx. ◆ plotOn() [3/3]. RooPlot * RooAbsReal::plotOn ; (; RooPlot * ; frame, . RooLinkedList & ; cmdList . ); const. virtual . Internal back-end function of plotOn() with named arguments. ; Reimplemented in RooAbsPdf, RooSimultaneous, and RooSimultaneous.; Definition at line 1659 of file RooAbsReal.cxx. ◆ plotOnCompSelect(). void RooAbsReal::plotOnCompSelect ; (; RooArgSet * ; selNodes); const. protected . Helper function for plotting of composite p.d.fs. ; Given a set of selected components that should be plotted, find all nodes that (in)directly depend on these selected nodes. Mark all directly and indirectly selected nodes as 'selected' using the selectComp() method ; Definition at line 1466 of file RooAbsReal.cxx. ◆ plotOnWithErrorBand(). RooPlot * RooAbsReal::plotOnWithErrorBand ; (; RooPlot * ; frame, . const RooFitResult & ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:137515,intuit,intuitive,137515,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['intuit'],['intuitive']
Usability, * ; name). virtual . rename this file ; Definition at line 162 of file TSystemFile.cxx. ◆ SetDrawOption(). void TSystemFile::SetDrawOption ; (; Option_t * ; option). inlineoverridevirtual . Set drawing option for object. ; This option only affects the drawing style and is stored in the option field of the TObjOptLink supporting a TPad's primitive list (TList). Note that it does not make sense to call object.SetDrawOption(option) before having called object.Draw(). ; Reimplemented from TObject.; Definition at line 55 of file TSystemFile.h. ◆ SetIconName(). virtual void TSystemFile::SetIconName ; (; const char * ; name). inlinevirtual . Definition at line 44 of file TSystemFile.h. ◆ SetName(). void TSystemFile::SetName ; (; const char * ; name). inlineoverridevirtual . Set the name of the TNamed. ; WARNING: if the object is a member of a THashTable or THashList container the container must be Rehash()'ed after SetName(). For example the list of objects in the current directory is a THashList. ; Reimplemented from TNamed.; Definition at line 56 of file TSystemFile.h. ◆ SetTitle(). void TSystemFile::SetTitle ; (; const char * ; title). inlineoverridevirtual . Set the title of the TNamed. ; Reimplemented from TNamed.; Definition at line 57 of file TSystemFile.h. ◆ Streamer(). void TSystemFile::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed. ◆ StreamerNVirtual(). void TSystemFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 61 of file TSystemFile.h. Member Data Documentation. ◆ fIconName. TString TSystemFile::fIconName. private . Definition at line 31 of file TSystemFile.h. Libraries for TSystemFile:. [legend]; The documentation for this class was generated from the following files:; core/base/inc/TSystemFile.h; core/base/src/TSystemFile.cxx. TSystemFile. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:36 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystemFile.html:18334,Guid,Guide,18334,doc/master/classTSystemFile.html,https://root.cern,https://root.cern/doc/master/classTSystemFile.html,1,['Guid'],['Guide']
Usability," * ; obj); const. overridevirtual . Return the object before obj. Returns 0 if obj is first object. ; Implements TSeqCollection.; Definition at line 415 of file TRefArray.cxx. ◆ BinarySearch(). Int_t TRefArray::BinarySearch ; (; TObject * ; obj, . Int_t ; upto = kMaxInt . ). virtual . Find object using a binary search. ; Array must first have been sorted. Search can be limited by setting upto to desired index. ; Definition at line 813 of file TRefArray.cxx. ◆ BoundsOk(). Bool_t TRefArray::BoundsOk ; (; const char * ; where, . Int_t ; at . ); const. inlineprotected . Definition at line 157 of file TRefArray.h. ◆ Class(). static TClass * TRefArray::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRefArray::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRefArray::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 98 of file TRefArray.h. ◆ Clear(). void TRefArray::Clear ; (; Option_t * ; option = """"). overridevirtual . Remove all objects from the array. ; Implements TCollection.; Definition at line 428 of file TRefArray.cxx. ◆ Compress(). void TRefArray::Compress ; (; ). virtual . Remove empty slots from array. ; Definition at line 440 of file TRefArray.cxx. ◆ DeclFileName(). static const char * TRefArray::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 98 of file TRefArray.h. ◆ Delete(). void TRefArray::Delete ; (; Option_t * ; option = """"). overridevirtual . Remove all objects from the array and free the internal memory. ; Implements TCollection.; Definition at line 459 of file TRefArray.cxx. ◆ Expand(). void TRefArray::Expand ; (; Int_t ; newSize). virtual . Expand or shrink the array to newSize elements. ; Definition at line 475 of file TRefArray.cxx. ◆ First(). TObject * TRefArray::First ; (; ); const. overridevirtual . Return the object in the first slo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRefArray.html:28446,Clear,Clear,28446,doc/master/classTRefArray.html,https://root.cern,https://root.cern/doc/master/classTRefArray.html,1,['Clear'],['Clear']
Usability," * ; points, . const Double_t * ; dirs, . Double_t * ; dists, . Int_t ; vecsize, . Double_t * ; step . ); const. overridevirtual . Reimplemented from TGeoArb8. ◆ GetMakeRuntimeShape(). TGeoShape * TGeoGtra::GetMakeRuntimeShape ; (; TGeoShape * ; mother, . TGeoMatrix * ; mat . ); const. overridevirtual . Reimplemented from TGeoArb8. ◆ GetTwistAngle(). Double_t TGeoGtra::GetTwistAngle ; (; ); const. inline . Definition at line 171 of file TGeoArb8.h. ◆ IsA(). TClass * TGeoGtra::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TGeoArb8.; Definition at line 177 of file TGeoArb8.h. ◆ Safety(). Double_t TGeoGtra::Safety ; (; const Double_t * ; point, . Bool_t ; in = kTRUE . ); const. overridevirtual . Reimplemented from TGeoArb8. ◆ Safety_v(). void TGeoGtra::Safety_v ; (; const Double_t * ; points, . const Bool_t * ; inside, . Double_t * ; safe, . Int_t ; vecsize . ); const. overridevirtual . Reimplemented from TGeoArb8. ◆ SavePrimitive(). void TGeoGtra::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save a primitive as a C++ statement(s) on output stream ""out"". ; Reimplemented from TGeoArb8. ◆ SetDimensions(). void TGeoGtra::SetDimensions ; (; Double_t * ; param). overridevirtual . Reimplemented from TGeoArb8. ◆ Streamer(). void TGeoGtra::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGeoArb8. ◆ StreamerNVirtual(). void TGeoGtra::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 177 of file TGeoArb8.h. Member Data Documentation. ◆ fTwistAngle. Double_t TGeoGtra::fTwistAngle. protected . Definition at line 152 of file TGeoArb8.h. Libraries for TGeoGtra:. [legend]; The documentation for this class was generated from the following file:; geom/geom/inc/TGeoArb8.h. TGeoGtra. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:03 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoGtra.html:31218,Guid,Guide,31218,doc/master/classTGeoGtra.html,https://root.cern,https://root.cern/doc/master/classTGeoGtra.html,1,['Guid'],['Guide']
Usability," * ; rangeName = nullptr . ); const. overridevirtual . Interface function getAnalyticalIntergral advertises the analytical integrals that are supported. ; 'integSet' is the set of dependents for which integration is requested. The function should copy the subset of dependents it can analytically integrate to anaIntSet and return a unique identification code for this integration configuration. If no integration can be performed, zero should be returned. ; Reimplemented from RooAbsReal.; Definition at line 194 of file RooMultiVarGaussian.cxx. ◆ getGenerator(). Int_t RooMultiVarGaussian::getGenerator ; (; const RooArgSet & ; directVars, . RooArgSet & ; generateVars, . bool ; staticInitOK = true . ); const. overridevirtual . Special case: generate all observables. ; Reimplemented from RooAbsPdf.; Definition at line 374 of file RooMultiVarGaussian.cxx. ◆ initGenerator(). void RooMultiVarGaussian::initGenerator ; (; Int_t ; code). overridevirtual . Clear the GenData cache as its content is not invariant under changes in the mu vector. ; Reimplemented from RooAbsPdf.; Definition at line 422 of file RooMultiVarGaussian.cxx. ◆ IsA(). TClass * RooMultiVarGaussian::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 112 of file RooMultiVarGaussian.h. ◆ muVec(). const RooArgList & RooMultiVarGaussian::muVec ; (; ); const. inline . Definition at line 53 of file RooMultiVarGaussian.h. ◆ setAnaIntZ(). void RooMultiVarGaussian::setAnaIntZ ; (; double ; z). inline . Definition at line 39 of file RooMultiVarGaussian.h. ◆ Streamer(). void RooMultiVarGaussian::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsPdf. ◆ StreamerNVirtual(). void RooMultiVarGaussian::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 112 of file RooMultiVarGaussian.h. ◆ syncMuVec(). void RooMultiVarGaussian::syncMuVec ; (; )",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMultiVarGaussian.html:80168,Clear,Clear,80168,doc/master/classRooMultiVarGaussian.html,https://root.cern,https://root.cern/doc/master/classRooMultiVarGaussian.html,1,['Clear'],['Clear']
Usability," * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; clname - class name.; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments:; if either clname or obj is NULL that means that redo/undo is function; to specify default arguments for redo/undo method/function '=' must precede to argument value. Example: TQCommand(""TPad"", gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case undo parameter can be omitted.; Example: TQCommand(""TPad"", gPad, ""SetFillStyle(Style_t)"");. Definition at line 168 of file TQCommand.cxx. ◆ TQCommand() [2/3]. TQCommand::TQCommand ; (; TObject * ; obj, . const char * ; redo = nullptr, . const char * ; undo = nullptr . ). Constructor. ; Input parameters:; obj - an object; redo - method or function to do/redo operation; undo - method or function to undo operation. Comments: to specify default arguments for redo/undo method/function '=' must precede to argument value.; Example: TQCommand(gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");; undo method can be same as redo one. In that case ""undo"" can parameter be omitted.; Example: TQCommand(gPad, ""SetFillStyle(Style_t)"");. Definition at line 199 of file TQCommand.cxx. ◆ TQCommand() [3/3]. TQCommand::TQCommand ; (; const TQCommand & ; com). Copy constructor. ; Definition at line 209 of file TQCommand.cxx. ◆ ~TQCommand(). TQCommand::~TQCommand ; (; ). virtual . dtor. ; Definition at line 249 of file TQCommand.cxx. Member Function Documentation. ◆ Add() [1/2]. void TQCommand::Add ; (; TObject * ; obj). inlineoverridevirtual . Reimplemented from TList.; Reimplemented in TQUndoManager.; Definition at line 91 of file TQCommand.h. ◆ Add() [2/2]. void TQCommand::Add ; (; TObject * ; obj, . Option_t * ; opt . ). overridevirtual . Add command to the list of merged commands. ; Option string can contain substrings:; ""compress"" - try to compress input comman",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQCommand.html:32919,undo,undo,32919,doc/master/classTQCommand.html,https://root.cern,https://root.cern/doc/master/classTQCommand.html,1,['undo'],['undo']
Usability," * ; win, . const std::string & ; kind . ). protected . Add widget catched from external scripts. ; Definition at line 587 of file RBrowser.cxx. ◆ AddInitWidget(). void RBrowser::AddInitWidget ; (; const std::string & ; kind). protected . Create new widget and send init message to the client. ; Definition at line 606 of file RBrowser.cxx. ◆ AddRCanvas(). void ROOT::RBrowser::AddRCanvas ; (; ). inline . Definition at line 86 of file RBrowser.hxx. ◆ AddTCanvas(). void ROOT::RBrowser::AddTCanvas ; (; ). inline . Definition at line 85 of file RBrowser.hxx. ◆ AddWidget(). std::shared_ptr< RBrowserWidget > RBrowser::AddWidget ; (; const std::string & ; kind). protected . Creates new widget. ; Definition at line 555 of file RBrowser.cxx. ◆ CheckWidgtesModified(). void RBrowser::CheckWidgtesModified ; (; unsigned ; connid). protected . Check if any widget was modified and update if necessary. ; Definition at line 766 of file RBrowser.cxx. ◆ ClearOnClose(). void RBrowser::ClearOnClose ; (; const std::shared_ptr< void > & ; handle). Set handle which will be cleared when connection is closed. ; Definition at line 1001 of file RBrowser.cxx. ◆ CloseTab(). void RBrowser::CloseTab ; (; const std::string & ; name). protected . Close and delete specified widget. ; Definition at line 632 of file RBrowser.cxx. ◆ FindWidget(). std::shared_ptr< RBrowserWidget > RBrowser::FindWidget ; (; const std::string & ; name, . const std::string & ; kind = """" . ); const. protected . Find widget by name or kind. ; Definition at line 616 of file RBrowser.cxx. ◆ GetActiveWidget(). std::shared_ptr< RBrowserWidget > ROOT::RBrowser::GetActiveWidget ; (; ); const. inlineprotected . Definition at line 54 of file RBrowser.hxx. ◆ GetCatchWindowShow(). bool ROOT::RBrowser::GetCatchWindowShow ; (; ); const. inline . Is RWebWindow::Show calls catched for embeding of created widgets. ; Definition at line 102 of file RBrowser.hxx. ◆ GetCurrentWorkingDirectory(). std::string RBrowser::GetCurrentWorkingDirectory ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowser.html:6406,Clear,ClearOnClose,6406,doc/master/classROOT_1_1RBrowser.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowser.html,1,['Clear'],['ClearOnClose']
Usability," * At (UInt_t idx) override;  Return the address of the value at index idx ;  ; TVirtualCollectionProxy * Generate () const override;  Returns a clean object of the actual class that derives from TVirtualCollectionProxy. ;  ; void ReadBuffer (TBuffer &buff, void *pObj) override;  ; void ReadBuffer (TBuffer &buff, void *pObj, const TClass *onfile) override;  ; UInt_t Size () const override;  Return the current number of elements in the container. ;  ; void Streamer (TBuffer &buff, void *pObj, int siz) override;  Streamer I/O overload. ;  ; void Streamer (TBuffer &refBuffer) override;  Streamer Function. ;  ;  Public Member Functions inherited from TEmulatedCollectionProxy;  TEmulatedCollectionProxy (const char *cl_name, Bool_t silent);  ;  TEmulatedCollectionProxy (const TEmulatedCollectionProxy &copy);  ;  ~TEmulatedCollectionProxy () override;  ; void * Allocate (UInt_t n, Bool_t forceDelete) override;  Allocates space for storing at least n elements. ;  ; void Clear (const char *opt="""") override;  Clear the container. ;  ; void Commit (void *env) override;  Commits pending elements in a staging area (see Allocate() for more information). ;  ; void DeleteArray (void *p, Bool_t dtorOnly=kFALSE) const override;  Execute the container array destructor. ;  ; void Destructor (void *p, Bool_t dtorOnly=kFALSE) const override;  Execute the container destructor. ;  ; void Insert (const void *data, void *container, size_t size) override;  Insert data into the container where data is a C-style array of the actual type contained in the collection of the given size. ;  ; Bool_t IsValid () const;  ; void * New () const override;  Construct a new container object and return its address. ;  ; void * New (void *memory) const override;  Construct a new container object at the address given by arena ;  ; void * NewArray (Int_t nElements) const override;  Construct an array of nElements container objects and return the base address of the array. ;  ; void * NewArray (Int_t nElements, v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEmulatedMapProxy.html:1638,Clear,Clear,1638,doc/master/classTEmulatedMapProxy.html,https://root.cern,https://root.cern/doc/master/classTEmulatedMapProxy.html,2,['Clear'],['Clear']
Usability," * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGLViewer;  TGLViewer (TVirtualPad *pad);  ;  TGLViewer (TVirtualPad *pad, Int_t x, Int_t y, Int_t width, Int_t height);  ;  ~TGLViewer () override;  Destroy viewer object. ;  ; virtual void Activated ();  ; void AddCompositeOp (UInt_t) override;  ; Int_t AddObject (const TBuffer3D &, Bool_t *=nullptr) override;  ; Int_t AddObject (UInt_t, const TBuffer3D &, Bool_t *=nullptr) override;  ; void ApplySelection ();  Process result from last selection (in fSelRec) and extract a new current selection from it. ;  ; void AutoFade (Float_t fade, Float_t time=1, Int_t steps=10);  Animate fading from current value to fade over given time (sec) and number of steps. ;  ; void BeginScene () override;  ; Bool_t BuildingScene () const override;  ; Bool_t CanLoopOnPrimitives () const override;  ; void ClearCurrentOvlElm ();  Reset current overlay-element to zero, eventually notifying the old one that the mouse has left. ;  ; virtual void Clicked (TObject *obj);  Emit Clicked signal. ;  ; virtual void Clicked (TObject *obj, UInt_t button, UInt_t state);  Emit Clicked signal with button id and modifier state. ;  ; void CloseComposite () override;  ; TGLColorSet & ColorSet ();  ; TGLCamera & CurrentCamera () const;  ; Int_t DistancetoPrimitive (Int_t px, Int_t py) override;  Calculate and return pixel distance to nearest viewer object from window location px, py This is provided for use when embedding GL viewer into pad. ;  ; void DoDraw (Bool_t swap_buffers=kTRUE);  Draw out the viewer. ;  ; void DoDrawMono (Bool_t swap_buffers);  Draw out in monoscopic mode. ;  ; void DoDrawStereo (Bool_t swap_buffers);  Draw out in stereoscopic mode. ;  ; Bool_t DoOverlaySelect (Int_t x, Int_t y);  Perform GL selection, picking overlay objects only. ;  ; Bool_t DoSecondarySelect (Int_t x, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLEmbeddedViewer.html:2333,Clear,ClearCurrentOvlElm,2333,doc/master/classTGLEmbeddedViewer.html,https://root.cern,https://root.cern/doc/master/classTGLEmbeddedViewer.html,1,['Clear'],['ClearCurrentOvlElm']
Usability," * Key () const;  ; void SetValue (TObject *val);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; TObject * Value () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *err",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPair.html:2062,Clear,Clear,2062,doc/master/classTPair.html,https://root.cern,https://root.cern/doc/master/classTPair.html,1,['Clear'],['Clear']
Usability," + ""/"" + treename as RSampleInfo::fID; Values are pointers to the corresponding sample. ; Definition at line 135 of file RLoopManager.hxx. ◆ fSamples. std::vector<ROOT::RDF::Experimental::RSample> ROOT::Detail::RDF::RLoopManager::fSamples. private . Samples need to survive throughout the whole event loop, hence stored as an attribute. ; Definition at line 137 of file RLoopManager.hxx. ◆ fSuppressErrorsForMissingBranches. std::vector<std::string> ROOT::Detail::RDF::RLoopManager::fSuppressErrorsForMissingBranches {}. private . Definition at line 188 of file RLoopManager.hxx. ◆ fTree. std::shared_ptr<TTree> ROOT::Detail::RDF::RLoopManager::fTree {nullptr}. private . Shared pointer to the input TTree. ; It does not delete the pointee if the TTree/TChain was passed directly as an argument to RDataFrame's ctor (in which case we let users retain ownership). ; Definition at line 130 of file RLoopManager.hxx. ◆ fUniqueDefinesWithReaders. std::set<std::pair<std::string_view, std::unique_ptr<ROOT::Internal::RDF::RDefinesWithReaders> > > ROOT::Detail::RDF::RLoopManager::fUniqueDefinesWithReaders. private . Definition at line 191 of file RLoopManager.hxx. ◆ fUniqueVariationsWithReaders. std::set<std::pair<std::string_view, std::unique_ptr<ROOT::Internal::RDF::RVariationsWithReaders> > > ROOT::Detail::RDF::RLoopManager::fUniqueVariationsWithReaders. private . Definition at line 193 of file RLoopManager.hxx. ◆ fValidBranchNames. ColumnNames_t ROOT::Detail::RDF::RLoopManager::fValidBranchNames. private . Cache of the tree/chain branch names. Never access directy, always use GetBranchNames(). ; Definition at line 165 of file RLoopManager.hxx. Libraries for ROOT::Detail::RDF::RLoopManager:. [legend]; The documentation for this class was generated from the following files:; tree/dataframe/inc/ROOT/RDF/RLoopManager.hxx; tree/dataframe/src/RLoopManager.cxx. ROOTDetailRDFRLoopManager. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:02 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RLoopManager.html:33987,Guid,Guide,33987,doc/master/classROOT_1_1Detail_1_1RDF_1_1RLoopManager.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RLoopManager.html,1,['Guid'],['Guide']
Usability," + ""\"" "";; 264 if (fAttributes.Length()) out += ""attributes=\"""" + fAttributes + ""\"" "";; 265 if (xmlform) {; 266 out += ""> "";; 267 }; 268 if (xmlform) {; 269 if (fCode.Length()) {; 270 out += ""\n<![CDATA[ { "" + fCode + "" ]]>\n "";; 271 } else if (fReadFuncPtr) {; 272 // Can we guess?; 273 // out += ""code=\"" + nameof(fReadFuncPtr) + ""\"" "";; 274 } else if (fReadRawFuncPtr) {; 275 // Can we guess?; 276 // out += ""code=\"" + nameof(fReadRawFuncPtr) + ""\"" "";; 277 }; 278 } else {; 279 if (fCode.Length()) {; 280 out += ""code=\""{"" + fCode + ""}\"" "";; 281 } else if (fReadFuncPtr) {; 282 // Can we guess?; 283 // out += ""code=\"" + nameof(fReadFuncPtr) + ""\"" "";; 284 } else if (fReadRawFuncPtr) {; 285 // Can we guess?; 286 // out += ""code=\"" + nameof(fReadRawFuncPtr) + ""\"" "";; 287 }; 288 }; 289 if (xmlform) {; 290 out += end;; 291 }; 292}; 293 ; 294////////////////////////////////////////////////////////////////////////////////; 295/// Zero out this rule object.; 296 ; 297void TSchemaRule::Clear( const char * /* option */); 298{; 299 fVersion.Clear();; 300 fChecksum.Clear();; 301 fSourceClass.Clear();; 302 fTarget.Clear();; 303 fSource.Clear();; 304 fInclude.Clear();; 305 fCode.Clear();; 306 fAttributes.Clear();; 307 fReadRawFuncPtr = nullptr;; 308 fReadFuncPtr = nullptr;; 309 fRuleType = kNone;; 310 delete fVersionVect; fVersionVect = nullptr;; 311 delete fChecksumVect; fChecksumVect = nullptr;; 312 delete fTargetVect; fTargetVect = nullptr;; 313 delete fSourceVect; fSourceVect = nullptr;; 314 delete fIncludeVect; fIncludeVect = nullptr;; 315}; 316 ; 317////////////////////////////////////////////////////////////////////////////////; 318/// Set the content fot this object from the rule; 319/// See TClass::AddRule for details on the syntax.; 320 ; 321Bool_t TSchemaRule::SetFromRule( const char *rule ); 322{; 323 //-----------------------------------------------------------------------; 324 // Parse the rule and check it's validity; 325 ////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSchemaRule_8cxx_source.html:9387,Clear,Clear,9387,doc/master/TSchemaRule_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSchemaRule_8cxx_source.html,1,['Clear'],['Clear']
Usability," ++itEvent ){; 1423 // if( std::distance( itTarget, testingEventVector->end()) < Int_t(cls+1) ) {; 1424 if( ( testingEventVector->end() - itTarget ) < Int_t(cls+1) ) {; 1425 itTarget = testingEventVector->end();; 1426 testingEventVector->insert( itTarget, itEvent, itEventEnd ); // fill in the rest without mixing; 1427 break;; 1428 }else{; 1429 itTarget += cls+1;; 1430 testingEventVector->insert( itTarget, (*itEvent) ); // fill event; 1431 }; 1432 }; 1433 }; 1434 }else{; 1435 for( UInt_t cls = 0; cls < dsi.GetNClasses(); ++cls ){; 1436 trainingEventVector->insert( trainingEventVector->end(), tmpEventVector[Types::kTraining].at(cls).begin(), tmpEventVector[Types::kTraining].at(cls).end() );; 1437 testingEventVector->insert ( testingEventVector->end(), tmpEventVector[Types::kTesting].at(cls).begin(), tmpEventVector[Types::kTesting].at(cls).end() );; 1438 }; 1439 }; 1440 // delete the tmpEventVector (but not the events therein); 1441 tmpEventVector[Types::kTraining].clear();; 1442 tmpEventVector[Types::kTesting].clear();; 1443 ; 1444 tmpEventVector[Types::kMaxTreeType].clear();; 1445 ; 1446 if (mixMode == ""RANDOM"") {; 1447 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""shuffling events""<<Endl;; 1448 ; 1449 std::shuffle(trainingEventVector->begin(), trainingEventVector->end(), rndm);; 1450 std::shuffle(testingEventVector->begin(), testingEventVector->end(), rndm);; 1451 }; 1452 ; 1453 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""trainingEventVector "" << trainingEventVector->size() << Endl;; 1454 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""testingEventVector "" << testingEventVector->size() << Endl;; 1455 ; 1456 // create dataset; 1457 DataSet* ds = new DataSet(dsi);; 1458 ; 1459 // Log() << kINFO << Form(""Dataset[%s] : "",dsi.GetName()) << ""Create internal training tree"" << Endl;; 1460 ds->SetEventCollection(trainingEventVector, Types::kTraining );; 1461 // Log() << kINFO << Form(""Dataset[%s] : "",dsi.GetName()) << ""Create internal te",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:65571,clear,clear,65571,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['clear'],['clear']
Usability," , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFileMerger (Bool_t isLocal=kTRUE, Bool_t histoOneGo=kTRUE);  Create file merger object. ;  ;  ~TFileMerger () override;  Cleanup. ;  ; virtual Bool_t AddAdoptFile (TFile *source, Bool_t cpProgress=kTRUE);  Add the TFile to this file merger and give ownership of the TFile to this object (unless kFALSE is returned). ;  ; virtual Bool_t AddFile (const char *url, Bool_t cpProgress=kTRUE);  Add file to file merger. ;  ; virtual Bool_t AddFile (TFile *source, Bool_t cpProgress=kTRUE);  Add the TFile to this file merger and do not give ownership of the TFile to this object. ;  ; void AddObjectNames (const char *name);  ; void ClearObjectNames ();  ; virtual const char * GetCWD ();  ; Int_t GetMaxOpenedFiles () const;  ; TList * GetMergeList ();  ; const char * GetMergeOptions ();  ; const char * GetMsgPrefix () const;  ; Bool_t GetNotrees () const;  ; const char * GetObjectNames () const;  ; TFile * GetOutputFile () const;  ; const char * GetOutputFileName () const;  ; Int_t GetPrintLevel () const;  ; Bool_t HasCompressionChange () const;  ; TClass * IsA () const override;  ; virtual Bool_t Merge (Bool_t=kTRUE);  Merge the files. ;  ; virtual Bool_t OutputFile (const char *url, Bool_t force);  Open merger output file. ;  ; virtual Bool_t OutputFile (const char *url, Bool_t force, Int_t compressionLevel);  Open merger output file. ;  ; virtual Bool_t OutputFile (const char *url, const char *mode, Int_t compressionLevel);  Open merger output file. ;  ; virtual Bool_t OutputFile (const char *url, const char *mode=""RECREATE"");  Open merger output file. ;  ; virtual Bool_t OutputFile (std::unique_ptr< TFile > file);  Set an output file opened externally by the users. ;  ; virtual Bool_t PartialMerge (Int_t type=kAll|kIncremental);  Merge the files. ;  ; virtual void PrintFiles (Option_t *options);  Print list of files being merged. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileMerger.html:2530,Clear,ClearObjectNames,2530,doc/master/classTFileMerger.html,https://root.cern,https://root.cern/doc/master/classTFileMerger.html,1,['Clear'],['ClearObjectNames']
Usability," , kCINT_Edit; , kCINT_Load; , ;   kCINT_Exec; , kCINT_EXec; , kCINT_pragma; , kCINT_includeSYS; , ;   kCINT_includePWD; , kCINT_cpp; , kROOT_Load; , kSYS_FileName; , ;   kCXX_NewProto; , kCXX_ConstructorProto; , kCXX_ScopeProto; , kCXX_DirectProto; , ;   kCXX_IndirectProto; , kCXX_ScopeMember; , kCXX_DirectMember; , kCXX_IndirectMember; , ;   kCXX_Global; , kCXX_GlobalProto; , kNUM_PAT. };  ; typedef TList TContainer;  ; typedef TListIter TContIter;  . Public Member Functions;  TTabCom ();  Default constructor. ;  ; virtual ~TTabCom ();  ; void ClearAll ();  clears all lists except for user names and system include files. ;  ; void ClearClasses ();  Clear classes and namespace collections. ;  ; void ClearCppDirectives ();  Forget all Cpp directives seen so far. ;  ; void ClearEnvVars ();  Forget all environment variables seen so far. ;  ; void ClearFiles ();  Close all files. ;  ; void ClearGlobalFunctions ();  Forget all global functions seen so far. ;  ; void ClearGlobals ();  Forget all global variables seen so far. ;  ; void ClearPragmas ();  Forget all pragmas seen so far. ;  ; void ClearSysIncFiles ();  Close system files. ;  ; void ClearUsers ();  Forget all user seen so far. ;  ; const TSeqCollection * GetListOfClasses ();  Return the list of classes. ;  ; const TSeqCollection * GetListOfCppDirectives ();  Return the list of CPP directives. ;  ; const TSeqCollection * GetListOfEnvVars ();  Uses ""env"" (Unix) or ""set"" (Windows) to get list of environment variables. ;  ; const TSeqCollection * GetListOfFilesInPath (const char path[]);  ""path"" should be initialized with a colon separated list of system directories ;  ; TCollection * GetListOfGlobalFunctions ();  Return the list of global functions. ;  ; const TSeqCollection * GetListOfGlobals ();  Return the list of globals. ;  ; const TSeqCollection * GetListOfPragmas ();  Return the list of pragmas. ;  ; const TSeqCollection * GetListOfSysIncFiles ();  Return the list of system include files. ;  ; const TSeqCo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTabCom.html:1499,Clear,ClearGlobals,1499,doc/master/classTTabCom.html,https://root.cern,https://root.cern/doc/master/classTTabCom.html,1,['Clear'],['ClearGlobals']
Usability," , kIsCompiled = kIsCCompiled; , kIsNotReacheable = 0x00080000; , kIsConstant = 0x00100000; , ;   kIsVirtualBase = 0x00200000; , kIsConstPointer = 0x00400000; , kIsScopedEnum = 0x00800000; , kIsConstexpr = 0x02000000; , ;   kIsExplicit = 0x04000000; , kIsNamespace = 0x08000000; , kIsConstMethod = 0x10000000; , kIsUsing = 0x20000000; , ;   kIsDefinedInStd = 0x40000000. };  ; enum  ERefTypeValues { ;   kParaNormal = 0; , kParaReference = 1; , kParaP2P = 2; , kParaP2P2P = 3; , ;   kParaRef = 100; , kParaRefP2P = 102; , kParaRefP2P2P = 103. };  . Enumeration Type Documentation. ◆ EClassProperty. enum EClassProperty. EnumeratorkClassIsValid ; kClassHasExplicitCtor ; kClassHasImplicitCtor ; kClassHasCtor ; kClassHasDefaultCtor ; kClassHasAssignOpr ; kClassHasExplicitDtor ; kClassHasImplicitDtor ; kClassHasDtor ; kClassHasVirtual ; kClassIsAbstract ; kClassIsAggregate . Definition at line 135 of file TDictionary.h. ◆ EFunctionProperty. enum EFunctionProperty. EnumeratorkIsConstructor ; kIsConversion ; kIsDestructor ; kIsOperator ; kIsInlined ; kIsTemplateSpec . Definition at line 102 of file TDictionary.h. ◆ EProperty. enum EProperty. EnumeratorkIsClass ; kIsStruct ; kIsUnion ; kIsEnum ; kIsTypedef ; kIsFundamental ; kIsAbstract ; kIsVirtual ; kIsPureVirtual ; kIsUnionMember ; kIsPublic ; kIsProtected ; kIsPrivate ; kIsPointer ; kIsArray ; kIsStatic ; kIsDefault ; kIsReference ; kIsDirectInherit ; kIsCCompiled ; kIsCPPCompiled ; kIsCompiled ; kIsNotReacheable ; kIsConstant ; kIsVirtualBase ; kIsConstPointer ; kIsScopedEnum ; kIsConstexpr ; kIsExplicit ; kIsNamespace ; kIsConstMethod ; kIsUsing ; kIsDefinedInStd . Definition at line 64 of file TDictionary.h. ◆ ERefTypeValues. enum ERefTypeValues. EnumeratorkParaNormal ; kParaReference ; kParaP2P ; kParaP2P2P ; kParaRef ; kParaRefP2P ; kParaRefP2P2P . Definition at line 150 of file TDictionary.h. coremetaincTDictionary.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:14 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDictionary_8h.html:4206,Guid,Guide,4206,doc/master/TDictionary_8h.html,https://root.cern,https://root.cern/doc/master/TDictionary_8h.html,1,['Guid'],['Guide']
Usability," , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . #include <RooStats/SimpleInterval.h>. Inheritance diagram for RooStats::SimpleInterval:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ SimpleInterval() [1/3]. SimpleInterval::SimpleInterval ; (; const char * ; name = nullptr). explicit . default constructor ; Default constructor. ; Definition at line 42 of file SimpleInterval.cxx. ◆ SimpleInterval() [2/3]. SimpleInterval::SimpleInterval ; (; const SimpleInterval & ; other, . const char * ; name . ). default constructor ; fParameters.add( other.fParameters ); ; Definition at line 51 of file SimpleInterval.cxx. ◆ SimpleInterval() [3/3]. SimpleInterval::SimpleInterval ; (; const char * ; name, . const RooRealVar & ; var, . double ; lower, . double ; upper, . double ; cl . ). constructor from name, the Parameter of interest and lower/upper bound values ; Alternate constructor. ; Definition at line 85 of file SimpleInterval.cxx. Member Function Documentation. ◆ CheckParameters(). bool SimpleInterval::CheckParameters ; (; const RooArgSet & ; parameterPoint); const. overridevirtual . check if parameters are correct (i.e. they are the POI of this interval) ; Implements RooStats::ConfInterval.; Definition at line 122 of file SimpleInterval.cxx. ◆ Class(). static TClass * RooStats::SimpleInterval::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SimpleInterval.html:13477,Simpl,SimpleInterval,13477,doc/master/classRooStats_1_1SimpleInterval.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SimpleInterval.html,1,['Simpl'],['SimpleInterval']
Usability," , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TApplication (const char *appClassName, Int_t *argc, char **argv, void *options=nullptr, Int_t numOptions=0);  Create an application environment. ;  ; virtual ~TApplication ();  TApplication dtor. ;  ; virtual const char * ApplicationName () const;  ; Int_t Argc () const;  ; char ** Argv () const;  ; char * Argv (Int_t index) const;  Return specified argument. ;  ; void ClearInputFiles ();  Clear list containing macro files passed as program arguments. ;  ; EExitOnException ExitOnException (EExitOnException opt=kExit);  Set the exit on exception option. ;  ; virtual TApplicationImp * GetApplicationImp ();  ; TApplication * GetAppRemote () const;  ; const char * GetIdleCommand () const;  ; virtual void GetOptions (Int_t *argc, char **argv);  Get and handle command line options. ;  ; TString GetSetup ();  It gets the ROOT installation setup as TString. ;  ; TSignalHandler * GetSignalHandler () const;  ; virtual void HandleException (Int_t sig);  Handle exceptions (kSigBus, kSigSegmentationViolation, kSigIllegalInstruction and kSigFloatingException) trapped in TSystem. ;  ; virtual void HandleIdleTimer ();  Handle idle timeout. ;  ; virtual Bool_t HandleTermInput ();  ; virtual void Hide ();  ; virtual void Iconify ();  ; virtual void Init ();  ; void InitializeGraphics (Bool_t only_web=kFALSE);  Initialize the graphics environment. ;  ; TObjArray * InputFiles () const;  ; TClass * IsA () ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplication.html:2106,Clear,ClearInputFiles,2106,doc/master/classTApplication.html,https://root.cern,https://root.cern/doc/master/classTApplication.html,2,['Clear'],"['Clear', 'ClearInputFiles']"
Usability," - ignore return cannot do more; viewer-&gt;AddObject(buffer);; }; }; TBuffer3DSphereSphere description class - see TBuffer3DTypes for producer classes Supports hollow and cut spheres.Definition TBuffer3D.h:130; TBuffer3D::kNone@ kNoneDefinition TBuffer3D.h:49; TBuffer3D::kRaw@ kRawDefinition TBuffer3D.h:54; TBuffer3D::kRawSizes@ kRawSizesDefinition TBuffer3D.h:53; int; ShapeSpecific: If the viewer can directly display the buffer without filling of the kRaw/kRawSizes section it will not need to request client side tessellation.; Currently we provide the following various shape specific classes, which the OpenGL viewer can take advantage of (see TBuffer3D.h and TBuffer3DTypes.h). TBuffer3DSphere - solid, hollow and cut spheres*; TBuffer3DTubeSeg - angle tube segment; TBuffer3DCutTube - angle tube segment with plane cut ends. OpenGL only supports solid spheres at present - cut/hollow ones will be requested tessellated.; Anyone is free to add new TBuffer3D classes, but it should be clear that the viewers require updating to be able to take advantage of them. The number of native shapes in OpenGL will be expanded over time.; BoundingBox: You are not obliged to complete this, as any viewer requiring one internally (OpenGL) will build one for you if you do not provide. However to do this the viewer will force you to provide the raw tessellation, and the resulting box will be axis aligned with the overall scene, which is non-ideal for rotated shapes.; As we need to support orientated (rotated) bounding boxes, TBuffer3D requires the 6 vertices of the box. We also provide a convenience function, SetAABoundingBox(), for simpler case of setting an axis aligned bounding box. Master/Local Reference Frames; The Core section of TBuffer3D contains two members relating to reference frames: fLocalFrame & fLocalMaster. fLocalFrame indicates if any positions in the buffer (bounding box and tessellation vertexes) are in local or master (world frame). fLocalMaster is a standard 4x4 transl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBuffer3D.html:3826,clear,clear,3826,doc/master/classTBuffer3D.html,https://root.cern,https://root.cern/doc/master/classTBuffer3D.html,1,['clear'],['clear']
Usability," -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # x ^ 4 - 5x ^ 3 + 5x ^ 2 + 5x - 6; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; f = ROOT.RooPolyFunc(""f"", ""f"", ROOT.RooArgList(x)); f.addTerm(+1, x, 4); f.addTerm(-5, x, 3); f.addTerm(+5, x, 2); f.addTerm(+5, x, 1); f.addTerm(-6, x, 0); ; f = ROOT.RooFormulaVar(""f"", ""f"", ""pow(@0,4) -5 * pow(@0,3) +5 * pow(@0,2) + 5 * pow(@0,1) - 6"", [x]); # taylor expand around x0 = 0; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; x0 = 2.0; taylor_o1 = ROOT.RooPolyFunc.taylorExpand(""taylorfunc_o1"", ""taylor expansion order 1"", f, [x], 1, [x0]); ROOT.SetOwnership(taylor_o1, True); taylor_o2 = ROOT.RooPolyFunc.taylorExpand(""taylorfunc_o2"", ""taylor expansion order 2"", f, [x], 2, [x0]); ROOT.SetOwnership(taylor_o2, True); frame = x.frame(Title=""x^{4} - 5x^{3} + 5x^{2} + 5x - 6""); c = ROOT.TCanvas(""c"", ""c"", 400, 400); ; f.plotOn(frame, Name=""f""); taylor_o1.plotOn(frame, Name=""taylor_o1"", LineColor=""kRed"", LineStyle=""kDashed""); taylor_o2.plotOn(frame, Name=""taylor_o2"", LineColor=""kRed - 9"", LineStyle=""kDotted""); ; c.cd(); frame.SetMinimum(-8.0); frame.SetMaximum(+8.0); frame.SetYTitle(""function value""); frame.Draw(); ; legend = ROOT.TLegend(0.53, 0.73, 0.86, 0.87); legend.SetFillColor(ROOT.kWhite); legend.SetLineColor(ROOT.kWhite); legend.SetTextSize(0.02); legend.AddEntry(""taylor_o1"", ""Taylor expansion upto first order"", ""L""); legend.AddEntry(""taylor_o2"", ""Taylor expansion upto second order"", ""L""); legend.AddEntry(""f"", ""Polynomial of fourth order"", ""L""); legend.Draw(); ; c.Draw(); c.SaveAs(""rf710_roopoly.png""); (ELineStyle) (kDashed) : (unsigned int) 2; (ELineStyle) (kDotted) : (unsigned int) 3; DateNovember 2021 ; AuthorRahul Balasubramanian ; Definition in file rf710_roopoly.py. tutorialsroofitrf710_roopoly.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf710__roopoly_8py.html:2451,Guid,Guide,2451,doc/master/rf710__roopoly_8py.html,https://root.cern,https://root.cern/doc/master/rf710__roopoly_8py.html,1,['Guid'],['Guide']
Usability," -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with bounds [0,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 16261.4, estimated distance to minimum: 5.06415e-07; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; f 5.1135e-01 +/- 3.58e-02; mx 9.8740e-01 +/- 4.03e-02; my 9.9305e-01 +/- 9.39e-02; ; ; RooFitResult: minimized FCN value: 7578.28, estimated distance to minimum: 3.07865e-06; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; f 5.4586e-01 +/- 4.46e-02; mx 1.1276e+00 +/- 1.10e-01; my 9.6462e-01 +/- 5.60e-02; ; ; RooFitResult: minimized FCN value: 27252.6, estimated distance to minimum: 2.25202e-06; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; f 5.0082e-01 +/- 1.29e-02; mx 1.0100e+00 +/- 3.26e-02; my 9.6348e-01 +/- 3.31e-02; ; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf312_multirangefit.py. tutorialsroofitrf312_multirangefit.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf312__multirangefit_8py.html:6838,Guid,Guide,6838,doc/master/rf312__multirangefit_8py.html,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8py.html,1,['Guid'],['Guide']
Usability," -------------------------------------------------------; ; # Calculate the llratio value for each event in the dataset; data.addColumn(llratio_func); ; # Extract the subset of data with large signal likelihood; dataSel = data.reduce(Cut=""llratio>0.7""); ; # Make plot frame; frame2 = x.frame(Title=""Same projection on X with LLratio(y,z)>0.7"", Bins=40); ; # Plot select data on frame; dataSel.plotOn(frame2); ; # Make MC projection of pdf with same LL ratio cut; # ---------------------------------------------------------------------------------------------; ; # Generate large number of events for MC integration of pdf projection; mcprojData = model.generate({x, y, z}, 10000); ; # Calculate LL ratio for each generated event and select MC events with; # llratio)0.7; mcprojData.addColumn(llratio_func); mcprojDataSel = mcprojData.reduce(Cut=""llratio>0.7""); ; # Project model on x, projected observables (y,z) with Monte Carlo technique; # on set of events with the same llratio cut as was applied to data; model.plotOn(frame2, ProjWData=mcprojDataSel); ; c = ROOT.TCanvas(""rf316_llratioplot"", ""rf316_llratioplot"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.4); frame2.Draw(); c.SaveAs(""rf316_llratioplot.png""); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x integrates over variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) plot on x averages using data variables (y,z); [#1] INFO:Plotting -- RooAbsReal::plotOn(model) only the following components of the projection data will be used: (y,z); [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf316_llratioplot.py. tutorialsroofitrf316_llratioplot.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf316__llratioplot_8py.html:4022,Guid,Guide,4022,doc/master/rf316__llratioplot_8py.html,https://root.cern,https://root.cern/doc/master/rf316__llratioplot_8py.html,1,['Guid'],['Guide']
Usability," . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » First Steps With ROOT Processing data with ROOT. The ROOT framework consists of many classes, grouped into several categories. Finally, the latter are grouped into few top-level categories. Each top-level category comes with a basic description of the framework design and of the purpose of its categories, which also have more detailed documentation about their use. The most complete documentation is the Reference Guide, that contains the automatically generated documentation of each class.; This document is about the top-level categories related to data processing. . ‹ First Steps With ROOT; up; CINT and RootCint ›. Navigate through this book; Processing data with ROOTCINT and RootCint; About PROOF; Bindings; Analyzing data with ROOT; Math; RooFit; TMVA. Showing results with ROOT; Simulation in ROOT; ROOT I/O. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. Con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/processing-data-root.html:2279,Guid,Guide,2279,d/processing-data-root.html,https://root.cern,https://root.cern/d/processing-data-root.html,1,['Guid'],['Guide']
Usability," . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » First Steps With ROOT Showing results with ROOT. The ROOT framework consists of many classes, grouped into several categories. Finally, the latter are grouped into few top-level categories. Each top-level category comes with a basic description of the framework design and of the purpose of its categories, which also have more detailed documentation about their use. The most complete documentation is the Reference Guide, that contains the automatically generated documentation of each class.; This document is about the top-level categories related to graphical output. . ‹ TMVA; up; Canvases and pads ›. Navigate through this book; Processing data with ROOT; Showing results with ROOTCanvases and pads; Graphics 2D; Graphics 3D. Simulation in ROOT; ROOT I/O. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. © Copyright CERN 2014-18. All r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/showing-results-root.html:2279,Guid,Guide,2279,d/showing-results-root.html,https://root.cern,https://root.cern/d/showing-results-root.html,1,['Guid'],['Guide']
Usability," . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses » Introductory Tutorials Compiling Your Code (also known as ACLiC). You can run your code as compiled code instead of interpreted. This makes it possible to debug your code, and might give slightly faster code.; Wherever you would specify MyCode.C you can simply specify MyCode.C+ (note the trailing ""+"") and ROOT will start your compiler and load your code as dynamic library. Give it a try with "".x AnalyzeTree.C+"". If you see ""command not found"", ROOT cannot find the compiler in your $PATH / %PATH%.; . ‹ Fit Panel; up; Accessing a TTree With a TSelector ›. Navigate through this book; Meet a TTree; Accessing a TTree With a TBrowser; Using TTree::Draw() to access a TTree; TTree and Its Data; Using a Macro to Read a TTree; Histogramming; Fit Panel; Compiling Your Code (also known as ACLiC); Accessing a TTree With a TSelector; Histogramming in a Selector; Using a TSelector with PROOF; The End. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Pr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/compiling-your-code-also-known-aclic.html:2158,simpl,simply,2158,d/compiling-your-code-also-known-aclic.html,https://root.cern,https://root.cern/d/compiling-your-code-also-known-aclic.html,1,['simpl'],['simply']
Usability," . ; Contribute . ; Collaborate with Us . You are hereHome » Development » Git Primer Github ssh key. Using Github with ssh keys is preferred, as it's much easier to use. Here is how to set it up:; 1. Create an ssh key; Run; ssh-keygen -t rsa -b 4096 -C ""your_email@example.com"" -f ~/.ssh/github_id_rsa. The email address is for your convenience, it doesn't really matter what you put there; you can even use this to state the name of the computer that will use that key.; You can use a passphrase - but even without it's sufficiently safe, because only you have the secret key file! But please enabling Two Factor Authentication!; 2. Add the key to Github; Log in to https://github.com. In the top right corner, in a drop-down menu, click ""Settings"". Select ""SSH and GPG keys"" from the menu on the left. Click ""New SSH key"", add something as a title and copy the output of; cat ~/.ssh/github_id_rsa.pub. into the ""Key"" text box.; 3. Guide ssh to your key; Edit (or create) ~/.ssh/config and enter the following lines:; Host github.com; User git; PreferredAuthentications publickey; IdentityFile ~/.ssh/github_id_rsa. 4. Check; ssh -T git@github.com. should print; Hi UserName! You've successfully authenticated, but GitHub does not provide shell access. References. Create an ssh key; Add the key to Github; Check. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. © Copyright CERN 2014-18. All rights reserved. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/github-ssh-key.html:3190,Guid,Guides,3190,d/github-ssh-key.html,https://root.cern,https://root.cern/d/github-ssh-key.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability," . Add TTask to this. ; Definition at line 176 of file TTask.cxx. ◆ Browse(). void TTask::Browse ; (; TBrowser * ; b). overridevirtual . Browse the list of tasks. ; It is recommended to add the top level task to the list of ROOT browsables by: gROOT->GetListOfBrowsables()->Add(myTopLevelTask). Reimplemented from TObject.; Definition at line 211 of file TTask.cxx. ◆ Class(). static TClass * TTask::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TTask::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TTask::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 76 of file TTask.h. ◆ CleanTasks(). void TTask::CleanTasks ; (; ). virtual . Reset tasks state: breakpoints and execute flags also invokes the Clear function of each task to clear all data structures created by a previous execution of a task. ; Definition at line 222 of file TTask.cxx. ◆ Clear(). void TTask::Clear ; (; Option_t * ; option = """"). overridevirtual . Recursively call the Clear function of this task and its subtasks. ; The Clear function must be implemented for each derived class to clear all data structures created by a previous execution of a task. This function is automatically called by the CleanTasks function. ; Reimplemented from TNamed.; Definition at line 240 of file TTask.cxx. ◆ Continue(). void TTask::Continue ; (; ). virtual . Resume execution at the current break point. ; Definition at line 247 of file TTask.cxx. ◆ DeclFileName(). static const char * TTask::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 76 of file TTask.h. ◆ Exec(). void TTask::Exec ; (; Option_t * ; option). virtual . Dummy Execute. ; This function must be redefined in the derived classes. ; Definition at line 267 of file TTask.cxx. ◆ ExecuteTask(). void TTask::ExecuteTask ; (; Option_t * ; option = ""0""). virtual .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTask.html:17839,Clear,Clear,17839,doc/master/classTTask.html,https://root.cern,https://root.cern/doc/master/classTTask.html,1,['Clear'],['Clear']
Usability, . Classes; class  TGeoBBoxEditor;  Editor for a TGeoBBox. More...;  ; class  TGeoCombiTransEditor;  Editor for a TGeoCombiTrans. More...;  ; class  TGeoConeEditor;  Editor for a TGeoCone. More...;  ; class  TGeoConeSegEditor;  Editor for a cone segment. More...;  ; class  TGeoCtubEditor;  Editor for a TGeoCtub. More...;  ; class  TGeoEltuEditor;  Editor for a TGeoEltu. More...;  ; class  TGeoGedFrame;  Common base class for geombuilder editors. More...;  ; class  TGeoGtraEditor;  Editor for a TGeoGtra. More...;  ; class  TGeoHypeEditor;  Editor for a TGeoHype. More...;  ; class  TGeoManagerEditor;  Editor for TGeoManager class. More...;  ; class  TGeoMaterialEditor;  Editors for materials. More...;  ; class  TGeoMediumEditor;  Editor class for TGeo tracking media. More...;  ; class  TGeoMixtureEditor;  Editors for mixtures. More...;  ; class  TGeoNodeEditor;  Editor class for TGeoNode objects. More...;  ; class  TGeoParaEditor;  Editor for a TGeoPara. More...;  ; class  TGeoPconEditor;  Editor for a TGeoPcon. More...;  ; class  TGeoPconSection;  Utility frame used by TGeoPcon editor. More...;  ; class  TGeoPgonEditor;  Editor for a TGeoPgon. More...;  ; class  TGeoRotationEditor;  Editor for a TGeoRotation. More...;  ; class  TGeoSphereEditor;  Editor for a TGeoSphere. More...;  ; class  TGeoTabManager;  Manager for all editor tabs. More...;  ; class  TGeoTorusEditor;  Editor for a TGeoTorus. More...;  ; class  TGeoTranslationEditor;  Editor for a TGeoTranslation. More...;  ; class  TGeoTrapEditor;  Editor for a TGeoTrap. More...;  ; class  TGeoTrd1Editor;  Editor for a TGeoTrd1. More...;  ; class  TGeoTrd2Editor;  Editor for a TGeoTrd2. More...;  ; class  TGeoTubeEditor;  Editor for a TGeoTube. More...;  ; class  TGeoTubeSegEditor;  Editor for a TGeoTubeSeg. More...;  ; class  TGeoVolumeEditor;  Editor for geometry volumes and assemblies of volumes. More...;  . ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:32 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__Geometry__builder.html:2198,Guid,Guide,2198,doc/master/group__Geometry__builder.html,https://root.cern,https://root.cern/doc/master/group__Geometry__builder.html,1,['Guid'],['Guide']
Usability, . Close (cleanup) ODBC result object. Deletes statement. ; Implements TSQLResult.; Definition at line 45 of file TODBCResult.cxx. ◆ DeclFileName(). static const char * TODBCResult::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 46 of file TODBCResult.h. ◆ GetFieldCount(). Int_t TODBCResult::GetFieldCount ; (; ). inlinefinalvirtual . Implements TSQLResult.; Definition at line 42 of file TODBCResult.h. ◆ GetFieldName(). const char * TODBCResult::GetFieldName ; (; Int_t ; field). finalvirtual . Get name of specified field. ; Implements TSQLResult.; Definition at line 54 of file TODBCResult.cxx. ◆ IsA(). TClass * TODBCResult::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 46 of file TODBCResult.h. ◆ Next(). TSQLRow * TODBCResult::Next ; (; ). finalvirtual . Get next query result row. ; The returned object must be deleted by the user. ; Implements TSQLResult.; Definition at line 80 of file TODBCResult.cxx. ◆ Streamer(). void TODBCResult::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TODBCResult::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 46 of file TODBCResult.h. Member Data Documentation. ◆ fFieldCount. Int_t TODBCResult::fFieldCount {0}. protected . Definition at line 34 of file TODBCResult.h. ◆ fHstmt. SQLHSTMT TODBCResult::fHstmt. protected . Definition at line 33 of file TODBCResult.h. ◆ fNameBuffer. TString TODBCResult::fNameBuffer. protected . Definition at line 35 of file TODBCResult.h. Libraries for TODBCResult:. [legend]; The documentation for this class was generated from the following files:; sql/odbc/inc/TODBCResult.h; sql/odbc/src/TODBCResult.cxx. TODBCResult. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:04 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTODBCResult.html:13751,Guid,Guide,13751,doc/master/classTODBCResult.html,https://root.cern,https://root.cern/doc/master/classTODBCResult.html,1,['Guid'],['Guide']
Usability," . Definition at line 111 of file RGeomData.cxx. ◆ Navigate() [1/3]. bool ROOT::RGeomBrowserIter::Navigate ; (; const std::string & ; path). inline . Navigate to specified path - path specified as string and should start with ""/"". ; Definition at line 177 of file RGeomData.cxx. ◆ Navigate() [2/3]. bool ROOT::RGeomBrowserIter::Navigate ; (; const std::vector< std::string > & ; path). inline . Navigate to specified path . Definition at line 212 of file RGeomData.cxx. ◆ Navigate() [3/3]. bool ROOT::RGeomBrowserIter::Navigate ; (; TGeoVolume * ; vol). inline . Navigate to specified volume - find first occurrence. ; Definition at line 235 of file RGeomData.cxx. ◆ Next(). bool ROOT::RGeomBrowserIter::Next ; (; ). inline . Definition at line 131 of file RGeomData.cxx. ◆ NextNode(). bool ROOT::RGeomBrowserIter::NextNode ; (; ). inline . Definition at line 160 of file RGeomData.cxx. ◆ NumChilds(). int ROOT::RGeomBrowserIter::NumChilds ; (; ); const. inline . Definition at line 87 of file RGeomData.cxx. ◆ Reset(). bool ROOT::RGeomBrowserIter::Reset ; (; ). inline . Definition at line 149 of file RGeomData.cxx. Member Data Documentation. ◆ fChild. unsigned ROOT::RGeomBrowserIter::fChild {0}. private . Definition at line 64 of file RGeomData.cxx. ◆ fDesc. RGeomDescription& ROOT::RGeomBrowserIter::fDesc. private . Definition at line 62 of file RGeomData.cxx. ◆ fNodeId. int ROOT::RGeomBrowserIter::fNodeId {0}. private . Definition at line 65 of file RGeomData.cxx. ◆ fParentId. int ROOT::RGeomBrowserIter::fParentId {-1}. private . Definition at line 63 of file RGeomData.cxx. ◆ fStackChilds. std::vector<int> ROOT::RGeomBrowserIter::fStackChilds. private . Definition at line 68 of file RGeomData.cxx. ◆ fStackParents. std::vector<int> ROOT::RGeomBrowserIter::fStackParents. private . Definition at line 67 of file RGeomData.cxx. geom/webviewer/src/RGeomData.cxx. ROOTRGeomBrowserIter. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:36 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RGeomBrowserIter.html:4779,Guid,Guide,4779,doc/v632/classROOT_1_1RGeomBrowserIter.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RGeomBrowserIter.html,1,['Guid'],['Guide']
Usability, . Definition at line 147 of file TWinNTSystem.cxx. ◆ GetFd(). Int_t TFdSet::GetFd ; (; Int_t ; i). inline . Definition at line 148 of file TWinNTSystem.cxx. ◆ IsSet() [1/3]. Int_t TFdSet::IsSet ; (; Int_t ; fd). inline . Definition at line 145 of file TWinNTSystem.cxx. ◆ IsSet() [2/3]. Int_t TFdSet::IsSet ; (; Int_t ; n). inline . Definition at line 120 of file TMacOSXSystem.mm. ◆ IsSet() [3/3]. Int_t TFdSet::IsSet ; (; Int_t ; n). inline . Definition at line 392 of file TUnixSystem.cxx. ◆ operator=() [1/3]. TFdSet & TFdSet::operator= ; (; const TFdSet & ; fd). inline . Definition at line 122 of file TWinNTSystem.cxx. ◆ operator=() [2/3]. TFdSet & TFdSet::operator= ; (; const TFdSet & ; rhs). inline . Definition at line 96 of file TMacOSXSystem.mm. ◆ operator=() [3/3]. TFdSet & TFdSet::operator= ; (; const TFdSet & ; rhs). inline . Definition at line 374 of file TUnixSystem.cxx. ◆ Set() [1/3]. void TFdSet::Set ; (; Int_t ; fd). inline . Definition at line 124 of file TWinNTSystem.cxx. ◆ Set() [2/3]. void TFdSet::Set ; (; Int_t ; n). inline . Definition at line 104 of file TMacOSXSystem.mm. ◆ Set() [3/3]. void TFdSet::Set ; (; Int_t ; n). inline . Definition at line 376 of file TUnixSystem.cxx. ◆ Zero() [1/3]. void TFdSet::Zero ; (; ). inline . Definition at line 103 of file TMacOSXSystem.mm. ◆ Zero() [2/3]. void TFdSet::Zero ; (; ). inline . Definition at line 375 of file TUnixSystem.cxx. ◆ Zero() [3/3]. void TFdSet::Zero ; (; ). inline . Definition at line 123 of file TWinNTSystem.cxx. Member Data Documentation. ◆ fds_bits [1/2]. ULong_t TFdSet::fds_bits[(((kFDSETSIZE)+((kNFDBITS) -1))/(kNFDBITS))]. private . Definition at line 92 of file TMacOSXSystem.mm. ◆ fds_bits [2/2]. ULong_t TFdSet::fds_bits. private . Definition at line 116 of file TWinNTSystem.cxx. core/macosx/src/TMacOSXSystem.mm; core/unix/src/TUnixSystem.cxx; core/winnt/src/TWinNTSystem.cxx. TFdSet. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:49 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFdSet.html:4698,Guid,Guide,4698,doc/master/classTFdSet.html,https://root.cern,https://root.cern/doc/master/classTFdSet.html,1,['Guid'],['Guide']
Usability, . Definition at line 234 of file TClass.h. ◆ fRuntimeProperties. std::atomic<UChar_t> TClass::fRuntimeProperties. mutableprivate . Definition at line 273 of file TClass.h. ◆ fSchemaRules. ROOT::Detail::TSchemaRuleSet* TClass::fSchemaRules. private . Pointer to reference proxy if this class represents a reference. ; Definition at line 281 of file TClass.h. ◆ fSharedLibs. TString TClass::fSharedLibs. private . Definition at line 227 of file TClass.h. ◆ fShowMembers. ShowMembersFunc_t TClass::fShowMembers. private . Definition at line 225 of file TClass.h. ◆ fSizeof. Int_t TClass::fSizeof. private . Definition at line 243 of file TClass.h. ◆ fState. EState TClass::fState. private . cached of the streaming method to use ; Definition at line 277 of file TClass.h. ◆ fStreamer. TClassStreamer* TClass::fStreamer. private . Definition at line 226 of file TClass.h. ◆ fStreamerFunc. ClassStreamerFunc_t TClass::fStreamerFunc. private . Definition at line 241 of file TClass.h. ◆ fStreamerImpl. std::atomic<StreamerImpl_t> TClass::fStreamerImpl. mutableprivate . Definition at line 287 of file TClass.h. ◆ fStreamerInfo. TObjArray* TClass::fStreamerInfo. mutableprivate . Definition at line 198 of file TClass.h. ◆ fStreamerType. Int_t TClass::fStreamerType. private . saved info to call Streamer ; Definition at line 276 of file TClass.h. ◆ fTypeInfo. const std::type_info* TClass::fTypeInfo. private . Definition at line 224 of file TClass.h. ◆ fUsingData. std::atomic<TListOfDataMembers*> TClass::fUsingData. private . Definition at line 203 of file TClass.h. ◆ fVersionUsed. std::atomic<Bool_t> TClass::fVersionUsed. mutableprivate . saved remember if fOffsetStreamer has been set. ; Definition at line 262 of file TClass.h. Libraries for TClass:. [legend]; The documentation for this class was generated from the following files:; core/meta/inc/TClass.h; core/meta/src/TClass.cxx. TClass. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:23 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass.html:133179,Guid,Guide,133179,doc/master/classTClass.html,https://root.cern,https://root.cern/doc/master/classTClass.html,1,['Guid'],['Guide']
Usability," . Definition at line 31 of file TGedFrame.h. Public Member Functions;  TGedSubFrame (TString n, TGCompositeFrame *f);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *err",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGedFrame_1_1TGedSubFrame.html:1232,Clear,Clear,1232,doc/master/classTGedFrame_1_1TGedSubFrame.html,https://root.cern,https://root.cern/doc/master/classTGedFrame_1_1TGedSubFrame.html,1,['Clear'],['Clear']
Usability, . Definition at line 80 of file TGLViewerEditor.h. ◆ fReferencePosX. TGNumberEntry* TGLViewerEditor::fReferencePosX. private . Definition at line 81 of file TGLViewerEditor.h. ◆ fReferencePosY. TGNumberEntry* TGLViewerEditor::fReferencePosY. private . Definition at line 82 of file TGLViewerEditor.h. ◆ fReferencePosZ. TGNumberEntry* TGLViewerEditor::fReferencePosZ. private . Definition at line 83 of file TGLViewerEditor.h. ◆ fResetCamerasOnUpdate. TGCheckButton* TGLViewerEditor::fResetCamerasOnUpdate. private . Definition at line 48 of file TGLViewerEditor.h. ◆ fRotateSceneOn. TGCheckButton* TGLViewerEditor::fRotateSceneOn. private . Definition at line 92 of file TGLViewerEditor.h. ◆ fSceneRotDt. TGNumberEntry* TGLViewerEditor::fSceneRotDt. private . Definition at line 93 of file TGLViewerEditor.h. ◆ fStereoEyeOffsetFac. TGNumberEntry* TGLViewerEditor::fStereoEyeOffsetFac. private . Definition at line 103 of file TGLViewerEditor.h. ◆ fStereoFrame. TGCompositeFrame* TGLViewerEditor::fStereoFrame. private . Definition at line 42 of file TGLViewerEditor.h. ◆ fStereoFrustumAsymFac. TGNumberEntry* TGLViewerEditor::fStereoFrustumAsymFac. private . Definition at line 104 of file TGLViewerEditor.h. ◆ fStereoZeroParallax. TGNumberEntry* TGLViewerEditor::fStereoZeroParallax. private . Definition at line 102 of file TGLViewerEditor.h. ◆ fUpdateScene. TGTextButton* TGLViewerEditor::fUpdateScene. private . Definition at line 49 of file TGLViewerEditor.h. ◆ fViewer. TGLViewer* TGLViewerEditor::fViewer. private . Definition at line 107 of file TGLViewerEditor.h. ◆ fWFLineWidth. TGNumberEntry* TGLViewerEditor::fWFLineWidth. private . Definition at line 59 of file TGLViewerEditor.h. Libraries for TGLViewerEditor:. [legend]; The documentation for this class was generated from the following files:; graf3d/gl/inc/TGLViewerEditor.h; graf3d/gl/src/TGLViewerEditor.cxx. TGLViewerEditor. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:26 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLViewerEditor.html:51281,Guid,Guide,51281,doc/master/classTGLViewerEditor.html,https://root.cern,https://root.cern/doc/master/classTGLViewerEditor.html,1,['Guid'],['Guide']
Usability, . Definition at line 86 of file TTreeCacheUnzip.h. ◆ fNFound. Int_t TTreeCacheUnzip::fNFound. protected . ! number of blocks that were found in the cache ; Definition at line 103 of file TTreeCacheUnzip.h. ◆ fNMissed. Int_t TTreeCacheUnzip::fNMissed. protected . ! number of blocks that were not found in the cache and were unzipped ; Definition at line 104 of file TTreeCacheUnzip.h. ◆ fNseekMax. Int_t TTreeCacheUnzip::fNseekMax. protected . ! fNseek can change so we need to know its max size ; Definition at line 96 of file TTreeCacheUnzip.h. ◆ fNStalls. Int_t TTreeCacheUnzip::fNStalls. protected . ! number of hits which caused a stall ; Definition at line 105 of file TTreeCacheUnzip.h. ◆ fNUnzip. Int_t TTreeCacheUnzip::fNUnzip. protected . ! number of blocks that were unzipped ; Definition at line 106 of file TTreeCacheUnzip.h. ◆ fParallel. bool TTreeCacheUnzip::fParallel. protected . Indicate if we want to activate the parallelism (for this instance) ; Definition at line 84 of file TTreeCacheUnzip.h. ◆ fUnzipBufferSize. Long64_t TTreeCacheUnzip::fUnzipBufferSize. protected . ! Max Size for the ready unzipped blocks (default is 2*fBufferSize) ; Definition at line 98 of file TTreeCacheUnzip.h. ◆ fUnzipGroupSize. Int_t TTreeCacheUnzip::fUnzipGroupSize. protected . ! Min accumulated size of a group of baskets ready to be unzipped by a IMT task ; Definition at line 97 of file TTreeCacheUnzip.h. ◆ fUnzipState. UnzipState_t TTreeCacheUnzip::fUnzipState. protected . Definition at line 78 of file TTreeCacheUnzip.h. ◆ fUnzipTaskGroup. std::unique_ptr<ROOT::Experimental::TTaskGroup> TTreeCacheUnzip::fUnzipTaskGroup. protected . Definition at line 92 of file TTreeCacheUnzip.h. Libraries for TTreeCacheUnzip:. [legend]; The documentation for this class was generated from the following files:; tree/tree/inc/TTreeCacheUnzip.h; tree/tree/src/TTreeCacheUnzip.cxx. TTreeCacheUnzip. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:39 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeCacheUnzip.html:41790,Guid,Guide,41790,doc/master/classTTreeCacheUnzip.html,https://root.cern,https://root.cern/doc/master/classTTreeCacheUnzip.html,1,['Guid'],['Guide']
Usability," . Float_t * ; p, . Marker_t ; m = 1, . Option_t * ; opt = """" . ). inline . Definition at line 34 of file TPointSet3D.h. ◆ TPointSet3D() [4/5]. TPointSet3D::TPointSet3D ; (; Int_t ; n, . Double_t * ; p, . Marker_t ; m = 1, . Option_t * ; opt = """" . ). inline . Definition at line 36 of file TPointSet3D.h. ◆ TPointSet3D() [5/5]. TPointSet3D::TPointSet3D ; (; const TPointSet3D & ; t). Copy constructor. ; Definition at line 44 of file TPointSet3D.cxx. ◆ ~TPointSet3D(). TPointSet3D::~TPointSet3D ; (; ). override . Destructor. ; Definition at line 53 of file TPointSet3D.cxx. Member Function Documentation. ◆ Class(). static TClass * TPointSet3D::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPointSet3D::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPointSet3D::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 56 of file TPointSet3D.h. ◆ ClearIds(). void TPointSet3D::ClearIds ; (; ). Clears the id-array. If ids are owned the TObjects are deleted. ; Definition at line 126 of file TPointSet3D.cxx. ◆ ComputeBBox(). void TPointSet3D::ComputeBBox ; (; ). overridevirtual . Compute the bounding box of this points set. ; Implements TAttBBox.; Definition at line 90 of file TPointSet3D.cxx. ◆ CopyIds(). void TPointSet3D::CopyIds ; (; const TPointSet3D & ; t). protected . Copy id objects from point-set 't'. ; Definition at line 61 of file TPointSet3D.cxx. ◆ DeclFileName(). static const char * TPointSet3D::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 56 of file TPointSet3D.h. ◆ GetOwnIds(). Bool_t TPointSet3D::GetOwnIds ; (; ); const. inline . Definition at line 51 of file TPointSet3D.h. ◆ GetPointId(). TObject * TPointSet3D::GetPointId ; (; Int_t ; n); const. inline . Definition at line 48 of file TPointSet3D.h. ◆ IsA(). TClass * TPointSet3D::IsA ; (; ); const. inli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPointSet3D.html:19634,Clear,ClearIds,19634,doc/master/classTPointSet3D.html,https://root.cern,https://root.cern/doc/master/classTPointSet3D.html,1,['Clear'],['ClearIds']
Usability," . Note: in cases where the function to be executed takes more than zero/one argument but all are fixed except zero/one, the function can be wrapped in a lambda or via std::bind to give it the right signature.; Note: the user should take care of initializing random seeds differently in each process (e.g. using the process id in the seed). Otherwise several parallel executions might generate the same sequence of pseudo-random numbers.; Return value:; An std::vector. The elements in the container will be the objects returned by func.; Examples:; root[] ROOT::TProcessExecutor pool; auto hists = pool.Map(CreateHisto, 10);; root[] ROOT::TProcessExecutor pool(2); auto squares = pool.Map([](int a) { return a*a; }, {1,2,3});; a#define a(i)Definition RSha256.hxx:99; ROOT::TExecutorCRTP::Mapauto Map(F func, unsigned nTimes) -> std::vector< InvokeResult_t< F > >Execute a function without arguments several times.Definition TExecutorCRTP.hxx:185; ROOT::TProcessExecutorThis class provides a simple interface to execute the same task multiple times in parallel,...Definition TProcessExecutor.hxx:37. ROOT::TProcessExecutor::MapReduce; This set of methods behaves exactly like Map, but takes an additional function as a third argument. This function is applied to the set of objects returned by the corresponding Map execution to ""squash"" them into a single object.; Examples:; root[] ROOT::TProcessExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }); root[] ROOT::TProcessExecutor pool; auto hist = pool.MapReduce(CreateAndFillHists, 10, PoolUtils::ReduceObjects);; ROOT::ExecutorUtils::ReduceObjectsMerge collection of TObjects.Definition PoolUtils.h:35; ROOT::TProcessExecutor::MapReduceauto MapReduce(F func, unsigned nTimes, R redfunc) -> InvokeResult_t< F >Execute a function nTimes in parallel (Map) and accumulate the results into a single value (Reduce).Definition TProcessExecutor.hxx:262; v@ vDef",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TProcessExecutor.html:2831,simpl,simple,2831,doc/v632/classROOT_1_1TProcessExecutor.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TProcessExecutor.html,2,['simpl'],['simple']
Usability," . Option_t * ; option = """" . ). overridevirtual . Save a splitter widget as a C++ statement(s) on output stream out. ; Reimplemented from TGFrame.; Definition at line 583 of file TGSplitter.cxx. ◆ SetFrame(). void TGVSplitter::SetFrame ; (; TGFrame * ; frame, . Bool_t ; left . ). overridevirtual . Set frame to be resized. ; If frame is on the left of the splitter set left to true. ; Implements TGSplitter.; Definition at line 143 of file TGSplitter.cxx. ◆ Streamer(). void TGVSplitter::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGSplitter. ◆ StreamerNVirtual(). void TGVSplitter::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 86 of file TGSplitter.h. Member Data Documentation. ◆ fFrame. TGFrame* TGVSplitter::fFrame. protected . frame that should be resized ; Definition at line 65 of file TGSplitter.h. ◆ fFrameHeight. UInt_t TGVSplitter::fFrameHeight. protected . height of frame to be resized ; Definition at line 62 of file TGSplitter.h. ◆ fFrameWidth. UInt_t TGVSplitter::fFrameWidth. protected . width of frame to be resized ; Definition at line 61 of file TGSplitter.h. ◆ fLeft. Bool_t TGVSplitter::fLeft. protected . true if frame is on the left of splitter ; Definition at line 66 of file TGSplitter.h. ◆ fMax. Int_t TGVSplitter::fMax. protected . max x position frame can be resized to ; Definition at line 64 of file TGSplitter.h. ◆ fMin. Int_t TGVSplitter::fMin. protected . min x position frame can be resized to ; Definition at line 63 of file TGSplitter.h. ◆ fStartX. Int_t TGVSplitter::fStartX. protected . x position when dragging starts ; Definition at line 60 of file TGSplitter.h. Libraries for TGVSplitter:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGSplitter.h; gui/gui/src/TGSplitter.cxx. TGVSplitter. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:41 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGVSplitter.html:33870,Guid,Guide,33870,doc/master/classTGVSplitter.html,https://root.cern,https://root.cern/doc/master/classTGVSplitter.html,1,['Guid'],['Guide']
Usability," . Reimplemented from TGeoBBox. ◆ Safety_v(). void TGeoTrd2::Safety_v ; (; const Double_t * ; points, . const Bool_t * ; inside, . Double_t * ; safe, . Int_t ; vecsize . ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ SavePrimitive(). void TGeoTrd2::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save a primitive as a C++ statement(s) on output stream ""out"". ; Reimplemented from TGeoBBox. ◆ SetDimensions(). void TGeoTrd2::SetDimensions ; (; Double_t * ; param). overridevirtual . Reimplemented from TGeoBBox. ◆ SetPoints() [1/2]. void TGeoTrd2::SetPoints ; (; Double_t * ; points); const. overridevirtual . Reimplemented from TGeoBBox. ◆ SetPoints() [2/2]. void TGeoTrd2::SetPoints ; (; Float_t * ; points); const. overridevirtual . Reimplemented from TGeoBBox. ◆ SetVertex(). void TGeoTrd2::SetVertex ; (; Double_t * ; vertex); const. ◆ Sizeof3D(). void TGeoTrd2::Sizeof3D ; (; ); const. overridevirtual . Reimplemented from TGeoBBox. ◆ Streamer(). void TGeoTrd2::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGeoBBox. ◆ StreamerNVirtual(). void TGeoTrd2::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 80 of file TGeoTrd2.h. Member Data Documentation. ◆ fDx1. Double_t TGeoTrd2::fDx1. protected . Definition at line 20 of file TGeoTrd2.h. ◆ fDx2. Double_t TGeoTrd2::fDx2. protected . Definition at line 21 of file TGeoTrd2.h. ◆ fDy1. Double_t TGeoTrd2::fDy1. protected . Definition at line 22 of file TGeoTrd2.h. ◆ fDy2. Double_t TGeoTrd2::fDy2. protected . Definition at line 23 of file TGeoTrd2.h. ◆ fDz. Double_t TGeoTrd2::fDz. protected . Definition at line 24 of file TGeoTrd2.h. Libraries for TGeoTrd2:. [legend]; The documentation for this class was generated from the following file:; geom/geom/inc/TGeoTrd2.h. TGeoTrd2. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:12 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoTrd2.html:29856,Guid,Guide,29856,doc/master/classTGeoTrd2.html,https://root.cern,https://root.cern/doc/master/classTGeoTrd2.html,1,['Guid'],['Guide']
Usability, . Retrieve the dimension of the function. ; Implements ROOT::Math::IBaseFunctionMultiDimTempl< T >.; Definition at line 110 of file WrappedParamFunction.h. ◆ NPar(). template<typename FuncPtr = FreeParamMultiFunctionPtr> . unsigned int ROOT::Math::WrappedParamFunction< FuncPtr >::NPar ; (; ); const. inlineoverridevirtual . Return the number of Parameters. ; Implements ROOT::Math::IBaseParam.; Definition at line 108 of file WrappedParamFunction.h. ◆ Parameters(). template<typename FuncPtr = FreeParamMultiFunctionPtr> . const double * ROOT::Math::WrappedParamFunction< FuncPtr >::Parameters ; (; ); const. inlineoverridevirtual . Access the parameter values. ; Implements ROOT::Math::IBaseParam.; Definition at line 100 of file WrappedParamFunction.h. ◆ SetParameters(). template<typename FuncPtr = FreeParamMultiFunctionPtr> . void ROOT::Math::WrappedParamFunction< FuncPtr >::SetParameters ; (; const double * ; p). inlineoverridevirtual . Set the parameter values. ; Parameters. pvector of doubles containing the parameter values. to be defined: can user change number of params ? At the moment no. ; Implements ROOT::Math::IBaseParam.; Definition at line 104 of file WrappedParamFunction.h. Member Data Documentation. ◆ fDim. template<typename FuncPtr = FreeParamMultiFunctionPtr> . unsigned int ROOT::Math::WrappedParamFunction< FuncPtr >::fDim. private . Definition at line 122 of file WrappedParamFunction.h. ◆ fFunc. template<typename FuncPtr = FreeParamMultiFunctionPtr> . FuncPtr ROOT::Math::WrappedParamFunction< FuncPtr >::fFunc. private . Definition at line 121 of file WrappedParamFunction.h. ◆ fParams. template<typename FuncPtr = FreeParamMultiFunctionPtr> . std::vector<double> ROOT::Math::WrappedParamFunction< FuncPtr >::fParams. private . Definition at line 123 of file WrappedParamFunction.h. math/mathcore/inc/Math/WrappedParamFunction.h. ROOTMathWrappedParamFunction. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:24 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedParamFunction.html:7260,Guid,Guide,7260,doc/master/classROOT_1_1Math_1_1WrappedParamFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1WrappedParamFunction.html,1,['Guid'],['Guide']
Usability," . Return the object before obj. Returns 0 if obj is first object. ; Implements TSeqCollection.; Definition at line 415 of file TRefArray.cxx. ◆ BinarySearch(). Int_t TRefArray::BinarySearch ; (; TObject * ; obj, . Int_t ; upto = kMaxInt . ). virtual . Find object using a binary search. ; Array must first have been sorted. Search can be limited by setting upto to desired index. ; Definition at line 813 of file TRefArray.cxx. ◆ BoundsOk(). Bool_t TRefArray::BoundsOk ; (; const char * ; where, . Int_t ; at . ); const. inlineprotected . Definition at line 157 of file TRefArray.h. ◆ Class(). static TClass * TRefArray::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TRefArray::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TRefArray::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 98 of file TRefArray.h. ◆ Clear(). void TRefArray::Clear ; (; Option_t * ; option = """"). overridevirtual . Remove all objects from the array. ; Implements TCollection.; Definition at line 428 of file TRefArray.cxx. ◆ Compress(). void TRefArray::Compress ; (; ). virtual . Remove empty slots from array. ; Definition at line 440 of file TRefArray.cxx. ◆ DeclFileName(). static const char * TRefArray::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 98 of file TRefArray.h. ◆ Delete(). void TRefArray::Delete ; (; Option_t * ; option = """"). overridevirtual . Remove all objects from the array and free the internal memory. ; Implements TCollection.; Definition at line 459 of file TRefArray.cxx. ◆ Expand(). void TRefArray::Expand ; (; Int_t ; newSize). virtual . Expand or shrink the array to newSize elements. ; Definition at line 475 of file TRefArray.cxx. ◆ First(). TObject * TRefArray::First ; (; ); const. overridevirtual . Return the object in the first slot. ; Implements TSeqCollection.;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRefArray.html:28471,Clear,Clear,28471,doc/master/classTRefArray.html,https://root.cern,https://root.cern/doc/master/classTRefArray.html,1,['Clear'],['Clear']
Usability," . ReturnsVersion of this class ; Definition at line 123 of file TGLayout.h. ◆ DeclFileName(). static const char * TGFrameElement::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 123 of file TGLayout.h. ◆ IsA(). TClass * TGFrameElement::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TGFrameElementPack.; Definition at line 123 of file TGLayout.h. ◆ ls(). void TGFrameElement::ls ; (; Option_t * ; option = """"); const. inlineoverridevirtual . The ls function lists the contents of a class on stdout. ; Ls output is typically much less verbose then Dump(). ; Reimplemented from TObject.; Definition at line 121 of file TGLayout.h. ◆ operator=(). TGFrameElement & TGFrameElement::operator= ; (; const TGFrameElement & ; ). private . ◆ Print(). void TGFrameElement::Print ; (; Option_t * ; option = """"); const. overridevirtual . Print this frame element. ; Reimplemented from TObject.; Definition at line 71 of file TGLayout.cxx. ◆ Streamer(). void TGFrameElement::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TGFrameElementPack. ◆ StreamerNVirtual(). void TGFrameElement::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 123 of file TGLayout.h. Member Data Documentation. ◆ fFrame. TGFrame* TGFrameElement::fFrame. Definition at line 112 of file TGLayout.h. ◆ fLayout. TGLayoutHints* TGFrameElement::fLayout. Definition at line 114 of file TGLayout.h. ◆ fState. Int_t TGFrameElement::fState. Definition at line 113 of file TGLayout.h. Libraries for TGFrameElement:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGLayout.h; gui/gui/src/TGLayout.cxx. TGFrameElement. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:15 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFrameElement.html:13132,Guid,Guide,13132,doc/master/classTGFrameElement.html,https://root.cern,https://root.cern/doc/master/classTGFrameElement.html,1,['Guid'],['Guide']
Usability," . Shows if a PDF is self-normalized, which means that no attempt is made to add a normalization term. ; Always returns false, unless a PDF overrides this function. ; Reimplemented from RooAbsPdf.; Definition at line 45 of file RooResolutionModel.h. ◆ Streamer(). void RooResolutionModel::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsPdf.; Reimplemented in RooTruthModel. ◆ StreamerNVirtual(). void RooResolutionModel::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 81 of file RooResolutionModel.h. Friends And Related Symbol Documentation. ◆ RooAbsAnaConvPdf. friend class RooAbsAnaConvPdf. friend . Definition at line 75 of file RooResolutionModel.h. ◆ RooAddModel. friend class RooAddModel. friend . Definition at line 70 of file RooResolutionModel.h. ◆ RooConvGenContext. friend class RooConvGenContext. friend . Definition at line 69 of file RooResolutionModel.h. Member Data Documentation. ◆ _basis. RooFormulaVar* RooResolutionModel::_basis = nullptr. protected . Basis function convolved with this resolution model. ; Definition at line 78 of file RooResolutionModel.h. ◆ _basisCode. Int_t RooResolutionModel::_basisCode. protected . Identifier code for selected basis function. ; Definition at line 77 of file RooResolutionModel.h. ◆ _ownBasis. bool RooResolutionModel::_ownBasis. protected . Flag indicating ownership of _basis. ; Definition at line 79 of file RooResolutionModel.h. ◆ x. RooTemplateProxy<RooAbsRealLValue> RooResolutionModel::x. protected . Dependent/convolution variable. ; Definition at line 71 of file RooResolutionModel.h. Libraries for RooResolutionModel:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooResolutionModel.h; roofit/roofitcore/src/RooResolutionModel.cxx. RooResolutionModel. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:08 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooResolutionModel.html:85133,Guid,Guide,85133,doc/master/classRooResolutionModel.html,https://root.cern,https://root.cern/doc/master/classRooResolutionModel.html,1,['Guid'],['Guide']
Usability," . TClonesArray * ; list, . Int_t ; n . ). overridevirtual . Read leaf elements from Basket input buffer and export buffer to TClonesArray objects. ; Reimplemented from TLeaf.; Definition at line 176 of file TLeafC.cxx. ◆ ReadValue(). void TLeafC::ReadValue ; (; std::istream & ; s, . Char_t ; delim = ' ' . ). overridevirtual . Read a string from std::istream s up to delimiter and store it into the branch buffer. ; Reimplemented from TLeaf.; Definition at line 199 of file TLeafC.cxx. ◆ SetAddress(). void TLeafC::SetAddress ; (; void * ; add = nullptr). overridevirtual . Set leaf buffer data address. ; Reimplemented from TLeaf.; Definition at line 220 of file TLeafC.cxx. ◆ SetMaximum(). virtual void TLeafC::SetMaximum ; (; Int_t ; max). inlinevirtual . Definition at line 54 of file TLeafC.h. ◆ SetMinimum(). virtual void TLeafC::SetMinimum ; (; Int_t ; min). inlinevirtual . Definition at line 55 of file TLeafC.h. ◆ Streamer(). void TLeafC::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TLeaf. ◆ StreamerNVirtual(). void TLeafC::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 57 of file TLeafC.h. Member Data Documentation. ◆ fMaximum. Int_t TLeafC::fMaximum. protected . Maximum value if leaf range is specified. ; Definition at line 30 of file TLeafC.h. ◆ fMinimum. Int_t TLeafC::fMinimum. protected . Minimum value if leaf range is specified. ; Definition at line 29 of file TLeafC.h. ◆ fPointer. Char_t** TLeafC::fPointer. protected . ! Address of pointer to data buffer ; Definition at line 32 of file TLeafC.h. ◆ fValue. Char_t* TLeafC::fValue. protected . ! Pointer to data buffer ; Definition at line 31 of file TLeafC.h. Libraries for TLeafC:. [legend]; The documentation for this class was generated from the following files:; tree/tree/inc/TLeafC.h; tree/tree/src/TLeafC.cxx. TLeafC. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:54 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLeafC.html:22304,Guid,Guide,22304,doc/master/classTLeafC.html,https://root.cern,https://root.cern/doc/master/classTLeafC.html,1,['Guid'],['Guide']
Usability," . TMatrixD & ; u, . TVectorD & ; sDiag . ). staticprotected . Perform a permutation transformation on the diagonal matrix S', so that matrix S'' = U''^T . ; S' . V'' has diagonal elements ordered such that they do not increase.; Output:; v - (n x n) - matrix H . V' . V'' in the (n x n) part of v; u - (m x m) - matrix U''^T . U'^T . Q^T; sDiag - diagonal of the (m x n) S'' . Definition at line 497 of file TDecompSVD.cxx. ◆ Streamer(). void TDecompSVD::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TDecompBase. ◆ StreamerNVirtual(). void TDecompSVD::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 88 of file TDecompSVD.h. ◆ TransSolve() [1/3]. TVectorD TDecompSVD::TransSolve ; (; const TVectorD & ; b, . Bool_t & ; ok . ). inlineoverridevirtual . Implements TDecompBase.; Definition at line 72 of file TDecompSVD.h. ◆ TransSolve() [2/3]. Bool_t TDecompSVD::TransSolve ; (; TMatrixDColumn & ; b). overridevirtual . Solve A^T x=b assuming the SVD form of A is stored . Solution returned in b. ; Implements TDecompBase.; Definition at line 772 of file TDecompSVD.cxx. ◆ TransSolve() [3/3]. Bool_t TDecompSVD::TransSolve ; (; TVectorD & ; b). overridevirtual . Solve A^T x=b assuming the SVD form of A is stored . Solution returned in b. ; Implements TDecompBase.; Definition at line 723 of file TDecompSVD.cxx. Member Data Documentation. ◆ fSig. TVectorD TDecompSVD::fSig. protected . Definition at line 30 of file TDecompSVD.h. ◆ fU. TMatrixD TDecompSVD::fU. protected . Definition at line 28 of file TDecompSVD.h. ◆ fV. TMatrixD TDecompSVD::fV. protected . Definition at line 29 of file TDecompSVD.h. Libraries for TDecompSVD:. [legend]; The documentation for this class was generated from the following files:; math/matrix/inc/TDecompSVD.h; math/matrix/src/TDecompSVD.cxx. TDecompSVD. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:28 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDecompSVD.html:27539,Guid,Guide,27539,doc/master/classTDecompSVD.html,https://root.cern,https://root.cern/doc/master/classTDecompSVD.html,1,['Guid'],['Guide']
Usability," . Transpose Similarity Matrix Product : B = U^T * A * U for A symmetric returning a symmetric matrix expression: \( B(i,j) = \sum_{k,l} U(k,i) * A(k,l) * U(l,j) \). ; Definition at line 788 of file MatrixFunctions.h. ◆ sqr(). template<class T , unsigned int D, unsigned int D2, class R > . Expr< UnaryOp< Sqr< T >, SMatrix< T, D, D2, R >, T >, T, D, D2, R > ROOT::Math::sqr ; (; const SMatrix< T, D, D2, R > & ; rhs). inline . square of a matrix B(i,j) = A(i,j)*A(i,j) returning a matrix expression ; Definition at line 253 of file UnaryOperators.h. ◆ sqrt(). template<class T , unsigned int D, unsigned int D2, class R > . Expr< UnaryOp< Sqrt< T >, SMatrix< T, D, D2, R >, T >, T, D, D2, R > ROOT::Math::sqrt ; (; const SMatrix< T, D, D2, R > & ; rhs). inline . square root of a matrix (element by element) m2(i,j) = sqrt ( m1(i,j) ) returning a matrix expression ; Definition at line 327 of file UnaryOperators.h. ◆ Times(). template<class T , unsigned int D, unsigned int D2, class R1 , class R2 > . Expr< BinaryOp< MulOp< T >, SMatrix< T, D, D2, R1 >, SMatrix< T, D, D2, R2 >, T >, T, D, D2, typename AddPolicy< T, D, D2, R1, R2 >::RepType > ROOT::Math::Times ; (; const SMatrix< T, D, D2, R1 > & ; lhs, . const SMatrix< T, D, D2, R2 > & ; rhs . ). inline . Element by element matrix multiplication C(i,j) = A(i,j)*B(i,j) returning a matrix expression. ; This is not a matrix-matrix multiplication and works only for matrices of the same dimensions. ; Definition at line 652 of file BinaryOperators.h. ◆ Transpose(). template<class T , unsigned int D1, unsigned int D2, class R > . Expr< TransposeOp< SMatrix< T, D1, D2, R >, T, D1, D2 >, T, D2, D1, typename TranspPolicy< T, D1, D2, R >::RepType > ROOT::Math::Transpose ; (; const SMatrix< T, D1, D2, R > & ; rhs). inline . Matrix Transpose B(i,j) = A(j,i) returning a matrix expression. ; Definition at line 540 of file MatrixFunctions.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__MatrixFunctions.html:17681,Guid,Guide,17681,doc/master/group__MatrixFunctions.html,https://root.cern,https://root.cern/doc/master/group__MatrixFunctions.html,1,['Guid'],['Guide']
Usability, . computation of Fisher coefficients by series of matrix operations ; Implements TMVA::MethodBase.; Definition at line 237 of file MethodFisher.cxx. Member Data Documentation. ◆ fBetw. TMatrixD* TMVA::MethodFisher::fBetw. private . between-class matrix ; Definition at line 139 of file MethodFisher.h. ◆ fCov. TMatrixD* TMVA::MethodFisher::fCov. private . full covariance matrix ; Definition at line 141 of file MethodFisher.h. ◆ fDiscrimPow. std::vector<Double_t>* TMVA::MethodFisher::fDiscrimPow. private . discriminating power ; Definition at line 147 of file MethodFisher.h. ◆ fF0. Double_t TMVA::MethodFisher::fF0. private . offset ; Definition at line 149 of file MethodFisher.h. ◆ fFisherCoeff. std::vector<Double_t>* TMVA::MethodFisher::fFisherCoeff. private . Fisher coefficients. ; Definition at line 148 of file MethodFisher.h. ◆ fFisherMethod. EFisherMethod TMVA::MethodFisher::fFisherMethod. private . Fisher or Mahalanobis. ; Definition at line 136 of file MethodFisher.h. ◆ fMeanMatx. TMatrixD* TMVA::MethodFisher::fMeanMatx. private . Definition at line 132 of file MethodFisher.h. ◆ fSumOfWeightsB. Double_t TMVA::MethodFisher::fSumOfWeightsB. private . sum-of-weights for background training events ; Definition at line 145 of file MethodFisher.h. ◆ fSumOfWeightsS. Double_t TMVA::MethodFisher::fSumOfWeightsS. private . sum-of-weights for signal training events ; Definition at line 144 of file MethodFisher.h. ◆ fTheMethod. TString TMVA::MethodFisher::fTheMethod. private . Fisher or Mahalanobis. ; Definition at line 135 of file MethodFisher.h. ◆ fWith. TMatrixD* TMVA::MethodFisher::fWith. private . within-class matrix ; Definition at line 140 of file MethodFisher.h. Libraries for TMVA::MethodFisher:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/MethodFisher.h; tmva/tmva/src/MethodFisher.cxx. TMVAMethodFisher. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:36 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html:42196,Guid,Guide,42196,doc/master/classTMVA_1_1MethodFisher.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodFisher.html,1,['Guid'],['Guide']
Usability," . const Double_t * ; y, . Option_t * ; chopt . ). pure virtual . Implemented in TGraphPainter. ◆ PaintGrapHist(). virtual void TVirtualGraphPainter::PaintGrapHist ; (; TGraph * ; theGraph, . Int_t ; npoints, . const Double_t * ; x, . const Double_t * ; y, . Option_t * ; chopt . ). pure virtual . Implemented in TGraphPainter. ◆ PaintHelper(). virtual void TVirtualGraphPainter::PaintHelper ; (; TGraph * ; theGraph, . Option_t * ; option . ). pure virtual . Implemented in TGraphPainter. ◆ PaintScatter(). virtual void TVirtualGraphPainter::PaintScatter ; (; TScatter * ; theScatter, . Option_t * ; option . ). pure virtual . Implemented in TGraphPainter. ◆ PaintStats(). virtual void TVirtualGraphPainter::PaintStats ; (; TGraph * ; theGraph, . TF1 * ; fit . ). pure virtual . Implemented in TGraphPainter. ◆ SetHighlight(). virtual void TVirtualGraphPainter::SetHighlight ; (; TGraph * ; theGraph). pure virtual . Implemented in TGraphPainter. ◆ SetPainter(). void TVirtualGraphPainter::SetPainter ; (; TVirtualGraphPainter * ; painter). static . Static function to set an alternative histogram painter. ; Definition at line 47 of file TVirtualGraphPainter.cxx. ◆ Streamer(). void TVirtualGraphPainter::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TVirtualGraphPainter::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 51 of file TVirtualGraphPainter.h. Member Data Documentation. ◆ fgPainter. TVirtualGraphPainter * TVirtualGraphPainter::fgPainter = nullptr. staticprivate . Definition at line 31 of file TVirtualGraphPainter.h. Libraries for TVirtualGraphPainter:. [legend]; The documentation for this class was generated from the following files:; hist/hist/inc/TVirtualGraphPainter.h; hist/hist/src/TVirtualGraphPainter.cxx. TVirtualGraphPainter. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:45 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualGraphPainter.html:15557,Guid,Guide,15557,doc/master/classTVirtualGraphPainter.html,https://root.cern,https://root.cern/doc/master/classTVirtualGraphPainter.html,1,['Guid'],['Guide']
Usability," . const char * ; material, . Float_t ; dx1, . Float_t ; dx2, . Float_t ; dy, . Float_t ; dz . ). TRD1 shape normal constructor. ; Definition at line 45 of file TTRD1.cxx. ◆ ~TTRD1(). TTRD1::~TTRD1 ; (; ). override . TRD1 shape default destructor. ; Definition at line 54 of file TTRD1.cxx. Member Function Documentation. ◆ Class(). static TClass * TTRD1::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TTRD1::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TTRD1::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 41 of file TTRD1.h. ◆ DeclFileName(). static const char * TTRD1::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 41 of file TTRD1.h. ◆ GetDx2(). virtual Float_t TTRD1::GetDx2 ; (; ); const. inlinevirtual . Definition at line 39 of file TTRD1.h. ◆ IsA(). TClass * TTRD1::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TBRIK.; Definition at line 41 of file TTRD1.h. ◆ SetPoints(). void TTRD1::SetPoints ; (; Double_t * ; points); const. overrideprotectedvirtual . Create TRD1 points. ; Reimplemented from TBRIK.; Definition at line 61 of file TTRD1.cxx. ◆ Streamer(). void TTRD1::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TBRIK. ◆ StreamerNVirtual(). void TTRD1::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 41 of file TTRD1.h. Member Data Documentation. ◆ fDx2. Float_t TTRD1::fDx2. protected . Definition at line 30 of file TTRD1.h. Libraries for TTRD1:. [legend]; The documentation for this class was generated from the following files:; graf3d/g3d/inc/TTRD1.h; graf3d/g3d/src/TTRD1.cxx. TTRD1. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:38 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTRD1.html:20167,Guid,Guide,20167,doc/master/classTTRD1.html,https://root.cern,https://root.cern/doc/master/classTTRD1.html,1,['Guid'],['Guide']
Usability," . const char * ; sel, . Option_t * ; opt, . TString & ; selector, . TString & ; objname . ). overridevirtual . Parse the arguments from var, sel and opt and fill the selector and object name accordingly. ; Return 0 in case of success, 1 if libProofDraw is not available. ; Implements TVirtualProofPlayer.; Definition at line 1730 of file TProofPlayer.cxx. ◆ GetEventsProcessed(). Long64_t TProofPlayer::GetEventsProcessed ; (; ); const. inlineoverridevirtual . Implements TVirtualProofPlayer.; Definition at line 206 of file TProofPlayer.h. ◆ GetExitStatus(). EExitStatus TProofPlayer::GetExitStatus ; (; ); const. inlineoverridevirtual . Implements TVirtualProofPlayer.; Definition at line 205 of file TProofPlayer.h. ◆ GetInputList(). TList * TProofPlayer::GetInputList ; (; ); const. inlineoverridevirtual . Implements TVirtualProofPlayer.; Definition at line 161 of file TProofPlayer.h. ◆ GetLearnEntries(). Int_t TProofPlayer::GetLearnEntries ; (; ). overridevirtual . Return the number of entries in the learning phase. ; Implements TVirtualProofPlayer.; Definition at line 1805 of file TProofPlayer.cxx. ◆ GetListOfResults(). TList * TProofPlayer::GetListOfResults ; (; ); const. inlineoverridevirtual . Implements TVirtualProofPlayer.; Definition at line 162 of file TProofPlayer.h. ◆ GetNextPacket(). TDSetElement * TProofPlayer::GetNextPacket ; (; TSlave * ; slave, . TMessage * ; r . ). overridevirtual . Get next packet (may not be used in this class). ; Implements TVirtualProofPlayer.; Reimplemented in TProofPlayerRemote.; Definition at line 1633 of file TProofPlayer.cxx. ◆ GetOutput(). TObject * TProofPlayer::GetOutput ; (; const char * ; name); const. overridevirtual . Get output object by name. ; Implements TVirtualProofPlayer.; Definition at line 476 of file TProofPlayer.cxx. ◆ GetOutputList(). TList * TProofPlayer::GetOutputList ; (; ); const. overridevirtual . Get output list. ; Implements TVirtualProofPlayer.; Definition at line 486 of file TProofPlayer.cxx. ◆ GetPacke",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPlayer.html:30875,learn,learning,30875,doc/master/classTProofPlayer.html,https://root.cern,https://root.cern/doc/master/classTProofPlayer.html,1,['learn'],['learning']
Usability," . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Public Attributes |; Private Attributes |; List of all members ; TMVA::Volume Class ReferenceTMVA. ; Volume for BinarySearchTree. ; volume element: variable space between upper and lower bonds of nvar-dimensional variable space ; Definition at line 47 of file Volume.h. Public Member Functions;  Volume (Double_t *l, Double_t *u, Int_t nvar);  constructor specifying the volume by c-style arrays of doubles ;  ;  Volume (Double_t l, Double_t u);  simple constructors for 1 dimensional values (double) ;  ;  Volume (Float_t *l, Float_t *u, Int_t nvar);  constructor specifying the volume by c-style arrays of floats ;  ;  Volume (Float_t l, Float_t u);  simple constructors for 1 dimensional values (float) ;  ;  Volume (std::vector< Double_t > *l=nullptr, std::vector< Double_t > *u=nullptr);  constructor specifying the volume by std::vectors of doubles ;  ;  Volume (std::vector< Float_t > *l, std::vector< Float_t > *u=nullptr);  constructor specifying the volume by std::vectors of floats ;  ;  Volume (Volume &);  copy constructor ;  ; virtual ~Volume (void);  destructor ;  ; void Delete (void);  delete array of volume bondaries ;  ; Volume & operator= (const Volume &);  assignment operator ;  ; void Print (void) const;  printout of the volume boundaries ;  ; void Scale (Double_t f);  ""scale"" the volume by multiplying each upper and lower boundary by ""f"" ;  ; void ScaleInterval (Double_t f);  ""scale"" the volume by symmetrically blowing up the interval in each dimension ;  . Public Attributes; std::vector< Double_t > * fLower;  vector with lower volume dimensions ;  ; std::vector< Double_t > * fUpper;  vector with upper volume dimensions ;  . Private Attributes; Bool_t fOwnerShip;  flag if ""boundary vector"" is owned by the volume of not ;  . #include <TMVA/Volume.h>; Constructor & Destructor Documentation. ◆ Volume() [1/7]. TMVA::Volume::Volume ; (; std::vec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Volume.html:616,simpl,simple,616,doc/master/classTMVA_1_1Volume.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Volume.html,2,['simpl'],['simple']
Usability," . std::string_view ; ntupleName, . std::string_view ; storage, . const RNTupleWriteOptions & ; options = RNTupleWriteOptions() . ). static . Definition at line 79 of file RNTupleWriter.cxx. ◆ Recreate() [2/2]. std::unique_ptr< ROOT::Experimental::RNTupleWriter > ROOT::Experimental::RNTupleWriter::Recreate ; (; std::unique_ptr< RNTupleModel > ; model, . std::string_view ; ntupleName, . std::string_view ; storage, . const RNTupleWriteOptions & ; options = RNTupleWriteOptions() . ). static . Throws an exception if the model is null. ; Definition at line 71 of file RNTupleWriter.cxx. Friends And Related Symbol Documentation. ◆ Internal::CreateRNTupleWriter. std::unique_ptr< RNTupleWriter > Internal::CreateRNTupleWriter ; (; std::unique_ptr< RNTupleModel > ; , . std::unique_ptr< Internal::RPageSink > ;  . ). friend . Member Data Documentation. ◆ fFillContext. RNTupleFillContext ROOT::Experimental::RNTupleWriter::fFillContext. private . Definition at line 69 of file RNTupleWriter.hxx. ◆ fLastCommittedClusterGroup. NTupleSize_t ROOT::Experimental::RNTupleWriter::fLastCommittedClusterGroup = 0. private . Definition at line 72 of file RNTupleWriter.hxx. ◆ fMetrics. Detail::RNTupleMetrics ROOT::Experimental::RNTupleWriter::fMetrics. private . Definition at line 70 of file RNTupleWriter.hxx. ◆ fZipTasks. std::unique_ptr<Internal::RPageStorage::RTaskScheduler> ROOT::Experimental::RNTupleWriter::fZipTasks. private . The page sink's parallel page compression scheduler if IMT is on. ; Needs to be destructed after the page sink (in the fill context) is destructed and so declared before. ; Definition at line 68 of file RNTupleWriter.hxx. Libraries for ROOT::Experimental::RNTupleWriter:. [legend]; The documentation for this class was generated from the following files:; tree/ntuple/v7/inc/ROOT/RNTupleWriter.hxx; tree/ntuple/v7/src/RNTupleWriter.cxx. ROOTExperimentalRNTupleWriter. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:11 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleWriter.html:13343,Guid,Guide,13343,doc/master/classROOT_1_1Experimental_1_1RNTupleWriter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RNTupleWriter.html,1,['Guid'],['Guide']
Usability," .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Friends |; List of all members ; TDocDirective Class Referenceabstract. . Definition at line 34 of file TDocDirective.h. Public Member Functions; virtual void AddLine (const TSubString &line)=0;  ; virtual void DeleteOutput () const;  ; virtual const char * GetEndTag () const =0;  ; virtual Bool_t GetResult (TString &result)=0;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDocDirective.html:1042,Clear,Clear,1042,doc/master/classTDocDirective.html,https://root.cern,https://root.cern/doc/master/classTDocDirective.html,1,['Clear'],['Clear']
Usability," . ◆ Class_Name(). static const char * TGCocoa::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGCocoa::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 476 of file TGCocoa.h. ◆ ClearArea(). void TGCocoa::ClearArea ; (; Window_t ; id, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Paints a rectangular area in the specified window ""id"" according to the specified dimensions with the window's background pixel or pixmap. ; Parameters. [in]idspecifies the window ; [in]x,ycoordinates, which are relative to the origin ; [in]w,hthe width and height which define the rectangle dimensions . Reimplemented from TVirtualX.; Definition at line 2292 of file TGCocoa.mm. ◆ ClearAreaAux(). void TGCocoa::ClearAreaAux ; (; Window_t ; wid, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). Definition at line 2252 of file TGCocoa.mm. ◆ ClearWindow() [1/2]. void TGCocoa::ClearWindow ; (; ). overridevirtual . Clears the entire area of the current window. ; Reimplemented from TVirtualX.; Definition at line 681 of file TGCocoa.mm. ◆ ClearWindow() [2/2]. void TGCocoa::ClearWindow ; (; Window_t ; id). overridevirtual . Clears the entire area in the specified window and it is equivalent to ClearArea(id, 0, 0, 0, 0) ; Reimplemented from TVirtualX.; Definition at line 2317 of file TGCocoa.mm. ◆ CloseDisplay(). void TGCocoa::CloseDisplay ; (; ). overridevirtual . Closes connection to display server and destroys all windows. ; Reimplemented from TVirtualX.; Definition at line 524 of file TGCocoa.mm. ◆ ClosePixmap(). void TGCocoa::ClosePixmap ; (; ). overridevirtual . Deletes current pixmap. ; Reimplemented from TVirtualX.; Definition at line 2413 of file TGCocoa.mm. ◆ CloseWindow(). void TGCocoa::CloseWindow ; (; ). overridevirtual . Deletes current window. ; Reimplemented from TVirtualX.; Definition at line 840 of file TGCocoa.mm. ◆ CocoaDrawOFF(). void TGCocoa::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCocoa.html:57928,Clear,ClearWindow,57928,doc/master/classTGCocoa.html,https://root.cern,https://root.cern/doc/master/classTGCocoa.html,1,['Clear'],['ClearWindow']
Usability," . ◆ Class_Version(). static constexpr Version_t TCollectionPropertyBrowsable::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 175 of file TBranchBrowsable.h. ◆ DeclFileName(). static const char * TCollectionPropertyBrowsable::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 175 of file TBranchBrowsable.h. ◆ GetBrowsables(). Int_t TCollectionPropertyBrowsable::GetBrowsables ; (; TList & ; li, . const TBranch * ; branch, . const TVirtualBranchBrowsable * ; parent = nullptr . ). static . If the element to browse (given by either parent of branch) contains a collection (TClonesArray or something for which a TVirtualCollectionProxy exists), we will add some special objects to the browser. ; For now there is just one object ""@size"", returning the size of the collection (as in std::list::size(), or TClonesArray::GetEntries()). The objects we create are simply used to forward strings (like ""@size"") to TTreeFormula via our Browse method. These strings are stored in fName. ; Definition at line 777 of file TBranchBrowsable.cxx. ◆ GetDraw(). const char * TCollectionPropertyBrowsable::GetDraw ; (; ); const. inline . return the string passed to TTree::Draw ; Definition at line 158 of file TBranchBrowsable.h. ◆ IsA(). TClass * TCollectionPropertyBrowsable::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 175 of file TBranchBrowsable.h. ◆ Register(). void TCollectionPropertyBrowsable::Register ; (; ). static . Wrapper for the registration method. ; Needed against MSVC, which assigned different addr to the same method, depending on what translation unit you're in... ; Definition at line 872 of file TBranchBrowsable.cxx. ◆ Streamer(). void TCollectionPropertyBrowsable::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ Strea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCollectionPropertyBrowsable.html:17758,simpl,simply,17758,doc/master/classTCollectionPropertyBrowsable.html,https://root.cern,https://root.cern/doc/master/classTCollectionPropertyBrowsable.html,1,['simpl'],['simply']
Usability," ...Definition TGeoMedium.h:23; TGeoNodeA node represent a volume positioned inside another.They store links to both volumes and to the TGeoM...Definition TGeoNode.h:39; TGeoNode::GetVolumeTGeoVolume * GetVolume() constDefinition TGeoNode.h:99; TGeoRotationClass describing rotations.Definition TGeoMatrix.h:168; TGeoTranslationClass describing translations.Definition TGeoMatrix.h:116; TGeoVolumeTGeoVolume, TGeoVolumeMulti, TGeoVolumeAssembly are the volume classes.Definition TGeoVolume.h:43; TGeoVolume::SetVisibilityvoid SetVisibility(Bool_t vis=kTRUE) overrideset visibility of this volumeDefinition TGeoVolume.cxx:2347; TGeoVolume::AddNodevirtual TGeoNode * AddNode(TGeoVolume *vol, Int_t copy_no, TGeoMatrix *mat=nullptr, Option_t *option="""")Add a TGeoNode to the list of nodes.Definition TGeoVolume.cxx:975; TGeoVolume::SetTransparencyvoid SetTransparency(Char_t transparency=0)Definition TGeoVolume.h:376; TGeoVolume::InvisibleAllvoid InvisibleAll(Bool_t flag=kTRUE)Make volume and each of it daughters (in)visible.Definition TGeoVolume.cxx:795; TGeoVolume::SetLineColorvoid SetLineColor(Color_t lcolor) overrideSet the line color.Definition TGeoVolume.cxx:2169; TGeoVolume::GetShapeTGeoShape * GetShape() constDefinition TGeoVolume.h:190; TGeoVolume::FindNodeTGeoNode * FindNode(const char *name) constsearch a daughter inside the list of nodesDefinition TGeoVolume.cxx:1721; eveMngROOT::Experimental::REveManager * eveMngDefinition collection_proxies.C:59; eveGeoBrowservoid eveGeoBrowser(bool showDet=true)Definition eveGeoBrowser.C:169; getNodeFromPathTGeoNode * getNodeFromPath(TGeoNode *top, std::string path)Definition eveGeoBrowser.C:9; rootgeomTGeoNode * rootgeom()Definition eveGeoBrowser.C:47; testCmsGeoTGeoNode * testCmsGeo()Definition eveGeoBrowser.C:20; nconst Int_t nDefinition legend1.C:16; ROOT::ExperimentalDefinition RDirectory.hxx:30. tutorialseve7eveGeoBrowser.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:07 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/eveGeoBrowser_8C_source.html:13661,Guid,Guide,13661,doc/master/eveGeoBrowser_8C_source.html,https://root.cern,https://root.cern/doc/master/eveGeoBrowser_8C_source.html,1,['Guid'],['Guide']
Usability," .x myfunc.C++(10,20);. The user may sometimes try to compile a script before it has loaded all the; needed shared libraries. In this case we want to be helpfull and output a; list of the unresolved symbols. So if the loading of the created shared; library fails, we will try to build a executable that contains the; script. The linker should then output a list of missing symbols. To support this we provide a TSystem::SetMakeExe() function, that sets the; directive telling how to create an executable. The loader will need; to be informed of all the libraries available. The information about; the libraries that has been loaded by .L and TSystem::Load() is accesible; to the script compiler. However, the information about; the libraries that have been selected at link time by the application; builder (like the root libraries for root.exe) are not available and need; to be explictly listed in fLinkedLibs (either by default or by a call to; TSystem::SetLinkedLibs()). To simplify customization we could also add to the .rootrc support for the; variables. Unix.*.Root.IncludePath: -I$ROOTSYS/include; WinNT.*.Root.IncludePath: -I%ROOTSYS%/include. Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib .... And also support for MakeSharedLibs() and MakeExe(). (the ... have to be replaced by the actual values and are here only to; shorten this comment). Int_t GetAclicProperties() const; Return the ACLiC properties field. See EAclicProperties for details; on the semantic of each bit. const char * GetBuildArch() const; Return the build architecture. const char * GetBuildCompiler() const; Return the build compiler. const char * GetBuildCompilerVersion() const; Return the build compiler version. const char * GetBuildNode() const; Return the build node name. const char * GetBuildDir() const; Return the path of the build directory. const char * GetFlagsDebug() const; Return the debug flags. const char * GetFlagsOpt() const; Return the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSystem.html:41873,simpl,simplify,41873,root/html528/TSystem.html,https://root.cern,https://root.cern/root/html528/TSystem.html,6,['simpl'],['simplify']
Usability," // Cleanup; 2681 delete paramPdf ;; 2682 delete cloneFunc ;; 2683 for (std::vector<RooCurve*>::iterator i=cvec.begin() ; i!=cvec.end() ; ++i) {; 2684 delete (*i) ;; 2685 }; 2686 ; 2687 } else {; 2688 ; 2689 // *** Linear Method ***; 2690 //; 2691 // Make a one-sigma up- and down fluctation for each parameter and visualize; 2692 // a from a linearized calculation as follows; 2693 //; 2694 // error(x) = F(a) C_aa' F(a'); 2695 //; 2696 // Where F(a) = (f(x,a+da) - f(x,a-da))/2; 2697 // and C_aa' is the correlation matrix; 2698 ; 2699 // Strip out parameters with zero error; 2700 RooArgList fpf_stripped;; 2701 for (auto const* frv : static_range_cast<RooRealVar*>(fr.floatParsFinal())) {; 2702 if (frv->getError() > frv->getVal() * std::numeric_limits<double>::epsilon()) {; 2703 fpf_stripped.add(*frv);; 2704 }; 2705 }; 2706 ; 2707 // Clone self for internal use; 2708 RooAbsReal* cloneFunc = static_cast<RooAbsReal*>(cloneTree()) ;; 2709 RooArgSet cloneParams;; 2710 cloneFunc->getObservables(&fpf_stripped, cloneParams) ;; 2711 RooArgSet errorParams{cloneParams};; 2712 if(params) {; 2713 // clear and fill errorParams only with parameters that both in params and cloneParams; 2714 cloneParams.selectCommon(*params, errorParams);; 2715 }; 2716 ; 2717 ; 2718 // Make list of parameter instances of cloneFunc in order of error matrix; 2719 RooArgList paramList ;; 2720 const RooArgList& fpf = fr.floatParsFinal() ;; 2721 std::vector<int> fpf_idx ;; 2722 for (std::size_t i=0 ; i<fpf.size() ; i++) {; 2723 RooAbsArg* par = errorParams.find(fpf[i].GetName()) ;; 2724 if (par) {; 2725 paramList.add(*par) ;; 2726 fpf_idx.push_back(i) ;; 2727 }; 2728 }; 2729 ; 2730 std::vector<RooCurve *> plusVar;; 2731 std::vector<RooCurve *> minusVar;; 2732 ; 2733 // Create std::vector of plus,minus variations for each parameter; 2734 ; 2735 TMatrixDSym V(paramList.size() == fr.floatParsFinal().size() ?; 2736 fr.covarianceMatrix():; 2737 fr.reducedCovarianceMatrix(paramList)) ;; 2738 ; 2739 ; 2740 for (std",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:119233,clear,clear,119233,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['clear'],['clear']
Usability," // create a TChain instead of a TTree; TChain *chain = new TChain(""EventTree"", ""Event Data Chain"");; // add our file; chain->Add(""http://root.cern/files/introtutorials/eventdata.root"");; // tell the chain that we want to use PROOF; chain->SetProof();; // run the selector; chain->Process(""ProofEventSelector.C+"");. For the functions used, see the documentation of the TChain constructor and TChain::Add().; You need to register the histogram in your selector's output list, by passing it to GetOutputList()->Add(hist), ideally right after you have created it with new TH1F(...). If you don't add it to the output list, PROOF cannot know that this histogram is the result of the analysis.; Note: If the network is good, try to take this file instead: http://root.cern/files/introtutorials/eventdata-10k.root, it contains more events.; Then the TChain::Process() call is the same than before, but it will now use all your CPUs!; . ‹ Histogramming in a Selector; up; The End ›. Navigate through this book; Meet a TTree; Accessing a TTree With a TBrowser; Using TTree::Draw() to access a TTree; TTree and Its Data; Using a Macro to Read a TTree; Histogramming; Fit Panel; Compiling Your Code (also known as ACLiC); Accessing a TTree With a TSelector; Histogramming in a Selector; Using a TSelector with PROOF; The End. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. © Copyright CERN 2014-18. All rights reserved. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/using-tselector-proof.html:3953,Guid,Guides,3953,d/using-tselector-proof.html,https://root.cern,https://root.cern/d/using-tselector-proof.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability," ///< Label for list tree; 149 TGLabel *fLbl2; ///< Label for list view; 150 TGHorizontalFrame *fBFrame; ///< Button frame; 151 TGHorizontalFrame *fHpb; ///< Progress bar frame; 152 TGHProgressBar *fProgressBar; ///< Progress bar; 153 TGLabel *fBLbl4; ///< Label for input list entry; 154 TGLabel *fBLbl5; ///< Label for output list entry; 155 TGTextEntry *fBarListIn; ///< Tree input event list name entry; 156 TGTextEntry *fBarListOut; ///< Pree output event list name entry; 157 TGPictureButton *fDRAW; ///< DRAW button; 158 TGTextButton *fSPIDER; ///< SPIDER button; 159 TGPictureButton *fSTOP; ///< Interrupt current command (not yet); 160 TGPictureButton *fREFR; ///< REFRESH button ///<ia; 161 TGStatusBar *fStatusBar; ///< Status bar; 162 TGComboBox *fCombo; ///< Combo box with session records; 163 TGPictureButton *fBGFirst;; 164 TGPictureButton *fBGPrevious;; 165 TGPictureButton *fBGRecord;; 166 TGPictureButton *fBGNext;; 167 TGPictureButton *fBGLast;; 168 TGTextButton *fReset; ///< clear expression's entries; 169///@}; 170 ; 171///@{; 172/// @name ListTree; 173 TGCanvas *fTreeView; ///< ListTree canvas container; 174 TGListTree *fLt; ///< ListTree with file and tree items; 175///@}; 176 ; 177///@{; 178/// @name ListView; 179 TGListView *fListView; ///< ListView with branches and leaves; 180 TTVLVContainer *fLVContainer; ///< Container for listview; 181 ; 182 TList *fWidgets; ///< List of widgets to be deleted; 183///@}; 184 ; 185 ; 186private:; 187 ; 188 void BuildInterface();; 189 const char *Cut();; 190 Int_t Dimension();; 191 const char *EmptyBrackets(const char* name);; 192 const char *Ex();; 193 const char *Ey();; 194 const char *Ez();; 195 const char *En(Int_t n);; 196 void MapBranch(TBranch *branch, const char *prefix="""", TGListTreeItem *parent = nullptr, bool listIt = true);; 197 void MapOptions(Long_t parm1);; 198 void MapTree(TTree *tree, TGListTreeItem *parent = nullptr, bool listIt = true);; 199 void SetFile();; 200 const char *ScanList();; 201 void SetP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeViewer_8h_source.html:6137,clear,clear,6137,doc/master/TTreeViewer_8h_source.html,https://root.cern,https://root.cern/doc/master/TTreeViewer_8h_source.html,1,['clear'],['clear']
Usability," //; 20// //; 21// Simple prototype random number generator class (periodicity = 10**9) //; 22// //; 23//////////////////////////////////////////////////////////////////////////; 24 ; 25#include ""TNamed.h""; 26 ; 27class TRandom : public TNamed, public ROOT::Math::TRandomEngine {; 28 ; 29protected:; 30 UInt_t fSeed; //Random number generator seed; 31 ; 32public:; 33 TRandom(UInt_t seed=65539);; 34 ~TRandom() override;; 35 virtual Int_t Binomial(Int_t ntot, Double_t prob);; 36 virtual Double_t BreitWigner(Double_t mean=0, Double_t gamma=1);; 37 virtual void Circle(Double_t &x, Double_t &y, Double_t r);; 38 virtual Double_t Exp(Double_t tau);; 39 virtual Double_t Gaus(Double_t mean=0, Double_t sigma=1);; 40 virtual UInt_t GetSeed() const;; 41 virtual UInt_t Integer(UInt_t imax);; 42 virtual Double_t Landau(Double_t mean=0, Double_t sigma=1);; 43 virtual ULong64_t Poisson(Double_t mean);; 44 virtual Double_t PoissonD(Double_t mean);; 45 virtual void Rannor(Float_t &a, Float_t &b);; 46 virtual void Rannor(Double_t &a, Double_t &b);; 47 virtual void ReadRandom(const char *filename);; 48 virtual void SetSeed(ULong_t seed=0);; 49 Double_t Rndm() override;; 50 // keep for backward compatibility; 51 virtual Double_t Rndm(Int_t ) { return Rndm(); }; 52 virtual void RndmArray(Int_t n, Float_t *array);; 53 virtual void RndmArray(Int_t n, Double_t *array);; 54 virtual void Sphere(Double_t &x, Double_t &y, Double_t &z, Double_t r);; 55 virtual Double_t Uniform(Double_t x1=1);; 56 virtual Double_t Uniform(Double_t x1, Double_t x2);; 57 virtual void WriteRandom(const char *filename) const;; 58 ; 59 ClassDefOverride(TRandom,3) //Simple Random number generator (periodicity = 10**9); 60};; 61 ; 62R__EXTERN TRandom *gRandom;; 63 ; 64#endif; R__EXTERN#define R__EXTERNDefinition DllImport.h:26; b#define b(i)Definition RSha256.hxx:100; a#define a(i)Definition RSha256.hxx:99; Int_tint Int_tDefinition RtypesCore.h:45; ULong_tunsigned long ULong_tDefinition RtypesCore.h:55; Float_tfloat Float",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom_8h_source.html:2451,Simpl,Simple,2451,doc/master/TRandom_8h_source.html,https://root.cern,https://root.cern/doc/master/TRandom_8h_source.html,1,['Simpl'],['Simple']
Usability," 0 = Simple - simple display modes using one color only; 1 = Light - the shading is carried out according to the position of the fictive light source; 2 = Height - the shading is carried out according to the channel contents; 3 = LightHeight - combination of two previous shading algorithms (one can control the weight between both algorithms). “Display modes” can take the following values:. 1 = Points; 2 = Grid; 3 = Contours; 4 = Bars; 5 = LinesX; 6 = LinesY; 7 = BarsX; 8 = BarsY; 9 = Needles; 10 = Surface; 11 = Triangles. These parameters can be set by using the “dm” operator in the option.; h2->Draw(""SPEC dm(1,2)"");; The above example draws the histogram using the “Light Display mode group” and the “Grid Display mode”. The following tables summarize all the possible combinations of both groups:. Points; Grid; Contours; Bars; LinesX; LinesY. Simple; x; x; x; x; x; x. Light; x; x. x; x. Height; x; x; x; x; x; x. LightHeight; x; x. x; x. BarsX; BarsY; Needles; Surface; Triangles. Simple; x; x; x. x. Light. x; x. Height; x; x. x; x. LightHeight. x; x. The “Pen Attributes” can be changed using pa(color,style,width). Next example sets line color to 2, line type to 1 and line width to 2. Note that if pa() is not specified, the histogram line attributes are used:; h2->Draw(""SPEC dm(1,2) pa(2,1,2)"");; The number of “Nodes” can be changed with n(nodesx,nodesy). Example:; h2->Draw(""SPEC n(40,40)"");; Sometimes the displayed region is rather large. When displaying all channels the pictures become very dense and complicated. It is very difficult to understand the overall shape of data. “n(nx,ny)” allows to change the density of displayed channels. Only the channels coinciding with given nodes are displayed.; The visualization “Angles” can be changed with “a(alpha,beta,view)”: “alpha” is the angle between the bottom horizontal screen line and the displayed space on the right side of the picture and “beta” on the left side, respectively. One can rotate the 3-d space around the vert",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:102645,Simpl,Simple,102645,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['Simpl'],['Simple']
Usability," 0 on success, -1 otherwise ; Definition at line 8967 of file TProof.cxx. ◆ RemoveWorkers(). Int_t TProof::RemoveWorkers ; (; TList * ; workerList). protected . Used for shuting down the workres after a query is finished. ; Sends each of the workers from the workerList, a kPROOF_STOP message. If the workerList == 0, shutdown all the workers. ; Definition at line 1597 of file TProof.cxx. ◆ RequestStagingDataSet(). Bool_t TProof::RequestStagingDataSet ; (; const char * ; dataset). virtual . Allows users to request staging of a particular dataset. ; Requests are saved in a special dataset repository and must be honored by the endpoint. ; Reimplemented in TProofLite.; Definition at line 11020 of file TProof.cxx. ◆ Reset(). void TProof::Reset ; (; const char * ; url, . Bool_t ; hard = kFALSE . ). static . Wrapper around TProofMgr::Reset(...). ; Definition at line 11736 of file TProof.cxx. ◆ ResetEnvVars(). void TProof::ResetEnvVars ; (; ). static . Clear the list of environment variables passed to proofserv on the master and slaves. ; Definition at line 11796 of file TProof.cxx. ◆ ResetMergePrg(). void TProof::ResetMergePrg ; (; ). private . Reset the merge progress notificator. ; Definition at line 2465 of file TProof.cxx. ◆ ResetMergers(). void TProof::ResetMergers ; (; ). inlineprivate . Definition at line 691 of file TProof.h. ◆ ResetProgressDialog(). void TProof::ResetProgressDialog ; (; const char * ; sel, . Int_t ; sz, . Long64_t ; fst, . Long64_t ; ent . ). Reset progress dialog. ; Definition at line 9299 of file TProof.cxx. ◆ ResetProgressDialogStatus(). void TProof::ResetProgressDialogStatus ; (; ). inline . Definition at line 1021 of file TProof.h. ◆ RestoreActiveList(). Int_t TProof::RestoreActiveList ; (; ). private . Restore saved list of active workers. ; Definition at line 11557 of file TProof.cxx. ◆ Retrieve() [1/2]. Int_t TProof::Retrieve ; (; const char * ; ref, . const char * ; path = 0 . ). Send retrieve request for the query specified by ref. ; If p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:133997,Clear,Clear,133997,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['Clear'],['Clear']
Usability," 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. Double_tfConfidenceLevelconfidence level; Double_tfLowerLimitlower interval limit; RooArgSetfParametersset containing the parameter of interest; Double_tfUpperLimitupper interval limit. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; SimpleInterval(const char* name); Default constructor. SimpleInterval(const char* name, const RooRealVar& var, Double_t lower, Double_t upper, Double_t cl); Alternate constructor. ~SimpleInterval(); Destructor. Bool_t IsInInterval(const RooArgSet& ) const. RooArgSet* GetParameters() const; return cloned list of parameters. Bool_t CheckParameters(const RooArgSet& ) const. explicit SimpleInterval(const char* name = 0); default constructors. void SetConfidenceLevel(Double_t ); set the confidence level for the interval. Simple interval is defined at construction time so this function; has no effect. {}. Double_t ConfidenceLevel() const; return the confidence interval. {return fConfidenceLevel;}. Double_t LowerLimit(); return the interval lower limit. {return fLowerLimit;}. Double_t UpperLimit(); return the interval upper limit. {return fUpperLimit;}. » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id: SimpleInterval.h 31285 2009-11-18 16:38:36Z moneta $ » Last generated: 2009-12-07 13:49; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__SimpleInterval.html:6492,Simpl,SimpleInterval,6492,root/html526/RooStats__SimpleInterval.html,https://root.cern,https://root.cern/root/html526/RooStats__SimpleInterval.html,1,['Simpl'],['SimpleInterval']
Usability," 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; static intios_base::xalloc(). protected:. static Int_tTQObject::CheckConnectArgs(TQObject* sender, TClass* sender_class, const char* signal, TClass* receiver_class, const char* slot); Int_tTGWidget::ClearFlags(Int_t flags); static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTGTextView::Copy(TObject&) const; virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidTGView::DoRedraw(); virtual voidTGFrame::Draw3dRectangle(UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h); virtual voidTGTextView::DrawRegion(Int_t x, Int_t y, UInt_t w, UInt_t h); static FontStruct_tTGTextView::GetDefaultFontStruct(); static const TGGC&TGTextView::GetDefaultGC(); static const TGGC&TGTextView::GetDefaultSelectedBackgroundGC(); static const TGGC&TGTextView::GetDefaultSelectedGC(); static Time_tTGFrame::GetLastClick(); TStringTGFrame::GetOptionString() const; const TGResourcePool*TGFrame::GetResourcePool() const; virtual void*TGFrame::GetSender(); virtual const char*TQObject::GetSenderClassName() const; virtual voidTGTextView::HLayout(); voidTGTextView::Init(Pixel_t bg); virtual Bool_tTGView::ItemLayout(); voidTObject::MakeZombie(); virtual voidTGTextView::Mark(Long_t xPos, Long_t yPos); TGWindow&TGWindow::operator=(const TGWindow& tgw); Int_tTGWidget::SetFlags(Int_t flags); virtual voidTGFrame::StartGuiBuilding(Bool_t on = kTRUE); virtual voidTGTextView::UnMark(); virtual voidTGView::UpdateRegion(Int_t x, Int_t y, UInt_t w, UInt_t h); virtual voidTGTextView::VLayout(). Data Members; public:. enum TGView::[unnamed] { kNoHSB; kNoVSB; kHorizontal; kVertical; };; enum TGFrame::[unnamed] { kDeleteWindowCalled; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGTextViewostream.html:21661,Clear,ClearFlags,21661,root/html534/TGTextViewostream.html,https://root.cern,https://root.cern/root/html534/TGTextViewostream.html,1,['Clear'],['ClearFlags']
Usability," 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTGLVContainer::AddItem(TGLVEntry* item); virtual TGFileItem*AddRemoteFile(TObject* obj, const TGPicture* ipic = 0, const TGPicture* ilpic = 0); virtual voidTGContainer::AdjustPosition(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGContainer::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidChangeDirectory(const char* path); virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual voidTGContainer::ClearViewPort(); virtual voidTGContainer::Clicked(TGFrame* f, Int_t btn)SIGNAL ; virtual voidTGContainer::Clicked(TGFrame* f, Int_t btn, Int_t x, Int_t y)SIGNAL ; virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); Bool_tTGFrame::Contains(Int_t x, Int_t y) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTGContainer::CurrentChanged(TGFrame* f)SIGNAL ; virtual voidTGContaine",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGFileContainer.html:1967,Clear,Clear,1967,root/html528/TGFileContainer.html,https://root.cern,https://root.cern/root/html528/TGFileContainer.html,6,['Clear'],['Clear']
Usability," 0); voidTProof::AddInput(TObject* obj); voidTProof::AddInputData(TObject* obj, Bool_t push = kFALSE); virtual voidTObject::AppendPad(Option_t* option = """"); Int_tTProof::Archive(Int_t query, const char* url); Int_tTProof::Archive(const char* queryref, const char* url = 0); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTProof::Browse(TBrowser* b); voidTProof::cd(Int_t id = -1); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; Int_tTProof::CleanupSession(const char* sessiontag); virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTProof::ClearCache(const char* file = 0); voidTProof::ClearData(UInt_t what = kUnregistered, const char* dsname = 0); virtual voidTProof::ClearDataSetCache(const char* dataset = 0); voidTProof::ClearFeedback(); voidTProof::ClearInput(); voidTProof::ClearInputData(TObject* obj = 0); voidTProof::ClearInputData(const char* name); Int_tTProof::ClearPackage(const char* package); Int_tTProof::ClearPackages(); virtual TObject*TNamed::Clone(const char* newname = """") const; voidTProof::Close(Option_t* option = """"); voidTProof::CloseProgressDialog()SIGNAL ; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTNamed::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTNamed::Copy(TObject& named) const; TDrawFeedback*TProof::CreateDrawFeedback(); voidTProof::DataSetStatus(const char*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofCondor.html:2217,Clear,ClearInput,2217,root/html528/TProofCondor.html,https://root.cern,https://root.cern/root/html528/TProofCondor.html,6,['Clear'],['ClearInput']
Usability," 0.7032954, 0.6029015, 0.5600163, 0.7477068, 1.188785, 1.938228, 2.602717,; 36 3.472962, 4.465014, 5.177035, ], dtype=np.float32,); 37# fmt: on; 38 ; 39# The histogram are filled with bins defined in the array x.; 40h = ROOT.TH1F(""h"", ""Example of several fits in subranges"", n_x, 85, 134); 41h.SetMaximum(7); 42 ; 43for i, x_i in enumerate(x):; 44 h.SetBinContent(i + 1, x[i]); 45 ; 46# Define the parameter array for the total function.; 47par = np.zeros(9); 48 ; 49# Three TF1 objects are created, one for each subrange.; 50g1 = ROOT.TF1(""g1"", ""gaus"", 85, 95); 51g2 = ROOT.TF1(""g2"", ""gaus"", 98, 108); 52g3 = ROOT.TF1(""g3"", ""gaus"", 110, 121); 53 ; 54# The total is the sum of the three, each has three parameters.; 55total = ROOT.TF1(""total"", ""gaus(0)+gaus(3)+gaus(6)"", 85, 125); 56total.SetLineColor(2); 57 ; 58# The canvas that the histograms and fit functions are drawn on.; 59c = ROOT.TCanvas(""multifit"", ""multifit"", 800, 400); 60 ; 61# Fit each function and add it to the list of functions. By default, TH1::Fit(); 62# fits the function on the defined histogram range. You can specify the ""R""; 63# option in the second parameter of TH1::Fit() to restrict the fit to the range; 64# specified in the TF1 constructor. Alternatively, you can also specify the; 65# range in the call to TH1::Fit(), which we demonstrate here with the 3rd; 66# Gaussian. The ""+"" option needs to be added to the later fits to not replace; 67# existing fitted functions in the histogram.; 68h.Fit(g1, ""R""); 69h.Fit(g2, ""R+""); 70h.Fit(g3, ""+"", """", 110, 121);; 71 ; 72# Get the parameters from the fit.; 73g1.GetParameters(par[:3]); 74g2.GetParameters(par[3:6]); 75g3.GetParameters(par[6:]); 76 ; 77print(par); 78 ; 79# Use the parameters on the sum.; 80total.SetParameters(par); 81 ; 82h.Draw(); 83h.Fit(total, ""R+""); 84 ; 85# Save the plot for later inspection.; 86c.SaveAs(""multifit.png""). tutorialsfitmultifit.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:07 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/multifit_8py_source.html:3540,Guid,Guide,3540,doc/master/multifit_8py_source.html,https://root.cern,https://root.cern/doc/master/multifit_8py_source.html,1,['Guid'],['Guide']
Usability," 0; , Balance = 1; , Robustness = 2; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  RooMinimizer (RooAbsReal &function, Config const &cfg={});  Construct MINUIT interface to given function. ;  ;  ~RooMinimizer () override;  Destructor. ;  ; void applyCovarianceMatrix (TMatrixDSym const &V);  Apply results of given external covariance matrix. ;  ; void clearStatusHistory ();  Clears the Minuit status history. ;  ; RooPlot * contour (RooRealVar &var1, RooRealVar &var2, double n1=1.0, double n2=2.0, double n3=0.0, double n4=0.0, double n5=0.0, double n6=0.0, unsigned int npoints=50);  Create and draw a TH2 with the error contours in the parameters var1 and var2. ;  ; int evalCounter () const;  ; auto fitter ();  Return underlying ROOT fitter object. ;  ; ROOT::Math::IMultiGenFunction * getMultiGenFcn () const;  ; int getNPar () const;  ; int getPrintLevel ();  Get the MINUIT internal printing level. ;  ; int hesse ();  Execute HESSE. ;  ; int improve ();  Execute IMPROVE. ;  ; TClass * IsA () const override;  ; RooFit::OwningPtr< RooFitResult > lastMinuitFit ();  ; int migrad ();  Execute MIGRAD. ;  ; int minimize (const char *type, const char *alg=nullptr);  Minimise the function passed in the constructor. ;  ; std::string const & minimizerType () const;  ; int minos ();  Execute MINOS. ;  ; int minos (const RooArgSet &minosParamList);  Execute MINOS for gi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMinimizer.html:2608,clear,clearStatusHistory,2608,doc/master/classRooMinimizer.html,https://root.cern,https://root.cern/doc/master/classRooMinimizer.html,2,"['Clear', 'clear']","['Clears', 'clearStatusHistory']"
Usability," 1). NOT USED resolution: determines resolution of the neighbouring peaks default value is 1 correspond to 3 sigma distance between peaks. ; Higher values allow higher resolution (smaller distance between peaks. May be set later through SetResolution. ; Definition at line 344 of file TSpectrum.cxx. ◆ SmoothMarkov(). const char * TSpectrum::SmoothMarkov ; (; Double_t * ; source, . Int_t ; ssize, . Int_t ; averWindow . ). One-dimensional markov spectrum smoothing function. ; This function calculates smoothed spectrum from source spectrum based on Markov chain method. The result is placed in the array pointed by source pointer. On successful completion it returns 0. On error it returns pointer to the string describing error.; Parameters:. source: pointer to the array of source spectrum; ssize: length of source array; averWindow: width of averaging smoothing window. The goal of this function is the suppression of the statistical fluctuations. The algorithm is based on discrete Markov chain, which has very simple invariant distribution:. \[; U_2 = \frac{p_{1,2}}{p_{2,1}}U_1, U_3 = \frac{p_{2,3}}{p_{3,2}}U_2U_1, ... , U_n = \frac{p_{n-1,n}}{p_{n,n-1}}U_{n-1}...U_2U_1; \]. \( U_1\) being defined from the normalization condition \( \sum_{i=1}^{n} U_i=1\). \( n \) is the length of the smoothed spectrum and ; \[; p_{i,i\pm 1} = A_i\sum_{k=1}^{m} exp\left[ \frac{y(i\pm k)-y(i)}{y(i\pm k)+y(i)}\right]; \]. Reference:. Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM A 376 (1996), 451. Example 14 - script Smoothing.C; ; void Smoothing() {; Int_t i;; const Int_t nbins = 1024;; Double_t xmin = 0;; Double_t xmax = nbins;; Double_t source[nbins];; gROOT->ForceStyle();; ; TString dir = gROOT->GetTutorialDir();; TString file = dir+""/spectrum/TSpectrum.root"";; TFile *f = new TFile(file.Data());; TH1F *h = (TH1F*) f->Get(""back1"");; h->SetTitle(""Smoothed spectrum for m=3"");; ; for (i = 0; i < nbins; i++) source[i]=h->GetBinContent(i + 1);; h->SetAxisRange(1,1024);; h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum.html:65934,simpl,simple,65934,doc/master/classTSpectrum.html,https://root.cern,https://root.cern/doc/master/classTSpectrum.html,1,['simpl'],['simple']
Usability," 1.);; TF3 * gx = new TF3(""gaus1"",""gaus(x)"");; gx->SetParameters(1,0,1);; h3->FillRandom(""gaus1"");; h3->SetFillColor(kBlue);; ; comp->AddTH3(h1);; comp->AddTH3(h2, TGLTH3Composition::kSphere);; comp->AddTH3(h3);; ; comp->Draw();; ; TPaveLabel *title = new TPaveLabel(0.04, 0.86, 0.96, 0.98,; ""TH3 composition."");; title->SetFillColor(32);; title->Draw();; }; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; kRed@ kRedDefinition Rtypes.h:66; kGreen@ kGreenDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TF1::SetParametersvirtual void SetParameters(const Double_t *params)Definition TF1.h:677; TF3A 3-Dim function with parameters.Definition TF3.h:28; TGLTH3CompositionDefinition TGLTH3Composition.h:27; TGLTH3Composition::AddTH3void AddTH3(const TH3 *hist, ETH3BinShape shape=kBox)Add TH3 into collection.Definition TGLTH3Composition.cxx:42; TGLTH3Composition::kSphere@ kSphereDefinition TGLTH3Composition.h:34; TH1::FillRandomvirtual void FillRandom(const char *fname, Int_t ntimes=5000, TRandom *rng=nullptr)Fill histogram following distribution in function fname.Definition TH1.cxx:3519; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TH3F3-D histogram with a float per channel (see TH1 documentation)Definition TH3.h:317; TPaveLabelA Pave (see TPave) with a text centered in the Pave.Definition TPaveLabel.h:20; TPaveLabel::Drawvoid Draw(Option_t *option="""") overrideDraw this pavelabel with its current attributes.Definition TPaveLabel.cxx:88; TStyle::SetCanvasPreferGLvoid SetCanvasPreferGL(Bool_t prefer=kTRUE)Definition TStyle.h:341; h1TH1F * h1Definition legend1.C:5; AuthorTimur Pocheptsov ; Definition in file glh3c.C. tutorialsglglh3c.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:28 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/glh3c_8C.html:2799,Guid,Guide,2799,doc/master/glh3c_8C.html,https://root.cern,https://root.cern/doc/master/glh3c_8C.html,1,['Guid'],['Guide']
Usability," 1.6.6 $ROOTSYS/<library>; The directories we explored above are available when downloading the binaries. When downloading the source you also get a directory for each library with the corresponding header and source files, located in the inc and src subdirectories. To see what classes are in a library, you can check the <library>/inc directory for the list of class definitions. For example, the physics library libPhysics.so contains these class definitions:; > ls -m $ROOTSYS/math/physics/inc/; LinkDef.h, TFeldmanCousins.h, TGenPhaseSpace.h, TLorentzRotation.h,; TLorentzVector.h, TQuaternion.h, TRobustEstimator.h, TRolke.h,; TRotation.h, TVector2.h, TVector3.h; 1.7 How to Find More Information; website The ROOT web site has up to date documentation. The ROOT source code automatically generates this documentation, so each class is explicitly documented on its own web page, which is always up to date with the latest official release of ROOT.; The ROOT Reference Guide web pages can be found at class index reference guide https://root.cern/doc/master/classes.html. Each page contains a class description, and an explanation of each method. It shows the class inheritance tree and lets you jump to the parent class page by clicking on the class name. If you want more details, you can even see the source. There is a help page available in the little box on the upper right hand side of each class documentation page. You can see on the next page what a typical class documentation web page looks like. The ROOT web site also contains in addition to this Reference Guide, “How To’s”, a list of publications and example applications.; 1.7.1 Class Reference Guide; The top of any class reference page lets you jump to different parts of the documentation. The first line links to the class index and the index for the current module (a group of classes, often a library). The second line links to the ROOT homepage and the class overviews. The third line links the source information - a HTM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:28591,Guid,Guide,28591,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability," 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.603058 0.0404042 4443.23 0; : ; : Elapsed time for training with 3200 events: 6.25 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_LSTM : [dataset] : Evaluation of TMVA_LSTM on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.214 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: TMVA_DNN for Classification; : ; : Start of deep neural network training on CPU using MT, nthreads = 4; : ; : ***** Deep Learning Network *****; DEEP NEURAL NETWORK: Depth = 4 Input = ( 1, 1, 300 ) Batch size = 256 Loss function = C; Layer 0 DENSE Layer: ( Input = 300 , Width = 64 ) Output = ( 1 , 256 , 64 ) Activation Function = Tanh; Layer 1 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 256 , 64 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 256 , 64 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 64 , Width = 1 ) Output = ( 1 , 256 , 1 ) Activation Function = Identity; : Using 2560 events for training and 640 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.805395; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.725372 0.686272 0.190597 0.0152439 14599.1 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.695636 0.683324 0.189128 0.015082 14708.8 0; : 3 | 0.691864 0.689576",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html:17365,Learn,Learning,17365,doc/master/TMVA__RNN__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html,1,['Learn'],['Learning']
Usability," 12 used only by TProfile3D); 183 enum {; 184 kNstat = 13 ///< Size of statistics data (up to TProfile3D); 185 };; 186 ; 187 ; 188 ~TH1() override;; 189 ; 190 virtual Bool_t Add(TF1 *h1, Double_t c1=1, Option_t *option="""");; 191 virtual Bool_t Add(const TH1 *h1, Double_t c1=1);; 192 virtual Bool_t Add(const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1); // *MENU*; 193 virtual void AddBinContent(Int_t bin);; 194 virtual void AddBinContent(Int_t bin, Double_t w);; 195 static void AddDirectory(Bool_t add=kTRUE);; 196 static Bool_t AddDirectoryStatus();; 197 void Browse(TBrowser *b) override;; 198 virtual Bool_t CanExtendAllAxes() const;; 199 virtual Double_t Chi2Test(const TH1* h2, Option_t *option = ""UU"", Double_t *res = nullptr) const;; 200 virtual Double_t Chi2TestX(const TH1* h2, Double_t &chi2, Int_t &ndf, Int_t &igood,Option_t *option = ""UU"", Double_t *res = nullptr) const;; 201 virtual Double_t Chisquare(TF1 * f1, Option_t *option = """") const;; 202 virtual void ClearUnderflowAndOverflow();; 203 virtual Double_t ComputeIntegral(Bool_t onlyPositive = false);; 204 TObject* Clone(const char *newname = """") const override;; 205 void Copy(TObject &hnew) const override;; 206 virtual void DirectoryAutoAdd(TDirectory *);; 207 Int_t DistancetoPrimitive(Int_t px, Int_t py) override;; 208 virtual Bool_t Divide(TF1 *f1, Double_t c1=1);; 209 virtual Bool_t Divide(const TH1 *h1);; 210 virtual Bool_t Divide(const TH1 *h1, const TH1 *h2, Double_t c1=1, Double_t c2=1, Option_t *option=""""); // *MENU*; 211 void Draw(Option_t *option = """") override;; 212 virtual TH1 *DrawCopy(Option_t *option="""", const char * name_postfix = ""_copy"") const;; 213 virtual TH1 *DrawNormalized(Option_t *option="""", Double_t norm=1) const;; 214 virtual void DrawPanel(); // *MENU*; 215 virtual Int_t BufferEmpty(Int_t action=0);; 216 virtual void Eval(TF1 *f1, Option_t *option="""");; 217 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 218 virtual void ExtendAxis(Double_t x, TAxis *axis);; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8h_source.html:8793,Clear,ClearUnderflowAndOverflow,8793,doc/master/TH1_8h_source.html,https://root.cern,https://root.cern/doc/master/TH1_8h_source.html,1,['Clear'],['ClearUnderflowAndOverflow']
Usability," 121 of file TSelectorDraw.h. ◆ Notify(). bool TSelectorDraw::Notify ; (; ). overridevirtual . This function is called at the first entry of a new tree in a chain. ; Reimplemented from TSelector.; Definition at line 1154 of file TSelectorDraw.cxx. ◆ operator=(). TSelectorDraw & TSelectorDraw::operator= ; (; const TSelectorDraw & ; ). private . ◆ Process(). bool TSelectorDraw::Process ; (; Long64_t ; ). inlineoverridevirtual . The Process() function is called for each entry in the tree (or possibly keyed object in the case of PROOF) to be processed. ; The entry argument specifies which entry in the currently loaded tree is to be processed. It can be passed to either t01::GetEntry() or TBranch::GetEntry() to read either all or the required parts of the data. When processing keyed objects with PROOF, the object is already loaded and is available via the fObject pointer.; This function should contain the ""body"" of the analysis. It can contain simple or elaborate selection criteria, run algorithms on the data of the event and typically fill histograms.; The processing can be stopped by calling Abort().; Use fStatus to set the return value of TTree::Process().; The return value is currently not used.; WARNING when a selector is used with a TChain, you must use the pointer to the current TTree to call GetEntry(entry). The entry is always the local entry number in the current tree. Assuming that fChain is the pointer to the TChain being processed, use: fChain->GetTree()->GetEntry(entry). ; Reimplemented from TSelector.; Definition at line 111 of file TSelectorDraw.h. ◆ ProcessFill(). void TSelectorDraw::ProcessFill ; (; Long64_t ; entry). overridevirtual . Called in the entry loop for all entries accepted by Select. ; Reimplemented from TSelector.; Definition at line 1169 of file TSelectorDraw.cxx. ◆ ProcessFillMultiple(). void TSelectorDraw::ProcessFillMultiple ; (; Long64_t ; entry). virtual . Called in the entry loop for all entries accepted by Select. ; Complex case wit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelectorDraw.html:24666,simpl,simple,24666,doc/master/classTSelectorDraw.html,https://root.cern,https://root.cern/doc/master/classTSelectorDraw.html,1,['simpl'],['simple']
Usability, 125 of file TGFSContainer.h. ◆ fDirectory. TString TGFileContainer::fDirectory. protected . current directory ; Definition at line 124 of file TGFSContainer.h. ◆ fDisplayStat. Bool_t TGFileContainer::fDisplayStat. protected . kFALSE to interrupt display directory contents in case of many files inside ; Definition at line 135 of file TGFSContainer.h. ◆ fDoc_s. const TGPicture* TGFileContainer::fDoc_s. protected . big document icon ; Definition at line 131 of file TGFSContainer.h. ◆ fDoc_t. const TGPicture* TGFileContainer::fDoc_t. protected . small document icon ; Definition at line 130 of file TGFSContainer.h. ◆ fFilter. TRegexp* TGFileContainer::fFilter. protected . file filter ; Definition at line 121 of file TGFSContainer.h. ◆ fFolder_s. const TGPicture* TGFileContainer::fFolder_s. protected . big folder icon ; Definition at line 127 of file TGFSContainer.h. ◆ fFolder_t. const TGPicture* TGFileContainer::fFolder_t. protected . small folder icon ; Definition at line 126 of file TGFSContainer.h. ◆ fMtime. ULong_t TGFileContainer::fMtime. protected . directory modification time ; Definition at line 123 of file TGFSContainer.h. ◆ fRefresh. TViewUpdateTimer* TGFileContainer::fRefresh. protected . refresh timer ; Definition at line 122 of file TGFSContainer.h. ◆ fSlink_s. const TGPicture* TGFileContainer::fSlink_s. protected . big symbolic link icon ; Definition at line 133 of file TGFSContainer.h. ◆ fSlink_t. const TGPicture* TGFileContainer::fSlink_t. protected . small symbolic link icon ; Definition at line 132 of file TGFSContainer.h. ◆ fSortType. EFSSortMode TGFileContainer::fSortType. protected . sorting mode of contents ; Definition at line 120 of file TGFSContainer.h. Libraries for TGFileContainer:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGFSContainer.h; gui/gui/src/TGFSContainer.cxx. TGFileContainer. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:14 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGFileContainer.html:50795,Guid,Guide,50795,doc/master/classTGFileContainer.html,https://root.cern,https://root.cern/doc/master/classTGFileContainer.html,1,['Guid'],['Guide']
Usability," 128}; 129 ; 130ROOT::Experimental::RResult<void> ROOT::Experimental::RNTupleImporter::InitDestination(std::string_view destFileName); 131{; 132 fDestFileName = destFileName;; 133 fDestFile = std::unique_ptr<TFile>(TFile::Open(fDestFileName.c_str(), ""UPDATE""));; 134 if (!fDestFile || fDestFile->IsZombie()) {; 135 return R__FAIL(""cannot open dest file "" + std::string(fDestFileName));; 136 }; 137 ; 138 return RResult<void>::Success();; 139}; 140 ; 141void ROOT::Experimental::RNTupleImporter::ReportSchema(); 142{; 143 for (const auto &f : fImportFields) {; 144 std::cout << ""Importing '"" << f.fField->GetFieldName() << ""' ["" << f.fField->GetTypeName() << ""]\n"";; 145 }; 146 for (const auto &f : Internal::GetProjectedFieldsOfModel(*fModel).GetFieldZero().GetSubFields()) {; 147 std::cout << ""Importing (projected) '"" << f->GetFieldName() << ""' ["" << f->GetTypeName() << ""]\n"";; 148 }; 149}; 150 ; 151void ROOT::Experimental::RNTupleImporter::ResetSchema(); 152{; 153 fImportBranches.clear();; 154 fImportFields.clear();; 155 fLeafCountCollections.clear();; 156 fImportTransformations.clear();; 157 fModel = RNTupleModel::CreateBare();; 158 fEntry = nullptr;; 159}; 160 ; 161ROOT::Experimental::RResult<void> ROOT::Experimental::RNTupleImporter::PrepareSchema(); 162{; 163 ResetSchema();; 164 ; 165 // Browse through all branches and their leaves, create corresponding fields and prepare the memory buffers for; 166 // reading and writing. Usually, reading and writing share the same memory buffer, i.e. the object is read from TTree; 167 // and written as-is to the RNTuple. There are exceptions, e.g. for leaf count arrays and C strings.; 168 for (auto b : TRangeDynCast<TBranch>(*fSourceTree->GetListOfBranches())) {; 169 assert(b);; 170 const auto firstLeaf = static_cast<TLeaf *>(b->GetListOfLeaves()->First());; 171 assert(firstLeaf);; 172 ; 173 const bool isLeafList = b->GetNleaves() > 1;; 174 const bool isCountLeaf = firstLeaf->IsRange(); // A leaf storing the number of elements of a lea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleImporter_8cxx_source.html:6091,clear,clear,6091,doc/master/RNTupleImporter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleImporter_8cxx_source.html,1,['clear'],['clear']
Usability," 129 Expression wrapper class for Matrix objects; 130 ; 131 @ingroup Expression; 132*/; 133 ; 134template <class T, unsigned int D, unsigned int D2> class MatRepStd;; 135 ; 136template <class ExprType, class T, unsigned int D, unsigned int D2 = 1,; 137 class R1=MatRepStd<T,D,D2> >; 138class Expr {; 139public:; 140 typedef T value_type;; 141 ; 142 ///; 143 Expr(const ExprType& rhs) :; 144 rhs_(rhs) {}; 145 ; 146 ///; 147 ~Expr() {}; 148 ; 149 ///; 150 inline T apply(unsigned int i) const {; 151 return rhs_.apply(i);; 152 }; 153 inline T operator() (unsigned int i, unsigned j) const {; 154 return rhs_(i,j);; 155 }; 156 ; 157 /**; 158 function to determine if any use operand; 159 is being used (has same memory address); 160 */; 161 inline bool IsInUse (const T * p) const {; 162 return rhs_.IsInUse(p);; 163 }; 164 ; 165 ; 166 ; 167#ifdef OLD_IMPL; 168 ///; 169 static const unsigned int rows = D;; 170 ///; 171 static const unsigned int cols = D2;; 172#else; 173 // use enumerations; 174 enum {; 175 ///; 176 kRows = D,; 177 ///; 178 kCols = D2; 179 };; 180#endif; 181 ; 182 /// used by operator<<(); 183 /// simplify to use apply(i,j); 184 std::ostream& print(std::ostream& os) const {; 185 os.setf(std::ios::right,std::ios::adjustfield);; 186 os << ""[ "";; 187 for (unsigned int i=0; i < D; ++i) {; 188 unsigned int d2 = D2; // to avoid some annoying warnings in case of vectors (D2 = 0); 189 for (unsigned int j=0; j < D2; ++j) {; 190 os << std::setw(12) << this->operator() (i,j);; 191 if ((!((j+1)%12)) && (j < d2-1)); 192 os << std::endl << "" ..."";; 193 }; 194 if (i != D - 1); 195 os << std::endl << "" "";; 196 }; 197 os << "" ]"";; 198 ; 199 return os;; 200 }; 201 ; 202private:; 203 ExprType rhs_; // cannot be a reference!; 204};; 205 ; 206//==============================================================================; 207// operator<<; 208//==============================================================================; 209template <class A, class T, unsigned int D>; 210inline std:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Expression_8h_source.html:4340,simpl,simplify,4340,doc/master/Expression_8h_source.html,https://root.cern,https://root.cern/doc/master/Expression_8h_source.html,1,['simpl'],['simplify']
Usability, 132 of file MethodLikelihood.h. ◆ fInterpolateString. TString* TMVA::MethodLikelihood::fInterpolateString. private . which interpolation method used for reference histograms (individual for each variable) ; Definition at line 152 of file MethodLikelihood.h. ◆ fKDEfineFactor. Float_t TMVA::MethodLikelihood::fKDEfineFactor. private . fine tuning factor for Adaptive KDE ; Definition at line 149 of file MethodLikelihood.h. ◆ fKDEiterString. TString TMVA::MethodLikelihood::fKDEiterString. private . Number of iterations (string) ; Definition at line 150 of file MethodLikelihood.h. ◆ fKDEtypeString. TString TMVA::MethodLikelihood::fKDEtypeString. private . Kernel type to use for KDE (string) ; Definition at line 151 of file MethodLikelihood.h. ◆ fNsmooth. Int_t TMVA::MethodLikelihood::fNsmooth. private . number of smooth passes ; Definition at line 142 of file MethodLikelihood.h. ◆ fNsmoothVarB. Int_t* TMVA::MethodLikelihood::fNsmoothVarB. private . number of smooth passes ; Definition at line 144 of file MethodLikelihood.h. ◆ fNsmoothVarS. Int_t* TMVA::MethodLikelihood::fNsmoothVarS. private . number of smooth passes ; Definition at line 143 of file MethodLikelihood.h. ◆ fPDFBgd. std::vector<PDF*>* TMVA::MethodLikelihood::fPDFBgd. private . list of PDFs (background) ; Definition at line 137 of file MethodLikelihood.h. ◆ fPDFSig. std::vector<PDF*>* TMVA::MethodLikelihood::fPDFSig. private . list of PDFs (signal) ; Definition at line 136 of file MethodLikelihood.h. ◆ fTransformLikelihoodOutput. Bool_t TMVA::MethodLikelihood::fTransformLikelihoodOutput. private . likelihood output is sigmoid-transformed ; Definition at line 126 of file MethodLikelihood.h. Libraries for TMVA::MethodLikelihood:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/MethodLikelihood.h; tmva/tmva/src/MethodLikelihood.cxx. TMVAMethodLikelihood. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:36 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodLikelihood.html:43796,Guid,Guide,43796,doc/master/classTMVA_1_1MethodLikelihood.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodLikelihood.html,1,['Guid'],['Guide']
Usability," 157 state = 2;; 158 break;; 159 }; 160 break;; 161 ; 162 case 1: // comment; 163 break;; 164 ; 165 case 2: // name; 166 switch (c) {; 167 case ' ':; 168 case '\t':; 169 case ':':; 170 state = 3;; 171 break;; 172 case '(':; 173 state = 7;; 174 break;; 175 default:; 176 break;; 177 }; 178 break;; 179 ; 180 case 3: // ws before value; 181 if (c != ' ' && c != '\t'); 182 state = 4;; 183 break;; 184 ; 185 case 4: // value; 186 break;; 187 ; 188 case 5: // type; 189 if (c == ')'); 190 state = 6;; 191 break;; 192 ; 193 case 6: // optional ':'; 194 state = (c == ':') ? 3 : 4;; 195 break;; 196 ; 197 case 7:; 198 state = (c == ')') ? 6 : 5;; 199 break;; 200 ; 201 }; 202 switch (state) {; 203 case 2:; 204 name.Append(c);; 205 break;; 206 case 4:; 207 value.Append(c);; 208 break;; 209 case 5:; 210 type.Append(c);; 211 break;; 212 }; 213 if (state != 4); 214 Char(c);; 215 }; 216 // In case EOF is reach before '\n'; 217 if (name.Length() > 0) {; 218 KeyValue(name, value, type);; 219 name.Clear();; 220 value.Clear();; 221 type.Clear();; 222 }; 223}; 224 ; 225/** \class TReadEnvParser; 226*/; 227 ; 228class TReadEnvParser : public TEnvParser {; 229 ; 230private:; 231 EEnvLevel fLevel;; 232 ; 233public:; 234 TReadEnvParser(TEnv *e, FILE *f, EEnvLevel l) : TEnvParser(e, f), fLevel(l) {}; 235 void KeyValue(const TString &name, const TString &value, const TString &type) override; 236 { fEnv->SetValue(name, value, fLevel, type); }; 237};; 238 ; 239/** \class TWriteEnvParser; 240*/; 241 ; 242class TWriteEnvParser : public TEnvParser {; 243 ; 244private:; 245 FILE *fOfp;; 246 ; 247public:; 248 TWriteEnvParser(TEnv *e, FILE *f, FILE *of) : TEnvParser(e, f), fOfp(of) {}; 249 void KeyValue(const TString &name, const TString &value, const TString &type) override;; 250 void Char(Int_t c) override { fputc(c, fOfp); }; 251};; 252 ; 253////////////////////////////////////////////////////////////////////////////////; 254/// Write resources out to a new file.; 255 ; 256void TWriteEnvParser::KeyVal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEnv_8cxx_source.html:5771,Clear,Clear,5771,doc/master/TEnv_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEnv_8cxx_source.html,1,['Clear'],['Clear']
Usability," 162 of file TGLWidget.cxx. ◆ TGLWidget() [1/2]. TGLWidget::TGLWidget ; (; const TGLWidget & ; ). privatedelete . ◆ TGLWidget() [2/2]. TGLWidget::TGLWidget ; (; Window_t ; glw, . const TGWindow * ; parent, . Bool_t ; selectInput . ). protected . Creates widget with default pixel format. ; Definition at line 140 of file TGLWidget.cxx. Member Function Documentation. ◆ AddContext(). void TGLWidget::AddContext ; (; TGLContext * ; ctx). overrideprotectedvirtual . Register gl-context created for this window. ; Implements TGLPaintDevice.; Definition at line 249 of file TGLWidget.cxx. ◆ Class(). static TClass * TGLWidget::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGLWidget::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGLWidget::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 104 of file TGLWidget.h. ◆ ClearCurrent(). Bool_t TGLWidget::ClearCurrent ; (; ). Clear the current gl-context. ; Definition at line 209 of file TGLWidget.cxx. ◆ Create() [1/2]. TGLWidget * TGLWidget::Create ; (; const TGLFormat & ; format, . const TGWindow * ; parent, . Bool_t ; selectInput, . Bool_t ; shareDefault, . const TGLPaintDevice * ; shareDevice, . UInt_t ; width, . UInt_t ; height . ). static . Static constructor for creating widget with given pixel format. ; Definition at line 96 of file TGLWidget.cxx. ◆ Create() [2/2]. TGLWidget * TGLWidget::Create ; (; const TGWindow * ; parent, . Bool_t ; selectInput, . Bool_t ; shareDefault, . const TGLPaintDevice * ; shareDevice, . UInt_t ; width, . UInt_t ; height . ). static . Static constructor for creating widget with default pixel format. ; Definition at line 83 of file TGLWidget.cxx. ◆ CreateDummy(). TGLWidget * TGLWidget::CreateDummy ; (; ). static . Static constructor for creating widget with default pixel format. ; Definition at line 73 of file TGLWidget.cxx. ◆ CreateWindow(). Window_t T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLWidget.html:32516,Clear,ClearCurrent,32516,doc/master/classTGLWidget.html,https://root.cern,https://root.cern/doc/master/classTGLWidget.html,1,['Clear'],['ClearCurrent']
Usability," 168 of file RooRealSumFunc.cxx. ◆ setCacheAndTrackHints(). void RooRealSumFunc::setCacheAndTrackHints ; (; RooArgSet & ; trackNodes). overridevirtual . Reimplemented from RooAbsArg.; Definition at line 160 of file RooRealSumFunc.cxx. ◆ setFloor(). void RooRealSumFunc::setFloor ; (; bool ; flag). inline . Definition at line 53 of file RooRealSumFunc.h. ◆ setFloorGlobal(). static void RooRealSumFunc::setFloorGlobal ; (; bool ; flag). inlinestatic . Definition at line 55 of file RooRealSumFunc.h. ◆ Streamer(). void RooRealSumFunc::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsReal. ◆ StreamerNVirtual(). void RooRealSumFunc::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 78 of file RooRealSumFunc.h. ◆ translate(). void RooRealSumFunc::translate ; (; RooFit::Detail::CodeSquashContext & ; ctx); const. overridevirtual . This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ; The function adds the code represented by each class as an std::string (that is later concatenated with code strings from translate calls) to form the C++ code that AD tools can understand. Any class that wants to support AD, has to implement this function.; Parameters. [in]ctxAn object to manage auxiliary information for code-squashing. Also takes the code string that this class outputs into the squashed code through the 'addToCodeBody' function. . Reimplemented from RooAbsArg.; Definition at line 117 of file RooRealSumFunc.cxx. Member Data Documentation. ◆ _coefList. RooListProxy RooRealSumFunc::_coefList. protected . List of coefficients. ; Definition at line 71 of file RooRealSumFunc.h. ◆ _doFloor. bool RooRealSumFunc::_doFloor = false. protected . Introduce floor at zero in pdf. ; Definition at line 73 of file RooRealSumFunc.h. ◆ _doFloorGlobal. bool RooRealSumFunc::_doFloorGlobal = false. staticprotected . Global f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooRealSumFunc.html:69374,simpl,simple,69374,doc/v632/classRooRealSumFunc.html,https://root.cern,https://root.cern/doc/v632/classRooRealSumFunc.html,2,['simpl'],['simple']
Usability," 17 Physics Vectors; 18 The Geometry Package; 19 Python Interface; 20 The Tutorials and Tests; 21 Example Analysis; 22 Networking; 23 Threads; 24 PROOF: Parallel Processing; 25 Writing a Graphical User Interface; 26 The Signal/Slot Communication Mechanism; 27 Automatic HTML Documentation; 28 Appendix A: Install and Build ROOT. WARNING: This documentation is not maintained anymore. Some part might be obsolete or wrong, some part might be missing but still some valuable information can be found there. Instead please refer to the ROOT Reference Guide and the ROOT Manual. If you think some information should be imported in the ROOT Reference Guide or in the ROOT Manual, please post your request to the ROOT Forum or via a Github Issue. Preface; In late 1994, we decided to learn and investigate Object Oriented programming and C++ to better judge the suitability of these relatively new techniques for scientific programming. We knew that there is no better way to learn a new programming environment than to use it to write a program that can solve a real problem. After a few weeks, we had our first histogramming package in C++. A few weeks later we had a rewrite of the same package using the, at that time, very new template features of C++. Again, a few weeks later we had another rewrite of the package without templates since we could only compile the version with templates on one single platform using a specific compiler. Finally, after about four months we had a histogramming package that was faster and more efficient than the well-known FORTRAN based HBOOK histogramming package. This gave us enough confidence in the new technologies to decide to continue the development. Thus was born ROOT. Since its first public release at the end of 1995, ROOT has enjoyed an ever-increasing popularity. Currently it is being used in all major High Energy and Nuclear Physics laboratories around the world to monitor, to store and to analyse data. In the other sciences as well as the medica",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1356,learn,learn,1356,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['learn'],['learn']
Usability, 176 of file TGWin32VirtualXProxy.cxx. ◆ xpos. Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void xpos. Definition at line 132 of file TGWin32VirtualXProxy.cxx. ◆ xy. Option_t Option_t TPoint TPoint xy. Definition at line 62 of file TGWin32VirtualXProxy.cxx. ◆ y. Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h y. Definition at line 68 of file TGWin32VirtualXProxy.cxx. ◆ y1. Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t y1. Definition at line 70 of file TGWin32VirtualXProxy.cxx. ◆ y2. Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t y2. Definition at line 70 of file TGWin32VirtualXProxy.cxx. ◆ ypos. Option_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void ypos. Definition at line 132 of file TGWin32VirtualXProxy.cxx. graf2dwin32gdksrcTGWin32VirtualXProxy.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:17 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGWin32VirtualXProxy_8cxx.html:240457,Guid,Guide,240457,doc/master/TGWin32VirtualXProxy_8cxx.html,https://root.cern,https://root.cern/doc/master/TGWin32VirtualXProxy_8cxx.html,1,['Guid'],['Guide']
Usability," 18 ; 19Wrapper around an object and giving indirect access to its content; 20even if the object is not of a class in the Cint/Reflex dictionary.; 21*/; 22 ; 23#include ""TClassRef.h""; 24 ; 25 ; 26class TVirtualObject {; 27private:; 28 ; 29 TVirtualObject(const TVirtualObject&) = delete;; 30 TVirtualObject &operator=(const TVirtualObject&) = delete;; 31 ; 32public:; 33 TClassRef fClass;; 34 void *fObject;; 35 ; 36 TVirtualObject(TClass *cl) : fClass(cl), fObject(cl ? cl->New() : nullptr) { }; 37 ~TVirtualObject() { if (fClass) fClass->Destructor(fObject); }; 38 ; 39 ; 40 TClass *GetClass() const { return fClass; }; 41 void *GetObject() const { return fObject; }; 42 ; 43};; 44 ; 45#endif // ROOT_TVirtualObject; TClassRef.h; TClassRefTClassRef is used to implement a permanent reference to a TClass object.Definition TClassRef.h:28; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClass::Destructorvoid Destructor(void *obj, Bool_t dtorOnly=kFALSE)Explicitly call destructor for object.Definition TClass.cxx:5467; TVirtualObjectWrapper around an object and giving indirect access to its content even if the object is not of a cla...Definition TVirtualObject.h:26; TVirtualObject::fObjectvoid * fObjectDefinition TVirtualObject.h:34; TVirtualObject::GetObjectvoid * GetObject() constDefinition TVirtualObject.h:41; TVirtualObject::fClassTClassRef fClassDefinition TVirtualObject.h:33; TVirtualObject::TVirtualObjectTVirtualObject(TClass *cl)Definition TVirtualObject.h:36; TVirtualObject::GetClassTClass * GetClass() constDefinition TVirtualObject.h:40; TVirtualObject::~TVirtualObject~TVirtualObject()Definition TVirtualObject.h:37; TVirtualObject::TVirtualObjectTVirtualObject(const TVirtualObject &)=delete; TVirtualObject::operator=TVirtualObject & operator=(const TVirtualObject &)=delete. coremetaincTVirtualObject.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:10 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualObject_8h_source.html:2664,Guid,Guide,2664,doc/master/TVirtualObject_8h_source.html,https://root.cern,https://root.cern/doc/master/TVirtualObject_8h_source.html,1,['Guid'],['Guide']
Usability," 18; , kGraph = 19; , kMarker = 20; , ;   kPolyMarker = 21; , kPolyLine3D = 22; , kWbox = 23; , kGaxis = 24; , ;   kF1 = 25; , kF2 = 26; , kF3 = 27; , kDiamond = 28; , ;   kPolyMarker3D = 29; , kButton = 101; , kCutG =100; , kCurlyLine =200; , ;   kCurlyArc = 201. };  ; enum  EEventType { ;   kNoEvent = 0; , kButton1Down = 1; , kButton2Down = 2; , kButton3Down = 3; , ;   kKeyDown = 4; , kWheelUp = 5; , kWheelDown = 6; , kButton1Shift = 7; , ;   kButton1ShiftMotion = 8; , kButton1Up = 11; , kButton2Up = 12; , kButton3Up = 13; , ;   kKeyUp = 14; , kButton1Motion = 21; , kButton2Motion = 22; , kButton3Motion = 23; , ;   kKeyPress = 24; , kArrowKeyPress = 25; , kArrowKeyRelease = 26; , kButton1Locate = 41; , ;   kButton2Locate = 42; , kButton3Locate = 43; , kESC = 27; , kMouseMotion = 51; , ;   kMouseEnter = 52; , kMouseLeave = 53; , kButton1Double = 61; , kButton2Double = 62; , ;   kButton3Double = 63. };  . Enumeration Type Documentation. ◆ EEditMode. enum EEditMode. EnumeratorkPolyLine ; kSPolyLine ; kPolyGone ; kSPolyGone ; kBox ; kDelete ; kPad ; kText ; kEditor ; kExit ; kPave ; kPaveLabel ; kPaveText ; kPavesText ; kEllipse ; kArc ; kLine ; kArrow ; kGraph ; kMarker ; kPolyMarker ; kPolyLine3D ; kWbox ; kGaxis ; kF1 ; kF2 ; kF3 ; kDiamond ; kPolyMarker3D ; kButton ; kCutG ; kCurlyLine ; kCurlyArc . Definition at line 27 of file Buttons.h. ◆ EEventType. enum EEventType. EnumeratorkNoEvent ; kButton1Down ; kButton2Down ; kButton3Down ; kKeyDown ; kWheelUp ; kWheelDown ; kButton1Shift ; kButton1ShiftMotion ; kButton1Up ; kButton2Up ; kButton3Up ; kKeyUp ; kButton1Motion ; kButton2Motion ; kButton3Motion ; kKeyPress ; kArrowKeyPress ; kArrowKeyRelease ; kButton1Locate ; kButton2Locate ; kButton3Locate ; kESC ; kMouseMotion ; kMouseEnter ; kMouseLeave ; kButton1Double ; kButton2Double ; kButton3Double . Definition at line 15 of file Buttons.h. corebaseincButtons.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:12 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Buttons_8h.html:2572,Guid,Guide,2572,doc/master/Buttons_8h.html,https://root.cern,https://root.cern/doc/master/Buttons_8h.html,1,['Guid'],['Guide']
Usability," 1907 of file TGHtml.cxx. ◆ BlockDraw(). void TGHtml::BlockDraw ; (; TGHtmlBlock * ; pBlock, . Drawable_t ; wid, . int ; left, . int ; top, . int ; width, . int ; height, . Pixmap_t ; pixmap . ). protected . Display a single HtmlBlock. This is where all the drawing happens. ; Definition at line 315 of file TGHtmlDraw.cxx. ◆ ButtonClicked(). void TGHtml::ButtonClicked ; (; const char * ; name, . const char * ; val . ). virtual . Emit ButtonClicked() signal. ; Definition at line 1286 of file TGHtml.cxx. ◆ CellSpacing(). int TGHtml::CellSpacing ; (; TGHtmlElement * ; pTable). Return the appropriate cell spacing for the given table. ; Definition at line 53 of file TGHtmlTable.cxx. ◆ CheckToggled(). void TGHtml::CheckToggled ; (; const char * ; name, . Bool_t ; on, . const char * ; val . ). virtual . Emit CheckToggled() signal. ; Definition at line 1299 of file TGHtml.cxx. ◆ ClassDefOverride(). TGHtml::ClassDefOverride ; (; TGHtml ; , . 0 ;  . ). protected . ◆ Clear(). void TGHtml::Clear ; (; Option_t * ; = """"). overridevirtual . Erase all HTML from this widget and clear the screen. ; This is typically done before loading a new document. ; Reimplemented from TObject.; Definition at line 310 of file TGHtml.cxx. ◆ ClearGcCache(). void TGHtml::ClearGcCache ; (; ). protected . Clear the cache of GCs. ; Definition at line 516 of file TGHtml.cxx. ◆ ColorDistance(). float TGHtml::ColorDistance ; (; ColorStruct_t * ; pA, . ColorStruct_t * ; pB . ). protected . Compute the squared distance between two colors. ; Definition at line 1613 of file TGHtml.cxx. ◆ ComputeVirtualSize(). void TGHtml::ComputeVirtualSize ; (; ). protected . Computes virtual size of html area. ; Definition at line 508 of file TGHtml.cxx. ◆ ControlSize(). int TGHtml::ControlSize ; (; TGHtmlInput * ; pElem). protected . This routine implements the Sizer() function for <INPUT>, <SELECT> and <TEXTAREA> markup. ; A side effect of sizing these markups is that widgets are created to represent the corresponding input",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHtml.html:57044,Clear,Clear,57044,doc/master/classTGHtml.html,https://root.cern,https://root.cern/doc/master/classTGHtml.html,1,['Clear'],['Clear']
Usability, 191 of file TGLClipSetEditor.cxx. Member Data Documentation. ◆ fApplyButton. TGButton* TGLClipSetSubEditor::fApplyButton. protected . Definition at line 47 of file TGLClipSetEditor.h. ◆ fAutoUpdate. TGCheckButton* TGLClipSetSubEditor::fAutoUpdate. protected . Definition at line 44 of file TGLClipSetEditor.h. ◆ fBoxProp. TGNumberEntry* TGLClipSetSubEditor::fBoxProp[6]. protected . Definition at line 42 of file TGLClipSetEditor.h. ◆ fBoxPropFrame. TGCompositeFrame* TGLClipSetSubEditor::fBoxPropFrame. protected . Definition at line 41 of file TGLClipSetEditor.h. ◆ fClipEdit. TGCheckButton* TGLClipSetSubEditor::fClipEdit. protected . Definition at line 45 of file TGLClipSetEditor.h. ◆ fClipInside. TGCheckButton* TGLClipSetSubEditor::fClipInside. protected . Definition at line 43 of file TGLClipSetEditor.h. ◆ fClipShow. TGCheckButton* TGLClipSetSubEditor::fClipShow. protected . Definition at line 46 of file TGLClipSetEditor.h. ◆ fCurrentClip. TGLClip::EType TGLClipSetSubEditor::fCurrentClip. protected . Definition at line 35 of file TGLClipSetEditor.h. ◆ fM. TGLClipSet* TGLClipSetSubEditor::fM. protected . Definition at line 33 of file TGLClipSetEditor.h. ◆ fPlaneProp. TGNumberEntry* TGLClipSetSubEditor::fPlaneProp[4]. protected . Definition at line 39 of file TGLClipSetEditor.h. ◆ fPlanePropFrame. TGCompositeFrame* TGLClipSetSubEditor::fPlanePropFrame. protected . Definition at line 38 of file TGLClipSetEditor.h. ◆ fResetButton. TGButton* TGLClipSetSubEditor::fResetButton. protected . Definition at line 48 of file TGLClipSetEditor.h. ◆ fTypeButtons. TGButtonGroup* TGLClipSetSubEditor::fTypeButtons. protected . Definition at line 36 of file TGLClipSetEditor.h. Libraries for TGLClipSetSubEditor:. [legend]; The documentation for this class was generated from the following files:; graf3d/gl/inc/TGLClipSetEditor.h; graf3d/gl/src/TGLClipSetEditor.cxx. TGLClipSetSubEditor. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:20 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLClipSetSubEditor.html:36626,Guid,Guide,36626,doc/master/classTGLClipSetSubEditor.html,https://root.cern,https://root.cern/doc/master/classTGLClipSetSubEditor.html,1,['Guid'],['Guide']
Usability," 194 of file TFormula.h. ◆ AddVariable(). void TFormula::AddVariable ; (; const TString & ; name, . Double_t ; value = 0 . ). Adds variable to known variables, and reprocess formula. ; Definition at line 2569 of file TFormula.cxx. ◆ AddVariables(). void TFormula::AddVariables ; (; const TString * ; vars, . const Int_t ; size . ). Adds multiple variables. ; First argument is an array of pairs<TString,Double>, where first argument is name of variable, second argument represents value. size - number of variables passed in first argument ; Definition at line 2602 of file TFormula.cxx. ◆ Class(). static TClass * TFormula::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFormula::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFormula::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 289 of file TFormula.h. ◆ Clear(). void TFormula::Clear ; (; Option_t * ; option = """"). overridevirtual . Clear the formula setting expression to empty and reset the variables and parameters containers. ; Reimplemented from TObject.; Definition at line 767 of file TFormula.cxx. ◆ Compile(). Int_t TFormula::Compile ; (; const char * ; expression = """"). Compile the given expression with Cling backward compatibility method to be used in combination with the empty constructor if no expression is given , the current stored formula (retrieved with GetExpFormula()) or the title is used. ; return 0 if the formula compilation is successful ; Definition at line 650 of file TFormula.cxx. ◆ Copy(). void TFormula::Copy ; (; TObject & ; object); const. overridevirtual . Copy this to obj. ; Reimplemented from TObject.; Definition at line 684 of file TFormula.cxx. ◆ DeclFileName(). static const char * TFormula::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 289 of file TFormula.h. ◆ DoAddParamet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:31752,Clear,Clear,31752,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['Clear'],['Clear']
Usability," 1977 return false;; 1978 ; 1979 auto stack = MakeStackByIds(giter.CurrentIds());; 1980 ; 1981 auto nodeid = giter.GetNodeId();; 1982 ; 1983 for (auto iter = fVisibility.begin(); iter != fVisibility.end(); iter++) {; 1984 auto res = compare_stacks(iter->stack, stack);; 1985 ; 1986 if (res == 0) {; 1987 bool changed = iter->visible != on;; 1988 if (changed) {; 1989 iter->visible = on;; 1990 ClearDrawData();; 1991 ; 1992 // no need for custom settings if match with description; 1993 if ((fDesc[nodeid].vis > 0) == on); 1994 fVisibility.erase(iter);; 1995 }; 1996 ; 1997 return changed;; 1998 }; 1999 ; 2000 if (res > 0) {; 2001 fVisibility.emplace(iter, stack, on);; 2002 ClearDrawData();; 2003 return true;; 2004 }; 2005 }; 2006 ; 2007 fVisibility.emplace_back(stack, on);; 2008 ClearDrawData();; 2009 return true;; 2010}; 2011 ; 2012/////////////////////////////////////////////////////////////////////////////////; 2013/// Set visibility of physical node by itemname; 2014/// itemname in string with path like ""/TOP_1/SUB_2/NODE_3""; 2015 ; 2016bool RGeomDescription::SetPhysNodeVisibility(const std::string &itemname, bool on); 2017{; 2018 std::vector<std::string> path;; 2019 std::string::size_type p1 = 0;; 2020 ; 2021 while (p1 < itemname.length()) {; 2022 if (itemname[p1] == '/') {; 2023 p1++;; 2024 continue;; 2025 }; 2026 auto p = itemname.find('/', p1);; 2027 if (p == std::string::npos) {; 2028 path.emplace_back(itemname.substr(p1));; 2029 p1 = itemname.length();; 2030 } else {; 2031 path.emplace_back(itemname.substr(p1, p - p1));; 2032 p1 = p + 1;; 2033 }; 2034 }; 2035 ; 2036 return SetPhysNodeVisibility(path, on);; 2037}; 2038 ; 2039/////////////////////////////////////////////////////////////////////////////////; 2040/// Check if there special settings for specified physical node; 2041/// returns -1 if nothing is found; 2042 ; 2043int RGeomDescription::IsPhysNodeVisible(const std::vector<int> &stack); 2044{; 2045 for (auto &item : fVisibility) {; 2046 unsigned sz = item.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8cxx_source.html:60662,Clear,ClearDrawData,60662,doc/master/RGeomData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8cxx_source.html,2,['Clear'],['ClearDrawData']
Usability," 2 threads each with one canvas ;  ► tmva;  ► keras;  ApplicationClassificationKeras.py;  ApplicationRegressionKeras.py;  ClassificationKeras.py;  GenerateModel.py;  LaunchClasGUI.C;  LaunchMultiGUI.C;  LaunchRegGUI.C;  MulticlassKeras.py;  RegressionKeras.py;  createData.CPlot the variables ;  TMVAClassification.C This macro provides examples for the training and testing of the TMVA classifiers ;  TMVAClassificationApplication.C This macro provides a simple example on how to use the trained classifiers within an analysis module ;  TMVAClassificationCategory.C This macro provides examples for the training and testing of the TMVA classifiers in categorisation mode ;  TMVAClassificationCategoryApplication.C This macro provides a simple example on how to use the trained classifiers (with categories) within an analysis module ;  TMVACrossValidation.C This example explains how to use the cross-validation feature of TMVA ;  TMVAGAexample.C This exectutable gives an example of a very simple use of the genetic algorithm of TMVA ;  TMVAGAexample2.C This exectutable gives an example of a very simple use of the genetic algorithm of TMVA ;  TMVAMulticlass.C This macro provides a simple example for the training and testing of the TMVA multiclass classification ;  TMVAMulticlassApplication.C This macro provides a simple example on how to use the trained multiclass classifiers within an analysis module ;  TMVAMultipleBackgroundExample.C This example shows the training of signal with three different backgrounds Then in the application a tree is created with all signal and background events where the true class ID and the three classifier outputs are added finally with the application tree, the significance is maximized with the help of the TMVA genetic algrorithm ;  TMVARegression.C This macro provides examples for the training and testing of the TMVA classifiers ;  TMVARegressionApplication.C This macro provides a simple example on how to use the trained regression MVAs within an ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:153626,simpl,simple,153626,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,2,['simpl'],['simple']
Usability," 2) - (pow(px1 + px2, 2) + pow(py1 + py2, 2) + pow(pz1 + pz2, 2)))""); ; # Next we create a histogram to hold the invariant mass values and we draw it.; invMass = filteredEvents.Histo1D((""invMass"", ""CMS Opendata: #mu#mu mass;#mu#mu mass [GeV];Events"", 512, 2, 110), ""m""); ; c = ROOT.TCanvas(); c.SetLogx(); c.SetLogy(); invMass.Draw(); c.SaveAs(""df014_invMass.png""); ; # We will now produce a plot also for the J/Psi particle. We will plot; # on the same canvas the full spectrum and the zoom in on the J/psi particle.; # First we will create the full spectrum histogram from the invariant mass; # column, using a different histogram model than before.; fullSpectrum = filteredEvents.Histo1D((""Spectrum"", ""Subset of CMS Run 2010B;#mu#mu mass [GeV];Events"", 1024, 2, 110), ""m""); ; # Next we will create the histogram for the J/psi particle, applying first; # the corresponding cut.; jpsiLow = 2.95; jpsiHigh = 3.25; jpsiCut = 'm < %s && m > %s' % (jpsiHigh, jpsiLow); jpsi = filteredEvents.Filter(jpsiCut) \; .Histo1D((""jpsi"", ""Subset of CMS Run 2010B: J/#psi window;#mu#mu mass [GeV];Events"", 128, jpsiLow, jpsiHigh), ""m""); ; # Finally we draw the two histograms side by side.; dualCanvas = ROOT.TCanvas(""DualCanvas"", ""DualCanvas"", 800, 512); dualCanvas.Divide(2, 1); leftPad = dualCanvas.cd(1); leftPad.SetLogx(); leftPad.SetLogy(); fullSpectrum.Draw(""Hist""); dualCanvas.cd(2); jpsi.SetMarkerStyle(20); jpsi.Draw(""HistP""); dualCanvas.SaveAs(""df014_jpsi.png""); ; print(""Saved figures to df014_*.png""); ROOT::RDF::FromCSVRDataFrame FromCSV(std::string_view fileName, bool readHeaders=true, char delimiter=',', Long64_t linesChunkSize=-1LL, std::unordered_map< std::string, char > &&colTypes={})Factory method to create a CSV RDataFrame.Definition RCsvDS.cxx:558; . DateOctober 2017 ; AuthorEnric Tejedor (CERN) ; Definition in file df014_CSVDataSource.py. tutorialsdataframedf014_CSVDataSource.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df014__CSVDataSource_8py.html:3466,Guid,Guide,3466,doc/master/df014__CSVDataSource_8py.html,https://root.cern,https://root.cern/doc/master/df014__CSVDataSource_8py.html,1,['Guid'],['Guide']
Usability," 21 ); pad2 = TPad( 'pad2', 'The pad with the histogram', 0.51, 0.62, 0.98, 0.92, 21 ); pad3 = TPad( 'pad3', 'The pad with the histogram', 0.03, 0.02, 0.97, 0.57, 21 ); pad1.Draw(); pad2.Draw(); pad3.Draw(); #; # We connect the ROOT file generated in a previous tutorial; #; File = ""py-hsimple.root""; if (ROOT.gSystem.AccessPathName(File)) :; ROOT.Info(""h1ReadAndDraw.py"", File+"" does not exist""); exit(); ; example = TFile(File); example.ls(); ; # Draw a global picture title; title = TPaveLabel( 0.1, 0.94, 0.9, 0.98,; 'Drawing options for one dimensional histograms' ); title.SetFillColor( 16 ); title.SetTextFont( 52 ); title.Draw(); #; # Draw histogram hpx in first pad with the default option.; pad1.cd(); pad1.GetFrame().SetFillColor( 18 ); hpx = gROOT.FindObject( 'hpx' ); hpx.SetFillColor( 45 ); hpx.DrawCopy(); label1 = TPaveLabel( -3.5, 700, -1, 800, 'Default option' ); label1.SetFillColor( 42 ); label1.Draw(); #; # Draw hpx as a lego. Clicking on the lego area will show; # a ""transparent cube"" to guide you rotating the lego in real time.; pad2.cd(); hpx.DrawCopy( 'lego1' ); label2 = TPaveLabel( -0.72, 0.74, -0.22, 0.88, 'option Lego1' ); label2.SetFillColor( 42 ); label2.Draw(); label2a = TPaveLabel( -0.93, -1.08, 0.25, -0.92, 'Click on lego to rotate' ); label2a.SetFillColor( 42 ); label2a.Draw(); #; # Draw hpx with its errors and a marker.; pad3.cd(); pad3.SetGridx(); pad3.SetGridy(); pad3.GetFrame().SetFillColor( 18 ); hpx.SetMarkerStyle( 21 ); hpx.Draw( 'e1p' ); label3 = TPaveLabel( 2, 600, 3.5, 650, 'option e1p' ); label3.SetFillColor( 42 ); label3.Draw(); #; # The following illustrates how to add comments using a PaveText.; # Attributes of text/lines/boxes added to a PaveText can be modified.; # The AddText function returns a pointer to the added object.; pave = TPaveText( -3.78, 500, -1.2, 750 ); pave.SetFillColor( 42 ); t1 = pave.AddText( 'You can move' ); t1.SetTextColor( 4 ); t1.SetTextSize( 0.05 ); pave.AddText( 'Title and Stats pads' ); pave.AddText( 'X a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/h1ReadAndDraw_8py.html:1532,guid,guide,1532,doc/master/h1ReadAndDraw_8py.html,https://root.cern,https://root.cern/doc/master/h1ReadAndDraw_8py.html,1,['guid'],['guide']
Usability," 2103 buf >> temp;; 2104 ; 2105 if ((temp & kIsReferenced) != 0) {; 2106 HandleReferencedTObject(buf,*(void**)iter,config);; 2107 }; 2108 ; 2109 To *x = (To*)( ((char*) (*(void**)iter) ) + offset );; 2110 *x = (To)temp;; 2111 }; 2112 return 0;; 2113 }; 2114 };; 2115 ; 2116 template <typename From, typename To>; 2117 struct ConvertBasicType<WithFactorMarker<From>,To> {; 2118 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *iter, const void *end, const TConfiguration *config); 2119 {; 2120 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2121 TConfWithFactor *conf = (TConfWithFactor *)config;; 2122 From temp;; 2123 const Int_t offset = config->fOffset;; 2124 for(; iter != end; iter = (char*)iter + sizeof(void*) ) {; 2125 buf.ReadWithFactor(&temp, conf->fFactor, conf->fXmin);; 2126 To *x = (To*)( ((char*) (*(void**)iter) ) + offset );; 2127 *x = (To)temp;; 2128 }; 2129 return 0;; 2130 }; 2131 };; 2132 ; 2133 template <typename From, typename To>; 2134 struct ConvertBasicType<NoFactorMarker<From>,To> {; 2135 static INLINE_TEMPLATE_ARGS Int_t Action(TBuffer &buf, void *iter, const void *end, const TConfiguration *config); 2136 {; 2137 // Simple conversion from a 'From' on disk to a 'To' in memory.; 2138 TConfNoFactor *conf = (TConfNoFactor *)config;; 2139 From temp;; 2140 const Int_t offset = config->fOffset;; 2141 for(; iter != end; iter = (char*)iter + sizeof(void*) ) {; 2142 buf.ReadWithNbits(&temp, conf->fNbits);; 2143 To *x = (To*)( ((char*) (*(void**)iter) ) + offset );; 2144 *x = (To)temp;; 2145 }; 2146 return 0;; 2147 }; 2148 };; 2149 ; 2150 template <typename T>; 2151 static INLINE_TEMPLATE_ARGS Int_t WriteBasicType(TBuffer &buf, void *iter, const void *end, const TConfiguration *config); 2152 {; 2153 const Int_t offset = config->fOffset;; 2154 ; 2155 for(; iter != end; iter = (char*)iter + sizeof(void*) ) {; 2156 T *x = (T*)( ((char*) (*(void**)iter) ) + offset );; 2157 buf << *x;; 2158 }; 2159 return 0;; 2160 }; 2161 ; 2162 template",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:87540,Simpl,Simple,87540,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['Simpl'],['Simple']
Usability," 2158/// pass the treename if the query field is empty.; 2159///; 2160/// \param[in] name is the original name; 2161/// \param[out] filename the url or filename to be opened or matched; 2162/// \param[out] treename the treename, which may be found in a url fragment section; 2163/// as a trailing part of the name (deprecated).; 2164/// If not found this will be empty.; 2165/// Exception: a fragment containing the '=' character is _not_; 2166/// interpreted as a treename; 2167/// \param[out] query is the url query section, including the leading question; 2168/// mark. If not found or the query section is only followed by; 2169/// a fragment this will be empty.; 2170/// \param[out] suffix the portion of name which was removed to from filename.; 2171 ; 2172void TChain::ParseTreeFilename(const char *name, TString &filename, TString &treename, TString &query,; 2173 TString &suffix) const; 2174{; 2175 Ssiz_t pIdx = kNPOS;; 2176 filename.Clear();; 2177 treename.Clear();; 2178 query.Clear();; 2179 suffix.Clear();; 2180 ; 2181 // General case; 2182 TUrl url(name, true);; 2183 filename = (strcmp(url.GetProtocol(), ""file"")) ? url.GetUrl() : url.GetFileAndOptions();; 2184 ; 2185 TString fn = url.GetFile();; 2186 // Extract query, if any; 2187 if (url.GetOptions() && (strlen(url.GetOptions()) > 0)); 2188 query.Form(""?%s"", url.GetOptions());; 2189 // The treename can be passed as anchor; 2190 const char *anchor = url.GetAnchor();; 2191 if (anchor && anchor[0] != '\0') {; 2192 // Support ""?#tree_name"" and ""?query#tree_name""; 2193 // ""#tree_name"" (no '?' is for tar archives); 2194 // If the treename would contain a '=', treat the anchor as part of the query instead. This makes sure; 2195 // that Davix parameters are passed.; 2196 if (!query.IsNull() || strstr(name, ""?#"")) {; 2197 if (strstr(anchor, ""="")) {; 2198 query.Append(""#"");; 2199 query.Append(anchor);; 2200 } else {; 2201 treename = anchor;; 2202 }; 2203 } else {; 2204 // The anchor is part of the file name; 2205 fn = url.Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TChain_8cxx_source.html:78638,Clear,Clear,78638,doc/master/TChain_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TChain_8cxx_source.html,1,['Clear'],['Clear']
Usability," 231 dataloader->AddSpectator( ""spec2 := var1*3"", ""Spectator 2"", ""units"", 'F' );; 232 ; 233 ; 234 // global event weights per tree (see below for setting event-wise weights); 235 Double_t signalWeight = 1.0;; 236 Double_t backgroundWeight = 1.0;; 237 ; 238 // You can add an arbitrary number of signal or background trees; 239 dataloader->AddSignalTree ( signalTree, signalWeight );; 240 dataloader->AddBackgroundTree( background, backgroundWeight );; 241 ; 242 // To give different trees for training and testing, do as follows:; 243 //; 244 // dataloader->AddSignalTree( signalTrainingTree, signalTrainWeight, ""Training"" );; 245 // dataloader->AddSignalTree( signalTestTree, signalTestWeight, ""Test"" );; 246 ; 247 // Use the following code instead of the above two or four lines to add signal and background; 248 // training and test events ""by hand""; 249 // NOTE that in this case one should not give expressions (such as ""var1+var2"") in the input; 250 // variable definition, but simply compute the expression before adding the event; 251 // ```cpp; 252 // // --- begin ----------------------------------------------------------; 253 // std::vector<Double_t> vars( 4 ); // vector has size of number of input variables; 254 // Float_t treevars[4], weight;; 255 //; 256 // // Signal; 257 // for (UInt_t ivar=0; ivar<4; ivar++) signalTree->SetBranchAddress( Form( ""var%i"", ivar+1 ), &(treevars[ivar]) );; 258 // for (UInt_t i=0; i<signalTree->GetEntries(); i++) {; 259 // signalTree->GetEntry(i);; 260 // for (UInt_t ivar=0; ivar<4; ivar++) vars[ivar] = treevars[ivar];; 261 // // add training and test events; here: first half is training, second is testing; 262 // // note that the weight can also be event-wise; 263 // if (i < signalTree->GetEntries()/2.0) dataloader->AddSignalTrainingEvent( vars, signalWeight );; 264 // else dataloader->AddSignalTestEvent ( vars, signalWeight );; 265 // }; 266 //; 267 // // Background (has event weights); 268 // background->SetBranchAddress( ""weight"", &weigh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C_source.html:10512,simpl,simply,10512,doc/master/TMVAClassification_8C_source.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C_source.html,1,['simpl'],['simply']
Usability," 257 return delayedAddClassAlternate;; 258 }; 259}; 260 ; 261////////////////////////////////////////////////////////////////////////////////; 262/// TClassTable is a singleton (i.e. only one can exist per application).; 263 ; 264TClassTable::TClassTable(); 265{; 266 if (gClassTable) return;; 267 ; 268 fgSize = 1009; //this is the result of (int)TMath::NextPrime(1000);; 269 fgTable = new TClassRec* [fgSize];; 270 fgAlternate = new TClassAlt* [fgSize];; 271 fgIdMap = new IdMap_t;; 272 memset(fgTable, 0, fgSize * sizeof(TClassRec*));; 273 memset(fgAlternate, 0, fgSize * sizeof(TClassAlt*));; 274 gClassTable = this;; 275 ; 276 for (auto &&r : GetDelayedAddClass()) {; 277 AddClass(r->fName, r->fId, *r->fInfo, r->fDict, r->fBits);; 278 };; 279 GetDelayedAddClass().clear();; 280 ; 281 for (auto &&r : GetDelayedAddClassAlternate()) {; 282 AddAlternate(r.first, r.second);; 283 }; 284 GetDelayedAddClassAlternate().clear();; 285}; 286 ; 287////////////////////////////////////////////////////////////////////////////////; 288/// TClassTable singleton is deleted in Terminate().; 289 ; 290TClassTable::~TClassTable(); 291{; 292 // Try to avoid spurious warning from memory leak checkers.; 293 if (gClassTable != this) return;; 294 ; 295 for (UInt_t i = 0; i < fgSize; i++) {; 296 delete fgTable[i]; // Will delete all the elements in the chain.; 297 }; 298 delete [] fgTable; fgTable = nullptr;; 299 delete [] fgSortedTable; fgSortedTable = nullptr;; 300 delete fgIdMap; fgIdMap = nullptr;; 301}; 302 ; 303////////////////////////////////////////////////////////////////////////////////; 304/// Return true fs the table exist.; 305/// If the table does not exist but the delayed list does, then; 306/// create the table and return true.; 307 ; 308inline Bool_t TClassTable::CheckClassTableInit(); 309{; 310 // This will be set at the lastest during TROOT construction, so before; 311 // any threading could happen.; 312 if (!gClassTable || !fgTable) {; 313 if (GetDelayedAddClass().size()) {; 314 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClassTable_8cxx_source.html:8405,clear,clear,8405,doc/master/TClassTable_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClassTable_8cxx_source.html,2,['clear'],['clear']
Usability," 2614/// was never called on it (useful to force their re-running).; 2615 ; 2616void TStreamerInfo::Clear(Option_t *option); 2617{; 2618 TString opt = option;; 2619 opt.ToLower();; 2620 ; 2621 if (opt.Contains(""build"")) {; 2622 R__LOCKGUARD(gInterpreterMutex);; 2623 ; 2624 delete [] fComp; fComp = 0;; 2625 delete [] fCompFull; fCompFull= 0;; 2626 delete [] fCompOpt; fCompOpt = 0;; 2627 ; 2628 fNdata = 0;; 2629 fNfulldata = 0;; 2630 fNslots= 0;; 2631 fSize = 0;; 2632 ; 2633 ResetIsCompiled();; 2634 ResetBit(kBuildOldUsed);; 2635 ; 2636 TIter next(fElements);; 2637 while (auto element = (TStreamerElement*)next()) {; 2638 element->SetOffset(0);; 2639 }; 2640 ; 2641 if (fReadObjectWise) fReadObjectWise->fActions.clear();; 2642 if (fReadMemberWise) fReadMemberWise->fActions.clear();; 2643 if (fReadMemberWiseVecPtr) fReadMemberWiseVecPtr->fActions.clear();; 2644 if (fReadText) fReadText->fActions.clear();; 2645 if (fWriteObjectWise) fWriteObjectWise->fActions.clear();; 2646 if (fWriteMemberWise) fWriteMemberWise->fActions.clear();; 2647 if (fWriteMemberWiseVecPtr) fWriteMemberWiseVecPtr->fActions.clear();; 2648 if (fWriteText) fWriteText->fActions.clear();; 2649 }; 2650}; 2651 ; 2652namespace {; 2653 // TMemberInfo; 2654 // Local helper class to be able to compare data member represented by; 2655 // 2 distinct TStreamerInfos; 2656 class TMemberInfo {; 2657 public:; 2658 TClass *fParent;; 2659 TString fName;; 2660 TString fClassName;; 2661 TString fComment;; 2662 Int_t fDataType;; 2663 ; 2664 TMemberInfo(TClass *parent) : fParent(parent) {};; 2665 ; 2666 void SetDataType(Int_t datatype) {; 2667 fDataType = datatype;; 2668 }; 2669 ; 2670 void SetName(const char *name) {; 2671 fName = name;; 2672 }; 2673 void SetClassName(const char *name) {; 2674 fClassName = TClassEdit::ResolveTypedef(TClassEdit::ShortType( name, TClassEdit::kDropStlDefault | TClassEdit::kDropStd ).c_str(),kTRUE);; 2675 }; 2676 void SetComment(const char *title) {; 2677 const char *left = strstr(title,""["")",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html:105671,clear,clear,105671,doc/master/TStreamerInfo_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html,1,['clear'],['clear']
Usability," 2921 if (whichlibrary) {; 2922 library = whichlibrary;; 2923 delete [] whichlibrary;; 2924 } else {; 2925 ::Error(""ACLiC"",""The file %s can not be found in the include path: %s"",filename,incPath.Data());; 2926 return kFALSE;; 2927 }; 2928 } else {; 2929 if (gSystem->AccessPathName(library)) {; 2930 ::Error(""ACLiC"",""The file %s can not be found."",filename);; 2931 return kFALSE;; 2932 }; 2933 }; 2934 { // Remove multiple '/' characters, rootcling treats them as comments.; 2935 Ssiz_t pos = 0;; 2936 while ((pos = library.Index(""//"", 2, pos, TString::kExact)) != kNPOS) {; 2937 library.Remove(pos, 1);; 2938 }; 2939 }; 2940 library = gSystem->UnixPathName(library);; 2941 TString filename_fullpath = library;; 2942 ; 2943 TString file_dirname = GetDirName( filename_fullpath );; 2944 // For some probably good reason, DirName on Windows returns the 'name' of; 2945 // the directory, omitting the drive letter (even if there was one). In; 2946 // consequence the result is not usable as a 'root directory', we need to; 2947 // add the drive letter if there was one..; 2948 if (library.Length()>1 && isalpha(library[0]) && library[1]==':') {; 2949 file_dirname.Prepend(library(0,2));; 2950 }; 2951 TString file_location( file_dirname ); // Location of the script.; 2952 incPath.Prepend( file_location + "":"" );; 2953 ; 2954 Ssiz_t dot_pos = library.Last('.');; 2955 TString extension, libname_noext = library;; 2956 if (dot_pos >= 0) {; 2957 libname_noext.Remove(dot_pos);; 2958 extension = library(dot_pos+1, library.Length()-dot_pos-1);; 2959 }; 2960 ; 2961 // Extension of shared library is platform dependent!!; 2962 TString suffix = TString(""_"") + extension + ""."" + fSoExt;; 2963 if (dot_pos >= 0); 2964 library.Replace( dot_pos, library.Length()-dot_pos, suffix);; 2965 else; 2966 library.Append(suffix);; 2967 ; 2968 TString libname ( BaseName( libname_noext ) );; 2969 libname.Append(""_"").Append(extension);; 2970 ; 2971 if (library_specified && strlen(library_specified) ) {; 2972 // Use the s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:98217,usab,usable,98217,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['usab'],['usable']
Usability," 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TDictionary ();  ;  TDictionary (const char *name);  ;  TDictionary (const TDictionary &dict);  ; virtual ~TDictionary ();  ; void CreateAttributeMap ();  ; TDictAttributeMap * GetAttributeMap () const;  ; TClass * IsA () const override;  ; TDictionary & operator= (const TDictionary &other);  ; virtual Long_t Property () const =0;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDictionary.html:3871,Clear,Clear,3871,doc/master/classTDictionary.html,https://root.cern,https://root.cern/doc/master/classTDictionary.html,1,['Clear'],['Clear']
Usability," 317/// done in integration calls, there is no performance hit.; 318 ; 319double RooAbsPdf::getValV(const RooArgSet* nset) const; 320{; 321 ; 322 // Special handling of case without normalization set (used in numeric integration of pdfs); 323 if (!nset) {; 324 RooArgSet const* tmp = _normSet ;; 325 _normSet = nullptr ;; 326 double val = evaluate() ;; 327 _normSet = tmp ;; 328 ; 329 return TMath::IsNaN(val) ? 0. : val;; 330 }; 331 ; 332 ; 333 // Process change in last data set used; 334 bool nintChanged(false) ;; 335 if (!isActiveNormSet(nset) || _norm==nullptr) {; 336 nintChanged = syncNormalization(nset) ;; 337 }; 338 ; 339 // Return value of object. Calculated if dirty, otherwise cached value is returned.; 340 if (isValueDirty() || nintChanged || _norm->isValueDirty()) {; 341 ; 342 // Evaluate numerator; 343 const double rawVal = evaluate();; 344 ; 345 // Evaluate denominator; 346 const double normVal = _norm->getVal();; 347 ; 348 _value = normalizeWithNaNPacking(rawVal, normVal);; 349 ; 350 clearValueAndShapeDirty();; 351 }; 352 ; 353 return _value ;; 354}; 355 ; 356 ; 357////////////////////////////////////////////////////////////////////////////////; 358/// Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information).; 359///; 360/// This function applies the normalization specified by `normSet` to the integral returned; 361/// by RooAbsReal::analyticalIntegral(). The passthrough scenario (code=0) is also changed; 362/// to return a normalized answer.; 363 ; 364double RooAbsPdf::analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName) const; 365{; 366 cxcoutD(Eval) << ""RooAbsPdf::analyticalIntegralWN("" << GetName() << "") code = "" << code << "" normset = "" << (normSet?*normSet:RooArgSet()) << endl ;; 367 ; 368 ; 369 if (code==0) return getVal(normSet) ;; 370 if (normSet) {; 371 return analyticalIntegral(code,rangeName) / getNorm(normSet) ;; 372 } else {; 373 return analyticalIntegral(code,rangeNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:13056,clear,clearValueAndShapeDirty,13056,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['clear'],['clearValueAndShapeDirty']
Usability," 346 }; 347 ; 348 }; 349 ; 350 //; 351 // targets; 352 //; 353 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName()) << ""transform regression targets"" << Endl;; 354 for (formIt = fTargetFormulas.begin(), formItEnd = fTargetFormulas.end(); formIt!=formItEnd; ++formIt) if (*formIt) delete *formIt;; 355 fTargetFormulas.clear();; 356 for (UInt_t i=0; i<dsi.GetNTargets(); i++) {; 357 ttf = new TTreeFormula( TString::Format( ""Formula%s"", dsi.GetTargetInfo(i).GetInternalName().Data() ),; 358 dsi.GetTargetInfo(i).GetExpression().Data(), tr );; 359 CheckTTreeFormula( ttf, dsi.GetTargetInfo(i).GetExpression(), hasDollar );; 360 fTargetFormulas.push_back( ttf );; 361 }; 362 ; 363 //; 364 // spectators; 365 //; 366 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName()) << ""transform spectator variables"" << Endl;; 367 for (formIt = fSpectatorFormulas.begin(), formItEnd = fSpectatorFormulas.end(); formIt!=formItEnd; ++formIt) if (*formIt) delete *formIt;; 368 fSpectatorFormulas.clear();; 369 for (UInt_t i=0; i<dsi.GetNSpectators(); i++) {; 370 ttf = new TTreeFormula( TString::Format( ""Formula%s"", dsi.GetSpectatorInfo(i).GetInternalName().Data() ),; 371 dsi.GetSpectatorInfo(i).GetExpression().Data(), tr );; 372 CheckTTreeFormula( ttf, dsi.GetSpectatorInfo(i).GetExpression(), hasDollar );; 373 fSpectatorFormulas.push_back( ttf );; 374 }; 375 ; 376 //; 377 // the cuts (one per class, if non-existent: formula pointer = 0); 378 //; 379 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName()) << ""transform cuts"" << Endl;; 380 for (formIt = fCutFormulas.begin(), formItEnd = fCutFormulas.end(); formIt!=formItEnd; ++formIt) if (*formIt) delete *formIt;; 381 fCutFormulas.clear();; 382 for (UInt_t clIdx=0; clIdx<dsi.GetNClasses(); clIdx++) {; 383 const TCut& tmpCut = dsi.GetClassInfo(clIdx)->GetCut();; 384 const TString tmpCutExp(tmpCut.GetTitle());; 385 ttf = 0;; 386 if (tmpCutExp!="""") {; 387 ttf = new TTreeFormula( Form(""CutClass%i"",clIdx), tmpCutExp, tr );; 388 Bool_t worked = CheckTTre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:14910,clear,clear,14910,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['clear'],['clear']
Usability," 3D rotation about the X axis by the angle of rotation.Definition RotationX.h:45; ROOT::Math::RotationYRotation class representing a 3D rotation about the Y axis by the angle of rotation.Definition RotationY.h:45; ROOT::Math::RotationZYXRotation class with the (3D) rotation represented by angles describing first a rotation of an angle p...Definition RotationZYX.h:63; ROOT::Math::RotationZRotation class representing a 3D rotation about the Z axis by the angle of rotation.Definition RotationZ.h:45; ROOT::Math::UnitSVector< T, D > Unit(const SVector< T, D > &rhs)Unit.Definition Functions.h:382; nconst Int_t nDefinition legend1.C:16; MathNamespace for new Math classes and functions.; ROOT::Math::Impl::operator*Transform3D< T > operator*(const Rotation3D &r, const Translation3D< T > &t)combine a translation and a rotation to give a transform3d First the translation then the rotationDefinition Transform3D.h:1071; ROOT::Math::kYY@ kYYDefinition AxisAngle.cxx:66; ROOT::Math::kYX@ kYXDefinition AxisAngle.cxx:66; ROOT::Math::kZX@ kZXDefinition AxisAngle.cxx:67; ROOT::Math::kXX@ kXXDefinition AxisAngle.cxx:65; ROOT::Math::kXZ@ kXZDefinition AxisAngle.cxx:65; ROOT::Math::kZZ@ kZZDefinition AxisAngle.cxx:67; ROOT::Math::kYZ@ kYZDefinition AxisAngle.cxx:66; ROOT::Math::kZY@ kZYDefinition AxisAngle.cxx:67; ROOT::Math::kXY@ kXYDefinition AxisAngle.cxx:65; ROOT::Math::Transform3DFImpl::Transform3D< float > Transform3DFDefinition Transform3D.h:1315; ROOT::Math::Transform3DImpl::Transform3D< double > Transform3DDefinition Transform3D.h:1314; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; v2@ v2Definition rootcling_impl.cxx:3702; v@ vDefinition rootcling_impl.cxx:3699; v1@ v1Definition rootcling_impl.cxx:3701; mTMarker mDefinition textangle.C:8. mathgenvectorincMathGenVectorTransform3D.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:39 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2Transform3D_8h_source.html:65735,Guid,Guide,65735,doc/master/GenVector_2Transform3D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2Transform3D_8h_source.html,1,['Guid'],['Guide']
Usability," 408 of file TBtree.cxx. ◆ RootIsEmpty(). void TBtree::RootIsEmpty ; (; ). private . If root is empty clean up its space. ; Definition at line 441 of file TBtree.cxx. ◆ RootIsFull(). void TBtree::RootIsFull ; (; ). private . The root of the tree is full. ; Create an InnerNode that points to it, and then inform the InnerNode that it is full. ; Definition at line 430 of file TBtree.cxx. ◆ Streamer(). void TBtree::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the btree to or from the I/O buffer. ; Reimplemented from TObject.; Definition at line 460 of file TBtree.cxx. ◆ StreamerNVirtual(). void TBtree::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 100 of file TBtree.h. Friends And Related Symbol Documentation. ◆ TBtInnerNode. friend class TBtInnerNode. friend . Definition at line 41 of file TBtree.h. ◆ TBtLeafNode. friend class TBtLeafNode. friend . Definition at line 42 of file TBtree.h. ◆ TBtNode. friend class TBtNode. friend . Definition at line 40 of file TBtree.h. Member Data Documentation. ◆ fInnerLowWaterMark. Int_t TBtree::fInnerLowWaterMark. private . Definition at line 50 of file TBtree.h. ◆ fInnerMaxIndex. Int_t TBtree::fInnerMaxIndex. private . Definition at line 52 of file TBtree.h. ◆ fLeafLowWaterMark. Int_t TBtree::fLeafLowWaterMark. private . Definition at line 51 of file TBtree.h. ◆ fLeafMaxIndex. Int_t TBtree::fLeafMaxIndex. private . Definition at line 53 of file TBtree.h. ◆ fOrder. Int_t TBtree::fOrder. private . Definition at line 47 of file TBtree.h. ◆ fOrder2. Int_t TBtree::fOrder2. private . Definition at line 48 of file TBtree.h. ◆ fRoot. TBtNode* TBtree::fRoot. private . Definition at line 45 of file TBtree.h. Libraries for TBtree:. [legend]; The documentation for this class was generated from the following files:; core/cont/inc/TBtree.h; core/cont/src/TBtree.cxx. TBtree. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBtree.html:33187,Guid,Guide,33187,doc/master/classTBtree.html,https://root.cern,https://root.cern/doc/master/classTBtree.html,1,['Guid'],['Guide']
Usability," 40; // fall through; 812 case 5: k1 ^= uint64_t(tail[ 4]) << 32; // fall through; 813 case 4: k1 ^= uint64_t(tail[ 3]) << 24; // fall through; 814 case 3: k1 ^= uint64_t(tail[ 2]) << 16; // fall through; 815 case 2: k1 ^= uint64_t(tail[ 1]) << 8; // fall through; 816 case 1: k1 ^= uint64_t(tail[ 0]) << 0;; 817 k1 *= c1; k1 = ROTL64(k1,31); k1 *= c2; h1 ^= k1;; 818 };; 819 ; 820 //----------; 821 // finalization; 822 ; 823 h1 ^= len; h2 ^= len;; 824 ; 825 h1 += h2;; 826 h2 += h1;; 827 ; 828 h1 = fmix(h1);; 829 h2 = fmix(h2);; 830 ; 831 h1 += h2;; 832 h2 += h1;; 833 ; 834 ((uint64_t*)out)[0] = h1;; 835 ((uint64_t*)out)[1] = h2;; 836 }; 837 ; 838}; 839 ; 840////////////////////////////////////////////////////////////////////////////////; 841/// Calculates hash index from any char string. (static function); 842/// - For string: i = TString::Hash(string,nstring);; 843/// - For int: i = TString::Hash(&intword,sizeof(int));; 844/// - For pointer: i = TString::Hash(&pointer,sizeof(void*));; 845///; 846/// This employs two different hash functions, depending on ntxt:; 847/// - ntxt == sizeof(void*): a simple bitwise xor to get fast pointer hashes; 848/// - else: MurmurHash3_x64_128 http://code.google.com/p/smhasher/; 849 ; 850UInt_t TString::Hash(const void *txt, Int_t ntxt); 851{; 852 if (ntxt != sizeof(void*)) {; 853 uint64_t buf[2] = {0};; 854 MurmurHash3_x64_128(txt, ntxt, 0x6384BA69, buf);; 855 return (UInt_t) buf[0];; 856 } else {; 857 // simple, superfast hash for pointers and alike; 858 UInt_t ret = (UInt_t)0x6384BA69;; 859 // aligned?; 860 if (((size_t)txt) % sizeof(void*)) {; 861 UInt_t* itxt = (UInt_t*)txt;; 862 ret ^= itxt[0];; 863 if (sizeof(void*) > sizeof(UInt_t)) {; 864 ret ^= itxt[1];; 865 }; 866 } else {; 867 const unsigned char* ctxt = (const unsigned char*) txt;; 868 for (unsigned int i = 0; i < 4; ++i) {; 869 ret ^= ctxt[i] << (i * 8);; 870 }; 871 if (sizeof(void*) > sizeof(UInt_t)) {; 872 ctxt += 4;; 873 for (unsigned int i = 0; i < 4; ++i) {; 874 ret ^",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TString_8cxx_source.html:25591,simpl,simple,25591,doc/master/TString_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TString_8cxx_source.html,1,['simpl'],['simple']
Usability," 4339 ; 4340/** Base function for computing multiple values of a RooAbsReal.; 4341\param ctx An evaluation context object; 4342**/; 4343void RooAbsReal::doEval(RooFit::EvalContext & ctx) const; 4344{; 4345 std::span<double> output = ctx.output();; 4346 ; 4347 // Find all servers that are serving real numbers to us, retrieve their batch data,; 4348 // and switch them into ""always clean"" operating mode, so they return always the last-set value.; 4349 struct ServerData {; 4350 RooAbsArg* server;; 4351 std::span<const double> batch;; 4352 double oldValue;; 4353 RooAbsArg::OperMode oldOperMode;; 4354 bool oldValueDirty;; 4355 bool oldShapeDirty;; 4356 };; 4357 std::vector<ServerData> ourServers;; 4358 ourServers.reserve(servers().size());; 4359 ; 4360 for (auto server : servers()) {; 4361 auto serverValues = ctx.at(server);; 4362 if(serverValues.empty()) continue;; 4363 ; 4364 // maybe we are still missing inhibit dirty here; 4365 auto oldOperMode = server->operMode();; 4366 // See note at the bottom of this function to learn why we can only set; 4367 // the operation mode to ""always clean"" if there are no other value; 4368 // clients.; 4369 server->setOperMode(RooAbsArg::AClean);; 4370 ourServers.push_back({server,; 4371 serverValues,; 4372 server->isCategory() ? static_cast<RooAbsCategory const*>(server)->getCurrentIndex() : static_cast<RooAbsReal const*>(server)->_value,; 4373 oldOperMode,; 4374 server->_valueDirty,; 4375 server->_shapeDirty});; 4376 // Prevent the server from evaluating; just return cached result, which we will side load:; 4377 }; 4378 ; 4379 ; 4380 // Make sure that we restore all state when we finish:; 4381 struct RestoreStateRAII {; 4382 RestoreStateRAII(std::vector<ServerData>& servers) :; 4383 _servers{servers} { }; 4384 ; 4385 ~RestoreStateRAII() {; 4386 for (auto& serverData : _servers) {; 4387 serverData.server->setCachedValue(serverData.oldValue, true);; 4388 serverData.server->setOperMode(serverData.oldOperMode);; 4389 serverData.server->_va",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:192516,learn,learn,192516,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['learn'],['learn']
Usability," 43Making several branches is particularly interesting in the data analysis phase,; 44when it is desirable to have a high reading rate and not all columns are equally interesting; 45 ; 46\anchor creatingattreetoc; 47## Create a TTree to store columnar data; 48- [Construct a TTree](\ref creatingattree); 49- [Add a column of Fundamental Types and Arrays thereof](\ref addcolumnoffundamentaltypes); 50- [Add a column of a STL Collection instances](\ref addingacolumnofstl); 51- [Add a column holding an object](\ref addingacolumnofobjs); 52- [Add a column holding a TObjectArray](\ref addingacolumnofobjs); 53- [Fill the tree](\ref fillthetree); 54- [Add a column to an already existing Tree](\ref addcoltoexistingtree); 55- [An Example](\ref fullexample); 56 ; 57\anchor creatingattree; 58## Construct a TTree; 59 ; 60~~~ {.cpp}; 61 TTree tree(name, title); 62~~~; 63Creates a Tree with name and title.; 64 ; 65Various kinds of branches can be added to a tree:; 66- Variables representing fundamental types, simple classes/structures or list of variables: for example for C or Fortran; 67structures.; 68- Any C++ object or collection, provided by the STL or ROOT.; 69 ; 70In the following, the details about the creation of different types of branches are given.; 71 ; 72\anchor addcolumnoffundamentaltypes; 73## Add a column (""branch"") holding fundamental types and arrays thereof; 74This strategy works also for lists of variables, e.g. to describe simple structures.; 75It is strongly recommended to persistify those as objects rather than lists of leaves.; 76 ; 77~~~ {.cpp}; 78 auto branch = tree.Branch(branchname, address, leaflist, bufsize); 79~~~; 80- address is the address of the first item of a structure; 81- leaflist is the concatenation of all the variable names and types; 82 separated by a colon character :; 83 The variable name and the variable type are separated by a; 84 slash (/). The variable type must be 1 character. (Characters; 85 after the first are legal and will be appen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:3318,simpl,simple,3318,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['simpl'],['simple']
Usability," 44 of file RooChi2Var.h. Member Function Documentation. ◆ clone(). TObject * RooChi2Var::clone ; (; const char * ; newname); const. inlineoverridevirtual . Implements RooAbsArg.; Definition at line 29 of file RooChi2Var.h. ◆ create(). RooAbsTestStatistic * RooChi2Var::create ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; pdf, . RooAbsData & ; dhist, . const RooArgSet & ; projDeps, . RooAbsTestStatistic::Configuration const & ; cfg . ). inlineoverridevirtual . Implements RooAbsTestStatistic.; Definition at line 31 of file RooChi2Var.h. ◆ defaultErrorLevel(). double RooChi2Var::defaultErrorLevel ; (; ); const. inlineoverridevirtual . Reimplemented from RooAbsReal.; Definition at line 37 of file RooChi2Var.h. ◆ evaluatePartition(). double RooChi2Var::evaluatePartition ; (; std::size_t ; firstEvent, . std::size_t ; lastEvent, . std::size_t ; stepSize . ); const. overrideprotectedvirtual . Calculate chi^2 in partition from firstEvent to lastEvent using given stepSize Throughout the calculation, we use Kahan's algorithm for summing to prevent loss of precision - this is a factor four more expensive than straight addition, but since evaluating the PDF is usually much more expensive than that, we tolerate the additional cost... ; Implements RooAbsTestStatistic.; Definition at line 95 of file RooChi2Var.cxx. Member Data Documentation. ◆ _emptySet. RooArgSet RooChi2Var::_emptySet. staticprotected . Supports named argument constructor. ; Definition at line 54 of file RooChi2Var.h. ◆ _etype. RooDataHist::ErrorType RooChi2Var::_etype. protected . Error type store in associated RooDataHist. ; Definition at line 56 of file RooChi2Var.h. ◆ _funcMode. FuncMode RooChi2Var::_funcMode. protected . Function, P.d.f. or extended p.d.f? ; Definition at line 57 of file RooChi2Var.h. roofit/roofitcore/src/RooChi2Var.h; roofit/roofitcore/src/RooChi2Var.cxx. RooChi2Var. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:48 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChi2Var.html:72910,Guid,Guide,72910,doc/master/classRooChi2Var.html,https://root.cern,https://root.cern/doc/master/classRooChi2Var.html,1,['Guid'],['Guide']
Usability," 445 of file TProofChain.cxx. ◆ SetDebug(). void TProofChain::SetDebug ; (; Int_t ; level = 1, . Long64_t ; min = 0, . Long64_t ; max = 9999999 . ). overridevirtual . See TTree::SetDebug. ; Reimplemented from TTree.; Definition at line 381 of file TProofChain.cxx. ◆ SetEntryList(). void TProofChain::SetEntryList ; (; TEntryList * ; enlist, . const Option_t * ;  . ). inlineoverride . Definition at line 84 of file TProofChain.h. ◆ SetEventList(). void TProofChain::SetEventList ; (; TEventList * ; evlist). inlineoverridevirtual . This function transfroms the given TEventList into a TEntryList. ; NOTE, that this function loads all tree headers, because the entry numbers in the TEventList are global and have to be recomputed, taking into account the number of entries in each tree.; The new TEntryList is owned by the TChain and gets deleted when the chain is deleted. This TEntryList is returned by GetEntryList() function, and after GetEntryList() function is called, the TEntryList is not owned by the chain any more and will not be deleted with it. ; Reimplemented from TChain.; Definition at line 83 of file TProofChain.h. ◆ SetName(). void TProofChain::SetName ; (; const char * ; name). overridevirtual . See TTree::GetName. ; Reimplemented from TChain.; Definition at line 389 of file TProofChain.cxx. ◆ Streamer(). void TProofChain::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TChain. ◆ StreamerNVirtual(). void TProofChain::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 89 of file TProofChain.h. Member Data Documentation. ◆ fChain. TChain* TProofChain::fChain. protected . Definition at line 42 of file TProofChain.h. ◆ fSet. TDSet* TProofChain::fSet. protected . Definition at line 43 of file TProofChain.h. proof/proof/inc/TProofChain.h; proof/proof/src/TProofChain.cxx. TProofChain. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:13 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofChain.html:64518,Guid,Guide,64518,doc/master/classTProofChain.html,https://root.cern,https://root.cern/doc/master/classTProofChain.html,1,['Guid'],['Guide']
Usability," 45 of file TProofPlayerLite.cxx. ◆ Process() [1/2]. Long64_t TProofPlayerLite::Process ; (; TDSet * ; dset, . const char * ; selector_file, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). overridevirtual . Process specified TDSet on PROOF. ; This method is called on client and on the PROOF master. The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProofPlayer.; Definition at line 109 of file TProofPlayerLite.cxx. ◆ Process() [2/2]. Long64_t TProofPlayerLite::Process ; (; TDSet * ; dset, . TSelector * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). overridevirtual . Process specified TDSet on PROOF. ; This method is called on client and on the PROOF master. The return value is -1 in case of an error and TSelector::GetStatus() in in case of success. ; Reimplemented from TProofPlayer.; Definition at line 80 of file TProofPlayerLite.cxx. ◆ SetupFeedback(). void TProofPlayerLite::SetupFeedback ; (; ). overrideprotectedvirtual . Setup reporting of feedback objects. ; Reimplemented from TProofPlayer.; Definition at line 485 of file TProofPlayerLite.cxx. ◆ StoreFeedback(). void TProofPlayerLite::StoreFeedback ; (; TObject * ; slave, . TList * ; out . ). overridevirtual . Store feedback results from the specified slave. ; Reimplemented from TProofPlayer.; Definition at line 511 of file TProofPlayerLite.cxx. ◆ Streamer(). void TProofPlayerLite::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TProofPlayer. ◆ StreamerNVirtual(). void TProofPlayerLite::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 53 of file TProofPlayerLite.h. proof/proofplayer/inc/TProofPlayerLite.h; proof/proofplayer/src/TProofPlayerLite.cxx. TProofPlayerLite. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPlayerLite.html:30681,feedback,feedback,30681,doc/master/classTProofPlayerLite.html,https://root.cern,https://root.cern/doc/master/classTProofPlayerLite.html,3,"['Guid', 'feedback']","['Guide', 'feedback']"
Usability," 48 of file TStreamerElement.h. ◆ fFactor. Double_t TStreamerElement::fFactor. protected . Maximum of data member if a range is specified [xmin,xmax,nbits]. ; Definition at line 53 of file TStreamerElement.h. ◆ fMaxIndex. Int_t TStreamerElement::fMaxIndex[5]. protected . Definition at line 43 of file TStreamerElement.h. ◆ fNewClass. TClass* TStreamerElement::fNewClass. protected . pointer to class of object ; Definition at line 49 of file TStreamerElement.h. ◆ fNewType. Int_t TStreamerElement::fNewType. protected . base offset for TObject if the element inherits from it ; Definition at line 46 of file TStreamerElement.h. ◆ fOffset. Int_t TStreamerElement::fOffset. protected . Definition at line 44 of file TStreamerElement.h. ◆ fSize. Int_t TStreamerElement::fSize. protected . Definition at line 40 of file TStreamerElement.h. ◆ fStreamer. TMemberStreamer* TStreamerElement::fStreamer. protected . new element class when reading ; Definition at line 50 of file TStreamerElement.h. ◆ fTObjectOffset. Int_t TStreamerElement::fTObjectOffset. protected . element offset in class ; Definition at line 45 of file TStreamerElement.h. ◆ fType. Int_t TStreamerElement::fType. protected . Definition at line 39 of file TStreamerElement.h. ◆ fTypeName. TString TStreamerElement::fTypeName. protected . new element type when reading ; Definition at line 47 of file TStreamerElement.h. ◆ fXmax. Double_t TStreamerElement::fXmax. protected . Minimum of data member if a range is specified [xmin,xmax,nbits]. ; Definition at line 52 of file TStreamerElement.h. ◆ fXmin. Double_t TStreamerElement::fXmin. protected . pointer to element Streamer ; Definition at line 51 of file TStreamerElement.h. Libraries for TStreamerElement:. [legend]; The documentation for this class was generated from the following files:; core/meta/inc/TStreamerElement.h; core/meta/src/TStreamerElement.cxx. TStreamerElement. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTStreamerElement.html:30124,Guid,Guide,30124,doc/master/classTStreamerElement.html,https://root.cern,https://root.cern/doc/master/classTStreamerElement.html,1,['Guid'],['Guide']
Usability," 4978 HeadersDeclsMap_t headersClassesMap;; 4979 HeadersDeclsMap_t headersDeclsMap;; 4980 if (!gOptIgnoreExistingDict) {; 4981 const std::string fwdDeclnArgsToKeepString(GetFwdDeclnArgsToKeepString(normCtxt, interp));; 4982 ; 4983 ExtractHeadersForDecls(scan.fSelectedClasses,; 4984 scan.fSelectedTypedefs,; 4985 scan.fSelectedFunctions,; 4986 scan.fSelectedVariables,; 4987 scan.fSelectedEnums,; 4988 headersClassesMap,; 4989 headersDeclsMap,; 4990 interp);; 4991 ; 4992 std::string detectedUmbrella;; 4993 for (auto & arg : pcmArgs) {; 4994 if (gOptInlineInput && !ROOT::TMetaUtils::IsLinkdefFile(arg.c_str()) && ROOT::TMetaUtils::IsHeaderName(arg)) {; 4995 detectedUmbrella = arg;; 4996 break;; 4997 }; 4998 }; 4999 ; 5000 if (gOptWriteEmptyRootPCM){; 5001 headersDeclsMap.clear();; 5002 }; 5003 ; 5004 ; 5005 std::string headersClassesMapString = ""\""\"""";; 5006 std::string fwdDeclsString = ""\""\"""";; 5007 if (!gOptCxxModule) {; 5008 headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,; 5009 detectedUmbrella,; 5010 true);; 5011 if (!gDriverConfig->fBuildingROOTStage1) {; 5012 if (!gOptWriteEmptyRootPCM); 5013 fwdDeclsString = GenerateFwdDeclString(scan, interp);; 5014 }; 5015 }; 5016 modGen.WriteRegistrationSource(dictStream, fwdDeclnArgsToKeepString, headersClassesMapString, fwdDeclsString,; 5017 extraIncludes, gOptCxxModule);; 5018 // If we just want to inline the input header, we don't need; 5019 // to generate any files.; 5020 if (!gOptInlineInput) {; 5021 // Write the module/PCH depending on what mode we are on; 5022 if (modGen.IsPCH()) {; 5023 if (!GenerateAllDict(modGen, CI, currentDirectory)) return 1;; 5024 } else if (gOptCxxModule) {; 5025 if (!CheckModuleValid(modGen, llvmResourceDir, interp, linkdefFilename, moduleName.str())); 5026 return 1;; 5027 }; 5028 }; 5029 }; 5030 ; 5031 ; 5032 if (!gOptLibListPrefix.empty()) {; 5033 string liblist_filename = gOptLibListPrefix + "".out"";; 5034 ; 5035 ofstream outputfile(liblist_filename.c_str(), ios:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:203715,clear,clear,203715,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,1,['clear'],['clear']
Usability," 5.11.3 MnSimplex(const FCNBase&, const MnUserParameterState&,; const MnStrategy&); Constructor from a full state (parameters + covariance) as starting input plus the desired strategy.; 5.11.4 operator(); MnSimplex::operator()(unsigned int maxfcn, double tolerance) causes minimization of the \(\mbox{FCN}\) and returns the result in form of a FunctionMinimum. Minimization terminates either when the function has been called (approximately) \(\mbox{maxfcn}\) times, or when the estimated vertical distance to minimum (\(\mbox{EDM}\)) is less than \(\mbox{tolerance*up}\). The default value of \(\mbox{tolerance}\) is \(\mbox{0.1}\). (see [howto:errordef]).; 5.11.5 Parameter interaction; MnSimplex retains the result after each minimization (MnUserParameterStae, see [api:state]) and forwards the interface for parameter interaction.; 5.11.6 SimplexMinimizer(); The SimplexMinimizer() is instantiated using default constructor.; 5.11.7 minimize(const FCNBase&, …); The SimplexMinimizer provides several overloaded methods minimize with return value FunctionMinimum. Together with the user \(\mbox{FCN}\) (either an implementation of FCNBase or FCNGradientBase) the user has to give as input the parameters with starting values in one of the defined formats (std::vector\(<\)double\(>\), MnUserParameters or MnUserParameterState).; 5.12 MnStrategy; [api:strategy] Sets the strategy to be used in calculating first and second derivatives and in certain minimization methods. In general, low values of \(\mbox{level}\) mean fewer function calls and high values mean more reliable minimization. Currently allowed values are 0 (low), 1 (default), and 2 (high).; 5.12.1 MnStrategy(); Default constructor, sets all settings according to \(\mbox{level}\)$ = 1.$; 5.12.2 MnStrategy(unsigned int level); Explicit constructor for predefined settings of desired \(\mbox{level}\) 0 (low), 1 (default), or 2 (high).; 5.12.3 setLowStrategy(), setMediumStrategy(), setHighStrategy(); Methods to set specific strategy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:55695,Simpl,SimplexMinimizer,55695,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,1,['Simpl'],['SimplexMinimizer']
Usability," 5.3 MnEigen; 5.3.1 MnEigen(); 5.3.2 operator(). 5.4 MnHesse; 5.4.1 MnHesse(); 5.4.2 operator(). 5.5 MnMachinePrecision; 5.5.1 MnMachinePrecision(); 5.5.2 setPrecision(double eps). 5.6 MnMigrad and VariableMetricMinimizer; 5.6.1 MnMigrad(const FCNBase&, const std::vector\(<\)double\(>\)&, const std::vector\(<\)double\(>\)&, unsigned int); 5.6.2 MnMigrad(const FCNBase&, const MnUserParameters&, unsigned int); 5.6.3 MnMigrad(const FCNBase&, const MnUserParameterState&, const MnStrategy&); 5.6.4 operator(); 5.6.5 Parameter interaction; 5.6.6 VariableMetricMinimizer(); 5.6.7 minimize(const FCNBase&, …). 5.7 MnMinimize and CombinedMinimizer; 5.8 MnMinos; 5.8.1 MnMinos(const FCNBase&, const FunctionMinimum&); 5.8.2 operator(); 5.8.3 minos(unsigned int n, unsigned int maxcalls); 5.8.4 Other methods. 5.9 MnPlot; 5.9.1 MnPlot(); 5.9.2 operator(). 5.10 MnScan and ScanMinimizer; 5.10.1 scan(unsigned int par, unsigned int npoint, double low, double high); 5.10.2 ScanMinimizer. 5.11 MnSimplex and SimplexMinimizer; 5.11.1 MnSimplex(const FCNBase&, const std::vector\(<\)double\(>\)&,; const std::vector\(<\)double\(>\)&, unsigned int); 5.11.2 MnSimplex(const FCNBase&, const MnUserParameters&,; unsigned int); 5.11.3 MnSimplex(const FCNBase&, const MnUserParameterState&,; const MnStrategy&); 5.11.4 operator(); 5.11.5 Parameter interaction; 5.11.6 SimplexMinimizer(); 5.11.7 minimize(const FCNBase&, …). 5.12 MnStrategy; 5.12.1 MnStrategy(); 5.12.2 MnStrategy(unsigned int level); 5.12.3 setLowStrategy(), setMediumStrategy(), setHighStrategy(); 5.12.4 Other methods. 5.13 MnUserCovariance; 5.13.1 MnUserCovariance(const std::vector\(<\)double\(>\)&, unsigned int nrow); 5.13.2 MnUserCovariance(unsigned int nrow); 5.13.3 MnUserCovariance::operator()(unsigned int, unsigned int). 5.14 MnUserParameters; 5.14.1 add(…); 5.14.2 setValue(…); 5.14.3 setError(…); 5.14.4 fix(…); 5.14.5 release(…); 5.14.6 setLimits(…); 5.14.7 setUpperLimit(…); 5.14.8 setLowerLimit(…); 5.14.9 removeLimits(…); 5.14.10 val",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:2766,Simpl,SimplexMinimizer,2766,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,1,['Simpl'],['SimplexMinimizer']
Usability," 52 of file TTabCom.h. Public Types; enum  { kDebug = 17; };  ; enum  EContext_t { ;   kUNKNOWN_CONTEXT =-1; , kSYS_UserName; , kSYS_EnvVar; , kCINT_stdout; , ;   kCINT_stderr; , kCINT_stdin; , kCINT_Edit; , kCINT_Load; , ;   kCINT_Exec; , kCINT_EXec; , kCINT_pragma; , kCINT_includeSYS; , ;   kCINT_includePWD; , kCINT_cpp; , kROOT_Load; , kSYS_FileName; , ;   kCXX_NewProto; , kCXX_ConstructorProto; , kCXX_ScopeProto; , kCXX_DirectProto; , ;   kCXX_IndirectProto; , kCXX_ScopeMember; , kCXX_DirectMember; , kCXX_IndirectMember; , ;   kCXX_Global; , kCXX_GlobalProto; , kNUM_PAT. };  ; typedef TList TContainer;  ; typedef TListIter TContIter;  . Public Member Functions;  TTabCom ();  Default constructor. ;  ; virtual ~TTabCom ();  ; void ClearAll ();  clears all lists except for user names and system include files. ;  ; void ClearClasses ();  Clear classes and namespace collections. ;  ; void ClearCppDirectives ();  Forget all Cpp directives seen so far. ;  ; void ClearEnvVars ();  Forget all environment variables seen so far. ;  ; void ClearFiles ();  Close all files. ;  ; void ClearGlobalFunctions ();  Forget all global functions seen so far. ;  ; void ClearGlobals ();  Forget all global variables seen so far. ;  ; void ClearPragmas ();  Forget all pragmas seen so far. ;  ; void ClearSysIncFiles ();  Close system files. ;  ; void ClearUsers ();  Forget all user seen so far. ;  ; const TSeqCollection * GetListOfClasses ();  Return the list of classes. ;  ; const TSeqCollection * GetListOfCppDirectives ();  Return the list of CPP directives. ;  ; const TSeqCollection * GetListOfEnvVars ();  Uses ""env"" (Unix) or ""set"" (Windows) to get list of environment variables. ;  ; const TSeqCollection * GetListOfFilesInPath (const char path[]);  ""path"" should be initialized with a colon separated list of system directories ;  ; TCollection * GetListOfGlobalFunctions ();  Return the list of global functions. ;  ; const TSeqCollection * GetListOfGlobals ();  Return the list of globals",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTabCom.html:1305,Clear,ClearEnvVars,1305,doc/master/classTTabCom.html,https://root.cern,https://root.cern/doc/master/classTTabCom.html,1,['Clear'],['ClearEnvVars']
Usability," 55 of file TPDF.h. ◆ fGreen. Float_t TPDF::fGreen. protected . Per cent of green. ; Definition at line 34 of file TPDF.h. ◆ fLineScale. Float_t TPDF::fLineScale. protected . Line width scale factor. ; Definition at line 44 of file TPDF.h. ◆ fNbObj. Int_t TPDF::fNbObj {0}. protected . Number of objects. ; Definition at line 47 of file TPDF.h. ◆ fNbPage. Int_t TPDF::fNbPage. protected . Number of pages. ; Definition at line 48 of file TPDF.h. ◆ fObjPos. Int_t* TPDF::fObjPos {nullptr}. protected . Objects position. ; Definition at line 45 of file TPDF.h. ◆ fObjPosSize. Int_t TPDF::fObjPosSize {0}. protected . Real size of fObjPos. ; Definition at line 46 of file TPDF.h. ◆ fPageFormat. Int_t TPDF::fPageFormat. protected . Page format (A4, Letter etc ...) ; Definition at line 41 of file TPDF.h. ◆ fPageNotEmpty. Bool_t TPDF::fPageNotEmpty. protected . True if the current page is not empty. ; Definition at line 49 of file TPDF.h. ◆ fPageOrientation. Int_t TPDF::fPageOrientation. protected . Page orientation (Portrait, Landscape) ; Definition at line 42 of file TPDF.h. ◆ fRange. Bool_t TPDF::fRange. protected . True when a range has been defined. ; Definition at line 51 of file TPDF.h. ◆ fRed. Float_t TPDF::fRed. protected . Per cent of red. ; Definition at line 33 of file TPDF.h. ◆ fStartStream. Int_t TPDF::fStartStream. protected . Definition at line 43 of file TPDF.h. ◆ fType. Int_t TPDF::fType. protected . Workstation type used to know if the PDF is open. ; Definition at line 40 of file TPDF.h. ◆ fXsize. Float_t TPDF::fXsize. protected . Page size along X. ; Definition at line 38 of file TPDF.h. ◆ fYsize. Float_t TPDF::fYsize. protected . Page size along Y. ; Definition at line 39 of file TPDF.h. Libraries for TPDF:. [legend]; The documentation for this class was generated from the following files:; graf2d/postscript/inc/TPDF.h; graf2d/postscript/src/TPDF.cxx. TPDF. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:08 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPDF.html:43349,Guid,Guide,43349,doc/master/classTPDF.html,https://root.cern,https://root.cern/doc/master/classTPDF.html,1,['Guid'],['Guide']
Usability," 56 of file TGListTree.h. Member Function Documentation. ◆ CheckAllChildren(). virtual void TGListTreeItem::CheckAllChildren ; (; Bool_t ; = kTRUE). inlinevirtual . Reimplemented in TGListTreeItemStd.; Definition at line 95 of file TGListTree.h. ◆ CheckChildren(). virtual void TGListTreeItem::CheckChildren ; (; TGListTreeItem * ; , . Bool_t ;  . ). inlinevirtual . Reimplemented in TGListTreeItemStd.; Definition at line 96 of file TGListTree.h. ◆ CheckItem(). virtual void TGListTreeItem::CheckItem ; (; Bool_t ; = kTRUE). pure virtual . Implemented in TGListTreeItemStd, and TEveListTreeItem. ◆ Class(). static TClass * TGListTreeItem::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGListTreeItem::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGListTreeItem::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 122 of file TGListTree.h. ◆ ClearColor(). virtual void TGListTreeItem::ClearColor ; (; ). inlinevirtual . Reimplemented in TEveListTreeItem, and TGListTreeItemStd.; Definition at line 105 of file TGListTree.h. ◆ DeclFileName(). static const char * TGListTreeItem::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 122 of file TGListTree.h. ◆ GetActiveColor(). virtual Pixel_t TGListTreeItem::GetActiveColor ; (; ); const. pure virtual . Implemented in TEveListTreeItem, and TGListTreeItemStd. ◆ GetCheckBoxPicture(). virtual const TGPicture * TGListTreeItem::GetCheckBoxPicture ; (; ); const. pure virtual . Implemented in TEveListTreeItem, and TGListTreeItemStd. ◆ GetColor(). virtual Color_t TGListTreeItem::GetColor ; (; ); const. pure virtual . Implemented in TEveListTreeItem, and TGListTreeItemStd. ◆ GetFirstChild(). TGListTreeItem * TGListTreeItem::GetFirstChild ; (; ); const. inline . Definition at line 59 of file TGListTree.h. ◆ GetLastChild(). TGListTreeIt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGListTreeItem.html:5184,Clear,ClearColor,5184,doc/master/classTGListTreeItem.html,https://root.cern,https://root.cern/doc/master/classTGListTreeItem.html,1,['Clear'],['ClearColor']
Usability," 579 (((char*)&p->second)-((char*)&p->first)),; 580 T::value_offset(),; 581 T::size,; 582 T::resize,; 583 T::clear,; 584 T::first,; 585 T::next,; 586 T::construct,; 587 T::destruct,; 588 T::feed,; 589 T::collect,; 590 T::Env_t::Create,; 591 T::Iterators_t::create,; 592 T::Iterators_t::copy,; 593 T::Iterators_t::next,; 594 T::Iterators_t::destruct1,; 595 T::Iterators_t::destruct2);; 596 }; 597 ; 598 template <class T> static TCollectionProxyInfo Get(const T&) {; 599 ; 600 // Generate a TCollectionProxyInfo given a TCollectionProxyInfo::Type; 601 // template (used to described the behavior of the stl collection.; 602 // Typical use looks like:; 603 // ::ROOT::Detail::TCollectionProxyInfo::Get(TCollectionProxyInfo::Pushback< std::vector<string> >()));; 604 ; 605 PairHolder<TYPENAME T::Value_t, TYPENAME T::Value_t>* p =; 606 (PairHolder<TYPENAME T::Value_t, TYPENAME T::Value_t>*)0x1000;; 607 return TCollectionProxyInfo(typeid(TYPENAME T::Cont_t),; 608 sizeof(TYPENAME T::Iter_t),; 609 (((char*)&p->second)-((char*)&p->first)),; 610 T::value_offset(),; 611 T::size,; 612 T::resize,; 613 T::clear,; 614 T::first,; 615 T::next,; 616 T::construct,; 617 T::destruct,; 618 T::feed,; 619 T::collect,; 620 T::Env_t::Create);; 621 }; 622 ; 623 };; 624 ; 625 // This specialization is chosen if T is a vector<bool, A>, irrespective of the nature; 626 // of the allocator A represents.; 627 template <class A> struct TCollectionProxyInfo::Type<std::vector<Bool_t, A>>; 628 : public TCollectionProxyInfo::Address<typename std::vector<Bool_t, A>::const_reference>; 629 {; 630 typedef std::vector<Bool_t, A> Cont_t;; 631 typedef typename Cont_t::iterator Iter_t;; 632 typedef typename Cont_t::value_type Value_t;; 633 typedef Environ<Iter_t> Env_t;; 634 typedef Env_t *PEnv_t;; 635 typedef Cont_t *PCont_t;; 636 typedef Value_t *PValue_t;; 637 ; 638 virtual ~Type() {}; 639 ; 640 static inline PCont_t object(void* ptr) {; 641 return PCont_t(PEnv_t(ptr)->fObject);; 642 }; 643 static void* size(void* env)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollectionProxyInfo_8h_source.html:21424,clear,clear,21424,doc/master/TCollectionProxyInfo_8h_source.html,https://root.cern,https://root.cern/doc/master/TCollectionProxyInfo_8h_source.html,1,['clear'],['clear']
Usability," 58 ClassDefOverride(TH2PolyBin,1) //2-Dim polygon bins; 59};; 60 ; 61class TList;; 62class TGraph;; 63class TMultiGraph;; 64class TPad;; 65 ; 66class TH2Poly : public TH2 {; 67 ; 68public:; 69 TH2Poly();; 70 TH2Poly(const char *name,const char *title, Double_t xlow, Double_t xup, Double_t ylow, Double_t yup);; 71 TH2Poly(const char *name,const char *title, Int_t nX, Double_t xlow, Double_t xup, Int_t nY, Double_t ylow, Double_t yup);; 72 ~TH2Poly() override;; 73 TH2Poly(const TH2Poly & rhs);; 74 TH2Poly & operator=(const TH2Poly & rhs);; 75 ; 76 virtual TH2PolyBin *CreateBin(TObject *poly);; 77 virtual Int_t AddBin(TObject *poly);; 78 Int_t AddBin(Int_t n, const Double_t *x, const Double_t *y);; 79 Int_t AddBin(Double_t x1, Double_t y1, Double_t x2, Double_t y2);; 80 Bool_t Add(const TH1 *h1, Double_t c1) override;; 81 Bool_t Add(const TH1 *h1, const TH1 *h2, Double_t c1=1, Double_t c2=1) override;; 82 Bool_t Add(TF1 *h1, Double_t c1=1, Option_t *option="""") override;; 83 void ClearBinContents(); // Clears the content of all bins; 84 TObject *Clone(const char* newname = """") const override;; 85 void Copy(TObject & newth2p) const override;; 86 void ChangePartition(Int_t n, Int_t m); // Sets the number of partition cells to another value; 87 using TH2::Multiply;; 88 using TH2::Divide;; 89 using TH2::Interpolate;; 90 Bool_t Divide(TF1 *, Double_t) override;; 91 Bool_t Multiply(TF1 *, Double_t) override;; 92 Double_t ComputeIntegral(Bool_t) override;; 93 TH1 * FFT(TH1*, Option_t * ) override;; 94 virtual TH1 * GetAsymmetry(TH1* , Double_t, Double_t);; 95 virtual Double_t Interpolate(Double_t, Double_t);; 96 Int_t Fill(Double_t x,Double_t y) override;; 97 Int_t Fill(Double_t x,Double_t y, Double_t w) override;; 98 Int_t Fill(const char* name, Double_t w) override;; 99 void FillN(Int_t ntimes, const Double_t* x, const Double_t* y, const Double_t* w, Int_t stride = 1) override;; 100 Int_t FindBin(Double_t x, Double_t y, Double_t z = 0) override;; 101 TList *GetBins(){return ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2Poly_8h_source.html:3122,Clear,ClearBinContents,3122,doc/master/TH2Poly_8h_source.html,https://root.cern,https://root.cern/doc/master/TH2Poly_8h_source.html,1,['Clear'],['ClearBinContents']
Usability, 60 of file TMinuit.h. ◆ fUp. Double_t TMinuit::fUp. Definition at line 50 of file TMinuit.h. ◆ fUpdflt. Double_t TMinuit::fUpdflt. Definition at line 62 of file TMinuit.h. ◆ fVERTpp. Double_t* TMinuit::fVERTpp. Definition at line 122 of file TMinuit.h. ◆ fVERTq. Double_t* TMinuit::fVERTq. Definition at line 120 of file TMinuit.h. ◆ fVERTs. Double_t* TMinuit::fVERTs. Definition at line 121 of file TMinuit.h. ◆ fVhmat. Double_t* TMinuit::fVhmat. Definition at line 89 of file TMinuit.h. ◆ fVlimhi. Double_t TMinuit::fVlimhi. Definition at line 59 of file TMinuit.h. ◆ fVlimlo. Double_t TMinuit::fVlimlo. Definition at line 58 of file TMinuit.h. ◆ fVthmat. Double_t* TMinuit::fVthmat. Definition at line 90 of file TMinuit.h. ◆ fWarmes. TString TMinuit::fWarmes[kMAXWARN]. Definition at line 174 of file TMinuit.h. ◆ fWerr. Double_t* TMinuit::fWerr. Definition at line 73 of file TMinuit.h. ◆ fWord7. Double_t* TMinuit::fWord7. Definition at line 96 of file TMinuit.h. ◆ fX. Double_t* TMinuit::fX. Definition at line 75 of file TMinuit.h. ◆ fXdircr. Double_t TMinuit::fXdircr. Definition at line 65 of file TMinuit.h. ◆ fXmidcr. Double_t TMinuit::fXmidcr. Definition at line 63 of file TMinuit.h. ◆ fXpt. Double_t* TMinuit::fXpt. Definition at line 97 of file TMinuit.h. ◆ fXs. Double_t* TMinuit::fXs. Definition at line 78 of file TMinuit.h. ◆ fXt. Double_t* TMinuit::fXt. Definition at line 76 of file TMinuit.h. ◆ fXts. Double_t* TMinuit::fXts. Definition at line 79 of file TMinuit.h. ◆ fYdircr. Double_t TMinuit::fYdircr. Definition at line 66 of file TMinuit.h. ◆ fYmidcr. Double_t TMinuit::fYmidcr. Definition at line 64 of file TMinuit.h. ◆ fYpt. Double_t* TMinuit::fYpt. Definition at line 98 of file TMinuit.h. Libraries for TMinuit:. [legend]; The documentation for this class was generated from the following files:; math/minuit/inc/TMinuit.h; math/minuit/src/TMinuit.cxx. TMinuit. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:59 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuit.html:79844,Guid,Guide,79844,doc/master/classTMinuit.html,https://root.cern,https://root.cern/doc/master/classTMinuit.html,1,['Guid'],['Guide']
Usability," 61 of file THtml.cxx. Member Function Documentation. ◆ Class(). static TClass * THtml::THelperBase::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * THtml::THelperBase::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t THtml::THelperBase::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 52 of file THtml.h. ◆ DeclFileName(). static const char * THtml::THelperBase::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 52 of file THtml.h. ◆ GetOwner(). THtml * THtml::THelperBase::GetOwner ; (; ); const. inline . Definition at line 49 of file THtml.h. ◆ IsA(). TClass * THtml::THelperBase::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in THtml::TModuleDefinition, and THtml::TPathDefinition.; Definition at line 52 of file THtml.h. ◆ SetOwner(). void THtml::THelperBase::SetOwner ; (; THtml * ; html). Set the THtml object owning this object; if it's already set to a different THtml object than issue an error message and signal to the currently set object that we are not belonging to it anymore. ; Definition at line 74 of file THtml.cxx. ◆ Streamer(). void THtml::THelperBase::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in THtml::TModuleDefinition, and THtml::TPathDefinition. ◆ StreamerNVirtual(). void THtml::THelperBase::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 52 of file THtml.h. Member Data Documentation. ◆ fHtml. THtml* THtml::THelperBase::fHtml. private . Definition at line 51 of file THtml.h. html/inc/THtml.h; html/src/THtml.cxx. THtmlTHelperBase. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:50 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1THelperBase.html:12548,Guid,Guide,12548,doc/master/classTHtml_1_1THelperBase.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1THelperBase.html,1,['Guid'],['Guide']
Usability," 63 of file FitMethodFunction.h. ◆ NPoints(). template<class FunctionType > . virtual unsigned int ROOT::Math::BasicFitMethodFunction< FunctionType >::NPoints ; (; ); const. inlinevirtual . return the number of data points used in evaluating the function ; Definition at line 109 of file FitMethodFunction.h. ◆ ResetNCalls(). template<class FunctionType > . virtual void ROOT::Math::BasicFitMethodFunction< FunctionType >::ResetNCalls ; (; ). inlinevirtual . reset number of function calls ; Definition at line 129 of file FitMethodFunction.h. ◆ Type(). template<class FunctionType > . virtual Type_t ROOT::Math::BasicFitMethodFunction< FunctionType >::Type ; (; ); const. inlinevirtual . return the type of method, override if needed ; Reimplemented in ROOT::Fit::Chi2FCN< DerivFunType, ModelFunType >, ROOT::Fit::LogLikelihoodFCN< DerivFunType, ModelFunType >, and ROOT::Fit::PoissonLikelihoodFCN< DerivFunType, ModelFunType >.; Definition at line 114 of file FitMethodFunction.h. ◆ UpdateNCalls(). template<class FunctionType > . virtual void ROOT::Math::BasicFitMethodFunction< FunctionType >::UpdateNCalls ; (; ); const. inlinevirtual . update number of calls ; Definition at line 124 of file FitMethodFunction.h. Member Data Documentation. ◆ fNCalls. template<class FunctionType > . unsigned int ROOT::Math::BasicFitMethodFunction< FunctionType >::fNCalls. mutableprivate . Definition at line 143 of file FitMethodFunction.h. ◆ fNDim. template<class FunctionType > . unsigned int ROOT::Math::BasicFitMethodFunction< FunctionType >::fNDim. private . Definition at line 141 of file FitMethodFunction.h. ◆ fNPoints. template<class FunctionType > . unsigned int ROOT::Math::BasicFitMethodFunction< FunctionType >::fNPoints. private . Definition at line 142 of file FitMethodFunction.h. math/mathcore/inc/Fit/Fitter.h; math/mathcore/inc/Math/FitMethodFunction.h. ROOTMathBasicFitMethodFunction. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicFitMethodFunction.html:8711,Guid,Guide,8711,doc/master/classROOT_1_1Math_1_1BasicFitMethodFunction.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BasicFitMethodFunction.html,1,['Guid'],['Guide']
Usability," 640 fClingInitialized = false;; 641 return false;; 642}; 643 ; 644////////////////////////////////////////////////////////////////////////////////; 645/// Compile the given expression with Cling; 646/// backward compatibility method to be used in combination with the empty constructor; 647/// if no expression is given , the current stored formula (retrieved with GetExpFormula()) or the title is used.; 648/// return 0 if the formula compilation is successful; 649 ; 650Int_t TFormula::Compile(const char *expression); 651{; 652 TString formula = expression;; 653 if (formula.IsNull() ) {; 654 formula = fFormula;; 655 if (formula.IsNull() ) formula = GetTitle();; 656 }; 657 ; 658 if (formula.IsNull() ) return -1;; 659 ; 660 // do not re-process if it was done before; 661 if (IsValid() && formula == fFormula ) return 0;; 662 ; 663 // clear if a formula was already existing; 664 if (!fFormula.IsNull() ) Clear();; 665 ; 666 fFormula = formula;; 667 ; 668 if (TestBit(TFormula::kLambda) ) {; 669 bool ret = InitLambdaExpression(fFormula);; 670 return (ret) ? 0 : 1;; 671 }; 672 ; 673 if (fVars.empty() ) FillDefaults();; 674 // prepare the formula for Cling; 675 //printf(""compile: processing formula %s\n"",fFormula.Data() );; 676 PreProcessFormula(fFormula);; 677 // pass formula in CLing; 678 bool ret = PrepareFormula(fFormula);; 679 ; 680 return (ret) ? 0 : 1;; 681}; 682 ; 683////////////////////////////////////////////////////////////////////////////////; 684void TFormula::Copy(TObject &obj) const; 685{; 686 TNamed::Copy(obj);; 687 // need to copy also cling parameters; 688 TFormula & fnew = dynamic_cast<TFormula&>(obj);; 689 ; 690 fnew.fClingParameters = fClingParameters;; 691 fnew.fClingVariables = fClingVariables;; 692 ; 693 fnew.fFuncs = fFuncs;; 694 fnew.fVars = fVars;; 695 fnew.fParams = fParams;; 696 fnew.fConsts = fConsts;; 697 fnew.fFunctionsShortcuts = fFunctionsShortcuts;; 698 fnew.fFormula = fFormula;; 699 fnew.fNdim = fNdim;; 700 fnew.fNpar = fNpar;; 701 fnew.fNum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:24668,Clear,Clear,24668,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['Clear'],['Clear']
Usability," 718// std::cout << ""START TRAINING"" << std::endl;; 719 settings.startTrainCycle ();; 720 ; 721 // JsMVA progress bar maximum (100%); 722 if (fIPyMaxIter) *fIPyMaxIter = 100;; 723 ; 724 settings.pads (4);; 725 settings.create (""trainErrors"", 100, 0, 100, 100, 0,1);; 726 settings.create (""testErrors"", 100, 0, 100, 100, 0,1);; 727 ; 728 size_t cycleCount = 0;; 729 size_t testCycleCount = 0;; 730 double testError = 1e20;; 731 double trainError = 1e20;; 732 size_t dropOutChangeCount = 0;; 733 ; 734 DropContainer dropContainer;; 735 DropContainer dropContainerTest;; 736 const std::vector<double>& dropFractions = settings.dropFractions ();; 737 bool isWeightsForDrop = false;; 738 ; 739 ; 740 // until convergence; 741 do; 742 {; 743 ++cycleCount;; 744 ; 745 // if dropOut enabled; 746 size_t dropIndex = 0;; 747 if (!dropFractions.empty () && dropOutChangeCount % settings.dropRepetitions () == 0); 748 {; 749 // fill the dropOut-container; 750 dropContainer.clear ();; 751 size_t _numNodes = inputSize ();; 752 double dropFraction = 0.0;; 753 dropFraction = dropFractions.at (dropIndex);; 754 ++dropIndex;; 755 fillDropContainer (dropContainer, dropFraction, _numNodes);; 756 for (auto itLayer = begin (m_layers), itLayerEnd = end (m_layers); itLayer != itLayerEnd; ++itLayer, ++dropIndex); 757 {; 758 auto& layer = *itLayer;; 759 _numNodes = layer.numNodes ();; 760 // how many nodes have to be dropped; 761 dropFraction = 0.0;; 762 if (dropFractions.size () > dropIndex); 763 dropFraction = dropFractions.at (dropIndex);; 764 ; 765 fillDropContainer (dropContainer, dropFraction, _numNodes);; 766 }; 767 isWeightsForDrop = true;; 768 }; 769 ; 770 // execute training cycle; 771 trainError = trainCycle (minimizer, weights, begin (trainPattern), end (trainPattern), settings, dropContainer);; 772 ; 773 ; 774 // ------ check if we have to execute a test ------------------; 775 bool hasConverged = false;; 776 if (testCycleCount % settings.testRepetitions () == 0) // we test only everye ""testRep",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8icc_source.html:22106,clear,clear,22106,doc/master/NeuralNet_8icc_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8icc_source.html,1,['clear'],['clear']
Usability, 74 of file TDocInfo.h. ◆ SetImplFileName(). void TClassDocInfo::SetImplFileName ; (; const char * ; name). inline . Definition at line 76 of file TDocInfo.h. ◆ SetImplFileSysName(). void TClassDocInfo::SetImplFileSysName ; (; const char * ; fsname). inline . Definition at line 78 of file TDocInfo.h. ◆ SetModule(). void TClassDocInfo::SetModule ; (; TModuleDocInfo * ; module). inline . Definition at line 66 of file TDocInfo.h. ◆ SetSelected(). void TClassDocInfo::SetSelected ; (; Bool_t ; sel = kTRUE). inline . Definition at line 69 of file TDocInfo.h. ◆ Streamer(). void TClassDocInfo::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TClassDocInfo::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 100 of file TDocInfo.h. Member Data Documentation. ◆ fClass. TDictionary* TClassDocInfo::fClass. private . Definition at line 90 of file TDocInfo.h. ◆ fDeclFileName. TString TClassDocInfo::fDeclFileName. private . Definition at line 93 of file TDocInfo.h. ◆ fDeclFileSysName. TString TClassDocInfo::fDeclFileSysName. private . Definition at line 95 of file TDocInfo.h. ◆ fHtmlFileName. TString TClassDocInfo::fHtmlFileName. private . Definition at line 92 of file TDocInfo.h. ◆ fImplFileName. TString TClassDocInfo::fImplFileName. private . Definition at line 94 of file TDocInfo.h. ◆ fImplFileSysName. TString TClassDocInfo::fImplFileSysName. private . Definition at line 96 of file TDocInfo.h. ◆ fModule. TModuleDocInfo* TClassDocInfo::fModule. private . Definition at line 91 of file TDocInfo.h. ◆ fSelected. Bool_t TClassDocInfo::fSelected. private . Definition at line 98 of file TDocInfo.h. ◆ fTypedefs. TList TClassDocInfo::fTypedefs. private . Definition at line 97 of file TDocInfo.h. html/inc/TDocInfo.h; html/src/TDocInfo.cxx. TClassDocInfo. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:23 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClassDocInfo.html:18690,Guid,Guide,18690,doc/master/classTClassDocInfo.html,https://root.cern,https://root.cern/doc/master/classTClassDocInfo.html,1,['Guid'],['Guide']
Usability," 754 ; 755 for (auto proxy : m_builders); 756 {; 757 if (proxy->Collection()->GetItemList() == itemList); 758 {; 759 // printf(""Model changes check proxy %s: \n"", proxy->Type().c_str());; 760 proxy->ModelChanges(ids);; 761 }; 762 }; 763 }; 764 ; 765 void FillImpliedSelected(REveDataItemList* itemList, REveElement::Set_t& impSelSet, const std::set<int>& sec_idcs); 766 {; 767 if (m_inEventLoading) return;; 768 ; 769 for (auto proxy : m_builders); 770 {; 771 if (proxy->Collection()->GetItemList() == itemList); 772 {; 773 proxy->FillImpliedSelected(impSelSet, sec_idcs);; 774 }; 775 }; 776 }; 777 ; 778};; 779 ; 780 ; 781//==============================================================================; 782//== Event Manager =============================================================; 783//==============================================================================; 784 ; 785class EventManager : public REveElement; 786{; 787private:; 788 Event* fEvent;; 789 CollectionManager* fCMng;; 790 ; 791public:; 792 EventManager(Event* e, CollectionManager* m): fEvent(e), fCMng(m) {}; 793 ; 794 ~EventManager() override {}; 795 ; 796 virtual void NextEvent(); 797 {; 798 eveMng->GetSelection()->ClearSelection();; 799 eveMng->GetHighlight()->ClearSelection();; 800 fEvent->Create();; 801 fCMng->LoadEvent();; 802 }; 803};; 804 ; 805class FWSelectionDeviator : public REveSelection::Deviator {; 806public:; 807 FWSelectionDeviator() {}; 808 ; 809 using REveSelection::Deviator::DeviateSelection;; 810 bool DeviateSelection(REveSelection *selection, REveElement *el, bool multi, bool secondary,; 811 const std::set<int> &secondary_idcs) override; 812 {; 813 if (el) {; 814 auto *colItems = dynamic_cast<REveDataItemList *>(el);; 815 if (colItems) {; 816 // std::cout << ""Deviate RefSelected="" << colItems->RefSelectedSet().size() << "" passed set "" << secondary_idcs.size() << ""\n"";; 817 ExecuteNewElementPicked(selection, colItems, multi, true, colItems->RefSelectedSet());; 818 return true;; 819 }; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/collection__proxies_8C_source.html:25667,Clear,ClearSelection,25667,doc/master/collection__proxies_8C_source.html,https://root.cern,https://root.cern/doc/master/collection__proxies_8C_source.html,2,['Clear'],['ClearSelection']
Usability," 7714 of file TProof.cxx. ◆ ClearData(). void TProof::ClearData ; (; UInt_t ; what = kUnregistered, . const char * ; dsname = 0 . ). Remove files for the data directory. ; The option 'what' can take the values: kPurge remove all files and directories under '~/data' kUnregistered remove only files not in registered datasets (default) kDataset remove files belonging to dataset 'dsname' User is prompt for confirmation, unless kForceClear is ORed with the option ; Definition at line 7412 of file TProof.cxx. ◆ ClearDataProgress(). void TProof::ClearDataProgress ; (; Int_t ; r, . Int_t ; t . ). private . Progress bar for clear data. ; Definition at line 7670 of file TProof.cxx. ◆ ClearDataSetCache(). void TProof::ClearDataSetCache ; (; const char * ; dataset = 0). virtual . Clear the content of the dataset cache, if any (matching 'dataset', if defined). ; Reimplemented in TProofLite.; Definition at line 10896 of file TProof.cxx. ◆ ClearFeedback(). void TProof::ClearFeedback ; (; ). Clear feedback list. ; Definition at line 10012 of file TProof.cxx. ◆ ClearInput(). void TProof::ClearInput ; (; ). Clear input object list. ; Definition at line 9742 of file TProof.cxx. ◆ ClearInputData() [1/2]. void TProof::ClearInputData ; (; const char * ; name). Remove obj 'name' form the input data list;. ; Definition at line 9572 of file TProof.cxx. ◆ ClearInputData() [2/2]. void TProof::ClearInputData ; (; TObject * ; obj = 0). Remove obj form the input data list; if obj is null (default), clear the input data info. ; Definition at line 9538 of file TProof.cxx. ◆ ClearPackage(). Int_t TProof::ClearPackage ; (; const char * ; package). Remove a specific package. ; Returns 0 in case of success and -1 in case of error. ; Definition at line 7857 of file TProof.cxx. ◆ ClearPackages(). Int_t TProof::ClearPackages ; (; ). Remove all packages. ; Returns 0 in case of success and -1 in case of error. ; Definition at line 7840 of file TProof.cxx. ◆ Close(). void TProof::Close ; (; Option_t * ; opt ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:75506,Clear,Clear,75506,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,2,"['Clear', 'feedback']","['Clear', 'feedback']"
Usability," 789 of file RBrowser.cxx. ◆ ProcessPostponedRequests(). void RBrowser::ProcessPostponedRequests ; (; ). protected . Process postponed requests - decouple from websocket handling Only requests which can take longer time should be postponed. ; Definition at line 762 of file RBrowser.cxx. ◆ ProcessRunMacro(). void RBrowser::ProcessRunMacro ; (; const std::string & ; file_path). protected . Process run macro command in the editor. ; Definition at line 384 of file RBrowser.cxx. ◆ ProcessSaveFile(). void RBrowser::ProcessSaveFile ; (; const std::string & ; fname, . const std::string & ; content . ). protected . Process file save command in the editor. ; Definition at line 373 of file RBrowser.cxx. ◆ SendInitMsg(). void RBrowser::SendInitMsg ; (; unsigned ; connid). protected . Process client connect. ; Definition at line 672 of file RBrowser.cxx. ◆ SendProgress(). void RBrowser::SendProgress ; (; unsigned ; connid, . float ; progr . ). protected . Send generic progress message to the web window Should show progress bar on client side. ; Definition at line 715 of file RBrowser.cxx. ◆ SetCatchWindowShow(). void ROOT::RBrowser::SetCatchWindowShow ; (; bool ; on = true). inline . Enable/disable catch of RWebWindow::Show calls to embed created widgets, default on. ; Definition at line 99 of file RBrowser.hxx. ◆ SetUseRCanvas(). void ROOT::RBrowser::SetUseRCanvas ; (; bool ; on = true). inline . Definition at line 83 of file RBrowser.hxx. ◆ SetWorkingPath(). void RBrowser::SetWorkingPath ; (; const std::string & ; path). Set working path in the browser. ; Definition at line 934 of file RBrowser.cxx. ◆ Show(). void RBrowser::Show ; (; const RWebDisplayArgs & ; args = """", . bool ; always_start_new_browser = false . ). show Browser in specified place ; Show or update RBrowser in web window If web window already started - just refresh it like ""reload"" button does If no web window exists or.; Parameters. always_start_new_browserconfigured, starts new window ; argsdisplay arguments .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RBrowser.html:10100,progress bar,progress bar,10100,doc/v632/classROOT_1_1RBrowser.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RBrowser.html,1,['progress bar'],['progress bar']
Usability," 815 of file RBrowser.cxx. ◆ ProcessPostponedRequests(). void RBrowser::ProcessPostponedRequests ; (; ). protected . Process postponed requests - decouple from websocket handling Only requests which can take longer time should be postponed. ; Definition at line 788 of file RBrowser.cxx. ◆ ProcessRunMacro(). void RBrowser::ProcessRunMacro ; (; const std::string & ; file_path). protected . Process run macro command in the editor. ; Definition at line 398 of file RBrowser.cxx. ◆ ProcessSaveFile(). void RBrowser::ProcessSaveFile ; (; const std::string & ; fname, . const std::string & ; content . ). protected . Process file save command in the editor. ; Definition at line 387 of file RBrowser.cxx. ◆ SendInitMsg(). void RBrowser::SendInitMsg ; (; unsigned ; connid). protected . Process client connect. ; Definition at line 686 of file RBrowser.cxx. ◆ SendProgress(). void RBrowser::SendProgress ; (; unsigned ; connid, . float ; progr . ). protected . Send generic progress message to the web window Should show progress bar on client side. ; Definition at line 729 of file RBrowser.cxx. ◆ SetCatchWindowShow(). void ROOT::RBrowser::SetCatchWindowShow ; (; bool ; on = true). inline . Enable/disable catch of RWebWindow::Show calls to embed created widgets, default on. ; Definition at line 99 of file RBrowser.hxx. ◆ SetUseRCanvas(). void ROOT::RBrowser::SetUseRCanvas ; (; bool ; on = true). inline . Definition at line 83 of file RBrowser.hxx. ◆ SetWorkingPath(). void RBrowser::SetWorkingPath ; (; const std::string & ; path). Set working path in the browser. ; Definition at line 960 of file RBrowser.cxx. ◆ Show(). void RBrowser::Show ; (; const RWebDisplayArgs & ; args = """", . bool ; always_start_new_browser = false . ). show Browser in specified place ; Show or update RBrowser in web window If web window already started - just refresh it like ""reload"" button does If no web window exists or.; Parameters. always_start_new_browserconfigured, starts new window ; argsdisplay arguments .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowser.html:10148,progress bar,progress bar,10148,doc/master/classROOT_1_1RBrowser.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowser.html,1,['progress bar'],['progress bar']
Usability," 839 ; 840 // in case of option *, set marker style to 3 (star) and replace; 841 // * option by option P.; 842 Ssiz_t pos;; 843 if ((pos = opt.Index(""*"")) != kNPOS) {; 844 SetMarkerStyle(3);; 845 opt.Replace(pos, 1, ""p"");; 846 }; 847 ; 848 // If no option is specified, it is defined as ""alp"" in case there is; 849 // no current pad or if the current pad has no axis defined and if there is; 850 // no default option set using TGraph::SetOption. If fOption is set using; 851 // TGraph::SetOption, it is used as default option.; 852 if ((!option || !strlen(option))) {; 853 Option_t *topt = (!fOption.IsNull()) ? fOption.Data() : ""alp"";; 854 if (gPad) {; 855 if (!gPad->GetListOfPrimitives()->FindObject(""TFrame"")); 856 opt = topt;; 857 } else {; 858 opt = topt;; 859 }; 860 }; 861 ; 862 if (gPad) {; 863 if (!gPad->IsEditable()) gROOT->MakeDefCanvas();; 864 if (opt.Contains(""a"")) gPad->Clear();; 865 }; 866 ; 867 AppendPad(opt);; 868 ; 869 gPad->IncrementPaletteColor(1, opt);; 870 ; 871}; 872 ; 873////////////////////////////////////////////////////////////////////////////////; 874/// Compute distance from point px,py to a graph.; 875///; 876/// Compute the closest distance of approach from point px,py to this line.; 877/// The distance is computed in pixels units.; 878 ; 879Int_t TGraph::DistancetoPrimitive(Int_t px, Int_t py); 880{; 881 TVirtualGraphPainter *painter = TVirtualGraphPainter::GetPainter();; 882 if (painter) return painter->DistancetoPrimitiveHelper(this, px, py);; 883 else return 0;; 884}; 885 ; 886////////////////////////////////////////////////////////////////////////////////; 887/// Draw this graph with new attributes.; 888 ; 889void TGraph::DrawGraph(Int_t n, const Int_t *x, const Int_t *y, Option_t *option); 890{; 891 TGraph *newgraph = new TGraph(n, x, y);; 892 TAttLine::Copy(*newgraph);; 893 TAttFill::Copy(*newgraph);; 894 TAttMarker::Copy(*newgraph);; 895 newgraph->SetBit(kCanDelete);; 896 newgraph->AppendPad(option);; 897}; 898 ; 899/////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph_8cxx_source.html:28330,Clear,Clear,28330,doc/master/TGraph_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph_8cxx_source.html,1,['Clear'],['Clear']
Usability," 842 of file TGTextEditor.cxx. ◆ AddLine(). void TGTextEditor::AddLine ; (; const char * ; string). inline . Definition at line 83 of file TGTextEditor.h. ◆ AddLineFast(). void TGTextEditor::AddLineFast ; (; const char * ; string). inline . Definition at line 84 of file TGTextEditor.h. ◆ AddText(). void TGTextEditor::AddText ; (; TGText * ; text). inline . Definition at line 82 of file TGTextEditor.h. ◆ Build(). void TGTextEditor::Build ; (; ). protectedvirtual . Build TGTextEditor widget. ; Definition at line 321 of file TGTextEditor.cxx. ◆ Class(). static TClass * TGTextEditor::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGTextEditor::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGTextEditor::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 93 of file TGTextEditor.h. ◆ ClearText(). void TGTextEditor::ClearText ; (; ). Clear text edit widget. ; Definition at line 727 of file TGTextEditor.cxx. ◆ CloseWindow(). void TGTextEditor::CloseWindow ; (; ). overridevirtual . Close TGTextEditor window. ; Reimplemented from TGMainFrame.; Definition at line 638 of file TGTextEditor.cxx. ◆ CompileMacro(). void TGTextEditor::CompileMacro ; (; ). Save the edited text in a temporary macro, then compile it. ; Definition at line 767 of file TGTextEditor.cxx. ◆ DataChanged(). void TGTextEditor::DataChanged ; (; ). Slot setting the fTextChanged flag to true when the text has been modified in fTextEdit. ; Definition at line 489 of file TGTextEditor.cxx. ◆ DataDropped(). void TGTextEditor::DataDropped ; (; char * ; fname). Update file information when receiving the signal DataDropped from TGTextEdit widget. ; Definition at line 475 of file TGTextEditor.cxx. ◆ DeclFileName(). static const char * TGTextEditor::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 93 of file TG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEditor.html:44180,Clear,Clear,44180,doc/master/classTGTextEditor.html,https://root.cern,https://root.cern/doc/master/classTGTextEditor.html,1,['Clear'],['Clear']
Usability," 925{; 926 if (!fClosed) {; 927 Error(""SetMaxThreads"", ""Cannot set maximum number of threads before closing the geometry"");; 928 return;; 929 }; 930 if (!fMultiThread) {; 931 ROOT::EnableThreadSafety();; 932 std::thread::id threadId = std::this_thread::get_id();; 933 NavigatorsMap_t::const_iterator it = fNavigators.find(threadId);; 934 if (it != fNavigators.end()) {; 935 TGeoNavigatorArray *array = it->second;; 936 fNavigators.erase(it);; 937 fNavigators.insert(NavigatorsMap_t::value_type(threadId, array));; 938 }; 939 }; 940 if (fMaxThreads) {; 941 ClearThreadsMap();; 942 ClearThreadData();; 943 }; 944 fMaxThreads = nthreads + 1;; 945 if (fMaxThreads > 0) {; 946 fMultiThread = kTRUE;; 947 CreateThreadData();; 948 }; 949}; 950 ; 951////////////////////////////////////////////////////////////////////////////////; 952 ; 953void TGeoManager::ClearThreadData() const; 954{; 955 if (!fMaxThreads); 956 return;; 957 fgMutex.lock();; 958 TIter next(fVolumes);; 959 TGeoVolume *vol;; 960 while ((vol = (TGeoVolume *)next())); 961 vol->ClearThreadData();; 962 fgMutex.unlock();; 963}; 964 ; 965////////////////////////////////////////////////////////////////////////////////; 966/// Create thread private data for all geometry objects.; 967 ; 968void TGeoManager::CreateThreadData() const; 969{; 970 if (!fMaxThreads); 971 return;; 972 fgMutex.lock();; 973 TIter next(fVolumes);; 974 TGeoVolume *vol;; 975 while ((vol = (TGeoVolume *)next())); 976 vol->CreateThreadData(fMaxThreads);; 977 fgMutex.unlock();; 978}; 979 ; 980////////////////////////////////////////////////////////////////////////////////; 981/// Clear the current map of threads. This will be filled again by the calling; 982/// threads via ThreadId calls.; 983 ; 984void TGeoManager::ClearThreadsMap(); 985{; 986 if (gGeoManager && !gGeoManager->IsMultiThread()); 987 return;; 988 fgMutex.lock();; 989 if (!fgThreadId->empty()); 990 fgThreadId->clear();; 991 fgNumThreads = 0;; 992 fgMutex.unlock();; 993}; 994 ; 995///////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8cxx_source.html:35009,Clear,ClearThreadData,35009,doc/master/TGeoManager_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8cxx_source.html,1,['Clear'],['ClearThreadData']
Usability," 927 of file TMatrixTSparse.cxx. ◆ APlusB() [3/3]. template<class Element > . void TMatrixTSparse< Element >::APlusB ; (; const TMatrixTSparse< Element > & ; a, . const TMatrixTSparse< Element > & ; b, . Int_t ; constr = 0 . ). protected . General matrix addition. ; Replace this matrix with C such that C = A + B. Note, matrix C is allocated for constr=1. ; Definition at line 845 of file TMatrixTSparse.cxx. ◆ Class() [1/2]. template<class Element > . static TClass * TMatrixTSparse< Element >::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class() [2/2]. TClass * TMatrixTSparse< double >::Class ; (; ). ◆ Class_Name(). template<class Element > . static const char * TMatrixTSparse< Element >::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). template<class Element > . static constexpr Version_t TMatrixTSparse< Element >::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 215 of file TMatrixTSparse.h. ◆ Clear(). template<class Element > . void TMatrixTSparse< Element >::Clear ; (; Option_t * ; = """"). inlineoverridevirtual . Implements TMatrixTBase< Element >.; Definition at line 130 of file TMatrixTSparse.h. ◆ ColNorm(). template<class Element > . Element TMatrixTSparse< Element >::ColNorm. overridevirtual . Column matrix norm, MAX{ SUM{ |M(i,j)|, over i}, over j}. ; The norm is induced by the 1 vector norm. ; Reimplemented from TMatrixTBase< Element >.; Definition at line 2341 of file TMatrixTSparse.cxx. ◆ conservative_sparse_sparse_product_impl(). template<class Element > . void TMatrixTSparse< Element >::conservative_sparse_sparse_product_impl ; (; const TMatrixTSparse< Element > & ; lhs, . const TMatrixTSparse< Element > & ; rhs, . Int_t ; constr = 0 . ). protected . General Sparse Matrix Multiplication (SpMM). ; This code is an adaptation of Eigen SpMM implementation. This product is conservative, meaning that it preserves the symbolic non zeros. Given lhs, rhs, it computes this = r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTSparse.html:38045,Clear,Clear,38045,doc/master/classTMatrixTSparse.html,https://root.cern,https://root.cern/doc/master/classTMatrixTSparse.html,1,['Clear'],['Clear']
Usability," 9461{; 9462 GetPlayer();; 9463 if (fPlayer) {; 9464 fPlayer->StartViewer(600, 400);; 9465 }; 9466}; 9467 ; 9468////////////////////////////////////////////////////////////////////////////////; 9469/// Stop the cache learning phase; 9470///; 9471/// Returns:; 9472/// - 0 learning phase stopped or not active; 9473/// - -1 on error; 9474 ; 9475Int_t TTree::StopCacheLearningPhase(); 9476{; 9477 if (!GetTree()) {; 9478 if (LoadTree(0)<0) {; 9479 Error(""StopCacheLearningPhase"",""Could not load a tree"");; 9480 return -1;; 9481 }; 9482 }; 9483 if (GetTree()) {; 9484 if (GetTree() != this) {; 9485 return GetTree()->StopCacheLearningPhase();; 9486 }; 9487 } else {; 9488 Error(""StopCacheLearningPhase"", ""No tree is available. Could not stop cache learning phase"");; 9489 return -1;; 9490 }; 9491 ; 9492 TFile *f = GetCurrentFile();; 9493 if (!f) {; 9494 Error(""StopCacheLearningPhase"", ""No file is available. Could not stop cache learning phase"");; 9495 return -1;; 9496 }; 9497 TTreeCache *tc = GetReadCache(f,true);; 9498 if (!tc) {; 9499 Error(""StopCacheLearningPhase"", ""No cache is available. Could not stop learning phase"");; 9500 return -1;; 9501 }; 9502 tc->StopLearningPhase();; 9503 return 0;; 9504}; 9505 ; 9506////////////////////////////////////////////////////////////////////////////////; 9507/// Set the fTree member for all branches and sub branches.; 9508 ; 9509static void TBranch__SetTree(TTree *tree, TObjArray &branches); 9510{; 9511 Int_t nb = branches.GetEntriesFast();; 9512 for (Int_t i = 0; i < nb; ++i) {; 9513 TBranch* br = (TBranch*) branches.UncheckedAt(i);; 9514 br->SetTree(tree);; 9515 ; 9516 Int_t writeBasket = br->GetWriteBasket();; 9517 for (Int_t j = writeBasket; j >= 0; --j) {; 9518 TBasket *bk = (TBasket*)br->GetListOfBaskets()->UncheckedAt(j);; 9519 if (bk) {; 9520 tree->IncrementTotalBuffers(bk->GetBufferSize());; 9521 }; 9522 }; 9523 ; 9524 TBranch__SetTree(tree,*br->GetListOfBranches());; 9525 }; 9526}; 9527 ; 9528//////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:365210,learn,learning,365210,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['learn'],['learning']
Usability," 98 { nullptr, 0 }; 99};; 100 ; 101 ; 102/** \class TEnvParser; 103TEnv Parser.; 104*/; 105 ; 106class TEnvParser {; 107 ; 108private:; 109 FILE *fIfp;; 110 ; 111protected:; 112 TEnv *fEnv;; 113 ; 114public:; 115 TEnvParser(TEnv *e, FILE *f) : fIfp(f), fEnv(e) { }; 116 virtual ~TEnvParser() { }; 117 virtual void KeyValue(const TString&, const TString&, const TString&) { }; 118 virtual void Char(Int_t) { }; 119 void Parse();; 120};; 121 ; 122////////////////////////////////////////////////////////////////////////////////; 123/// Parse a line of the env file and create an entry in the resource; 124/// dictionary (i.e. add a KeyValue pair).; 125 ; 126void TEnvParser::Parse(); 127{; 128 TString name(1024);; 129 TString type(1024);; 130 TString value(1024);; 131 int c, state = 0;; 132 ; 133 while ((c = fgetc(fIfp)) != EOF) {; 134 if (c == 13) // ignore CR; 135 continue;; 136 if (c == '\n') {; 137 state = 0;; 138 if (name.Length() > 0) {; 139 KeyValue(name, value, type);; 140 name.Clear();; 141 value.Clear();; 142 type.Clear();; 143 }; 144 Char(c);; 145 continue;; 146 }; 147 switch (state) {; 148 case 0: // start of line; 149 switch (c) {; 150 case ' ':; 151 case '\t':; 152 break;; 153 case '#':; 154 state = 1;; 155 break;; 156 default:; 157 state = 2;; 158 break;; 159 }; 160 break;; 161 ; 162 case 1: // comment; 163 break;; 164 ; 165 case 2: // name; 166 switch (c) {; 167 case ' ':; 168 case '\t':; 169 case ':':; 170 state = 3;; 171 break;; 172 case '(':; 173 state = 7;; 174 break;; 175 default:; 176 break;; 177 }; 178 break;; 179 ; 180 case 3: // ws before value; 181 if (c != ' ' && c != '\t'); 182 state = 4;; 183 break;; 184 ; 185 case 4: // value; 186 break;; 187 ; 188 case 5: // type; 189 if (c == ')'); 190 state = 6;; 191 break;; 192 ; 193 case 6: // optional ':'; 194 state = (c == ':') ? 3 : 4;; 195 break;; 196 ; 197 case 7:; 198 state = (c == ')') ? 6 : 5;; 199 break;; 200 ; 201 }; 202 switch (state) {; 203 case 2:; 204 name.Append(c);; 205 break;; 206 case 4:; 20",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEnv_8cxx_source.html:4520,Clear,Clear,4520,doc/master/TEnv_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEnv_8cxx_source.html,1,['Clear'],['Clear']
Usability," 99};; 100 ; 101 ; 102/** \class TEnvParser; 103TEnv Parser.; 104*/; 105 ; 106class TEnvParser {; 107 ; 108private:; 109 FILE *fIfp;; 110 ; 111protected:; 112 TEnv *fEnv;; 113 ; 114public:; 115 TEnvParser(TEnv *e, FILE *f) : fIfp(f), fEnv(e) { }; 116 virtual ~TEnvParser() { }; 117 virtual void KeyValue(const TString&, const TString&, const TString&) { }; 118 virtual void Char(Int_t) { }; 119 void Parse();; 120};; 121 ; 122////////////////////////////////////////////////////////////////////////////////; 123/// Parse a line of the env file and create an entry in the resource; 124/// dictionary (i.e. add a KeyValue pair).; 125 ; 126void TEnvParser::Parse(); 127{; 128 TString name(1024);; 129 TString type(1024);; 130 TString value(1024);; 131 int c, state = 0;; 132 ; 133 while ((c = fgetc(fIfp)) != EOF) {; 134 if (c == 13) // ignore CR; 135 continue;; 136 if (c == '\n') {; 137 state = 0;; 138 if (name.Length() > 0) {; 139 KeyValue(name, value, type);; 140 name.Clear();; 141 value.Clear();; 142 type.Clear();; 143 }; 144 Char(c);; 145 continue;; 146 }; 147 switch (state) {; 148 case 0: // start of line; 149 switch (c) {; 150 case ' ':; 151 case '\t':; 152 break;; 153 case '#':; 154 state = 1;; 155 break;; 156 default:; 157 state = 2;; 158 break;; 159 }; 160 break;; 161 ; 162 case 1: // comment; 163 break;; 164 ; 165 case 2: // name; 166 switch (c) {; 167 case ' ':; 168 case '\t':; 169 case ':':; 170 state = 3;; 171 break;; 172 case '(':; 173 state = 7;; 174 break;; 175 default:; 176 break;; 177 }; 178 break;; 179 ; 180 case 3: // ws before value; 181 if (c != ' ' && c != '\t'); 182 state = 4;; 183 break;; 184 ; 185 case 4: // value; 186 break;; 187 ; 188 case 5: // type; 189 if (c == ')'); 190 state = 6;; 191 break;; 192 ; 193 case 6: // optional ':'; 194 state = (c == ':') ? 3 : 4;; 195 break;; 196 ; 197 case 7:; 198 state = (c == ')') ? 6 : 5;; 199 break;; 200 ; 201 }; 202 switch (state) {; 203 case 2:; 204 name.Append(c);; 205 break;; 206 case 4:; 207 value.Append(c);; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEnv_8cxx_source.html:4540,Clear,Clear,4540,doc/master/TEnv_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEnv_8cxx_source.html,1,['Clear'],['Clear']
Usability," : Unknown name; *-* 27 : Too many constants in expression; *-* 28 : strstr requires two arguments; *-* 29 : interpreted or compiled function have to return a numerical type; *-* 30 : Bad numerical expression; *-* 31 : Part of the variable exist but some of it is not accessible or useable; *-* 40 : '(' is expected; *-* 41 : ')' is expected; *-* 42 : '[' is expected; *-* 43 : ']' is expected. /*. */. -; *-* Special functions; *-* -----------------; *-* By default, the formula is assigned fNumber=0. However, the following; *-* formula built with simple functions are assigned fNumber:; *-* ""gaus"" 100 (or gausn); *-* ""xygaus"" 110; *-* ""expo"" 200; *-* ""polN"" 300+N; *-* ""landau"" 400; *-* ""xylandau"" 410; *-* Note that expressions like gaus(0), expo(1) will force fNumber=0; -; *-* Warning when deriving a class from TFormula; *-* -------------------------------------------; *-* If you overload this member function, you also HAVE TO; *-* never call the constructor:; -; *-* TFormula::TFormula(const char *name,const char *expression); -; *-* and write your own constructor; -; *-* MyClass::MyClass(const char *name,const char *expression) : TFormula(); -; *-* which has to call the TFormula default constructor and whose implementation; *-* should be similar to the implementation of the normal TFormula constructor; -; *-* This is necessary because the normal TFormula constructor call indirectly; *-* the virtual member functions Analyze, DefaultString, DefaultValue; *-* and DefaultVariable.; -; -. Bool_t CheckOperands(Int_t operation, Int_t& err); Check whether the operand at 'oper-1' is compatible with the operation at 'oper'. Bool_t CheckOperands(Int_t leftoperand, Int_t rightoperartion, Int_t& err); Check whether the operands at 'leftoper' and 'oper-1' are compatible with the operation at 'oper'. Bool_t StringToNumber(Int_t code); Try to 'demote' a string into an array bytes. If this is not possible,; return false. void Clear(Option_t* option = """"); Resets the objects*-*-; *-* ==",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFormula.html:20152,simpl,simple,20152,root/html528/TFormula.html,https://root.cern,https://root.cern/root/html528/TFormula.html,3,['simpl'],['simple']
Usability," : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 0.012591 1.0260 [ -3.3377 5.7307 ]; : var2: 0.0016174 1.0380 [ -4.5569 5.7307 ]; : fvalue: 165.93 84.643 [ 2.0973 391.01 ]; : -----------------------------------------------------------; : ***** Deep Learning Network *****; DEEP NEURAL NETWORK: Depth = 4 Input = ( 1, 1, 2 ) Batch size = 50 Loss function = R; Layer 0 DENSE Layer: ( Input = 2 , Width = 50 ) Output = ( 1 , 50 , 50 ) Activation Function = Tanh; Layer 1 DENSE Layer: ( Input = 50 , Width = 50 ) Output = ( 1 , 50 , 50 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 50 , Width = 50 ) Output = ( 1 , 50 , 50 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 50 , Width = 1 ) Output = ( 1 , 50 , 1 ) Activation Function = Identity; : Using 800 events for training and 200 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 33494.1; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 34747.6 33079.7 0.0192196 0.00176099 45822.6 0; : 2 Minimum Test error found - save the configuration ; : 2 | 34222.2 32417.1 0.0195047 0.0017702 45109.9 0; : 3 Minimum Test error found - save the configuration ; : 3 | 33496 31618.4 0.0197158 0.00178336 44611.8 0; : 4 Minimum Test error found - save the configuration ; : 4 | 32719.2 30843.2 0.0198205 0.00178286 44351.8 0; : 5 Minimum Test error found - save the configuration ; : 5 | 31879.6 30001 0.0200761 0.00184919 43891 0; : 6 Minimum Test error found - save the configuration ; : 6 | 30965 29177.4 0.0203037 0.00185469 43362.8 0; : 7 Minimum Test error found - save the configurati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:10897,Learn,Learning,10897,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Learn'],['Learning']
Usability," : m_wwbb: +0.533 +0.668 +0.021 +0.552 +0.333 +0.915 +1.000; : ----------------------------------------------------------------; DataSetInfo : Correlation matrix (Background):; : ----------------------------------------------------------------; : m_jj m_jjj m_lv m_jlv m_bb m_wbb m_wwbb; : m_jj: +1.000 +0.808 +0.022 +0.150 +0.028 +0.407 +0.415; : m_jjj: +0.808 +1.000 +0.041 +0.206 +0.177 +0.569 +0.547; : m_lv: +0.022 +0.041 +1.000 +0.139 +0.037 +0.081 +0.085; : m_jlv: +0.150 +0.206 +0.139 +1.000 +0.309 +0.607 +0.557; : m_bb: +0.028 +0.177 +0.037 +0.309 +1.000 +0.625 +0.447; : m_wbb: +0.407 +0.569 +0.081 +0.607 +0.625 +1.000 +0.884; : m_wwbb: +0.415 +0.547 +0.085 +0.557 +0.447 +0.884 +1.000; : ----------------------------------------------------------------; DataSetFactory : [dataset] : ; : ; Factory : Booking method: ␛[1mDNN_CPU␛[0m; : ; : Parsing option string: ; : ... ""!H:V:ErrorStrategy=CROSSENTROPY:VarTransform=G:WeightInitialization=XAVIER:InputLayout=1|1|7:BatchLayout=1|128|7:Layout=DENSE|64|TANH,DENSE|64|TANH,DENSE|64|TANH,DENSE|64|TANH,DENSE|1|LINEAR:TrainingStrategy=LearningRate=1e-3,Momentum=0.9,ConvergenceSteps=10,BatchSize=128,TestRepetitions=1,MaxEpochs=20,WeightDecay=1e-4,Regularization=None,Optimizer=ADAM,ADAM_beta1=0.9,ADAM_beta2=0.999,ADAM_eps=1.E-7,DropConfig=0.0+0.0+0.0+0.:Architecture=CPU""; : The following options are set:; : - By User:; : <none>; : - Default:; : Boost_num: ""0"" [Number of times the classifier will be boosted]; : Parsing option string: ; : ... ""!H:V:ErrorStrategy=CROSSENTROPY:VarTransform=G:WeightInitialization=XAVIER:InputLayout=1|1|7:BatchLayout=1|128|7:Layout=DENSE|64|TANH,DENSE|64|TANH,DENSE|64|TANH,DENSE|64|TANH,DENSE|1|LINEAR:TrainingStrategy=LearningRate=1e-3,Momentum=0.9,ConvergenceSteps=10,BatchSize=128,TestRepetitions=1,MaxEpochs=20,WeightDecay=1e-4,Regularization=None,Optimizer=ADAM,ADAM_beta1=0.9,ADAM_beta2=0.999,ADAM_eps=1.E-7,DropConfig=0.0+0.0+0.0+0.:Architecture=CPU""; : The following options are set:; : - By User:; :",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html:10482,Learn,LearningRate,10482,doc/master/TMVA__Higgs__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html,1,['Learn'],['LearningRate']
Usability," : m_wwbb: +0.533 +0.668 +0.021 +0.552 +0.333 +0.915 +1.000; : ----------------------------------------------------------------; DataSetInfo : Correlation matrix (Background):; : ----------------------------------------------------------------; : m_jj m_jjj m_lv m_jlv m_bb m_wbb m_wwbb; : m_jj: +1.000 +0.808 +0.022 +0.150 +0.028 +0.407 +0.415; : m_jjj: +0.808 +1.000 +0.041 +0.206 +0.177 +0.569 +0.547; : m_lv: +0.022 +0.041 +1.000 +0.139 +0.037 +0.081 +0.085; : m_jlv: +0.150 +0.206 +0.139 +1.000 +0.309 +0.607 +0.557; : m_bb: +0.028 +0.177 +0.037 +0.309 +1.000 +0.625 +0.447; : m_wbb: +0.407 +0.569 +0.081 +0.607 +0.625 +1.000 +0.884; : m_wwbb: +0.415 +0.547 +0.085 +0.557 +0.447 +0.884 +1.000; : ----------------------------------------------------------------; DataSetFactory : [dataset] : ; : ; Factory : Booking method: ␛[1mDNN_CPU␛[0m; : ; : Parsing option string: ; : ... ""!H:V:ErrorStrategy=CROSSENTROPY:VarTransform=G:WeightInitialization=XAVIER:InputLayout=1|1|7:BatchLayout=1|128|7:Layout=DENSE|64|TANH,DENSE|64|TANH,DENSE|64|TANH,DENSE|64|TANH,DENSE|1|LINEAR:TrainingStrategy=LearningRate=1e-3,Momentum=0.9,ConvergenceSteps=10,BatchSize=128,TestRepetitions=1,MaxEpochs=30,WeightDecay=1e-4,Regularization=None,Optimizer=ADAM,ADAM_beta1=0.9,ADAM_beta2=0.999,ADAM_eps=1.E-7,DropConfig=0.0+0.0+0.0+0.:Architecture=CPU""; : The following options are set:; : - By User:; : <none>; : - Default:; : Boost_num: ""0"" [Number of times the classifier will be boosted]; : Parsing option string: ; : ... ""!H:V:ErrorStrategy=CROSSENTROPY:VarTransform=G:WeightInitialization=XAVIER:InputLayout=1|1|7:BatchLayout=1|128|7:Layout=DENSE|64|TANH,DENSE|64|TANH,DENSE|64|TANH,DENSE|64|TANH,DENSE|1|LINEAR:TrainingStrategy=LearningRate=1e-3,Momentum=0.9,ConvergenceSteps=10,BatchSize=128,TestRepetitions=1,MaxEpochs=30,WeightDecay=1e-4,Regularization=None,Optimizer=ADAM,ADAM_beta1=0.9,ADAM_beta2=0.999,ADAM_eps=1.E-7,DropConfig=0.0+0.0+0.0+0.:Architecture=CPU""; : The following options are set:; : - By User:; :",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:10469,Learn,LearningRate,10469,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,1,['Learn'],['LearningRate']
Usability," : public TObject {; private:; Float_t fPx; //X component of the momentum; Float_t fPy; //Y component of the momentum; Float_t fPz; //Z component of the momentum; Float_t fRandom; //A random track quantity; Float_t fMass2; //The mass square of this particle; Float_t fBx; //X intercept at the vertex; Float_t fBy; //Y intercept at the vertex; Float_t fMeanCharge; //Mean charge deposition of all hits; Float_t fXfirst; //X coordinate of the first point; Float_t fXlast; //X coordinate of the last point; Float_t fYfirst; //Y coordinate of the first point; Float_t fYlast; //Y coordinate of the last point; Float_t fZfirst; //Z coordinate of the first point; Float_t fZlast; //Z coordinate of the last point; Float_t fCharge; //Charge of this track; Float_t fVertex[3]; //Track vertex position; Int_t fNpoint; //Number of points for this track; Short_t fValid; //Validity criterion. // method definitions ...; ClassDef(Track,1) //A track segment; };; 12.17.4 Writing the Tree; We create a simple tree with two branches both holding Event objects. One is split and the other is not. We also create a pointer to an Event object (event).; void tree4w() {; // check to see if the event class is in the dictionary; // if it is not load the definition in libEvent.so; if (!TClassTable::GetDict(""Event"")) {; gSystem->Load(""$ROOTSYS/test/libEvent.so"");; }; // create a Tree file tree4.root; TFile f(""tree4.root"",""RECREATE"");; // create a ROOT Tree; TTree t4(""t4"",""A Tree with Events"");; // create a pointer to an Event object; Event *event = new Event();; // create two branches, split one; t4.Branch(""event_branch"", ""Event"", &event,16000,2);; t4.Branch(""event_not_split"", ""Event"", &event,16000,0);. // a local variable for the event type; char etype[20];. // fill the tree; for (Int_t ev = 0; ev <100; ev++) {; Float_t sigmat, sigmas;; gRandom->Rannor(sigmat,sigmas);; Int_t ntrack = Int_t(600 + 600 *sigmat/120.);; Float_t random = gRandom->Rndm(1);; sprintf(etype,""type%d"",ev%5);; event->SetType(etype);; ev",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:578579,simpl,simple,578579,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['simpl'],['simple']
Usability," ; (; ). Display ROOT splash screen. ; Definition at line 842 of file TGTextEditor.cxx. ◆ AddLine(). void TGTextEditor::AddLine ; (; const char * ; string). inline . Definition at line 83 of file TGTextEditor.h. ◆ AddLineFast(). void TGTextEditor::AddLineFast ; (; const char * ; string). inline . Definition at line 84 of file TGTextEditor.h. ◆ AddText(). void TGTextEditor::AddText ; (; TGText * ; text). inline . Definition at line 82 of file TGTextEditor.h. ◆ Build(). void TGTextEditor::Build ; (; ). protectedvirtual . Build TGTextEditor widget. ; Definition at line 321 of file TGTextEditor.cxx. ◆ Class(). static TClass * TGTextEditor::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGTextEditor::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGTextEditor::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 93 of file TGTextEditor.h. ◆ ClearText(). void TGTextEditor::ClearText ; (; ). Clear text edit widget. ; Definition at line 727 of file TGTextEditor.cxx. ◆ CloseWindow(). void TGTextEditor::CloseWindow ; (; ). overridevirtual . Close TGTextEditor window. ; Reimplemented from TGMainFrame.; Definition at line 638 of file TGTextEditor.cxx. ◆ CompileMacro(). void TGTextEditor::CompileMacro ; (; ). Save the edited text in a temporary macro, then compile it. ; Definition at line 767 of file TGTextEditor.cxx. ◆ DataChanged(). void TGTextEditor::DataChanged ; (; ). Slot setting the fTextChanged flag to true when the text has been modified in fTextEdit. ; Definition at line 489 of file TGTextEditor.cxx. ◆ DataDropped(). void TGTextEditor::DataDropped ; (; char * ; fname). Update file information when receiving the signal DataDropped from TGTextEdit widget. ; Definition at line 475 of file TGTextEditor.cxx. ◆ DeclFileName(). static const char * TGTextEditor::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEditor.html:44130,Clear,ClearText,44130,doc/master/classTGTextEditor.html,https://root.cern,https://root.cern/doc/master/classTGTextEditor.html,1,['Clear'],['ClearText']
Usability, ; (; ). inline . Definition at line 120 of file TSpline.h. ◆ DeclFileName(). static const char * TSplinePoly3::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 135 of file TSpline.h. ◆ Derivative(). Double_t TSplinePoly3::Derivative ; (; Double_t ; x); const. inline . Definition at line 126 of file TSpline.h. ◆ Eval(). Double_t TSplinePoly3::Eval ; (; Double_t ; x); const. inlineoverridevirtual . Reimplemented from TSplinePoly.; Definition at line 121 of file TSpline.h. ◆ IsA(). TClass * TSplinePoly3::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TSplinePoly.; Definition at line 135 of file TSpline.h. ◆ operator=(). TSplinePoly3 & TSplinePoly3::operator= ; (; TSplinePoly3 const & ; other). Assignment operator. ; Definition at line 299 of file TSpline.cxx. ◆ Streamer(). void TSplinePoly3::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TSplinePoly. ◆ StreamerNVirtual(). void TSplinePoly3::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 135 of file TSpline.h. Member Data Documentation. ◆ fB. Double_t TSplinePoly3::fB = 0. private . First order expansion coefficient : fB*1! is the first derivative at x. ; Definition at line 107 of file TSpline.h. ◆ fC. Double_t TSplinePoly3::fC = 0. private . Second order expansion coefficient : fC*2! is the second derivative at x. ; Definition at line 108 of file TSpline.h. ◆ fD. Double_t TSplinePoly3::fD = 0. private . Third order expansion coefficient : fD*3! is the third derivative at x. ; Definition at line 109 of file TSpline.h. Libraries for TSplinePoly3:. [legend]; The documentation for this class was generated from the following files:; hist/hist/inc/TSpline.h; hist/hist/src/TSpline.cxx. TSplinePoly3. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:30 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSplinePoly3.html:14748,Guid,Guide,14748,doc/master/classTSplinePoly3.html,https://root.cern,https://root.cern/doc/master/classTSplinePoly3.html,1,['Guid'],['Guide']
Usability, ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 45 of file RooMultiBinomial.h. ◆ clone(). TObject * RooMultiBinomial::clone ; (; const char * ; newname); const. inlineoverridevirtual . Implements RooAbsArg.; Definition at line 32 of file RooMultiBinomial.h. ◆ DeclFileName(). static const char * RooMultiBinomial::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 45 of file RooMultiBinomial.h. ◆ evaluate(). double RooMultiBinomial::evaluate ; (; ); const. overrideprotectedvirtual . Calculate the raw value of the function which is the effFunc value if cat==1 and it is (1-effFunc) if cat==0. ; Implements RooAbsReal.; Definition at line 81 of file RooMultiBinomial.cxx. ◆ IsA(). TClass * RooMultiBinomial::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsReal.; Definition at line 45 of file RooMultiBinomial.h. ◆ Streamer(). void RooMultiBinomial::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsReal. ◆ StreamerNVirtual(). void RooMultiBinomial::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 45 of file RooMultiBinomial.h. Member Data Documentation. ◆ _catList. RooListProxy RooMultiBinomial::_catList. private . Definition at line 41 of file RooMultiBinomial.h. ◆ _effFuncList. RooListProxy RooMultiBinomial::_effFuncList. private . Definition at line 42 of file RooMultiBinomial.h. ◆ _ignoreNonVisible. bool RooMultiBinomial::_ignoreNonVisible. private . Definition at line 43 of file RooMultiBinomial.h. Libraries for RooMultiBinomial:. [legend]; The documentation for this class was generated from the following files:; roofit/roofit/inc/RooMultiBinomial.h; roofit/roofit/src/RooMultiBinomial.cxx. RooMultiBinomial. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:00 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMultiBinomial.html:63746,Guid,Guide,63746,doc/master/classRooMultiBinomial.html,https://root.cern,https://root.cern/doc/master/classRooMultiBinomial.html,1,['Guid'],['Guide']
Usability," ; (; ). override . Standard destructor. ; Definition at line 705 of file TGenCollectionProxy.cxx. Member Function Documentation. ◆ Allocate(). void * TGenCollectionProxy::Allocate ; (; UInt_t ; n, . Bool_t ; forceDelete . ). overridevirtual . Allocate the needed space. ; For associative collection, this returns a TStaging object that need to be deleted manually or returned by calling Commit(TStaging*) ; Implements TVirtualCollectionProxy.; Definition at line 1192 of file TGenCollectionProxy.cxx. ◆ At(). void * TGenCollectionProxy::At ; (; UInt_t ; idx). overridevirtual . Return the address of the value at index 'idx'. ; Implements TVirtualCollectionProxy.; Reimplemented in TGenVectorProxy, TGenVectorBoolProxy, TGenListProxy, and TGenSetProxy.; Definition at line 1064 of file TGenCollectionProxy.cxx. ◆ CheckFunctions(). void TGenCollectionProxy::CheckFunctions ; (; ); const. protected . Check existence of function pointers. ; Definition at line 793 of file TGenCollectionProxy.cxx. ◆ Clear(). void TGenCollectionProxy::Clear ; (; const char * ; opt = """"). overridevirtual . Clear the emulated collection. ; Implements TVirtualCollectionProxy.; Definition at line 1136 of file TGenCollectionProxy.cxx. ◆ Commit(). void TGenCollectionProxy::Commit ; (; void * ; env). overridevirtual . Commit the change. ; Implements TVirtualCollectionProxy.; Definition at line 1277 of file TGenCollectionProxy.cxx. ◆ DeleteItem(). void TGenCollectionProxy::DeleteItem ; (; Bool_t ; force, . void * ; ptr . ); const. protectedvirtual . Call to delete/destruct individual item. ; Reimplemented in TGenVectorProxy, TGenVectorBoolProxy, TGenBitsetProxy, and TGenMapProxy.; Definition at line 1350 of file TGenCollectionProxy.cxx. ◆ Generate(). TVirtualCollectionProxy * TGenCollectionProxy::Generate ; (; ); const. overridevirtual . Virtual copy constructor. ; Implements TVirtualCollectionProxy.; Reimplemented in TGenCollectionStreamer.; Definition at line 731 of file TGenCollectionProxy.cxx. ◆ GetCollec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenCollectionProxy.html:16279,Clear,Clear,16279,doc/master/classTGenCollectionProxy.html,https://root.cern,https://root.cern/doc/master/classTGenCollectionProxy.html,1,['Clear'],['Clear']
Usability," ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGCocoa::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 476 of file TGCocoa.h. ◆ ClearArea(). void TGCocoa::ClearArea ; (; Window_t ; id, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Paints a rectangular area in the specified window ""id"" according to the specified dimensions with the window's background pixel or pixmap. ; Parameters. [in]idspecifies the window ; [in]x,ycoordinates, which are relative to the origin ; [in]w,hthe width and height which define the rectangle dimensions . Reimplemented from TVirtualX.; Definition at line 2292 of file TGCocoa.mm. ◆ ClearAreaAux(). void TGCocoa::ClearAreaAux ; (; Window_t ; wid, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). Definition at line 2252 of file TGCocoa.mm. ◆ ClearWindow() [1/2]. void TGCocoa::ClearWindow ; (; ). overridevirtual . Clears the entire area of the current window. ; Reimplemented from TVirtualX.; Definition at line 681 of file TGCocoa.mm. ◆ ClearWindow() [2/2]. void TGCocoa::ClearWindow ; (; Window_t ; id). overridevirtual . Clears the entire area in the specified window and it is equivalent to ClearArea(id, 0, 0, 0, 0) ; Reimplemented from TVirtualX.; Definition at line 2317 of file TGCocoa.mm. ◆ CloseDisplay(). void TGCocoa::CloseDisplay ; (; ). overridevirtual . Closes connection to display server and destroys all windows. ; Reimplemented from TVirtualX.; Definition at line 524 of file TGCocoa.mm. ◆ ClosePixmap(). void TGCocoa::ClosePixmap ; (; ). overridevirtual . Deletes current pixmap. ; Reimplemented from TVirtualX.; Definition at line 2413 of file TGCocoa.mm. ◆ CloseWindow(). void TGCocoa::CloseWindow ; (; ). overridevirtual . Deletes current window. ; Reimplemented from TVirtualX.; Definition at line 840 of file TGCocoa.mm. ◆ CocoaDrawOFF(). void TGCocoa::CocoaDrawOFF ; (; ). Definition at line 4412 of file TGCoc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCocoa.html:57966,Clear,Clears,57966,doc/master/classTGCocoa.html,https://root.cern,https://root.cern/doc/master/classTGCocoa.html,1,['Clear'],['Clears']
Usability," ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProofPlayerRemote::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TProofPlayerRemote::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 366 of file TProofPlayer.h. ◆ DeclFileName(). static const char * TProofPlayerRemote::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 366 of file TProofPlayer.h. ◆ DrawSelect(). Long64_t TProofPlayerRemote::DrawSelect ; (; TDSet * ; set, . const char * ; varexp, . const char * ; selection, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; firstentry = 0 . ). overridevirtual . Draw (support for TChain::Draw()). ; Returns -1 in case of error or number of selected events in case of success. ; Reimplemented from TProofPlayer.; Definition at line 4232 of file TProofPlayer.cxx. ◆ Feedback(). void TProofPlayerRemote::Feedback ; (; TList * ; objs). overridevirtual . Feedback signal. ; Reimplemented from TProofPlayer.; Definition at line 3317 of file TProofPlayer.cxx. ◆ Finalize() [1/2]. Long64_t TProofPlayerRemote::Finalize ; (; Bool_t ; force = kFALSE, . Bool_t ; sync = kFALSE . ). overridevirtual . Finalize query (may not be used in this class). ; Reimplemented from TProofPlayer.; Definition at line 2781 of file TProofPlayer.cxx. ◆ Finalize() [2/2]. Long64_t TProofPlayerRemote::Finalize ; (; TQueryResult * ; qr). overridevirtual . Finalize the results of a query already processed. ; Reimplemented from TProofPlayer.; Definition at line 2973 of file TProofPlayer.cxx. ◆ GetNextPacket(). TDSetElement * TProofPlayerRemote::GetNextPacket ; (; TSlave * ; slave, . TMessage * ; r . ). overridevirtual . Get next packet for specified slave. ; Reimplemented from TProofPlayer.; Definition at line 4188 of file TProofPlayer.cxx. ◆ GetPacketizer(). TVirtualPacketizer * TProofPlaye",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPlayerRemote.html:27930,Feedback,Feedback,27930,doc/master/classTProofPlayerRemote.html,https://root.cern,https://root.cern/doc/master/classTProofPlayerRemote.html,1,['Feedback'],['Feedback']
Usability," ; (; ); const. Returns the minimum value of the histogram. ; Definition at line 976 of file TH2Poly.cxx. ◆ GetMinimum() [2/2]. Double_t TH2Poly::GetMinimum ; (; Double_t ; minval); const. overridevirtual . Returns the minimum value of the histogram that is greater than minval. ; Reimplemented from TH1.; Definition at line 1000 of file TH2Poly.cxx. ◆ GetNewBinAdded(). Bool_t TH2Poly::GetNewBinAdded ; (; ); const. inline . Definition at line 112 of file TH2Poly.h. ◆ GetNumberOfBins(). Int_t TH2Poly::GetNumberOfBins ; (; ); const. Return the number of bins : it should be the size of the bin list. ; Definition at line 877 of file TH2Poly.cxx. ◆ GetStats(). void TH2Poly::GetStats ; (; Double_t * ; stats); const. overridevirtual . Fill the array stats from the contents of this histogram The array stats must be correctly dimensioned in the calling program. ; stats[0] = sumw; stats[1] = sumw2; stats[2] = sumwx; stats[3] = sumwx2; stats[4] = sumwy; stats[5] = sumwy2; stats[6] = sumwxy; If no axis-subranges are specified (via TAxis::SetRange), the array stats is simply a copy of the statistics quantities computed at filling time. If sub-ranges are specified, the function recomputes these quantities from the bin contents in the current axis ranges.; Note that the mean value/StdDev is computed using the bins in the currently defined ranges (see TAxis::SetRange). By default the ranges include all bins from 1 to nbins included, excluding underflows and overflows. To force the underflows and overflows in the computation, one must call the static function TH1::StatOverflows(kTRUE) before filling the histogram. ; Reimplemented from TH2.; Reimplemented in TProfile2Poly.; Definition at line 1440 of file TH2Poly.cxx. ◆ Honeycomb(). void TH2Poly::Honeycomb ; (; Double_t ; xstart, . Double_t ; ystart, . Double_t ; a, . Int_t ; k, . Int_t ; s, . Option_t * ; option = ""v"" . ). Bins the histogram using a honeycomb structure If the option ""v"" is specified, the hexagons are drawn ""vertically",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2Poly.html:78733,simpl,simply,78733,doc/master/classTH2Poly.html,https://root.cern,https://root.cern/doc/master/classTH2Poly.html,1,['simpl'],['simply']
Usability, ; (; ); const. inline . Definition at line 115 of file DataInputHandler.h. ◆ begin(). std::vector< TreeInfo >::const_iterator TMVA::DataInputHandler::begin ; (; const TString & ; className); const. inline . Definition at line 111 of file DataInputHandler.h. ◆ Bend(). std::vector< TreeInfo >::const_iterator TMVA::DataInputHandler::Bend ; (; ); const. inline . Definition at line 116 of file DataInputHandler.h. ◆ Class(). static TClass * TMVA::DataInputHandler::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::DataInputHandler::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::DataInputHandler::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 134 of file DataInputHandler.h. ◆ ClearBackgroundTreeList(). void TMVA::DataInputHandler::ClearBackgroundTreeList ; (; ). inline . Definition at line 120 of file DataInputHandler.h. ◆ ClearSignalTreeList(). void TMVA::DataInputHandler::ClearSignalTreeList ; (; ). inline . Definition at line 119 of file DataInputHandler.h. ◆ ClearTreeList(). void TMVA::DataInputHandler::ClearTreeList ; (; const TString & ; className). Definition at line 182 of file DataInputHandler.cxx. ◆ DeclFileName(). static const char * TMVA::DataInputHandler::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 134 of file DataInputHandler.h. ◆ end(). std::vector< TreeInfo >::const_iterator TMVA::DataInputHandler::end ; (; const TString & ; className); const. inline . Definition at line 112 of file DataInputHandler.h. ◆ GetBackgroundEntries(). UInt_t TMVA::DataInputHandler::GetBackgroundEntries ; (; ); const. inline . Definition at line 106 of file DataInputHandler.h. ◆ GetClassList(). std::vector< TString > * TMVA::DataInputHandler::GetClassList ; (; ); const. Definition at line 194 of file DataInputHandler.cxx. ◆ GetEntries() [1/3]. UInt_t TMV,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataInputHandler.html:16781,Clear,ClearSignalTreeList,16781,doc/master/classTMVA_1_1DataInputHandler.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataInputHandler.html,1,['Clear'],['ClearSignalTreeList']
Usability," ; (; ); const. inline . Definition at line 42 of file TGEventHandler.h. ◆ operator=(). TGEventHandler & TGEventHandler::operator= ; (; const TGEventHandler & ; ). privatedelete . ◆ ProcessedEvent(). virtual void TGEventHandler::ProcessedEvent ; (; Event_t * ; event). inlinevirtual . Definition at line 55 of file TGEventHandler.h. ◆ ProcessMessage(). virtual Bool_t TGEventHandler::ProcessMessage ; (; Longptr_t ; , . Longptr_t ; , . Longptr_t ;  . ). inlinevirtual . Definition at line 59 of file TGEventHandler.h. ◆ Repaint(). virtual void TGEventHandler::Repaint ; (; ). inlinevirtual . Reimplemented in TGLEventHandler.; Definition at line 60 of file TGEventHandler.h. ◆ SendMessage(). void TGEventHandler::SendMessage ; (; const TGWindow * ; w, . Longptr_t ; msg, . Longptr_t ; parm1, . Longptr_t ; parm2 . ). virtual . Send message (i.e. ; event) to window w. Message is encoded in one long as message type and up to two long parameters. ; Definition at line 36 of file TGEventHandler.cxx. ◆ Streamer(). void TGEventHandler::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGEventHandler::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 62 of file TGEventHandler.h. Member Data Documentation. ◆ fIsActive. Bool_t TGEventHandler::fIsActive. private . kTRUE if handler is active, kFALSE if not active ; Definition at line 29 of file TGEventHandler.h. ◆ fObject. TObject* TGEventHandler::fObject. private . Definition at line 31 of file TGEventHandler.h. ◆ fWindow. TGWindow* TGEventHandler::fWindow. private . Definition at line 30 of file TGEventHandler.h. Libraries for TGEventHandler:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGEventHandler.h; gui/gui/src/TGEventHandler.cxx. TGEventHandler. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:13 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGEventHandler.html:22932,Guid,Guide,22932,doc/master/classTGEventHandler.html,https://root.cern,https://root.cern/doc/master/classTGEventHandler.html,1,['Guid'],['Guide']
Usability, ; (; Double_t ; r1). inlinevirtual . Definition at line 65 of file TEllipse.h. ◆ SetR2(). virtual void TEllipse::SetR2 ; (; Double_t ; r2). inlinevirtual . Definition at line 66 of file TEllipse.h. ◆ SetTheta(). virtual void TEllipse::SetTheta ; (; Double_t ; theta = 0). inlinevirtual . Definition at line 67 of file TEllipse.h. ◆ SetX1(). virtual void TEllipse::SetX1 ; (; Double_t ; x1). inlinevirtual . Definition at line 68 of file TEllipse.h. ◆ SetY1(). virtual void TEllipse::SetY1 ; (; Double_t ; y1). inlinevirtual . Definition at line 69 of file TEllipse.h. ◆ Streamer(). void TEllipse::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TEllipse. ; Reimplemented from TObject.; Definition at line 665 of file TEllipse.cxx. ◆ StreamerNVirtual(). void TEllipse::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 80 of file TEllipse.h. Member Data Documentation. ◆ fPhimax. Double_t TEllipse::fPhimax. protected . Maximum angle (degrees) ; Definition at line 31 of file TEllipse.h. ◆ fPhimin. Double_t TEllipse::fPhimin. protected . Minimum angle (degrees) ; Definition at line 30 of file TEllipse.h. ◆ fR1. Double_t TEllipse::fR1. protected . first radius ; Definition at line 28 of file TEllipse.h. ◆ fR2. Double_t TEllipse::fR2. protected . second radius ; Definition at line 29 of file TEllipse.h. ◆ fTheta. Double_t TEllipse::fTheta. protected . Rotation angle (degrees) ; Definition at line 32 of file TEllipse.h. ◆ fX1. Double_t TEllipse::fX1. protected . X coordinate of centre. ; Definition at line 26 of file TEllipse.h. ◆ fY1. Double_t TEllipse::fY1. protected . Y coordinate of centre. ; Definition at line 27 of file TEllipse.h. Libraries for TEllipse:. [legend]; The documentation for this class was generated from the following files:; graf2d/graf/inc/TEllipse.h; graf2d/graf/src/TEllipse.cxx. TEllipse. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:31 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEllipse.html:28461,Guid,Guide,28461,doc/master/classTEllipse.html,https://root.cern,https://root.cern/doc/master/classTEllipse.html,1,['Guid'],['Guide']
Usability," ; (; Int_t ; testNo, . Int_t ; nsamples = 10000, . Option_t * ; option = """" . ). Tests for checking the shape navigation algorithms. See TGeoShape::CheckShape() ; Definition at line 651 of file TGeoVolume.cxx. ◆ CheckShapes(). void TGeoVolume::CheckShapes ; (; ). check for negative parameters in shapes. ; Definition at line 676 of file TGeoVolume.cxx. ◆ Class(). static TClass * TGeoVolume::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoVolume::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoVolume::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 256 of file TGeoVolume.h. ◆ CleanAll(). void TGeoVolume::CleanAll ; (; ). Clean data of the volume. ; Definition at line 659 of file TGeoVolume.cxx. ◆ ClearNodes(). void TGeoVolume::ClearNodes ; (; ). inline . Definition at line 95 of file TGeoVolume.h. ◆ ClearShape(). void TGeoVolume::ClearShape ; (; ). Clear the shape of this volume from the list held by the current manager. ; Definition at line 668 of file TGeoVolume.cxx. ◆ ClearThreadData(). void TGeoVolume::ClearThreadData ; (; ); const. virtual . Reimplemented in TGeoVolumeAssembly.; Definition at line 425 of file TGeoVolume.cxx. ◆ CloneNodesAndConnect(). void TGeoVolume::CloneNodesAndConnect ; (; TGeoVolume * ; newmother); const. Clone the array of nodes. ; Definition at line 1880 of file TGeoVolume.cxx. ◆ CloneVolume(). TGeoVolume * TGeoVolume::CloneVolume ; (; ); const. virtual . Clone this volume. ; build a volume with same name, shape and medium ; Reimplemented in TGeoVolumeAssembly.; Definition at line 1831 of file TGeoVolume.cxx. ◆ Contains(). Bool_t TGeoVolume::Contains ; (; const Double_t * ; point); const. inline . Definition at line 104 of file TGeoVolume.h. ◆ CountNodes(). Int_t TGeoVolume::CountNodes ; (; Int_t ; nlevels = 1000, . Int_t ; option = 0 . ). Count total number of subnodes starting from",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolume.html:44403,Clear,ClearShape,44403,doc/master/classTGeoVolume.html,https://root.cern,https://root.cern/doc/master/classTGeoVolume.html,1,['Clear'],['ClearShape']
Usability," ; (; Long64_t ; offs, . Int_t ; len . ). virtual . Reimplemented from TFile.; Definition at line 774 of file TDavixFile.cxx. ◆ ReadBuffers(). Bool_t TDavixFile::ReadBuffers ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). virtual . Read the nbuf blocks described in arrays pos and len. ; The value pos[i] is the seek position of block i of length len[i]. Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer. This function is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 790 of file TDavixFile.cxx. ◆ Seek(). void TDavixFile::Seek ; (; Long64_t ; offset, . ERelativeTo ; pos = kBeg . ). virtual . Set position from where to start reading. ; Reimplemented from TFile.; Definition at line 710 of file TDavixFile.cxx. ◆ setCACheck(). void TDavixFile::setCACheck ; (; Bool_t ; check). Enable or disable certificate authority check. ; Definition at line 827 of file TDavixFile.cxx. ◆ Streamer(). virtual void TDavixFile::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TDavixFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 128 of file TDavixFile.h. ◆ WriteBuffer(). Bool_t TDavixFile::WriteBuffer ; (; const char * ; buf, . Int_t ; len . ). virtual . Write a buffer to the file. ; This is the basic low level write operation. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 809 of file TDavixFile.cxx. Member Data Documentation. ◆ d_ptr. TDavixFileInternal* TDavixFile::d_ptr. private . Definition at line 72 of file TDavixFile.h. Libraries for TDavixFile:. [legend]; The documentation for this class was generated from the following files:; net/davix/inc/TDavixFile.h; net/davix/src/TDavixFile.cxx. TDavixFile. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDavixFile.html:48287,Guid,Guide,48287,doc/master/classTDavixFile.html,https://root.cern,https://root.cern/doc/master/classTDavixFile.html,1,['Guid'],['Guide']
Usability," ; (; Option_t * ; option). virtual . [Rendering scheme for the COL2 and COLZ2 options] (HP14) ; Definition at line 5577 of file THistPainter.cxx. ◆ PaintContour(). void THistPainter::PaintContour ; (; Option_t * ; option). virtual . Control function to draw a 2D histogram as a contour plot. ; Definition at line 5932 of file THistPainter.cxx. ◆ PaintContourLine(). Int_t THistPainter::PaintContourLine ; (; Double_t ; elev1, . Int_t ; icont1, . Double_t ; x1, . Double_t ; y1, . Double_t ; elev2, . Int_t ; icont2, . Double_t ; x2, . Double_t ; y2, . Double_t * ; xarr, . Double_t * ; yarr, . Int_t * ; itarr, . Double_t * ; levels . ). virtual . Fill the matrix xarr and yarr for Contour Plot. ; Definition at line 6257 of file THistPainter.cxx. ◆ PaintErrors(). void THistPainter::PaintErrors ; (; Option_t * ; option). virtual . Draw 1D histograms error bars. ; Definition at line 6314 of file THistPainter.cxx. ◆ PaintFrame(). void THistPainter::PaintFrame ; (; ). virtual . Calculate range and clear pad (canvas). ; Definition at line 6777 of file THistPainter.cxx. ◆ PaintFunction(). void THistPainter::PaintFunction ; (; Option_t * ; option). virtual . [Paint functions associated to an histogram.](HP28"") ; Definition at line 6800 of file THistPainter.cxx. ◆ PaintH3(). void THistPainter::PaintH3 ; (; Option_t * ; option = """"). virtual . Control function to draw a 3D histograms. ; Definition at line 6974 of file THistPainter.cxx. ◆ PaintH3Box(). void THistPainter::PaintH3Box ; (; Int_t ; iopt). virtual . Control function to draw a 3D histogram with boxes. ; Definition at line 7499 of file THistPainter.cxx. ◆ PaintH3BoxRaster(). void THistPainter::PaintH3BoxRaster ; (; ). virtual . Control function to draw a 3D histogram with boxes. ; Definition at line 7690 of file THistPainter.cxx. ◆ PaintH3Iso(). void THistPainter::PaintH3Iso ; (; ). virtual . Control function to draw a 3D histogram with Iso Surfaces. ; Definition at line 7892 of file THistPainter.cxx. ◆ PaintHighlightBin().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHistPainter.html:159635,clear,clear,159635,doc/master/classTHistPainter.html,https://root.cern,https://root.cern/doc/master/classTHistPainter.html,1,['clear'],['clear']
Usability," ; (; TBuffer & ; ). virtual . Reimplemented in ROOT::Experimental::XRooFit::xRooHypoSpace, TMVA::TSpline1, TMVA::TSpline2, TStyle, TVirtualPS, TVirtualX, TGeoBatemanSol, TVirtualGeoTrack, TGCocoa, TGQuartz, TCandle, TCutG, TGraphPolar, TGraphQQ, TLegendEntry, TMarker, TImageDump, TPDF, TPostScript, TSVG, TTeXDump, TGWin32, TGX11, TGX11TTF, TEveLine, TEveLineProjected, TEvePointSet, TEvePointSetArray, TEvePointSetProjected, TEveScalableStraightLineSet, TEveStraightLineSet, TEveStraightLineSetProjected, TEveTrack, TEveTrackList, TEveTrackProjected, TEveTrackListProjected, TPointSet3D, TPolyMarker3D, TGLTH3Composition, TWebPadPainter, TWebPS, THbookTree, TEfficiency, TF1, TF12, TF2, TF3, TGraph, TGraph2D, TGraph2DAsymmErrors, TGraph2DErrors, TGraphAsymmErrors, TGraphBentErrors, TGraphErrors, TGraphMultiErrors, TH1, TH1C, TH1S, TH1I, TH1L, TH1F, TH1D, TH1K, TH2, TH2C, TH2S, TH2I, TH2L, TH2F, TH2D, TH2Poly, TH3, TH3C, TH3S, TH3I, TH3L, TH3F, TH3D, TPolyMarker, TProfile, TProfile2D, TProfile2Poly, TProfile3D, TScatter, TSpline, TSpline3, TSpline5, ROOT::v5::TF1Data, TProofChain, RooCurve, RooEllipse, RooHist, TChain, TNtuple, TNtupleD, TTree, and TTreeSQL. ◆ StreamerNVirtual(). void TAttMarker::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 50 of file TAttMarker.h. Member Data Documentation. ◆ fMarkerColor. Color_t TAttMarker::fMarkerColor. protected . Marker color. ; Definition at line 22 of file TAttMarker.h. ◆ fMarkerSize. Size_t TAttMarker::fMarkerSize. protected . Marker size. ; Definition at line 24 of file TAttMarker.h. ◆ fMarkerStyle. Style_t TAttMarker::fMarkerStyle. protected . Marker style. ; Definition at line 23 of file TAttMarker.h. Libraries for TAttMarker:. [legend]; The documentation for this class was generated from the following files:; core/base/inc/TAttMarker.h; core/base/src/TAttMarker.cxx. TAttMarker. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttMarker.html:18202,Guid,Guide,18202,doc/master/classTAttMarker.html,https://root.cern,https://root.cern/doc/master/classTAttMarker.html,1,['Guid'],['Guide']
Usability, ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGButton. ◆ StreamerNVirtual(). void TGTextButton::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 224 of file TGButton.h. Member Data Documentation. ◆ fFontStruct. FontStruct_t TGTextButton::fFontStruct. protected . Definition at line 154 of file TGButton.h. ◆ fgDefaultFont. const TGFont * TGTextButton::fgDefaultFont = nullptr. staticprotected . Definition at line 159 of file TGButton.h. ◆ fHasOwnFont. Bool_t TGTextButton::fHasOwnFont. protected . Definition at line 155 of file TGButton.h. ◆ fHKeycode. Int_t TGTextButton::fHKeycode. protected . Definition at line 152 of file TGButton.h. ◆ fLabel. TGHotString* TGTextButton::fLabel. protected . Definition at line 145 of file TGButton.h. ◆ fMBottom. Int_t TGTextButton::fMBottom. protected . Definition at line 149 of file TGButton.h. ◆ fMLeft. Int_t TGTextButton::fMLeft. protected . Definition at line 146 of file TGButton.h. ◆ fMRight. Int_t TGTextButton::fMRight. protected . Definition at line 147 of file TGButton.h. ◆ fMTop. Int_t TGTextButton::fMTop. protected . Definition at line 148 of file TGButton.h. ◆ fPrevStateOn. Bool_t TGTextButton::fPrevStateOn. protected . Definition at line 157 of file TGButton.h. ◆ fStateOn. Bool_t TGTextButton::fStateOn. protected . Definition at line 156 of file TGButton.h. ◆ fTLayout. TGTextLayout* TGTextButton::fTLayout. protected . Definition at line 153 of file TGButton.h. ◆ fTMode. Int_t TGTextButton::fTMode. protected . Definition at line 150 of file TGButton.h. ◆ fWrapLength. Int_t TGTextButton::fWrapLength. protected . Definition at line 151 of file TGButton.h. Libraries for TGTextButton:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGButton.h; gui/gui/src/TGButton.cxx. TGTextButton. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:37 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextButton.html:44746,Guid,Guide,44746,doc/master/classTGTextButton.html,https://root.cern,https://root.cern/doc/master/classTGTextButton.html,1,['Guid'],['Guide']
Usability," ; (; std::ostream & ; os, . const char * ; indent . ). overridevirtual . Add details on cache contents when printing in tree mode. ; Reimplemented from RooCacheManager< RooAbsCacheElement >.; Definition at line 194 of file RooObjCacheManager.cxx. ◆ redirectServersHook(). bool RooObjCacheManager::redirectServersHook ; (; const RooAbsCollection & ; newServerList, . bool ; mustReplaceAll, . bool ; nameChange, . bool ; isRecursive . ). overridevirtual . Intercept server redirect calls. ; If clearOnRedirect was set, sterilize the cache (i.e. keep the structure but delete all contents). If not forward serverRedirect to cache elements ; Reimplemented from RooCacheManager< RooAbsCacheElement >.; Definition at line 84 of file RooObjCacheManager.cxx. ◆ setClearOnRedirect(). void RooObjCacheManager::setClearOnRedirect ; (; bool ; flag). inline . Definition at line 50 of file RooObjCacheManager.h. ◆ sterilize(). void RooObjCacheManager::sterilize ; (; ). overridevirtual . Clear the cache payload but retain slot mapping w.r.t to normalization and integration sets. ; Reimplemented from RooCacheManager< RooAbsCacheElement >.; Definition at line 152 of file RooObjCacheManager.cxx. ◆ Streamer(). void RooObjCacheManager::Streamer ; (; TBuffer & ; ). overridevirtual . Reimplemented from RooCacheManager< RooAbsCacheElement >. ◆ StreamerNVirtual(). void RooObjCacheManager::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 62 of file RooObjCacheManager.h. Member Data Documentation. ◆ _allowOptimize. bool RooObjCacheManager::_allowOptimize. protected . Definition at line 55 of file RooObjCacheManager.h. ◆ _clearObsList. bool RooObjCacheManager::_clearObsList. staticprotected . Clear obslist on sterilize? ; Definition at line 60 of file RooObjCacheManager.h. ◆ _clearOnRedirect. bool RooObjCacheManager::_clearOnRedirect. protected . Definition at line 54 of file RooObjCacheManager.h. ◆ _optCacheModeSeen. bool RooObjCacheManager::_optCacheModeSeen. p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooObjCacheManager.html:11680,Clear,Clear,11680,doc/master/classRooObjCacheManager.html,https://root.cern,https://root.cern/doc/master/classRooObjCacheManager.html,1,['Clear'],['Clear']
Usability," ; 1089 // If we have to grow to have enough elements, destroy the current elements.; 1090 // This allows us to avoid copying them during the grow.; 1091 // From the original LLVM implementation:; 1092 // FIXME: this may not actually make any sense if we can efficiently move; 1093 // elements.; 1094 if (this->capacity() < RHSSize) {; 1095 if (this->Owns()) {; 1096 // Destroy current elements.; 1097 this->destroy_range(this->begin(), this->end());; 1098 }; 1099 this->set_size(0);; 1100 CurSize = 0;; 1101 this->grow(RHSSize);; 1102 } else if (CurSize) {; 1103 // Otherwise, use assignment for the already-constructed elements.; 1104 std::move(RHS.begin(), RHS.begin() + CurSize, this->begin());; 1105 }; 1106 ; 1107 // Move-construct the new elements in place.; 1108 this->uninitialized_move(RHS.begin() + CurSize, RHS.end(), this->begin() + CurSize);; 1109 ; 1110 // Set end.; 1111 this->set_size(RHSSize);; 1112 ; 1113 RHS.clear();; 1114 return *this;; 1115}; 1116 ; 1117template <typename T>; 1118bool IsSmall(const ROOT::VecOps::RVec<T> &v); 1119{; 1120 return v.isSmall();; 1121}; 1122 ; 1123template <typename T>; 1124bool IsAdopting(const ROOT::VecOps::RVec<T> &v); 1125{; 1126 return !v.Owns();; 1127}; 1128 ; 1129} // namespace VecOps; 1130} // namespace Detail; 1131 ; 1132namespace VecOps {; 1133// Note that we open here with @{ the Doxygen group vecops and it is; 1134// closed again at the end of the C++ namespace VecOps; 1135/**; 1136 * \defgroup vecops VecOps; 1137 * A ""std::vector""-like collection of values implementing handy operation to analyse them; 1138 * @{; 1139*/; 1140 ; 1141// From the original SmallVector code:; 1142// This is a 'vector' (really, a variable-sized array), optimized; 1143// for the case when the array is small. It contains some number of elements; 1144// in-place, which allows it to avoid heap allocation when the actual number of; 1145// elements is below that threshold. This allows normal ""small"" cases to be; 1146// fast without losing general",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RVec_8hxx_source.html:38666,clear,clear,38666,doc/master/RVec_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RVec_8hxx_source.html,2,['clear'],['clear']
Usability," ; 1673////////////////////////////////////////////////////////////////////////////////; 1674/// This is a service method used by `THistPainter`; 1675/// to paint 1D histograms. It is not used to paint TGraph.; 1676///; 1677/// Input parameters:; 1678///; 1679/// - npoints : Number of points in X or in Y.; 1680/// - x[npoints] or x[0] : x coordinates or (xmin,xmax).; 1681/// - y[npoints] or y[0] : y coordinates or (ymin,ymax).; 1682/// - chopt : Option.; 1683///; 1684/// The aspect of the histogram is done according to the value of the chopt.; 1685///; 1686/// | Option | Description |; 1687/// |--------|-----------------------------------------------------------------|; 1688/// |""R"" | Graph is drawn horizontally, parallel to X axis. (default is vertically, parallel to Y axis).If option R is selected the user must give 2 values for Y (y[0]=YMIN and y[1]=YMAX) or N values for X, one for each channel. Otherwise the user must give, N values for Y, one for each channel or 2 values for X (x[0]=XMIN and x[1]=XMAX) |; 1689/// |""L"" | A simple polyline between every points is drawn.|; 1690/// |""H"" | An Histogram with equidistant bins is drawn as a polyline.|; 1691/// |""F"" | An histogram with equidistant bins is drawn as a fill area. Contour is not drawn unless chopt='H' is also selected..|; 1692/// |""N"" | Non equidistant bins (default is equidistant). If N is the number of channels array X and Y must be dimensioned as follow: If option R is not selected (default) then the user must give (N+1) values for X (limits of channels) or N values for Y, one for each channel. Otherwise the user must give (N+1) values for Y (limits of channels). or N values for X, one for each channel |; 1693/// |""F1"" | Idem as 'F' except that fill area base line is the minimum of the pad instead of Y=0.|; 1694/// |""F2"" | Draw a Fill area polyline connecting the center of bins|; 1695/// |""C"" | A smooth Curve is drawn.|; 1696/// |""*"" | A Star is plotted at the center of each bin.|; 1697/// |""P"" | Idem wi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPainter_8cxx_source.html:61518,simpl,simple,61518,doc/master/TGraphPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPainter_8cxx_source.html,1,['simpl'],['simple']
Usability," ; 23#include ""Math/GenVector/PositionVector3D.h""; 24 ; 25#include ""Math/GenVector/Rotation3D.h""; 26 ; 27#include ""Math/GenVector/Translation3D.h""; 28 ; 29 ; 30#include ""Math/GenVector/AxisAnglefwd.h""; 31#include ""Math/GenVector/EulerAnglesfwd.h""; 32#include ""Math/GenVector/Quaternionfwd.h""; 33#include ""Math/GenVector/RotationZYXfwd.h""; 34#include ""Math/GenVector/RotationXfwd.h""; 35#include ""Math/GenVector/RotationYfwd.h""; 36#include ""Math/GenVector/RotationZfwd.h""; 37 ; 38#include <iostream>; 39#include <type_traits>; 40#include <cmath>; 41 ; 42//#include ""Math/Vector3Dfwd.h""; 43 ; 44 ; 45 ; 46namespace ROOT {; 47 ; 48namespace Math {; 49 ; 50namespace Impl {; 51 ; 52//_________________________________________________________________________________________; 53/**; 54 Basic 3D Transformation class describing a rotation and then a translation; 55 The internal data are a 3D rotation data (represented as a 3x3 matrix) and a 3D vector data.; 56 They are represented and held in this class like a 3x4 matrix (a simple array of 12 numbers).; 57 ; 58 The class can be constructed from any 3D rotation object; 59 (ROOT::Math::Rotation3D, ROOT::Math::AxisAngle, ROOT::Math::Quaternion, etc...) and/or; 60 a 3D Vector (ROOT::Math::DislacementVector3D or via ROOT::Math::Translation ) representing a Translation.; 61 The Transformation is defined by applying first the rotation and then the translation.; 62 A transformation defined by applying first a translation and then a rotation is equivalent to the; 63 transformation obtained applying first the rotation and then a translation equivalent to the rotated vector.; 64 The operator * can be used to obtain directly such transformations, in addition to combine various; 65 transformations.; 66 Keep in mind that the operator * (like in the case of rotations ) is not commutative.; 67 The operator * is used (in addition to operator() ) to apply a transformations on the vector; 68 (DisplacementVector3D and LorentzVector classes) and point (Po",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GenVector_2Transform3D_8h_source.html:1797,simpl,simple,1797,doc/master/GenVector_2Transform3D_8h_source.html,https://root.cern,https://root.cern/doc/master/GenVector_2Transform3D_8h_source.html,1,['simpl'],['simple']
Usability," ; 2401////////////////////////////////////////////////////////////////////////////////; 2402/// assignment; 2403 ; 2404TGeoHMatrix::TGeoHMatrix(const TGeoMatrix &matrix) : TGeoMatrix(matrix); 2405{; 2406 memset(&fTranslation[0], 0, kN3);; 2407 memcpy(fRotationMatrix, kIdentityMatrix, kN9);; 2408 memcpy(fScale, kUnitScale, kN3);; 2409 if (matrix.IsIdentity()); 2410 return;; 2411 if (matrix.IsTranslation()); 2412 SetTranslation(matrix.GetTranslation());; 2413 if (matrix.IsRotation()); 2414 memcpy(fRotationMatrix, matrix.GetRotationMatrix(), kN9);; 2415 if (matrix.IsScale()); 2416 memcpy(fScale, matrix.GetScale(), kN3);; 2417}; 2418 ; 2419////////////////////////////////////////////////////////////////////////////////; 2420/// destructor; 2421 ; 2422TGeoHMatrix::~TGeoHMatrix() {}; 2423 ; 2424////////////////////////////////////////////////////////////////////////////////; 2425/// assignment; 2426 ; 2427TGeoHMatrix &TGeoHMatrix::operator=(const TGeoMatrix *matrix); 2428{; 2429 return TGeoHMatrix::operator=(*matrix);; 2430}; 2431 ; 2432////////////////////////////////////////////////////////////////////////////////; 2433/// assignment; 2434 ; 2435TGeoHMatrix &TGeoHMatrix::operator=(const TGeoMatrix &matrix); 2436{; 2437 if (&matrix == this); 2438 return *this;; 2439 Clear();; 2440 Bool_t registered = TestBit(kGeoRegistered);; 2441 TNamed::operator=(matrix);; 2442 if (matrix.IsIdentity()) {; 2443 SetBit(kGeoRegistered, registered);; 2444 return *this;; 2445 }; 2446 if (matrix.IsTranslation()); 2447 memcpy(fTranslation, matrix.GetTranslation(), kN3);; 2448 if (matrix.IsRotation()); 2449 memcpy(fRotationMatrix, matrix.GetRotationMatrix(), kN9);; 2450 if (matrix.IsScale()); 2451 memcpy(fScale, matrix.GetScale(), kN3);; 2452 SetBit(kGeoRegistered, registered);; 2453 return *this;; 2454}; 2455 ; 2456////////////////////////////////////////////////////////////////////////////////; 2457/// Composition; 2458 ; 2459TGeoHMatrix &TGeoHMatrix::operator*=(const TGeoMatrix &right); 246",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMatrix_8cxx_source.html:83851,Clear,Clear,83851,doc/master/TGeoMatrix_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoMatrix_8cxx_source.html,1,['Clear'],['Clear']
Usability," ; 752 /*! \brief set the drop-out configuration (layer-wise); 753 *; 754 * \param begin begin of an array or vector denoting the drop-out probabilities for each layer; 755 * \param end end of an array or vector denoting the drop-out probabilities for each layer; 756 * \param _dropRepetitions denotes after how many repetitions the drop-out setting (which nodes are dropped out exactly) is changed; 757 */; 758 template <typename Iterator>; 759 void setDropOut (Iterator begin, Iterator end, size_t _dropRepetitions) { m_dropOut.assign (begin, end); m_dropRepetitions = _dropRepetitions; }; 760 ; 761 size_t dropRepetitions () const { return m_dropRepetitions; }; 762 const std::vector<double>& dropFractions () const { return m_dropOut; }; 763 ; 764 void setMonitoring (std::shared_ptr<Monitoring> ptrMonitoring) { fMonitoring = ptrMonitoring; } ///< prepared for monitoring; 765 ; 766 size_t convergenceSteps () const { return m_convergenceSteps; } ///< how many steps until training is deemed to have converged; 767 size_t batchSize () const { return m_batchSize; } ///< mini-batch size; 768 size_t testRepetitions () const { return m_testRepetitions; } ///< how often is the test data tested; 769 double factorWeightDecay () const { return m_factorWeightDecay; } ///< get the weight-decay factor; 770 ; 771 double learningRate () const { return fLearningRate; } ///< get the learning rate; 772 double momentum () const { return fMomentum; } ///< get the momentum (e.g. for SGD); 773 int repetitions () const { return fRepetitions; } ///< how many steps have to be gone until the batch is changed; 774 MinimizerType minimizerType () const { return fMinimizerType; } ///< which minimizer shall be used (e.g. SGD); 775 ; 776 ; 777 ; 778 ; 779 ; 780 ; 781 virtual void testSample (double /*error*/, double /*output*/, double /*target*/, double /*weight*/) {} ///< virtual function to be used for monitoring (callback); 782 virtual void startTrainCycle () ///< callback for monitoring and logging; 783",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8h_source.html:27845,learn,learningRate,27845,doc/master/NeuralNet_8h_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8h_source.html,2,['learn'],"['learning', 'learningRate']"
Usability," ; 770void TCanvas::Cleared(TVirtualPad *pad); 771{; 772 Emit(""Cleared(TVirtualPad*)"", (Longptr_t)pad);; 773}; 774 ; 775////////////////////////////////////////////////////////////////////////////////; 776/// Emit Closed signal.; 777 ; 778void TCanvas::Closed(); 779{; 780 Emit(""Closed()"");; 781}; 782 ; 783////////////////////////////////////////////////////////////////////////////////; 784/// Close canvas.; 785///; 786/// Delete window/pads data structure; 787 ; 788void TCanvas::Close(Option_t *option); 789{; 790 auto padsave = gPad;; 791 TCanvas *cansave = padsave ? padsave->GetCanvas() : nullptr;; 792 ; 793 if (fCanvasID != -1) {; 794 ; 795 if (!gROOT->IsLineProcessing() && !gVirtualX->IsCmdThread()) {; 796 gInterpreter->Execute(this, IsA(), ""Close"", option);; 797 return;; 798 }; 799 ; 800 R__LOCKGUARD(gROOTMutex);; 801 ; 802 FeedbackMode(kFALSE);; 803 ; 804 cd();; 805 TPad::Close(option);; 806 ; 807 if (!IsBatch() && !IsWeb()) {; 808 gVirtualX->SelectWindow(fCanvasID); //select current canvas; 809 ; 810 DeleteCanvasPainter();; 811 ; 812 if (fCanvasImp); 813 fCanvasImp->Close();; 814 }; 815 fCanvasID = -1;; 816 fBatch = kTRUE;; 817 ; 818 gROOT->GetListOfCanvases()->Remove(this);; 819 ; 820 // Close actual window on screen; 821 SafeDelete(fCanvasImp);; 822 }; 823 ; 824 if (cansave == this) {; 825 gPad = (TCanvas *) gROOT->GetListOfCanvases()->First();; 826 } else {; 827 gPad = padsave;; 828 }; 829 ; 830 Closed();; 831}; 832 ; 833////////////////////////////////////////////////////////////////////////////////; 834/// Copy the canvas pixmap of the pad to the canvas.; 835 ; 836void TCanvas::CopyPixmaps(); 837{; 838 if (!IsBatch()) {; 839 CopyPixmap();; 840 TPad::CopyPixmaps();; 841 }; 842}; 843 ; 844////////////////////////////////////////////////////////////////////////////////; 845/// Draw a canvas.; 846/// If a canvas with the name is already on the screen, the canvas is repainted.; 847/// This function is useful when a canvas object has been saved in a Root file.;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCanvas_8cxx_source.html:25885,Feedback,FeedbackMode,25885,doc/master/TCanvas_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCanvas_8cxx_source.html,1,['Feedback'],['FeedbackMode']
Usability," ; : linearity property of this classifier is reflected in the ; : metric with which ""far apart"" and ""close vicinity"" are ; : determined: the covariance matrix of the discriminating; : variable space.); : ; : ␛[1m--- Performance optimisation:␛[0m; : ; : Optimal performance for the linear discriminant is obtained for ; : linearly correlated Gaussian-distributed variables. Any deviation; : from this ideal reduces the achievable separation power. In ; : particular, no discrimination at all is achieved for a variable; : that has the same sample mean for signal and background, even if ; : the shapes of the distributions are very different. Thus, the linear ; : discriminant often benefits from a suitable transformation of the ; : input variables. For example, if a variable x in [-1,1] has a ; : a parabolic signal distributions, and a uniform background; : distributions, their mean value is zero in both cases, leading ; : to no separation. The simple transformation x -> |x| renders this ; : variable powerful for the use in a linear discriminant.; : ; : ␛[1m--- Performance tuning via configuration options:␛[0m; : ; : <None>; : ; : <Suppress this message by specifying ""!H"" in the booking option>; : ␛[1m================================================================␛[0m; : ; LD : Results for LD coefficients:; : -----------------------; : Variable: Coefficient:; : -----------------------; : myvar1: -0.309; : myvar2: -0.102; : var3: -0.142; : var4: +0.705; : (offset): -0.055; : -----------------------; : Elapsed time for training with 2000 events: 0.00103 sec ; LD : [dataset] : Evaluation of LD on training sample (2000 events); : Elapsed time for evaluation of 2000 events: 0.000394 sec ; : <CreateMVAPdfs> Separation from histogram (PDF): 0.540 (0.000); : Dataset[dataset] : Evaluation of LD on training sample; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_LD.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_LD.class.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:37035,simpl,simple,37035,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['simpl'],['simple']
Usability," ; Definition at line 3046 of file TProof.cxx. ◆ CleanupSession(). Int_t TProof::CleanupSession ; (; const char * ; sessiontag). Send cleanup request for the session specified by tag. ; Definition at line 6092 of file TProof.cxx. ◆ ClearCache(). void TProof::ClearCache ; (; const char * ; file = 0). virtual . Remove file from all file caches. ; If file is 0 or """" or ""*"", remove all the files ; Reimplemented in TProofLite.; Definition at line 7714 of file TProof.cxx. ◆ ClearData(). void TProof::ClearData ; (; UInt_t ; what = kUnregistered, . const char * ; dsname = 0 . ). Remove files for the data directory. ; The option 'what' can take the values: kPurge remove all files and directories under '~/data' kUnregistered remove only files not in registered datasets (default) kDataset remove files belonging to dataset 'dsname' User is prompt for confirmation, unless kForceClear is ORed with the option ; Definition at line 7412 of file TProof.cxx. ◆ ClearDataProgress(). void TProof::ClearDataProgress ; (; Int_t ; r, . Int_t ; t . ). private . Progress bar for clear data. ; Definition at line 7670 of file TProof.cxx. ◆ ClearDataSetCache(). void TProof::ClearDataSetCache ; (; const char * ; dataset = 0). virtual . Clear the content of the dataset cache, if any (matching 'dataset', if defined). ; Reimplemented in TProofLite.; Definition at line 10896 of file TProof.cxx. ◆ ClearFeedback(). void TProof::ClearFeedback ; (; ). Clear feedback list. ; Definition at line 10012 of file TProof.cxx. ◆ ClearInput(). void TProof::ClearInput ; (; ). Clear input object list. ; Definition at line 9742 of file TProof.cxx. ◆ ClearInputData() [1/2]. void TProof::ClearInputData ; (; const char * ; name). Remove obj 'name' form the input data list;. ; Definition at line 9572 of file TProof.cxx. ◆ ClearInputData() [2/2]. void TProof::ClearInputData ; (; TObject * ; obj = 0). Remove obj form the input data list; if obj is null (default), clear the input data info. ; Definition at line 9538 of file T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:75060,Clear,ClearDataProgress,75060,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['Clear'],['ClearDataProgress']
Usability," ; Definition at line 82 of file TNotifyLink.h. ◆ RemoveLink(). template<class Chain > . void TNotifyLinkBase::RemoveLink ; (; Chain & ; chain). inline . Remove this link from a chain's list of notify subscribers. ; Templated only to remove an include dependency from TChain: it expects a TChain as input (in practice anything that implements SetNotify and GetNotify will work, but in ROOT that is only TTree and its sub-classes). NoteNo error is emitted if the TNotifyLink is not part of the linked list for the chain passed as argument. The TNotifyLink will still remove itself from the doubly linked list. ; Definition at line 100 of file TNotifyLink.h. ◆ Streamer(). void TNotifyLinkBase::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TNotifyLinkBase::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 123 of file TNotifyLink.h. Member Data Documentation. ◆ fNext. TObject* TNotifyLinkBase::fNext = nullptr. protected . Next node in a TChain's list of subscribers. ; For generality, it might be a generic TObject rather than another TNotifyLink: this makes it possible to call TChain::SetNotify() with a generic notifier exactly once before more TNotifyLinks are added. Null if this is the tail of the list. ; Definition at line 57 of file TNotifyLink.h. ◆ fPrevious. TNotifyLinkBase* TNotifyLinkBase::fPrevious = nullptr. protected . Previous node in a TChain's list of subscribers to its notification. ; If null, this TNotifyLink is the head node of the list and the TChain::GetNotify() for the corresponding chain is expected to return this. ; Definition at line 52 of file TNotifyLink.h. Libraries for TNotifyLinkBase:. [legend]; The documentation for this class was generated from the following file:; core/base/inc/TNotifyLink.h. TNotifyLinkBase. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:02 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNotifyLinkBase.html:14224,Guid,Guide,14224,doc/master/classTNotifyLinkBase.html,https://root.cern,https://root.cern/doc/master/classTNotifyLinkBase.html,1,['Guid'],['Guide']
Usability," ; Implements RooAbsReal.; Definition at line 173 of file RooHistConstraint.cxx. ◆ getLogVal(). double RooHistConstraint::getLogVal ; (; const RooArgSet * ; set = nullptr); const. overridevirtual . Return the log of the current value with given normalization An error message is printed if the argument of the log is negative. ; Reimplemented from RooAbsPdf.; Definition at line 200 of file RooHistConstraint.cxx. ◆ IsA(). TClass * RooHistConstraint::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 41 of file RooHistConstraint.h. ◆ selfNormalized(). bool RooHistConstraint::selfNormalized ; (; ); const. inlineoverridevirtual . It makes only sense to use the RooHistConstraint when normalized over the set of all gammas, in which case it is self-normalized because the used TMath::Poisson function is normalized. ; Reimplemented from RooAbsPdf.; Definition at line 29 of file RooHistConstraint.h. ◆ Streamer(). void RooHistConstraint::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsPdf. ◆ StreamerNVirtual(). void RooHistConstraint::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 41 of file RooHistConstraint.h. Member Data Documentation. ◆ _gamma. RooListProxy RooHistConstraint::_gamma. protected . Definition at line 33 of file RooHistConstraint.h. ◆ _nominal. RooListProxy RooHistConstraint::_nominal. protected . Definition at line 34 of file RooHistConstraint.h. ◆ _relParam. bool RooHistConstraint::_relParam. protected . Definition at line 35 of file RooHistConstraint.h. Libraries for RooHistConstraint:. [legend]; The documentation for this class was generated from the following files:; roofit/roofit/inc/RooHistConstraint.h; roofit/roofit/src/RooHistConstraint.cxx. RooHistConstraint. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:56 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHistConstraint.html:77668,Guid,Guide,77668,doc/master/classRooHistConstraint.html,https://root.cern,https://root.cern/doc/master/classRooHistConstraint.html,1,['Guid'],['Guide']
Usability," ; Implements TMVA::MethodBase.; Definition at line 228 of file MethodCompositeBase.cxx. ◆ ReadWeightsFromStream() [3/3]. virtual void TMVA::MethodBase::ReadWeightsFromStream ; (; TFile & ; ). inlinevirtual . Reimplemented from TMVA::MethodBase.; Definition at line 266 of file MethodBase.h. ◆ ReadWeightsFromXML(). void TMVA::MethodCompositeBase::ReadWeightsFromXML ; (; void * ; wghtnode). virtual . XML streamer. ; Implements TMVA::MethodBase.; Definition at line 154 of file MethodCompositeBase.cxx. ◆ Streamer(). virtual void TMVA::MethodCompositeBase::Streamer ; (; TBuffer & ; ). virtual . Reimplemented from TMVA::MethodBase.; Reimplemented in TMVA::MethodBoost, and TMVA::MethodCategory. ◆ StreamerNVirtual(). void TMVA::MethodCompositeBase::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 114 of file MethodCompositeBase.h. ◆ Train(). virtual void TMVA::MethodCompositeBase::Train ; (; ). pure virtual . Implements TMVA::MethodBase.; Implemented in TMVA::MethodBoost, and TMVA::MethodCategory. Member Data Documentation. ◆ fCurrentMethod. MethodBase* TMVA::MethodCompositeBase::fCurrentMethod. protected . Definition at line 97 of file MethodCompositeBase.h. ◆ fCurrentMethodIdx. UInt_t TMVA::MethodCompositeBase::fCurrentMethodIdx. protected . Definition at line 96 of file MethodCompositeBase.h. ◆ fMethods. std::vector<IMethod*> TMVA::MethodCompositeBase::fMethods. protected . vector of all classifiers ; Definition at line 109 of file MethodCompositeBase.h. ◆ fMethodWeight. std::vector<Double_t> TMVA::MethodCompositeBase::fMethodWeight. protected . Definition at line 112 of file MethodCompositeBase.h. Libraries for TMVA::MethodCompositeBase:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/MethodCompositeBase.h; tmva/tmva/src/MethodCompositeBase.cxx. TMVAMethodCompositeBase. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:34 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCompositeBase.html:35259,Guid,Guide,35259,doc/master/classTMVA_1_1MethodCompositeBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCompositeBase.html,1,['Guid'],['Guide']
Usability," ; Reimplemented from TH1.; Definition at line 485 of file TH1.h. ◆ SetBinsLength(). void TH1C::SetBinsLength ; (; Int_t ; n = -1). overridevirtual . Set total number of bins including under/overflow Reallocate bin contents array. ; Reimplemented from TH1.; Definition at line 9577 of file TH1.cxx. ◆ Streamer(). void TH1C::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TH1. ◆ StreamerNVirtual(). void TH1C::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 475 of file TH1.h. ◆ UpdateBinContent(). void TH1C::UpdateBinContent ; (; Int_t ; bin, . Double_t ; content . ). inlineoverrideprotectedvirtual . Raw update of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ; Reimplemented from TH1.; Definition at line 486 of file TH1.h. Friends And Related Symbol Documentation. ◆ operator* [1/3]. TH1C operator* ; (; const TH1C & ; h1, . const TH1C & ; h2 . ). friend . Operator *. ; Definition at line 9630 of file TH1.cxx. ◆ operator* [2/3]. TH1C operator* ; (; const TH1C & ; h1, . Double_t ; c1 . ). friend . Definition at line 491 of file TH1.h. ◆ operator* [3/3]. TH1C operator* ; (; Double_t ; c1, . const TH1C & ; h1 . ). friend . Operator *. ; Definition at line 9597 of file TH1.cxx. ◆ operator+. TH1C operator+ ; (; const TH1C & ; h1, . const TH1C & ; h2 . ). friend . Operator +. ; Definition at line 9608 of file TH1.cxx. ◆ operator-. TH1C operator- ; (; const TH1C & ; h1, . const TH1C & ; h2 . ). friend . Operator -. ; Definition at line 9619 of file TH1.cxx. ◆ operator/. TH1C operator/ ; (; const TH1C & ; h1, . const TH1C & ; h2 . ). friend . Operator /. ; Definition at line 9641 of file TH1.cxx. Libraries for TH1C:. [legend]; The documentation for this class was generated from the following files:; hist/hist/inc/TH1.h; hist/hist/src/TH1.cxx. TH1C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:44 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1C.html:56727,Guid,Guide,56727,doc/master/classTH1C.html,https://root.cern,https://root.cern/doc/master/classTH1C.html,1,['Guid'],['Guide']
Usability," ; Reimplemented from TH1.; Definition at line 526 of file TH1.h. ◆ SetBinsLength(). void TH1S::SetBinsLength ; (; Int_t ; n = -1). overridevirtual . Set total number of bins including under/overflow Reallocate bin contents array. ; Reimplemented from TH1.; Definition at line 9763 of file TH1.cxx. ◆ Streamer(). void TH1S::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TH1. ◆ StreamerNVirtual(). void TH1S::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 516 of file TH1.h. ◆ UpdateBinContent(). void TH1S::UpdateBinContent ; (; Int_t ; bin, . Double_t ; content . ). inlineoverrideprotectedvirtual . Raw update of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ; Reimplemented from TH1.; Definition at line 527 of file TH1.h. Friends And Related Symbol Documentation. ◆ operator* [1/3]. TH1S operator* ; (; const TH1S & ; h1, . const TH1S & ; h2 . ). friend . Operator *. ; Definition at line 9816 of file TH1.cxx. ◆ operator* [2/3]. TH1S operator* ; (; const TH1S & ; h1, . Double_t ; c1 . ). friend . Definition at line 532 of file TH1.h. ◆ operator* [3/3]. TH1S operator* ; (; Double_t ; c1, . const TH1S & ; h1 . ). friend . Operator *. ; Definition at line 9783 of file TH1.cxx. ◆ operator+. TH1S operator+ ; (; const TH1S & ; h1, . const TH1S & ; h2 . ). friend . Operator +. ; Definition at line 9794 of file TH1.cxx. ◆ operator-. TH1S operator- ; (; const TH1S & ; h1, . const TH1S & ; h2 . ). friend . Operator -. ; Definition at line 9805 of file TH1.cxx. ◆ operator/. TH1S operator/ ; (; const TH1S & ; h1, . const TH1S & ; h2 . ). friend . Operator /. ; Definition at line 9827 of file TH1.cxx. Libraries for TH1S:. [legend]; The documentation for this class was generated from the following files:; hist/hist/inc/TH1.h; hist/hist/src/TH1.cxx. TH1S. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:45 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1S.html:56627,Guid,Guide,56627,doc/master/classTH1S.html,https://root.cern,https://root.cern/doc/master/classTH1S.html,1,['Guid'],['Guide']
Usability," ; Returns the key object or 0 in case key was not found. If map is the owner of values, the value is deleted. ; Implements TCollection.; Definition at line 296 of file TMap.cxx. ◆ RemoveEntry(). TPair * TMap::RemoveEntry ; (; TObject * ; key). Remove (key,value) pair with key from the map. ; Returns the pair object or 0 in case the key was not found. It is caller's responsibility to delete the pair and, eventually, the key and value objects. ; Definition at line 320 of file TMap.cxx. ◆ SetOwnerKeyValue(). void TMap::SetOwnerKeyValue ; (; Bool_t ; ownkeys = kTRUE, . Bool_t ; ownvals = kTRUE . ). virtual . Set ownership for keys and values. ; Definition at line 352 of file TMap.cxx. ◆ SetOwnerValue(). void TMap::SetOwnerValue ; (; Bool_t ; enable = kTRUE). virtual . Set whether this map is the owner (enable==true) of its values. ; If it is the owner of its contents, these objects will be deleted whenever the collection itself is deleted. The objects might also be deleted or destructed when Clear is called (depending on the collection). ; Definition at line 341 of file TMap.cxx. ◆ Streamer(). void TMap::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all key/value pairs in the map to or from the I/O buffer. ; Reimplemented from TCollection.; Definition at line 361 of file TMap.cxx. ◆ StreamerNVirtual(). void TMap::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 90 of file TMap.h. ◆ Write() [1/2]. Int_t TMap::Write ; (; const char * ; name = nullptr, . Int_t ; option = 0, . Int_t ; bsize = 0 . ); const. overridevirtual . Write all objects in this map. ; By default all objects in the collection are written individually (each object gets its own key). Note, this is recursive, i.e. objects in collections in the collection are also written individually. To write all objects using a single key specify a name and set option to TObject::kSingleKey (i.e. 1). ; Reimplemented from TCollection.; Definition at line 405 of file TMa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMap.html:24737,Clear,Clear,24737,doc/master/classTMap.html,https://root.cern,https://root.cern/doc/master/classTMap.html,1,['Clear'],['Clear']
Usability," ; The intent is for this routine to be called instead of directly calling the function Hash during ""insert"" operations. See TObject::HasInconsistenTObjectHash();; (*) The setup is consistent when all classes in the class hierarchy that overload TObject::Hash do call ROOT::CallRecursiveRemoveIfNeeded in their destructor. i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation. ; Definition at line 324 of file TObject.h. ◆ Class(). static TClass * TObject::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TObject::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TObject::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 243 of file TObject.h. ◆ ClassName(). const char * TObject::ClassName ; (; ); const. virtual . Returns name of class to which the object belongs. ; Definition at line 207 of file TObject.cxx. ◆ Clear(). virtual void TObject::Clear ; (; Option_t * ; = """"). inlinevirtual . Reimplemented in TMVA::ResultsClassification, TMVA::ResultsMulticlass, TMVA::ResultsRegression, TMVA::ResultsClassification, TMVA::ResultsMulticlass, TMVA::ResultsRegression, TMrbSubevent_Caen, TNotifyLinkBase, TRefTable, ROOT::TSchemaRule, TGTextEdit, TGTextView, TGView, TGHtml, TStreamerInfo, TMatrixT< Element >, TMatrixT< AReal >, TMatrixT< Double_t >, TMatrixTSparse< Element >, TMatrixTSparse< Double_t >, TMatrixTSym< Element >, TMatrixTSym< Double_t >, TVectorT< Element >, TVectorT< Double_t >, TVirtualStreamerInfo, TMVA::MinuitWrapper, TProofProgressLog, TProofProgressMemoryPlot, RooLinkedList, TUsrHitBuffer, TFumili, TListOfEnums, TListOfEnumsWithLock, TDirectory, TFolder, TNamed, TProcessID, TTask, TBits, TBtree, TClonesArray, THashList, THashTable, TList, TMap, TObjArray, TOrdCollection, TRefArray, TDictAttributeMap, TListOfDataMembers, TListOfFunctions, TListOfFunctionTemplates, TViewPubDataMembers, TV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTObject.html:22568,Clear,Clear,22568,doc/v632/classTObject.html,https://root.cern,https://root.cern/doc/v632/classTObject.html,1,['Clear'],['Clear']
Usability," ; The intent is for this routine to be called instead of directly calling the function Hash during ""insert"" operations. See TObject::HasInconsistenTObjectHash();; (*) The setup is consistent when all classes in the class hierarchy that overload TObject::Hash do call ROOT::CallRecursiveRemoveIfNeeded in their destructor. i.e. it is safe to call the Hash virtual function during the RecursiveRemove operation. ; Definition at line 324 of file TObject.h. ◆ Class(). static TClass * TObject::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TObject::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TObject::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 243 of file TObject.h. ◆ ClassName(). const char * TObject::ClassName ; (; ); const. virtual . Returns name of class to which the object belongs. ; Definition at line 213 of file TObject.cxx. ◆ Clear(). virtual void TObject::Clear ; (; Option_t * ; = """"). inlinevirtual . Reimplemented in TMVA::ResultsClassification, TMVA::ResultsMulticlass, TMVA::ResultsRegression, TMVA::ResultsClassification, TMVA::ResultsMulticlass, TMVA::ResultsRegression, TMrbSubevent_Caen, TNotifyLinkBase, TRefTable, ROOT::TSchemaRule, TGTextEdit, TGTextView, TGView, TGHtml, TStreamerInfo, TMatrixT< Element >, TMatrixT< AReal >, TMatrixT< Double_t >, TMatrixTSparse< Element >, TMatrixTSparse< Double_t >, TMatrixTSym< Element >, TMatrixTSym< Double_t >, TVectorT< Element >, TVectorT< Double_t >, TVirtualStreamerInfo, TMVA::MinuitWrapper, TProofProgressLog, TProofProgressMemoryPlot, RooLinkedList, TUsrHitBuffer, TFumili, TListOfEnums, TListOfEnumsWithLock, TDirectory, TFolder, TNamed, TProcessID, TTask, TBits, TBtree, TClonesArray, THashList, THashTable, TList, TMap, TObjArray, TOrdCollection, TRefArray, TDictAttributeMap, TListOfDataMembers, TListOfFunctions, TListOfFunctionTemplates, TViewPubDataMembers, TV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObject.html:22569,Clear,Clear,22569,doc/master/classTObject.html,https://root.cern,https://root.cern/doc/master/classTObject.html,1,['Clear'],['Clear']
Usability," ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses Introductory Tutorials. Overview; The goal of this tutorial session is to learn how to read a tree from a ROOT file, extract some data from it, display a histogram and then fit it.;  ; Information about the ROOT classes can be found on the ROOT reference guide, and there is also a web based documentation and the Root primer and other manuals available to download.; . Meet a TTree ›. Navigate through this book; Meet a TTree; Accessing a TTree With a TBrowser; Using TTree::Draw() to access a TTree; TTree and Its Data; Using a Macro to Read a TTree; Histogramming; Fit Panel; Compiling Your Code (also known as ACLiC); Accessing a TTree With a TSelector; Histogramming in a Selector; Using a TSelector with PROOF; The End. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/introductory-tutorials-1.html:2138,guid,guide,2138,d/introductory-tutorials-1.html,https://root.cern,https://root.cern/d/introductory-tutorials-1.html,2,['guid'],['guide']
Usability," ; branch1_1 = branch1.Filter(""Branch_1_def < 2"", ""Filter_1"") \; .Define(""Branch_1_1_def"", ""1"") \; .Filter(""1 == Branch_1_1_def % 2"", ""Filter_1_1"") \; .Mean(""Branch_1_1_def"");; ; branch1_2 = branch1.Define(""Branch_1_2_def"", ""1"") \; .Filter(""Branch_1_2_def < 2"", ""Filter_1_2"") \; .Count(); ; branch2_1 = branch2.Filter(""Branch_2_def < 2"", ""Filter_2"") \; .Define(""Branch_2_1_def"", ""1"") \; .Define(""Branch_2_2_def"", ""1"") \; .Filter(""1 == Branch_2_1_def % 2"", ""Filter_2_1"") \; .Max(""Branch_2_1_def""); ; branch2_2 = branch2.Count(); ; print(ROOT.RDF.SaveGraph(branch1_1)); ROOT.RDF.SaveGraph(rd1, ""exampleGraph.dot""); ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; ROOT::RDF::SaveGraphstd::string SaveGraph(NodeType node)Create a graphviz representation of the dataframe computation graph, return it as a string.Definition RDFHelpers.hxx:120; digraph {; 8 [label=""Mean"", style=""filled"", fillcolor=""#e47c7e"", shape=""box""];; 6 [label=""Filter_1_1"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];; 7 [label=""Define\nBranch_1_1_def"", style=""filled"", fillcolor=""#4285f4"", shape=""ellipse""];; 3 [label=""Filter_1"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];; 4 [label=""Define\nBranch_1_def"", style=""filled"", fillcolor=""#4285f4"", shape=""ellipse""];; 5 [label=""Define\nRoot_def2"", style=""filled"", fillcolor=""#4285f4"", shape=""ellipse""];; 1 [label=""Main_Filter"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];; 2 [label=""Define\nRoot_def1"", style=""filled"", fillcolor=""#4285f4"", shape=""ellipse""];; 0 [label=""Empty source\nEntries: 2"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];; 6 -> 8;; 7 -> 6;; 3 -> 7;; 4 -> 3;; 5 -> 4;; 1 -> 5;; 2 -> 1;; 0 -> 2;; }; DateJanuary 2022 ; AuthorIvan Kabadzhov (CERN) ; Definition in file df034_SaveGraph.py. tutorialsdataframedf034_SaveGraph.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df034__SaveGraph_8py.html:3077,Guid,Guide,3077,doc/master/df034__SaveGraph_8py.html,https://root.cern,https://root.cern/doc/master/df034__SaveGraph_8py.html,1,['Guid'],['Guide']
Usability," ; return of()->asCATLV(of()->_args[idx].c_str()) ; }. RooAbsCategory& as_CATFUNC(UInt_t idx); { checkIndex(idx) ; return of()->asCATFUNC(of()->_args[idx].c_str()) ; }. RooArgSet as_SET(UInt_t idx); { checkIndex(idx) ; return of()->asSET(of()->_args[idx].c_str()) ; }. RooArgList as_LIST(UInt_t idx); { checkIndex(idx) ; return of()->asLIST(of()->_args[idx].c_str()) ; }. RooAbsData& as_DATA(UInt_t idx); { checkIndex(idx) ; return of()->asDATA(of()->_args[idx].c_str()) ; }. RooDataHist& as_DHIST(UInt_t idx); { checkIndex(idx) ; return of()->asDHIST(of()->_args[idx].c_str()) ; }. RooDataSet& as_DSET(UInt_t idx); { checkIndex(idx) ; return of()->asDSET(of()->_args[idx].c_str()) ; }. TObject& as_OBJ(UInt_t idx); { checkIndex(idx) ; return of()->asOBJ(of()->_args[idx].c_str()) ; }. const char* as_STRING(UInt_t idx); { checkIndex(idx) ; return of()->asSTRING(of()->_args[idx].c_str()) ; }. Int_t as_INT(UInt_t idx); { checkIndex(idx) ; return of()->asINT(of()->_args[idx].c_str()) ; }. Double_t as_DOUBLE(UInt_t idx); { checkIndex(idx) ; return of()->asDOUBLE(of()->_args[idx].c_str()) ; }. Int_t as_INT(UInt_t idx, Int_t defVal); { checkIndex(idx) ; if (idx>of()->_args.size()-1) return defVal ; return of()->asINT(of()->_args[idx].c_str()) ; }. Double_t as_DOUBLE(UInt_t idx, Double_t defVal); { checkIndex(idx) ; if (idx>of()->_args.size()-1) return defVal ; return of()->asDOUBLE(of()->_args[idx].c_str()) ; }. void logError(); { _errorCount++ ; }. const char* autoClassNamePostFix() const; { return _autoClassPostFix.c_str() ; }. void setAutoClassNamePostFix(const char* pfix); { _autoClassPostFix = pfix ; }. std::map<std::string,IFace*>& hooks(); Hooks for other tools. void clearError(); { _errorCount = 0 ; }. Int_t errorCount(); { return _errorCount ; }. » Last changed: Mon Jul 4 15:22:49 2011 » Last generated: 2011-07-04 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooFactoryWSTool.html:24991,clear,clearError,24991,root/html530/RooFactoryWSTool.html,https://root.cern,https://root.cern/root/html530/RooFactoryWSTool.html,1,['clear'],['clearError']
Usability," ; return of()->asCATLV(of()->_args[idx].c_str()) ; }. RooAbsCategory& as_CATFUNC(UInt_t idx); { checkIndex(idx) ; return of()->asCATFUNC(of()->_args[idx].c_str()) ; }. RooArgSet as_SET(UInt_t idx); { checkIndex(idx) ; return of()->asSET(of()->_args[idx].c_str()) ; }. RooArgList as_LIST(UInt_t idx); { checkIndex(idx) ; return of()->asLIST(of()->_args[idx].c_str()) ; }. RooAbsData& as_DATA(UInt_t idx); { checkIndex(idx) ; return of()->asDATA(of()->_args[idx].c_str()) ; }. RooDataHist& as_DHIST(UInt_t idx); { checkIndex(idx) ; return of()->asDHIST(of()->_args[idx].c_str()) ; }. RooDataSet& as_DSET(UInt_t idx); { checkIndex(idx) ; return of()->asDSET(of()->_args[idx].c_str()) ; }. TObject& as_OBJ(UInt_t idx); { checkIndex(idx) ; return of()->asOBJ(of()->_args[idx].c_str()) ; }. const char* as_STRING(UInt_t idx); { checkIndex(idx) ; return of()->asSTRING(of()->_args[idx].c_str()) ; }. Int_t as_INT(UInt_t idx); { checkIndex(idx) ; return of()->asINT(of()->_args[idx].c_str()) ; }. Double_t as_DOUBLE(UInt_t idx); { checkIndex(idx) ; return of()->asDOUBLE(of()->_args[idx].c_str()) ; }. Int_t as_INT(UInt_t idx, Int_t defVal); { checkIndex(idx) ; if (idx>of()->_args.size()-1) return defVal ; return of()->asINT(of()->_args[idx].c_str()) ; }. Double_t as_DOUBLE(UInt_t idx, Double_t defVal); { checkIndex(idx) ; if (idx>of()->_args.size()-1) return defVal ; return of()->asDOUBLE(of()->_args[idx].c_str()) ; }. void logError(); { _errorCount++ ; }. const char* autoClassNamePostFix() const; { return _autoClassPostFix.c_str() ; }. void setAutoClassNamePostFix(const char* pfix); { _autoClassPostFix = pfix ; }. std::map<std::string,IFace*>& hooks(); Hooks for other tools. void clearError(); { _errorCount = 0 ; }. Int_t errorCount(); { return _errorCount ; }. » Last changed: Thu Nov 3 20:08:07 2011 » Last generated: 2011-11-03 20:08; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooFactoryWSTool.html:24991,clear,clearError,24991,root/html532/RooFactoryWSTool.html,https://root.cern,https://root.cern/root/html532/RooFactoryWSTool.html,1,['clear'],['clearError']
Usability," ; return of()->asCATLV(of()->_args[idx].c_str()) ; }. RooAbsCategory& as_CATFUNC(UInt_t idx); { checkIndex(idx) ; return of()->asCATFUNC(of()->_args[idx].c_str()) ; }. RooArgSet as_SET(UInt_t idx); { checkIndex(idx) ; return of()->asSET(of()->_args[idx].c_str()) ; }. RooArgList as_LIST(UInt_t idx); { checkIndex(idx) ; return of()->asLIST(of()->_args[idx].c_str()) ; }. RooAbsData& as_DATA(UInt_t idx); { checkIndex(idx) ; return of()->asDATA(of()->_args[idx].c_str()) ; }. RooDataHist& as_DHIST(UInt_t idx); { checkIndex(idx) ; return of()->asDHIST(of()->_args[idx].c_str()) ; }. RooDataSet& as_DSET(UInt_t idx); { checkIndex(idx) ; return of()->asDSET(of()->_args[idx].c_str()) ; }. TObject& as_OBJ(UInt_t idx); { checkIndex(idx) ; return of()->asOBJ(of()->_args[idx].c_str()) ; }. const char* as_STRING(UInt_t idx); { checkIndex(idx) ; return of()->asSTRING(of()->_args[idx].c_str()) ; }. Int_t as_INT(UInt_t idx); { checkIndex(idx) ; return of()->asINT(of()->_args[idx].c_str()) ; }. Double_t as_DOUBLE(UInt_t idx); { checkIndex(idx) ; return of()->asDOUBLE(of()->_args[idx].c_str()) ; }. Int_t as_INT(UInt_t idx, Int_t defVal); { checkIndex(idx) ; if (idx>of()->_args.size()-1) return defVal ; return of()->asINT(of()->_args[idx].c_str()) ; }. Double_t as_DOUBLE(UInt_t idx, Double_t defVal); { checkIndex(idx) ; if (idx>of()->_args.size()-1) return defVal ; return of()->asDOUBLE(of()->_args[idx].c_str()) ; }. void logError(); { _errorCount++ ; }. const char* autoClassNamePostFix() const; { return _autoClassPostFix.c_str() ; }. void setAutoClassNamePostFix(const char* pfix); { _autoClassPostFix = pfix ; }. std::map<std::string,IFace*>& hooks(); Hooks for other tools. void clearError(); { _errorCount = 0 ; }. Int_t errorCount(); { return _errorCount ; }. » Last changed: Tue Jun 2 15:30:48 2015 » Last generated: 2015-06-02 15:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooFactoryWSTool.html:25972,clear,clearError,25972,root/html604/RooFactoryWSTool.html,https://root.cern,https://root.cern/root/html604/RooFactoryWSTool.html,1,['clear'],['clearError']
Usability," ; virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); Bool_tTGWidget::WantFocus() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; Int_tTGWidget::WidgetId() const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. static Int_tTQObject::CheckConnectArgs(TQObject* sender, TClass* sender_class, const char* signal, TClass* receiver_class, const char* slot); Int_tTGWidget::ClearFlags(Int_t flags); static TStringTQObject::CompressName(const char* method_name); static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidTGFrame::DoRedraw(); virtual voidTGFrame::Draw3dRectangle(UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h); virtual voidEmitSignals(Bool_t wasUp); static Time_tTGFrame::GetLastClick(); TStringTGFrame::GetOptionString() const; const TGResourcePool*TGFrame::GetResourcePool() const; virtual void*TGFrame::GetSender(); virtual const char*TQObject::GetSenderClassName() const; voidTObject::MakeZombie(); Int_tTGWidget::SetFlags(Int_t flags); virtual voidSetToggleButton(Bool_t); virtual voidTGFrame::StartGuiBuilding(Bool_t on = kTRUE). private:. TGButton&operator=(const TGButton&); TGButton(const TGButton&). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TGWindow::EEditModeTGWindow::kEditDisable; static TGWindow::EEditModeTGWindow::kEditDisableBtnEnable; static TGWindow::EEditModeTGWindow::kEditDisableEvents; static TGW",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGButton.html:17354,Clear,ClearFlags,17354,root/html602/TGButton.html,https://root.cern,https://root.cern/root/html602/TGButton.html,2,['Clear'],['ClearFlags']
Usability," ;  ; Int_t RemoveIncludePath (const char *incpath, Bool_t onClient=kFALSE);  Remove 'incpath' from the inc path search. ;  ; void ResetProgressDialog (const char *sel, Int_t sz, Long64_t fst, Long64_t ent);  Reset progress dialog. ;  ; void ResetProgressDialogStatus ();  ; Int_t Retrieve (const char *queryref, const char *path=0);  Send retrieve request for the query specified by ref. ;  ; Int_t Retrieve (Int_t query, const char *path=0);  Send retrieve request for the qry-th query in fQueries. ;  ; Int_t SavePerfTree (const char *pf=0, const char *qref=0);  Save performance information from TPerfStats to file 'pf'. ;  ; void SendDataSetStatus (const char *msg, UInt_t n, UInt_t tot, Bool_t st);  Send or notify data set status. ;  ; Bool_t SendingLogToWindow () const;  ; void SendLogToWindow (Bool_t mode);  ; void SetActive (Bool_t=kTRUE);  ; virtual void SetAlias (const char *alias="""");  Set an alias for this session. ;  ; void SetDataPoolUrl (const char *url);  ; void SetDrawFeedbackOption (TDrawFeedback *f, Option_t *opt);  Set draw feedback option. ;  ; void SetInputDataFile (const char *datafile);  Set the file to be used to optimally distribute the input data objects. ;  ; void SetLogLevel (Int_t level, UInt_t mask=TProofDebug::kAll);  Set server logging level. ;  ; void SetManager (TProofMgr *mgr);  Set manager and schedule its destruction after this for clean operations. ;  ; void SetMaxDrawQueries (Int_t max);  Set max number of draw queries whose results are saved. ;  ; Int_t SetParallel (Int_t nodes=-1, Bool_t random=kFALSE);  Tell PROOF how many slaves to use in parallel. ;  ; void SetParameter (const char *par, const char *value);  Set input list parameter. ;  ; void SetParameter (const char *par, Double_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Int_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par, Long64_t value);  Set an input list parameter. ;  ; void SetParameter (const char *par,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLite.html:16790,feedback,feedback,16790,doc/master/classTProofLite.html,https://root.cern,https://root.cern/doc/master/classTProofLite.html,1,['feedback'],['feedback']
Usability," ;  ; MsgLogger * fLogger;  ! message logger ;  ; Double_t fNorm;  normalization - usually 1.0/t(k) ;  ; const RuleEnsemble * fRuleEnsemble;  pointer to parent RuleEnsemble ;  ; Double_t fSigma;  t(k) = sqrt(s*(1-s)) ;  ; Double_t fSSB;  S/(S+B) for rule. ;  ; Double_t fSSBNeve;  N(events) reaching the last node in reevaluation. ;  ; Double_t fSupport;  s(k) ;  . Friends; std::ostream & operator<< (std::ostream &os, const Rule &rule);  . #include <TMVA/Rule.h>; Constructor & Destructor Documentation. ◆ Rule() [1/4]. TMVA::Rule::Rule ; (; RuleEnsemble * ; re, . const std::vector< const TMVA::Node * > & ; nodes . ). the main constructor for a Rule ; Definition at line 66 of file Rule.cxx. ◆ Rule() [2/4]. TMVA::Rule::Rule ; (; RuleEnsemble * ; re). the simple constructor ; Definition at line 94 of file Rule.cxx. ◆ Rule() [3/4]. TMVA::Rule::Rule ; (; const Rule & ; other). inline . Definition at line 64 of file Rule.h. ◆ Rule() [4/4]. TMVA::Rule::Rule ; (; ). the simple constructor ; Definition at line 112 of file Rule.cxx. ◆ ~Rule(). TMVA::Rule::~Rule ; (; ). virtual . destructor ; Definition at line 130 of file Rule.cxx. Member Function Documentation. ◆ AddXMLTo(). void * TMVA::Rule::AddXMLTo ; (; void * ; parent); const. Definition at line 398 of file Rule.cxx. ◆ CalcImportance(). void TMVA::Rule::CalcImportance ; (; ). inline . Definition at line 99 of file Rule.h. ◆ ContainsVariable(). Bool_t TMVA::Rule::ContainsVariable ; (; UInt_t ; iv); const. check if variable in node ; Definition at line 139 of file Rule.cxx. ◆ Copy(). void TMVA::Rule::Copy ; (; const Rule & ; other). private . copy function ; Definition at line 284 of file Rule.cxx. ◆ Equal(). Bool_t TMVA::Rule::Equal ; (; const Rule & ; other, . Bool_t ; useCutValue, . Double_t ; mindist . ); const. Compare two rules. . useCutValue:; true -> calculate a distance between the two rules based on the cut values if the rule cuts are not equal, the distance is < 0 (-1.0) return true if d<mindist; false-> ignore mi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Rule.html:4263,simpl,simple,4263,doc/master/classTMVA_1_1Rule.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Rule.html,1,['simpl'],['simple']
Usability," ;  ; double LowerLimit (RooRealVar &param);  return lower limit on a given parameter ;  ; void SetConfidenceLevel (double cl) override;  set the confidence level for the interval ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; double UpperLimit (RooRealVar &param);  return upper limit on a given parameter ;  ;  Public Member Functions inherited from RooStats::ConfInterval;  ConfInterval (const char *name=nullptr);  constructor given name and title ;  ; ConfInterval & operator= (const ConfInterval &other);  operator= ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1PointSetInterval.html:2506,Clear,Clear,2506,doc/master/classRooStats_1_1PointSetInterval.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1PointSetInterval.html,1,['Clear'],['Clear']
Usability," ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TFileHandler; int fFileNum;  ; int fMask;  ; int fReadyMask;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . Inheritance diagram for TTermInputHandler:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TTermInputHandler(). TTermInputHandler::TTermInputHandler ; (; Int_t ; fd). inline . Definition at line 123 of file TRint.cxx. Member Function Documentation. ◆ Notify(). Bool_t TTermInputHandler::Notify ; (; ). overridevirtual . Notify implementation. Call the application interupt handler. ; Reimplemented from TFileHandler.; Definition at line 131 of file TRint.cxx. ◆ ReadNotify(). Bool_t TTermInputHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the descriptor associated with this handler. ; Reimplemented from TFileHandler.; Definition at line 125 of file TRint.cxx. core/rint/src/TRint.cxx. TTermInputHandler. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:37 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTermInputHandler.html:17167,Guid,Guide,17167,doc/master/classTTermInputHandler.html,https://root.cern,https://root.cern/doc/master/classTTermInputHandler.html,1,['Guid'],['Guide']
Usability," ;  ; std::uint32_t fOnDiskTypeVersion = kInvalidTypeVersion;  C++ type version cached from the descriptor after a call to ConnectPageSource() ;  ; RFieldBase * fParent;  Sub fields point to their mother field. ;  ; Internal::RColumn * fPrincipalColumn = nullptr;  All fields that have columns have a distinct main column. ;  ; std::vector< ReadCallback_t > fReadCallbacks;  List of functions to be called after reading a value. ;  ; std::vector< std::unique_ptr< RFieldBase > > fSubFields;  Collections and classes own sub fields. ;  ; int fTraits = 0;  Properties of the type that allow for optimizations of collections of that type. ;  ; std::string fTypeAlias;  A typedef or using name that was used when creating the field. ;  . #include <ROOT/RField.hxx>. Inheritance diagram for ROOT::Experimental::RField< T, typename >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RField() [1/2]. template<typename T , typename = void> . ROOT::Experimental::RField< T, typename >::RField ; (; std::string_view ; name). inline . Definition at line 244 of file RField.hxx. ◆ RField() [2/2]. template<typename T , typename = void> . ROOT::Experimental::RField< T, typename >::RField ; (; RField< T, typename > && ; other). default . ◆ ~RField(). template<typename T , typename = void> . ROOT::Experimental::RField< T, typename >::~RField ; (; ). finaldefault . Member Function Documentation. ◆ operator=(). template<typename T , typename = void> . RField & ROOT::Experimental::RField< T, typename >::operator= ; (; RField< T, typename > && ; other). default . ◆ TypeName(). template<typename T , typename = void> . static std::string ROOT::Experimental::RField< T, typename >::TypeName ; (; ). inlinestatic . Definition at line 243 of file RField.hxx. tree/ntuple/v7/inc/ROOT/RField.hxx. ROOTExperimentalRField. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:09 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RField.html:14409,Guid,Guide,14409,doc/master/classROOT_1_1Experimental_1_1RField.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RField.html,1,['Guid'],['Guide']
Usability," ;  ; virtual TClass * IsA () const;  ; void MakeClass (const TString &classFileName=TString("""")) const;  create reader class for classifier -> overwrites base class function create specific class for TMultiLayerPerceptron ;  ; virtual void ReadWeightsFromStream (std::istream &)=0;  ; void ReadWeightsFromStream (std::istream &istr);  read weights from stream since the MLP can not read from the stream, we 1st: write the weights to temporary file ;  ; virtual void ReadWeightsFromStream (TFile &);  ; void ReadWeightsFromXML (void *wghtnode);  rebuild temporary textfile from xml weightfile and load this file into MLP ;  ; void SetHiddenLayer (TString hiddenlayer="""");  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Train (void);  performs TMlpANN training available learning methods: ;  ;  Public Member Functions inherited from TMVA::MethodBase;  MethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  standard constructor ;  ;  MethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  constructor used for Testing + Application of the MVA, only (no training), using given WeightFiles ;  ; virtual ~MethodBase ();  destructor ;  ; void AddOutput (Types::ETreeType type, Types::EAnalysisType analysisType);  ; TDirectory * BaseDir () const;  returns the ROOT directory where info/histograms etc of the corresponding MVA method instance are stored ;  ; virtual void CheckSetup ();  check may be overridden by derived class (sometimes, eg, fitters are used which can only be implemented during training phase) ;  ; DataSet * Data () const;  ; DataSetInfo & DataInfo () const;  ; virtual void DeclareCompatibilityOptions ();  options that are used ONLY for the READER to ensure backward compatibility they are hence without any effect (the reader is only reading the training options that HAD been used at the training of the .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodTMlpANN.html:2301,learn,learning,2301,doc/master/classTMVA_1_1MethodTMlpANN.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodTMlpANN.html,1,['learn'],['learning']
Usability," ;  ; virtual void ClearDrawable ()=0;  ; virtual void CopyDrawable (Int_t device, Int_t px, Int_t py)=0;  ; virtual Int_t CreateDrawable (UInt_t w, UInt_t h)=0;  ; virtual void DestroyDrawable (Int_t device)=0;  ; virtual void DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2, EBoxMode mode)=0;  ; virtual void DrawFillArea (Int_t n, const Double_t *x, const Double_t *y)=0;  ; virtual void DrawFillArea (Int_t n, const Float_t *x, const Float_t *y)=0;  ; virtual void DrawLine (Double_t x1, Double_t y1, Double_t x2, Double_t y2)=0;  ; virtual void DrawLineNDC (Double_t u1, Double_t v1, Double_t u2, Double_t v2)=0;  ; virtual void DrawPixels (const unsigned char *pixelData, UInt_t width, UInt_t height, Int_t dstX, Int_t dstY, Bool_t enableAlphaBlending)=0;  ; virtual void DrawPolyLine (Int_t n, const Double_t *x, const Double_t *y)=0;  ; virtual void DrawPolyLine (Int_t n, const Float_t *x, const Float_t *y)=0;  ; virtual void DrawPolyLineNDC (Int_t n, const Double_t *u, const Double_t *v)=0;  ; virtual void DrawPolyMarker (Int_t n, const Double_t *x, const Double_t *y)=0;  ; virtual void DrawPolyMark",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualPadPainter.html:895,Clear,ClearDrawable,895,doc/master/classTVirtualPadPainter.html,https://root.cern,https://root.cern/doc/master/classTVirtualPadPainter.html,1,['Clear'],['ClearDrawable']
Usability," ;  ; virtual void PrintCollectionHeader (Option_t *option) const;  Print the collection header. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TCollection; TString fName;  ; Int_t fSize;  . #include </home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master/core/base/src/TListOfTypes.h>. Inheritance diagram for TListOfTypes:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TListOfTypes(). TListOfTypes::TListOfTypes ; (; ). Definition at line 36 of file TListOfTypes.cxx. Member Function Documentation. ◆ FindObject() [1/3]. TObject * THashTable::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from THashTable.; Definition at line 67 of file THashTable.cxx. ◆ FindObject() [2/3]. TObject * TListOfTypes::FindObject ; (; const char * ; name); const. overridevirtual . Find object using its name. ; Uses the hash value returned by the TString::Hash() after converting name to a TString. ; Reimplemented from THashTable.; Definition at line 42 of file TListOfTypes.cxx. ◆ FindObject() [3/3]. TObject * THashTable::FindObject ; (; const TObject * ; obj); const. overridevirtual . Find object using its hash value (returned by its Hash() member). ; Reimplemented from THashTable.; Definition at line 68 of file THashTable.cxx. ◆ FindType(). TDataType * TListOfTypes::FindType ; (; const char * ; name); const. Definition at line 87 of file TListOfTypes.cxx. core/base/src/TListOfTypes.h; core/base/src/TListOfTypes.cxx. TListOfTypes. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:56 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTListOfTypes.html:16988,Guid,Guide,16988,doc/master/classTListOfTypes.html,https://root.cern,https://root.cern/doc/master/classTListOfTypes.html,1,['Guid'],['Guide']
Usability," ;  ; virtual void RemoveAfter (TObject *after);  ; virtual TObject * RemoveAt (Int_t idx);  ; virtual void RemoveBefore (TObject *before);  ; virtual void RemoveFirst ();  ; virtual void RemoveLast ();  ; void Streamer (TBuffer &) override;  Stream all objects in the collection to or from the I/O buffer. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void UnSort ();  ;  Public Member Functions inherited from TCollection; virtual ~TCollection ();  TNamed destructor. ;  ; virtual void AddAll (const TCollection *col);  Add all objects from collection col to this collection. ;  ; void AddVector (TObject *obj1,...);  Add all arguments to the collection. ;  ; Bool_t AssertClass (TClass *cl) const;  Make sure all objects in this collection inherit from class cl. ;  ; TIter begin () const;  ; void Browse (TBrowser *b) override;  Browse this collection (called by TBrowser). ;  ; Int_t Capacity () const;  ; void Clear (Option_t *option="""") override=0;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an collection using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TCollection objects. ;  ; Bool_t Contains (const char *name) const;  ; Bool_t Contains (const TObject *obj) const;  ; void Delete (Option_t *option="""") override=0;  Delete this object. ;  ; void Draw (Option_t *option="""") override;  Draw all objects in this collection. ;  ; void Dump () const override;  Dump all objects in this collection. ;  ; TIter end () const;  ; TObject * FindObject (const char *name) const override;  Find an object in this collection using its name. ;  ; TObject * FindObject (const TObject *obj) const override;  Find an object in this collection using the object's IsEqual() member function. ;  ; virtual Int_t GetEntries () const;  ; const char * GetName () const override;  Return name of this collection. ;  ; virtual TObject ** GetObjectRef (const TObject *obj) const =0;  ; virtual Int_t GetSize (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSeqCollection.html:2459,Clear,Clear,2459,doc/master/classTSeqCollection.html,https://root.cern,https://root.cern/doc/master/classTSeqCollection.html,1,['Clear'],['Clear']
Usability," ;  ; void Prediction (Matrix_t &predictions, EOutputFunction f) const;  Prediction based on activations stored in the last layer. ;  ; void Prediction (Matrix_t &predictions, Tensor_t &input, EOutputFunction f);  Prediction for the given inputs, based on what network learned. ;  ; void Print () const;  Print the Deep Net Info. ;  ; Scalar_t RegularizationTerm () const;  Function for computing the regularizaton term to be added to the loss function .  ; void ResetTraining ();  Function that reset some training flags after looping all the events but not the weights. ;  ; void SetBatchDepth (size_t batchDepth);  ; void SetBatchHeight (size_t batchHeight);  ; void SetBatchSize (size_t batchSize);  Setters. ;  ; void SetBatchWidth (size_t batchWidth);  ; void SetDropoutProbabilities (const std::vector< Double_t > &probabilities);  ; void SetInitialization (EInitialization I);  ; void SetInputDepth (size_t inputDepth);  ; void SetInputHeight (size_t inputHeight);  ; void SetInputWidth (size_t inputWidth);  ; void SetLossFunction (ELossFunction J);  ; void SetRegularization (ERegularization R);  ; void SetWeightDecay (Scalar_t weightDecay);  ; void Update (Scalar_t learningRate);  Function that will update the weights and biases in the layers that contain weights and biases. ;  . Private Member Functions; size_t calculateDimension (int imgDim, int fltDim, int padding, int stride);  ; bool isInteger (Scalar_t x) const;  . Private Attributes; size_t fBatchDepth;  The depth of the batch used for training/testing. ;  ; size_t fBatchHeight;  The height of the batch used for training/testing. ;  ; size_t fBatchSize;  Batch size used for training and evaluation. ;  ; size_t fBatchWidth;  The width of the batch used for training/testing. ;  ; EInitialization fI;  The initialization method of the network. ;  ; size_t fInputDepth;  The depth of the input. ;  ; size_t fInputHeight;  The height of the input. ;  ; size_t fInputWidth;  The width of the input. ;  ; bool fIsTraining;  Is ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TDeepNet.html:7634,learn,learningRate,7634,doc/master/classTMVA_1_1DNN_1_1TDeepNet.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TDeepNet.html,1,['learn'],['learningRate']
Usability," ;  ; void SetTitle (const char *title="""") override;  Set function title if title has the form ""fffffff;xxxx;yyyy"", it is assumed that the function title is ""fffffff"" and ""xxxx"" and ""yyyy"" are the titles for the X and Y axis respectively. ;  ; virtual void SetVectorized (Bool_t vectorized);  ; void Streamer (TBuffer &) override;  Stream a class object. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void Update ();  Called by functions such as SetRange, SetNpx, SetParameters to force the deletion of the associated histogram or Integral. ;  ; virtual Double_t Variance (Double_t a, Double_t b, const Double_t *params=nullptr, Double_t epsilon=0.000001);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1.html:29465,Clear,Clear,29465,doc/master/classTF1.html,https://root.cern,https://root.cern/doc/master/classTF1.html,1,['Clear'],['Clear']
Usability," ;  ; void printClassName (std::ostream &os) const override;  Print binning class name. ;  ; void printName (std::ostream &os) const override;  Print binning name. ;  ; void printTitle (std::ostream &os) const override;  Print binning title. ;  ; void printValue (std::ostream &os) const override;  Print binning value, i.e the bin boundary positions. ;  ; virtual void removeHook (RooAbsRealLValue &) const;  Hook interface function to execute code upon removal from a RooAbsRealLValue. ;  ; virtual void setMax (double xhi);  Change upper bound to xhi. ;  ; virtual void setMin (double xlo);  Change lower bound to xlo. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinning.html:5532,Clear,Clear,5532,doc/master/classRooBinning.html,https://root.cern,https://root.cern/doc/master/classRooBinning.html,2,['Clear'],['Clear']
Usability," ;  ;  ~RooFFTConvPdf () override;  Destructor. ;  ; double bufferFraction () const;  Return value of buffer fraction applied in FFT calculation array beyond either end of the observable domain to reduce cyclical effects. ;  ; BufStrat bufferStrategy () const;  Return the strategy currently used to fill the buffer: 'Extend' means is that the input p.d.f convolution observable range is widened to include the buffer range 'Flat' means that the buffer is filled with the p.d.f. ;  ; const RooArgSet & cacheObservables () const;  ; TObject * clone (const char *newname) const override;  ; Int_t getMaxVal (const RooArgSet &vars) const override;  Advertise capability to determine maximum value of function for given set of observables. ;  ; TClass * IsA () const override;  ; double maxVal (Int_t code) const override;  Return maximum value for set of observables identified by code assigned in getMaxVal. ;  ; void printMetaArgs (std::ostream &os) const override;  Customized printing of arguments of a RooNumConvPdf to more intuitively reflect the contents of the product operator construction. ;  ; void setBufferFraction (double frac);  Change the size of the buffer on either side of the observable range to frac times the size of the range of the convolution observable. ;  ; void setBufferStrategy (BufStrat bs);  Change strategy to fill the overflow buffer on either side of the convolution observable range. ;  ; void setCacheObservables (const RooArgSet &obs);  ; void setShift (double val1, double val2);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsCachedPdf;  RooAbsCachedPdf ();  ;  RooAbsCachedPdf (const char *name, const char *title, int ipOrder=0);  Constructor. ;  ;  RooAbsCachedPdf (const RooAbsCachedPdf &other, const char *name=nullptr);  Copy constructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFFTConvPdf.html:8566,intuit,intuitively,8566,doc/master/classRooFFTConvPdf.html,https://root.cern,https://root.cern/doc/master/classRooFFTConvPdf.html,1,['intuit'],['intuitively']
Usability," ;  multigraph.C Create and Draw a TMultiGraph ;  multipalette.C Draw color plots using different color palettes ;  seism.C Strip chart example ;  splines_test.C Examples of use of the spline classes ;  surfaces.C Draw 2-Dim functions ;  timeonaxis.C This macro illustrates the use of the time mode on the axis with different time intervals and time formats ;  timeonaxis2.C Define the time offset as 2003, January 1st ;  timeonaxis3.C This example compares what the system time function gmtime and localtime give with what gives TGaxis ;  waves.C Hint: Spherical waves ;  zdemo.C This macro is an example of graphs in log scales with annotations ;  zones.C Example of script showing how to divide a canvas into adjacent subpads + axis labels on the top and right side of the pads ;  ► gui;  buttonChangelabel.CThis macro gives an example for changing text button labels anytime the Start or Pause buttons are clicked ;  buttongroupState.CA simple example that shows the enabled and disabled state of a button group with radio and check buttons ;  buttonsLayout.CThis macro gives an example of different buttons' layout ;  buttonTest.CThis macro gives an example of how to set/change text button attributes ;  calendar.CThis macro gives an example of how to use html widget to display tabular data ;  CPUMeter.CSimple macro showing capabilities of the TGSpeedo widget ;  customContextMenu.CExample showing how to add a function to the class context menu ;  customTH1Fmenu.CExample showing how to customize a context menu for a class ;  drag_and_drop.CThis tutorial illustrates how to use drag and drop within ROOT ;  exec3.CExample of using signal/slot in TCanvas/TPad to get feedback about processed events ;  exec_macro.CThis utility macro executes the macro ""macro"" given as first argument and save a capture in a png file ;  games.CThis macro runs three ""games"" that each nicely illustrate the graphics capabilities of ROOT ;  gtreeTableTest.CThis TableTest class is a simple example of how to us",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:117683,simpl,simple,117683,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,1,['simpl'],['simple']
Usability," ;  vo005_Combinations.py In this tutorial we learn how combinations of RVecs can be build ;  vo006_IndexManipulation.C In this tutorial we demonstrate RVec helpers for index manipulation ;  ► xml;  DOMParsePerson.C ROOT implementation of a XML DOM Parser ;  DOMRecursive.C ROOT implementation of a XML DOM Parser ;  SAXHandler.C ROOT implementation of a simple SAX Handler ;  xmlmodifyfile.C Example to read, modify and store xml file, using TXMLEngine class The input file, produced by xmlnewfile.C macro is used If you need full xml syntax support, use TXMLParser instead ;  xmlnewfile.C Example to create a new xml file with the TXMLEngine class ;  xmlreadfile.C Example to read and parse any xml file, supported by TXMLEngine class The input file, produced by xmlnewfile.C macro is used If you need full xml syntax support, use TXMLParser instead ;  benchmarks.CThis macro run several tests and produces an benchmark report ;  demos.CThis macro shows a control bar to run some of the ROOT tutorials ;  demoshelp.CThis macro shows help on running the Demos ;  geant3tasks.CThis script is a representation using TTasks of the Geant3 simulation program This example uses directly TTask objects ;  hsimple.C This program creates : ;  htmlex.CThis file demonstrates how THtml can document sources ;  MyTasks.cxxA set of classes deriving from TTask ;  regexp.CA regular expression, often called a pattern, is an expression that describes a set of strings ;  regexp_pme.CClass TPMERegexp - API similar to PME - PCRE Made Easy Tries to be as close as possible to PERL syntax and functionality ;  rootalias.CDefines aliases: ;  rootenv.CProduce a picture of the ROOT environment ;  rootlogoff.CExample of rootlogoff.C ;  rootlogon.CExample of rootlogon.C ;  rootmarks.CPrints a summary of all ROOT benchmarks (must be run before) ;  tasks.CExample of TTasks . ROOT 6.16/01 - Reference Guide Generated on Sun Dec 19 2021 22:33:59 (GVA Time) using Doxygen 1.9.3 (234637167bd5d39d32bf51f755d58253441f123a). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v616/files.html:174754,Guid,Guide,174754,doc/v616/files.html,https://root.cern,https://root.cern/doc/v616/files.html,1,['Guid'],['Guide']
Usability," <, >, ==, !=, <=, >=, &&, ||; 1410 - ~, !; 1411 - &, |, ^; 1412 - &=, |=, ^=; 1413 - <<=, >>=; 1414 ; 1415The most common mathematical functions are supported. It is possible to invoke them passing ; 1416RVecs as arguments.; 1417 - abs, fdim, fmod, remainder; 1418 - floor, ceil, trunc, round, lround, llround; 1419 - exp, exp2, expm1; 1420 - log, log10, log2, log1p; 1421 - pow; 1422 - sqrt, cbrt; 1423 - sin, cos, tan, asin, acos, atan, atan2, hypot; 1424 - sinh, cosh, tanh, asinh, acosh; 1425 - erf, erfc; 1426 - lgamma, tgamma; 1427 ; 1428If the VDT library is available, the following functions can be invoked. Internally the calculations; 1429are vectorized:; 1430 - fast_expf, fast_logf, fast_sinf, fast_cosf, fast_tanf, fast_asinf, fast_acosf, fast_atanf; 1431 - fast_exp, fast_log, fast_sin, fast_cos, fast_tan, fast_asin, fast_acos, fast_atan; 1432 ; 1433\anchor owningandadoptingmemory; 1434## Owning and adopting memory; 1435RVec has contiguous memory associated to it. It can own it or simply adopt it. In the latter case,; 1436it can be constructed with the address of the memory associated to it and its length. For example:; 1437~~~{.cpp}; 1438std::vector<int> myStlVec {1,2,3};; 1439RVec<int> myRVec(myStlVec.data(), myStlVec.size());; 1440~~~; 1441In this case, the memory associated to myStlVec and myRVec is the same, myRVec simply ""adopted it"".; 1442If any method which implies a re-allocation is called, e.g. *emplace_back* or *resize*, the adopted; 1443memory is released and new one is allocated. The previous content is copied in the new memory and; 1444preserved.; 1445 ; 1446\anchor sorting; 1447## Sorting and manipulation of indices; 1448 ; 1449### Sorting; 1450RVec complies to the STL interfaces when it comes to iterations. As a result, standard algorithms; 1451can be used, for example sorting:; 1452~~~{.cpp}; 1453RVec<double> v{6., 4., 5.};; 1454std::sort(v.begin(), v.end());; 1455~~~; 1456 ; 1457For convenience, helpers are provided too:; 1458~~~{.cpp}; 1459au",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RVec_8hxx_source.html:50536,simpl,simply,50536,doc/master/RVec_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RVec_8hxx_source.html,2,['simpl'],['simply']
Usability," << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Static Public Member Functions inherited from RooAbsPdf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooNumGenConfig * defaultGeneratorConfig ();  Returns the default numeric MC generator configuration for all RooAbsReals. ;  ; static int verboseEval ();  Return global level of verbosity for p.d.f. evaluations. ;  ; static void verboseEval (Int_t stat);  Change global level of verbosity for p.d.f. evaluations. ;  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFixedProdPdf.html:58161,clear,clearEvalErrorLog,58161,doc/master/classRooFixedProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooFixedProdPdf.html,6,"['Clear', 'clear']","['Clear', 'clearEvalErrorLog']"
Usability," << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TGFrame.h>. Inheritance diagram for TGMainFrame::TGMapKey:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGMapKey() [1/2]. TGMainFrame::TGMapKey::TGMapKey ; (; const TGMapKey & ; ). private . ◆ TGMapKey() [2/2]. TGMainFrame::TGMapKey::TGMapKey ; (; UInt_t ; keycode, . TGWindow * ; w . ). inline . Definition at line 410 of file TGFrame.h. Member Function Documentation. ◆ operator=(). TGMapKey & TGMainFrame::TGMapKey::operator= ; (; const TGMapKey & ; ). private . Member Data Documentation. ◆ fKeyCode. UInt_t TGMainFrame::TGMapKey::fKeyCode. Definition at line 408 of file TGFrame.h. ◆ fWindow. TGWindow* TGMainFrame::TGMapKey::fWindow. Definition at line 409 of file TGFrame.h. Libraries for TGMainFrame::TGMapKey:. [legend]; The documentation for this class was generated from the following file:; gui/gui/inc/TGFrame.h. TGMainFrameTGMapKey. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGMainFrame_1_1TGMapKey.html:10688,Guid,Guide,10688,doc/master/classTGMainFrame_1_1TGMapKey.html,https://root.cern,https://root.cern/doc/master/classTGMainFrame_1_1TGMapKey.html,1,['Guid'],['Guide']
Usability," << (*it)->GetMin() << "" "" << (*it)->GetMax() << std::endl;; }; ; IFitterTarget* myFitness = new MyFitness();; ; // prepare the genetic algorithm with an initial population size of 20; // mind: big population sizes will help in searching the domain space of the solution; // but you have to weight this out to the number of generations; // the extreme case of 1 generation and populationsize n is equal to; // a Monte Carlo calculation with n tries; ; const TString name( ""exampleGA"" );; const TString opts( ""PopSize=100:Steps=30"" );; ; GeneticFitter mg( *myFitness, name, ranges, opts);; // mg.SetParameters( 4, 30, 200, 10,5, 0.95, 0.001 );; ; std::vector<Double_t> result;; Double_t estimator = mg.Run(result);; ; int n = 0;; for( std::vector<Double_t>::iterator it = result.begin(); it<result.end(); it++ ){; std::cout << ""FACTOR "" << n << "" : "" << (*it) << std::endl;; n++;; }; ; }; ; ; ; } // namespace TMVA; ; void TMVAGAexample2() {; cout << ""Start Test TMVAGAexample"" << endl; << ""========================"" << endl; << endl;; ; TMVA::exampleGA();; ; }; ; ; int main( int argc, char** argv ); {; TMVAGAexample2();; return 0;; }; GeneticAlgorithm.h; GeneticFitter.h; IFitterTarget.h; mainint main()Definition Prototype.cxx:12; Double_tdouble Double_tDefinition RtypesCore.h:59; resultOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t resultDefinition TGWin32VirtualXProxy.cxx:174; namechar name[80]Definition TGX11.cxx:110; TStringBasic string class.Definition TString.h:139; nconst Int_t nDefinition legend1.C:16; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22; AuthorAndreas Hoecker ; Definition in file TMVAGAexample2.C. tutorialstmvaTMVAGAexample2.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAGAexample2_8C.html:4477,Guid,Guide,4477,doc/master/TMVAGAexample2_8C.html,https://root.cern,https://root.cern/doc/master/TMVAGAexample2_8C.html,1,['Guid'],['Guide']
Usability," <= events; 3759 ; 3760Bool_t TEfficiency::SetTotalEvents(Int_t bin, Double_t events); 3761{; 3762 if(events >= fPassedHistogram->GetBinContent(bin)) {; 3763 fTotalHistogram->SetBinContent(bin,events);; 3764 return true;; 3765 }; 3766 else {; 3767 Error(""SetTotalEvents(Int_t,Double_t)"",""passed number of events (%.1lf) in bin %i is bigger than given number of total events %.1lf"",fPassedHistogram->GetBinContent(bin),bin,events);; 3768 return false;; 3769 }; 3770}; 3771 ; 3772////////////////////////////////////////////////////////////////////////////////; 3773/// Sets the histogram containing all events; 3774///; 3775/// The given histogram is cloned and stored internally as histogram containing; 3776/// all events. The given histogram has to be consistent with the current; 3777/// fPassedHistogram (see CheckConsistency(const TH1&,const TH1&)).; 3778/// The method returns whether the fTotalHistogram has been replaced (true) or; 3779/// not (false).; 3780///; 3781/// Note: The list of associated functions fFunctions is cleared.; 3782///; 3783/// Option:; 3784/// - ""f"": force the replacement without checking the consistency; 3785/// This can lead to inconsistent histograms and useless results; 3786/// or unexpected behaviour. But sometimes it might be the only; 3787/// way to change the histograms. If you use this option, you; 3788/// should ensure that the fPassedHistogram is replaced by a; 3789/// consistent one (with respect to rTotal) as well.; 3790 ; 3791Bool_t TEfficiency::SetTotalHistogram(const TH1& rTotal,Option_t* opt); 3792{; 3793 TString option = opt;; 3794 option.ToLower();; 3795 ; 3796 Bool_t bReplace = option.Contains(""f"");; 3797 ; 3798 if(!bReplace); 3799 bReplace = CheckConsistency(*fPassedHistogram,rTotal);; 3800 ; 3801 if(bReplace) {; 3802 delete fTotalHistogram;; 3803 // do not add cloned histogram to gDirectory; 3804 {; 3805 TDirectory::TContext ctx(nullptr);; 3806 fTotalHistogram = (TH1*)(rTotal.Clone());; 3807 }; 3808 fTotalHistogram->SetNormFacto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8cxx_source.html:148842,clear,cleared,148842,doc/master/TEfficiency_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8cxx_source.html,1,['clear'],['cleared']
Usability," = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetConfidenceLevel(Double_t cl); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetTestSize(Double_t size); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); RooStats::SimpleIntervalRooStats::SimpleInterval::SimpleInterval(const char* name = 0); RooStats::SimpleIntervalRooStats::SimpleInterval::SimpleInterval(const RooStats::SimpleInterval&); RooStats::SimpleIntervalRooStats::SimpleInterval::SimpleInterval(const char* name, const RooRealVar& var, Double_t lower, Double_t upper, Double_t cl); virtual Int_tTNamed::Sizeof() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual Double_tUpperLimit(); Double_tUpperLimitEstimatedError(); voidUseCLs(bool on = true); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__HypoTestInverterResult.html:5212,Simpl,SimpleIntervalRooStats,5212,root/html528/RooStats__HypoTestInverterResult.html,https://root.cern,https://root.cern/root/html528/RooStats__HypoTestInverterResult.html,10,['Simpl'],"['SimpleInterval', 'SimpleIntervalRooStats']"
Usability," = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual RooStats::SimpleInterval*GetInterval() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; RooAbsPdf*GetPosteriorPdf() const; RooPlot*GetPosteriorPlot() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__BayesianCalculator.html:3152,Simpl,SimpleInterval,3152,root/html526/RooStats__BayesianCalculator.html,https://root.cern,https://root.cern/root/html526/RooStats__BayesianCalculator.html,1,['Simpl'],['SimpleInterval']
Usability," = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TCanvas (Bool_t build=kTRUE);  Canvas default constructor. ;  ;  TCanvas (const char *name, const char *title, Int_t wtopx, Int_t wtopy, Int_t ww, Int_t wh);  Create a new canvas. ;  ;  TCanvas (const char *name, const char *title, Int_t ww, Int_t wh);  Create a new canvas at a random position. ;  ;  TCanvas (const char *name, const char *title="""", Int_t form=1);  Create a new canvas with a predefined size form. ;  ;  TCanvas (const char *name, Int_t ww, Int_t wh, Int_t winid);  Create an embedded canvas, i.e. ;  ;  ~TCanvas () override;  Canvas destructor. ;  ; void Browse (TBrowser *b) override;  Browse. ;  ; TVirtualPad * cd (Int_t subpadnumber=0) override;  Set current canvas & pad. ;  ; void Clear (Option_t *option="""") override;  Remove all primitives from the canvas. ;  ; virtual void Cleared (TVirtualPad *pad);  Emit pad Cleared signal. ;  ; void ClearPadSave ();  ; void Close (Option_t *option="""") override;  Close canvas. ;  ; void Closed () override;  Emit Closed signal. ;  ; void Constructor ();  Canvas default constructor. ;  ; void Constructor (const char *name, const char *title, Int_t form);  Create a new canvas with a predefined size form. ;  ; void Constructor (const char *name, const char *title, Int_t wtopx, Int_t wtopy, Int_t ww, Int_t wh);  Create a new canvas. ;  ; void Constructor (const char *name, const char *title, Int_t ww, Int_t wh);  Create a new canvas at a random position. ;  ; void Delete (Option_t *="""") override;  Delete this object. ;  ; void DeleteCanvasPainter ();  assert on IsBatch() == false? ;  ; void Destructor ();  Actual canvas destructor. ;  ; void DisconnectWidget ();  Used by friend class TCanvasImp. ;  ; void Draw (Option_t *option="""") override;  Draw a canvas. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCanvas.html:4585,Clear,Clear,4585,doc/v632/classTCanvas.html,https://root.cern,https://root.cern/doc/v632/classTCanvas.html,2,['Clear'],['Clear']
Usability," = (1ULL << ( 5 )); , kEditDisableWidth = (1ULL << ( 6 )); , ;   kEditDisableBtnEnable = (1ULL << ( 7 )); , kEditDisableKeyEnable = (1ULL << ( 8 )). };  ; enum  EStatusBits { kIsHtmlView = (1ULL << ( 14 )); };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGProgressBar (const TGWindow *p, UInt_t w, UInt_t h, Pixel_t back=GetWhitePixel(), Pixel_t barcolor=GetDefaultSelectedBackground(), GContext_t norm=GetDefaultGC()(), FontStruct_t font=GetDefaultFontStruct(), UInt_t options=kDoubleBorder|kSunkenFrame);  Create progress bar. ;  ;  ~TGProgressBar () override;  ; virtual void Format (const char *format=""%.2f"");  Set format for displaying a value. ;  ; Pixel_t GetBarColor () const;  ; EBarType GetBarType () const;  ; EFillType GetFillType () const;  ; FontStruct_t GetFontStruct () const;  ; TString GetFormat () const;  ; Float_t GetMax () const;  ; Float_t GetMin () const;  ; GContext_t GetNormGC () const;  ; Float_t GetPosition () const;  ; Bool_t GetShowPos () const;  ; const char * GetValueFormat () const;  ; void Increment (Float_t inc);  Increment progress position. ;  ; TClass * IsA () const override;  ; virtual void Percent (Bool_t on);  ; virtual void Reset ();  Reset progress bar (i.e. set pos to 0). ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save progress bar parameters as a C++ statement(s) on output stream out. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGProgressBar.html:2388,progress bar,progress bar,2388,doc/master/classTGProgressBar.html,https://root.cern,https://root.cern/doc/master/classTGProgressBar.html,1,['progress bar'],['progress bar']
Usability," = 0); virtual Bool_tTFormula::AnalyzeFunction(TString& chaine, Int_t& err, Int_t offset = 0); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTF1::Browse(TBrowser* b); static voidTF1::CalcGaussLegendreSamplingPoints(Int_t num, Double_t* x, Double_t* w, Double_t eps = 3.0E-11); virtual Double_tTF1::CentralMoment(Double_t n, Double_t a, Double_t b, const Double_t* params = 0, Double_t epsilon = 9.9999999999999995E-7); virtual Double_tTF2::CentralMoment2(Double_t nx, Double_t ax, Double_t bx, Double_t ny, Double_t ay, Double_t by, Double_t epsilon = 9.9999999999999995E-7); virtual Double_tCentralMoment3(Double_t nx, Double_t ax, Double_t bx, Double_t ny, Double_t ay, Double_t by, Double_t nz, Double_t az, Double_t bz, Double_t epsilon = 9.9999999999999995E-7); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTFormula::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tTFormula::Compile(const char* expression = """"); virtual voidCopy(TObject& f3) const; virtual Double_tTF2::Covariance2XY(Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t epsilon = 9.9999999999999995E-7); virtual Double_tCovariance3XY(Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t az, Double_t bz, Double_t epsilon = 9.9999999999999995E-7); virtual Double_tCovariance3XZ(Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t az, Double_t bz, Double_t epsilon = 9.9999999999999995E-7); virtual Double_tCovariance3YZ(Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t az, Double_t bz, Double_t epsilon = 9.9999999999999995E-7); virtual TH1*CreateHistogram(); virtual char*TFormula::DefinedString(Int_t code); virtual Double_tTFormula::DefinedValue(Int_t code); virtual Int_tTFormula::DefinedVariable(TString& variable, Int_t& action); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Double_tTF1::Deriva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TF3.html:1410,Clear,Clear,1410,root/html602/TF3.html,https://root.cern,https://root.cern/root/html602/TF3.html,1,['Clear'],['Clear']
Usability," = 0.04;; 338 fRadialOffset = 0.025;; 339 fRadian = kTRUE;; 340 fRadialLabelColor = 1;; 341 fRadialLabelFont = 62;; 342 fRadialTextSize = 0.035;; 343 fTickpolarSize = 0.02;; 344}; 345 ; 346////////////////////////////////////////////////////////////////////////////////; 347/// Paint TGraphPolargram.; 348 ; 349void TGraphPolargram::Paint(Option_t * chopt); 350{; 351 Int_t optionpoldiv, optionraddiv;; 352 Bool_t optionLabels = kTRUE;; 353 ; 354 TString opt = chopt;; 355 opt.ToUpper();; 356 ; 357 if(opt.Contains('P')) optionpoldiv=1; else optionpoldiv=0;; 358 if(opt.Contains('R')) optionraddiv=1; else optionraddiv=0;; 359 if(opt.Contains('O')) SetBit(TGraphPolargram::kLabelOrtho);; 360 else ResetBit(TGraphPolargram::kLabelOrtho);; 361 if(!opt.Contains('P') && !opt.Contains('R')) optionpoldiv=optionraddiv=1;; 362 if(opt.Contains('N')) optionLabels = kFALSE;; 363 ; 364 if(optionraddiv) PaintRadialDivisions(kTRUE);; 365 else PaintRadialDivisions(kFALSE);; 366 if(optionpoldiv) PaintPolarDivisions(optionLabels);; 367}; 368 ; 369////////////////////////////////////////////////////////////////////////////////; 370/// This is simplified from TEllipse::PaintEllipse.; 371/// Draw this ellipse with new coordinates.; 372 ; 373void TGraphPolargram::PaintCircle(Double_t x1, Double_t y1, Double_t r,; 374 Double_t phimin, Double_t phimax, Double_t theta); 375{; 376 if (!gPad) return;; 377 ; 378 Int_t i;; 379 const Int_t np = 200; // Number of point to draw circle; 380 static Double_t x[np+3], y[np+3];; 381 ; 382 // Set number of points approximatively proportional to the ellipse; 383 // circumference.; 384 ; 385 Double_t circ = TMath::Pi()*2*r*(phimax-phimin)/36;; 386 Int_t n = (Int_t)(np*circ/((gPad->GetX2()-gPad->GetX1())+; 387 (gPad->GetY2()-gPad->GetY1())));; 388 if (n < 8) n = 8;; 389 if (n > np) n = np;; 390 Double_t angle,dx,dy;; 391 Double_t dphi = (phimax-phimin)*TMath::Pi()/(180*n);; 392 Double_t ct = TMath::Cos(TMath::Pi()*theta/180);; 393 Double_t st = TMath::Sin(TMath::Pi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPolargram_8cxx_source.html:11486,simpl,simplified,11486,doc/master/TGraphPolargram_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPolargram_8cxx_source.html,1,['simpl'],['simplified']
Usability," = 0;; 347 fNpdg = 0;; 348 fPdgNames = nullptr;; 349 fGDMLMatrices = nullptr;; 350 fOpticalSurfaces = nullptr;; 351 fSkinSurfaces = nullptr;; 352 fBorderSurfaces = nullptr;; 353 memset(fPdgId, 0, 1024 * sizeof(Int_t));; 354 // TObjArray *fNavigators; //! list of navigators; 355 fCurrentTrack = nullptr;; 356 fCurrentVolume = nullptr;; 357 fTopVolume = nullptr;; 358 fTopNode = nullptr;; 359 fMasterVolume = nullptr;; 360 fPainter = nullptr;; 361 fActivity = kFALSE;; 362 fIsNodeSelectable = kFALSE;; 363 fVisDensity = 0.;; 364 fVisLevel = 3;; 365 fVisOption = 1;; 366 fExplodedView = 0;; 367 fNsegments = 20;; 368 fNLevel = 0;; 369 fUniqueVolumes = nullptr;; 370 fClippingShape = nullptr;; 371 fMatrixTransform = kFALSE;; 372 fMatrixReflection = kFALSE;; 373 fGLMatrix = nullptr;; 374 fPaintVolume = nullptr;; 375 fUserPaintVolume = nullptr;; 376 fElementTable = nullptr;; 377 fHashVolumes = nullptr;; 378 fHashGVolumes = nullptr;; 379 fSizePNEId = 0;; 380 fNPNEId = 0;; 381 fKeyPNEId = nullptr;; 382 fValuePNEId = nullptr;; 383 fMultiThread = kFALSE;; 384 fRaytraceMode = 0;; 385 fMaxThreads = 0;; 386 fUsePWNav = kFALSE;; 387 fParallelWorld = nullptr;; 388 ClearThreadsMap();; 389 } else {; 390 Init();; 391 if (!gGeoIdentity && TClass::IsCallingNew() == TClass::kRealNew); 392 gGeoIdentity = new TGeoIdentity(""Identity"");; 393 BuildDefaultMaterials();; 394 }; 395}; 396 ; 397////////////////////////////////////////////////////////////////////////////////; 398/// Constructor.; 399 ; 400TGeoManager::TGeoManager(const char *name, const char *title) : TNamed(name, title); 401{; 402 if (!gROOT->GetListOfGeometries()->FindObject(this)); 403 gROOT->GetListOfGeometries()->Add(this);; 404 if (!gROOT->GetListOfBrowsables()->FindObject(this)); 405 gROOT->GetListOfBrowsables()->Add(this);; 406 Init();; 407 gGeoIdentity = new TGeoIdentity(""Identity"");; 408 BuildDefaultMaterials();; 409 if (fgVerboseLevel > 0); 410 Info(""TGeoManager"", ""Geometry %s, %s created"", GetName(), GetTitle());; 411}; 412 ; 4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8cxx_source.html:17180,Clear,ClearThreadsMap,17180,doc/master/TGeoManager_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8cxx_source.html,1,['Clear'],['ClearThreadsMap']
Usability," = 1; , kNone = 99999; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TSchemaRule ();  Default Constructor. ;  ;  TSchemaRule (const TSchemaRule &rhs);  Copy Constructor. ;  ; virtual ~TSchemaRule ();  Destructor. ;  ; void AsString (TString &out, const char *options="""") const;  Add to the string 'out' the string representation of the rule. ;  ; void Clear (Option_t *="""") override;  Zero out this rule object. ;  ; Bool_t Conflicts (const TSchemaRule *rule) const;  Check if this rule conflicts with the given one. ;  ; const char * GetAttributes () const;  Get the attributes code of this rule. ;  ; const char * GetCode () const;  Get the source code of this rule. ;  ; Bool_t GetEmbed () const;  Return true if this rule should be saved in the ROOT File. ;  ; const TObjArray * GetInclude () const;  Return the list of header files to include to be able to compile this rule as a TObjArray of TObjString. ;  ; ReadFuncPtr_t GetReadFunctionPointer () const;  Get the pointer to the function to be run for the rule (if it is a read rule). ;  ; ReadRawFuncPtr_t GetReadRawFunctionPointer () const;  Get the pointer to the function to be run for the rule (if it is a raw read rule). ;  ; RuleType_t GetRuleType () const;  Return the type of the rule. ;  ; const TObjArray * GetSource () const;  Get the list of source members as a TObjArray of TNamed object, with the name be",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TSchemaRule.html:1608,Clear,Clear,1608,doc/v632/classROOT_1_1TSchemaRule.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TSchemaRule.html,2,['Clear'],['Clear']
Usability," = 1; else optionOne = 0;; 1737 if (opt.Contains(""B"")) optionBar = 1; else optionBar = 0;; 1738 if (opt.Contains(""N"")) optionBins = 1; else optionBins = 0;; 1739 if (opt.Contains(""L"")) optionLine = 1; else optionLine = 0;; 1740 if (opt.Contains(""P"")) optionMark = 1; else optionMark = 0;; 1741 if (opt.Contains(""A"")) optionAxis = 1; else optionAxis = 0;; 1742 if (opt.Contains(""]["")) optionOff = 1; else optionOff = 0;; 1743 if (opt.Contains(""P0"")) optionMark = 10;; 1744 ; 1745 Int_t optionFill2 = 0;; 1746 if (opt.Contains(""F"") && opt.Contains(""2"")) {; 1747 optionFill = 0; optionFill2 = 1;; 1748 }; 1749 ; 1750 // Set Clipping option; 1751 Option_t *noClip;; 1752 if (theGraph->TestBit(TGraph::kClipFrame)) noClip = """";; 1753 else noClip = ""C"";; 1754 gPad->SetBit(TGraph::kClipFrame, theGraph->TestBit(TGraph::kClipFrame));; 1755 ; 1756 optionZ = 1;; 1757 ; 1758 if (optionStar) theGraph->SetMarkerStyle(3);; 1759 ; 1760 first = 1;; 1761 last = npoints;; 1762 nbins = last - first + 1;; 1763 ; 1764 // Draw the Axis with a fixed number of division: 510; 1765 ; 1766 Double_t baroffset = gStyle->GetBarOffset();; 1767 Double_t barwidth = gStyle->GetBarWidth();; 1768 Double_t rwxmin = gPad->GetUxmin();; 1769 Double_t rwxmax = gPad->GetUxmax();; 1770 Double_t rwymin = gPad->GetUymin();; 1771 Double_t rwymax = gPad->GetUymax();; 1772 Double_t uxmin = gPad->PadtoX(rwxmin);; 1773 Double_t uxmax = gPad->PadtoX(rwxmax);; 1774 Double_t rounding = (uxmax-uxmin)*1.e-5;; 1775 drawborder = gStyle->GetDrawBorder();; 1776 if (optionAxis) {; 1777 Int_t nx1, nx2, ndivx, ndivy, ndiv;; 1778 choptaxis[0] = 0;; 1779 Double_t rwmin = rwxmin;; 1780 Double_t rwmax = rwxmax;; 1781 ndivx = gStyle->GetNdivisions(""X"");; 1782 ndivy = gStyle->GetNdivisions(""Y"");; 1783 if (ndivx > 1000) {; 1784 nx2 = ndivx/100;; 1785 nx1 = TMath::Max(1, ndivx%100);; 1786 ndivx = 100*nx2 + Int_t(Double_t(nx1)*gPad->GetAbsWNDC());; 1787 }; 1788 ndiv =TMath::Abs(ndivx);; 1789 // coverity [Calling risky function]; 1790 if (ndivx < ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPainter_8cxx_source.html:65512,ux,uxmin,65512,doc/master/TGraphPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPainter_8cxx_source.html,3,['ux'],"['uxmax', 'uxmax-uxmin', 'uxmin']"
Usability," = ROOT.RooRealVar(""y"", ""y"", -50.0, 50.0); x.setBins(10); y.setBins(20); ; ; # Booking the creation of RooDataSet / RooDataHist in RDataFrame; # ----------------------------------------------------------------; ; # Method 1:; # ---------; # We directly book the RooDataSetHelper action.; # We need to pass; # - the RDataFrame column types as template parameters; # - the constructor arguments for RooDataSet (they follow the same syntax as the usual RooDataSet constructors); # - the column names that RDataFrame should fill into the dataset; ; # NOTE: RDataFrame columns are matched to RooFit variables by position, *not by name*!; #; # The returned object is not yet a RooDataSet, but an RResultPtr that will be; # lazy-evaluated once you call GetValue() on it. We will only evaluate the; # RResultPtr once all other RDataFrame related actions are declared. This way; # we trigger the event loop computation only once, which will improve the; # runtime significantly.; #; # To learn more about lazy actions, see:; # https://root.cern/doc/master/classROOT_1_1RDataFrame.html#actions; roo_data_set_result = df.Book(; ROOT.std.move(ROOT.RooDataSetHelper(""dataset"", ""Title of dataset"", ROOT.RooArgSet(x, y))), (""x"", ""y""); ); ; # Method 2:; # ---------; # We first declare the RooDataHistHelper; rdhMaker = ROOT.RooDataHistHelper(""dataset"", ""Title of dataset"", ROOT.RooArgSet(x, y)); ; # Then, we move it into an RDataFrame action:; roo_data_hist_result = df.Book(ROOT.std.move(rdhMaker), (""x"", ""y"")); ; ; # Run it and inspect the results; # -------------------------------; ; # At this point, all RDF actions were defined (namely, the `Book` operations),; # so we can get values from the RResultPtr objects, triggering the event loop; # and getting the actual RooFit data objects.; roo_data_set = roo_data_set_result.GetValue(); roo_data_hist = roo_data_hist_result.GetValue(); ; # Let's inspect the dataset / datahist.; ; ; def print_data(data):; print(""""); data.Print(); for i in range(min(data.numEn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf408__RDataFrameToRooFit_8py.html:1803,learn,learn,1803,doc/master/rf408__RDataFrameToRooFit_8py.html,https://root.cern,https://root.cern/doc/master/rf408__RDataFrameToRooFit_8py.html,1,['learn'],['learn']
Usability," = fLazyInitialization;; 735 ; 736 // case of function based on a C++ expression (lambda's) which is ready to be compiled; 737 if (fLambdaPtr && TestBit(TFormula::kLambda)) {; 738 ; 739 bool ret = fnew.InitLambdaExpression(fnew.fFormula);; 740 if (ret) {; 741 fnew.SetBit(TFormula::kLambda);; 742 fnew.fReadyToExecute = true;; 743 }; 744 else {; 745 Error(""TFormula"",""Syntax error in building the lambda expression %s"", fFormula.Data() );; 746 fnew.fReadyToExecute = false;; 747 }; 748 }; 749 ; 750 // use copy-constructor of TMethodCall; 751 // if c++-14 could use std::make_unique; 752 TMethodCall *m = (fMethod) ? new TMethodCall(*fMethod) : nullptr;; 753 fnew.fMethod.reset(m);; 754 ; 755 fnew.fFuncPtr = fFuncPtr;; 756 fnew.fGradGenerationInput = fGradGenerationInput;; 757 fnew.fHessGenerationInput = fHessGenerationInput;; 758 fnew.fGradFuncPtr = fGradFuncPtr;; 759 fnew.fHessFuncPtr = fHessFuncPtr;; 760 ; 761}; 762 ; 763////////////////////////////////////////////////////////////////////////////////; 764/// Clear the formula setting expression to empty and reset the variables and; 765/// parameters containers.; 766 ; 767void TFormula::Clear(Option_t * ); 768{; 769 fNdim = 0;; 770 fNpar = 0;; 771 fNumber = 0;; 772 fFormula = """";; 773 fClingName = """";; 774 ; 775 fMethod.reset();; 776 ; 777 fClingVariables.clear();; 778 fClingParameters.clear();; 779 fReadyToExecute = false;; 780 fClingInitialized = false;; 781 fAllParametersSetted = false;; 782 fFuncs.clear();; 783 fVars.clear();; 784 fParams.clear();; 785 fConsts.clear();; 786 fFunctionsShortcuts.clear();; 787 ; 788 // delete linear parts; 789 int nLinParts = fLinearParts.size();; 790 if (nLinParts > 0) {; 791 for (int i = 0; i < nLinParts; ++i) delete fLinearParts[i];; 792 }; 793 fLinearParts.clear();; 794 ; 795}; 796 ; 797// Returns nullptr on failure.; 798static std::unique_ptr<TMethodCall>; 799prepareMethod(bool HasParameters, bool HasVariables, const char* FuncName,; 800 bool IsVectorized, bool AddCladArrayRef = fals",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:28066,Clear,Clear,28066,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['Clear'],['Clear']
Usability," = fNavigators.find(threadId);; 853 if (it == fNavigators.end()) {; 854 Error(""SetCurrentNavigator"", ""No navigator defined for this thread\n"");; 855 std::cout << "" thread id: "" << threadId << std::endl;; 856 return kFALSE;; 857 }; 858 TGeoNavigatorArray *array = it->second;; 859 TGeoNavigator *nav = array->SetCurrentNavigator(index);; 860 if (!nav) {; 861 Error(""SetCurrentNavigator"", ""Navigator %d not existing for this thread\n"", index);; 862 std::cout << "" thread id: "" << threadId << std::endl;; 863 return kFALSE;; 864 }; 865 if (!fMultiThread); 866 fCurrentNavigator = nav;; 867 return kTRUE;; 868}; 869 ; 870////////////////////////////////////////////////////////////////////////////////; 871/// Set the lock for navigators.; 872 ; 873void TGeoManager::SetNavigatorsLock(Bool_t flag); 874{; 875 fgLockNavigators = flag;; 876}; 877 ; 878////////////////////////////////////////////////////////////////////////////////; 879/// Clear all navigators.; 880 ; 881void TGeoManager::ClearNavigators(); 882{; 883 if (fMultiThread); 884 fgMutex.lock();; 885 TGeoNavigatorArray *arr = nullptr;; 886 for (NavigatorsMap_t::iterator it = fNavigators.begin(); it != fNavigators.end(); ++it) {; 887 arr = (*it).second;; 888 if (arr); 889 delete arr;; 890 }; 891 fNavigators.clear();; 892 if (fMultiThread); 893 fgMutex.unlock();; 894}; 895 ; 896////////////////////////////////////////////////////////////////////////////////; 897/// Clear a single navigator.; 898 ; 899void TGeoManager::RemoveNavigator(const TGeoNavigator *nav); 900{; 901 if (fMultiThread); 902 fgMutex.lock();; 903 for (NavigatorsMap_t::iterator it = fNavigators.begin(); it != fNavigators.end(); ++it) {; 904 TGeoNavigatorArray *arr = (*it).second;; 905 if (arr) {; 906 if ((TGeoNavigator *)arr->Remove((TObject *)nav)) {; 907 delete nav;; 908 if (!arr->GetEntries()); 909 fNavigators.erase(it);; 910 if (fMultiThread); 911 fgMutex.unlock();; 912 return;; 913 }; 914 }; 915 }; 916 Error(""Remove navigator"", ""Navigator %p not found"", nav",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8cxx_source.html:32696,Clear,ClearNavigators,32696,doc/master/TGeoManager_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8cxx_source.html,1,['Clear'],['ClearNavigators']
Usability," = fNodeId;; 106 fChild = 0;; 107 fNodeId = node.chlds[fChild];; 108 return true;; 109 }; 110 ; 111 bool Leave(); 112 {; 113 if (fStackParents.empty()) {; 114 fNodeId = -1;; 115 return false;; 116 }; 117 fParentId = fStackParents.back();; 118 fChild = fStackChilds.back();; 119 ; 120 fStackParents.pop_back();; 121 fStackChilds.pop_back();; 122 ; 123 if (fParentId < 0) {; 124 fNodeId = 0;; 125 } else {; 126 fNodeId = fDesc.fDesc[fParentId].chlds[fChild];; 127 }; 128 return true;; 129 }; 130 ; 131 bool Next(); 132 {; 133 // does not have parents; 134 if ((fNodeId <= 0) || (fParentId < 0)) {; 135 Reset();; 136 return false;; 137 }; 138 ; 139 auto &prnt = fDesc.fDesc[fParentId];; 140 if (++fChild >= prnt.chlds.size()) {; 141 fNodeId = -1; // not valid node, only Leave can be called; 142 return false;; 143 }; 144 ; 145 fNodeId = prnt.chlds[fChild];; 146 return true;; 147 }; 148 ; 149 bool Reset(); 150 {; 151 fParentId = -1;; 152 fNodeId = -1;; 153 fChild = 0;; 154 fStackParents.clear();; 155 fStackChilds.clear();; 156 ; 157 return true;; 158 }; 159 ; 160 bool NextNode(); 161 {; 162 if (Enter()); 163 return true;; 164 ; 165 if (Next()); 166 return true;; 167 ; 168 while (Leave()) {; 169 if (Next()); 170 return true;; 171 }; 172 ; 173 return false;; 174 }; 175 ; 176 /** Navigate to specified path - path specified as string and should start with ""/"" */; 177 bool Navigate(const std::string &path); 178 {; 179 size_t pos = path.find('/');; 180 if (pos != 0); 181 return false;; 182 ; 183 Reset(); // set to the top of element; 184 ; 185 while (++pos < path.length()) {; 186 auto last = pos;; 187 ; 188 pos = path.find('/', last);; 189 ; 190 if (pos == std::string::npos); 191 pos = path.length();; 192 ; 193 std::string folder = path.substr(last, pos - last);; 194 ; 195 if (!Enter()); 196 return false;; 197 ; 198 bool find = false;; 199 ; 200 do {; 201 find = (folder.compare(GetName()) == 0);; 202 } while (!find && Next());; 203 ; 204 if (!find); 205 return false;; 206 }; 207 ; 208 re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8cxx_source.html:4052,clear,clear,4052,doc/master/RGeomData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8cxx_source.html,2,['clear'],['clear']
Usability," = gRandom->Rndm()*(kMaxTrack-1);; ntrack = nt;; sumstat = 0;; // set the values in each track; for (Int_t n=0;n<nt;n++) {; stat[n] = n%3;; sign[n] = i%2;; px[n] = gRandom->Gaus(0,1);; py[n] = gRandom->Gaus(0,2);; pz[n] = gRandom->Gaus(10,5);; zv[n] = gRandom->Gaus(100,2);; chi2[n] = gRandom->Gaus(0,.01);; sumstat += chi2[n];; pt[n] = TMath::Sqrt(px[n]*px[n] + py[n]*py[n]);; }; t3->Fill();; t3f->Fill();; }; // Write the two files; t3->Print();; f.cd();; t3->Write();; fr.cd();; t3f->Write();; }. // Function to read the two files and add the friend; void tree3r() {; TFile *f = new TFile(""tree3.root"");; TTree *t3 = (TTree*)f->Get(""t3"");; // Add the second tree to the first tree as a friend; t3->AddFriend(""t3f"",""tree3f.root"");; // Draw pz which is in the first tree and use pt; // in the condition. pt is in the friend tree.; t3->Draw(""pz"",""pt>3"");; }. // This is executed when typing .x tree3.C; void tree3() {; tree3w();; tree3r();; }; 12.17 Example 4: A Tree with an Event Class; This example is a simplified version of $ROOTSYS/test/MainEvent.cxx and where Event objects are saved in a tree. The full definition of Event is in $ROOTSYS/test/Event.h. To execute this macro, you will need the library $ROOTSYS/test/libEvent.so. If it does not exist you can build the test directory applications by following the instruction in the $ROOTSYS/test/README file.; In this example we will show. the difference in splitting or not splitting a branch; how to read selected branches of the tree,; how to print a selected entry. 12.17.1 The Event Class; Event is a descendent of TObject. As such it inherits the data members of TObject and its methods such as Dump() and Inspect()andWrite(). In addition, because it inherits from TObject it can be a member of a collection. To summarize, the advantages of inheriting from a TObject are:. Inherit the Write, Inspect, and Dump methods; Enables a class to be a member of a ROOT collection; Enables RTTI. Below is the list of the Event data members. It con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:574733,simpl,simplified,574733,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['simpl'],['simplified']
Usability," = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; virtual voidchangeBasis(RooFormulaVar* basis); voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; static voidcleanup(); virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual RooResolutionModel*convolution(RooFormulaVar* basis, RooAbsArg* owner) const; RooRealVar&convVar() const; virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooResolutionModel.html:4964,clear,clearValueAndShapeDirty,4964,root/html534/RooResolutionModel.html,https://root.cern,https://root.cern/root/html534/RooResolutionModel.html,2,['clear'],['clearValueAndShapeDirty']
Usability," = new TExec(""ex1"",""Pal1();"");; ex1->Draw();; f3->Draw(""surf1 same"");; ; c3->cd(2);; f3->Draw(""surf1"");; TExec *ex2 = new TExec(""ex2"",""Pal2();"");; ex2->Draw();; f3->Draw(""surf1 same"");; }; Bool_tbool Bool_tDefinition RtypesCore.h:63; Int_tint Int_tDefinition RtypesCore.h:45; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; Double_tdouble Double_tDefinition RtypesCore.h:59; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; kBlack@ kBlackDefinition Rtypes.h:65; TCanvas.h; TColor.h; TExec.h; TF2.h; TStyle.h; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; colorsColor * colorsDefinition X3DBuffer.c:21; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TCanvasThe Canvas class.Definition TCanvas.h:23; TColor::CreateGradientColorTablestatic Int_t CreateGradientColorTable(UInt_t Number, Double_t *Stops, Double_t *Red, Double_t *Green, Double_t *Blue, UInt_t NColors, Float_t alpha=1., Bool_t setPalette=kTRUE)Static function creating a color table with several connected linear gradients.Definition TColor.cxx:2730; TExecTExec is a utility class that can be used to execute a C++ command when some event happens in a pad.Definition TExec.h:26; TF2A 2-Dim function with parameters.Definition TF2.h:29; TF2::Drawvoid Draw(Option_t *option="""") overrideDraw this function with its current attributes.Definition TF2.cxx:259; TObject::Drawvirtual void Draw(Option_t *option="""")Default Draw method for all objects.Definition TObject.cxx:280; TStyle::SetPalettevoid SetPalette(Int_t ncolors=kBird, Int_t *colors=nullptr, Float_t alpha=1.)See TColor::SetPalette.Definition TStyle.cxx:1888; c3return c3Definition legend3.C:15; AuthorOlivier Couet ; Definition in file multipalette.C. tutorialsgraphsmultipalette.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/multipalette_8C.html:4088,Guid,Guide,4088,doc/master/multipalette_8C.html,https://root.cern,https://root.cern/doc/master/multipalette_8C.html,1,['Guid'],['Guide']
Usability," = nullptr;; 488 fHashVolumes = nullptr;; 489 fHashGVolumes = nullptr;; 490 fSizePNEId = 0;; 491 fNPNEId = 0;; 492 fKeyPNEId = nullptr;; 493 fValuePNEId = nullptr;; 494 fMultiThread = kFALSE;; 495 fRaytraceMode = 0;; 496 fMaxThreads = 0;; 497 fUsePWNav = kFALSE;; 498 fParallelWorld = nullptr;; 499 ClearThreadsMap();; 500}; 501 ; 502////////////////////////////////////////////////////////////////////////////////; 503/// Destructor; 504 ; 505TGeoManager::~TGeoManager(); 506{; 507 if (gGeoManager != this); 508 gGeoManager = this;; 509 fIsGeomCleaning = kTRUE;; 510 ; 511 if (gROOT->GetListOfFiles()) { // in case this function is called from TROOT destructor; 512 gROOT->GetListOfGeometries()->Remove(this);; 513 gROOT->GetListOfBrowsables()->Remove(this);; 514 }; 515 // TSeqCollection *brlist = gROOT->GetListOfBrowsers();; 516 // TIter next(brlist);; 517 // TBrowser *browser = 0;; 518 // while ((browser=(TBrowser*)next())) browser->RecursiveRemove(this);; 519 ClearThreadsMap();; 520 ClearThreadData();; 521 delete TGeoBuilder::Instance(this);; 522 if (fBits); 523 delete[] fBits;; 524 SafeDelete(fNodes);; 525 SafeDelete(fTopNode);; 526 if (fOverlaps) {; 527 fOverlaps->Delete();; 528 SafeDelete(fOverlaps);; 529 }; 530 if (fRegions) {; 531 fRegions->Delete();; 532 SafeDelete(fRegions);; 533 }; 534 if (fMaterials) {; 535 fMaterials->Delete();; 536 SafeDelete(fMaterials);; 537 }; 538 SafeDelete(fElementTable);; 539 if (fMedia) {; 540 fMedia->Delete();; 541 SafeDelete(fMedia);; 542 }; 543 if (fHashVolumes) {; 544 fHashVolumes->Clear(""nodelete"");; 545 SafeDelete(fHashVolumes);; 546 }; 547 if (fHashGVolumes) {; 548 fHashGVolumes->Clear(""nodelete"");; 549 SafeDelete(fHashGVolumes);; 550 }; 551 if (fHashPNE) {; 552 fHashPNE->Delete();; 553 SafeDelete(fHashPNE);; 554 }; 555 if (fArrayPNE) {; 556 delete fArrayPNE;; 557 }; 558 if (fVolumes) {; 559 fVolumes->Delete();; 560 SafeDelete(fVolumes);; 561 }; 562 if (fShapes) {; 563 fShapes->Delete();; 564 SafeDelete(fShapes);; 565 }; 566 if (f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8cxx_source.html:21336,Clear,ClearThreadData,21336,doc/master/TGeoManager_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8cxx_source.html,1,['Clear'],['ClearThreadData']
Usability," = tree.Branch(branchname,clonesarray, bufsize, splitlevel); 217~~~; 218The TClonesArray is a direct access list of objects of the same class.; 219For example, if the TClonesArray is an array of TTrack objects,; 220this function will create one subbranch for each data member of; 221the object TTrack.; 222 ; 223\anchor fillthetree; 224## Fill the Tree; 225 ; 226A TTree instance is filled with the invocation of the TTree::Fill method:; 227~~~ {.cpp}; 228 tree.Fill(); 229~~~; 230Upon its invocation, a loop on all defined branches takes place that for each branch invokes; 231the TBranch::Fill method.; 232 ; 233\anchor addcoltoexistingtree; 234## Add a column to an already existing Tree; 235 ; 236You may want to add a branch to an existing tree. For example,; 237if one variable in the tree was computed with a certain algorithm,; 238you may want to try another algorithm and compare the results.; 239One solution is to add a new branch, fill it, and save the tree.; 240The code below adds a simple branch to an existing tree.; 241Note the kOverwrite option in the Write method, it overwrites the; 242existing tree. If it is not specified, two copies of the tree headers; 243are saved.; 244~~~ {.cpp}; 245 void tree3AddBranch() {; 246 TFile f(""tree3.root"", ""update"");; 247 ; 248 Float_t new_v;; 249 auto t3 = f->Get<TTree>(""t3"");; 250 auto newBranch = t3->Branch(""new_v"", &new_v, ""new_v/F"");; 251 ; 252 Long64_t nentries = t3->GetEntries(); // read the number of entries in the t3; 253 ; 254 for (Long64_t i = 0; i < nentries; i++) {; 255 new_v = gRandom->Gaus(0, 1);; 256 newBranch->Fill();; 257 }; 258 ; 259 t3->Write("""", TObject::kOverwrite); // save only the new version of the tree; 260 }; 261~~~; 262It is not always possible to add branches to existing datasets stored in TFiles: for example,; 263these files might not be writeable, just readable. In addition, modifying in place a TTree; 264causes a new TTree instance to be written and the previous one to be deleted.; 265For this reason",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:11880,simpl,simple,11880,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['simpl'],['simple']
Usability," = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . #include <RooStats/HistFactory/ParamHistFunc.h>. Inheritance diagram for ParamHistFunc:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ ParamHistFunc() [1/4]. ParamHistFunc::ParamHistFunc ; (; ). Definition at line 62 of file ParamHistFunc.cxx. ◆ ParamHistFunc() [2/4]. ParamHistFunc::ParamHistFunc ; (; const char * ; name, . const char * ; title, . const RooArgList & ; vars, . const RooArgList & ; paramSet . ). Create a function which returns binewise-values This class contains N RooAbsReals's, one for each bin from the given RooRealVar. ; The value of the function in the ith bin is given by:; F(i) = gamma_i * nominal(i); Where the nominal values are simply fixed numbers (default = 1.0 for all i) ; Definition at line 81 of file ParamHistFunc.cxx. ◆ ParamHistFunc() [3/4]. ParamHistFunc::ParamHistFunc ; (; const char * ; name, . const char * ; title, . const RooArgList & ; vars, . const RooArgList & ; paramSet, . const TH1 * ; Hist . ). Create a function which returns bin-wise values. ; This class allows to multiply bin contents of histograms with the values of a set of RooAbsReal.; The value of the function in the ith bin is given by: ; \[; F(i) = \gamma_{i} * \mathrm{nominal}(i); \]. Where the nominal values are taken from the histogram, and the \( \gamma_{i} \) can be set from the outside. ; Definition at line 124 of file ParamHistFunc.cxx. ◆ ParamHistFunc() [4/4]. ParamHistFunc::ParamHistFunc ; (; const ParamHistFunc & ; other, . const char * ; name = nullptr . ). Definition at line 173 of file ParamHistFunc.cxx. Member Function Documentation. ◆ addParamSet(). Int_t ParamHistFunc::addParam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classParamHistFunc.html:63413,simpl,simply,63413,doc/master/classParamHistFunc.html,https://root.cern,https://root.cern/doc/master/classParamHistFunc.html,1,['simpl'],['simply']
Usability," = xc[0];; 799 yc[nconv] = yc[0];; 800 g2 = new TGraph(nconv + 1, xc, yc);; 801 g2->SetLineColor(kBlue);; 802 g2->SetLineColor(kBlue);; 803 g2->SetMarkerColor(kBlue);; 804 g2->SetMarkerStyle(21);; 805 g2->SetMarkerSize(0.4);; 806 delete[] xc;; 807 delete[] yc;; 808 }; 809 if (!gPad) {; 810 gROOT->MakeDefCanvas();; 811 }; 812 g1->Draw(""ALP"");; 813 if (g2); 814 g2->Draw(""LP"");; 815}; 816 ; 817////////////////////////////////////////////////////////////////////////////////; 818/// Draw method.; 819 ; 820void TGeoPainter::DrawVolume(TGeoVolume *vol, Option_t *option); 821{; 822 fTopVolume = vol;; 823 fLastVolume = nullptr;; 824 fIsPaintingShape = kFALSE;; 825 // if (fVisOption==kGeoVisOnly ||; 826 // fVisOption==kGeoVisBranch) fGeoManager->SetVisOption(kGeoVisLeaves);; 827 CountVisibleNodes();; 828 TString opt = option;; 829 opt.ToLower();; 830 fPaintingOverlaps = kFALSE;; 831 fOverlap = nullptr;; 832 ; 833 if (fVisLock) {; 834 ClearVisibleVolumes();; 835 fVisLock = kFALSE;; 836 }; 837 Bool_t has_pad = (gPad == nullptr) ? kFALSE : kTRUE;; 838 // Clear pad if option ""same"" not given; 839 if (!gPad) {; 840 gROOT->MakeDefCanvas();; 841 }; 842 if (!opt.Contains(""same"")); 843 gPad->Clear();; 844 // append this volume to pad; 845 fTopVolume->AppendPad(option);; 846 ; 847 // Create a 3-D view; 848 TView *view = gPad->GetView();; 849 if (!view) {; 850 view = TView::CreateView(11, nullptr, nullptr);; 851 // Set the view to perform a first autorange (frame) draw.; 852 // TViewer3DPad will revert view to normal painting after this; 853 view->SetAutoRange(kTRUE);; 854 if (has_pad); 855 gPad->Update();; 856 }; 857 if (!opt.Contains(""same"")); 858 Paint(""range"");; 859 else; 860 Paint(opt);; 861 view->SetAutoRange(kFALSE);; 862 // If we are drawing into the pad, then the view needs to be; 863 // set to perspective; 864 // if (!view->IsPerspective()) view->SetPerspective();; 865 ; 866 fLastVolume = fTopVolume;; 867 ; 868 // Create a 3D viewer to paint us; 869 gPad->GetViewer3D(option);;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPainter_8cxx_source.html:26941,Clear,ClearVisibleVolumes,26941,doc/master/TGeoPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoPainter_8cxx_source.html,2,['Clear'],"['Clear', 'ClearVisibleVolumes']"
Usability," = {splitCat1},{splitCat2} : {parameter}; . instructs RooSimPdfBuilder to build a RooSuperCategory ; of {splitCat1} and {splitCat2}; and split {parameter} with that RooSuperCategory. Here is an example of a builder configuration that uses several of the options discussed; above:; . physModels = pdf; splitCats = tagCat runBlock; pdf = tagCat : signalRes,bkgRes ; runBlock : fudgeFactor ; tagCat,runBlock : kludgeParam; ; How to enter configuration data. The prototype builder configuration returned by ; RooSimPdfBuilder::createProtoBuildConfig() is a pointer to a RooArgSet filled with; initially blank RooStringVars named physModels,splitCats and one additional for each; PDF supplied to the RooSimPdfBuilders constructor (with the same name); . In macro code, the easiest way to assign new values to these RooStringVars; is to use RooArgSets array operator and the RooStringVars assignment operator, e.g.; . (*config)[""physModels""] = ""Blah"" ;; . To enter multiple splitting rules simply separate consecutive rules by whitespace; (not newlines), e.g. ; . (*config)[""physModels""] = ""Blah "" // << note trailing space here; ""Blah 2"" ;; . In this example, the C++ compiler will concatenate the two string literals (without inserting; any whitespace), so the extra space after 'Blah' is important here.; ; ; Alternatively, you can read the configuration from an ASCII file, as you can; for any RooArgSet using RooArgSet::readFromFile(). In that case the ASCII file; can follow the syntax of the examples above and the '\\' line continuation ; sequence can be used to fold a long splitting rule over multiple lines.; . RooArgSet* config = builder.createProtoBuildConfig() ;; config->readFromFile(""config.txt"") ;; --- config.txt ---------------- ; physModels = pdf; splitCats = tagCat; pdf = tagCat : bogusPar; -------------------------------; ; Working with multiple prototype PDFs. It is also possible to build a RooSimultaneous PDF from multiple PDF prototypes.; This is appropriate for cases where th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSimPdfBuilder.html:6463,simpl,simply,6463,root/html526/RooSimPdfBuilder.html,https://root.cern,https://root.cern/root/html526/RooSimPdfBuilder.html,7,['simpl'],['simply']
Usability," > &map1, const std::vector< int > &map2, TMatrixDSym &S11, TMatrixD &S12, TMatrixD &S21, TMatrixDSym &S22);  Block decomposition of covI according to given maps of observables. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsPdf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooNumGenConfig * defaultGeneratorConfig ();  Returns the default numeric MC generator configuration for all RooAbsReals. ;  ; static int verboseEval ();  Return global level of verbosity for p.d.f. evaluations. ;  ; static void verboseEval (Int_t stat);  Change global level of verbosity for p.d.f. evaluations. ;  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMultiVarGaussian.html:56864,clear,clearEvalErrorLog,56864,doc/master/classRooMultiVarGaussian.html,https://root.cern,https://root.cern/doc/master/classRooMultiVarGaussian.html,2,"['Clear', 'clear']","['Clear', 'clearEvalErrorLog']"
Usability," >.; Definition at line 1553 of file TMatrixTSym.cxx. ◆ Apply() [2/2]. template<class Element > . TMatrixTBase< Element > & TMatrixTSym< Element >::Apply ; (; const TElementPosActionT< Element > & ; action). overridevirtual . Apply action to each element of the matrix. ; To action the location of the current element is passed. ; Reimplemented from TMatrixTBase< Element >.; Definition at line 1580 of file TMatrixTSym.cxx. ◆ Class() [1/2]. template<class Element > . static TClass * TMatrixTSym< Element >::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class() [2/2]. TClass * TMatrixTSym< double >::Class ; (; ). ◆ Class_Name(). template<class Element > . static const char * TMatrixTSym< Element >::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). template<class Element > . static constexpr Version_t TMatrixTSym< Element >::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 180 of file TMatrixTSym.h. ◆ Clear(). template<class Element > . void TMatrixTSym< Element >::Clear ; (; Option_t * ; = """"). inlineoverridevirtual . Implements TMatrixTBase< Element >.; Definition at line 96 of file TMatrixTSym.h. ◆ DeclFileName(). template<class Element > . static const char * TMatrixTSym< Element >::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 180 of file TMatrixTSym.h. ◆ Delete_m(). template<class Element > . void TMatrixTSym< Element >::Delete_m ; (; Int_t ; size, . Element *& ; m . ). protected . delete data pointer m, if it was assigned on the heap ; Definition at line 215 of file TMatrixTSym.cxx. ◆ Determinant() [1/2]. template<class Element > . Double_t TMatrixTSym< Element >::Determinant. overridevirtual . Reimplemented from TMatrixTBase< Element >.; Definition at line 935 of file TMatrixTSym.cxx. ◆ Determinant() [2/2]. template<class Element > . void TMatrixTSym< Element >::Determinant ; (; Double_t & ; d1, . Double_t & ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTSym.html:28337,Clear,Clear,28337,doc/master/classTMatrixTSym.html,https://root.cern,https://root.cern/doc/master/classTMatrixTSym.html,1,['Clear'],['Clear']
Usability," >; TNamed::SetNamevirtual void SetName(const char *name)Set the name of the TNamed.Definition TNamed.cxx:140; TStringBasic string class.Definition TString.h:139; TString::ToLowervoid ToLower()Change string to lower-case.Definition TString.cxx:1182; TString::AtofDouble_t Atof() constReturn floating-point value contained in string.Definition TString.cxx:2054; TString::IsFloatBool_t IsFloat() constReturns kTRUE if string contains a floating point or integer number.Definition TString.cxx:1858; TString::Dataconst char * Data() constDefinition TString.h:376; TString::RemoveTString & Remove(Ssiz_t pos)Definition TString.h:685; TString::Formatstatic TString Format(const char *fmt,...)Static method which formats a string using a printf style format descriptor and return a TString.Definition TString.cxx:2378; TString::ContainsBool_t Contains(const char *pat, ECaseCompare cmp=kExact) constDefinition TString.h:632; TString::IndexSsiz_t Index(const char *pat, Ssiz_t i=0, ECaseCompare cmp=kExact) constDefinition TString.h:651; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; TTree::SetDirectoryvirtual void SetDirectory(TDirectory *dir)Change the tree's directory.Definition TTree.cxx:8966; TTree::BranchTBranch * Branch(const char *name, T *obj, Int_t bufsize=32000, Int_t splitlevel=99)Add a new branch, and infer the data type from the type of obj being passed.Definition TTree.h:353; TTree::ReadFilevirtual Long64_t ReadFile(const char *filename, const char *branchDescriptor="""", char delimiter=' ')Create or simply read branches from filename.Definition TTree.cxx:7564; bool; double; int; unsigned int; TMVA::DataLoaderCopyvoid DataLoaderCopy(TMVA::DataLoader *des, TMVA::DataLoader *src); TMVA::EndlMsgLogger & Endl(MsgLogger &ml)Definition MsgLogger.h:148; mTMarker mDefinition textangle.C:8; ttauto * ttDefinition textangle.C:16; Config.h. tmvatmvasrcDataLoader.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataLoader_8cxx_source.html:40839,simpl,simply,40839,doc/master/DataLoader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataLoader_8cxx_source.html,2,"['Guid', 'simpl']","['Guide', 'simply']"
Usability, ALGORITHM TUNING' RooFit tutorial macro #903 ;  ► roostats;  CreateExampleFile.C;  FourBinInstructional.C This example is a generalization of the on/off problem ;  HybridInstructional.C Example demonstrating usage of HybridCalcultor ;  HybridOriginalDemo.C Example on how to use the HybridCalculatorOriginal class ;  HybridStandardForm.C A hypothesis testing example based on number counting with background uncertainty ;  IntervalExamples.C Example showing confidence intervals with four techniques ;  JeffreysPriorDemo.C tutorial demonstrating and validates the RooJeffreysPrior class ;  ModelInspector.CRooStats Model Inspector ;  MultivariateGaussianTest.C Comparison of MCMC and PLC in a multi-variate gaussian problem ;  NuMuToNuE_Oscillation.cxx;  NuMuToNuE_Oscillation.h;  OneSidedFrequentistUpperLimitWithBands.C OneSidedFrequentistUpperLimitWithBands ;  rs101_limitexample.C 'Limit Example' RooStats tutorial macro #101 This tutorial shows an example of creating a simple model for a number counting experiment with uncertainty on both the background rate and signal efficiency ;  rs102_hypotestwithshapes.C rs102_hypotestwithshapes for RooStats project ;  rs301_splot.C SPlot tutorial ;  rs401c_FeldmanCousins.C Produces an interval on the mean signal in a number counting experiment with known background using the Feldman-Cousins technique ;  rs401d_FeldmanCousins.C 'Neutrino Oscillation Example from Feldman & Cousins' ;  rs601_HLFactoryexample.C 'High Level Factory Example' RooStats tutorial macro #601 ;  rs602_HLFactoryCombinationexample.C 'High Level Factory Example' RooStats tutorial macro #602 ;  rs603_HLFactoryElaborateExample.C 'High Level Factory Example' RooStats tutorial macro #602 ;  rs701_BayesianCalculator.C 'Bayesian Calculator' RooStats tutorial macro #701 ;  rs801_HypoTestInverterOriginal.C 'Hypothesis Test Inversion' RooStats tutorial macro #801 ;  rs_bernsteinCorrection.C 'Bernstein Correction' RooStats tutorial macro ;  rs_numberCountingCombination.C 'Numb,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/files.html:148221,simpl,simple,148221,doc/v608/files.html,https://root.cern,https://root.cern/doc/v608/files.html,4,['simpl'],['simple']
Usability," ALIGN=left> and <IMG ALIGN=right> kinds of markup. It allows text to flow around an image.; If ""bottom"" is negative, then the margin stays in force until it is explicitly canceled by a call to PopMargin().; ppMargin - The margin stack onto which to push indent - The indentation for the new margin mbottom - The margin expires at this Y coordinate tag - Markup that will cancel this margin ; Definition at line 81 of file TGHtmlLayout.cxx. ◆ Reset(). void TGHtmlLayoutContext::Reset ; (; ). Reset the layout context. ; Definition at line 56 of file TGHtmlLayout.cxx. ◆ TableLayout(). TGHtmlElement * TGHtmlLayoutContext::TableLayout ; (; TGHtmlTable * ; pTable). protected . Do all layout for a single table. ; Return the ; element or NULL if the table is unterminated. ; Definition at line 1118 of file TGHtmlTable.cxx. ◆ WidenLine(). void TGHtmlLayoutContext::WidenLine ; (; int ; reqWidth, . int * ; pX, . int * ; pY, . int * ; pW . ). protected . Move past obstacles until a linewidth of reqWidth is obtained, or until all obstacles are cleared. ; reqWidth - Requested line width pX, pY, pW - The margins. See ComputeMargins() ; Definition at line 1058 of file TGHtmlLayout.cxx. Member Data Documentation. ◆ fBottom. int TGHtmlLayoutContext::fBottom. Definition at line 800 of file TGHtml.h. ◆ fHeadRoom. int TGHtmlLayoutContext::fHeadRoom. Definition at line 798 of file TGHtml.h. ◆ fHtml. TGHtml* TGHtmlLayoutContext::fHtml. Definition at line 795 of file TGHtml.h. ◆ fLeft. int TGHtmlLayoutContext::fLeft. Definition at line 801 of file TGHtml.h. ◆ fLeftMargin. SHtmlMargin_t* TGHtmlLayoutContext::fLeftMargin. Definition at line 805 of file TGHtml.h. ◆ fMaxX. int TGHtmlLayoutContext::fMaxX. Definition at line 804 of file TGHtml.h. ◆ fMaxY. int TGHtmlLayoutContext::fMaxY. Definition at line 804 of file TGHtml.h. ◆ fPageWidth. int TGHtmlLayoutContext::fPageWidth. Definition at line 802 of file TGHtml.h. ◆ fPEnd. TGHtmlElement* TGHtmlLayoutContext::fPEnd. Definition at line 797 of file TG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHtmlLayoutContext.html:20852,clear,cleared,20852,doc/master/classTGHtmlLayoutContext.html,https://root.cern,https://root.cern/doc/master/classTGHtmlLayoutContext.html,1,['clear'],['cleared']
Usability," About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses Introductory Tutorials. Overview; The goal of this tutorial session is to learn how to read a tree from a ROOT file, extract some data from it, display a histogram and then fit it.;  ; Information about the ROOT classes can be found on the ROOT reference guide, and there is also a web based documentation and the Root primer and other manuals available to download.; . Meet a TTree ›. Navigate through this book; Meet a TTree; Accessing a TTree With a TBrowser; Using TTree::Draw() to access a TTree; TTree and Its Data; Using a Macro to Read a TTree; Histogramming; Fit Panel; Compiling Your Code (also known as ACLiC); Accessing a TTree With a TSelector; Histogramming in a Selector; Using a TSelector with PROOF; The End. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. © Copyright CERN 2014-18. All rights reserved. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/introductory-tutorials-1.html:2693,Guid,Guides,2693,d/introductory-tutorials-1.html,https://root.cern,https://root.cern/d/introductory-tutorials-1.html,4,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability," AbstractMethod(const char *method) constTObject; Activate()TSysEvtHandler; Activated()TSysEvtHandlerinlinevirtual; Add() overrideTTimerinlinevirtual; Added()TSysEvtHandlerinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; Browse(TBrowser *b)TObjectvirtual; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; CheckedHash()TObjectinline; CheckTimer(const TTime &now)TTimer; Class()TTimerstatic; Class_Name()TTimerstatic; Class_Version()TTimerinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; Clone(const char *newname="""") constTObjectvirtual; CollectClassSignalLists(TList &list, TClass *cls)TQObject; Compare(const TObject *obj) constTObjectvirtual; CompressName(const char *method_name)TQObjectprotectedstatic; Connect(const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObject; Connect(TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connect(const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connected(const char *)TQObjectinlinevirtual; ConnectToClass(TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; ConnectToClass(const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; Copy(TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTimer-members.html:1053,Clear,Clear,1053,doc/master/classTTimer-members.html,https://root.cern,https://root.cern/doc/master/classTTimer-members.html,1,['Clear'],['Clear']
Usability," AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddPointError(Double_t x, Double_t y, Double_t exl, Double_t exh, Double_t eyl, Double_t eyh, Double_t exld=0, Double_t exhd=0, Double_t eyld=0, Double_t eyhd=0)TGraphBentErrorsvirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; Allocate(Int_t size) overrideTGraphBentErrorsinlineprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f) overrideTGraphBentErrorsvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphBentErrorsstatic; Class_Name()TGraphBentErrorsstatic; Class_Version()TGraphBentErrorsinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideTGraphBentErrorsvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideTGraphBentErrorsprotectedvirtual; CopyPoints(Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphBentErrors-members.html:1104,Clear,Clear,1104,doc/master/classTGraphBentErrors-members.html,https://root.cern,https://root.cern/doc/master/classTGraphBentErrors-members.html,1,['Clear'],['Clear']
Usability," AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AddYError(Int_t np, const Double_t *eyL=nullptr, const Double_t *eyH=nullptr)TGraphMultiErrorsvirtual; Allocate(Int_t size) overrideTGraphMultiErrorsprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f) overrideTGraphMultiErrorsvirtual; BayesDivide(const TH1 *pass, const TH1 *total, Option_t *opt="""")TGraphMultiErrorsvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CalcYErrorsSum() constTGraphMultiErrorsprotected; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphMultiErrorsstatic; Class_Name()TGraphMultiErrorsstatic; Class_Version()TGraphMultiErrorsinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideTGraphMultiErrorsvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors-members.html:1162,Clear,Clear,1162,doc/master/classTGraphMultiErrors-members.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors-members.html,1,['Clear'],['Clear']
Usability," AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; Allocate(Int_t newsize)TGraphprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f)TGraphvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphQQstatic; Class_Name()TGraphQQstatic; Class_Version()TGraphQQinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) constTGraphvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin)TGraphprotectedvirtual; CopyPoints(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin)TGraphprotectedvirtual; CtorAllocate()TGraphprotected; DeclFileName()TGraphQQinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphQQ-members.html:837,Clear,Clear,837,doc/master/classTGraphQQ-members.html,https://root.cern,https://root.cern/doc/master/classTGraphQQ-members.html,1,['Clear'],['Clear']
Usability," AbstractMethod(const char *method) constTObject; Add(TF1 *f, Double_t c1=1)TGraphvirtual; AddPoint(Double_t x, Double_t y)TGraphinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; Allocate(Int_t newsize)TGraphprotectedvirtual; AllocateArrays(Int_t Narrays, Int_t arraySize)TGraphprotected; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF1 *f)TGraphvirtual; Browse(TBrowser *b) overrideTGraphvirtual; CheckedHash()TObjectinline; Chisquare(TF1 *f1, Option_t *option="""") constTGraphvirtual; Class()TGraphstatic; Class_Name()TGraphstatic; Class_Version()TGraphinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; CompareArg(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareRadius(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareX(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; CompareY(const TGraph *gr, Int_t left, Int_t right)TGraphstatic; ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) constTGraphvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin)TGraphprotectedvirtual; CopyPoints(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin)TGraphprotectedvirtual; CtorAllocate()TGraphprotected; DeclFileName()TGraphinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph-members.html:827,Clear,Clear,827,doc/master/classTGraph-members.html,https://root.cern,https://root.cern/doc/master/classTGraph-members.html,1,['Clear'],['Clear']
Usability," AbstractMethod(const char *method) constTObject; Add(TObject *obj, Bool_t replace=kFALSE)TDirectoryinlinevirtual; AddDirectory(Bool_t add=kTRUE)TDirectorystatic; AddDirectoryStatus()TDirectorystatic; AddToTObjectTable(TObject *)TObjectprivatestatic; Append(TObject *obj, Bool_t replace=kFALSE)TDirectoryvirtual; AppendKey(TKey *)TDirectoryinlinevirtual; AppendPad(Option_t *option="""")TObjectvirtual; Browse(TBrowser *b) overrideTDirectoryvirtual; Build(TFile *motherFile=nullptr, TDirectory *motherDir=nullptr)TDirectoryinlinevirtual; BuildDirectory(TFile *motherFile, TDirectory *motherDir)TDirectoryprotected; cd()TDirectoryvirtual; cd(const char *path)TDirectoryvirtual; Cd(const char *path)TDirectorystatic; Cd1(const char *path)TDirectoryprotectedstatic; cd1(const char *path)TDirectoryprotected; CheckedHash()TObjectinline; Class()TDirectorystatic; Class_Name()TDirectorystatic; Class_Version()TDirectoryinlinestatic; ClassName() constTObjectvirtual; CleanTargets()TDirectoryprotected; Clear(Option_t *option="""") overrideTDirectoryvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneObject(const TObject *obj, Bool_t autoadd=kTRUE)TDirectoryvirtual; Close(Option_t *option="""")TDirectoryvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; Copy(TObject &) const overrideTDirectoryinlinevirtual; CurrentDirectory()TDirectorystatic; DeclFileName()TDirectoryinlinestatic; DecodeNameCycle(const char *namecycle, char *name, Short_t &cycle, const size_t namesize=0)TDirectorystatic; Delete(const char *namecycle="""") overrideTDirectoryvirtual; DeleteAll(Option_t *option="""")TDirectoryvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDirectory-members.html:1204,Clear,Clear,1204,doc/master/classTDirectory-members.html,https://root.cern,https://root.cern/doc/master/classTDirectory-members.html,1,['Clear'],['Clear']
Usability," AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; ApplicationName() constTApplicationinlinevirtual; AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; Argc() constTApplicationinline; Argv() constTApplicationinline; Argv(Int_t index) constTApplication; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; Browse(TBrowser *b)TObjectvirtual; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; CheckedHash()TObjectinline; Class()TApplicationstatic; Class_Name()TApplicationstatic; Class_Version()TApplicationinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; ClearInputFiles()TApplication; Clone(const char *newname="""") constTObjectvirtual; Close(TApplication *app)TApplicationprotectedstatic; CollectClassSignalLists(TList &list, TClass *cls)TQObject; Compare(const TObject *obj) constTObjectvirtual; CompressName(const char *method_name)TQObjectprotectedstatic; Connect(const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObject; Connect(TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connect(const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connected(const char *)TQObjectinlinevirtual; ConnectToClass(TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; ConnectToClass(const char *sender_class, const char *signal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplication-members.html:1061,Clear,Clear,1061,doc/master/classTApplication-members.html,https://root.cern,https://root.cern/doc/master/classTApplication-members.html,2,['Clear'],"['Clear', 'ClearInputFiles']"
Usability," AbstractMethod(const char *method) constTObject; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; ApplicationName() constTApplicationinlinevirtual; AreAllSignalsBlocked()TQObjectstatic; AreSignalsBlocked() constTQObjectinline; Argc() constTApplicationinline; Argv() constTApplicationinline; Argv(Int_t index) constTApplication; BlockAllSignals(Bool_t b)TQObjectstatic; BlockSignals(Bool_t b)TQObjectinline; Browse(TBrowser *b)TObjectvirtual; ChangedBy(const char *method)TQObjectinlinevirtual; CheckConnectArgs(TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot)TQObjectprotectedstatic; CheckedHash()TObjectinline; Class()TRintstatic; Class_Name()TRintstatic; Class_Version()TRintinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *="""")TObjectinlinevirtual; ClearInputFiles()TApplication; Clone(const char *newname="""") constTObjectvirtual; Close(TApplication *app)TApplicationprotectedstatic; CollectClassSignalLists(TList &list, TClass *cls)TQObject; Compare(const TObject *obj) constTObjectvirtual; CompressName(const char *method_name)TQObjectprotectedstatic; Connect(const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObject; Connect(TQObject *sender, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connect(const char *sender_class, const char *signal, const char *receiver_class, void *receiver, const char *slot)TQObjectstatic; Connected(const char *)TQObjectinlinevirtual; ConnectToClass(TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot)TQObjectprotectedstatic; ConnectToClass(const char *sender_class, const char *signal, TClass *receiver_class, void *rec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRint-members.html:1026,Clear,Clear,1026,doc/master/classTRint-members.html,https://root.cern,https://root.cern/doc/master/classTRint-members.html,2,['Clear'],"['Clear', 'ClearInputFiles']"
Usability," AddLast is not allowed in this class. ; See TList::AddLast for the intended behavior. ; Reimplemented from TList.; Definition at line 158 of file TViewPubFunctions.cxx. ◆ After(). TObject * TViewPubFunctions::After ; (; const TObject * ; obj); const. overrideprotectedvirtual . After is not allowed in this class. ; See TList::After for the intended behavior. ; Reimplemented from TList.; Definition at line 231 of file TViewPubFunctions.cxx. ◆ At(). TObject * TViewPubFunctions::At ; (; Int_t ; idx); const. overridevirtual . Returns the object at position idx. Returns 0 if idx is out of range. ; Reimplemented from TList.; Definition at line 211 of file TViewPubFunctions.cxx. ◆ Before(). TObject * TViewPubFunctions::Before ; (; const TObject * ; obj); const. overrideprotectedvirtual . Before is not allowed in this class. ; See TList::Before for the intended behavior. ; Reimplemented from TList.; Definition at line 241 of file TViewPubFunctions.cxx. ◆ Clear(). void TViewPubFunctions::Clear ; (; Option_t * ; option = """"). overrideprotectedvirtual . Clear is not allowed in this class. ; See TList::Clear for the intended behavior. ; Reimplemented from TList.; Definition at line 69 of file TViewPubFunctions.cxx. ◆ Delete(). void TViewPubFunctions::Delete ; (; Option_t * ; option = """"). overrideprotectedvirtual . Delete is not allowed in this class. ; See TList::Delete for the intended behavior. ; Reimplemented from TList.; Definition at line 78 of file TViewPubFunctions.cxx. ◆ FindObject() [1/2]. TObject * TViewPubFunctions::FindObject ; (; const char * ; name); const. overridevirtual . Find an object in this list using its name. ; Requires a sequential scan till the object has been found. Returns 0 if object with specified name is not found. ; Reimplemented from TList.; Definition at line 88 of file TViewPubFunctions.cxx. ◆ FindObject() [2/2]. TObject * TViewPubFunctions::FindObject ; (; const TObject * ; obj); const. overridevirtual . Find an object in this list using the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTViewPubFunctions.html:24165,Clear,Clear,24165,doc/master/classTViewPubFunctions.html,https://root.cern,https://root.cern/doc/master/classTViewPubFunctions.html,1,['Clear'],['Clear']
Usability," AddLast(TObject *obj)=0; TSeqCollection::AddBeforevirtual void AddBefore(const TObject *before, TObject *obj)=0; TSeqCollection::RemoveFirstvirtual void RemoveFirst()Definition TSeqCollection.h:44; TSeqCollection::Beforevirtual TObject * Before(const TObject *obj) const =0; TSeqCollection::TSeqCollectionTSeqCollection()Definition TSeqCollection.h:33; TSeqCollection::AddAtvirtual void AddAt(TObject *obj, Int_t idx)=0; TSeqCollection::Lastvirtual TObject * Last() const =0; TSeqCollection::AddAftervirtual void AddAfter(const TObject *after, TObject *obj)=0; TSeqCollection::RemoveAftervirtual void RemoveAfter(TObject *after)Definition TSeqCollection.h:47; TSeqCollection::IsSortedvirtual Bool_t IsSorted() constDefinition TSeqCollection.h:58; TSeqCollection::Changedvirtual void Changed()Definition TSeqCollection.h:34; TSeqCollection::QSortstatic void QSort(TObject **a, Int_t first, Int_t last)Sort array of TObject pointers using a quicksort algorithm.Definition TSeqCollection.cxx:70; TSeqCollection::fSortedBool_t fSortedDefinition TSeqCollection.h:31; TSeqCollection::UnSortvoid UnSort()Definition TSeqCollection.h:59; TSeqCollection::Firstvirtual TObject * First() const =0; TSeqCollection::MergeLong64_t Merge(TCollection *list)Merge this collection with all collections coming in the input list.Definition TSeqCollection.cxx:185; TSeqCollection::GetLastvirtual Int_t GetLast() constReturns index of last object in collection.Definition TSeqCollection.cxx:47; TSeqCollection::ObjComparestatic Int_t ObjCompare(TObject *a, TObject *b)Compare to objects in the collection. Use member Compare() of object a.Definition TSeqCollection.cxx:56; TSeqCollection::Atvirtual TObject * At(Int_t idx) const =0; TSeqCollection::AddFirstvirtual void AddFirst(TObject *obj)=0; TSeqCollection::Addvoid Add(TObject *obj) overrideDefinition TSeqCollection.h:38; bool; int. corecontincTSeqCollection.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:09 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSeqCollection_8h_source.html:6424,Guid,Guide,6424,doc/master/TSeqCollection_8h_source.html,https://root.cern,https://root.cern/doc/master/TSeqCollection_8h_source.html,1,['Guid'],['Guide']
Usability," AddRange(unsigned int icoord, double xmin, double xmax)ROOT::Fit::DataRange; AddRange(double xmin, double xmax)ROOT::Fit::DataRangeinline; AddRange(double xmin, double xmax, double ymin, double ymax)ROOT::Fit::DataRangeinline; AddRange(double xmin, double xmax, double ymin, double ymax, double zmin, double zmax)ROOT::Fit::DataRangeinline; CleanRangeSet(unsigned int icoord, double xmin, double xmax)ROOT::Fit::DataRangeprotected; Clear(unsigned int icoord=0)ROOT::Fit::DataRange; DataRange(unsigned int dim=1)ROOT::Fit::DataRangeinlineexplicit; DataRange(double xmin, double xmax)ROOT::Fit::DataRange; DataRange(double xmin, double xmax, double ymin, double ymax)ROOT::Fit::DataRange; DataRange(double xmin, double xmax, double ymin, double ymax, double zmin, double zmax)ROOT::Fit::DataRange; fRangesROOT::Fit::DataRangeprivate; GetInfRange(double &x1, double &x2)ROOT::Fit::DataRangeprotectedstatic; GetRange(unsigned int irange, unsigned int icoord, double &xmin, double &xmax) constROOT::Fit::DataRangeinline; GetRange(unsigned int icoord, double &xmin, double &xmax) constROOT::Fit::DataRangeinline; GetRange(double &xmin, double &xmax, unsigned int irange=0) constROOT::Fit::DataRangeinline; GetRange(double &xmin, double &xmax, double &ymin, double &ymax, unsigned int irange=0) constROOT::Fit::DataRangeinline; GetRange(double &xmin, double &xmax, double &ymin, double &ymax, double &zmin, double &zmax, unsigned int irange=0) constROOT::Fit::DataRangeinline; GetRange(double *xmin, double *xmax, unsigned int irange=0) constROOT::Fit::DataRangeinline; IsInside(double x, unsigned int icoord=0) constROOT::Fit::DataRange; IsInside(const double *x) constROOT::Fit::DataRangeinline; IsSet() constROOT::Fit::DataRangeinline; NDim() constROOT::Fit::DataRangeinlin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1DataRange-members.html:664,Clear,Clear,664,doc/master/classROOT_1_1Fit_1_1DataRange-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1DataRange-members.html,1,['Clear'],['Clear']
Usability," Adding bins to it will extend it up to a proper size. TH2Poly implements a partitioning algorithm to speed up bins' filling.; The partitioning algorithm divides the histogram into regions called cells.; The bins that each cell intersects are recorded in an array of TLists.; When a coordinate in the histogram is to be filled; the method (quickly) finds; which cell the coordinate belongs. It then only loops over the bins; intersecting that cell to find the bin the input coordinate corresponds to.; The partitioning of the histogram is updated continuously as each bin is added.; The default number of cells on each axis is 25. This number could be set to; another value in the constructor or adjusted later by calling the; ChangePartition(Int_t, Int_t) method. The partitioning algorithm is; considerably faster than the brute force algorithm (i.e. checking if each bin; contains the input coordinates), especially if the histogram is to be filled; many times. The following very simple macro shows how to build and fill a TH2Poly:. {; TH2Poly *h2p = new TH2Poly();; Double_t x1[] = {0, 5, 5};; Double_t y1[] = {0, 0, 5};; Double_t x2[] = {0, -1, -1, 0};; Double_t y2[] = {0, 0, -1, -1};; Double_t x3[] = {4, 3, 0, 1, 2.4};; Double_t y3[] = {4, 3.7, 1, 4.7, 3.5};; h2p->AddBin(3, x1, y1);; h2p->AddBin(3, x2, y2);; h2p->AddBin(3, x3, y3);; h2p->Fill( 3, 1, 3); // fill bin 1; h2p->Fill(-0.5, -0.5, 7); // fill bin 2; h2p->Fill(-0.7, -0.5, 1); // fill bin 2; h2p->Fill( 1, 3, 5); // fill bin 3; }. More examples can bin found in $ROOTSYS/tutorials/hist/th2poly*.C; Partitioning Algorithm; The partitioning algorithm forms an essential part of the TH2Poly; class. It is implemented to speed up the filling of bins. With the brute force approach, the filling is done in the following way: An; iterator loops over all bins in the TH2Poly and invokes the; method IsInside() for each of them.; This method checks if the input location is in that bin. If the filling; coordinate is inside, the bin is fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH2Poly.html:2632,simpl,simple,2632,root/html528/TH2Poly.html,https://root.cern,https://root.cern/root/html528/TH2Poly.html,3,['simpl'],['simple']
Usability," Adding bins to it will extend it up to a proper size. TH2Poly implements a partitioning algorithm to speed up bins' filling.; The partitioning algorithm divides the histogram into regions called cells.; The bins that each cell intersects are recorded in an array of TLists.; When a coordinate in the histogram is to be filled; the method (quickly) finds; which cell the coordinate belongs. It then only loops over the bins; intersecting that cell to find the bin the input coordinate corresponds to.; The partitioning of the histogram is updated continuously as each bin is added.; The default number of cells on each axis is 25. This number could be set to; another value in the constructor or adjusted later by calling the; ChangePartition(Int_t, Int_t) method. The partitioning algorithm is; considerably faster than the brute force algorithm (i.e. checking if each bin; contains the input coordinates), especially if the histogram is to be filled; many times. The following very simple macro shows how to build and fill a TH2Poly:. {; TH2Poly *h2p = new TH2Poly();; Double_t x1[] = {0, 5, 6};; Double_t y1[] = {0, 0, 5};; Double_t x2[] = {0, -1, -1, 0};; Double_t y2[] = {0, 0, -1, 3};; Double_t x3[] = {4, 3, 0, 1, 2.4};; Double_t y3[] = {4, 3.7, 1, 3.7, 2.5};; h2p->AddBin(3, x1, y1);; h2p->AddBin(4, x2, y2);; h2p->AddBin(5, x3, y3);; h2p->Fill(0.1, 0.01, 3);; h2p->Fill(-0.5, -0.5, 7);; h2p->Fill(-0.7, -0.5, 1);; h2p->Fill(1, 3, 1.5);; }. More examples can bin found in $ROOTSYS/tutorials/hist/th2poly*.C; Partitioning Algorithm; The partitioning algorithm forms an essential part of the TH2Poly; class. It is implemented to speed up the filling of bins. With the brute force approach, the filling is done in the following way: An; iterator loops over all bins in the TH2Poly and invokes the; method IsInside() for each of them.; This method checks if the input location is in that bin. If the filling; coordinate is inside, the bin is filled. Looping over all the bin is; very slow. The al",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TH2Poly.html:2633,simpl,simple,2633,root/html534/TH2Poly.html,https://root.cern,https://root.cern/root/html534/TH2Poly.html,5,['simpl'],['simple']
Usability," Allocate(UInt_t n, Bool_t forceDelete) overrideTGenCollectionProxyvirtual; ArrIterfunc_t typedefTGenCollectionProxyprotected; At(UInt_t idx) overrideTGenSetProxyinlinevirtual; CheckFunctions() constTGenCollectionProxyprotected; Clear(const char *opt="""") overrideTGenCollectionProxyvirtual; Collectfunc_t typedefTGenCollectionProxyprotected; Commit(void *env) overrideTGenCollectionProxyvirtual; CopyIterator_t typedefTVirtualCollectionProxy; CreateIterators_t typedefTVirtualCollectionProxy; DeleteArray(void *p, Bool_t dtorOnly=kFALSE) constTVirtualCollectionProxyinlinevirtual; DeleteItem(Bool_t force, void *ptr) const overrideTGenMapProxyinlinevirtual; DeleteIterator_t typedefTVirtualCollectionProxy; DeleteTwoIterators_t typedefTVirtualCollectionProxy; Destructor(void *p, Bool_t dtorOnly=kFALSE) constTVirtualCollectionProxyinlinevirtual; Env_t typedefTGenCollectionProxyprotected; EnvironBase_t typedefTGenCollectionProxyprotected; EProperty enum nameTVirtualCollectionProxy; fClassTVirtualCollectionProxyprotected; fClearTGenCollectionProxyprotected; fCollectTGenCollectionProxyprotected; fConstructTGenCollectionProxyprotected; fConversionReadMemberWiseTGenCollectionProxymutableprotected; fCreateEnvTGenCollectionProxyprotected; fDestructTGenCollectionProxyprotected; Feedfunc_t typedefTGenCollectionProxyprotected; fEnvTGenCollectionProxyprotected; fFeedTGenCollectionProxyprotected; fFirstTGenCollectionProxyprotected; fFunctionCopyIteratorTGenCollectionProxyprotected; fFunctionCreateIteratorsTGenCollectionProxyprotected; fFunctionDeleteIteratorTGenCollectionProxyprotected; fFunctionDeleteTwoIteratorsTGenCollectionProxyprotected; fFunctionNextIteratorTGenCollectionProxyprotected; fgIteratorArenaSizeTVirtualCollectionProxystatic; fKeyTGenCollectionProxyprotected; fNa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenMapProxy-members.html:444,Clear,Clear,444,doc/master/classTGenMapProxy-members.html,https://root.cern,https://root.cern/doc/master/classTGenMapProxy-members.html,1,['Clear'],['Clear']
Usability," Allocate(UInt_t n, Bool_t forceDelete)=0TVirtualCollectionProxypure virtual; At(UInt_t idx)=0TVirtualCollectionProxypure virtual; Clear(const char *opt="""")=0TVirtualCollectionProxypure virtual; Commit(void *)=0TVirtualCollectionProxypure virtual; CopyIterator_t typedefTVirtualCollectionProxy; CreateIterators_t typedefTVirtualCollectionProxy; DeleteArray(void *p, Bool_t dtorOnly=kFALSE) constTVirtualCollectionProxyinlinevirtual; DeleteIterator_t typedefTVirtualCollectionProxy; DeleteTwoIterators_t typedefTVirtualCollectionProxy; Destructor(void *p, Bool_t dtorOnly=kFALSE) constTVirtualCollectionProxyinlinevirtual; EProperty enum nameTVirtualCollectionProxy; fClassTVirtualCollectionProxyprotected; fgIteratorArenaSizeTVirtualCollectionProxystatic; fPropertiesTVirtualCollectionProxyprotected; Generate() const =0TVirtualCollectionProxypure virtual; GetCollectionClass() constTVirtualCollectionProxyinlinevirtual; GetCollectionType() const =0TVirtualCollectionProxypure virtual; GetConversionReadMemberWiseActions(TClass *oldClass, Int_t version)=0TVirtualCollectionProxypure virtual; GetFunctionCopyIterator(Bool_t read=kTRUE)=0TVirtualCollectionProxypure virtual; GetFunctionCreateIterators(Bool_t read=kTRUE)=0TVirtualCollectionProxypure virtual; GetFunctionDeleteIterator(Bool_t read=kTRUE)=0TVirtualCollectionProxypure virtual; GetFunctionDeleteTwoIterators(Bool_t read=kTRUE)=0TVirtualCollectionProxypure virtual; GetFunctionNext(Bool_t read=kTRUE)=0TVirtualCollectionProxypure virtual; GetIncrement() const =0TVirtualCollectionProxypure virtual; GetProperties() constTVirtualCollectionProxyinlinevirtual; GetReadMemberWiseActions(Int_t version)=0TVirtualCollectionProxypure virtual; GetType() const =0TVirtualCollectionProxypure virtual; GetValueClas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualCollectionProxy-members.html:368,Clear,Clear,368,doc/master/classTVirtualCollectionProxy-members.html,https://root.cern,https://root.cern/doc/master/classTVirtualCollectionProxy-members.html,1,['Clear'],['Clear']
Usability," AnnotatedRecordDecl & ; cl, . const clang::CXXRecordDecl * ; decl, . const cling::Interpreter & ; interp, . const TNormalizedCtxt & ; normCtxt, . const RConstructorTypes & ; ctorTypes, . bool & ; needCollectionProxy . ). FIXME: a function of 450+ lines! ; Definition at line 1694 of file TClingUtils.cxx. ◆ WriteNamespaceHeader() [1/2]. int ROOT::TMetaUtils::WriteNamespaceHeader ; (; std::ostream & ; out, . const clang::DeclContext * ; ctxt . ). Write all the necessary opening part of the namespace and return the number of closing brackets needed For example for Space1::Space2 we write: namespace Space1 { namespace Space2 { and return 2. ; Definition at line 2206 of file TClingUtils.cxx. ◆ WriteNamespaceHeader() [2/2]. int ROOT::TMetaUtils::WriteNamespaceHeader ; (; std::ostream & ; out, . const clang::RecordDecl * ; cl . ). Definition at line 2230 of file TClingUtils.cxx. ◆ WritePointersSTL(). void ROOT::TMetaUtils::WritePointersSTL ; (; const AnnotatedRecordDecl & ; cl, . const cling::Interpreter & ; interp, . const TNormalizedCtxt & ; normCtxt . ). Write interface function for STL members. ; Definition at line 2459 of file TClingUtils.cxx. Variable Documentation. ◆ kError. const int ROOT::TMetaUtils::kError = 2000. Definition at line 129 of file TClingUtils.h. ◆ kFatal. const int ROOT::TMetaUtils::kFatal = 4000. Definition at line 131 of file TClingUtils.h. ◆ kInfo. const int ROOT::TMetaUtils::kInfo = 0. Definition at line 126 of file TClingUtils.h. ◆ kMaxLen. const int ROOT::TMetaUtils::kMaxLen = 1024. Definition at line 132 of file TClingUtils.h. ◆ kNote. const int ROOT::TMetaUtils::kNote = 500. Definition at line 127 of file TClingUtils.h. ◆ kSysError. const int ROOT::TMetaUtils::kSysError = 3000. Definition at line 130 of file TClingUtils.h. ◆ kWarning. const int ROOT::TMetaUtils::kWarning = 1000. Definition at line 128 of file TClingUtils.h. ROOTTMetaUtils. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:14:05 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1TMetaUtils.html:53607,Guid,Guide,53607,doc/v632/namespaceROOT_1_1TMetaUtils.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1TMetaUtils.html,1,['Guid'],['Guide']
Usability," Architecture_t, Layer_t >::SetInputWidth ; (; size_t ; inputWidth). inline . Definition at line 360 of file DeepNet.h. ◆ SetLossFunction(). template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>> . void TMVA::DNN::TDeepNet< Architecture_t, Layer_t >::SetLossFunction ; (; ELossFunction ; J). inline . Definition at line 364 of file DeepNet.h. ◆ SetRegularization(). template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>> . void TMVA::DNN::TDeepNet< Architecture_t, Layer_t >::SetRegularization ; (; ERegularization ; R). inline . Definition at line 366 of file DeepNet.h. ◆ SetWeightDecay(). template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>> . void TMVA::DNN::TDeepNet< Architecture_t, Layer_t >::SetWeightDecay ; (; Scalar_t ; weightDecay). inline . Definition at line 367 of file DeepNet.h. ◆ Update(). template<typename Architecture_t , typename Layer_t > . auto TMVA::DNN::TDeepNet< Architecture_t, Layer_t >::Update ; (; Scalar_t ; learningRate). Function that will update the weights and biases in the layers that contain weights and biases. . Definition at line 1254 of file DeepNet.h. Member Data Documentation. ◆ fBatchDepth. template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>> . size_t TMVA::DNN::TDeepNet< Architecture_t, Layer_t >::fBatchDepth. private . The depth of the batch used for training/testing. ; Definition at line 93 of file DeepNet.h. ◆ fBatchHeight. template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>> . size_t TMVA::DNN::TDeepNet< Architecture_t, Layer_t >::fBatchHeight. private . The height of the batch used for training/testing. ; Definition at line 94 of file DeepNet.h. ◆ fBatchSize. template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>> . size_t TMVA::DNN::TDeepNet< Architecture_t, Layer_t >::fBatchSize. private . Batch size used for training and evaluation. ; Definition a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TDeepNet.html:29012,learn,learningRate,29012,doc/master/classTMVA_1_1DNN_1_1TDeepNet.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TDeepNet.html,1,['learn'],['learningRate']
Usability," Architecture_t, Layer_t >::SetWeightDecay ; (; Scalar_t ; weightDecay). inline . Definition at line 152 of file Net.h. Member Data Documentation. ◆ fBatchSize. template<typename Architecture_t , typename Layer_t = TLayer<Architecture_t>> . size_t TMVA::DNN::TNet< Architecture_t, Layer_t >::fBatchSize. private . Batch size for training and evaluation of the Network. ; Definition at line 57 of file Net.h. ◆ fDummy. template<typename Architecture_t , typename Layer_t = TLayer<Architecture_t>> . Matrix_t TMVA::DNN::TNet< Architecture_t, Layer_t >::fDummy. private . Empty matrix for last step in back propagation. ; Definition at line 62 of file Net.h. ◆ fInputWidth. template<typename Architecture_t , typename Layer_t = TLayer<Architecture_t>> . size_t TMVA::DNN::TNet< Architecture_t, Layer_t >::fInputWidth. private . Number of features in a single input event. ; Definition at line 58 of file Net.h. ◆ fJ. template<typename Architecture_t , typename Layer_t = TLayer<Architecture_t>> . ELossFunction TMVA::DNN::TNet< Architecture_t, Layer_t >::fJ. private . The loss function of the network. ; Definition at line 63 of file Net.h. ◆ fLayers. template<typename Architecture_t , typename Layer_t = TLayer<Architecture_t>> . std::vector<Layer_t> TMVA::DNN::TNet< Architecture_t, Layer_t >::fLayers. private . Layers in the network. ; Definition at line 60 of file Net.h. ◆ fR. template<typename Architecture_t , typename Layer_t = TLayer<Architecture_t>> . ERegularization TMVA::DNN::TNet< Architecture_t, Layer_t >::fR. private . The regularization used for the network. ; Definition at line 64 of file Net.h. ◆ fWeightDecay. template<typename Architecture_t , typename Layer_t = TLayer<Architecture_t>> . Scalar_t TMVA::DNN::TNet< Architecture_t, Layer_t >::fWeightDecay. private . The weight decay factor. ; Definition at line 65 of file Net.h. tmva/tmva/inc/TMVA/DNN/Net.h. TMVADNNTNet. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:46 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TNet.html:17943,Guid,Guide,17943,doc/master/classTMVA_1_1DNN_1_1TNet.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TNet.html,1,['Guid'],['Guide']
Usability," Args> . Helper ROOT::Detail::RDF::RActionImpl< Helper >::CallMakeNew ; (; void * ; , . Args... ;  . ). inline . Definition at line 58 of file RActionImpl.hxx. ◆ CallMakeNew() [2/2]. template<typename Helper > . template<typename T = Helper> . auto ROOT::Detail::RDF::RActionImpl< Helper >::CallMakeNew ; (; void * ; typeErasedResSharedPtr); -> decltype(std::declval<T>().MakeNew(typeErasedResSharedPtr)); . inline . Definition at line 52 of file RActionImpl.hxx. ◆ CallPartialUpdate() [1/2]. template<typename Helper > . template<typename... Args> . void * ROOT::Detail::RDF::RActionImpl< Helper >::CallPartialUpdate ; (;  ; ...). inline . Definition at line 46 of file RActionImpl.hxx. ◆ CallPartialUpdate() [2/2]. template<typename Helper > . template<typename H = Helper> . auto ROOT::Detail::RDF::RActionImpl< Helper >::CallPartialUpdate ; (; unsigned int ; slot); -> decltype(std::declval<H>().PartialUpdate(slot), (void *)(nullptr)); . inline . Definition at line 40 of file RActionImpl.hxx. ◆ GetMergeableValue(). template<typename Helper > . virtual std::unique_ptr< RMergeableValueBase > ROOT::Detail::RDF::RActionImpl< Helper >::GetMergeableValue ; (; ); const. inlinevirtual . Definition at line 66 of file RActionImpl.hxx. ◆ GetSampleCallback(). template<typename Helper > . virtual ROOT::RDF::SampleCallback_t ROOT::Detail::RDF::RActionImpl< Helper >::GetSampleCallback ; (; ). inlinevirtual . Override this method to register a callback that is executed before the processing a new data sample starts. ; The callback will be invoked in the same conditions as with DefinePerSample(). ; Reimplemented in ROOT::RDF::Experimental::ProgressBarAction.; Definition at line 73 of file RActionImpl.hxx. The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooAbsDataHelper.h; tree/dataframe/inc/ROOT/RDF/RActionImpl.hxx. ROOTDetailRDFRActionImpl. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:02 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RActionImpl.html:4219,Guid,Guide,4219,doc/master/classROOT_1_1Detail_1_1RDF_1_1RActionImpl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RActionImpl.html,1,['Guid'],['Guide']
Usability," Attributes |; Friends |; List of all members ; TPoint Class Reference. . Definition at line 31 of file TPoint.h. Public Member Functions;  TPoint ();  ;  TPoint (SCoord_t x, SCoord_t y);  ;  TPoint (SCoord_t xy);  ; SCoord_t GetX () const;  ; SCoord_t GetY () const;  ; void SetX (SCoord_t x);  ; void SetY (SCoord_t y);  . Public Attributes; SCoord_t fX;  ; SCoord_t fY;  . Friends; bool operator!= (const TPoint &p1, const TPoint &p2);  ; bool operator== (const TPoint &p1, const TPoint &p2);  . #include <TPoint.h>; Constructor & Destructor Documentation. ◆ TPoint() [1/3]. TPoint::TPoint ; (; ). inline . Definition at line 43 of file TPoint.h. ◆ TPoint() [2/3]. TPoint::TPoint ; (; SCoord_t ; xy). inline . Definition at line 44 of file TPoint.h. ◆ TPoint() [3/3]. TPoint::TPoint ; (; SCoord_t ; x, . SCoord_t ; y . ). inline . Definition at line 45 of file TPoint.h. Member Function Documentation. ◆ GetX(). SCoord_t TPoint::GetX ; (; ); const. inline . Definition at line 46 of file TPoint.h. ◆ GetY(). SCoord_t TPoint::GetY ; (; ); const. inline . Definition at line 47 of file TPoint.h. ◆ SetX(). void TPoint::SetX ; (; SCoord_t ; x). inline . Definition at line 48 of file TPoint.h. ◆ SetY(). void TPoint::SetY ; (; SCoord_t ; y). inline . Definition at line 49 of file TPoint.h. Friends And Related Symbol Documentation. ◆ operator!=. bool operator!= ; (; const TPoint & ; p1, . const TPoint & ; p2 . ). friend . Definition at line 60 of file TPoint.h. ◆ operator==. bool operator== ; (; const TPoint & ; p1, . const TPoint & ; p2 . ). friend . Definition at line 55 of file TPoint.h. Member Data Documentation. ◆ fX. SCoord_t TPoint::fX. Definition at line 35 of file TPoint.h. ◆ fY. SCoord_t TPoint::fY. Definition at line 36 of file TPoint.h. Libraries for TPoint:. [legend]; The documentation for this class was generated from the following file:; core/base/inc/TPoint.h. TPoint. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:09 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPoint.html:2089,Guid,Guide,2089,doc/master/classTPoint.html,https://root.cern,https://root.cern/doc/master/classTPoint.html,1,['Guid'],['Guide']
Usability," Attributes |; List of all members ; TMVA::TTrainingSettings Struct Reference. ; All of the options that can be specified in the training string. ; Definition at line 72 of file MethodDL.h. Public Attributes; size_t batchSize;  ; size_t convergenceSteps;  ; std::vector< Double_t > dropoutProbabilities;  ; Double_t learningRate;  ; size_t maxEpochs;  ; Double_t momentum;  ; bool multithreading;  ; DNN::EOptimizer optimizer;  ; TString optimizerName;  ; std::map< TString, double > optimizerParams;  ; DNN::ERegularization regularization;  ; size_t testInterval;  ; Double_t weightDecay;  . #include <TMVA/MethodDL.h>; Member Data Documentation. ◆ batchSize. size_t TMVA::TTrainingSettings::batchSize. Definition at line 73 of file MethodDL.h. ◆ convergenceSteps. size_t TMVA::TTrainingSettings::convergenceSteps. Definition at line 75 of file MethodDL.h. ◆ dropoutProbabilities. std::vector<Double_t> TMVA::TTrainingSettings::dropoutProbabilities. Definition at line 83 of file MethodDL.h. ◆ learningRate. Double_t TMVA::TTrainingSettings::learningRate. Definition at line 80 of file MethodDL.h. ◆ maxEpochs. size_t TMVA::TTrainingSettings::maxEpochs. Definition at line 76 of file MethodDL.h. ◆ momentum. Double_t TMVA::TTrainingSettings::momentum. Definition at line 81 of file MethodDL.h. ◆ multithreading. bool TMVA::TTrainingSettings::multithreading. Definition at line 85 of file MethodDL.h. ◆ optimizer. DNN::EOptimizer TMVA::TTrainingSettings::optimizer. Definition at line 78 of file MethodDL.h. ◆ optimizerName. TString TMVA::TTrainingSettings::optimizerName. Definition at line 79 of file MethodDL.h. ◆ optimizerParams. std::map<TString,double> TMVA::TTrainingSettings::optimizerParams. Definition at line 84 of file MethodDL.h. ◆ regularization. DNN::ERegularization TMVA::TTrainingSettings::regularization. Definition at line 77 of file MethodDL.h. ◆ testInterval. size_t TMVA::TTrainingSettings::testInterval. Definition at line 74 of file MethodDL.h. ◆ weightDecay. Double_t TMVA::T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structTMVA_1_1TTrainingSettings.html:1155,learn,learningRate,1155,doc/master/structTMVA_1_1TTrainingSettings.html,https://root.cern,https://root.cern/doc/master/structTMVA_1_1TTrainingSettings.html,1,['learn'],['learningRate']
Usability," Attributes; TBranch & fParent;  . Friends; class ::TBranch;  . #include <TBranch.h>; Constructor & Destructor Documentation. ◆ TBulkBranchRead(). ROOT::Experimental::Internal::TBulkBranchRead::TBulkBranchRead ; (; TBranch & ; parent). inlineprivate . Definition at line 83 of file TBranch.h. Member Function Documentation. ◆ GetBulkEntries(). Int_t ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries ; (; Long64_t ; evt, . TBuffer & ; user_buf . ). inline . See TBranch::GetBulkEntries(Long64_t evt, TBuffer &user_buf);. ; Definition at line 320 of file TBranch.h. ◆ GetEntriesSerialized() [1/2]. Int_t ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized ; (; Long64_t ; evt, . TBuffer & ; user_buf . ). inline . See TBranch::GetEntriesSerialized(Long64_t evt, TBuffer &user_buf);. ; Definition at line 321 of file TBranch.h. ◆ GetEntriesSerialized() [2/2]. Int_t ROOT::Experimental::Internal::TBulkBranchRead::GetEntriesSerialized ; (; Long64_t ; evt, . TBuffer & ; user_buf, . TBuffer * ; count_buf . ). inline . See TBranch::GetEntriesSerialized(Long64_t evt, TBuffer &user_buf, TBuffer *count_buf);. ; Definition at line 322 of file TBranch.h. ◆ SupportsBulkRead(). bool ROOT::Experimental::Internal::TBulkBranchRead::SupportsBulkRead ; (; ); const. inline . Return true if the branch can be read through the bulk interfaces. ; Definition at line 323 of file TBranch.h. Friends And Related Symbol Documentation. ◆ ::TBranch. friend class ::TBranch. friend . Definition at line 70 of file TBranch.h. Member Data Documentation. ◆ fParent. TBranch& ROOT::Experimental::Internal::TBulkBranchRead::fParent. private . Definition at line 87 of file TBranch.h. Libraries for ROOT::Experimental::Internal::TBulkBranchRead:. [legend]; The documentation for this class was generated from the following file:; tree/tree/inc/TBranch.h. ROOTExperimentalInternalTBulkBranchRead. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:14 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1TBulkBranchRead.html:3031,Guid,Guide,3031,doc/master/classROOT_1_1Experimental_1_1Internal_1_1TBulkBranchRead.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1Internal_1_1TBulkBranchRead.html,1,['Guid'],['Guide']
Usability," Beta(1,1)Definition TEfficiency.h:40; TEfficiency::kFFC@ kFFCFeldman-Cousins interval.Definition TEfficiency.h:38; TEfficiency::kBBayesian@ kBBayesianUser specified Prior ~ Beta(fBeta_alpha,fBeta_beta)Definition TEfficiency.h:41; TEfficiency::kFNormal@ kFNormalNormal approximation.Definition TEfficiency.h:35; TEfficiency::kFCP@ kFCPClopper-Pearson interval (recommended by PDG)Definition TEfficiency.h:34; TEfficiency::SetTitlevoid SetTitle(const char *title) overrideSets the title.Definition TEfficiency.cxx:3726; TEfficiency::FitTFitResultPtr Fit(TF1 *f1, Option_t *opt="""")Fits the efficiency using the TBinomialEfficiencyFitter class.Definition TEfficiency.cxx:2555; TEfficiency::fPaintHistoTH2 * fPaintHisto! Temporary histogram for paintingDefinition TEfficiency.h:57; TF11-Dim function classDefinition TF1.h:233; TFitResultPtrProvides an indirection to the TFitResult class and with a semantics identical to a TFitResult pointe...Definition TFitResultPtr.h:32; TGraph2DAsymmErrorsGraph 2D class with errors.Definition TGraph2DAsymmErrors.h:26; TGraphAsymmErrorsTGraph with asymmetric error bars.Definition TGraphAsymmErrors.h:26; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH2Service class for 2-D histogram classes.Definition TH2.h:30; TListA doubly linked list.Definition TList.h:38; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; bool; double; int; unsigned int; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; f1TF1 * f1Definition legend1.C:11; graphDefinition graph.py:1; Drawth1 Draw(). histhistincTEfficiency.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8h_source.html:29772,Guid,Guide,29772,doc/master/TEfficiency_8h_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8h_source.html,1,['Guid'],['Guide']
Usability," Bonn, Germany *; 20 * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; 21 * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; 22 * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; 23 * Omar Zapata <Omar.Zapata@cern.ch> - UdeA/ITM Colombia *; 24 * Lorenzo Moneta <Lorenzo.Moneta@cern.ch> - CERN, Switzerland *; 25 * Sergei Gleyzer <Sergei.Gleyzer@cern.ch> - U of Florida & CERN *; 26 * *; 27 * Copyright (c) 2005-2011: *; 28 * CERN, Switzerland *; 29 * U. of Victoria, Canada *; 30 * MPI-K Heidelberg, Germany *; 31 * U. of Bonn, Germany *; 32 * UdeA/ITM, Colombia *; 33 * U. of Florida, USA *; 34 * *; 35 * Redistribution and use in source and binary forms, with or without *; 36 * modification, are permitted according to the terms listed in LICENSE *; 37 * (see tmva/doc/LICENSE) *; 38 **********************************************************************************/; 39 ; 40#ifndef ROOT_TMVA_Factory; 41#define ROOT_TMVA_Factory; 42 ; 43//////////////////////////////////////////////////////////////////////////; 44// //; 45// Factory //; 46// //; 47// This is the main MVA steering class: it creates all MVA methods, //; 48// and guides them through the training, testing and evaluation //; 49// phases //; 50// //; 51//////////////////////////////////////////////////////////////////////////; 52 ; 53#include <vector>; 54#include <map>; 55#include ""TCut.h""; 56 ; 57#include ""TMVA/Configurable.h""; 58#include ""TMVA/Types.h""; 59#include ""TMVA/DataSet.h""; 60 ; 61class TCanvas;; 62class TDirectory;; 63class TFile;; 64class TGraph;; 65class TH1F;; 66class TMultiGraph;; 67class TTree;; 68namespace TMVA {; 69 ; 70 class IMethod;; 71 class MethodBase;; 72 class DataInputHandler;; 73 class DataSetInfo;; 74 class DataSetManager;; 75 class DataLoader;; 76 class ROCCurve;; 77 class VariableTransformBase;; 78 ; 79 ; 80 class Factory : public Configurable {; 81 friend class CrossValidation;; 82 public:; 83 ; 84 typedef std::vector<IMethod*> MVector;; 85 std::map<T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html:2244,guid,guides,2244,doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Factory_8h_source.html,1,['guid'],['guides']
Usability," Bool_t extended = kFALSE); Constructor p.d.f implementing sum_i [ coef_i * func_i ], if N_coef==N_func; or sum_i [ coef_i * func_i ] + (1 - sum_i [ coef_i ] )* func_N if Ncoef==N_func-1. All coefficients and functions are allowed to be negative; but the sum is not, which is enforced at runtime. RooRealSumPdf(const RooRealSumPdf& other, const char* name = 0); Copy constructor. ~RooRealSumPdf(); Destructor. RooAbsPdf::ExtendMode extendMode() const. Double_t evaluate() const; Calculate the current value. Bool_t checkObservables(const RooArgSet* nset) const; Check if FUNC is valid for given normalization set.; Coeffient and FUNC must be non-overlapping, but func-coefficient; pairs may overlap each other. In the present implementation, coefficients may not be observables or derive; from observables. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& numVars, const RooArgSet* normSet, const char* rangeName = 0) const; Advertise that all integrals can be handled internally. Double_t analyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; Implement analytical integrations by deferring integration of component; functions to integrators of components. Double_t expectedEvents(const RooArgSet* nset) const. void printMetaArgs(ostream& os) const; Customized printing of arguments of a RooRealSumPdf to more intuitively reflect the contents of the; product operator construction. TObject* clone(const char* newname) const; { return new RooRealSumPdf(*this,newname) ; }. Bool_t forceAnalyticalInt(const RooAbsArg& ) const; { return kTRUE ; }. const RooArgList& funcList() const; { return _funcList ; }. const RooArgList& coefList() const; { return _coefList ; }. Double_t expectedEvents(const RooArgSet* nset) const. » Last changed: Mon Jul 4 15:23:52 2011 » Last generated: 2011-07-04 15:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooRealSumPdf.html:43175,intuit,intuitively,43175,root/html530/RooRealSumPdf.html,https://root.cern,https://root.cern/root/html530/RooRealSumPdf.html,1,['intuit'],['intuitively']
Usability," Bool_t reload, Bool_t silent); 4042{; 4043 // We are shutting down, there is no point in reloading, it only triggers; 4044 // redundant deserializations.; 4045 if (fIsShuttingDown) {; 4046 // Remove the decl_id from the DeclIdToTClass map; 4047 if (cl->fClassInfo) {; 4048 R__LOCKGUARD(gInterpreterMutex);; 4049 TClingClassInfo* TClinginfo = (TClingClassInfo*) cl->fClassInfo;; 4050 // Test again as another thread may have set fClassInfo to nullptr.; 4051 if (TClinginfo) {; 4052 TClass::RemoveClassDeclId(TClinginfo->GetDeclId());; 4053 }; 4054 delete TClinginfo;; 4055 cl->fClassInfo = nullptr;; 4056 }; 4057 return;; 4058 }; 4059 ; 4060 R__LOCKGUARD(gInterpreterMutex);; 4061 if (cl->fClassInfo && !reload) {; 4062 return;; 4063 }; 4064 //Remove the decl_id from the DeclIdToTClass map; 4065 TClingClassInfo* TClinginfo = (TClingClassInfo*) cl->fClassInfo;; 4066 if (TClinginfo) {; 4067 TClass::RemoveClassDeclId(TClinginfo->GetDeclId());; 4068 }; 4069 delete TClinginfo;; 4070 cl->fClassInfo = nullptr;; 4071 std::string name(cl->GetName());; 4072 ; 4073 auto SetWithoutClassInfoState = [](TClass *cl); 4074 {; 4075 if (cl->fState != TClass::kHasTClassInit) {; 4076 if (cl->fStreamerInfo->GetEntries() != 0) {; 4077 cl->fState = TClass::kEmulated;; 4078 } else {; 4079 cl->fState = TClass::kForwardDeclared;; 4080 }; 4081 }; 4082 };; 4083 // Handle the special case of 'tuple' where we ignore the real implementation; 4084 // details and just overlay a 'simpler'/'simplistic' version that is easy; 4085 // for the I/O to understand and handle.; 4086 if (strncmp(cl->GetName(),""tuple<"",strlen(""tuple<""))==0) {; 4087 if (!reload); 4088 name = AlternateTuple(cl->GetName(), fInterpreter->getLookupHelper(), silent);; 4089 if (reload || name.empty()) {; 4090 // We could not generate the alternate; 4091 SetWithoutClassInfoState(cl);; 4092 return;; 4093 }; 4094 }; 4095 ; 4096 bool instantiateTemplate = !cl->TestBit(TClass::kUnloading);; 4097 // FIXME: Rather than adding an option to the TClingCl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:157666,simpl,simpler,157666,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,2,['simpl'],"['simpler', 'simplistic']"
Usability," Bool_tAssertCellIdCache() const; TEveRGBAPalette*AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; Bool_tCellInEtaPhiRng(TEveCaloData::CellData_t&) const; virtual voidCellSelectionChanged(); virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTAttBBox::ComputeBBox(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveElement::CSCApplyMainColorToMatchingChildren(); voidTEveElement::CSCApplyMainTransparencyToAllChildren(); voidTEveElement::CSCApplyMainTransparencyToMatchingChildren(); voidTEveElement::CSCImplySelectAllChildren()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveCaloViz.html:2646,Clear,ClearStamps,2646,root/html528/TEveCaloViz.html,https://root.cern,https://root.cern/root/html528/TEveCaloViz.html,6,['Clear'],['ClearStamps']
Usability," Bool_tRooAbsArg::_shapeDirtyFlag set if value needs recalculating because input shapes modified; RooNumIntConfig*RooAbsReal::_specIntegratorConfigNumeric integrator configuration specific for this object; map<string,string>RooAbsArg::_stringAttribString attributes; Bool_tRooAbsReal::_treeVar!do not persist; UInt_tRooAbsReal::_uintValue! Transient cache for unsigned integer values from tree branches; TStringRooAbsReal::_unitUnit for objects value; Double_tRooAbsReal::_valueCache for current value of object; Bool_tRooAbsArg::_valueDirtyFlag set if value needs recalculating because input values modified; static Bool_tRooAbsArg::_verboseDirtyStatic flag controlling verbose messaging for dirty state changes; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooChangeTracker(); Default constructor. RooChangeTracker(const char* name, const char* title, const RooArgSet& trackSet, Bool_t checkValues = kFALSE); Constructor. The set trackSet contains the observables to be; tracked for changes. If checkValues is true an additional; validation step is activated where the numeric values of the; tracked arguments are compared with reference values ensuring; that values have actually changed. RooChangeTracker(const RooChangeTracker& other, const char* name = 0); Copy constructor. Bool_t hasChanged(Bool_t clearState); Returns true if state has changes since last call with clearState=kTRUE; If clearState is true, changeState flag will be cleared. ~RooChangeTracker(); Destructor. RooArgSet parameters() const. TObject* clone(const char* newname) const; { return new RooChangeTracker(*this, newname); }. Double_t evaluate() const; { return 1 ; }. » Last changed: Tue Jun 30 14:32:01 2015 » Last generated: 2015-06-30 14:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooChangeTracker.html:38551,clear,clearState,38551,root/html602/RooChangeTracker.html,https://root.cern,https://root.cern/root/html602/RooChangeTracker.html,4,['clear'],"['clearState', 'cleared']"
Usability," Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); virtual RooFitResult*chi2FitTo(RooDataSet& xydata, const RooLinkedList& cmdList); virtual RooFitResult*chi2FitTo(RooDataHist& data, RooCmdArg arg1 = RooCmdArg::none(), RooCmdArg arg2 = RooCmdArg::none(), RooCmdArg arg3 = RooCmdArg::none(), RooCmdArg arg4 = RooCmdArg::none(), RooCmdArg arg5 = RooCmdArg::none(), RooCmdArg arg6 = RooCmdArg::none(), RooCmdArg arg7 = RooCmdArg::none(), RooCmdArg arg8 = RooCmdArg::none()); virtual RooFitResult*chi2FitTo(RooDataSet& xydata, RooCmdArg arg1 = RooCmdArg::none(), RooCmdArg arg2 = RooCmdArg::none(), RooCmdArg arg3 = RooCmdArg::none(), RooCmdArg arg4 = RooCmdArg::none(), RooCmdArg arg5 = RooCmdArg::none(), RooCmdArg arg6 = RooCmdArg::none(), RooCmdArg arg7 = RooCmdArg::none(), RooCmdArg arg8 = RooCmdArg::none()); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidclearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*RooAbsArg::clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode); virtual voidTNamed::Copy(TObject& named) const; static voidRooAbsArg::copyList(TList& dest, const TList& source); static UInt_tRooAbsArg::crc32(const char* data); virtual RooAbsReal*createChi2(RooDataHist& data, const RooLinkedList& cmdList); virtual RooAbsReal*createChi2(RooDataSet& data, const RooLinkedList& cmdList); virtual RooAbsReal*createChi2(RooDataHist& data, RooCmdArg arg1 = RooCmdArg::none(), RooCmdArg arg2 = RooCmdArg::none(), RooCmdArg arg3 = RooCmdArg::none(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsReal.html:3275,Clear,Clear,3275,root/html526/RooAbsReal.html,https://root.cern,https://root.cern/root/html526/RooAbsReal.html,1,['Clear'],['Clear']
Usability," Bool_tTEveElement::ApplyVizTag(const TString& tag, const TString& fallback_tag = """"); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual Bool_tCanMakeNewSlots() const; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); voidTEveWindow::ClearEveFrame(); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElementList*TEveElementList::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTEveElement::CopyVizParams(const TEveElement* el); virtual voidTEveElement::CopyVizParamsFromDB(); static TEveWindowSlot*TEveWindow::CreateDefaultWindowSlot(); static TEveWindowSlot*TEveWindow::CreateWindowInTab(TGTab* tab, TEveWindow* eve_parent = 0); static TEveWindowSlot*TEveWindow::CreateWindowMainFrame(TEveWindow* eve_parent = 0); voidTEveElement::CSCApplyMainColorToAllChildren(); voidTEveEle",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveWindowPack.html:2392,Clear,ClearStamps,2392,root/html530/TEveWindowPack.html,https://root.cern,https://root.cern/root/html530/TEveWindowPack.html,10,['Clear'],['ClearStamps']
Usability," Bool_tTQObject::AreSignalsBlocked() const; Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTPointSet3D::ClearIds(); virtual voidTEveElement::ClearStamps(); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEvePointSet*CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidClonePoints(const TEvePointSet& e); voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTPointSet3D::ComputeBBox(); Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sende",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEvePointSet.html:3139,Clear,ClearIds,3139,root/html528/TEvePointSet.html,https://root.cern,https://root.cern/root/html528/TEvePointSet.html,1,['Clear'],['ClearIds']
Usability," Bool_tTQObject::AreSignalsBlocked() const; Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTPointSet3D::ClearIds(); virtual voidTEveElement::ClearStamps(); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEvePointSet*TEvePointSet::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEvePointSet::ClonePoints(const TEvePointSet& e); voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidComputeBBox(); Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveTrack.html:2508,Clear,ClearIds,2508,root/html528/TEveTrack.html,https://root.cern,https://root.cern/root/html528/TEveTrack.html,1,['Clear'],['ClearIds']
Usability," Bool_tTQObject::AreSignalsBlocked() const; Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTPointSet3D::ClearIds(); virtual voidTEveElement::ClearStamps(); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEvePointSet*TEvePointSet::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEvePointSet::ClonePoints(const TEvePointSet& e); voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTEveTrack::ComputeBBox(); Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveTrackProjected.html:2367,Clear,ClearIds,2367,root/html528/TEveTrackProjected.html,https://root.cern,https://root.cern/root/html528/TEveTrackProjected.html,1,['Clear'],['ClearIds']
Usability," Bool_tTQObject::AreSignalsBlocked() const; Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTPointSet3D::ClearIds(); virtual voidTEveElement::ClearStamps(); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEvePointSet*TEvePointSet::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEvePointSet::ClonePoints(const TEvePointSet& e); voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTPointSet3D::ComputeBBox(); Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveLine.html:2483,Clear,ClearIds,2483,root/html528/TEveLine.html,https://root.cern,https://root.cern/root/html528/TEveLine.html,3,['Clear'],['ClearIds']
Usability," Bool_tTQObject::AreSignalsBlocked() const; Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTPointSet3D::ClearIds(); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEvePointSet*CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidClonePoints(const TEvePointSet& e); voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTPointSet3D::ComputeBBox(); Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEvePointSet.html:3278,Clear,ClearIds,3278,root/html530/TEvePointSet.html,https://root.cern,https://root.cern/root/html530/TEvePointSet.html,5,['Clear'],['ClearIds']
Usability," Bool_tTQObject::AreSignalsBlocked() const; Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTPointSet3D::ClearIds(); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEvePointSet*TEvePointSet::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEvePointSet::ClonePoints(const TEvePointSet& e); voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidComputeBBox(); Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveTrack.html:2749,Clear,ClearIds,2749,root/html530/TEveTrack.html,https://root.cern,https://root.cern/root/html530/TEveTrack.html,2,['Clear'],['ClearIds']
Usability," Bool_tTQObject::AreSignalsBlocked() const; Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTPointSet3D::ClearIds(); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEvePointSet*TEvePointSet::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEvePointSet::ClonePoints(const TEvePointSet& e); voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTEveTrack::ComputeBBox(); Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveTrackProjected.html:2559,Clear,ClearIds,2559,root/html530/TEveTrackProjected.html,https://root.cern,https://root.cern/root/html530/TEveTrackProjected.html,2,['Clear'],['ClearIds']
Usability," Bool_tTQObject::AreSignalsBlocked() const; Float_t*TAttBBox::AssertBBox(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; TEveProjectable::ProjList_iTEveProjectable::BeginProjecteds(); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTPointSet3D::ClearIds(); virtual voidTEveProjectable::ClearProjectedList(); virtual voidTEveElement::ClearStamps(); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEvePointSet*TEvePointSet::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; virtual voidTEvePointSet::ClonePoints(const TEvePointSet& e); voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTPointSet3D::ComputeBBox(); Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveLine.html:2622,Clear,ClearIds,2622,root/html530/TEveLine.html,https://root.cern,https://root.cern/root/html530/TEveLine.html,9,['Clear'],['ClearIds']
Usability," Bool_tTQObject::AreSignalsBlocked() const; Float_t*TAttBBox::AssertBBox(); TEveRGBAPalette*TEveDigitSet::AssertPalette(); TEveElement::List_iTEveElement::BeginChildren(); TEveElement::List_ciTEveElement::BeginChildren() const; TEveElement::List_iTEveElement::BeginParents(); TEveElement::List_ciTEveElement::BeginParents() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tTEveElement::CanEditElement() const; virtual Bool_tTEveElement::CanEditMainColor() const; virtual Bool_tTEveElement::CanEditMainTrans() const; virtual Bool_tTEveElement::CanEditMainTransparency() const; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTEveElement::CheckReferenceCount(const TEveException& eh = ""TEveElement::CheckReferenceCount ""); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTEveElement::ClearStamps(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidTEveElement::CloneChildrenRecurse(TEveElement* dest, Int_t level = 0) const; virtual TEveElement*TEveElement::CloneElement() const; virtual TEveElement*TEveElement::CloneElementRecurse(Int_t level = 0) const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual voidTEveElement::CollectSceneParents(TEveElement::List_t& scenes); virtual voidTEveElement::CollectSceneParentsFromChildren(TEveElement::List_t& scenes, TEveElement* parent); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveBoxSet.html:3495,Clear,ClearStamps,3495,root/html528/TEveBoxSet.html,https://root.cern,https://root.cern/root/html528/TEveBoxSet.html,12,['Clear'],['ClearStamps']
Usability," Bool_t HandleDNDLeave () override;  Handle drag leave events. ;  ; Atom_t HandleDNDPosition (Int_t, Int_t, Atom_t action, Int_t, Int_t) override;  Handle dragging position events. ;  ; TClass * IsA () const override;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save an embedded canvas as a C++ statement(s) on output stream out. ;  ; void SetAutoFit (Bool_t fit=kTRUE);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGCanvas;  TGCanvas (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kSunkenFrame|kDoubleBorder, Pixel_t back=GetDefaultFrameBackground());  Create a canvas object. ;  ;  ~TGCanvas () override;  Delete canvas. ;  ; virtual void AddFrame (TGFrame *f, TGLayoutHints *l=nullptr);  Adding a frame to a canvas is actually adding the frame to the viewport container. ;  ; virtual void ClearViewPort ();  Clear view port and redraw content. ;  ; void DrawBorder () override;  Draw canvas border. ;  ; TGFrame * GetContainer () const;  ; TGDimension GetDefaultSize () const override;  std::cout << fWidth << ""x"" << fHeight << std::endl; ;  ; virtual Int_t GetHsbPosition () const;  Get position of horizontal scrollbar. ;  ; TGHScrollBar * GetHScrollbar () const;  ; Int_t GetScrolling () const;  ; TGViewPort * GetViewPort () const;  ; virtual Int_t GetVsbPosition () const;  Get position of vertical scrollbar. ;  ; TGVScrollBar * GetVScrollbar () const;  ; void Layout () override;  Create layout for canvas. ;  ; void MapSubwindows () override;  Map all canvas sub windows. ;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Handle message generated by the canvas scrollbars. ;  ; virtual void SetContainer (TGFrame *f);  ; virtual void SetHsbPosition (Int_t newPos);  Set position of horizontal scrollbar. ;  ; void SetScrolling (Int_t scrolling);  Set scrolling ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRootEmbeddedCanvas.html:2211,Clear,ClearViewPort,2211,doc/master/classTRootEmbeddedCanvas.html,https://root.cern,https://root.cern/doc/master/classTRootEmbeddedCanvas.html,2,['Clear'],"['Clear', 'ClearViewPort']"
Usability," Bool_t IsValid () const;  ; virtual Bool_t IsVecGeom () const;  ; void Paint (Option_t *option="""") override;  Paint this shape. ;  ; void ResetShapeBit (UInt_t f);  ; void SetId (Int_t id);  ; void SetRuntime (Bool_t flag=kTRUE);  ; void SetShapeBit (UInt_t f);  ; void SetShapeBit (UInt_t f, Bool_t set);  Equivalent of TObject::SetBit. ;  ; Int_t ShapeDistancetoPrimitive (Int_t numpoints, Int_t px, Int_t py) const;  Returns distance to shape primitive mesh. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Bool_t TestShapeBit (UInt_t f) const;  ; Int_t TestShapeBits (UInt_t f) const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoArb8.html:9277,Clear,Clear,9277,doc/master/classTGeoArb8.html,https://root.cern,https://root.cern/doc/master/classTGeoArb8.html,11,['Clear'],['Clear']
Usability," Bool_t ResizeOffScreenDevice (Int_t devInd, Int_t x, Int_t y, UInt_t w, UInt_t h) override;  Create new DIB if needed. ;  ; Bool_t SelectManip (TVirtualGLManip *manip, const TGLCamera *camera, const TGLRect *rect, const TGLBoundingBox *sceneBox) override;  ; void SelectOffScreenDevice (Int_t devInd) override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGLManager;  TGLManager ();  ;  TGLManager (const TGLManager &)=delete;  ; TGLManager & operator= (const TGLManager &)=delete;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32GLManager.html:2574,Clear,Clear,2574,doc/master/classTGWin32GLManager.html,https://root.cern,https://root.cern/doc/master/classTGWin32GLManager.html,1,['Clear'],['Clear']
Usability," Branch buffers may be; automatically written to disk or kept in memory until the Tree attribute; fMaxVirtualSize is reached. Variables of one branch are written to the; same buffer. A branch buffer is automatically compressed if the file; compression attribute is set (default). Branches may be written to different files (see TBranch::SetFile). The ROOT user can decide to make one single branch and serialize one; object into one single I/O buffer or to make several branches.; Making one single branch and one single buffer can be the right choice; when one wants to process only a subset of all entries in the tree.; (you know for example the list of entry numbers you want to process).; Making several branches is particularly interesting in the data analysis; phase, when one wants to histogram some attributes of an object (entry); without reading all the attributes. ==> TTree *tree = new TTree(name, title); Creates a Tree with name and title. Various kinds of branches can be added to a tree:; A - simple structures or list of variables. (may be for C or Fortran structures); B - any object (inheriting from TObject). (we expect this option be the most frequent); C - a ClonesArray. (a specialized object for collections of same class objects). ==> Case A. TBranch *branch = tree->Branch(branchname, address, leaflist, bufsize); * address is the address of the first item of a structure; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a slash (/).; The variable type may be 0,1 or 2 characters. If no type is given,; the type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is assumed; of type F by default. The list of currently supported types is given below:; - C : a character string terminated by the 0 character; - B : an 8 bit signed integer (Char_t); - b : an 8 bit unsigned integer (UChar_t); - S : a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTree.html:1511,simpl,simple,1511,root/html530/TTree.html,https://root.cern,https://root.cern/root/html530/TTree.html,1,['simpl'],['simple']
Usability," Branch buffers may be; automatically written to disk or kept in memory until the Tree attribute; fMaxVirtualSize is reached. Variables of one branch are written to the; same buffer. A branch buffer is automatically compressed if the file; compression attribute is set (default). Branches may be written to different files (see TBranch::SetFile). The ROOT user can decide to make one single branch and serialize one; object into one single I/O buffer or to make several branches.; Making one single branch and one single buffer can be the right choice; when one wants to process only a subset of all entries in the tree.; (you know for example the list of entry numbers you want to process).; Making several branches is particularly interesting in the data analysis; phase, when one wants to histogram some attributes of an object (entry); without reading all the attributes. ==> TTree *tree = new TTree(name, title); Creates a Tree with name and title. Various kinds of branches can be added to a tree:; A - simple structures or list of variables. (may be for C or Fortran structures); B - any object (inheriting from TObject). (we expect this option be the most frequent); C - a ClonesArray. (a specialized object for collections of same class objects). ==> Case A. TBranch *branch = tree->Branch(branchname, address, leaflist, bufsize); * address is the address of the first item of a structure; * leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a; slash (/). The variable type must be 1 character. (Characters; after the first are legal and will be appended to the visible; name of the leaf, but have no effect.) If no type is given, the; type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is; assumed of type F by default. The list of currently supported; types is given below:; - C : a character string terminated b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTree.html:1511,simpl,simple,1511,root/html532/TTree.html,https://root.cern,https://root.cern/root/html532/TTree.html,4,['simpl'],['simple']
Usability," Build session frame. void ProofInfos(); Display informations on current session. void OnBtnUploadDSet(); Open Upload Dataset dialog. void UpdateListOfDataSets(); Update list of dataset present on the cluster. void OnBtnRemoveDSet(); Remove dataset from the list and from the cluster. void OnBtnVerifyDSet(); Verify that the files in the selected dataset are present on the cluster. void OnApplyLogLevel(); Apply selected log level on current session. void OnApplyParallel(); Apply selected number of workers on current Proof session. void OnMultipleSelection(Bool_t on); Handle multiple selection check button. void OnStartupEnable(Bool_t on); Handle multiple selection check button. void UpdatePackages(); Update list of packages. void OnUploadPackages(); Upload selected package(s) to the current session. void OnEnablePackages(); Enable selected package(s) in the current session. void OnDisablePackages(); Disable selected package(s) in the current session. void OnClearPackages(); Clear (disable) all packages in the current session. void OnBtnAddClicked(); Open file dialog and add selected package file to the list. void OnBtnRemoveClicked(); Remove selected package from the list. void OnBtnUpClicked(); Move selected package entry one position up in the list. void OnBtnDownClicked(); Move selected package entry one position down in the list. void OnBtnDisconnectClicked(); Disconnect from current Proof session. void OnBtnShowLogClicked(); Show session log. void OnBtnNewQueryClicked(); Call ""New Query"" Dialog. void OnBtnGetQueriesClicked(); Get list of queries from current Proof server and populate the list tree. void OnCommandLine(); Command line handling. void SetLocal(Bool_t local = kTRUE); Switch widgets status/visibility for local/remote sessions. void ShutdownSession(); Shutdown current session. Int_t GetLogLevel() const; { return fLogLevel->GetIntNumber(); }. void SetLogLevel(Int_t log); { fLogLevel->SetIntNumber(log); }. void CheckAutoEnPack(Bool_t checked = kTRUE). TGTa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSessionFrame.html:22163,Clear,Clear,22163,root/html528/TSessionFrame.html,https://root.cern,https://root.cern/root/html528/TSessionFrame.html,3,['Clear'],['Clear']
Usability," C++ long (may fail). ; Definition at line 161 of file TPyReturn.cxx. ◆ operator PyObject *(). TPyReturn::operator PyObject * ; (; ); const. Direct return of the held PyObject; note the new reference. ; Definition at line 220 of file TPyReturn.cxx. ◆ operator Short_t(). TPyReturn::operator Short_t ; (; ); const. inline . Definition at line 45 of file TPyReturn.h. ◆ operator T*(). template<class T > . TPyReturn::operator T* ; (; ); const. inline . Definition at line 58 of file TPyReturn.h. ◆ operator UInt_t(). TPyReturn::operator UInt_t ; (; ); const. inline . Definition at line 48 of file TPyReturn.h. ◆ operator ULong_t(). TPyReturn::operator ULong_t ; (; ); const. Cast python return value to C++ unsigned long (may fail). ; Definition at line 176 of file TPyReturn.cxx. ◆ operator UShort_t(). TPyReturn::operator UShort_t ; (; ); const. inline . Definition at line 49 of file TPyReturn.h. ◆ operator void *(). TPyReturn::operator void * ; (; ); const. Cast python return value to ROOT object with dictionary (may fail; note that you have to use the void* converter, as CINT will not call any other). ; Definition at line 207 of file TPyReturn.cxx. ◆ operator=(). TPyReturn & TPyReturn::operator= ; (; const TPyReturn & ; other). Assignment operator. Applies python object reference counting. ; Definition at line 93 of file TPyReturn.cxx. ◆ Streamer(). virtual void TPyReturn::Streamer ; (; TBuffer & ; ). virtual . ◆ StreamerNVirtual(). void TPyReturn::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 66 of file TPyReturn.h. Member Data Documentation. ◆ fPyObject. PyObject* TPyReturn::fPyObject. private . Definition at line 69 of file TPyReturn.h. Libraries for TPyReturn:. [legend]; The documentation for this class was generated from the following files:; bindings/tpython/inc/TPyReturn.h; bindings/tpython/src/TPyReturn.cxx. TPyReturn. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPyReturn.html:6442,Guid,Guide,6442,doc/master/classTPyReturn.html,https://root.cern,https://root.cern/doc/master/classTPyReturn.html,1,['Guid'],['Guide']
Usability," CORE; » BASE; » TQCommand. class TQCommand: public TList, public TQObject. The Command design pattern is based on the idea, that all editing; in an application is done by creating instances of command objects.; Command objects apply changes to the edited object and then are; stored on a command stack. Furthermore, each command knows how to; undo its changes to bring the edited object back to its previous; state. As long as the application only uses command objects to; change the state of the edited object, it is possible to undo; a sequence of commands by traversing the command stack downwards and; calling the ""undo"" method of each command in turn. It is also; possible to redo a sequence of commands by traversing the command; stack upwards and calling the ""redo"" method of each command. Examples:. 1. Create a new command. TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)""; ""SetFillColor(Color_t)"");. 1st parameter - the name of class; 2nd parameter - object; 3rd parameter - the name of do/redo method; 4th parameter - the name of undo method. Since redo,undo methods are the same, undo name can be omitted, e.g. TQCommand *com = new TQCommand(""TH1"", hpx, ""SetFillColor(Color_t)"");. For objects derived from TObject class name can be omitted, e.g. TQCommand *com = new TQCommand(hpx, ""SetFillColor(Color_t)"");. 2. Setting undo, redo parameters. Color_t old_color = hpx->GetFillColor();; Color_t new_color = 4; // blue color. com->SetRedoArgs(1, new_color);; com->SetUndoArgs(1, old_color);. 1st argument - the number of undo, redo parameters; the other arguments - undo, redo values. Since the number of undo,redo parameters is the same one can use. com->SetArgs(1, new_color, old_color);. 3. Undo, redo method execution. com->Redo(); // execute redo method; com->Undo(); // execute undo method. 4. Merged commands. It possible to group several commands together so an end user; can undo and redo them with one command. TQCommand *update = new TQCommand(gPad, ""Modified()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TQCommand.html:1287,undo,undo,1287,root/html528/TQCommand.html,https://root.cern,https://root.cern/root/html528/TQCommand.html,6,['undo'],['undo']
Usability," Cholesky decomposition (N = 6) ;  C_inverterGenDimStruct to obtain the inverse from a Cholesky decomposition (general dimensionality) ;  C_solverStruct to solve a linear system using its Cholesky decomposition ;  C_solver< F, 0, V >Struct to solve a linear system using its Cholesky decomposition (N=0) ;  C_solver< F, 1, V >Struct to solve a linear system using its Cholesky decomposition (N=1) ;  C_solver< F, 2, V >Struct to solve a linear system using its Cholesky decomposition (N=2) ;  C_solver< F, 3, V >Struct to solve a linear system using its Cholesky decomposition (N=3) ;  C_solver< F, 4, V >Struct to solve a linear system using its Cholesky decomposition (N=4) ;  C_solver< F, 5, V >Struct to solve a linear system using its Cholesky decomposition (N=5) ;  C_solver< F, 6, V >Struct to solve a linear system using its Cholesky decomposition (N=6) ;  C_solverGenDimStruct to solve a linear system using its Cholesky decomposition (generalised dimensionality) ;  CPackedArrayAdapterAdapter for packed arrays (to SMatrix indexing conventions) ;  ►Ndetail;  Cmanipulator;  ►NGenVector_detail;  ►CBitReproducible;  CDB8;  CBitReproducibleException;  ►Ngv_detail;  CERROR_This_Rotation_Conversion_is_NOT_Supported;  ►NRootsRoot-Finding Algorithms ;  CBisectionRoots::Bisection Bisection algorithm, simplest algorithm for bracketing the roots of a function, but slowest one ;  CBrentBrent-Dekker algorithm which combines an interpolation strategy with the bisection algorithm See the GSL manual for more information ;  CFalsePosFalse Position algorithm based on linear interpolation ;  CNewtonNewton algorithm, which computes the derivative at each iteration See the GSL manual for more information ;  CSecantSecant algorithm, simplified version of Newton method, which does not require the derivative at every step ;  CSteffensonSteffenson method, providing the fastes convergence ;  ►NrowOffsetsUtils;  Cindices;  Cmake_indices;  Cmake_indices_impl;  Cmake_indices_impl< I, indices< Indices.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v608/annotated.html:23314,simpl,simplest,23314,doc/v608/annotated.html,https://root.cern,https://root.cern/doc/v608/annotated.html,4,['simpl'],"['simplest', 'simplified']"
Usability," Class Charts. Inheritance Chart:. TObject. ←; TCollection. ←; TSeqCollection. ←; TList. TQObject. ←; TQCommand. ←; TQUndoManager. Function documentation; TQUndoManager(); Constructor. ~TQUndoManager(); Destructor. void ls(Option_t* option = """") const; Lists all commands in stack. void PrintCollectionEntry(TObject* entry, Option_t* option, Int_t recurse) const; Print collection entry. void SetLogging(Bool_t on = kTRUE); Start logging. Delete all previous log records; Note: logging is not implemented yet. void Add(TObject* obj, Option_t* opt); Add command to the stack of commands.; Command's redo action will be executed. option string can contain the following substrings:; ""merge"" - input command will be merged; ""compress"" - input command will be compressed. void CurrentChanged(TQCommand* c); emit signal. void Undo(Option_t* option = """"); Performs undo action. Move cursor position backward in history stack. void Redo(Option_t* option = """"); Performs redo action. Move cursor position forward in history stack. Bool_t CanRedo() const; Returns kTRUE if redo action is possible. Bool_t CanUndo() const; Returns kTRUE if undo action is possible. Bool_t IsLogging() const; Returns kTRUE if logging is ON. TQCommand * GetCurrent() const; Returns the last executed command. TQCommand * GetCursor() const; Returns a command correspondent to the current cursor position in stack. void SetLimit(UInt_t limit); Returns a maximum number of commands which could be located in stack. UInt_t GetLimit() const; Returns a maximum number of commands which could be located in stack. TQCommand & operator=(const TQUndoManager& ). void Add(TObject* obj, Option_t* opt). TQUndoManager(). » Author: Valeriy Onuchin 04/27/2004 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-02 16:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TQUndoManager.html:20432,undo,undo,20432,root/html604/TQUndoManager.html,https://root.cern,https://root.cern/root/html604/TQUndoManager.html,1,['undo'],['undo']
Usability," Class Charts. Inheritance Chart:. TObject. ←; TCollection. ←; TSeqCollection. ←; TList. TQObject. ←; TQCommand. ←; TQUndoManager. Function documentation; TQUndoManager(); Constructor. ~TQUndoManager(); Destructor. void ls(Option_t* option = """") const; Lists all commands in stack. void PrintCollectionEntry(TObject* entry, Option_t* option, Int_t recurse) const; Print collection entry. void SetLogging(Bool_t on = kTRUE); Start logging. Delete all previous log records; Note: logging is not implemented yet. void Add(TObject* obj, Option_t* opt); Add command to the stack of commands.; Command's redo action will be executed. option string can contain the following substrings:; ""merge"" - input command will be merged; ""compress"" - input command will be compressed. void CurrentChanged(TQCommand* c); emit signal. void Undo(Option_t* option = """"); Performs undo action. Move cursor position backward in history stack. void Redo(Option_t* option = """"); Performs redo action. Move cursor position forward in history stack. Bool_t CanRedo() const; Returns kTRUE if redo action is possible. Bool_t CanUndo() const; Returns kTRUE if undo action is possible. Bool_t IsLogging() const; Returns kTRUE if logging is ON. TQCommand * GetCurrent() const; Returns the last executed command. TQCommand * GetCursor() const; Returns a command correspondent to the current cursor position in stack. void SetLimit(UInt_t limit); Returns a maximum number of commands which could be located in stack. UInt_t GetLimit() const; Returns a maximum number of commands which could be located in stack. TQCommand & operator=(const TQUndoManager& ). void Add(TObject* obj, Option_t* opt). TQUndoManager(). » Author: Valeriy Onuchin 04/27/2004 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-30 15:29; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQUndoManager.html:20432,undo,undo,20432,root/html602/TQUndoManager.html,https://root.cern,https://root.cern/root/html602/TQUndoManager.html,1,['undo'],['undo']
Usability," Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GEOM; » GEOMBUILDER; » TGeoVolumeEditor. class TGeoVolumeEditor: public TGeoGedFrame. TGeoVolumeEditor. Editor for geometry volumes and assemblies of volumes. Besides the volume; name and line attributes, a TGeoVolume has the following editable categories; splitted vertically by a shutter:; - Properties: one can edit the shape and medium components from here. It is; also possible to change the existing ones.; - Daughters: the main category allowing defining, editing, removing or; positioning daughter volumes inside the current edited volume. To add a; daughter, one needs to select first a volume and a matrix. Currently no check; is performed if the daughter volume creates an extrusion (illegal for tracking).; To remove or change the position of an existing daughter, one should simply; select the desired daughter from the combo box with the existing ones, then; simply click the appropriate button.; - Visualization: One can set the visibility of the volume and of its daughters,; set the visibility depth and the view type. Selecting ""All"" will draw the; volume and all visible daughters down to the selected level starting from the; edited volume. Selecting ""Leaves"" will draw just the deepest daughters within; the selected visibility level, without displaying the containers, while ""Only""; will just draw the edited volume.; - Division: The category becomes active only if there are no daughters of the; edited volume added by normal positioning (e.g. from <Daughters> category). The; minimum allowed starting value for the selected division axis is automatically; selected, while the dslicing step is set to 0 - meaning that only the number; of slices matter. Function Members (Methods); public:. TGeoVolumeEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoVolumeEditor.html:1023,simpl,simply,1023,root/html528/TGeoVolumeEditor.html,https://root.cern,https://root.cern/root/html528/TGeoVolumeEditor.html,6,['simpl'],['simply']
Usability," Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GRAF2D; » POSTSCRIPT; » TTeXDump. class TTeXDump: public TVirtualPS. TTeXDump: Graphics interface to TeX; This class allow to generate PGF/TikZ vector graphics output; which can be included in TeX and LaTeX documents. PGF is a TeX macro package for generating graphics. It is platform; and format-independent and works together with the most important TeX; backend drivers, including pdftex and dvips. It comes with a; user-friendly syntax layer called TikZ. To generate a such file it is enough to do:. gStyle->SetPaperSize(10.,10.);; hpx->Draw();; gPad->Print(""hpx.tex"");. Then, the generated file (hpx.tex) can be included in a; LaTeX document (simple.tex) in the following way:. \documentclass{article}; \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; \title{A simple LaTeX example}; \date{July 2013}; \begin{document}; \maketitle; The following image as been generated using the TTeXDump class:; \par; \input{hpx.tex}; \end{document}. Note the three directives needed at the top of the LaTeX file:. \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}. Then including the picture in the document is done with the; \input<\tt> directive.; The command pdflatex simple.tex will generate the; corresponding pdf file simple.pdf.; . Function Members (Methods); public:. TTeXDump(); TTeXDump(const char* filename, Int_t type = -113); virtual~TTeXDump(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidCellArrayBegin(Int_t W, Int_t H, Double_t x1, Double_t x2, Double_t y1, Double_t y2); virtual voidCellArrayEnd(); virtual voidCellArrayFill(Int_t r, Int_t g, Int_t b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTeXDump.html:1018,simpl,simple,1018,root/html534/TTeXDump.html,https://root.cern,https://root.cern/root/html534/TTeXDump.html,1,['simpl'],['simple']
Usability," Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GRAF2D; » POSTSCRIPT; » TTeXDump. class TTeXDump: public TVirtualPS. TTeXDump: Graphics interface to TeX; This class allow to generate PGF/TikZ vector graphics output; which can be included in TeX and LaTeX documents. PGF is a TeX macro package for generating graphics. It is platform; and format-independent and works together with the most important TeX; backend drivers, including pdftex and dvips. It comes with a; user-friendly syntax layer called TikZ. To generate a such file it is enough to do:. gStyle->SetPaperSize(10.,10.);; hpx->Draw();; gPad->Print(""hpx.tex"");. Then, the generated file (hpx.tex) can be included in a; LaTeX document (simple.tex) in the following way:. \documentclass{article}; \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}; \title{A simple LaTeX example}; \date{July 2013}; \begin{document}; \maketitle; The following image as been generated using the TTeXDump class:; \par; \input{hpx.tex}; \end{document}. Note the three directives needed at the top of the LaTeX file:. \usepackage{tikz}; \usetikzlibrary{patterns}; \usetikzlibrary{plotmarks}. Then including the picture in the document is done with the; \input<\tt> directive.; The command pdflatex simple.tex will generate the; corresponding pdf file simple.pdf.; . Function Members (Methods); public:. virtual~TTeXDump(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidCellArrayBegin(Int_t W, Int_t H, Double_t x1, Double_t x2, Double_t y1, Double_t y2); virtual voidCellArrayEnd(); virtual voidCellArrayFill(Int_t r, Int_t g, Int_t b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTeXDump.html:1018,simpl,simple,1018,root/html604/TTeXDump.html,https://root.cern,https://root.cern/root/html604/TTeXDump.html,1,['simpl'],['simple']
Usability," Class containing the results of the IntervalCalculator; RooStats::MCMCCalculator Markov Chain Monte Carlo calculator for Bayesian credible intervals; RooStats::MCMCInterval Concrete implementation of a ConfInterval based on MCMC calculation; RooStats::MCMCIntervalPlot Class containing the results of the MCMCCalculator; RooStats::MarkovChain ; RooStats::MaxLikelihoodEstimateTestStat ; RooStats::MetropolisHastings Markov Chain Monte Carlo calculator for Bayesian credible intervals; RooStats::ModelConfig A class that holds configuration information for a model using a workspace as a store; RooStats::NeymanConstruction Interface for tools setting limits (producing confidence intervals); RooStats::NumEventsTestStat ; RooStats::NumberCountingPdfFactory A factory specific to common number counting problems.; RooStats::NumberCountingUtils ; RooStats::PdfProposal ; RooStats::PointSetInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::ProfileInspector Class containing the results of the IntervalCalculator; RooStats::ProfileLikelihoodCalculator A concrete implementation of CombinedCalculator that uses the ProfileLikelihood ratio.; RooStats::ProfileLikelihoodTestStat implements the profile likelihood ratio as a test statistic to be used with several tools; RooStats::ProofConfig Configuration options for proof.; RooStats::ProposalFunction Interface for the proposal function used with Markov Chain Monte Carlo; RooStats::ProposalHelper ; RooStats::RatioOfProfiledLikelihoodsTestStat ; RooStats::SPlot Class used for making sPlots; RooStats::SamplingDistPlot Class containing the results of the HybridCalculator; RooStats::SamplingDistribution Class containing the results of the HybridCalculator; RooStats::SamplingSummary A summary of acceptance regions for confidence belt; RooStats::SamplingSummaryLookup A simple class used by ConfidenceBelt; RooStats::SequentialProposal A concrete implementation of ProposalFunction, that uniformly s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ClassIndex.html:46528,simpl,simple,46528,root/html530/ClassIndex.html,https://root.cern,https://root.cern/root/html530/ClassIndex.html,2,['simpl'],['simple']
Usability," Class containing the results of the IntervalCalculator; RooStats::MCMCCalculator Markov Chain Monte Carlo calculator for Bayesian credible intervals; RooStats::MCMCInterval Concrete implementation of a ConfInterval based on MCMC calculation; RooStats::MCMCIntervalPlot Class containing the results of the MCMCCalculator; RooStats::MarkovChain ; RooStats::MaxLikelihoodEstimateTestStat ; RooStats::MetropolisHastings Markov Chain Monte Carlo calculator for Bayesian credible intervals; RooStats::ModelConfig A class that holds configuration information for a model using a workspace as a store; RooStats::NeymanConstruction Interface for tools setting limits (producing confidence intervals); RooStats::NumEventsTestStat ; RooStats::NumberCountingPdfFactory A factory specific to common number counting problems.; RooStats::NumberCountingUtils ; RooStats::PdfProposal ; RooStats::PointSetInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::ProfileInspector Class containing the results of the IntervalCalculator; RooStats::ProfileLikelihoodCalculator A concrete implementation of CombinedCalculator that uses the ProfileLikelihood ratio.; RooStats::ProfileLikelihoodTestStat implements the profile likelihood ratio as a test statistic to be used with several tools; RooStats::ProofConfig Configuration options for proof.; RooStats::ProposalFunction Interface for the proposal function used with Markov Chain Monte Carlo; RooStats::ProposalHelper ; RooStats::RatioOfProfiledLikelihoodsTestStat ; RooStats::SPlot Class used for making sPlots; RooStats::SamplingDistPlot Class containing the results of the HybridCalculator; RooStats::SamplingDistribution Class containing the results of the HybridCalculator; RooStats::SamplingSummary A summary of acceptance regions for confidence belt; RooStats::SamplingSummaryLookup A simple class used by ConfidenceBelt; RooStats::SimpleInterval Concrete implementation of ConfInterval for simple 1-D intervals in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ClassIndex.html:46294,simpl,simple,46294,root/html528/ClassIndex.html,https://root.cern,https://root.cern/root/html528/ClassIndex.html,1,['simpl'],['simple']
Usability," ClassDef_StreamerNVirtual_b). inline . Definition at line 104 of file TEveSelection.h. ◆ UserPickedElement(). void TEveSelection::UserPickedElement ; (; TEveElement * ; el, . Bool_t ; multi = kFALSE . ). virtual . Called when user picks/clicks on an element. ; If multi is true, the user is requiring a multiple selection (usually this is associated with control-key being pressed at the time of pick event). ; Definition at line 344 of file TEveSelection.cxx. ◆ UserRePickedElement(). void TEveSelection::UserRePickedElement ; (; TEveElement * ; el). virtual . Called when secondary selection becomes empty. ; Definition at line 370 of file TEveSelection.cxx. ◆ UserUnPickedElement(). void TEveSelection::UserUnPickedElement ; (; TEveElement * ; el). virtual . Called when secondary selection becomes empty. ; Definition at line 383 of file TEveSelection.cxx. Member Data Documentation. ◆ fActive. Bool_t TEveSelection::fActive. protected . Definition at line 44 of file TEveSelection.h. ◆ fDecImpSelElement. ImplySelect_foo TEveSelection::fDecImpSelElement. protected . Definition at line 51 of file TEveSelection.h. ◆ fImpliedSelected. SelMap_t TEveSelection::fImpliedSelected. protected . Definition at line 47 of file TEveSelection.h. ◆ fIncImpSelElement. ImplySelect_foo TEveSelection::fIncImpSelElement. protected . Definition at line 50 of file TEveSelection.h. ◆ fIsMaster. Bool_t TEveSelection::fIsMaster. protected . Definition at line 45 of file TEveSelection.h. ◆ fPickToSelect. Int_t TEveSelection::fPickToSelect. protected . Definition at line 43 of file TEveSelection.h. ◆ fSelElement. Select_foo TEveSelection::fSelElement. protected . Definition at line 49 of file TEveSelection.h. Libraries for TEveSelection:. [legend]; The documentation for this class was generated from the following files:; graf3d/eve/inc/TEveSelection.h; graf3d/eve/src/TEveSelection.cxx. TEveSelection. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:43 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveSelection.html:48942,Guid,Guide,48942,doc/master/classTEveSelection.html,https://root.cern,https://root.cern/doc/master/classTEveSelection.html,1,['Guid'],['Guide']
Usability," Clear()ROOT::Math::Minimizerinlinevirtual; Contour(unsigned int ivar, unsigned int jvar, unsigned int &npoints, double *xi, double *xj)ROOT::Math::Minimizervirtual; Correlation(unsigned int i, unsigned int j) constROOT::Math::Minimizerinlinevirtual; CovMatrix(unsigned int ivar, unsigned int jvar) constROOT::Math::Minimizervirtual; CovMatrixStatus() constROOT::Math::Minimizerinlinevirtual; Edm() constROOT::Math::Minimizerinlinevirtual; ErrorDef() constROOT::Math::Minimizerinline; Errors() constROOT::Math::Minimizerinlinevirtual; FixVariable(unsigned int ivar)ROOT::Math::Minimizervirtual; fOptionsROOT::Math::Minimizerprotected; fStatusROOT::Math::Minimizerprotected; fValidErrorROOT::Math::Minimizerprotected; GetCovMatrix(double *covMat) constROOT::Math::Minimizervirtual; GetHessianMatrix(double *hMat) constROOT::Math::Minimizervirtual; GetMinosError(unsigned int ivar, double &errLow, double &errUp, int option=0)ROOT::Math::Minimizervirtual; GetVariableSettings(unsigned int ivar, ROOT::Fit::ParameterSettings &pars) constROOT::Math::Minimizervirtual; GlobalCC(unsigned int ivar) constROOT::Math::Minimizervirtual; Hesse()ROOT::Math::Minimizervirtual; IsFixedVariable(unsigned int ivar) constROOT::Math::Minimizervirtual; IsValidError() constROOT::Math::Minimizerinline; MaxFunctionCalls() constROOT::Math::Minimizerinline; MaxIterations() constROOT::Math::Minimizerinline; MinGradient() constROOT::Math::Minimizerinlinevirtual; Minimize()=0ROOT::Math::Minimizerpure virtual; Minimizer()ROOT::Math::Minimizerinline; Minimizer(Minimizer const &)=deleteROOT::Math::Minimizer; Minimizer(Minimizer &&)=deleteROOT::Math::Minimizer; MinosStatus() constROOT::Math::Minimizerinlinevirtual; MinValue() const =0ROOT::Math::Minimizerpure virtual; NCalls() constROOT::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer-members.html:234,Clear,Clear,234,doc/master/classROOT_1_1Math_1_1Minimizer-members.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer-members.html,1,['Clear'],['Clear']
Usability, ColorStruct_t* TGHtml::fSelectionColor. protected . Definition at line 1241 of file TGHtml.h. ◆ fSelEnd. SHtmlIndex_t TGHtml::fSelEnd. protected . Definition at line 1157 of file TGHtml.h. ◆ fSelEndIndex. Html_16_t TGHtml::fSelEndIndex. protected . Definition at line 1161 of file TGHtml.h. ◆ fSelStartIndex. Html_16_t TGHtml::fSelStartIndex. protected . Definition at line 1159 of file TGHtml.h. ◆ fStyleStack. SHtmlStyleStack_t* TGHtml::fStyleStack. protected . Definition at line 1197 of file TGHtml.h. ◆ fTableBorderMin. int TGHtml::fTableBorderMin. protected . Definition at line 1255 of file TGHtml.h. ◆ fTableRelief. int TGHtml::fTableRelief. protected . Definition at line 1265 of file TGHtml.h. ◆ fUidTable. THashTable* TGHtml::fUidTable. protected . Definition at line 1285 of file TGHtml.h. ◆ fUnderlineLinks. int TGHtml::fUnderlineLinks. protected . Definition at line 1251 of file TGHtml.h. ◆ fVarId. int TGHtml::fVarId. protected . Definition at line 1149 of file TGHtml.h. ◆ fVarind. int TGHtml::fVarind. protected . Definition at line 1256 of file TGHtml.h. ◆ fZBase. const char* TGHtml::fZBase. protected . Definition at line 1268 of file TGHtml.h. ◆ fZBaseHref. char* TGHtml::fZBaseHref. protected . Definition at line 1269 of file TGHtml.h. ◆ fZGoto. char* TGHtml::fZGoto. protected . Definition at line 1281 of file TGHtml.h. ◆ fZText. char* TGHtml::fZText. protected . Definition at line 1176 of file TGHtml.h. Libraries for TGHtml:. [legend]; The documentation for this class was generated from the following files:; gui/guihtml/inc/TGHtml.h; gui/guihtml/src/TGHtml.cxx; gui/guihtml/src/TGHtmlDraw.cxx; gui/guihtml/src/TGHtmlForm.cxx; gui/guihtml/src/TGHtmlImage.cxx; gui/guihtml/src/TGHtmlIndex.cxx; gui/guihtml/src/TGHtmlLayout.cxx; gui/guihtml/src/TGHtmlParse.cxx; gui/guihtml/src/TGHtmlSizer.cxx; gui/guihtml/src/TGHtmlTable.cxx; gui/guihtml/src/TGHtmlUri.cxx. TGHtml. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:16 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHtml.html:102593,Guid,Guide,102593,doc/master/classTGHtml.html,https://root.cern,https://root.cern/doc/master/classTGHtml.html,1,['Guid'],['Guide']
Usability," Composite GUI frame for parallel display of a TGListTree and TEveGedEditor.; TEveGTriVecValuator Composite GUI element for setting three numerical values (label, three number-entries).; TEveGValuator Composite GUI element for single value selection (supports label, number-entry and slider).; TEveGValuatorBase Base class for composite GUI elements for setting of numeric values.; TEveGedEditor Specialization of TGedEditor for proper update propagation to TEveManager.; TEveGedNameFrame Top name-frame used in EVE.; TEveGedNameTextButton Button for GED name-frame.; TEveGeoManagerHolder Exception-safe wrapper for temporary setting of gGeoManager variable.; TEveGeoNode Wrapper for TGeoNode that allows it to be shown in GUI and controlled as a TEveElement.; TEveGeoNodeEditor Editor for TEveGeoNode class.; TEveGeoPolyShape A shape with arbitrary tesselation for visualization of CSG shapes.; TEveGeoShape Wrapper for TGeoShape with absolute positioning and color attributes allowing display of extracted TGeoShape's (without an active TGeoManager) and simplified geometries (needed for NLT projections).; TEveGeoShapeExtract Globally positioned TGeoShape with rendering attributes and an optional list of daughter shape-extracts.; TEveGeoShapeProjected ; TEveGeoTopNode Top-level TEveGeoNode with a pointer to TGeoManager and controls for steering of TGeoPainter.; TEveGeoTopNodeEditor Editor for TEveGeoTopNode class.; TEveGridStepper Provide discrete position coordinates for placement of objects on regular grids.; TEveGridStepperEditor Editor for TEveGridStepper class.; TEveGridStepperSubEditor Sub-editor for TEveGridStepper class.; TEveHit Monte Carlo hit (also used in VSD).; TEveJetCone Short description.; TEveJetConeEditor GUI editor for TEveJetCone.; TEveJetConeGL GL renderer class for TEveJetCone.; TEveJetConeProjected Projection of TEveJetCone.; TEveJetConeProjectedGL GL renderer class for TEveJetCone.; TEveLegoEventHandler A GL event handler class. Swiches perspective or orthog",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ClassIndex.html:61235,simpl,simplified,61235,root/html528/ClassIndex.html,https://root.cern,https://root.cern/root/html528/ClassIndex.html,6,['simpl'],['simplified']
Usability," Composite GUI frame for parallel display of a TGListTree and TEveGedEditor.; TEveGTriVecValuator Composite GUI element for setting three numerical values (label, three number-entries).; TEveGValuator Composite GUI element for single value selection (supports label, number-entry and slider).; TEveGValuatorBase Base class for composite GUI elements for setting of numeric values.; TEveGedEditor Specialization of TGedEditor for proper update propagation to TEveManager.; TEveGedNameFrame Top name-frame used in EVE.; TEveGedNameTextButton Button for GED name-frame.; TEveGeoManagerHolder Exception-safe wrapper for temporary setting of gGeoManager variable.; TEveGeoNode Wrapper for TGeoNode that allows it to be shown in GUI and controlled as a TEveElement.; TEveGeoNodeEditor Editor for TEveGeoNode class.; TEveGeoPolyShape A shape with arbitrary tesselation for visualization of CSG shapes.; TEveGeoShape Wrapper for TGeoShape with absolute positioning and color attributes allowing display of extracted TGeoShape's (without an active TGeoManager) and simplified geometries (needed for NLT projections).; TEveGeoShapeExtract Globally positioned TGeoShape with rendering attributes and an optional list of daughter shape-extracts.; TEveGeoShapeProjected ; TEveGeoTopNode Top-level TEveGeoNode with a pointer to TGeoManager and controls for steering of TGeoPainter.; TEveGeoTopNodeEditor Editor for TEveGeoTopNode class.; TEveGridStepper Provide discrete position coordinates for placement of objects on regular grids.; TEveGridStepperEditor Editor for TEveGridStepper class.; TEveGridStepperSubEditor Sub-editor for TEveGridStepper class.; TEveHit Monte Carlo hit (also used in VSD).; TEveJetCone Short description.; TEveJetConeEditor GUI editor for TEveJetCone.; TEveJetConeGL GL renderer class for TEveJetCone.; TEveLegoEventHandler A GL event handler class. Swiches perspective or orthographic camera.; TEveLine An arbitrary polyline with fixed line and marker attributes.; TEveLineEditor Editor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ClassIndex.html:59025,simpl,simplified,59025,root/html526/ClassIndex.html,https://root.cern,https://root.cern/root/html526/ClassIndex.html,1,['simpl'],['simplified']
Usability," Compute the learned likelihood ratio; llhr_learned = ROOT.RooFit.bindFunction(""MyBinFunc"", learned_likelihood_ratio, x_var, mu_var); ; # Compute the real likelihood ratio; llhr_calc = ROOT.RooFormulaVar(""llhr_calc"", ""x[0] / x[1]"", [gauss, uniform]); ; # Create the exact negative log likelihood functions for Gaussian model; nll_gauss = gauss.createNLL(obs_data); ROOT.SetOwnership(nll_gauss, True); ; # Create the learned pdf and NLL sum based on the learned likelihood ratio; pdf_learned = ROOT.RooWrapperPdf(""learned_pdf"", ""learned_pdf"", llhr_learned, True); ; nllr_learned = pdf_learned.createNLL(obs_data); ROOT.SetOwnership(nllr_learned, True); ; # Compute the morphed nll; morphing(ROOT.RooMomentMorphFuncND.Linear); nll_morph = workspace[""morph""].createNLL(obs_data); ROOT.SetOwnership(nll_morph, True); ; # Plot the negative logarithmic summed likelihood; frame1 = mu_var.frame(Title=""NLL of SBI vs. Morphing;mu;NLL"", Range=(2.2, 2.8)); nllr_learned.plotOn(frame1, LineColor=""kP6Blue"", ShiftToZero=True, Name=""learned""); nll_gauss.plotOn(frame1, LineColor=""kP6Blue+1"", ShiftToZero=True, Name=""gauss""); ROOT.RooAbsReal.setEvalErrorLoggingMode(""Ignore"") # Silence some warnings; nll_morph.plotOn(frame1, LineColor=""kP6Blue+2"", ShiftToZero=True, Name=""morphed""); ROOT.RooAbsReal.setEvalErrorLoggingMode(""PrintErrors""); ; # Plot the likelihood functions; frame2 = x_var.frame(Title=""Likelihood ratio r(x|#mu=2.5);x;p_{gauss}/p_{uniform}""); llhr_learned.plotOn(frame2, LineColor=""kP6Blue"", Name=""learned_ratio""); llhr_calc.plotOn(frame2, LineColor=""kP6Blue+1"", Name=""exact""); ; # Write the plots into one canvas to show, or into separate canvases for saving.; single_canvas = True; ; c = ROOT.TCanvas("""", """", 1200 if single_canvas else 600, 600); if single_canvas:; c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.8); frame1.Draw(); ; legend1 = ROOT.TLegend(0.43, 0.63, 0.8, 0.87); legend1.SetFillColor(ROOT.kWhite); legend1.SetLineColor(ROOT.kWhite); lege",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf615__simulation__based__inference_8py.html:7568,learn,learned,7568,doc/master/rf615__simulation__based__inference_8py.html,https://root.cern,https://root.cern/doc/master/rf615__simulation__based__inference_8py.html,1,['learn'],['learned']
Usability," Contours X-X-; Bars X-X-; LinesX XXXX; LinesY XXXX; BarsX X-X-; BarsY X-X-; Needles X---; Surface -XXX; TrianglesXXXX. Function:; void TSpectrum2Painter::SetDisplayMode (Int_t modeGroup, Int_t displayMode). This function controls the display mode group and display mode of the; histogram drawing. To illustrate the possible effects of the various display; modes we introduce a set of examples. Default values:. modeGroup = kModeGroupLightHeight ; displayMode = kDisplayModeSurface . Simple modes group, display mode = points, 256 x 256 channels. Simple modes group, display mode = grid, 64 x 64 channels. Simple modes group, display mode = contours, 64 x 64 channels. Simple modes group, display mode = bars, 64 x 64 channels. Simple modes group, display mode = linesX, 64 x 64 channels. Simple modes group, display mode = linesY, 64 x 64 channels. Simple modes group, display mode = barsX, 64 x 64 channels. Simple modes group, display mode = barsY, 64 x 64 channels. Simple modes group, display mode = needles, 64 x 64 channels. Simple modes group, display mode = triangles, 64 x 64 channels. Light modes group, display mode = points, 256 x 256 channels. Light modes group, display mode = grid, 256 x 256 channels. Light modes group, display mode = surface, 64 x 64 channels. Light modes group, display mode = triangles, 64 x 64 channels. Height modes group, display mode = points, 256 x 256 channels. Height modes group, display mode = grid, 256 x 256 channels. Height modes group, display mode = contours, 64 x 64 channels. Height modes group, display mode = bars, 64 x 64 channels. Height modes group, display mode = surface, 64 x 64 channels. Height modes group, display mode = triangles, 64 x 64 channels. Light - height modes group, display mode = surface, 64 x 64 channels. The weight; between both shading algorithms is set to 0.5. One can observe the influence of; both shadings.; Function:; TSpectrum2Painter::SetPenAttr(Int_t color,Int_t style,Int_t width). Using this function one can ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpectrum2Painter.html:18246,Simpl,Simple,18246,root/html528/TSpectrum2Painter.html,https://root.cern,https://root.cern/root/html528/TSpectrum2Painter.html,6,['Simpl'],['Simple']
Usability," CreatePainter();; 80 ; 81protected:; 82 void ExecuteEvent(Int_t event, Int_t px, Int_t py) override;; 83 //-- used by friend TThread class; 84 void Init();; 85 ; 86public:; 87 // TCanvas status bits; 88 enum {; 89 kShowEventStatus = BIT(15),; 90 kAutoExec = BIT(16),; 91 kMenuBar = BIT(17),; 92 kShowToolBar = BIT(18),; 93 kShowEditor = BIT(19),; 94 kMoveOpaque = BIT(20),; 95 kResizeOpaque = BIT(21),; 96 kIsGrayscale = BIT(22),; 97 kShowToolTips = BIT(23); 98 };; 99 ; 100 TCanvas(Bool_t build=kTRUE);; 101 TCanvas(const char *name, const char *title="""", Int_t form=1);; 102 TCanvas(const char *name, const char *title, Int_t ww, Int_t wh);; 103 TCanvas(const char *name, const char *title, Int_t wtopx, Int_t wtopy,; 104 Int_t ww, Int_t wh);; 105 TCanvas(const char *name, Int_t ww, Int_t wh, Int_t winid);; 106 ~TCanvas() override;; 107 ; 108 //-- used by friend TThread class; 109 void Constructor();; 110 void Constructor(const char *name, const char *title, Int_t form);; 111 void Constructor(const char *name, const char *title, Int_t ww, Int_t wh);; 112 void Constructor(const char *name, const char *title,; 113 Int_t wtopx, Int_t wtopy, Int_t ww, Int_t wh);; 114 void Destructor();; 115 ; 116 TVirtualPad *cd(Int_t subpadnumber=0) override;; 117 void Browse(TBrowser *b) override;; 118 void Clear(Option_t *option="""") override;; 119 void Close(Option_t *option="""") override;; 120 void Delete(Option_t * = """") override { MayNotUse(""Delete()""); }; 121 void DisconnectWidget(); // used by TCanvasImp; 122 void Draw(Option_t *option="""") override;; 123 TObject *DrawClone(Option_t *option="""") const override; // *MENU*; 124 virtual TObject *DrawClonePad(); // *MENU*; 125 virtual void EditorBar();; 126 void EmbedInto(Int_t winid, Int_t ww, Int_t wh);; 127 void EnterLeave(TPad *prevSelPad, TObject *prevSelObj);; 128 void FeedbackMode(Bool_t set);; 129 void Flush();; 130 void UseCurrentStyle() override; // *MENU*; 131 void ForceUpdate();; 132 const char *GetDISPLAY() const {return fDISPLAY.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCanvas_8h_source.html:4840,Clear,Clear,4840,doc/master/TCanvas_8h_source.html,https://root.cern,https://root.cern/doc/master/TCanvas_8h_source.html,2,"['Clear', 'Feedback']","['Clear', 'FeedbackMode']"
Usability," D > & ROOT::Math::MatRepSym< T, D >::operator-= ; (; const MatRepSym< T, D > & ; rhs). inline . Definition at line 281 of file MatrixRepresentationsStatic.h. ◆ operator-=() [2/2]. template<class T , unsigned int D> . template<class R > . MatRepSym< T, D > & ROOT::Math::MatRepSym< T, D >::operator-= ; (; const R & ; ). inline . self subtraction : only symmetric to symmetric allowed ; Definition at line 276 of file MatrixRepresentationsStatic.h. ◆ operator=() [1/2]. template<class T , unsigned int D> . MatRepSym< T, D > & ROOT::Math::MatRepSym< T, D >::operator= ; (; const MatRepSym< T, D > & ; rhs). inline . Definition at line 253 of file MatrixRepresentationsStatic.h. ◆ operator=() [2/2]. template<class T , unsigned int D> . template<class R > . MatRepSym< T, D > & ROOT::Math::MatRepSym< T, D >::operator= ; (; const R & ; ). inline . assignment : only symmetric to symmetric allowed ; Definition at line 248 of file MatrixRepresentationsStatic.h. ◆ operator==(). template<class T , unsigned int D> . template<class R > . bool ROOT::Math::MatRepSym< T, D >::operator== ; (; const R & ; rhs); const. inline . Definition at line 286 of file MatrixRepresentationsStatic.h. ◆ operator[]() [1/2]. template<class T , unsigned int D> . T & ROOT::Math::MatRepSym< T, D >::operator[] ; (; unsigned int ; i). inline . Definition at line 228 of file MatrixRepresentationsStatic.h. ◆ operator[]() [2/2]. template<class T , unsigned int D> . T const & ROOT::Math::MatRepSym< T, D >::operator[] ; (; unsigned int ; i); const. inline . Definition at line 232 of file MatrixRepresentationsStatic.h. Member Data Documentation. ◆ fArray. template<class T , unsigned int D> . T ROOT::Math::MatRepSym< T, D >::fArray[kSize]. private . Definition at line 322 of file MatrixRepresentationsStatic.h. math/smatrix/inc/Math/HelperOps.h; math/smatrix/inc/Math/MatrixRepresentationsStatic.h. ROOTMathMatRepSym. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:22 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1MatRepSym.html:7792,Guid,Guide,7792,doc/master/classROOT_1_1Math_1_1MatRepSym.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1MatRepSym.html,1,['Guid'],['Guide']
Usability, DataInputHandler.h. ◆ Bbegin(). std::vector< TreeInfo >::const_iterator TMVA::DataInputHandler::Bbegin ; (; ); const. inline . Definition at line 115 of file DataInputHandler.h. ◆ begin(). std::vector< TreeInfo >::const_iterator TMVA::DataInputHandler::begin ; (; const TString & ; className); const. inline . Definition at line 111 of file DataInputHandler.h. ◆ Bend(). std::vector< TreeInfo >::const_iterator TMVA::DataInputHandler::Bend ; (; ); const. inline . Definition at line 116 of file DataInputHandler.h. ◆ Class(). static TClass * TMVA::DataInputHandler::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::DataInputHandler::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::DataInputHandler::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 134 of file DataInputHandler.h. ◆ ClearBackgroundTreeList(). void TMVA::DataInputHandler::ClearBackgroundTreeList ; (; ). inline . Definition at line 120 of file DataInputHandler.h. ◆ ClearSignalTreeList(). void TMVA::DataInputHandler::ClearSignalTreeList ; (; ). inline . Definition at line 119 of file DataInputHandler.h. ◆ ClearTreeList(). void TMVA::DataInputHandler::ClearTreeList ; (; const TString & ; className). Definition at line 182 of file DataInputHandler.cxx. ◆ DeclFileName(). static const char * TMVA::DataInputHandler::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 134 of file DataInputHandler.h. ◆ end(). std::vector< TreeInfo >::const_iterator TMVA::DataInputHandler::end ; (; const TString & ; className); const. inline . Definition at line 112 of file DataInputHandler.h. ◆ GetBackgroundEntries(). UInt_t TMVA::DataInputHandler::GetBackgroundEntries ; (; ); const. inline . Definition at line 106 of file DataInputHandler.h. ◆ GetClassList(). std::vector< TString > * TMVA::DataInputHandler::GetClassLi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DataInputHandler.html:16687,Clear,ClearBackgroundTreeList,16687,doc/master/classTMVA_1_1DataInputHandler.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DataInputHandler.html,1,['Clear'],['ClearBackgroundTreeList']
Usability," DataSetInfo & > TMVAInput_tDefinition DataLoader.h:40; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22; TMVA::gConfigConfig & gConfig(); TMVA::gToolsTools & gTools(); TMVA::fetchValueTmpTString fetchValueTmp(const std::map< TString, TString > &keyValueMap, TString key)Definition MethodDL.cxx:75; TMVA::EndlMsgLogger & Endl(MsgLogger &ml)Definition MsgLogger.h:148; TMath::IsNaNBool_t IsNaN(Double_t x)Definition TMath.h:892; TMath::LogDouble_t Log(Double_t x)Returns the natural logarithm of x.Definition TMath.h:756; TMVA::TTrainingSettingsAll of the options that can be specified in the training string.Definition MethodDL.h:72; TMVA::TTrainingSettings::batchSizesize_t batchSizeDefinition MethodDL.h:73; TMVA::TTrainingSettings::optimizerParamsstd::map< TString, double > optimizerParamsDefinition MethodDL.h:84; TMVA::TTrainingSettings::optimizerNameTString optimizerNameDefinition MethodDL.h:79; TMVA::TTrainingSettings::optimizerDNN::EOptimizer optimizerDefinition MethodDL.h:78; TMVA::TTrainingSettings::maxEpochssize_t maxEpochsDefinition MethodDL.h:76; TMVA::TTrainingSettings::momentumDouble_t momentumDefinition MethodDL.h:81; TMVA::TTrainingSettings::weightDecayDouble_t weightDecayDefinition MethodDL.h:82; TMVA::TTrainingSettings::testIntervalsize_t testIntervalDefinition MethodDL.h:74; TMVA::TTrainingSettings::regularizationDNN::ERegularization regularizationDefinition MethodDL.h:77; TMVA::TTrainingSettings::convergenceStepssize_t convergenceStepsDefinition MethodDL.h:75; TMVA::TTrainingSettings::dropoutProbabilitiesstd::vector< Double_t > dropoutProbabilitiesDefinition MethodDL.h:83; TMVA::TTrainingSettings::learningRateDouble_t learningRateDefinition MethodDL.h:80; mTMarker mDefinition textangle.C:8; lTLine lDefinition textangle.C:4; t1auto * t1Definition textangle.C:20; Functions.h; Types.h; outputstatic void output(). tmvatmvasrcMethodDL.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:00 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDL_8cxx_source.html:122237,learn,learningRateDefinition,122237,doc/master/MethodDL_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDL_8cxx_source.html,2,"['Guid', 'learn']","['Guide', 'learningRateDefinition']"
Usability," DefineSection(1, z1, x1, y1, scale1); // -''- secons section. DefineSection(nz-1, zn, xn, yn, scalen); // parameters for last section. *NOTES*; Currently navigation functionality not fully implemented (only Contains()).; Decomposition in concave polygons not implemented - drawing in solid mode; within x3d produces incorrect end-faces. Function Members (Methods); public:. TGeoXtru(); TGeoXtru(Int_t nz); TGeoXtru(Double_t* param); virtual~TGeoXtru(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; Bool_tDefinePolygon(Int_t nvert, const Double_t* xv, const Double_t* yv); virtual voidDefineSection(Int_t snum, Double_t z, Double_t x0 = 0., Double_t y0 = 0., Double_t scale = 1.); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; virtual Double_tDistFromOutside(Double_t* point, Double_t* dir, Int_t iact = 1, D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoXtru.html:2470,Clear,Clear,2470,root/html532/TGeoXtru.html,https://root.cern,https://root.cern/root/html532/TGeoXtru.html,1,['Clear'],['Clear']
Usability," Definition at line 154 of file RDrawable.hxx. ◆ SetDrawable(). void ROOT::Experimental::RDrawable::RDisplayContext::SetDrawable ; (; RDrawable * ; dr, . unsigned ; indx . ). inline . Set drawable and its index in list of primitives. ; Definition at line 148 of file RDrawable.hxx. ◆ SetPad(). void ROOT::Experimental::RDrawable::RDisplayContext::SetPad ; (; RPadBase * ; pad). inline . Set pad. ; Definition at line 146 of file RDrawable.hxx. Member Data Documentation. ◆ fCanvas. RCanvas* ROOT::Experimental::RDrawable::RDisplayContext::fCanvas {nullptr}. private . ! canvas where drawable is displayed ; Definition at line 126 of file RDrawable.hxx. ◆ fConnId. unsigned ROOT::Experimental::RDrawable::RDisplayContext::fConnId {0}. private . ! connection id ; Definition at line 131 of file RDrawable.hxx. ◆ fDrawable. RDrawable* ROOT::Experimental::RDrawable::RDisplayContext::fDrawable {nullptr}. private . ! reference on the drawable ; Definition at line 128 of file RDrawable.hxx. ◆ fIndex. unsigned ROOT::Experimental::RDrawable::RDisplayContext::fIndex {0}. private . ! index in list of primitives ; Definition at line 130 of file RDrawable.hxx. ◆ fLastVersion. Version_t ROOT::Experimental::RDrawable::RDisplayContext::fLastVersion {0}. private . ! last displayed version ; Definition at line 129 of file RDrawable.hxx. ◆ fMainConn. bool ROOT::Experimental::RDrawable::RDisplayContext::fMainConn {false}. private . ! is main connection ; Definition at line 132 of file RDrawable.hxx. ◆ fPad. RPadBase* ROOT::Experimental::RDrawable::RDisplayContext::fPad {nullptr}. private . ! subpad where drawable is displayed ; Definition at line 127 of file RDrawable.hxx. Libraries for ROOT::Experimental::RDrawable::RDisplayContext:. [legend]; The documentation for this class was generated from the following file:; graf2d/gpadv7/inc/ROOT/RDrawable.hxx. ROOTExperimentalRDrawableRDisplayContext. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:04 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RDrawable_1_1RDisplayContext.html:5248,Guid,Guide,5248,doc/master/classROOT_1_1Experimental_1_1RDrawable_1_1RDisplayContext.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RDrawable_1_1RDisplayContext.html,1,['Guid'],['Guide']
Usability," Definition at line 180 of file TSessionDialogs.cxx. ◆ ProcessMessage(). Bool_t TNewChainDlg::ProcessMessage ; (; Longptr_t ; msg, . Longptr_t ; parm1, . Longptr_t ; parm2 . ). overridevirtual . Process messages for new chain dialog. ; Reimplemented from TGCompositeFrame.; Definition at line 285 of file TSessionDialogs.cxx. ◆ Streamer(). void TNewChainDlg::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGTransientFrame. ◆ StreamerNVirtual(). void TNewChainDlg::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 61 of file TSessionDialogs.h. ◆ UpdateList(). void TNewChainDlg::UpdateList ; (; ). Update Memory list view. ; Definition at line 211 of file TSessionDialogs.cxx. Member Data Documentation. ◆ fCancelButton. TGTextButton* TNewChainDlg::fCancelButton. private . Definition at line 44 of file TSessionDialogs.h. ◆ fChain. TObject* TNewChainDlg::fChain. private . Definition at line 46 of file TSessionDialogs.h. ◆ fChains. TSeqCollection* TNewChainDlg::fChains. private . Definition at line 45 of file TSessionDialogs.h. ◆ fContents. TGFileContainer* TNewChainDlg::fContents. private . Definition at line 38 of file TSessionDialogs.h. ◆ fListView. TGListView* TNewChainDlg::fListView. private . Definition at line 39 of file TSessionDialogs.h. ◆ fLVContainer. TGLVContainer* TNewChainDlg::fLVContainer. private . Definition at line 40 of file TSessionDialogs.h. ◆ fName. TGTextEntry* TNewChainDlg::fName. private . Definition at line 42 of file TSessionDialogs.h. ◆ fNameBuf. TGTextBuffer* TNewChainDlg::fNameBuf. private . Definition at line 41 of file TSessionDialogs.h. ◆ fOkButton. TGTextButton* TNewChainDlg::fOkButton. private . Definition at line 43 of file TSessionDialogs.h. gui/sessionviewer/inc/TSessionDialogs.h; gui/sessionviewer/src/TSessionDialogs.cxx. TNewChainDlg. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:02 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNewChainDlg.html:40879,Guid,Guide,40879,doc/master/classTNewChainDlg.html,https://root.cern,https://root.cern/doc/master/classTNewChainDlg.html,1,['Guid'],['Guide']
Usability," Definition at line 182 of file MethodPDEFoam.h. ◆ fNmin. UInt_t TMVA::MethodPDEFoam::fNmin. private . minimal number of events in cell necessary to split cell"" ; Definition at line 190 of file MethodPDEFoam.h. ◆ fnSampl. Int_t TMVA::MethodPDEFoam::fnSampl. private . Number of MC events per cell in build-up (1000) ; Definition at line 184 of file MethodPDEFoam.h. ◆ fPeekMax. Bool_t TMVA::MethodPDEFoam::fPeekMax. private . BACKWARDS COMPATIBILITY: peek up cell with max. driver integral for split. ; Definition at line 203 of file MethodPDEFoam.h. ◆ fSigBgSeparated. Bool_t TMVA::MethodPDEFoam::fSigBgSeparated. private . Separate Sig and Bg, or not. ; Definition at line 178 of file MethodPDEFoam.h. ◆ fTargetSelection. ETargetSelection TMVA::MethodPDEFoam::fTargetSelection. private . method of selecting the target (only mulit target regr.) ; Definition at line 198 of file MethodPDEFoam.h. ◆ fTargetSelectionStr. TString TMVA::MethodPDEFoam::fTargetSelectionStr. private . method of selecting the target (only mulit target regr.) ; Definition at line 197 of file MethodPDEFoam.h. ◆ fUseYesNoCell. Bool_t TMVA::MethodPDEFoam::fUseYesNoCell. private . return -1 or 1 for bg or signal like event ; Definition at line 200 of file MethodPDEFoam.h. ◆ fVolFrac. Float_t TMVA::MethodPDEFoam::fVolFrac. private . volume fraction (used for density calculation during buildup) ; Definition at line 181 of file MethodPDEFoam.h. ◆ fXmax. std::vector<Float_t> TMVA::MethodPDEFoam::fXmax. private . range for histograms and foams ; Definition at line 205 of file MethodPDEFoam.h. ◆ fXmin. std::vector<Float_t> TMVA::MethodPDEFoam::fXmin. private . Definition at line 205 of file MethodPDEFoam.h. Libraries for TMVA::MethodPDEFoam:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/MethodPDEFoam.h; tmva/tmva/src/MethodPDEFoam.cxx. TMVAMethodPDEFoam. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:37 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodPDEFoam.html:51261,Guid,Guide,51261,doc/master/classTMVA_1_1MethodPDEFoam.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodPDEFoam.html,1,['Guid'],['Guide']
Usability, Definition at line 190 of file AdaptiveIntegratorMultiDim.h. ◆ fFun. const IMultiGenFunction* ROOT::Math::AdaptiveIntegratorMultiDim::fFun. private . Definition at line 195 of file AdaptiveIntegratorMultiDim.h. ◆ fMaxPts. unsigned int ROOT::Math::AdaptiveIntegratorMultiDim::fMaxPts. private . maximum number of function evaluation requested ; Definition at line 184 of file AdaptiveIntegratorMultiDim.h. ◆ fMinPts. unsigned int ROOT::Math::AdaptiveIntegratorMultiDim::fMinPts. private . minimum number of function evaluation requested ; Definition at line 183 of file AdaptiveIntegratorMultiDim.h. ◆ fNEval. int ROOT::Math::AdaptiveIntegratorMultiDim::fNEval. private . number of function evaluation ; Definition at line 192 of file AdaptiveIntegratorMultiDim.h. ◆ fRelError. double ROOT::Math::AdaptiveIntegratorMultiDim::fRelError. private . Relative error. ; Definition at line 191 of file AdaptiveIntegratorMultiDim.h. ◆ fRelTol. double ROOT::Math::AdaptiveIntegratorMultiDim::fRelTol. private . relative tolerance ; Definition at line 187 of file AdaptiveIntegratorMultiDim.h. ◆ fResult. double ROOT::Math::AdaptiveIntegratorMultiDim::fResult. private . last integration result ; Definition at line 189 of file AdaptiveIntegratorMultiDim.h. ◆ fSize. unsigned int ROOT::Math::AdaptiveIntegratorMultiDim::fSize. private . max size of working array (explode with dimension) ; Definition at line 185 of file AdaptiveIntegratorMultiDim.h. ◆ fStatus. int ROOT::Math::AdaptiveIntegratorMultiDim::fStatus. private . status of algorithm (error if not zero) ; Definition at line 193 of file AdaptiveIntegratorMultiDim.h. Libraries for ROOT::Math::AdaptiveIntegratorMultiDim:. [legend]; The documentation for this class was generated from the following files:; math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h; math/mathcore/src/AdaptiveIntegratorMultiDim.cxx. ROOTMathAdaptiveIntegratorMultiDim. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:19 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1AdaptiveIntegratorMultiDim.html:14762,Guid,Guide,14762,doc/master/classROOT_1_1Math_1_1AdaptiveIntegratorMultiDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1AdaptiveIntegratorMultiDim.html,1,['Guid'],['Guide']
Usability, Definition at line 266 of file MethodBase.h. ◆ ReadWeightsFromXML(). void TMVA::MethodCFMlpANN::ReadWeightsFromXML ; (; void * ; wghtnode). virtual . read weights from xml file ; Implements TMVA::MethodBase.; Definition at line 581 of file MethodCFMlpANN.cxx. ◆ Streamer(). virtual void TMVA::MethodCFMlpANN::Streamer ; (; TBuffer & ; ). virtual . Reimplemented from TMVA::MethodBase. ◆ StreamerNVirtual(). void TMVA::MethodCFMlpANN::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 176 of file MethodCFMlpANN.h. ◆ Train(). void TMVA::MethodCFMlpANN::Train ; (; void ; ). virtual . training of the Clement-Ferrand NN classifier ; Implements TMVA::MethodBase.; Definition at line 285 of file MethodCFMlpANN.cxx. Member Data Documentation. ◆ fClass. std::vector<Int_t>* TMVA::MethodCFMlpANN::fClass. private . Definition at line 157 of file MethodCFMlpANN.h. ◆ fData. TMatrixF* TMVA::MethodCFMlpANN::fData. private . Definition at line 156 of file MethodCFMlpANN.h. ◆ fLayerSpec. TString TMVA::MethodCFMlpANN::fLayerSpec. private . Definition at line 165 of file MethodCFMlpANN.h. ◆ fNcycles. Int_t TMVA::MethodCFMlpANN::fNcycles. private . Definition at line 160 of file MethodCFMlpANN.h. ◆ fNlayers. Int_t TMVA::MethodCFMlpANN::fNlayers. private . Definition at line 159 of file MethodCFMlpANN.h. ◆ fNodes. Int_t* TMVA::MethodCFMlpANN::fNodes. private . Definition at line 161 of file MethodCFMlpANN.h. ◆ fYNN. Double_t** TMVA::MethodCFMlpANN::fYNN. private . Definition at line 164 of file MethodCFMlpANN.h. ◆ MethodCFMlpANN_nsel. Int_t TMVA::MethodCFMlpANN::MethodCFMlpANN_nsel. private . Definition at line 166 of file MethodCFMlpANN.h. Libraries for TMVA::MethodCFMlpANN:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/MethodCFMlpANN.h; tmva/tmva/src/MethodCFMlpANN.cxx. TMVAMethodCFMlpANN. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:34 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodCFMlpANN.html:43537,Guid,Guide,43537,doc/master/classTMVA_1_1MethodCFMlpANN.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodCFMlpANN.html,1,['Guid'],['Guide']
Usability," Definition at line 340 of file RanluxppEngineImpl.cxx. ◆ Skip(). template<int w, int p, int u> . void ROOT::Math::RanluxppEngineImpl< w, p, u >::Skip ; (; uint64_t ; n). inline . Skip n random numbers without generating them. ; Definition at line 369 of file RanluxppEngineImpl.cxx. ◆ Skip24(). template<int w, int p, int u> . void ROOT::Math::RanluxppEngineImpl< w, p, u >::Skip24 ; (; ). inlineprivate . Skip 24 RANLUX numbers. ; Definition at line 179 of file RanluxppEngineImpl.cxx. Friends And Related Symbol Documentation. ◆ RanluxppCompatEngineLuescherImpl< w, p >. template<int w, int p, int u> . friend class RanluxppCompatEngineLuescherImpl< w, p >. friend . Definition at line 809 of file RanluxppEngineImpl.cxx. Member Data Documentation. ◆ fCarry. template<int w, int p, int u> . unsigned ROOT::Math::RanluxppEngineImpl< w, p, u >::fCarry. private . Carry bit of the RANLUX state. ; Definition at line 155 of file RanluxppEngineImpl.cxx. ◆ fPosition. template<int w, int p, int u> . int ROOT::Math::RanluxppEngineImpl< w, p, u >::fPosition = 0. private . Current position in bits. ; Definition at line 156 of file RanluxppEngineImpl.cxx. ◆ fState. template<int w, int p, int u> . uint64_t ROOT::Math::RanluxppEngineImpl< w, p, u >::fState[9]. private . RANLUX state of the generator. ; Definition at line 154 of file RanluxppEngineImpl.cxx. ◆ kA. template<int w, int p, int u> . constexpr const uint64_t* ROOT::Math::RanluxppEngineImpl< w, p, u >::kA = RanluxppData<p>::kA. staticconstexprprivate . Definition at line 158 of file RanluxppEngineImpl.cxx. ◆ kMaxPos. template<int w, int p, int u> . constexpr int ROOT::Math::RanluxppEngineImpl< w, p, u >::kMaxPos = (u == 0) ? 9 * 64 : u * w. staticconstexprprivate . Definition at line 159 of file RanluxppEngineImpl.cxx. math/mathcore/inc/Math/RanluxppEngine.h; math/mathcore/src/RanluxppEngineImpl.cxx. ROOTMathRanluxppEngineImpl. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:23 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppEngineImpl.html:6271,Guid,Guide,6271,doc/master/classROOT_1_1Math_1_1RanluxppEngineImpl.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1RanluxppEngineImpl.html,1,['Guid'],['Guide']
Usability," Definition at line 365 of file RLogger.hxx. ◆ R__LOG_ERROR. #define R__LOG_ERROR; (;  ; ...);    R__LOG_TO_CHANNEL(ROOT::Experimental::ELogLevel::kError, __VA_ARGS__). Definition at line 362 of file RLogger.hxx. ◆ R__LOG_FATAL. #define R__LOG_FATAL; (;  ; ...);    R__LOG_TO_CHANNEL(ROOT::Experimental::ELogLevel::kFatal, __VA_ARGS__). Definition at line 361 of file RLogger.hxx. ◆ R__LOG_INFO. #define R__LOG_INFO; (;  ; ...);    R__LOG_TO_CHANNEL(ROOT::Experimental::ELogLevel::kInfo, __VA_ARGS__). Definition at line 364 of file RLogger.hxx. ◆ R__LOG_PRETTY_FUNCTION. #define R__LOG_PRETTY_FUNCTION   __PRETTY_FUNCTION__. Definition at line 326 of file RLogger.hxx. ◆ R__LOG_TO_CHANNEL. #define R__LOG_TO_CHANNEL; (;  ; SEVERITY, .  ; CHANNEL . ). Value: ((SEVERITY < ROOT::Experimental::ELogLevel::kInfo + 0) || \; ROOT::Experimental::Internal::GetChannelOrManager(CHANNEL).GetEffectiveVerbosity( \; ROOT::Experimental::RLogManager::Get()) >= SEVERITY) && \; ROOT::Experimental::Detail::RLogBuilder(SEVERITY, ROOT::Experimental::Internal::GetChannelOrManager(CHANNEL), \; __FILE__, __LINE__, R__LOG_PRETTY_FUNCTION); R__LOG_PRETTY_FUNCTION#define R__LOG_PRETTY_FUNCTIONDefinition RLogger.hxx:326; ROOT::Experimental::RLogChannel::GetEffectiveVerbosityELogLevel GetEffectiveVerbosity(const RLogManager &mgr) constDefinition RLogger.hxx:313; ROOT::Experimental::RLogManager::Getstatic RLogManager & Get()Definition RLogger.cxx:62; ROOT::Experimental::Internal::GetChannelOrManagerRLogChannel & GetChannelOrManager()Definition RLogger.hxx:302; ROOT::Experimental::ELogLevel::kInfo@ kInfoInformational messages; used for instance for tracing. Definition at line 344 of file RLogger.hxx. ◆ R__LOG_WARNING. #define R__LOG_WARNING; (;  ; ...);    R__LOG_TO_CHANNEL(ROOT::Experimental::ELogLevel::kWarning, __VA_ARGS__). Definition at line 363 of file RLogger.hxx. corefoundationincROOTRLogger.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:14 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RLogger_8hxx.html:6487,Guid,Guide,6487,doc/master/RLogger_8hxx.html,https://root.cern,https://root.cern/doc/master/RLogger_8hxx.html,1,['Guid'],['Guide']
Usability," Definition at line 459 of file TSelEventGen.cxx. ◆ Streamer(). void TSelEventGen::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TSelector. ◆ StreamerNVirtual(). void TSelEventGen::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 74 of file TSelEventGen.h. ◆ Terminate(). void TSelEventGen::Terminate ; (; void ; ). overridevirtual . The Terminate() function is the last function to be called during a query. ; It always runs on the client, it can be used to present the results graphically or save the results to file. ; Reimplemented from TSelector.; Definition at line 480 of file TSelEventGen.cxx. ◆ Version(). Int_t TSelEventGen::Version ; (; ); const. inlineoverridevirtual . Reimplemented from TSelector.; Definition at line 60 of file TSelEventGen.h. Member Data Documentation. ◆ fBaseDir. TString TSelEventGen::fBaseDir. private . Definition at line 37 of file TSelEventGen.h. ◆ fChain. TTree* TSelEventGen::fChain. Definition at line 55 of file TSelEventGen.h. ◆ fFilesGenerated. TList* TSelEventGen::fFilesGenerated. private . Definition at line 45 of file TSelEventGen.h. ◆ fGenerateFun. TMacro* TSelEventGen::fGenerateFun. private . Definition at line 47 of file TSelEventGen.h. ◆ fNEvents. Long64_t TSelEventGen::fNEvents. private . Definition at line 39 of file TSelEventGen.h. ◆ fNTracks. Int_t TSelEventGen::fNTracks. private . Definition at line 40 of file TSelEventGen.h. ◆ fNTracksMax. Int_t TSelEventGen::fNTracksMax. private . Definition at line 41 of file TSelEventGen.h. ◆ fRegenerate. Int_t TSelEventGen::fRegenerate. private . Definition at line 42 of file TSelEventGen.h. ◆ fTotalGen. TObject* TSelEventGen::fTotalGen. private . Definition at line 44 of file TSelEventGen.h. proof/proofbench/inc/TSelEventGen.h; proof/proofbench/src/TSelEventGen.cxx. TSelEventGen. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:26 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSelEventGen.html:20869,Guid,Guide,20869,doc/master/classTSelEventGen.html,https://root.cern,https://root.cern/doc/master/classTSelEventGen.html,1,['Guid'],['Guide']
Usability," Definition at line 52 of file TFileMerger.h. ◆ fMaxOpenedFiles. Int_t TFileMerger::fMaxOpenedFiles. protected . Maximum number of files opened at the same time by the TFileMerger. ; Definition at line 51 of file TFileMerger.h. ◆ fMergeList. TList TFileMerger::fMergeList. protected . list of TObjString containing the name of the files need to be merged ; Definition at line 55 of file TFileMerger.h. ◆ fMergeOptions. TString TFileMerger::fMergeOptions. protected . Options (in string format) to be passed down to the Merge functions. ; Definition at line 47 of file TFileMerger.h. ◆ fMsgPrefix. TString TFileMerger::fMsgPrefix {""TFileMerger""}. protected . Prefix to be used when printing informational message (default TFileMerger) ; Definition at line 49 of file TFileMerger.h. ◆ fNoTrees. Bool_t TFileMerger::fNoTrees {kFALSE}. protected . True if Trees should not be merged (default is kFALSE) ; Definition at line 43 of file TFileMerger.h. ◆ fObjectNames. TString TFileMerger::fObjectNames. protected . List of object names to be either merged exclusively or skipped. ; Definition at line 54 of file TFileMerger.h. ◆ fOutputFile. TFile* TFileMerger::fOutputFile {nullptr}. protected . The outputfile for merging. ; Definition at line 40 of file TFileMerger.h. ◆ fOutputFilename. TString TFileMerger::fOutputFilename. protected . The name of the outputfile for merging. ; Definition at line 41 of file TFileMerger.h. ◆ fPrintLevel. Int_t TFileMerger::fPrintLevel {0}. protected . How much information to print out at run time. ; Definition at line 46 of file TFileMerger.h. ◆ fWatch. TStopwatch TFileMerger::fWatch. protected . Stop watch to measure file copy speed. ; Definition at line 38 of file TFileMerger.h. Libraries for TFileMerger:. [legend]; The documentation for this class was generated from the following files:; io/io/inc/TFileMerger.h; io/io/src/TFileMerger.cxx. TFileMerger. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:51 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileMerger.html:30663,Guid,Guide,30663,doc/master/classTFileMerger.html,https://root.cern,https://root.cern/doc/master/classTFileMerger.html,1,['Guid'],['Guide']
Usability," Definition at line 66 of file SdivSqrtSplusB.h. ◆ DeclFileName(). static const char * TMVA::SdivSqrtSplusB::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 66 of file SdivSqrtSplusB.h. ◆ GetSeparationGain(). Double_t TMVA::SdivSqrtSplusB::GetSeparationGain ; (; const Double_t ; nSelS, . const Double_t ; nSelB, . const Double_t ; nTotS, . const Double_t ; nTotB . ). virtual . Separation Gain: the measure of how the quality of separation of the sample increases by splitting the sample e.g. ; into a ""left-node"" and a ""right-node"" (N * Index_parent) - (N_left * Index_left) - (N_right * Index_right) this is then the quality criterion which is optimized for when trying to increase the information in the system (making the best selection ; Reimplemented from TMVA::SeparationBase.; Definition at line 58 of file SdivSqrtSplusB.cxx. ◆ GetSeparationIndex(). Double_t TMVA::SdivSqrtSplusB::GetSeparationIndex ; (; const Double_t ; s, . const Double_t ; b . ). virtual . Index = S/sqrt(S+B) (statistical significance) ; Implements TMVA::SeparationBase.; Definition at line 44 of file SdivSqrtSplusB.cxx. ◆ IsA(). virtual TClass * TMVA::SdivSqrtSplusB::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::SeparationBase.; Definition at line 66 of file SdivSqrtSplusB.h. ◆ Streamer(). virtual void TMVA::SdivSqrtSplusB::Streamer ; (; TBuffer & ; ). virtual . Reimplemented from TMVA::SeparationBase. ◆ StreamerNVirtual(). void TMVA::SdivSqrtSplusB::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 66 of file SdivSqrtSplusB.h. Libraries for TMVA::SdivSqrtSplusB:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/SdivSqrtSplusB.h; tmva/tmva/src/SdivSqrtSplusB.cxx. TMVASdivSqrtSplusB. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:42 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1SdivSqrtSplusB.html:4885,Guid,Guide,4885,doc/master/classTMVA_1_1SdivSqrtSplusB.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1SdivSqrtSplusB.html,1,['Guid'],['Guide']
Usability," Definition at line 670 of file TQCommand.cxx. ◆ GetNRargs(). Int_t TQCommand::GetNRargs ; (; ); const. Returns a number of redo arguments. ; Definition at line 768 of file TQCommand.cxx. ◆ GetNUargs(). Int_t TQCommand::GetNUargs ; (; ); const. Returns a number of undo arguments. ; Definition at line 776 of file TQCommand.cxx. ◆ GetObject(). void * TQCommand::GetObject ; (; ); const. Returns an object for which undo redo actions are applied. ; Definition at line 784 of file TQCommand.cxx. ◆ GetRedo(). TQConnection * TQCommand::GetRedo ; (; ); const. inline . Definition at line 75 of file TQCommand.h. ◆ GetRedoArgs(). Long_t * TQCommand::GetRedoArgs ; (; ); const. Returns a pointer to array of redo arguments. ; Definition at line 752 of file TQCommand.cxx. ◆ GetRedoName(). const char * TQCommand::GetRedoName ; (; ); const. Returns the name of redo command. ; Definition at line 736 of file TQCommand.cxx. ◆ GetStatus(). Int_t TQCommand::GetStatus ; (; ); const. Returns a number of sequential undo or redo operations. ; Definition at line 792 of file TQCommand.cxx. ◆ GetTitle(). const char * TQCommand::GetTitle ; (; ); const. overridevirtual . Returns command description. ; By default, ""ClassName::RedoName(args)_ClassName::UndoName(args)"" ; Reimplemented from TObject.; Definition at line 713 of file TQCommand.cxx. ◆ GetUndo(). TQConnection * TQCommand::GetUndo ; (; ); const. inline . Definition at line 76 of file TQCommand.h. ◆ GetUndoArgs(). Long_t * TQCommand::GetUndoArgs ; (; ); const. Returns a pointer to array of undo arguments. ; Definition at line 760 of file TQCommand.cxx. ◆ GetUndoName(). const char * TQCommand::GetUndoName ; (; ); const. Returns the name of undo command. ; Definition at line 744 of file TQCommand.cxx. ◆ Init(). void TQCommand::Init ; (; const char * ; cl, . void * ; object, . const char * ; redo, . const char * ; undo . ). protectedvirtual . Common protected method used in several constructors. ; Definition at line 120 of file TQCommand.cxx. ◆ ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTQCommand.html:38526,undo,undo,38526,doc/master/classTQCommand.html,https://root.cern,https://root.cern/doc/master/classTQCommand.html,1,['undo'],['undo']
Usability," Definition at line 908 of file QuartzMarker.mm. ◆ DrawTextLineNoKerning(). void ROOT::Quartz::DrawTextLineNoKerning ; (; CGContextRef ; ctx, . CTFontRef ; font, . const std::vector< UniChar > & ; text, . Int_t ; x, . Int_t ; y . ). Definition at line 319 of file QuartzText.mm. ◆ SetFillAreaParameters(). bool ROOT::Quartz::SetFillAreaParameters ; (; CGContextRef ; ctx, . unsigned * ; patternIndex . ). Definition at line 391 of file QuartzFillArea.mm. ◆ SetFillColor(). Bool_t ROOT::Quartz::SetFillColor ; (; CGContextRef ; ctx, . Color_t ; colorIndex . ). Definition at line 304 of file QuartzFillArea.mm. ◆ SetFillPattern(). bool ROOT::Quartz::SetFillPattern ; (; CGContextRef ; ctx, . const unsigned * ; patternIndex . ). Definition at line 350 of file QuartzFillArea.mm. ◆ SetLineColor(). Bool_t ROOT::Quartz::SetLineColor ; (; CGContextRef ; ctx, . Color_t ; colorIndex . ). Definition at line 29 of file QuartzLine.mm. ◆ SetLineStyle(). void ROOT::Quartz::SetLineStyle ; (; CGContextRef ; ctx, . Int_t ; lstyle . ). Definition at line 74 of file QuartzLine.mm. ◆ SetLineType(). void ROOT::Quartz::SetLineType ; (; CGContextRef ; ctx, . Int_t ; n, . Int_t * ; dash . ). Definition at line 50 of file QuartzLine.mm. ◆ SetLineWidth(). void ROOT::Quartz::SetLineWidth ; (; CGContextRef ; ctx, . Int_t ; width . ). Definition at line 108 of file QuartzLine.mm. Variable Documentation. ◆ defaultFontOrientation. const CTFontOrientation ROOT::Quartz::defaultFontOrientation = kCTFontDefaultOrientation. Definition at line 38 of file QuartzText.mm. ◆ horizontalFontOrientation. const CTFontOrientation ROOT::Quartz::horizontalFontOrientation = kCTFontHorizontalOrientation. Definition at line 39 of file QuartzText.mm. ◆ verticalFontOrientation. const CTFontOrientation ROOT::Quartz::verticalFontOrientation = kCTFontVerticalOrientation. Definition at line 40 of file QuartzText.mm. ROOTQuartz. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Quartz.html:16163,Guid,Guide,16163,doc/master/namespaceROOT_1_1Quartz.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Quartz.html,1,['Guid'],['Guide']
Usability," Definition at line 95 of file TFileCacheRead.h. ◆ GetUnzipBuffer(). virtual Int_t TFileCacheRead::GetUnzipBuffer ; (; char ** ; , . Long64_t ; , . Int_t ; , . Bool_t * ;  . ). inlinevirtual . Reimplemented in TTreeCacheUnzip.; Definition at line 97 of file TFileCacheRead.h. ◆ IsA(). TClass * TFileCacheRead::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TTreeCache, and TTreeCacheUnzip.; Definition at line 119 of file TFileCacheRead.h. ◆ IsAsyncReading(). virtual Bool_t TFileCacheRead::IsAsyncReading ; (; ); const. inlinevirtual . Definition at line 99 of file TFileCacheRead.h. ◆ IsEnablePrefetching(). virtual Bool_t TFileCacheRead::IsEnablePrefetching ; (; ); const. inlinevirtual . Definition at line 101 of file TFileCacheRead.h. ◆ IsLearning(). virtual Bool_t TFileCacheRead::IsLearning ; (; ); const. inlinevirtual . Reimplemented in TTreeCache.; Definition at line 102 of file TFileCacheRead.h. ◆ LearnBranch(). virtual Int_t TFileCacheRead::LearnBranch ; (; TBranch * ; , . Bool_t ; = kFALSE . ). inlinevirtual . Reimplemented in TTreeCache.; Definition at line 103 of file TFileCacheRead.h. ◆ operator=(). TFileCacheRead & TFileCacheRead::operator= ; (; const TFileCacheRead & ; ). privatedelete . ◆ Prefetch(). void TFileCacheRead::Prefetch ; (; Long64_t ; pos, . Int_t ; len . ). virtual . Add block of length len at position pos in the list of blocks to be prefetched. ; If pos <= 0 the current blocks (if any) are reset. ; Definition at line 202 of file TFileCacheRead.cxx. ◆ Print(). void TFileCacheRead::Print ; (; Option_t * ; option = """"); const. overridevirtual . Print cache statistics. ; The format is: ******TreeCache statistics for file: cms2.root ****** Reading............................: 72761843 bytes in 7 transactions Readahead..........................: 256000 bytes with overhead = 0 bytes Average transaction................: 10394.549000 Kbytes Number of blocks in current cach",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileCacheRead.html:20332,Learn,LearnBranch,20332,doc/master/classTFileCacheRead.html,https://root.cern,https://root.cern/doc/master/classTFileCacheRead.html,1,['Learn'],['LearnBranch']
Usability," Definition at line 95 of file TGImageMap.h. ◆ GetPopup(). TGPopupMenu * TGRegionWithId::GetPopup ; (; ); const. inline . Definition at line 99 of file TGImageMap.h. ◆ GetToolTipText(). TGToolTip * TGRegionWithId::GetToolTipText ; (; ); const. inline . Definition at line 96 of file TGImageMap.h. ◆ IsA(). TClass * TGRegionWithId::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TGRegion.; Definition at line 103 of file TGImageMap.h. ◆ operator=(). TGRegionWithId & TGRegionWithId::operator= ; (; const TGRegionWithId & ; ). privatedelete . ◆ SetPopup(). void TGRegionWithId::SetPopup ; (; TGPopupMenu * ; popup). inline . Definition at line 100 of file TGImageMap.h. ◆ SetToolTipText(). void TGRegionWithId::SetToolTipText ; (; const char * ; text, . Long_t ; delayms, . const TGFrame * ; frame . ). Set tool tip text associated with this region. ; The delay is in milliseconds (minimum 250). To remove tool tip call method with text = 0. ; Definition at line 397 of file TGImageMap.cxx. ◆ Streamer(). void TGRegionWithId::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGRegion. ◆ StreamerNVirtual(). void TGRegionWithId::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 103 of file TGImageMap.h. Member Data Documentation. ◆ fId. Int_t TGRegionWithId::fId. protected . region id ; Definition at line 82 of file TGImageMap.h. ◆ fPopup. TGPopupMenu* TGRegionWithId::fPopup. protected . popup menu ; Definition at line 84 of file TGImageMap.h. ◆ fTip. TGToolTip* TGRegionWithId::fTip. protected . tooltip ; Definition at line 83 of file TGImageMap.h. Libraries for TGRegionWithId:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGImageMap.h; gui/gui/src/TGImageMap.cxx. TGRegionWithId. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGRegionWithId.html:17943,Guid,Guide,17943,doc/master/classTGRegionWithId.html,https://root.cern,https://root.cern/doc/master/classTGRegionWithId.html,1,['Guid'],['Guide']
Usability," Delete(Option_t* option = """"); If ""opt"" is not zero delete every merged command which option string is; equal to ""opt"". If ""opt"" is zero - delete all merged commands. Bool_t CanMerge(TQCommand* c) const; Two commands can be merged if they can be composed into; a single command (Macro command). To allow merging commands user might override this function. void Merge(TQCommand* c); Add command to the list of merged commands.; This make it possible to group complex actions together so an end user; can undo and redo them with one command. Execution of TQUndoManager::Undo(),; TQUndoManager::Redo() methods only invokes the top level command as a whole. Merge method is analogous to logical join operation. Note: Merge method invokes redo action. Long64_t Merge(TCollection* , TFileMergeInfo* ); Merge a collection of TQCommand. void Add(TObject* obj, Option_t* opt); Add command to the list of merged commands. Option string can contain substrings:; ""compress"" - try to compress input command; ""radd"" - execute redo action of input command; ""uadd"" - execute undo action of input command. Bool_t CanCompress(TQCommand* c) const; By default, commands can be compressed if they are:. - equal; - setter commands. More complicated commands might want to override this function. void Compress(TQCommand* c); Compress command. Compression is analogous to arithmetic ""addition operation"". Note:; - The compressed command will be deleted.; - Execution Compress method invokes Redo action with new redo arguments; inheritied from compressed command. More complicated commands might want to override this function. Bool_t IsEqual(const TObject* obj) const; Equal comparison. The commands are equal if they are; applied to the same object and have the same Redo/Undo actions. More complicated commands might want to override this function. Bool_t IsSetter() const; Returns kTRUE is command if Redo is the same as Undo function; and is the setter action. By default, all functions with names like ""SetXXX"" or ""se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TQCommand.html:20904,undo,undo,20904,root/html530/TQCommand.html,https://root.cern,https://root.cern/root/html530/TQCommand.html,5,['undo'],['undo']
Usability," Details::RWebWindowPlugin. friend . Definition at line 42 of file RFileDialog.hxx. Member Data Documentation. ◆ fBrowsable. RBrowserData ROOT::RFileDialog::fBrowsable. protected . ! central browsing element ; Definition at line 55 of file RFileDialog.hxx. ◆ fCallback. RFileDialogCallback_t ROOT::RFileDialog::fCallback. protected . ! function receiving result, called once ; Definition at line 64 of file RFileDialog.hxx. ◆ fCanChangePath. bool ROOT::RFileDialog::fCanChangePath {true}. protected . ! if working path can be changed via gui elements ; Definition at line 56 of file RFileDialog.hxx. ◆ fDidSelect. bool ROOT::RFileDialog::fDidSelect {false}. protected . ! true when dialog is selected or closed ; Definition at line 60 of file RFileDialog.hxx. ◆ fKind. EDialogTypes ROOT::RFileDialog::fKind {kOpenFile}. protected . ! dialog kind OpenFile, SaveAs, NewFile ; Definition at line 53 of file RFileDialog.hxx. ◆ fNameFilters. std::vector<std::string> ROOT::RFileDialog::fNameFilters. protected . ! name filters ; Definition at line 62 of file RFileDialog.hxx. ◆ fSelect. std::string ROOT::RFileDialog::fSelect. protected . ! result of file selection ; Definition at line 63 of file RFileDialog.hxx. ◆ fSelectedFilter. std::string ROOT::RFileDialog::fSelectedFilter. protected . ! name of selected filter ; Definition at line 61 of file RFileDialog.hxx. ◆ fTitle. std::string ROOT::RFileDialog::fTitle. protected . ! title, when not specified default will be used ; Definition at line 54 of file RFileDialog.hxx. ◆ fWebWindow. std::shared_ptr<RWebWindow> ROOT::RFileDialog::fWebWindow. protected . ! web window for file dialog ; Definition at line 58 of file RFileDialog.hxx. Libraries for ROOT::RFileDialog:. [legend]; The documentation for this class was generated from the following files:; gui/browserv7/inc/ROOT/RFileDialog.hxx; gui/browserv7/src/RFileDialog.cxx. ROOTRFileDialog. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RFileDialog.html:14127,Guid,Guide,14127,doc/master/classROOT_1_1RFileDialog.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RFileDialog.html,1,['Guid'],['Guide']
Usability," Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development » Git Primer Git How Tos. Overview; Building on the tips and other points explained elsewhere, this workflow has the following advantages relative to always working on the master branch:. It is easy to keep track of upstream changes even when working on a protracted task.; The change tree remains simple, easy to understand at a glance and even (mostly) linear (revision trees with multiple developers can quickly start looking like a train switch yard); Unsightly ""merge with branch"" commits are minimized.; It is easy to keep separate unrelated tasks upon which you may be working simultaneously.; Commits related to each other can be kept together or merged for increased clarity. For the purposes of having an easy-to-remember label, I will refer to this workflow as the ""No Switch Yard"" (NoSY) workflow.; Details of NoSY; For each specific, well-defined task:. Create a local branch and switch to it:. git checkout -b <local-branch>. Work on the branch, both committing regularly and keeping up-to-date with the remote (eg):. git fetch origin; git rebase origin/master. When ready to push back to the main remote, squash related commits (see above).; Change back to your master branch:. git checkout master. Make sure your master is up-to-date:. git pull. Merge with the branch:. git merge --ff-only <local-branch>. If this operation fails:; Swap back to the other branch. git checkou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/git-how-tos.html:2158,simpl,simple,2158,d/git-how-tos.html,https://root.cern,https://root.cern/d/git-how-tos.html,1,['simpl'],['simple']
Usability," Distribution Functions (CDF)Cumulative distribution functions of various distributions ;  Statistical functions from truncated distributionsStatistical functions for the truncated distributions ;  Quantile FunctionsInverse functions of the cumulative distribution functions and the inverse of the complement of the cumulative distribution functions for various distributions ;  Special functionsSpecial mathematical functions ;  QuasiRandom number generators and distributionsClasses for generating QuasiRandom numbers and based on GSL ;  TMinuitThe Minuit Minimization package ;  Minuit2 Minimization LibraryNew Object-oriented implementation of the MINUIT minimization package ;  ▼SMatrixSMatrix Package for high performance vector and matrix computations ;  Expression Template Classes;  Generic Template FunctionsThese functions apply for any type T, such as a scalar, a vector or a matrix ;  Vector Template FunctionsThese functions apply to SVector types (and also to Vector expressions) and can return a vector expression or a scalar, like in the Dot product, or a matrix, like in the Tensor product ;  Matrix Template FunctionsThese function apply to matrices (and also Matrix expression) and can return a matrix expression of a particular defined type, like in the matrix multiplication or a vector, like in the matrix-vector product or a scalar like in the Similarity vector-matrix product ;  SMatrix Storage Representation;  Matrix and Vector classesClasses representing Matrices and Vectors of arbitrary type and dimension ;  Unuran;  RooFitRooFit toolkit classes. For documentation see (The RooFit Toolkit for Data Modeling)[http://root.cern.ch/drupal/content/roofit] ;  RooFitCoreCore RooFit classes ;  RooStatsRooStats is a package containing statistical tools built on top of RooFit ;  Tree LibraryTo store large quantities of same-class objects, ROOT provides the TTree and TNtuple classes . ROOT 6.06/09 - Reference Guide Generated on Sun Dec 10 2017 22:29:05 using Doxygen 1.8.9. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/modules.html:7484,Guid,Guide,7484,root/html606/modules.html,https://root.cern,https://root.cern/root/html606/modules.html,1,['Guid'],['Guide']
Usability," Documentation . Introduction; Welcome to ROOT; This documentation describes the software classes and functions that makes up the ROOT softare system as well as their application programming interface (API). This is not an introduction of ROOT, for this please refer to the ROOT User Guides and Manuals. This documentation is generated directly from the source code using Doxygen and in principle is kept up to date. The version of ROOT corresponding to this documentation is indicated at the page heading. You may also find in reference documentation page pointers to reference manuals for other ROOT versions.; How to use this reference documentation; The User’s Classes in the top bar provides the user API, mainly the list of main Users' classes organized by module or functionality. The full list of classes, both for the public API and for the implementation details are available under the All Classes tab. A classification of classes based on their C++ namespace can be found under the Namespace tab. The fully indexed list of all source code is available under the tab Files.; ROOT provides other types of documentation:. A general Users Guide is provided for a more in depth explanation of concepts and functionality available in the ROOT system.; A number of topical User Guides and Manuals for various components of the system.; A rich set of ROOT tutorials and code examples are offered to developers to exercise specific functionality.; A rich set of HowTo's is also present to discuss issues commonly faced by ROOT users. Caveat; We have moved recently to generate the documentation with Doxygen. To achieve this the comments in the source code needed to be formatted and written specifically for Doxygen to generated proper documentation. If you find missing documentation or inaccuracies please report them to our bug tracker. Detailed instructions on how to submit a bug can be found here. . ROOT 6.06/09 - Reference Guide Generated on Sun Dec 10 2017 22:29:05 using Doxygen 1.8.9. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/index.html:1337,Guid,Guide,1337,root/html606/index.html,https://root.cern,https://root.cern/root/html606/index.html,3,['Guid'],"['Guide', 'Guides']"
Usability," Documentation. ◆ BaseIntegratorOptions() [1/2]. ROOT::Math::BaseIntegratorOptions::BaseIntegratorOptions ; (; ). protected . protected constructor to avoid user creating this class ; constructor (protected) to avoid user creating this class ; Definition at line 125 of file IntegratorOptions.cxx. ◆ BaseIntegratorOptions() [2/2]. ROOT::Math::BaseIntegratorOptions::BaseIntegratorOptions ; (; const BaseIntegratorOptions & ; opt). Definition at line 132 of file IntegratorOptions.cxx. ◆ ~BaseIntegratorOptions(). virtual ROOT::Math::BaseIntegratorOptions::~BaseIntegratorOptions ; (; ). inlinevirtual . protected constructor to avoid user creating this class ; Definition at line 52 of file IntegratorOptions.h. Member Function Documentation. ◆ AbsTolerance(). double ROOT::Math::BaseIntegratorOptions::AbsTolerance ; (; ); const. inline . non-static methods for retrieving options ; absolute tolerance ; Definition at line 61 of file IntegratorOptions.h. ◆ ClearExtra(). void ROOT::Math::BaseIntegratorOptions::ClearExtra ; (; ). protected . Definition at line 161 of file IntegratorOptions.cxx. ◆ ExtraOptions(). IOptions * ROOT::Math::BaseIntegratorOptions::ExtraOptions ; (; ); const. inline . return extra options ; Definition at line 71 of file IntegratorOptions.h. ◆ Integrator(). virtual std::string ROOT::Math::BaseIntegratorOptions::Integrator ; (; ); const. pure virtual . name of 1D integrator ; Implemented in ROOT::Math::IntegratorOneDimOptions, and ROOT::Math::IntegratorMultiDimOptions. ◆ operator=(). BaseIntegratorOptions & ROOT::Math::BaseIntegratorOptions::operator= ; (; const BaseIntegratorOptions & ; opt). assignment operators ; Definition at line 137 of file IntegratorOptions.cxx. ◆ RelTolerance(). double ROOT::Math::BaseIntegratorOptions::RelTolerance ; (; ); const. inline . absolute tolerance ; Definition at line 64 of file IntegratorOptions.h. ◆ SetAbsTolerance(). void ROOT::Math::BaseIntegratorOptions::SetAbsTolerance ; (; double ; tol). inline . non-static methods ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1BaseIntegratorOptions.html:3215,Clear,ClearExtra,3215,doc/master/classROOT_1_1Math_1_1BaseIntegratorOptions.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1BaseIntegratorOptions.html,1,['Clear'],['ClearExtra']
Usability," Double_t *data)=0; TVirtualFFT::SineCosinestatic TVirtualFFT * SineCosine(Int_t ndim, Int_t *n, Int_t *r2rkind, Option_t *option)Returns a pointer to a sine or cosine transform of requested size and kind.Definition TVirtualFFT.cxx:279; TVirtualFFT::SetPointsComplexvirtual void SetPointsComplex(const Double_t *re, const Double_t *im)=0; TVirtualFFT::GetTransformFlagvirtual Option_t * GetTransformFlag() const =0; TVirtualFFT::GetTypevirtual Option_t * GetType() const =0; TVirtualFFT::Transformvirtual void Transform()=0; TVirtualFFT::GetPointComplexvirtual void GetPointComplex(Int_t ipoint, Double_t &re, Double_t &im, Bool_t fromInput=kFALSE) const =0; TVirtualFFT::SetPointvirtual void SetPoint(const Int_t *ipoint, Double_t re, Double_t im=0)=0; TVirtualFFT::GetPointsComplexvirtual void GetPointsComplex(Double_t *data, Bool_t fromInput=kFALSE) const =0; TVirtualFFT::GetPointsComplexvirtual void GetPointsComplex(Double_t *re, Double_t *im, Bool_t fromInput=kFALSE) const =0; TVirtualFFT::GetPointsRealvirtual Double_t * GetPointsReal(Bool_t fromInput=kFALSE) const =0; TVirtualFFT::GetSignvirtual Int_t GetSign() const =0; TVirtualFFT::GetNvirtual Int_t * GetN() const =0; TVirtualFFT::fgDefaultstatic TString fgDefaultDefinition TVirtualFFT.h:92; TVirtualFFT::SetPointComplexvirtual void SetPointComplex(Int_t ipoint, TComplex &c)=0; TVirtualFFT::fgFFTstatic TVirtualFFT * fgFFTDefinition TVirtualFFT.h:91; TVirtualFFT::GetPointRealvirtual Double_t GetPointReal(Int_t ipoint, Bool_t fromInput=kFALSE) const =0; TVirtualFFT::SetPointvirtual void SetPoint(Int_t ipoint, Double_t re, Double_t im=0)=0; TVirtualFFT::TVirtualFFTTVirtualFFT()Definition TVirtualFFT.h:96; TVirtualFFT::GetDefaultFFTstatic const char * GetDefaultFFT()static: return the name of the default fftDefinition TVirtualFFT.cxx:369; bool; double; int; nconst Int_t nDefinition legend1.C:16. corebaseincTVirtualFFT.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:04 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualFFT_8h_source.html:9838,Guid,Guide,9838,doc/master/TVirtualFFT_8h_source.html,https://root.cern,https://root.cern/doc/master/TVirtualFFT_8h_source.html,1,['Guid'],['Guide']
Usability," Double_t TH1::fMaximum. protected . Maximum value for plotting. ; Definition at line 100 of file TH1.h. ◆ fMinimum. Double_t TH1::fMinimum. protected . Minimum value for plotting. ; Definition at line 101 of file TH1.h. ◆ fNcells. Int_t TH1::fNcells. protected . Number of bins(1D), cells (2D) +U/Overflows. ; Definition at line 89 of file TH1.h. ◆ fNormFactor. Double_t TH1::fNormFactor. protected . Normalization factor. ; Definition at line 102 of file TH1.h. ◆ fOption. TString TH1::fOption. protected . Histogram options. ; Definition at line 105 of file TH1.h. ◆ fPainter. TVirtualHistPainter* TH1::fPainter. protected . ! Pointer to histogram painter ; Definition at line 112 of file TH1.h. ◆ fStatOverflows. EStatOverflows TH1::fStatOverflows. protected . Per object flag to use under/overflows in statistics. ; Definition at line 114 of file TH1.h. ◆ fSumw2. TArrayD TH1::fSumw2. protected . Array of sum of squares of weights. ; Definition at line 104 of file TH1.h. ◆ fTsumw. Double_t TH1::fTsumw. protected . Total Sum of weights. ; Definition at line 96 of file TH1.h. ◆ fTsumw2. Double_t TH1::fTsumw2. protected . Total Sum of squares of weights. ; Definition at line 97 of file TH1.h. ◆ fTsumwx. Double_t TH1::fTsumwx. protected . Total Sum of weight*X. ; Definition at line 98 of file TH1.h. ◆ fTsumwx2. Double_t TH1::fTsumwx2. protected . Total Sum of weight*X*X. ; Definition at line 99 of file TH1.h. ◆ fXaxis. TAxis TH1::fXaxis. protected . X axis descriptor. ; Definition at line 90 of file TH1.h. ◆ fYaxis. TAxis TH1::fYaxis. protected . Y axis descriptor. ; Definition at line 91 of file TH1.h. ◆ fZaxis. TAxis TH1::fZaxis. protected . Z axis descriptor. ; Definition at line 92 of file TH1.h. Libraries for TH1:. [legend]; The documentation for this class was generated from the following files:; hist/hist/inc/TH1.h; hist/hist/src/Haxis.cxx; hist/hist/src/TH1.cxx. TH1. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:43 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:228178,Guid,Guide,228178,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['Guid'],['Guide']
Usability," Double_t phimin=0, Double_t phimax=360)Make in one step a volume pointing to a sphere shape with given medium.Definition TGeoManager.cxx:3186; TGeoManager::SetTopVolumevoid SetTopVolume(TGeoVolume *vol)Set the top volume and corresponding node as starting point of the geometry.Definition TGeoManager.cxx:3655; TGeoManager::SetTopVisiblevoid SetTopVisible(Bool_t vis=kTRUE)make top volume visible on screenDefinition TGeoManager.cxx:2396; TGeoManager::MakeTubsTGeoVolume * MakeTubs(const char *name, TGeoMedium *medium, Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2)Make in one step a volume pointing to a tube segment shape with given medium.Definition TGeoManager.cxx:3213; TGeoMaterialBase class describing materials.Definition TGeoMaterial.h:34; TGeoMediumMedia are used to store properties related to tracking and which are useful only when using geometry ...Definition TGeoMedium.h:23; TGeoRotationClass describing rotations.Definition TGeoMatrix.h:168; TGeoTranslationClass describing translations.Definition TGeoMatrix.h:116; TGeoVolumeTGeoVolume, TGeoVolumeMulti, TGeoVolumeAssembly are the volume classes.Definition TGeoVolume.h:43; TGeoVolume::SetVisibilityvoid SetVisibility(Bool_t vis=kTRUE) overrideset visibility of this volumeDefinition TGeoVolume.cxx:2347; TGeoVolume::Drawvoid Draw(Option_t *option="""") overridedraw top volume according to optionDefinition TGeoVolume.cxx:1206; TGeoVolume::AddNodeOverlapvirtual void AddNodeOverlap(TGeoVolume *vol, Int_t copy_no, TGeoMatrix *mat=nullptr, Option_t *option="""")Add a TGeoNode to the list of nodes.Definition TGeoVolume.cxx:1044; TGeoVolume::SetLineColorvoid SetLineColor(Color_t lcolor) overrideSet the line color.Definition TGeoVolume.cxx:2169; AuthorDong Gyu Lee (ravir.nosp@m.us@h.nosp@m.anmai.nosp@m.l.ne.nosp@m.t), Dept. of Physics, Univ. of Seoul ; Definition in file tank.C. tutorialsgeomtank.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:28 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tank_8C.html:49651,Guid,Guide,49651,doc/master/tank_8C.html,https://root.cern,https://root.cern/doc/master/tank_8C.html,1,['Guid'],['Guide']
Usability," Double_t) const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); voidclearConvolutionWindow(); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); RooNumIntConfig&convIntConfig(); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNumConvPdf.html:4994,clear,clearEvalErrorLog,4994,root/html534/RooNumConvPdf.html,https://root.cern,https://root.cern/root/html534/RooNumConvPdf.html,3,['clear'],['clearEvalErrorLog']
Usability," Double_t) overrideTH2inlineprotectedvirtual; Build()TH1private; CanExtendAllAxes() constTH1virtual; CheckAxisLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLabels(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckBinLimits(const TAxis *a1, const TAxis *a2)TH1protectedstatic; CheckConsistency(const TH1 *h1, const TH1 *h2)TH1protectedstatic; CheckConsistentSubAxes(const TAxis *a1, Int_t firstBin1, Int_t lastBin1, const TAxis *a2, Int_t firstBin2=0, Int_t lastBin2=0)TH1protectedstatic; CheckedHash()TObjectinline; CheckEqualAxes(const TAxis *a1, const TAxis *a2)TH1protectedstatic; Chi2Test(const TH1 *h2, Option_t *option=""UU"", Double_t *res=nullptr) constTH1virtual; Chi2TestX(const TH1 *h2, Double_t &chi2, Int_t &ndf, Int_t &igood, Option_t *option=""UU"", Double_t *res=nullptr) constTH1virtual; Chisquare(TF1 *f1, Option_t *option="""") constTH1virtual; Class()TH2Fstatic; Class_Name()TH2Fstatic; Class_Version()TH2Finlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; ClearUnderflowAndOverflow()TH1virtual; Clone(const char *newname="""") const overrideTH1virtual; Compare(const TObject *obj) const overrideTNamedvirtual; ComputeIntegral(Bool_t onlyPositive=false)TH1virtual; Copy(TObject &hnew) const overrideTH2Fvirtual; TH2::TAttLine::Copy(TAttLine &attline) constTAttLine; TH2::TAttFill::Copy(TAttFill &attfill) constTAttFill; TH2::TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; TArrayF::Copy(TArrayF &array) constTArrayFinline; DeclFileName()TH2Finlinestatic; Delete(Option_t *option="""")TObjectvirtual; DirectoryAutoAdd(TDirectory *)TH1virtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTH1virtual; Divide(TF1 *f1, Double_t c1=1)TH1virtual; Divide(const TH1 *h1)TH1virtual; Divide(const TH1 *h1, const TH1 *h2, Double_t c1=1, Double_t c2=1, Option_t *option="""")TH1virtual; DoError(int level, const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2F-members.html:2572,Clear,Clear,2572,doc/master/classTH2F-members.html,https://root.cern,https://root.cern/doc/master/classTH2F-members.html,1,['Clear'],['Clear']
Usability," Double_t ; arg). virtual . evaluate gaussian ; Implements TMVA::TActivation.; Definition at line 44 of file TActivationRadial.cxx. ◆ EvalDerivative(). Double_t TMVA::TActivationRadial::EvalDerivative ; (; Double_t ; arg). virtual . evaluate derivative ; Implements TMVA::TActivation.; Definition at line 52 of file TActivationRadial.cxx. ◆ GetExpression(). TString TMVA::TActivationRadial::GetExpression ; (; ). virtual . get expressions for the gaussian and its derivatives ; Implements TMVA::TActivation.; Definition at line 60 of file TActivationRadial.cxx. ◆ GetMax(). Double_t TMVA::TActivationRadial::GetMax ; (; ). inlinevirtual . Implements TMVA::TActivation.; Definition at line 57 of file TActivationRadial.h. ◆ GetMin(). Double_t TMVA::TActivationRadial::GetMin ; (; ). inlinevirtual . Implements TMVA::TActivation.; Definition at line 54 of file TActivationRadial.h. ◆ IsA(). virtual TClass * TMVA::TActivationRadial::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::TActivation.; Definition at line 67 of file TActivationRadial.h. ◆ MakeFunction(). void TMVA::TActivationRadial::MakeFunction ; (; std::ostream & ; fout, . const TString & ; fncName . ). virtual . writes the sigmoid activation function source code ; Implements TMVA::TActivation.; Definition at line 69 of file TActivationRadial.cxx. ◆ Streamer(). virtual void TMVA::TActivationRadial::Streamer ; (; TBuffer & ; ). virtual . Reimplemented from TMVA::TActivation. ◆ StreamerNVirtual(). void TMVA::TActivationRadial::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 67 of file TActivationRadial.h. Libraries for TMVA::TActivationRadial:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/TActivationRadial.h; tmva/tmva/src/TActivationRadial.cxx. TMVATActivationRadial. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:43 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TActivationRadial.html:4688,Guid,Guide,4688,doc/master/classTMVA_1_1TActivationRadial.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TActivationRadial.html,1,['Guid'],['Guide']
Usability, Element > . virtual THilbertMatrixTSym< Element >::~THilbertMatrixTSym ; (; ). inlinevirtual . Definition at line 170 of file TMatrixTLazy.h. Member Function Documentation. ◆ Class(). template<class Element > . static TClass * THilbertMatrixTSym< Element >::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). template<class Element > . static const char * THilbertMatrixTSym< Element >::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). template<class Element > . static constexpr Version_t THilbertMatrixTSym< Element >::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 172 of file TMatrixTLazy.h. ◆ DeclFileName(). template<class Element > . static const char * THilbertMatrixTSym< Element >::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 172 of file TMatrixTLazy.h. ◆ FillIn(). template<class Element > . void THilbertMatrixTSym< Element >::FillIn ; (; TMatrixTSym< Element > & ; m); const. overrideprivatevirtual . Implements TMatrixTSymLazy< Element >.; Definition at line 222 of file TMatrixTLazy.cxx. ◆ IsA(). template<class Element > . TClass * THilbertMatrixTSym< Element >::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 172 of file TMatrixTLazy.h. ◆ Streamer(). template<class Element > . void THilbertMatrixTSym< Element >::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). template<class Element > . void THilbertMatrixTSym< Element >::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 172 of file TMatrixTLazy.h. math/matrix/inc/TMatrixTLazy.h; math/matrix/src/TMatrixTLazy.cxx. THilbertMatrixTSym. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:49 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHilbertMatrixTSym.html:13807,Guid,Guide,13807,doc/master/classTHilbertMatrixTSym.html,https://root.cern,https://root.cern/doc/master/classTHilbertMatrixTSym.html,1,['Guid'],['Guide']
Usability, EnumeratorkDEBUG ; kVERBOSE ; kINFO ; kWARNING ; kERROR ; kFATAL ; kSILENT ; kHEADER . Definition at line 55 of file Types.h. ◆ ETargetSelection. enum TMVA::ETargetSelection. EnumeratorkMean ; kMpv . Definition at line 44 of file PDEFoamMultiTarget.h. ◆ HistType. enum TMVA::HistType. EnumeratorkMVAType ; kProbaType ; kRarityType ; kCompareType . Definition at line 66 of file Types.h. ◆ VIType. enum TMVA::VIType. EnumeratorkShort ; kAll ; kRandom . Definition at line 69 of file Types.h. Member Data Documentation. ◆ BDT_Global__cbar. std::vector< TControlBar * > TMVA::BDT_Global__cbar. Definition at line 112 of file BDT.h. ◆ BDTReg_Global__cbar. std::vector< TControlBar * > TMVA::BDTReg_Global__cbar. Definition at line 101 of file BDT_Reg.h. ◆ GeneticAlgorithm__DEBUG__. const Bool_t TMVA::GeneticAlgorithm__DEBUG__ = kFALSE. Definition at line 50 of file GeneticAlgorithm.cxx. ◆ max_Events_. const int TMVA::max_Events_ = 200000. Definition at line 38 of file MethodCFMlpANN_def.h. ◆ max_nLayers_. const int TMVA::max_nLayers_ = 6. Definition at line 39 of file MethodCFMlpANN_def.h. ◆ max_nNodes_. const int TMVA::max_nNodes_ = 200. Definition at line 40 of file MethodCFMlpANN_def.h. ◆ max_nVar_. const int TMVA::max_nVar_ = 200. Definition at line 41 of file MethodCFMlpANN_def.h. ◆ MethodPDERS_UseFindRoot. const Bool_t TMVA::MethodPDERS_UseFindRoot = kFALSE. Definition at line 89 of file MethodPDERS.cxx. The documentation for this class was generated from the following files:; tmva/tmva/src/Configurable.cxx; tmva/tmva/inc/TMVA/CrossValidation.h; tmva/tmva/inc/TMVA/Types.h; tmva/tmva/inc/TMVA/MethodCFMlpANN_def.h; tmva/tmva/inc/TMVA/PDEFoam.h; tmva/tmva/inc/TMVA/PDEFoamMultiTarget.h; tmva/tmva/src/GeneticAlgorithm.cxx; tmva/tmva/src/MethodPDERS.cxx; tmva/tmvagui/inc/TMVA/BDT.h; tmva/tmvagui/inc/TMVA/BDT_Reg.h; tmva/tmvagui/src/BDT.cxx; tmva/tmvagui/src/BDT_Reg.cxx. TMVA. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:00 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA.html:5229,Guid,Guide,5229,doc/master/classTMVA.html,https://root.cern,https://root.cern/doc/master/classTMVA.html,1,['Guid'],['Guide']
Usability," Error message if the IO feature is not supported by this version of ROOT.; If the feature is supported by ROOT, this function returns true; otherwise, it returns false. ; Definition at line 125 of file TIOFeatures.cxx. ◆ Set() [4/4]. void ROOT::TIOFeatures::Set ; (; UChar_t ; newBits). inlineprivate . Definition at line 98 of file TIOFeatures.hxx. ◆ Test() [1/3]. bool TIOFeatures::Test ; (; EIOFeatures ; input_bits); const. Test to see if a given feature is set. ; Parameters. [in]input_bitsThe specific feature to test. Returns true if the feature is enables in this object and supported by this version of ROOT. ; Definition at line 239 of file TIOFeatures.cxx. ◆ Test() [2/3]. bool TIOFeatures::Test ; (; Experimental::EIOFeatures ; input_bits); const. Test to see if a given feature is set. ; Parameters. [in]input_bitsThe specific feature to test. Returns true if the feature is enables in this object and supported by this version of ROOT. ; Definition at line 228 of file TIOFeatures.cxx. ◆ Test() [3/3]. bool ROOT::TIOFeatures::Test ; (; Experimental::EIOUnsupportedFeatures ; bits); const. Friends And Related Symbol Documentation. ◆ ::TBasket. friend class ::TBasket. friend . Definition at line 72 of file TIOFeatures.hxx. ◆ ::TBranch. friend class ::TBranch. friend . Definition at line 71 of file TIOFeatures.hxx. ◆ ::TTree. friend class ::TTree. friend . Definition at line 70 of file TIOFeatures.hxx. Member Data Documentation. ◆ fIOBits. UChar_t ROOT::TIOFeatures::fIOBits {0}. private . Definition at line 100 of file TIOFeatures.hxx. ◆ kIOFeatureCount. constexpr int ROOT::TIOFeatures::kIOFeatureCount = 1. staticconstexpr . Definition at line 89 of file TIOFeatures.hxx. Libraries for ROOT::TIOFeatures:. [legend]; The documentation for this class was generated from the following files:; tree/tree/inc/ROOT/TIOFeatures.hxx; tree/tree/src/TIOFeatures.cxx. ROOTTIOFeatures. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:13:37 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TIOFeatures.html:7766,Guid,Guide,7766,doc/v632/classROOT_1_1TIOFeatures.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TIOFeatures.html,1,['Guid'],['Guide']
Usability, Example to illustrate smoothing using Markov algorithm (class TSpectrum) ;  spectrumpainter.C Examples showing how to use TSpectrum2Painter (the SPEC option) ;  ► splot;  TestSPlot.CThis tutorial illustrates the use of class TSPlot and of the sPlots method ;  ► sql;  sqlcanvas.CThis is slight modification of ntuple1.C example ;  sqlcreatedb.CCreate a runcatalog table in a MySQL test database ;  sqlcreatedb.py Create a runcatalog table in a MySQL test database ;  sqlfilldb.CFill run catalog with nfiles entries ;  sqlfilldb.py Fill run catalog with nfiles entries ;  sqlselect.CQuery example to MySQL test database ;  sqlselect.py Query example to MySQL test database ;  sqltables.CThis is an example illustrating how the TSQLFile class can be used ;  ► thread;  stressThreadPool.CUsage: ;  threadPool.CUsage: ;  threads.CExample of a simple script creating 3 threads ;  threadsh1.CExample of a simple script creating 3 threads ;  threadsh2.CExample of a simple script creating 2 threads each with one canvas ;  ► tmva;  ► envelope;  classification.C;  ► keras;  ApplicationClassificationKeras.py;  ApplicationRegressionKeras.py;  ClassificationKeras.py;  GenerateModel.py;  MulticlassKeras.py;  RegressionKeras.py;  createData.CPlot the variables ;  TMVAClassification.C This macro provides examples for the training and testing of the TMVA classifiers ;  TMVAClassificationApplication.C This macro provides a simple example on how to use the trained classifiers within an analysis module ;  TMVAClassificationCategory.C This macro provides examples for the training and testing of the TMVA classifiers in categorisation mode ;  TMVAClassificationCategoryApplication.C This macro provides a simple example on how to use the trained classifiers (with categories) within an analysis module ;  TMVACrossValidation.C This macro provides an example of how to use TMVA for k-folds cross evaluation ;  TMVACrossValidationApplication.C This macro provides an example of how to use TMVA for k-folds cros,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v614/files.html:158060,simpl,simple,158060,doc/v614/files.html,https://root.cern,https://root.cern/doc/v614/files.html,1,['simpl'],['simple']
Usability," F( double x, void * p) {; 71 ; 72 UserFunc * function = reinterpret_cast< UserFunc *> (p);; 73 return (*function)( x );; 74 }; 75 ; 76 ; 77 static double Df( double x, void * p) {; 78 ; 79 UserFunc * function = reinterpret_cast< UserFunc *> (p);; 80 return (*function).Derivative( x );; 81 }; 82 ; 83 static void Fdf( double x, void * p, double *f, double *df ) {; 84 ; 85 UserFunc * function = reinterpret_cast< UserFunc *> (p);; 86 *f = (*function) ( x );; 87 *df = (*function).Derivative( x );; 88 }; 89 ; 90 };; 91 ; 92 ; 93} // namespace Math; 94} // namespace ROOT; 95 ; 96 ; 97#endif /* ROOT_Math_GSLFunctionAdapter */; f#define f(i)Definition RSha256.hxx:104; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; ROOT::Math::GSLFunctionAdapterClass for adapting any C++ functor class to C function pointers used by GSL.Definition GSLFunctionAdapter.h:63; ROOT::Math::GSLFunctionAdapter::Fdfstatic void Fdf(double x, void *p, double *f, double *df)Definition GSLFunctionAdapter.h:83; ROOT::Math::GSLFunctionAdapter::GSLFunctionAdapterGSLFunctionAdapter()Definition GSLFunctionAdapter.h:67; ROOT::Math::GSLFunctionAdapter::Fstatic double F(double x, void *p)Definition GSLFunctionAdapter.h:70; ROOT::Math::GSLFunctionAdapter::~GSLFunctionAdaptervirtual ~GSLFunctionAdapter()Definition GSLFunctionAdapter.h:68; ROOT::Math::GSLFunctionAdapter::Dfstatic double Df(double x, void *p)Definition GSLFunctionAdapter.h:77; double; xDouble_t x[n]Definition legend1.C:17; MathNamespace for new Math classes and functions.; ROOT::Math::GSLFuncPointerdouble(* GSLFuncPointer)(double, void *)Function pointer corresponding to gsl_function signature.Definition GSLFunctionAdapter.h:45; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4. mathmathmoreincMathGSLFunctionAdapter.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:41 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLFunctionAdapter_8h_source.html:4537,Guid,Guide,4537,doc/master/GSLFunctionAdapter_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLFunctionAdapter_8h_source.html,1,['Guid'],['Guide']
Usability," FCNBase&, const MnUserParameters&, unsigned int); 5.6.3 MnMigrad(const FCNBase&, const MnUserParameterState&, const MnStrategy&); 5.6.4 operator(); 5.6.5 Parameter interaction; 5.6.6 VariableMetricMinimizer(); 5.6.7 minimize(const FCNBase&, …). 5.7 MnMinimize and CombinedMinimizer; 5.8 MnMinos; 5.8.1 MnMinos(const FCNBase&, const FunctionMinimum&); 5.8.2 operator(); 5.8.3 minos(unsigned int n, unsigned int maxcalls); 5.8.4 Other methods. 5.9 MnPlot; 5.9.1 MnPlot(); 5.9.2 operator(). 5.10 MnScan and ScanMinimizer; 5.10.1 scan(unsigned int par, unsigned int npoint, double low, double high); 5.10.2 ScanMinimizer. 5.11 MnSimplex and SimplexMinimizer; 5.11.1 MnSimplex(const FCNBase&, const std::vector\(<\)double\(>\)&,; const std::vector\(<\)double\(>\)&, unsigned int); 5.11.2 MnSimplex(const FCNBase&, const MnUserParameters&,; unsigned int); 5.11.3 MnSimplex(const FCNBase&, const MnUserParameterState&,; const MnStrategy&); 5.11.4 operator(); 5.11.5 Parameter interaction; 5.11.6 SimplexMinimizer(); 5.11.7 minimize(const FCNBase&, …). 5.12 MnStrategy; 5.12.1 MnStrategy(); 5.12.2 MnStrategy(unsigned int level); 5.12.3 setLowStrategy(), setMediumStrategy(), setHighStrategy(); 5.12.4 Other methods. 5.13 MnUserCovariance; 5.13.1 MnUserCovariance(const std::vector\(<\)double\(>\)&, unsigned int nrow); 5.13.2 MnUserCovariance(unsigned int nrow); 5.13.3 MnUserCovariance::operator()(unsigned int, unsigned int). 5.14 MnUserParameters; 5.14.1 add(…); 5.14.2 setValue(…); 5.14.3 setError(…); 5.14.4 fix(…); 5.14.5 release(…); 5.14.6 setLimits(…); 5.14.7 setUpperLimit(…); 5.14.8 setLowerLimit(…); 5.14.9 removeLimits(…); 5.14.10 value(…); 5.14.11 error(…); 5.14.12 index(…); 5.14.13 name(…). 5.15 MnUserParameterState; 5.15.1 MnUserParameterState(const std::vector\(<\)double\(>\)&,; const std::vector\(<\)double\(>\)&); 5.15.2 MnUserParameterState(const MnUserParameters&); 5.15.3 MnUserParameterState(const MnUserParameters&,; const MnUserCovariance&); 5.15.4 parameters(); 5.15.5 covarianc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:3118,Simpl,SimplexMinimizer,3118,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,1,['Simpl'],['SimplexMinimizer']
Usability," Factory class. Later you can choose the methods; whose performance you'd like to investigate.; ; The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; ; - The first argument is the base of the name of all the output; weightfiles in the directory weight/ that will be created with the; method parameters; ; - The second argument is the output file for the training results; ; - The third argument is a string option defining some general configuration for the TMVA session. For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the option string; ; **/; ; void TMVA_Higgs_Classification() {; ; // options to control used methods; ; bool useLikelihood = true; // likelihood based discriminant; bool useLikelihoodKDE = false; // likelihood based discriminant; bool useFischer = true; // Fischer discriminant; bool useMLP = false; // Multi Layer Perceptron (old TMVA NN implementation); bool useBDT = true; // Boosted Decision Tree; bool useDL = true; // TMVA Deep learning ( CPU or GPU); bool useKeras = true; // Keras Deep learning; bool usePyTorch = true; // PyTorch Deep learning; ; TMVA::Tools::Instance();; ; #ifdef R__HAS_PYMVA; gSystem->Setenv(""KERAS_BACKEND"", ""tensorflow"");; // for using Keras; TMVA::PyMethodBase::PyInitialize();; #else; useKeras = false;; usePyTorch = false;; #endif; ; auto outputFile = TFile::Open(""Higgs_ClassificationOutput.root"", ""RECREATE"");; ; TMVA::Factory factory(""TMVA_Higgs_Classification"", outputFile,; ""!V:ROC:!Silent:Color:AnalysisType=Classification"" );; ; /**; ; ## Setup Dataset(s); ; Define now input data file and signal and background trees; ; **/; ; TString inputFileName = ""Higgs_data.root"";; TString inputFileLink = ""http://root.cern/files/"" + inputFileName;; ; TFile *inputFile = nullptr;; ; if (!gSystem->AccessPathName(inputFileName)) {; // file exists; inputFile = TFile::Open( inputFileName );; }; ; if (!inputFile) {; // download f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:58162,learn,learning,58162,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,3,['learn'],['learning']
Usability," Factory; ; ; ## Create the Factory class. Later you can choose the methods; ## whose performance you'd like to investigate.; ; ## The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; ; ## - The first argument is the base of the name of all the output; ## weightfiles in the directory weight/ that will be created with the; ## method parameters; ; ## - The second argument is the output file for the training results; ; ## - The third argument is a string option defining some general configuration for the TMVA session. For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the option string; ; import ROOT; import os; ; TMVA = ROOT.TMVA; TFile = ROOT.TFile; ; TMVA.Tools.Instance(); ; # options to control used methods; useLikelihood = True # likelihood based discriminant; useLikelihoodKDE = False # likelihood based discriminant; useFischer = True # Fischer discriminant; useMLP = False # Multi Layer Perceptron (old TMVA NN implementation); useBDT = True # Boosted Decision Tree; useDL = True # TMVA Deep learning ( CPU or GPU); useKeras = True # Use Keras Deep Learning via PyMVA; ; if ROOT.gSystem.GetFromPipe(""root-config --has-tmva-pymva"") == ""yes"":; TMVA.PyMethodBase.PyInitialize(); else:; useKeras = False # cannot use Keras if PYMVA is not available; ; if useKeras:; try:; import tensorflow; except:; ROOT.Warning(""TMVA_Higgs_Classification"", ""Skip using Keras since tensorflow is not available""); useKeras = False; ; outputFile = TFile.Open(""Higgs_ClassificationOutput.root"", ""RECREATE""); factory = TMVA.Factory(; ""TMVA_Higgs_Classification"", outputFile, V=False, ROC=True, Silent=False, Color=True, AnalysisType=""Classification""; ); ; ; ## Setup Dataset(s); ; # Define now input data file and signal and background trees; ; inputFileName = ""Higgs_data.root""; inputFileLink = ""http://root.cern.ch/files/"" + inputFileName; ; ; if ROOT.gSystem.AccessPathName(inputFileName)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html:57679,learn,learning,57679,doc/master/TMVA__Higgs__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html,2,"['Learn', 'learn']","['Learning', 'learning']"
Usability," File browser.; TGFileContainer Container containing file system objects; TGFileDialog File selection dialog; TGFileInfo ; TGFileItem Class representing file system object; TGFont GUI font description; TGFontDialog Font selection dialog; TGFontDialog::FontProp_t ; TGFontPool Font pool; TGFontTypeComboBox Font type combobox widget; TGFrame Base class for simple widgets (button, etc.); TGFrameElement Base class used in GUI containers; TGFrameElementPack Class used in TGPack.; TGGC Graphics context; TGGCPool Graphics context pool; TGGotoDialog Goto line dialog used by TGTextEdit widget; TGGroupFrame A composite frame with border and title; TGHButtonGroup A button group with one horizontal row; TGHProgressBar Horizontal progress bar widget; TGHScrollBar Horizontal scrollbar widget; TGHSlider Horizontal slider widget; TGHSplitter A horizontal frame splitter; TGHeaderFrame Header frame with buttons and splitters; TGHorizontal3DLine A horizontal 3D separator line; TGHorizontalFrame Composite frame with horizontal child layout; TGHorizontalLayout Horizontal layout manager; TGHotString Graphics string with hot character; TGHtml HTML widget; TGHtmlBrowser very simple html browser; TGIcon Icon GUI class; TGIconLBEntry Icon + text listbox entry; TGIdleHandler Idle event handler; TGImageMap Clickable image (like MAP in HTML); TGInputDialog Simple input dialog; TGInsets Inset (left, right, top, bottom); TGItemContext Context menu for TTVLVEntry; TGL5DDataSet Class to read data from TTree and create TGL5DPainter.; TGL5DDataSetEditor GUI for editing OpenGL 5D Viewer attributes; TGL5DPainter Class to paint set of iso surfaces.; TGLAdapter Allow plot-painters to be used for gl-inpad and gl-viewer.; TGLAnnotation GL-annotation.; TGLAxis a GL Axis; TGLAxisPainter GL axis painter.; TGLAxisPainterBox Painter of GL axes for a 3D box.; TGLBContainer Listbox container; TGLBEntry Basic listbox entry; TGLBoundingBox a 3D orientated bounding box; TGLBoxCut Cuts away part of a plot.; TGLBoxPain",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html524/ClassIndex.html:69717,progress bar,progress bar,69717,root/html524/ClassIndex.html,https://root.cern,https://root.cern/root/html524/ClassIndex.html,3,"['Simpl', 'progress bar', 'simpl']","['Simple', 'progress bar', 'simple']"
Usability," File browser.; TGFileContainer Container containing file system objects; TGFileDialog File selection dialog; TGFileInfo ; TGFileItem Class representing file system object; TGFont GUI font description; TGFontDialog Font selection dialog; TGFontDialog::FontProp_t ; TGFontPool Font pool; TGFontTypeComboBox Font type combobox widget; TGFrame Base class for simple widgets (button, etc.); TGFrameElement Base class used in GUI containers; TGFrameElementPack Class used in TGPack.; TGGC Graphics context; TGGCPool Graphics context pool; TGGotoDialog Goto line dialog used by TGTextEdit widget; TGGroupFrame A composite frame with border and title; TGHButtonGroup A button group with one horizontal row; TGHProgressBar Horizontal progress bar widget; TGHScrollBar Horizontal scrollbar widget; TGHSlider Horizontal slider widget; TGHSplitter A horizontal frame splitter; TGHeaderFrame Header frame with buttons and splitters; TGHorizontal3DLine A horizontal 3D separator line; TGHorizontalFrame Composite frame with horizontal child layout; TGHorizontalLayout Horizontal layout manager; TGHotString Graphics string with hot character; TGHtml HTML widget; TGHtmlBrowser very simple html browser; TGIcon Icon GUI class; TGIconLBEntry Icon + text listbox entry; TGIdleHandler Idle event handler; TGImageMap Clickable image (like MAP in HTML); TGInputDialog Simple input dialog; TGInsets Inset (left, right, top, bottom); TGItemContext Context menu for TTVLVEntry; TGL5DDataSet Class to read data from TTree and create TGL5DPainter.; TGL5DDataSetEditor GUI for editing OpenGL 5D Viewer attributes; TGLAdapter Allow plot-painters to be used for gl-inpad and gl-viewer.; TGLAnnotation GL-annotation.; TGLAutoRotator Automatic, timer-based, rotation of GL-viewer's camera.; TGLAxis a GL Axis; TGLAxisPainter GL axis painter.; TGLAxisPainterBox Painter of GL axes for a 3D box.; TGLBContainer Listbox container; TGLBEntry Basic listbox entry; TGLBoundingBox a 3D orientated bounding box; TGLBoxCut Cuts away part ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ClassIndex.html:75397,progress bar,progress bar,75397,root/html530/ClassIndex.html,https://root.cern,https://root.cern/root/html530/ClassIndex.html,15,"['Simpl', 'progress bar', 'simpl']","['Simple', 'progress bar', 'simple']"
Usability," File browser.; TGFileContainer Container containing file system objects; TGFileDialog File selection dialog; TGFileInfo ; TGFileItem Class representing file system object; TGFont GUI font description; TGFontDialog Font selection dialog; TGFontDialog::FontProp_t ; TGFontPool Font pool; TGFontTypeComboBox Font type combobox widget; TGFrame Base class for simple widgets (button, etc.); TGFrameElement Base class used in GUI containers; TGFrameElementPack Class used in TGPack.; TGGC Graphics context; TGGCPool Graphics context pool; TGGotoDialog Goto line dialog used by TGTextEdit widget; TGGroupFrame A composite frame with border and title; TGHButtonGroup A button group with one horizontal row; TGHProgressBar Horizontal progress bar widget; TGHScrollBar Horizontal scrollbar widget; TGHSlider Horizontal slider widget; TGHSplitter A horizontal frame splitter; TGHeaderFrame Header frame with buttons and splitters; TGHorizontal3DLine A horizontal 3D separator line; TGHorizontalFrame Composite frame with horizontal child layout; TGHorizontalLayout Horizontal layout manager; TGHotString Graphics string with hot character; TGHtml HTML widget; TGHtmlBrowser very simple html browser; TGIcon Icon GUI class; TGIconLBEntry Icon + text listbox entry; TGIdleHandler Idle event handler; TGImageMap Clickable image (like MAP in HTML); TGInputDialog Simple input dialog; TGInsets Inset (left, right, top, bottom); TGItemContext Context menu for TTVLVEntry; TGL5DDataSet Class to read data from TTree and create TGL5DPainter.; TGL5DDataSetEditor GUI for editing OpenGL 5D Viewer attributes; TGLAdapter Allow plot-painters to be used for gl-inpad and gl-viewer.; TGLAnnotation GL-annotation.; TGLAxis a GL Axis; TGLAxisPainter GL axis painter.; TGLAxisPainterBox Painter of GL axes for a 3D box.; TGLBContainer Listbox container; TGLBEntry Basic listbox entry; TGLBoundingBox a 3D orientated bounding box; TGLBoxCut Cuts away part of a plot.; TGLBoxPainter Box painter; TGLCamera Camera abstract base cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ClassIndex.html:71521,progress bar,progress bar,71521,root/html526/ClassIndex.html,https://root.cern,https://root.cern/root/html526/ClassIndex.html,3,"['Simpl', 'progress bar', 'simpl']","['Simple', 'progress bar', 'simple']"
Usability," Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RCanvas() [1/2]. ROOT::Experimental::RCanvas::RCanvas ; (; const RCanvas & ; ). privatedelete . Disable copy construction for now. . ◆ RCanvas() [2/2]. ROOT::Experimental::RCanvas::RCanvas ; (; ). inline . Create a temporary RCanvas; for long-lived ones please use Create(). ; Definition at line 88 of file RCanvas.hxx. ◆ ~RCanvas(). ROOT::Experimental::RCanvas::~RCanvas ; (; ). overridedefault . Member Function Documentation. ◆ AddPanel(). template<class PANEL > . bool ROOT::Experimental::RCanvas::AddPanel ; (; std::shared_ptr< PANEL > & ; panel). inline . Insert panel into the canvas, canvas should be shown at this moment. ; Definition at line 139 of file RCanvas.hxx. ◆ ClearOnClose(). void ROOT::Experimental::RCanvas::ClearOnClose ; (; const std::shared_ptr< void > & ; handle). Set handle which will be cleared when connection is closed. ; Definition at line 239 of file RCanvas.cxx. ◆ ClearShown(). void ROOT::Experimental::RCanvas::ClearShown ; (; ). inline . clear IsShown() flag ; Definition at line 123 of file RCanvas.hxx. ◆ ClearUpdated(). void ROOT::Experimental::RCanvas::ClearUpdated ; (; ). inline . clear IsUpdated() flag ; Definition at line 169 of file RCanvas.hxx. ◆ Create(). std::shared_ptr< ROOT::Experimental::RCanvas > ROOT::Experimental::RCanvas::Create ; (; const std::string & ; title). static . Create new canvas instance. ; Definition at line 89 of file RCanvas.cxx. ◆ CreateJSON(). std::string ROOT::Experimental::RCanvas::CreateJSON ; (; ). Provide JSON which can be used for offline display. ; Create JSON data for the canvas Can be used of offline display with JSROOT. ; Definition at line 211 of file RCanvas.cxx. ◆ GetCanvas() [1/2]. const RCanvas * ROOT::Experimental::RCanvas::GetCanvas ; (; ); const. inlineoverridevirtual . Access to the top-most canvas, if any (const version). ; Implements ROOT::Experimental::RPadBase.; Definition at line 92 of file RCa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvas.html:10431,Clear,ClearShown,10431,doc/master/classROOT_1_1Experimental_1_1RCanvas.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RCanvas.html,1,['Clear'],['ClearShown']
Usability," Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char filenameDefinition TGWin32VirtualXProxy.cxx:232; gROOT#define gROOTDefinition TROOT.h:406; Formchar * Form(const char *fmt,...)Formats a string in a circular formatting buffer.Definition TString.cxx:2489; kFileExists@ kFileExistsDefinition TSystem.h:42; kWritePermission@ kWritePermissionDefinition TSystem.h:44; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TFile::Openstatic TFile * Open(const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0)Create / open a file.Definition TFile.cxx:4089; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; TString::ReplaceAllTString & ReplaceAll(const TString &s1, const TString &s2)Definition TString.h:704; TString::AppendTString & Append(const char *cs)Definition TString.h:572; TSystem::AccessPathNamevirtual Bool_t AccessPathName(const char *path, EAccessMode mode=kFileExists)Returns FALSE if one can access a file using the specified access mode.Definition TSystem.cxx:1296; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; lineTLine * lineDefinition entrylistblock_figure1.C:235; TMVA_SOFIE_GNN_Parser.treetreeDefinition TMVA_SOFIE_GNN_Parser.py:169; AuthorRene Brun ; Definition in file cernbuild.C. tutorialstreecernbuild.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/cernbuild_8C.html:4834,Guid,Guide,4834,doc/master/cernbuild_8C.html,https://root.cern,https://root.cern/doc/master/cernbuild_8C.html,1,['Guid'],['Guide']
Usability," Float_t YLabSize = fHistogram->GetYaxis()->GetLabelSize();; 3632 Int_t XNdiv = fHistogram->GetXaxis()->GetNdivisions();; 3633 Int_t YNdiv = fHistogram->GetYaxis()->GetNdivisions();; 3634 ; 3635 delete fHistogram;; 3636 fHistogram = nullptr;; 3637 GetHistogram();; 3638 ; 3639 fHistogram->GetXaxis()->SetTitle(XAxisTitle.Data());; 3640 fHistogram->GetYaxis()->SetTitle(YAxisTitle.Data());; 3641 fHistogram->GetXaxis()->SetLabelColor(XLabCol);; 3642 fHistogram->GetYaxis()->SetLabelColor(YLabCol);; 3643 fHistogram->GetXaxis()->SetLabelFont(XLabFont);; 3644 fHistogram->GetYaxis()->SetLabelFont(YLabFont);; 3645 fHistogram->GetXaxis()->SetLabelOffset(XLabOffset);; 3646 fHistogram->GetYaxis()->SetLabelOffset(YLabOffset);; 3647 fHistogram->GetXaxis()->SetLabelSize(XLabSize);; 3648 fHistogram->GetYaxis()->SetLabelSize(YLabSize);; 3649 fHistogram->GetXaxis()->SetNdivisions(XNdiv);; 3650 fHistogram->GetYaxis()->SetNdivisions(YNdiv);; 3651 }; 3652 if (!fIntegral.empty()) {; 3653 fIntegral.clear();; 3654 fAlpha.clear();; 3655 fBeta.clear();; 3656 fGamma.clear();; 3657 }; 3658 if (fNormalized) {; 3659 // need to compute the integral of the not-normalized function; 3660 fNormalized = false;; 3661 fNormIntegral = Integral(fXmin, fXmax, 0.0);; 3662 fNormalized = true;; 3663 } else; 3664 fNormIntegral = 0;; 3665 ; 3666 // std::vector<double>x(fNdim);; 3667 // if ((fType == 1) && !fFunctor->Empty()) (*fFunctor)x.data(), (Double_t*)fParams);; 3668 if (fType == EFType::kCompositionFcn && fComposition) {; 3669 // double-check that the parameters are correct; 3670 fComposition->SetParameters(GetParameters());; 3671 ; 3672 fComposition->Update(); // should not be necessary, but just to be safe; 3673 }; 3674}; 3675 ; 3676////////////////////////////////////////////////////////////////////////////////; 3677/// Static function to set the global flag to reject points; 3678/// the fgRejectPoint global flag is tested by all fit functions; 3679/// if TRUE the point is not included in the fit.; 3680/",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:139313,clear,clear,139313,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['clear'],['clear']
Usability," For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_TNamed; 13#define ROOT_TNamed; 14 ; 15 ; 16//////////////////////////////////////////////////////////////////////////; 17// //; 18// TNamed //; 19// //; 20// The basis for a named object (name, title). //; 21// //; 22//////////////////////////////////////////////////////////////////////////; 23 ; 24 ; 25#include ""TObject.h""; 26#include ""TString.h""; 27 ; 28 ; 29class TNamed : public TObject {; 30 ; 31protected:; 32 TString fName; //object identifier; 33 TString fTitle; //object title; 34 ; 35public:; 36 TNamed(): fName(), fTitle() { }; 37 TNamed(const char *name, const char *title) : fName(name), fTitle(title) { }; 38 TNamed(const TString &name, const TString &title) : fName(name), fTitle(title) { }; 39 TNamed(const TNamed &named);; 40 TNamed& operator=(const TNamed& rhs);; 41 virtual ~TNamed();; 42 void Clear(Option_t *option ="""") override;; 43 TObject *Clone(const char *newname="""") const override;; 44 Int_t Compare(const TObject *obj) const override;; 45 void Copy(TObject &named) const override;; 46 virtual void FillBuffer(char *&buffer);; 47 const char *GetName() const override { return fName; }; 48 const char *GetTitle() const override { return fTitle; }; 49 ULong_t Hash() const override { return fName.Hash(); }; 50 Bool_t IsSortable() const override { return kTRUE; }; 51 virtual void SetName(const char *name); // *MENU*; 52 virtual void SetNameTitle(const char *name, const char *title);; 53 virtual void SetTitle(const char *title=""""); // *MENU*; 54 void ls(Option_t *option="""") const override;; 55 void Print(Option_t *option="""") const override;; 56 virtual Int_t Sizeof() const;; 57 ; 58 ClassDefOverride(TNamed,1) //The basis for a named object (name, title); 59};; 60 ; 61#endif; Int_tint Int_tDefinition RtypesCore.h:45; ULong_tunsigned long ULong_tDefin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TNamed_8h_source.html:1440,Clear,Clear,1440,doc/master/TNamed_8h_source.html,https://root.cern,https://root.cern/doc/master/TNamed_8h_source.html,1,['Clear'],['Clear']
Usability," Forward a change in the cached normalization argset to all the registered proxies. ; Definition at line 1468 of file RooAbsArg.cxx. ◆ setShapeDirty() [1/2]. void RooAbsArg::setShapeDirty ; (; ). inline . Notify that a shape-like property (e.g. binning) has changed. ; Definition at line 467 of file RooAbsArg.h. ◆ setShapeDirty() [2/2]. void RooAbsArg::setShapeDirty ; (; const RooAbsArg * ; source). protected . Notify that a shape-like property (e.g. binning) has changed. ; Mark this object as having changed its shape, and propagate this status change to all of our clients. ; Definition at line 978 of file RooAbsArg.cxx. ◆ setStringAttribute(). void RooAbsArg::setStringAttribute ; (; const Text_t * ; key, . const Text_t * ; value . ). Associate string 'value' to this object under key 'key'. ; Definition at line 254 of file RooAbsArg.cxx. ◆ setTransientAttribute(). void RooAbsArg::setTransientAttribute ; (; const Text_t * ; name, . bool ; value = true . ). Set (default) or clear a named boolean attribute of this object. ; Definition at line 289 of file RooAbsArg.cxx. ◆ setTreeBranchStatus(). virtual void RooAbsArg::setTreeBranchStatus ; (; TTree & ; t, . bool ; active . ). protectedpure virtual . Implemented in RooAbsCategory, RooAbsReal, and RooStringVar. ◆ setValueDirty() [1/2]. void RooAbsArg::setValueDirty ; (; ). inline . Mark the element dirty. This forces a re-evaluation when a value is requested. ; Definition at line 462 of file RooAbsArg.h. ◆ setValueDirty() [2/2]. void RooAbsArg::setValueDirty ; (; const RooAbsArg * ; source). protected . Force element to re-evaluate itself when a value is requested. ; Mark this object as having changed its value, and propagate this status change to all of our clients.; If the object is not in automatic dirty state propagation mode, this call has no effect. ; Definition at line 936 of file RooAbsArg.cxx. ◆ setWorkspace(). void RooAbsArg::setWorkspace ; (; RooWorkspace & ; ws). inline . Definition at line 523 of file RooAbsArg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsArg.html:99806,clear,clear,99806,doc/master/classRooAbsArg.html,https://root.cern,https://root.cern/doc/master/classRooAbsArg.html,1,['clear'],['clear']
Usability, Function Documentation. ◆ AddNewEventCommand(). void TEveEventManager::AddNewEventCommand ; (; const TString & ; cmd). virtual . Register a command to be executed on each new event. ; Definition at line 48 of file TEveEventManager.cxx. ◆ AfterNewEventLoaded(). void TEveEventManager::AfterNewEventLoaded ; (; ). virtual . Virtual function to be called after a new event is loaded. ; It iterates over the list of registered commands (fNewEventCommands) and executes them in given order. ; Definition at line 37 of file TEveEventManager.cxx. ◆ Class(). static TClass * TEveEventManager::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TEveEventManager::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TEveEventManager::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 42 of file TEveEventManager.h. ◆ ClearNewEventCommands(). void TEveEventManager::ClearNewEventCommands ; (; ). virtual . Clear the list of commands to be executed on each new event. ; Definition at line 70 of file TEveEventManager.cxx. ◆ Close(). virtual void TEveEventManager::Close ; (; ). inlinevirtual . Definition at line 34 of file TEveEventManager.h. ◆ DeclFileName(). static const char * TEveEventManager::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 42 of file TEveEventManager.h. ◆ GetNewEventCommands(). std::vector< TString > & TEveEventManager::GetNewEventCommands ; (; ). inline . Definition at line 28 of file TEveEventManager.h. ◆ GotoEvent(). virtual void TEveEventManager::GotoEvent ; (; Int_t ; ). inlinevirtual . Definition at line 31 of file TEveEventManager.h. ◆ IsA(). TClass * TEveEventManager::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TEveElementList.; Definition at line 42 of file TEveEventManager.h. ◆ NextEvent(). virtual v,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveEventManager.html:35024,Clear,ClearNewEventCommands,35024,doc/master/classTEveEventManager.html,https://root.cern,https://root.cern/doc/master/classTEveEventManager.html,1,['Clear'],['ClearNewEventCommands']
Usability," Function Documentation. ◆ CheckAllChildren(). virtual void TGListTreeItem::CheckAllChildren ; (; Bool_t ; = kTRUE). inlinevirtual . Reimplemented in TGListTreeItemStd.; Definition at line 95 of file TGListTree.h. ◆ CheckChildren(). virtual void TGListTreeItem::CheckChildren ; (; TGListTreeItem * ; , . Bool_t ;  . ). inlinevirtual . Reimplemented in TGListTreeItemStd.; Definition at line 96 of file TGListTree.h. ◆ CheckItem(). virtual void TGListTreeItem::CheckItem ; (; Bool_t ; = kTRUE). pure virtual . Implemented in TGListTreeItemStd, and TEveListTreeItem. ◆ Class(). static TClass * TGListTreeItem::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGListTreeItem::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGListTreeItem::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 122 of file TGListTree.h. ◆ ClearColor(). virtual void TGListTreeItem::ClearColor ; (; ). inlinevirtual . Reimplemented in TEveListTreeItem, and TGListTreeItemStd.; Definition at line 105 of file TGListTree.h. ◆ DeclFileName(). static const char * TGListTreeItem::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 122 of file TGListTree.h. ◆ GetActiveColor(). virtual Pixel_t TGListTreeItem::GetActiveColor ; (; ); const. pure virtual . Implemented in TEveListTreeItem, and TGListTreeItemStd. ◆ GetCheckBoxPicture(). virtual const TGPicture * TGListTreeItem::GetCheckBoxPicture ; (; ); const. pure virtual . Implemented in TEveListTreeItem, and TGListTreeItemStd. ◆ GetColor(). virtual Color_t TGListTreeItem::GetColor ; (; ); const. pure virtual . Implemented in TEveListTreeItem, and TGListTreeItemStd. ◆ GetFirstChild(). TGListTreeItem * TGListTreeItem::GetFirstChild ; (; ); const. inline . Definition at line 59 of file TGListTree.h. ◆ GetLastChild(). TGListTreeItem * TGListTreeItem::GetLastChil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGListTreeItem.html:5227,Clear,ClearColor,5227,doc/master/classTGListTreeItem.html,https://root.cern,https://root.cern/doc/master/classTGListTreeItem.html,1,['Clear'],['ClearColor']
Usability," Functions inherited from TGTextEditCommand;  TGTextEditCommand (TGTextEdit *te);  ; void SetPos (TGLongPosition pos);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Clear (Option_t *="""");  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *err",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTInsCharCom.html:1420,Clear,Clear,1420,doc/master/classTInsCharCom.html,https://root.cern,https://root.cern/doc/master/classTInsCharCom.html,5,['Clear'],['Clear']
Usability," Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Inheritance diagram for TEventIterTree::TFileTree:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TFileTree(). TEventIterTree::TFileTree::TFileTree ; (; const char * ; name, . TFile * ; f, . Bool_t ; islocal . ). Default ctor. ; Definition at line 664 of file TEventIter.cxx. ◆ ~TFileTree(). TEventIterTree::TFileTree::~TFileTree ; (; ). override . Default dtor. ; Definition at line 673 of file TEventIter.cxx. Member Data Documentation. ◆ fFile. TFile* TEventIterTree::TFileTree::fFile. Definition at line 166 of file TEventIter.h. ◆ fIsLocal. Bool_t TEventIterTree::TFileTree::fIsLocal. Definition at line 165 of file TEventIter.h. ◆ fTrees. TList* TEventIterTree::TFileTree::fTrees. Definition at line 167 of file TEventIter.h. ◆ fUsed. Bool_t TEventIterTree::TFileTree::fUsed. Definition at line 164 of file TEventIter.h. proof/proofplayer/inc/TEventIter.h; proof/proofplayer/src/TEventIter.cxx. TEventIterTreeTFileTree. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:40 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEventIterTree_1_1TFileTree.html:11882,Guid,Guide,11882,doc/master/classTEventIterTree_1_1TFileTree.html,https://root.cern,https://root.cern/doc/master/classTEventIterTree_1_1TFileTree.html,1,['Guid'],['Guide']
Usability," Get type of method argument, e.g.: ""class TDirectory*"" -> ""TDirectory""; Result needs to be used or copied immediately. const char * GetFullTypeName() const; Get full type description of method argument, e.g.: ""class TDirectory*"". std::string GetTypeNormalizedName() const; Get the normalized name of the return type. A normalized name is fully; qualified and has all typedef desugared except for the 'special' typedef; which include Double32_t, Float16_t, [U]Long64_t and std::string. It; also has std:: removed [This is subject to change]. Long_t Property() const; Get property description word. For meaning of bits see EProperty. TList * GetOptions() const; Returns list of possible options - according to pointed datamember.; If there is no datamember field assigned to this methodarg - returns 0. TDataMember * GetDataMember() const; Returns TDataMember pointed by this methodarg.; If you want to specify list of options or current value for your; MethodArg (i.e. it is used as initial values in argument-asking dialogs; popped up from context-meny),you can get this value from one of data; members of the class.; The only restriction is, that this DataMember object must have its; Getter/Setter methods set-up correctly - for details look at TDataMember.; To learn how to specify the data member to which the argument should; ""point"", look at TMethod. This is TMethod which sets up fDataMember,; so it could work correctly. void Update(MethodArgInfo_t* info); Update fInfo (to 0 for unloading and non-zero for reloading).; This takes ownership of 'info'. TMethodArg(const TMethodArg& ). TMethodArg& operator=(const TMethodArg& ). TFunction * GetMethod() const; { return fMethod; }. » Author: Rene Brun 04/02/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/meta:$Id$ » Last generated: 2015-06-02 16:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMethodArg.html:9457,learn,learn,9457,root/html604/TMethodArg.html,https://root.cern,https://root.cern/root/html604/TMethodArg.html,1,['learn'],['learn']
Usability," Get type of method argument, e.g.: ""class TDirectory*"" -> ""TDirectory""; Result needs to be used or copied immediately. const char * GetFullTypeName() const; Get full type description of method argument, e.g.: ""class TDirectory*"". std::string GetTypeNormalizedName() const; Get the normalized name of the return type. A normalized name is fully; qualified and has all typedef desugared except for the 'special' typedef; which include Double32_t, Float16_t, [U]Long64_t and std::string. It; also has std:: removed [This is subject to change]. Long_t Property() const; Get property description word. For meaning of bits see EProperty. TList * GetOptions() const; Returns list of possible options - according to pointed datamember.; If there is no datamember field assigned to this methodarg - returns 0. TDataMember * GetDataMember() const; Returns TDataMember pointed by this methodarg.; If you want to specify list of options or current value for your; MethodArg (i.e. it is used as initial values in argument-asking dialogs; popped up from context-meny),you can get this value from one of data; members of the class.; The only restriction is, that this DataMember object must have its; Getter/Setter methods set-up correctly - for details look at TDataMember.; To learn how to specify the data member to which the argument should; ""point"", look at TMethod. This is TMethod which sets up fDataMember,; so it could work correctly. void Update(MethodArgInfo_t* info); Update fInfo (to 0 for unloading and non-zero for reloading).; This takes ownership of 'info'. TMethodArg(const TMethodArg& ). TMethodArg& operator=(const TMethodArg& ). TFunction * GetMethod() const; { return fMethod; }. » Author: Rene Brun 04/02/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/meta:$Id$ » Last generated: 2015-06-30 15:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMethodArg.html:9168,learn,learn,9168,root/html602/TMethodArg.html,https://root.cern,https://root.cern/root/html602/TMethodArg.html,1,['learn'],['learn']
Usability," GetMean(TVectorD& means); return the estimate of the mean. void GetRDistances(TVectorD& rdist); returns the robust distances (helps to find outliers). Int_t GetNOut(); returns the number of outliers. void AddToSscp(TMatrixD& sscp, TVectorD& vec); update the sscp matrix with vector vec. void ClearSscp(TMatrixD& sscp); clear the sscp matrix, used for covariance and mean calculation. void Classic(); called when h=n. Returns classic covariance matrix; and mean. void Covar(TMatrixD& sscp, TVectorD& m, TMatrixDSym& cov, TVectorD& sd, Int_t nvec); calculates mean and covariance. void Correl(); transforms covariance matrix into correlation matrix. void CreateSubset(Int_t ntotal, Int_t htotal, Int_t p, Int_t* index, TMatrixD& data, TMatrixD& sscp, Double_t* ndist); creates a subset of htotal elements from ntotal elements; first, p+1 elements are drawn randomly(without repetitions); if their covariance matrix is singular, more elements are; added one by one, until their covariance matrix becomes regular; or it becomes clear that htotal observations lie on a hyperplane; If covariance matrix determinant!=0, distances of all ntotal elements; are calculated, using formula d_i=Sqrt((x_i-M)*S_inv*(x_i-M)), where; M is mean and S_inv is the inverse of the covariance matrix; htotal points with smallest distances are included in the returned subset. void CreateOrtSubset(TMatrixD& dat, Int_t* index, Int_t hmerged, Int_t nmerged, TMatrixD& sscp, Double_t* ndist); creates a subset of hmerged vectors with smallest orthogonal distances to the hyperplane; hyp[1]*(x1-mean[1])+...+hyp[nvar]*(xnvar-mean[nvar])=0; This function is called in case when less than fH samples lie on a hyperplane. Double_t CStep(Int_t ntotal, Int_t htotal, Int_t* index, TMatrixD& data, TMatrixD& sscp, Double_t* ndist); from the input htotal-subset constructs another htotal subset with lower determinant. As proven by Peter J.Rousseeuw and Katrien Van Driessen, if distances for all elements; are calculated, using the f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRobustEstimator.html:14531,clear,clear,14531,root/html528/TRobustEstimator.html,https://root.cern,https://root.cern/root/html528/TRobustEstimator.html,6,['clear'],['clear']
Usability," Go Parallel! | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » ROOT 6 Analysis Workshop 10. Go Parallel!. Why you care; Number crunching takes time. If you look at top (open a terminal, type top) in Linux or your ac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/10-go-parallel.html:1006,Guid,Guides,1006,d/10-go-parallel.html,https://root.cern,https://root.cern/d/10-go-parallel.html,1,['Guid'],['Guides']
Usability," Graphs with different draw options of error bars. In addition, it can be drawn with the “Z” option to leave off the small lines at the end of the error bars. If option contains “>”, an arrow is drawn at the end of the error bars. If option contains “|>”, a full arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size.; The option “[]” is interesting to superimpose systematic errors on top of the graph with the statistical errors. When it is specified, only the end vertical/horizontal lines of the error bars are drawn.; To control the size of the lines at the end of the error bars (when option 1 is chosen) use SetEndErrorSize(np). By default np=1; np represents the number of pixels.; gStyle->SetEndErrorSize(np);; The four parameters of TGraphErrors are: X, Y (as in TGraph), X-errors, and Y-errors - the size of the errors in the x and y direction. Next example is $ROOTSYS/tutorials/graphs/gerrors.C.; {; c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);; c1->SetGrid();. // create the coordinate arrays; Int_t n = 10;; Float_t x[n] = {-.22,.05,.25,.35,.5,.61,.7,.85,.89,.95};; Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};. // create the error arrays; Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};. // create the TGraphErrors and draw it; gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetTitle(""TGraphErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; c1->Update();; }; 4.4 Graphs with Asymmetric Error Bars. A graph with asymmetric error bars. A TGraphAsymmErrors is a TGraph with asymmetric error bars. It inherits the various draw format options from TGraph. Its method Paint(Option_t *option) paints the TGraphAsymmErrors with the current attributes. You can set the following additional options for drawing:. “z” or “Z”the horizontal and vertical small lines are not drawn at the end of error bars; “>”an arrow is drawn a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:147031,Simpl,Simple,147031,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['Simpl'],['Simple']
Usability," Grid X X X X . Contours X - X - . Bars X - X - . LinesX X X X X . LinesY X X X X . BarsX X - X - . BarsY X - X - . Needles X - - - . Surface - X X X . Triangles X X X X . Function: void TSpectrum2Painter::SetDisplayMode (Int_t modeGroup, Int_t displayMode); This function controls the display mode group and display mode of the histogram drawing. To illustrate the possible effects of the various display modes we introduce a set of examples. Default values:. modeGroup = kModeGroupLightHeight; displayMode = kDisplayModeSurface. Simple modes group, display mode = points, 256 x 256 channels. . Simple modes group, display mode = grid, 64 x 64 channels. . Simple modes group, display mode = contours, 64 x 64 channels. . Simple modes group, display mode = bars, 64 x 64 channels. . Simple modes group, display mode = linesX, 64 x 64 channels. . Simple modes group, display mode = linesY, 64 x 64 channels. . Simple modes group, display mode = barsX, 64 x 64 channels. . Simple modes group, display mode = barsY, 64 x 64 channels. . Simple modes group, display mode = needles, 64 x 64 channels. . Simple modes group, display mode = triangles, 64 x 64 channels. . Light modes group, display mode = points, 256 x 256 channels. . Light modes group, display mode = grid, 256 x 256 channels. . Light modes group, display mode = surface, 64 x 64 channels. . Light modes group, display mode = triangles, 64 x 64 channels. . Height modes group, display mode = points, 256 x 256 channels. . Height modes group, display mode = grid, 256 x 256 channels. . Height modes group, display mode = contours, 64 x 64 channels. . Height modes group, display mode = bars, 64 x 64 channels. . Height modes group, display mode = surface, 64 x 64 channels. . Height modes group, display mode = triangles, 64 x 64 channels. . Light - height modes group, display mode = surface, 64 x 64 channels. The weight between both shading algorithms is set to 0.5. One can observe the influence of both shadings.; Function: TSpectrum2Pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Painter.html:33320,Simpl,Simple,33320,doc/master/classTSpectrum2Painter.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Painter.html,1,['Simpl'],['Simple']
Usability, Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Types |; Private Attributes |; List of all members ; ROOT::RDF::RVariationsDescription Class Reference. ; A descriptor for the systematic variations known to a given RDataFrame node. ; Definition at line 28 of file RVariationsDescription.hxx. Public Member Functions;  RVariationsDescription (const Variations_t &variations);  ; std::string AsString () const;  ; void Print () const;  . Private Types; using Variations_t = std::vector< const ROOT::Internal::RDF::RVariationBase * >;  . Private Attributes; std::string fStringRepr;  . #include <ROOT/RDF/RVariationsDescription.hxx>; Member Typedef Documentation. ◆ Variations_t. using ROOT::RDF::RVariationsDescription::Variations_t = std::vector<const ROOT::Internal::RDF::RVariationBase *>. private . Definition at line 30 of file RVariationsDescription.hxx. Constructor & Destructor Documentation. ◆ RVariationsDescription(). ROOT::RDF::RVariationsDescription::RVariationsDescription ; (; const Variations_t & ; variations). Definition at line 49 of file RVariationsDescription.cxx. Member Function Documentation. ◆ AsString(). std::string ROOT::RDF::RVariationsDescription::AsString ; (; ); const. inline . Definition at line 35 of file RVariationsDescription.hxx. ◆ Print(). void ROOT::RDF::RVariationsDescription::Print ; (; ); const. Definition at line 53 of file RVariationsDescription.cxx. Member Data Documentation. ◆ fStringRepr. std::string ROOT::RDF::RVariationsDescription::fStringRepr. private . Definition at line 29 of file RVariationsDescription.hxx. Libraries for ROOT::RDF::RVariationsDescription:. [legend]; The documentation for this class was generated from the following files:; tree/dataframe/inc/ROOT/RDF/RVariationsDescription.hxx; tree/dataframe/src/RVariationsDescription.cxx. ROOTRDFRVariationsDescription. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:28 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RVariationsDescription.html:2008,Guid,Guide,2008,doc/master/classROOT_1_1RDF_1_1RVariationsDescription.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RVariationsDescription.html,1,['Guid'],['Guide']
Usability," Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Attributes |; Private Member Functions |; List of all members ; TEveScene Class ReferenceGraphics » 3D Graphics » Event Display. ; Eve representation of TGLScene. ; The GLScene is owned by this class - it is created on construction time and deleted at destruction.; Normally all objects are positioned directly in global scene-space. By setting the fHierarchical flag, positions of children get calculated by multiplying the transformation matrices of all parents. ; Definition at line 26 of file TEveScene.h. Public Member Functions;  TEveScene (const char *n=""TEveScene"", const char *t="""");  Constructor. ;  ;  TEveScene (TGLScenePad *gl_scene, const char *n=""TEveScene"", const char *t="""");  Constructor. ;  ;  ~TEveScene () override;  Destructor. ;  ; void Changed ();  ; void CollectSceneParents (List_t &scenes) override;  Virtual from TEveElement; here we simply append this scene to the list. ;  ; void DestroyElementRenderers (TEveElement *element);  Remove element from the scene. ;  ; void DestroyElementRenderers (TObject *rnrObj);  Remove element represented by object rnrObj from the scene. ;  ; TGLScenePad * GetGLScene () const;  ; Bool_t GetHierarchical () const;  ; const TGPicture * GetListTreeIcon (Bool_t open=kFALSE) override;  Return icon for scene. ;  ; TClass * IsA () const override;  ; Bool_t IsChanged () const;  ; void Paint (Option_t *option="""") override;  Paint the scene. Iterate over children and calls PadPaint(). ;  ; void Repaint (Bool_t dropLogicals=kFALSE);  Repaint the scene. ;  ; void RetransHierarchically ();  Entry point for hierarchical transformation update. ;  ; void SetGLScene (TGLScenePad *s);  ; void SetHierarchical (Bool_t h);  ; void SetName (const char *n) override;  Set scene's name. ;  ; Bool_t SingleRnrState () const override;  ; void Streamer (TBuffer &) override;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveScene.html:1102,simpl,simply,1102,doc/master/classTEveScene.html,https://root.cern,https://root.cern/doc/master/classTEveScene.html,1,['simpl'],['simply']
Usability," Hoption.Lego || Hoption.Surf) {; 4540 // In case of 1D histogram, Z axis becomes Y axis.; 4541 Int_t logysav=0, logzsav=0;; 4542 if (fH->GetDimension() == 1) {; 4543 logysav = Hoption.Logy;; 4544 logzsav = Hoption.Logz;; 4545 Hoption.Logz = 0;; 4546 if (Hoption.Logy) {; 4547 Hoption.Logz = 1;; 4548 Hoption.Logy = 0;; 4549 }; 4550 }; 4551 PaintTable(option);; 4552 if (Hoption.Func) {; 4553 Hoption_t hoptsave = Hoption;; 4554 Hparam_t hparsave = Hparam;; 4555 PaintFunction(option);; 4556 SetHistogram(hsave);; 4557 Hoption = hoptsave;; 4558 Hparam = hparsave;; 4559 }; 4560 fH->SetMinimum(minsav);; 4561 gCurrentHist = oldhist;; 4562 fXbuf.clear();; 4563 fYbuf.clear();; 4564 if (fH->GetDimension() == 1) {; 4565 Hoption.Logy = logysav;; 4566 Hoption.Logz = logzsav;; 4567 }; 4568 return;; 4569 }; 4570 ; 4571 if (Hoption.Bar >= 20) {; 4572 PaintBarH(option);; 4573 fXbuf.clear();; 4574 fYbuf.clear();; 4575 return;; 4576 }; 4577 ; 4578 gPad->RangeAxisChanged(); //emit RangeAxisChanged() signal to sync axes; 4579 // fill Hparam structure with histo parameters; 4580 if (!PaintInit()) {; 4581 fXbuf.clear();; 4582 fYbuf.clear();; 4583 return;; 4584 }; 4585 ; 4586 // Picture surround (if new page) and page number (if requested).; 4587 // Histogram surround (if not option ""Same"").; 4588 PaintFrame();; 4589 ; 4590 // Paint histogram axis only; 4591 Bool_t gridx = gPad->GetGridx();; 4592 Bool_t gridy = gPad->GetGridy();; 4593 if (Hoption.Axis > 0) {; 4594 if (Hoption.Axis > 1) PaintAxis(kTRUE); //axis with grid; 4595 else {; 4596 if (gridx) gPad->SetGridx(0);; 4597 if (gridy) gPad->SetGridy(0);; 4598 PaintAxis(kFALSE);; 4599 if (gridx) gPad->SetGridx(1);; 4600 if (gridy) gPad->SetGridy(1);; 4601 }; 4602 if ((Hoption.Same%10) ==1) Hoption.Same += 1;; 4603 goto paintstat;; 4604 }; 4605 if (gridx || gridy) PaintAxis(kTRUE); // Draw the grid only; 4606 ; 4607 // test for options BAR or HBAR; 4608 if (Hoption.Bar >= 10) {; 4609 PaintBar(option);; 4610 }; 4611 ; 4612 // do not draw histogr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:173412,clear,clear,173412,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,1,['clear'],['clear']
Usability," IDent...Definition TUUID.h:42; TUUID::GetUUIDvoid GetUUID(UChar_t uuid[16]) constReturn uuid in specified buffer (16 byte = 128 bits).Definition TUUID.cxx:695; double; int; unsigned int; ROOT::Math::landau_quantiledouble landau_quantile(double z, double xi=1)Inverse ( ) of the cumulative distribution function of the lower tail of the Landau distribution (lan...Definition QuantFuncMathCore.cxx:189; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; TMath::ExpDouble_t Exp(Double_t x)Returns the base-e exponential function of x, which is e raised to the power x.Definition TMath.h:709; TMath::FloorDouble_t Floor(Double_t x)Rounds x downward, returning the largest integral value that is not greater than x.Definition TMath.h:680; TMath::PiOver2constexpr Double_t PiOver2()Definition TMath.h:51; TMath::LogDouble_t Log(Double_t x)Returns the natural logarithm of x.Definition TMath.h:756; TMath::SqrtDouble_t Sqrt(Double_t x)Returns the square root of x.Definition TMath.h:662; TMath::CosDouble_t Cos(Double_t)Returns the cosine of an angle of x radians.Definition TMath.h:594; TMath::Piconstexpr Double_t Pi()Definition TMath.h:37; TMath::LnGammaDouble_t LnGamma(Double_t z)Computation of ln[gamma(z)] for all z.Definition TMath.cxx:509; TMath::SinDouble_t Sin(Double_t)Returns the sine of an angle of x radians.Definition TMath.h:588; TMath::TanDouble_t Tan(Double_t)Returns the tangent of an angle of x radians.Definition TMath.h:600; TMath::AbsShort_t Abs(Short_t d)Returns the absolute value of parameter Short_t d.Definition TMathBase.h:123; TMath::TwoPiconstexpr Double_t TwoPi()Definition TMath.h:44; TMath::LimitsDefinition TMath.h:407; TMath::Limits::Maxstatic T Max()Returns minimum double representation.Definition TMath.h:933. mathmathcoresrcTRandom.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:41 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom_8cxx_source.html:37001,Guid,Guide,37001,doc/master/TRandom_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRandom_8cxx_source.html,1,['Guid'],['Guide']
Usability," Image produced by .x ZoomHistogram.C; This demonstrates how to zoom into a histogram by changing the range on one of the axes (or both). ; void ZoomHistogram(); {; TH1F *orig = new TH1F(""Normal Histogram"", ""Normal Histogram"", 100, 0, 100);; ; for (int i = 0; i < 100; ++i) {; Double_t x = gRandom->Gaus(50, 10);; orig->Fill(x);; }; ; TH1F *zoom = (TH1F *)orig->Clone(""zoom"");; zoom->SetTitle(""Zoomed-in Histogram"");; zoom->GetXaxis()->SetRangeUser(50, 100);; ; TCanvas *c1 = new TCanvas(""c1"", ""Histogram"", 1500, 700);; c1->Divide(2, 1);; ; c1->cd(1);; orig->Draw();; c1->cd(2);; zoom->Draw();; }; Double_tdouble Double_tDefinition RtypesCore.h:59; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TAxis::SetRangeUservirtual void SetRangeUser(Double_t ufirst, Double_t ulast)Set the viewing range for the axis from ufirst to ulast (in user coordinates, that is,...Definition TAxis.cxx:1080; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1::SetTitlevoid SetTitle(const char *title) overrideChange/set the title.Definition TH1.cxx:6718; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fillvirtual Int_t Fill(Double_t x)Increment bin with abscissa X by 1.Definition TH1.cxx:3344; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; TH1::CloneTObject * Clone(const char *newname="""") const overrideMake a complete copy of the underlying object.Definition TH1.cxx:2752; TRandom::Gausvirtual Double_t Gaus(Double_t mean=0, Double_t sigma=1)Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigm...Definition TRandom.cxx:275; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; AuthorAdvait Dhingra ; Definition in file ZoomHistogram.C. tutorialshistZoomHistogram.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ZoomHistogram_8C.html:2191,Guid,Guide,2191,doc/master/ZoomHistogram_8C.html,https://root.cern,https://root.cern/doc/master/ZoomHistogram_8C.html,1,['Guid'],['Guide']
Usability," Incorporate object 'newobj' in the list 'outlist'.; The object is merged with an object of the same name already existing in; the list, or just added.; The boolean merged is set to kFALSE when the object is just added to 'outlist';; this happens if the Merge() method does not exist or if a object named as 'obj'; is not already in the list. If the obj is not 'merged' than it should not be; deleted, unless outlist is not owner of its objects.; Return 0 on success, -1 on error. TObject * HandleHistogram(TObject* obj); Low statistic histograms need a special treatment when using autobin. Bool_t HistoSameAxis(TH1* h0, TH1* h1); Return kTRUE is the histograms 'h0' and 'h1' have the same binning and ranges; on the axis (i.e. if they can be just Add-ed for merging). void StoreOutput(TList* out); Store received output list. TList * MergeFeedback(); Merge feedback lists. void StoreFeedback(TObject* slave, TList* out); Store feedback results from the specified slave. void SetupFeedback(); Setup reporting of feedback objects. void StopFeedback(); Stop reporting of feedback objects. Bool_t HandleTimer(TTimer* timer); Send feedback objects to client. TDSetElement * GetNextPacket(TSlave* slave, TMessage* r); Get next packet for specified slave. Bool_t IsClient() const; Is the player running on the client?. Long64_t DrawSelect(TDSet* set, const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Draw (support for TChain::Draw()).; Returns -1 in case of error or number of selected events in case of success. void SetInitTime(); Set init time. TVirtualPacketizer * GetPacketizer() const; { return 0; }. void Progress(Long64_t total, Long64_t processed). void Progress(TSlave* , Long64_t total, Long64_t processed); { Progress(total, processed); }. void Progress(Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti). TProof * GetProof() const; { return fProof; }. TP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofPlayerRemote.html:19332,feedback,feedback,19332,root/html530/TProofPlayerRemote.html,https://root.cern,https://root.cern/root/html530/TProofPlayerRemote.html,1,['feedback'],['feedback']
Usability," Inheritance Chart:. TObject. TQObject. ←; TVirtualProofPlayer. ←. TProofPlayer; ←. TProofPlayerLocal. TProofPlayerRemote; ←. TProofPlayerLite. TProofPlayerSuperMaster. TProofPlayerSlave. Function documentation; TVirtualProofPlayer * Create(const char* player, TProof* p, TSocket* s = 0); Create a PROOF player. TVirtualProofPlayer(); { ResetBit(TVirtualProofPlayer::kIsSubmerger); }. virtual ~TVirtualProofPlayer(); { }. Long64_t Process(TDSet* set, const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0). Bool_t JoinProcess(TList* workers). Long64_t Finalize(Bool_t force = kFALSE, Bool_t sync = kFALSE). Long64_t Finalize(TQueryResult* qr). Long64_t DrawSelect(TDSet* set, const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0). void HandleGetTreeHeader(TMessage* mess). void HandleRecvHisto(TMessage* mess). void StopProcess(Bool_t abort, Int_t timeout = -1). void AddInput(TObject* inp). void ClearInput(). TObject * GetOutput(const char* name) const. TList * GetOutputList() const. TList * GetInputList() const. TList * GetListOfResults() const. void AddQueryResult(TQueryResult* q). TQueryResult * GetCurrentQuery() const. TQueryResult * GetQueryResult(const char* ref). void RemoveQueryResult(const char* ref). void SetCurrentQuery(TQueryResult* q). void SetMaxDrawQueries(Int_t max). void RestorePreviousQuery(). Int_t AddOutputObject(TObject* obj). void AddOutput(TList* out). void StoreOutput(TList* out). void StoreFeedback(TObject* slave, TList* out). void Progress(Long64_t total, Long64_t processed). void Progress(TSlave* , Long64_t total, Long64_t processed). void Progress(Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti). void Progress(TProofProgressInfo* ). void Progress(TSlave* , TProofProgressInfo* ). void Feedback(TList* objs). TDrawFeedback * CreateDrawFeedback(TProof* p). void SetDrawFeedbackOption(T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualProofPlayer.html:14116,Clear,ClearInput,14116,root/html602/TVirtualProofPlayer.html,https://root.cern,https://root.cern/root/html602/TVirtualProofPlayer.html,1,['Clear'],['ClearInput']
Usability," Instructions | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development Shifter's Instructions. These are the aspects the shifter shall keep under control; The shifter summarises the events of the week during the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/shifters-instructions.html:1012,Guid,Guides,1012,d/shifters-instructions.html,https://root.cern,https://root.cern/d/shifters-instructions.html,1,['Guid'],['Guides']
Usability," Int_t GetByteCount() constGet total size in bytes of this.Definition TGeoMatrix.cxx:282; TGeoMatrix::~TGeoMatrix~TGeoMatrix() overrideDestructor.Definition TGeoMatrix.cxx:252; TGeoMatrix::ReflectYvirtual void ReflectY(Bool_t leftside, Bool_t rotonly=kFALSE)Multiply by a reflection respect to ZX.Definition TGeoMatrix.cxx:506; TGeoMatrix::ReflectXvirtual void ReflectX(Bool_t leftside, Bool_t rotonly=kFALSE)Multiply by a reflection respect to YZ.Definition TGeoMatrix.cxx:501; TGeoRotationClass describing rotations.Definition TGeoMatrix.h:168; TGeoRotation::RotateXvoid RotateX(Double_t angle) overrideRotate about X axis of the master frame with angle expressed in degrees.Definition TGeoMatrix.cxx:1098; TGeoRotation::ReflectZvoid ReflectZ(Bool_t leftside, Bool_t rotonly=kFALSE) overrideMultiply by a reflection respect to XY.Definition TGeoMatrix.cxx:1203; TGeoRotation::TGeoRotationTGeoRotation()Default constructor.Definition TGeoMatrix.cxx:860; TGeoRotation::Clearvoid Clear(Option_t *option="""") overridereset data membersDefinition TGeoMatrix.cxx:1030; TGeoRotation::GetRotationMatrixconst Double_t * GetRotationMatrix() const overrideDefinition TGeoMatrix.h:239; TGeoRotation::SetAnglesvoid SetAngles(Double_t phi, Double_t theta, Double_t psi)Set matrix elements according to Euler angles.Definition TGeoMatrix.cxx:1251; TGeoRotation::MultiplyByvoid MultiplyBy(const TGeoRotation *rot, Bool_t after=kTRUE)Multiply this rotation with the one specified by ROT.Definition TGeoMatrix.cxx:1411; TGeoRotation::RotateYvoid RotateY(Double_t angle) overrideRotate about Y axis of the master frame with angle expressed in degrees.Definition TGeoMatrix.cxx:1121; TGeoRotation::operator==Bool_t operator==(const TGeoRotation &other) constIs-equal operator.Definition TGeoMatrix.cxx:971; TGeoRotation::SetMatrixvoid SetMatrix(const Double_t *rot)Definition TGeoMatrix.h:230; TGeoRotation::RotateZvoid RotateZ(Double_t angle) overrideRotate about Z axis of the master frame with angle expressed in deg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoMatrix_8cxx_source.html:116799,Clear,Clearvoid,116799,doc/master/TGeoMatrix_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoMatrix_8cxx_source.html,2,['Clear'],"['Clear', 'Clearvoid']"
Usability," Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t npDefinition TGWin32VirtualXProxy.cxx:222; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TGraphTime.h; xminfloat xminDefinition THbookFile.cxx:95; yminfloat yminDefinition THbookFile.cxx:95; xmaxfloat xmaxDefinition THbookFile.cxx:95; ymaxfloat ymaxDefinition THbookFile.cxx:95; TMarker.h; TMath.h; TPaveLabel.h; TRandom3.h; TAttMarker::SetMarkerColorvirtual void SetMarkerColor(Color_t mcolor=1)Set the marker color.Definition TAttMarker.h:38; TAttMarker::SetMarkerSizevirtual void SetMarkerSize(Size_t msize=1)Set the marker size.Definition TAttMarker.h:45; TGraphTimeTGraphTime is used to draw a set of objects evolving with nsteps in time between tmin and tmax.Definition TGraphTime.h:30; TMarkerManages Markers.Definition TMarker.h:22; TPaveLabelA Pave (see TPave) with a text centered in the Pave.Definition TPaveLabel.h:20; TRandom3Random number generator class based on M.Definition TRandom3.h:27; TString::Formatstatic TString Format(const char *fmt,...)Static method which formats a string using a printf style format descriptor and return a TString.Definition TString.cxx:2378; TMath::CosDouble_t Cos(Double_t)Returns the cosine of an angle of x radians.Definition TMath.h:594; TMath::Piconstexpr Double_t Pi()Definition TMath.h:37; TMath::SinDouble_t Sin(Double_t)Returns the sine of an angle of x radians.Definition TMath.h:588; mTMarker mDefinition textangle.C:8; AuthorRene Brun ; Definition in file gtime2.C. tutorialsgraphsgtime2.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/gtime2_8C.html:4278,Guid,Guide,4278,doc/master/gtime2_8C.html,https://root.cern,https://root.cern/doc/master/gtime2_8C.html,1,['Guid'],['Guide']
Usability," Int_t PdgCode, Int_t Anti = -1, Int_t TrackingCode = 0). Particle definition normal constructor. If the particle is set to be; stable, the decay width parameter does have no meaning and can be set to; any value. The parameters granularity, LowerCutOff and HighCutOff are; used for the construction of the mean free path look up tables. The; granularity will be the number of logwise energy points for which the; mean free path will be calculated. TParticlePDG* AddAntiParticle(const char* Name, Int_t PdgCode); assuming particle has already been defined. TParticlePDG * GetParticle(const char* name) const. Get a pointer to the particle object according to the name given. TParticlePDG * GetParticle(Int_t pdgCode) const. Get a pointer to the particle object according to the MC code number. void Print(Option_t* opt = """") const; Print contents of PDG database. Int_t ConvertGeant3ToPdg(Int_t Geant3Number) const; Converts Geant3 particle codes to PDG convention. (Geant4 uses; PDG convention already); Source: BaBar User Guide, Neil I. Geddes,. /*; see Conversion table; */. with some fixes by PB, marked with (PB) below. Checked against; PDG listings from 2000. Paul Balm, Nov 19, 2001. Int_t ConvertPdgToGeant3(Int_t pdgNumber) const; Converts pdg code to geant3 id. Int_t ConvertIsajetToPdg(Int_t isaNumber) const. Converts the ISAJET Particle number into the PDG MC number. void ReadPDGTable(const char* filename = """"); read list of particles from a file; if the particle list does not exist, it is created, otherwise; particles are added to the existing list; See $ROOTSYS/etc/pdg_table.txt to see the file format. void Browse(TBrowser* b); browse data base. Int_t WritePDGTable(const char* filename); write contents of the particle DB into a file. TDatabasePDG(const TDatabasePDG& db); make copy-constructor and assigment protected since class cannot be copied. { }. TDatabasePDG& operator=(const TDatabasePDG& db). TParticleClassPDG* GetParticleClass(const char* name). const THashList * Part",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDatabasePDG.html:8908,Guid,Guide,8908,root/html534/TDatabasePDG.html,https://root.cern,https://root.cern/root/html534/TDatabasePDG.html,3,['Guid'],['Guide']
Usability," Int_t ReparentChildren(TGListTreeItem* item, TGListTreeItem* newparent); Make newparent the new parent of the children of item. Int_t Sort(TGListTreeItem* item); Sort items starting with item. Int_t SortSiblings(TGListTreeItem* item); Sort siblings of item. Int_t SortChildren(TGListTreeItem* item); Sort children of item. TGListTreeItem * FindSiblingByName(TGListTreeItem* item, const char* name); Find sibling of item by name. TGListTreeItem * FindSiblingByData(TGListTreeItem* item, void* userData); Find sibling of item by userData. TGListTreeItem * FindChildByName(TGListTreeItem* item, const char* name); Find child of item by name. TGListTreeItem * FindChildByData(TGListTreeItem* item, void* userData); Find child of item by userData. TGListTreeItem * FindItemByPathname(const char* path); Find item by pathname. Pathname is in the form of /xx/yy/zz. If zz; in path /xx/yy is found it returns item, 0 otherwise. void HighlightItem(TGListTreeItem* item); Highlight item. void ClearHighlighted(); Un highlight items. void GetPathnameFromItem(TGListTreeItem* item, char* path, Int_t depth = 0); Get pathname from item. Use depth to limit path name to last; depth levels. By default depth is not limited. Pixel_t GetGrayPixel(); Return gray draw color in use. FontStruct_t GetDefaultFontStruct(); Return default font structure in use. const TGGC & GetActiveGC(); Return default graphics context in use. const TGGC & GetDrawGC(); Return default graphics context in use. const TGGC & GetLineGC(); Return graphics context in use for line drawing. const TGGC & GetHighlightGC(); Return graphics context for highlighted frame background. const TGGC & GetColorGC(); Return graphics context for highlighted frame background. const TGPicture * GetOpenPic(); Returns the icon used by items in open state. const TGPicture * GetClosedPic(); Returns the icon used by items in closed state. const TGPicture * GetCheckedPic(); Returns the icon used for checked checkbox. const TGPicture * GetUncheckedPic(); Re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGListTree.html:38687,Clear,ClearHighlighted,38687,root/html530/TGListTree.html,https://root.cern,https://root.cern/root/html530/TGListTree.html,5,['Clear'],['ClearHighlighted']
Usability," Int_t ReparentChildren(TGListTreeItem* item, TGListTreeItem* newparent); Make newparent the new parent of the children of item. Int_t Sort(TGListTreeItem* item); Sort items starting with item. Int_t SortSiblings(TGListTreeItem* item); Sort siblings of item. Int_t SortChildren(TGListTreeItem* item); Sort children of item. TGListTreeItem * FindSiblingByName(TGListTreeItem* item, const char* name); Find sibling of item by name. TGListTreeItem * FindSiblingByData(TGListTreeItem* item, void* userData); Find sibling of item by userData. TGListTreeItem * FindChildByName(TGListTreeItem* item, const char* name); Find child of item by name. TGListTreeItem * FindChildByData(TGListTreeItem* item, void* userData); Find child of item by userData. TGListTreeItem * FindItemByPathname(const char* path); Find item by pathname. Pathname is in the form of /xx/yy/zz. If zz; in path /xx/yy is found it returns item, 0 otherwise. void HighlightItem(TGListTreeItem* item); Highlight item. void ClearHighlighted(); Un highlight items. void GetPathnameFromItem(TGListTreeItem* item, char* path, Int_t depth = 0); Get pathname from item. Use depth to limit path name to last; depth levels. By default depth is not limited. Pixel_t GetGrayPixel(); Return gray draw color in use. FontStruct_t GetDefaultFontStruct(); Return default font structure in use. const TGGC & GetDrawGC(); Return default graphics context in use. const TGGC & GetLineGC(); Return graphics context in use for line drawing. const TGGC & GetHighlightGC(); Return graphics context for highlighted frame background. const TGGC & GetColorGC(); Return graphics context for highlighted frame background. const TGPicture * GetOpenPic(); Returns the icon used by items in open state. const TGPicture * GetClosedPic(); Returns the icon used by items in closed state. const TGPicture * GetCheckedPic(); Returns the icon used for checked checkbox. const TGPicture * GetUncheckedPic(); Returns the icon used for unchecked checkbox. void SavePrimitive(ostre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGListTree.html:38473,Clear,ClearHighlighted,38473,root/html528/TGListTree.html,https://root.cern,https://root.cern/root/html528/TGListTree.html,1,['Clear'],['ClearHighlighted']
Usability," Int_t RooAbsReal::PlotOpt::numCPU = 1. Definition at line 484 of file RooAbsReal.h. ◆ numee. Int_t RooAbsReal::PlotOpt::numee = 10. Definition at line 487 of file RooAbsReal.h. ◆ postRangeFracScale. bool RooAbsReal::PlotOpt::postRangeFracScale = false. Definition at line 476 of file RooAbsReal.h. ◆ precision. double RooAbsReal::PlotOpt::precision = 1e-3. Definition at line 470 of file RooAbsReal.h. ◆ progress. bool RooAbsReal::PlotOpt::progress = false. Definition at line 490 of file RooAbsReal.h. ◆ projData. const RooAbsData* RooAbsReal::PlotOpt::projData = nullptr. Definition at line 467 of file RooAbsReal.h. ◆ projDataSet. const RooArgSet* RooAbsReal::PlotOpt::projDataSet = nullptr. Definition at line 472 of file RooAbsReal.h. ◆ projectionRangeName. const char* RooAbsReal::PlotOpt::projectionRangeName = nullptr. Definition at line 478 of file RooAbsReal.h. ◆ projSet. const RooArgSet* RooAbsReal::PlotOpt::projSet = nullptr. Definition at line 469 of file RooAbsReal.h. ◆ rangeHi. double RooAbsReal::PlotOpt::rangeHi = 0.0. Definition at line 475 of file RooAbsReal.h. ◆ rangeLo. double RooAbsReal::PlotOpt::rangeLo = 0.0. Definition at line 474 of file RooAbsReal.h. ◆ scaleFactor. double RooAbsReal::PlotOpt::scaleFactor = 1.0. Definition at line 465 of file RooAbsReal.h. ◆ shiftToZero. bool RooAbsReal::PlotOpt::shiftToZero = false. Definition at line 471 of file RooAbsReal.h. ◆ stype. ScaleType RooAbsReal::PlotOpt::stype = Relative. Definition at line 466 of file RooAbsReal.h. ◆ wmode. RooCurve::WingMode RooAbsReal::PlotOpt::wmode = RooCurve::Extended. Definition at line 477 of file RooAbsReal.h. Collaboration diagram for RooAbsReal::PlotOpt:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; roofit/roofitcore/inc/RooAbsReal.h. RooAbsRealPlotOpt. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:41 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structRooAbsReal_1_1PlotOpt.html:4690,Guid,Guide,4690,doc/master/structRooAbsReal_1_1PlotOpt.html,https://root.cern,https://root.cern/doc/master/structRooAbsReal_1_1PlotOpt.html,1,['Guid'],['Guide']
Usability, Int_t TPainter3dAlgorithms::fSystem. private . Coordinate system. ; Definition at line 35 of file TPainter3dAlgorithms.h. ◆ fT. Double_t TPainter3dAlgorithms::fT[MaxNT *2]. private . Definition at line 157 of file TPainter3dAlgorithms.h. ◆ fU. Double_t TPainter3dAlgorithms::fU[NumOfSlices *2]. private . Definition at line 160 of file TPainter3dAlgorithms.h. ◆ fVls. Double_t TPainter3dAlgorithms::fVls[NumOfLights *3]. private . Definition at line 137 of file TPainter3dAlgorithms.h. ◆ fX0. Double_t TPainter3dAlgorithms::fX0. private . Definition at line 154 of file TPainter3dAlgorithms.h. ◆ fXrast. Double_t TPainter3dAlgorithms::fXrast. private . Minimal x. ; Definition at line 174 of file TPainter3dAlgorithms.h. ◆ fYdl. Double_t TPainter3dAlgorithms::fYdl. private . Definition at line 135 of file TPainter3dAlgorithms.h. ◆ fYls. Double_t TPainter3dAlgorithms::fYls[NumOfLights]. private . Definition at line 136 of file TPainter3dAlgorithms.h. ◆ fYrast. Double_t TPainter3dAlgorithms::fYrast. private . Minimal y. ; Definition at line 175 of file TPainter3dAlgorithms.h. ◆ MaxNT. const Int_t TPainter3dAlgorithms::MaxNT = 100. staticprivate . Definition at line 153 of file TPainter3dAlgorithms.h. ◆ NumOfColorLevels. const Int_t TPainter3dAlgorithms::NumOfColorLevels = 256. staticprivate . Definition at line 114 of file TPainter3dAlgorithms.h. ◆ NumOfLevelLines. const Int_t TPainter3dAlgorithms::NumOfLevelLines = 200. staticprivate . Definition at line 119 of file TPainter3dAlgorithms.h. ◆ NumOfLights. const Int_t TPainter3dAlgorithms::NumOfLights = 4. staticprivate . Definition at line 133 of file TPainter3dAlgorithms.h. ◆ NumOfSlices. const Int_t TPainter3dAlgorithms::NumOfSlices = 2000. staticprivate . Definition at line 159 of file TPainter3dAlgorithms.h. hist/histpainter/src/TPainter3dAlgorithms.h; hist/histpainter/src/TPainter3dAlgorithms.cxx. TPainter3dAlgorithms. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:06 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPainter3dAlgorithms.html:52784,Guid,Guide,52784,doc/master/classTPainter3dAlgorithms.html,https://root.cern,https://root.cern/doc/master/classTPainter3dAlgorithms.html,1,['Guid'],['Guide']
Usability," Int_t order=1, double eps=0.001)Return function representing first, second or third order derivative of this function.Definition RooAbsReal.cxx:3987; RooAbsReal::plotOnvirtual RooPlot * plotOn(RooPlot *frame, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={}, const RooCmdArg &arg9={}, const RooCmdArg &arg10={}) constPlot (project) PDF on specified frame.Definition RooAbsReal.cxx:1611; RooGaussianPlain Gaussian p.d.f.Definition RooGaussian.h:24; RooPlotPlot frame and a container for graphics objects within that frame.Definition RooPlot.h:45; RooPlot::framestatic RooPlot * frame(const RooAbsRealLValue &var, double xmin, double xmax, Int_t nBins)Create a new frame for a given variable in x.Definition RooPlot.cxx:225; RooPlot::GetYaxisTAxis * GetYaxis() constDefinition RooPlot.cxx:1264; RooPlot::Drawvoid Draw(Option_t *options=nullptr) overrideDraw this plot and all of the elements it contains.Definition RooPlot.cxx:637; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TAttAxis::SetTitleOffsetvirtual void SetTitleOffset(Float_t offset=1)Set distance between the axis and the axis title.Definition TAttAxis.cxx:298; TCanvasThe Canvas class.Definition TCanvas.h:23; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf111_derivativesDefinition rf111_derivatives.py:1; RangeTa Range(0, 0, 1, 1); ; [#1] INFO:NumericIntegration -- RooRealIntegral::init(gauss_Int[sigma]) using numeric integrator RooIntegrator1D to calculate Int(sigma); DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf111_derivatives.C. tutorialsroofitrf111_derivatives.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf111__derivatives_8C.html:5291,Guid,Guide,5291,doc/master/rf111__derivatives_8C.html,https://root.cern,https://root.cern/doc/master/rf111__derivatives_8C.html,1,['Guid'],['Guide']
Usability," Int_t sigDigit = 1, const RooLinkedList& siblingLists = RooLinkedList(), const RooCmdArg* formatCmd = 0) const; Internal implementation function of printLatex. Bool_t allInRange(const char* rangeSpec) const; Return true if all contained object report to have their; value inside the specified range. void makeStructureTag(). void makeTypedStructureTag(). TObject* clone(const char* newname) const. TObject* create(const char* newname) const. TObject* Clone(const char* newname = 0) const. void setHashTableSize(Int_t i); Hash table control. Int_t getHashTableSize() const; Return size of internal hash table. Bool_t contains(const RooAbsArg& var) const; Returns true if object with same name as var is contained in this collection. Bool_t containsInstance(const RooAbsArg& var) const; Returns true if var is contained in this collection. TIterator* createIterator(Bool_t dir = kIterForward) const; export subset of THashList interface. Int_t getSize() const; Return the number of elements in the collection. RooAbsArg * first() const; Return the first element in this collection. void Print(Option_t* options = 0) const; Printing interface (human readable). void setName(const char* name); Set name of collection. const char* GetName() const; Return namer of collection. Bool_t isOwning() const; Does collection own contents?. void releaseOwnership(); { _ownCont = kFALSE ; }. void takeOwnership(); { _ownCont = kTRUE ; }. void sort(Bool_t ascend = kTRUE); { _list.Sort(ascend) ; }. TNamed* structureTag(); { if (_structureTag==0) makeStructureTag() ; return _structureTag ; }. TNamed* typedStructureTag(); { if (_typedStructureTag==0) makeTypedStructureTag() ; return _typedStructureTag ; }. void clearStructureTags(); { _structureTag=0 ; _typedStructureTag = 0 ; }. » Last changed: Fri Dec 2 14:26:34 2011 » Last generated: 2011-12-02 14:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsCollection.html:21068,clear,clearStructureTags,21068,root/html532/RooAbsCollection.html,https://root.cern,https://root.cern/root/html532/RooAbsCollection.html,1,['clear'],['clearStructureTags']
Usability," Int_t splitlevel)TTreeprotectedvirtual; Browse(TBrowser *) overrideTTreevirtual; BuildIndex(const char *majorname, const char *minorname=""0"")TTreevirtual; BuildStreamerInfo(TClass *cl, void *pointer=nullptr, bool canOptimize=true)TTree; ChangeFile(TFile *file)TTreevirtual; CheckBranchAddressType(TBranch *branch, TClass *ptrClass, EDataType datatype, bool ptr)TTreeprotectedvirtual; CheckedHash()TObjectinline; Class()TTreestatic; Class_Name()TTreestatic; Class_Version()TTreeinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTNamedvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; CloneTree(Long64_t nentries=-1, Option_t *option="""")TTreevirtual; Compare(const TObject *obj) const overrideTNamedvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CopyAddresses(TTree *, bool undo=false)TTreevirtual; CopyEntries(TTree *tree, Long64_t nentries=-1, Option_t *option="""", bool needCopyAddresses=false)TTreevirtual; CopyTree(const char *selection, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0)TTreevirtual; CreateBasket(TBranch *)TTreevirtual; Debug() constTTreeinline; DeclFileName()TTreeinlinestatic; Delete(Option_t *option="""") overrideTTreevirtual; DirectoryAutoAdd(TDirectory *)TTreevirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *opt) overrideTTreeinlinevirtual; Draw(const char *varexp, const TCut &selection, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0)TTreevirtual; Draw(const char *varexp, const char *selection, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTree-members.html:4206,undo,undo,4206,doc/master/classTTree-members.html,https://root.cern,https://root.cern/doc/master/classTTree-members.html,1,['undo'],['undo']
Usability," Int_t y) overrideTLinevirtual; SetBBoxX1(const Int_t x) overrideTLinevirtual; SetBBoxX2(const Int_t x) overrideTLinevirtual; SetBBoxY1(const Int_t y) overrideTLinevirtual; SetBBoxY2(const Int_t y) overrideTLinevirtual; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetDrawOption(Option_t *option="""")TObjectvirtual; SetDtorOnly(void *obj)TObjectstatic; SetHorizontal(Bool_t set=kTRUE)TLine; SetLineAttributes()TAttLinevirtual; SetLineColor(Color_t lcolor)TAttLineinlinevirtual; SetLineColorAlpha(Color_t lcolor, Float_t lalpha)TAttLinevirtual; SetLineStyle(Style_t lstyle)TAttLineinlinevirtual; SetLineWidth(Width_t lwidth)TAttLineinlinevirtual; SetNDC(Bool_t isNDC=kTRUE)TLinevirtual; SetObjectStat(Bool_t stat)TObjectstatic; SetUniqueID(UInt_t uid)TObjectvirtual; SetVertical(Bool_t set=kTRUE)TLine; SetX1(Double_t x1)TLineinlinevirtual; SetX2(Double_t x2)TLineinlinevirtual; SetY1(Double_t y1)TLineinlinevirtual; SetY2(Double_t y2)TLineinlinevirtual; Streamer(TBuffer &) overrideTLinevirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TLineinline; SysError(const char *method, const char *msgfmt,...) constTObjectvirtual; TAttLine()TAttLine; TAttLine(Color_t lcolor, Style_t lstyle, Width_t lwidth)TAttLine; TestBit(UInt_t f) constTObjectinline; TestBits(UInt_t f) constTObjectinline; TLine()TLineinline; TLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TLine; TLine(const TLine &line)TLine; TObject()TObjectinline; TObject(const TObject &object)TObjectinline; UseCurrentStyle()TObjectvirtual; Warning(const char *method, const char *msgfmt,...) constTObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)TObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) constTObjectvirtual; ~TAttBBox2D()TAttBBox2Dvirtual; ~TAttLine()TAttLinevirtual; ~TLine() override=defaultTLine; ~TObject()TObjectvirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:55 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLine-members.html:7585,Guid,Guide,7585,doc/master/classTLine-members.html,https://root.cern,https://root.cern/doc/master/classTLine-members.html,1,['Guid'],['Guide']
Usability," Int_t& fy); virtual voidTGFrame::UnmapWindow(); virtual voidTObject::UseCurrentStyle(); Bool_tTGWidget::WantFocus() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; Int_tTGWidget::WidgetId() const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. static Int_tTQObject::CheckConnectArgs(TQObject* sender, TClass* sender_class, const char* signal, TClass* receiver_class, const char* slot); Int_tTGWidget::ClearFlags(Int_t flags); static TStringTQObject::CompressName(const char* method_name); static Bool_tTQObject::ConnectToClass(TQObject* sender, const char* signal, TClass* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::ConnectToClass(const char* sender_class, const char* signal, TClass* receiver_class, void* receiver, const char* slot); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidTGFrame::DoRedraw(); virtual voidTGFrame::Draw3dRectangle(UInt_t type, Int_t x, Int_t y, UInt_t w, UInt_t h); static Time_tTGFrame::GetLastClick(); TStringTGFrame::GetOptionString() const; const TGResourcePool*TGFrame::GetResourcePool() const; virtual void*TGFrame::GetSender(); virtual const char*TQObject::GetSenderClassName() const; virtual voidInitListBox(); voidTObject::MakeZombie(); voidSetContainer(TGFrame* f); Int_tTGWidget::SetFlags(Int_t flags); virtual voidTGFrame::StartGuiBuilding(Bool_t on = kTRUE). private:. TGListBoxoperator=(const TGListBox&); TGListBox(const TGListBox&). Data Members; public:. static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TGWindow::EEditModeTGWindow::kEditDisable; static TGWindow::EEditModeTGWindow::kEditDisableBtnEnable; static TGWindow::EEditModeTGWindow::kEditDisableEvents; static TGWindow::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGListBox.html:17336,Clear,ClearFlags,17336,root/html602/TGListBox.html,https://root.cern,https://root.cern/root/html602/TGListBox.html,2,['Clear'],['ClearFlags']
Usability," Int_t, Double_t *) constDefinition TGeoShape.h:105; TGeoShape::Dividevirtual TGeoVolume * Divide(TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step)=0; TGeoShape::IsCompositevirtual Bool_t IsComposite() constDefinition TGeoShape.h:130; TGeoShape::InvertShapeBitvoid InvertShapeBit(UInt_t f)Definition TGeoShape.h:169; TGeoShape::ComputeNormal_vvirtual void ComputeNormal_v(const Double_t *, const Double_t *, Double_t *, Int_t)Definition TGeoShape.h:98; TGeoShape::IsSameWithinTolerancestatic Bool_t IsSameWithinTolerance(Double_t a, Double_t b)Check if two numbers differ with less than a tolerance.Definition TGeoShape.cxx:338; TGeoShape::Safetyvirtual Double_t Safety(const Double_t *point, Bool_t in=kTRUE) const =0; TGeoShape::IsRunTimeShapeBool_t IsRunTimeShape() constDefinition TGeoShape.h:142; TGeoShape::Contains_vvirtual void Contains_v(const Double_t *, Bool_t *, Int_t) constDefinition TGeoShape.h:100; TGeoShape::ClearThreadDatavirtual void ClearThreadData() constDefinition TGeoShape.h:66; TGeoShape::GetPointerNameconst char * GetPointerName() constProvide a pointer name containing uid.Definition TGeoShape.cxx:746; TGeoShape::FillBuffer3Dvirtual void FillBuffer3D(TBuffer3D &buffer, Int_t reqSections, Bool_t localFrame) constFill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections,...Definition TGeoShape.cxx:632; TGeoShape::IsCylTypevirtual Bool_t IsCylType() const =0; TGeoShape::CheckShapevoid CheckShape(Int_t testNo, Int_t nsamples=10000, Option_t *option="""")Test for shape navigation methods.Definition TGeoShape.cxx:211; TGeoShape::EpsMchstatic Double_t EpsMch()static function returning the machine round-off errorDefinition TGeoShape.cxx:242; TGeoShape::IsInPhiRangestatic Bool_t IsInPhiRange(const Double_t *point, Double_t phi1, Double_t phi2)Static method to check if a point is in the phi range (phi1, phi2) [degrees].Definition TGeoShape.cxx:290; TGeoShape::ComputeEpsMchstati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoShape_8h_source.html:15144,Clear,ClearThreadDatavirtual,15144,doc/master/TGeoShape_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoShape_8h_source.html,2,['Clear'],"['ClearThreadData', 'ClearThreadDatavirtual']"
Usability," Int_tSetParent(const TObject* parent, Int_t branchID); static voidSetRefTable(TRefTable* table); virtual voidSetUID(UInt_t uid, TProcessID* context = 0); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. Int_tAddInternalIdxForPID(TProcessID* procid); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual Int_tExpandForIID(Int_t iid, Int_t newsize); voidExpandPIDs(Int_t numpids); Int_tFindPIDGUID(const char* guid) const; Int_tGetInternalIdxForPID(TProcessID* procid) const; Int_tGetInternalIdxForPID(Int_t pid) const; voidTObject::MakeZombie(). Data Members; public:. enum { kHaveWarnedReadingOld; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Int_t*fAllocSize![fNumPIDs] allocated size of array fParentIDs for each ProcessID; Int_tfDefaultSize!default size for a new PID array; vector<Int_t>fMapPIDtoInternal! cache of pid to index in fProcessGUIDs; Int_t*fN![fNumPIDs] current maximum number of IDs in array fParentIDs for each ProcessID; Int_tfNumPIDs!number of known ProcessIDs; TObject*fOwnerObject owning this TRefTable; Int_tfParentID!current parent ID in fParents (latest call to SetParent); Int_t**fParentIDs![fNumP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TRefTable.html:6865,guid,guid,6865,root/html534/TRefTable.html,https://root.cern,https://root.cern/root/html534/TRefTable.html,1,['guid'],['guid']
Usability," Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoConeSegEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for cone segment editor. ~TGeoConeSegEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. void DoPhi1(); Slot for Phi1. void DoPhi2(); Slot for Phi2. void DoPhi(); Slot for Phi. void DoApply(); Slot for applying current parameters. void DoUndo(); Slot for undoing last operation. TGeoConeSegEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()). » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-06-02 16:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGeoConeSegEditor.html:23132,undo,undoing,23132,root/html604/TGeoConeSegEditor.html,https://root.cern,https://root.cern/root/html604/TGeoConeSegEditor.html,1,['undo'],['undoing']
Usability," Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoConeSegEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for cone segment editor. ~TGeoConeSegEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. void DoPhi1(); Slot for Phi1. void DoPhi2(); Slot for Phi2. void DoPhi(); Slot for Phi. void DoApply(); Slot for applying current parameters. void DoUndo(); Slot for undoing last operation. TGeoConeSegEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()). » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-06-30 15:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoConeSegEditor.html:23132,undo,undoing,23132,root/html602/TGeoConeSegEditor.html,https://root.cern,https://root.cern/root/html602/TGeoConeSegEditor.html,1,['undo'],['undoing']
Usability," Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled; static TGMainFrame::(anonymous)TGMainFrame::kDontCallClose. private:. TGTextButton*fCancelcancel button; TGLabel*fLabeltext entry label; TGTextButton*fOkok button; char*fRetStraddress to store return string; TGTextEntry*fTEtext entry widget. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGInputDialog(const TGWindow* p = 0, const TGWindow* main = 0, const char* prompt = 0, const char* defval = 0, char* retstr = 0, UInt_t options = kVerticalFrame); Create simple input dialog. It is important to know that the case where the constructor in; which all the variables are initialized to their default values is; only used for the TBrowser to inspect on the classes. For normal; use the only variable that should be free is options. Variables prompt, defval are the content of the input dialog while; retstr has to be initialized to a char[256]. In case these are not; initialized, they will show default values while retstr will be; automatically allocated by the dialog. However this will make; impossible to retrieve the value entered by the dialog. To see TGInputDialog in use see:; $ROOTSYS/tutorials/testInputDialog.cxx. ~TGInputDialog(); Cleanup dialog. Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t ); Handle button and text enter events. TGInputDialog(const TGInputDialog& ). TGInputDialog & operator=(const TGInputDialog& ). » Author: David Gonzalez Mali",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGInputDialog.html:23541,simpl,simple,23541,root/html602/TGInputDialog.html,https://root.cern,https://root.cern/root/html602/TGInputDialog.html,2,['simpl'],['simple']
Usability," Int_tfState-1 undoing on, 1 redoing on, 0 nothing in progress; Int_tfStatusfStatus++ after Redo(), fStatus-- after Undo(); TStringfTitlecommand description; TQConnection*fUndoundo action; Long_t*fUndoArgsundo values; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TCollection::(anonymous)TCollection::kIsOwner. Class Charts. Inheritance Chart:. TObject. ←; TCollection. ←; TSeqCollection. ←; TList. TQObject. ←; TQCommand. ←. TQUndoManager. Function documentation; void Init(const char* cl, void* object, const char* redo, const char* undo); common protected method used in several constructors. TQCommand(const char* cl = 0, void* object = 0, const char* redo = 0, const char* undo = 0); Constructor. Input parameters:; 1. clname - class name.; 2. obj - an object; 3. redo - method or function to do/redo operation; 4. undo - method or function to undo operation. Comments:; - if either clname or obj is NULL that means that redo/undo is function; - to specify default arguments for redo/undo method/function; '=' must precede to argument value. Example:; TQCommand(""TPad"", gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");. - undo method can be same as redo one. In that case undo parameter; can be omitted. Example:; TQCommand(""TPad"", gPad, ""SetFillStyle(Style_t)"");. TQCommand(TObject* obj, const char* redo = 0, const char* undo = 0); Constructor. Input parameters:; 1. obj - an object; 2. redo - method or function to do/redo operation; 3. undo - method or function to undo operation. Comments:; - to specify default arguments for redo/undo method/function; '=' must precede to argument value. Example:; TQCommand(gPad, ""SetEditable(=kTRUE)"", ""SetEditable(=kFALSE)"");. - undo method can be same as redo one. In that case ""undo""; can parameter be omitted. Example:; TQCommand(gPad, ""SetFillStyle(Style_t)"");. TQCommand(const TQCommand& com); Copy constructor. ~TQCommand(); dtor. TQCommand * GetCommand(); Return a command which is doing redo/und",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQCommand.html:19115,undo,undo,19115,root/html602/TQCommand.html,https://root.cern,https://root.cern/root/html602/TQCommand.html,4,['undo'],['undo']
Usability," Int_t ; ). inlinevirtual . Reimplemented from TRandom.; Definition at line 51 of file TRandom.h. ◆ RndmArray() [1/2]. void TRandom3::RndmArray ; (; Int_t ; n, . Double_t * ; array . ). overridevirtual . Return an array of n random numbers uniformly distributed in ]0,1]. ; Reimplemented from TRandom.; Definition at line 151 of file TRandom3.cxx. ◆ RndmArray() [2/2]. void TRandom3::RndmArray ; (; Int_t ; n, . Float_t * ; array . ). overridevirtual . Return an array of n random numbers uniformly distributed in ]0,1]. ; Reimplemented from TRandom.; Definition at line 143 of file TRandom3.cxx. ◆ SetSeed(). void TRandom3::SetSeed ; (; ULong_t ; seed = 0). overridevirtual . Set the random generator sequence if seed is 0 (default value) a TUUID is generated and used to fill the first 8 integers of the seed array. ; In this case the seed is guaranteed to be unique in space and time. Use upgraded seeding procedure to fix a known problem when seeding with values with many zero in the bit pattern (like 2**28). see http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html ; Reimplemented from TRandom.; Definition at line 206 of file TRandom3.cxx. ◆ Streamer(). void TRandom3::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TRandom3. ; Reimplemented from TRandom.; Definition at line 237 of file TRandom3.cxx. ◆ StreamerNVirtual(). void TRandom3::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 47 of file TRandom3.h. Member Data Documentation. ◆ fCount624. Int_t TRandom3::fCount624. private . Definition at line 31 of file TRandom3.h. ◆ fMt. UInt_t TRandom3::fMt[624]. private . Definition at line 30 of file TRandom3.h. Libraries for TRandom3:. [legend]; The documentation for this class was generated from the following files:; math/mathcore/inc/TRandom3.h; math/mathcore/src/TRandom3.cxx. TRandom3. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRandom3.html:20341,Guid,Guide,20341,doc/master/classTRandom3.html,https://root.cern,https://root.cern/doc/master/classTRandom3.html,1,['Guid'],['Guide']
Usability," Int_t ; v). inlinevirtual . Definition at line 92 of file TGLayout.h. ◆ SetPadTop(). virtual void TGLayoutHints::SetPadTop ; (; Int_t ; v). inlinevirtual . Definition at line 89 of file TGLayout.h. ◆ Streamer(). void TGLayoutHints::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TGTableLayoutHints, and TGXYLayoutHints. ◆ StreamerNVirtual(). void TGLayoutHints::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 99 of file TGLayout.h. ◆ UpdateFrameElements(). void TGLayoutHints::UpdateFrameElements ; (; TGLayoutHints * ; l). protected . Update layout hints of frame elements. ; Definition at line 107 of file TGLayout.cxx. Friends And Related Symbol Documentation. ◆ TGCompositeFrame. friend class TGCompositeFrame. friend . Definition at line 53 of file TGLayout.h. ◆ TGFrameElement. friend class TGFrameElement. friend . Definition at line 52 of file TGLayout.h. Member Data Documentation. ◆ fFE. TGFrameElement* TGLayoutHints::fFE. private . Definition at line 56 of file TGLayout.h. ◆ fLayoutHints. ULong_t TGLayoutHints::fLayoutHints. protected . Definition at line 62 of file TGLayout.h. ◆ fPadbottom. Int_t TGLayoutHints::fPadbottom. protected . Definition at line 64 of file TGLayout.h. ◆ fPadleft. Int_t TGLayoutHints::fPadleft. protected . Definition at line 65 of file TGLayout.h. ◆ fPadright. Int_t TGLayoutHints::fPadright. protected . Definition at line 66 of file TGLayout.h. ◆ fPadtop. Int_t TGLayoutHints::fPadtop. protected . Definition at line 63 of file TGLayout.h. ◆ fPrev. TGFrameElement* TGLayoutHints::fPrev. private . Definition at line 57 of file TGLayout.h. Libraries for TGLayoutHints:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGLayout.h; gui/gui/src/TGLayout.cxx. TGLayoutHints. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:19 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLayoutHints.html:16777,Guid,Guide,16777,doc/master/classTGLayoutHints.html,https://root.cern,https://root.cern/doc/master/classTGLayoutHints.html,1,['Guid'],['Guide']
Usability," Int_t ; winid, . Int_t ; ww, . Int_t ; wh . ). Embedded a canvas into a TRootEmbeddedCanvas. ; This method is only called via TRootEmbeddedCanvas::AdoptCanvas. ; Definition at line 1046 of file TCanvas.cxx. ◆ EnterLeave(). void TCanvas::EnterLeave ; (; TPad * ; prevSelPad, . TObject * ; prevSelObj . ). Generate kMouseEnter and kMouseLeave events depending on the previously selected object and the currently selected object. ; Does nothing if the selected object does not change. ; Definition at line 1072 of file TCanvas.cxx. ◆ ExecuteEvent(). void TCanvas::ExecuteEvent ; (; Int_t ; event, . Int_t ; px, . Int_t ; py . ). overrideprotectedvirtual . Execute action corresponding to one event. ; This member function must be implemented to realize the action corresponding to the mouse click on the object in the canvas; Only handle mouse motion events in TCanvas, all other events are ignored for the time being ; Reimplemented from TObject.; Definition at line 1108 of file TCanvas.cxx. ◆ FeedbackMode(). void TCanvas::FeedbackMode ; (; Bool_t ; set). Turn rubberband feedback mode on or off. ; Definition at line 1126 of file TCanvas.cxx. ◆ Flush(). void TCanvas::Flush ; (; ). Flush canvas buffers. ; Definition at line 1143 of file TCanvas.cxx. ◆ ForceUpdate(). void TCanvas::ForceUpdate ; (; ). Force canvas update. ; Definition at line 1175 of file TCanvas.cxx. ◆ GetAutoExec(). Bool_t TCanvas::GetAutoExec ; (; ); const. inline . Definition at line 152 of file TCanvas.h. ◆ GetCanvasID(). Int_t TCanvas::GetCanvasID ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 157 of file TCanvas.h. ◆ GetCanvasImp(). TCanvasImp * TCanvas::GetCanvasImp ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 158 of file TCanvas.h. ◆ GetCanvasPainter(). TVirtualPadPainter * TCanvas::GetCanvasPainter ; (; ). Access and (probably) creation of pad painter. ; Definition at line 2603 of file TCanvas.cxx. ◆ GetCanvasPar(). virtual void TCanva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCanvas.html:72797,Feedback,FeedbackMode,72797,doc/v632/classTCanvas.html,https://root.cern,https://root.cern/doc/v632/classTCanvas.html,1,['Feedback'],['FeedbackMode']
Usability," Int_t ; winid, . Int_t ; ww, . Int_t ; wh . ). Embedded a canvas into a TRootEmbeddedCanvas. ; This method is only called via TRootEmbeddedCanvas::AdoptCanvas. ; Definition at line 1048 of file TCanvas.cxx. ◆ EnterLeave(). void TCanvas::EnterLeave ; (; TPad * ; prevSelPad, . TObject * ; prevSelObj . ). Generate kMouseEnter and kMouseLeave events depending on the previously selected object and the currently selected object. ; Does nothing if the selected object does not change. ; Definition at line 1074 of file TCanvas.cxx. ◆ ExecuteEvent(). void TCanvas::ExecuteEvent ; (; Int_t ; event, . Int_t ; px, . Int_t ; py . ). overrideprotectedvirtual . Execute action corresponding to one event. ; This member function must be implemented to realize the action corresponding to the mouse click on the object in the canvas; Only handle mouse motion events in TCanvas, all other events are ignored for the time being ; Reimplemented from TObject.; Definition at line 1110 of file TCanvas.cxx. ◆ FeedbackMode(). void TCanvas::FeedbackMode ; (; Bool_t ; set). Turn rubberband feedback mode on or off. ; Definition at line 1128 of file TCanvas.cxx. ◆ Flush(). void TCanvas::Flush ; (; ). Flush canvas buffers. ; Definition at line 1145 of file TCanvas.cxx. ◆ ForceUpdate(). void TCanvas::ForceUpdate ; (; ). Force canvas update. ; Definition at line 1177 of file TCanvas.cxx. ◆ GetAutoExec(). Bool_t TCanvas::GetAutoExec ; (; ); const. inline . Definition at line 152 of file TCanvas.h. ◆ GetCanvasID(). Int_t TCanvas::GetCanvasID ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 157 of file TCanvas.h. ◆ GetCanvasImp(). TCanvasImp * TCanvas::GetCanvasImp ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 158 of file TCanvas.h. ◆ GetCanvasPainter(). TVirtualPadPainter * TCanvas::GetCanvasPainter ; (; ). Access and (probably) creation of pad painter. ; Definition at line 2616 of file TCanvas.cxx. ◆ GetCanvasPar(). virtual void TCanva",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCanvas.html:73173,Feedback,FeedbackMode,73173,doc/master/classTCanvas.html,https://root.cern,https://root.cern/doc/master/classTCanvas.html,1,['Feedback'],['FeedbackMode']
Usability," Interface for tools setting limits (producing confidence intervals); RooStats::NumEventsTestStat ; RooStats::NumberCountingPdfFactory A factory specific to common number counting problems.; RooStats::NumberCountingUtils ; RooStats::PointSetInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::ProfileLikelihoodCalculator A concrete implementation of CombinedCalculator that uses the ProfileLikelihood ratio.; RooStats::ProfileLikelihoodTestStat implements the profile likelihood ratio as a test statistic to be used with several tools; RooStats::ProposalFunction Interface for the proposal function used with Markov Chain Monte Carlo; RooStats::SPlot Class used for making sPlots; RooStats::SamplingDistPlot Class containing the results of the HybridCalculator; RooStats::SamplingDistribution Class containing the results of the HybridCalculator; RooStats::SamplingSummary A summary of acceptance regions for confidence belt; RooStats::SamplingSummaryLookup A simple class used by ConfidenceBelt; RooStats::SimpleInterval Concrete implementation of ConfInterval for simple 1-D intervals in the form [a,b]; RooStats::TestStatSampler Interface for tools setting limits (producing confidence intervals); RooStats::TestStatistic Interface for tools setting limits (producing confidence intervals); RooStats::ToyMCSampler A simple implementation of the TestStatSampler interface; RooStats::UniformProposal A concrete implementation of ProposalFunction, that uniformly samples the parameter space.; RooStreamParser Utility class that parses iostream data into tokens; RooStringVar String-valued variable ; RooSuperCategory Lvalue product operator for catategory lvalues; RooTFnBinding RooAbsReal binding to ROOT TF[123] functions; RooTFnPdfBinding RooAbsPdf binding to ROOT TF[123] functions; RooTFoamBinding Function binding to RooAbsReal object; RooTObjWrap Container class for Int_t; RooTable Abstract interface for tables; RooThreshEntry Utility class",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html524/ClassIndex.html:44300,simpl,simple,44300,root/html524/ClassIndex.html,https://root.cern,https://root.cern/root/html524/ClassIndex.html,4,"['Simpl', 'simpl']","['SimpleInterval', 'simple']"
Usability," IsAssembly() constDefinition TGeoShape.h:129; TGeoShape::TestShapeBitBool_t TestShapeBit(UInt_t f) constDefinition TGeoShape.h:167; TGeoVolumeAssemblyVolume assemblies.Definition TGeoVolume.h:316; TGeoVolumeAssembly::MakeAssemblyFromVolumestatic TGeoVolumeAssembly * MakeAssemblyFromVolume(TGeoVolume *vol)Make a clone of volume VOL but which is an assembly.Definition TGeoVolume.cxx:3088; TGeoVolumeAssembly::~TGeoVolumeAssembly~TGeoVolumeAssembly() overrideDestructor. The assembly is owner of its ""shape"".Definition TGeoVolume.cxx:2968; TGeoVolumeAssembly::GetNextNodeIndexInt_t GetNextNodeIndex() const overrideDefinition TGeoVolume.cxx:2922; TGeoVolumeAssembly::CreateThreadDatavoid CreateThreadData(Int_t nthreads) overrideDefinition TGeoVolume.cxx:2899; TGeoVolumeAssembly::AddNodeTGeoNode * AddNode(TGeoVolume *vol, Int_t copy_no, TGeoMatrix *mat=nullptr, Option_t *option="""") overrideAdd a component to the assembly.Definition TGeoVolume.cxx:2978; TGeoVolumeAssembly::ClearThreadDatavoid ClearThreadData() const overrideDefinition TGeoVolume.cxx:2884; TGeoVolumeAssembly::CloneVolumeTGeoVolume * CloneVolume() const overrideClone this volume.Definition TGeoVolume.cxx:3001; TGeoVolumeAssembly::AddNodeOverlapvoid AddNodeOverlap(TGeoVolume *vol, Int_t copy_no, TGeoMatrix *mat, Option_t *option) overrideAdd an overlapping node - not allowed for assemblies.Definition TGeoVolume.cxx:2989; TGeoVolumeAssembly::fThreadDatastd::vector< ThreadData_t * > fThreadDataDefinition TGeoVolume.h:331; TGeoVolumeAssembly::fMutexstd::mutex fMutexThread vector size.Definition TGeoVolume.h:333; TGeoVolumeAssembly::fThreadSizeInt_t fThreadSizeThread specific data vector.Definition TGeoVolume.h:332; TGeoVolumeAssembly::SetNextNodeIndexvoid SetNextNodeIndex(Int_t index)Definition TGeoVolume.cxx:2936; TGeoVolumeAssembly::GetCurrentNodeIndexInt_t GetCurrentNodeIndex() const overrideDefinition TGeoVolume.cxx:2915; TGeoVolumeAssembly::SetCurrentNodeIndexvoid SetCurrentNodeIndex(Int_t index)Definition TGe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoVolume_8cxx_source.html:134007,Clear,ClearThreadDatavoid,134007,doc/master/TGeoVolume_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoVolume_8cxx_source.html,2,['Clear'],"['ClearThreadData', 'ClearThreadDatavoid']"
Usability," Jul 2002.; 886/// see for instance: http://root.cern/root/roottalk/roottalk02/2916.html; 887 ; 888Double_t TProfile::GetBinError(Int_t bin) const; 889{; 890 return TProfileHelper::GetBinError((TProfile*)this, bin);; 891}; 892 ; 893////////////////////////////////////////////////////////////////////////////////; 894/// Return option to compute profile errors; 895 ; 896Option_t *TProfile::GetErrorOption() const; 897{; 898 if (fErrorMode == kERRORSPREAD) return ""s"";; 899 if (fErrorMode == kERRORSPREADI) return ""i"";; 900 if (fErrorMode == kERRORSPREADG) return ""g"";; 901 return """";; 902}; 903 ; 904////////////////////////////////////////////////////////////////////////////////; 905/// fill the array stats from the contents of this profile.; 906///; 907/// The array stats must be correctly dimensioned in the calling program.; 908///; 909/// - stats[0] = sumw; 910/// - stats[1] = sumw2; 911/// - stats[2] = sumwx; 912/// - stats[3] = sumwx2; 913/// - stats[4] = sumwy; 914/// - stats[5] = sumwy2; 915///; 916/// If no axis-subrange is specified (via TAxis::SetRange), the array stats; 917/// is simply a copy of the statistics quantities computed at filling time.; 918/// If a sub-range is specified, the function recomputes these quantities; 919/// from the bin contents in the current axis range.; 920 ; 921void TProfile::GetStats(Double_t *stats) const; 922{; 923 if (fBuffer) ((TProfile*)this)->BufferEmpty();; 924 ; 925 // Loop on bins; 926 Int_t bin, binx;; 927 // identify the case of labels with extension of axis range; 928 // in this case the statistics in x does not make any sense; 929 Bool_t labelHist = ((const_cast<TAxis&>(fXaxis)).GetLabels() && fXaxis.CanExtend() );; 930 ; 931 if ( (fTsumw == 0 /* && fEntries > 0 */) || fXaxis.TestBit(TAxis::kAxisRange) ) {; 932 for (bin=0;bin<6;bin++) stats[bin] = 0;; 933 if (!fBinEntries.fArray) return;; 934 Int_t firstBinX = fXaxis.GetFirst();; 935 Int_t lastBinX = fXaxis.GetLast();; 936 // include underflow/overflow if TH1::StatOverf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:33824,simpl,simply,33824,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,1,['simpl'],['simply']
Usability," Layer_t * GetLayerAt (size_t i) const;  ; std::vector< Layer_t * > & GetLayers ();  ; const std::vector< Layer_t * > & GetLayers () const;  ; ELossFunction GetLossFunction () const;  ; size_t GetOutputWidth () const;  ; ERegularization GetRegularization () const;  ; Scalar_t GetWeightDecay () const;  ; void Initialize ();  DAE functions. ;  ; bool IsTraining () const;  ; Scalar_t Loss (const Matrix_t &groundTruth, const Matrix_t &weights, bool includeRegularization=true) const;  Function for evaluating the loss, based on the activations stored in the last layer. ;  ; Scalar_t Loss (Tensor_t &input, const Matrix_t &groundTruth, const Matrix_t &weights, bool inTraining=false, bool includeRegularization=true);  Function for evaluating the loss, based on the propagation of the given input. ;  ; void Prediction (Matrix_t &predictions, EOutputFunction f) const;  Prediction based on activations stored in the last layer. ;  ; void Prediction (Matrix_t &predictions, Tensor_t &input, EOutputFunction f);  Prediction for the given inputs, based on what network learned. ;  ; void Print () const;  Print the Deep Net Info. ;  ; Scalar_t RegularizationTerm () const;  Function for computing the regularizaton term to be added to the loss function .  ; void ResetTraining ();  Function that reset some training flags after looping all the events but not the weights. ;  ; void SetBatchDepth (size_t batchDepth);  ; void SetBatchHeight (size_t batchHeight);  ; void SetBatchSize (size_t batchSize);  Setters. ;  ; void SetBatchWidth (size_t batchWidth);  ; void SetDropoutProbabilities (const std::vector< Double_t > &probabilities);  ; void SetInitialization (EInitialization I);  ; void SetInputDepth (size_t inputDepth);  ; void SetInputHeight (size_t inputHeight);  ; void SetInputWidth (size_t inputWidth);  ; void SetLossFunction (ELossFunction J);  ; void SetRegularization (ERegularization R);  ; void SetWeightDecay (Scalar_t weightDecay);  ; void Update (Scalar_t learningRate);  Function t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TDeepNet.html:6725,learn,learned,6725,doc/master/classTMVA_1_1DNN_1_1TDeepNet.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TDeepNet.html,1,['learn'],['learned']
Usability," Libraries. Function documentation; TRefTable(); Default constructor for I/O. TRefTable(TObject* owner, Int_t size); Create a TRefTable with initial size. ~TRefTable(); Destructor. Int_t Add(Int_t uid, TProcessID* context = 0); Add a new uid to the table.; we add a new pair (uid,fparent) to the map; This function is called by TObject::Streamer or TStreamerInfo::WriteBuffer. Int_t AddInternalIdxForPID(TProcessID* procid); Add the internal index for fProcessIDs, fAllocSize, etc given a PID. void Clear(Option_t* = """"); Clear all entries in the table. Int_t Expand(Int_t pid, Int_t newsize); Expand fParentIDs to newsize for ProcessID pid. Int_t ExpandForIID(Int_t iid, Int_t newsize); Expand fParentIDs to newsize for internel ProcessID index iid. void ExpandPIDs(Int_t numpids); Expand the arrays of managed PIDs. void FillBuffer(TBuffer& b); Fill buffer b with the fN elements in fParentdIDs.; This function is called by TBranchRef::FillLeaves. Int_t FindPIDGUID(const char* guid) const; Get fProcessGUIDs' index of the TProcessID with GUID guid. TObject * GetParent(Int_t uid, TProcessID* context = 0) const; Return object corresponding to uid. Int_t GetInternalIdxForPID(TProcessID* procid) const; Get the index for fProcessIDs, fAllocSize, etc given a PID.; Uses fMapPIDtoInternal and the pid's GUID / fProcessGUID. Int_t GetInternalIdxForPID(Int_t pid) const; Get the index for fProcessIDs, fAllocSize, etc given a PID.; Uses fMapPIDtoInternal and the pid's GUID / fProcessGUID. TRefTable * GetRefTable(); Static function returning the current TRefTable. Bool_t Notify(); This function is called by TRef::Streamer or TStreamerInfo::ReadBuffer; when reading a reference.; This function, in turns, notifies the TRefTable owner for action.; eg, when the owner is a TBranchRef, TBranchRef::Notify is called; to read the branch containing the referenced object. void ReadBuffer(TBuffer& b); Fill buffer b with the fN elements in fParentdIDs.; This function is called by TBranchRef::ReadLeaves. vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRefTable.html:9171,guid,guid,9171,root/html528/TRefTable.html,https://root.cern,https://root.cern/root/html528/TRefTable.html,12,"['GUID', 'guid']","['GUID', 'guid']"
Usability," Libraries; RBrowser improvements. central factory methods to handle browsing, editing and drawing of different classes; simple possibility to extend RBrowser on user-defined classes; support of web-based geometry viewer; better support of TTree drawing; server-side handling of code editor and image viewer widgets; rbrowser content is fully recovered when web-browser is reloaded; load of widgets code only when really required (shorter startup time for RBrowser). JavaScript ROOT; Major JSROOT update to version 6. update all used libraries d3.js, three.js, MathJax.js, openui5; change to Promise based interface for all async methods, remove call-back arguments; change scripts names, core scripts name now JSRoot.core.js; unify function/methods naming conventions, many changes in method names; provide central code loader via JSROOT.require, supporting 4 different loading engines; many nice features and many bug fixes; see JSROOT v6 release notes. Class Reference Guide; One can now select a class’s documentation for a specific version. If a class does not exist in a given version, that version is grayed out, see for instance the documentation for ROOT::Experimental::RNTupleReader.; Build, Configuration and Testing Infrastructure. a new cmake variable, CMAKE_INSTALL_PYTHONDIR, has been added: it allows customization of the installation directory of ROOT’s python modules; the developer build option asserts is introduced to enable/disable asserts via the NDEBUG C/CXX flag. Asserts are always enabled for CMAKE_BUILD_TYPE=Debug and dev=ON. The previous behavior of the builds set via the CMAKE_BUILD_TYPE variable has not changed.; CMAKE_CXX_STANDARD, i.e. the C++ standard ROOT is built with, now defaults to the compiler default (or C++11 if the compiler default is older than that) rather than always defaulting to C++11. In turn this means that v6.24 is the first ROOT release for which ROOT’s pre-compiled binaries are not compiled with C++11 but with the default standard in use ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v624/release-notes.html:29077,Guid,Guide,29077,doc/v624/release-notes.html,https://root.cern,https://root.cern/doc/v624/release-notes.html,1,['Guid'],['Guide']
Usability," List of all members ; TMatrixTBase< Element > Class Template ReferenceabstractMath » Matrix Linear Algebra. ; template<class Element>; class TMatrixTBase< Element >TMatrixTBase. ; Template of base class in the linear algebra package.; See the Matrix Linear Algebra page for the documentation of the linear algebra package; Matrix properties are stored here, however the data storage is part of the derived classes ; Definition at line 84 of file TMatrixTBase.h. Public Member Functions;  TMatrixTBase ();  ;  ~TMatrixTBase () override;  ; virtual TMatrixTBase< Element > & Abs ();  Take an absolute value of a matrix, i.e. apply Abs() to each element. ;  ; virtual TMatrixTBase< Element > & Apply (const TElementActionT< Element > &action);  Apply action to each matrix element. ;  ; virtual TMatrixTBase< Element > & Apply (const TElementPosActionT< Element > &action);  Apply action to each element of the matrix. ;  ; TClass * Class ();  ; void Clear (Option_t *option="""") override=0;  ; virtual Element ColNorm () const;  Column matrix norm, MAX{ SUM{ |M(i,j)|, over i}, over j}. ;  ; virtual Double_t Determinant () const;  ; virtual void Determinant (Double_t &d1, Double_t &d2) const;  ; void Draw (Option_t *option="""") override;  Draw this matrix The histogram is named ""TMatrixT"" by default and no title. ;  ; virtual Element E2Norm () const;  Square of the Euclidean norm, SUM{ m(i,j)^2 }. ;  ; virtual void ExtractRow (Int_t row, Int_t col, Element *v, Int_t n=-1) const;  Store in array v, n matrix elements of row rown starting at column coln. ;  ; virtual const Int_t * GetColIndexArray () const =0;  ; virtual Int_t * GetColIndexArray ()=0;  ; Int_t GetColLwb () const;  ; Int_t GetColUpb () const;  ; virtual void GetMatrix2Array (Element *data, Option_t *option="""") const;  Copy matrix data to array . ;  ; virtual const Element * GetMatrixArray () const =0;  ; virtual Element * GetMatrixArray ()=0;  ; Int_t GetNcols () const;  ; Int_t GetNoElements () const;  ; Int_t GetNrows ()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMatrixTBase.html:1279,Clear,Clear,1279,doc/master/classTMatrixTBase.html,https://root.cern,https://root.cern/doc/master/classTMatrixTBase.html,1,['Clear'],['Clear']
Usability," List of all members ; TWebPainting Class ReferenceWeb Display » ROOT 6 Web Display. ; Object used to store paint operations and deliver them to JSROOT. ; Definition at line 25 of file TWebPainting.h. Public Member Functions;  TWebPainting ();  Constructor. ;  ;  ~TWebPainting () override=default;  ; void AddColor (Int_t indx, TColor *col);  Add custom color to operations. ;  ; void AddFillAttr (const TAttFill &attr);  Store fill attributes If attributes were not changed - ignore operation. ;  ; void AddLineAttr (const TAttLine &attr);  Store line attributes If attributes were not changed - ignore operation. ;  ; void AddMarkerAttr (const TAttMarker &attr);  Store marker attributes If attributes were not changed - ignore operation. ;  ; void AddOper (const std::string &oper);  Add next custom operator to painting Operations are separated by semicolons Following operations are supported: t - text h - text coded into simple hex r - rectangle b - rectangular fill region l - polyline f - poly fill region m - poly marker z - line attributes y - fill attributes x - marker attributes o - text attributes After operation code optional arguments can be append like length of operation or coded text Each operation may use data from binary float buffer. ;  ; void AddTextAttr (const TAttText &attr);  Store text attributes If attributes were not changed - ignore operation. ;  ; void FixSize ();  ; TClass * IsA () const override;  ; Bool_t IsEmpty () const;  ; Float_t * Reserve (Int_t sz);  Reserve place in the float buffer Returns pointer on first element in reserved area. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPainting.html:1155,simpl,simple,1155,doc/master/classTWebPainting.html,https://root.cern,https://root.cern/doc/master/classTWebPainting.html,1,['simpl'],['simple']
Usability," List of write action resulting from the compilation.; static atomic<Int_t>fgCountNumber of TStreamerInfo instances. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TStreamerInfo(); Default ctor. TStreamerInfo(TClass* cl); Create a TStreamerInfo object. ~TStreamerInfo(); TStreamerInfo dtor. void Build(); Build the I/O data structure for the current class version.; A list of TStreamerElement derived classes is built by scanning; one by one the list of data members of the analyzed class. void BuildCheck(TFile* file = 0); Check if built and consistent with the class dictionary.; This method is called by TFile::ReadStreamerInfo. void BuildEmulated(TFile* file); Create an Emulation TStreamerInfo object. Bool_t BuildFor(const TClass* cl). Check if we can build this for foreign class - do we have some rules; to do that. void BuildOld(); rebuild the TStreamerInfo structure. void Clear(Option_t* ); If opt cointains 'built', reset this StreamerInfo as if Build or BuildOld; was never called on it (usefull to force their re-running). void CallShowMembers(const void* obj, TMemberInspector& insp, Bool_t isTransient) const; Emulated a call ShowMembers() on the obj of this class type, passing insp and parent. TObject * Clone(const char* newname = """") const; Make a clone of an object using the Streamer facility.; If newname is specified, this will be the name of the new object. Bool_t CompareContent(TClass* cl, TVirtualStreamerInfo* info, Bool_t warn, Bool_t complete, TFile* file); Return True if the current StreamerInfo in cl or info is equivalent to this TStreamerInfo.; 'Equivalent' means the same number of persistent data member which the same actual C++ type and; the same name.; if 'warn' is true, Warning message are printed to explicit the differences.; if 'complete' is false, stop at the first error, otherwise continue until all members have been checked. void ComputeSize(); Compute total size of all persistent elements of the class. v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TStreamerInfo.html:22651,Clear,Clear,22651,root/html604/TStreamerInfo.html,https://root.cern,https://root.cern/root/html604/TStreamerInfo.html,1,['Clear'],['Clear']
Usability," Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Protected Attributes |; List of all members ; ROOT::Math::Minimizer Class ReferenceabstractMath » MathCore | Math » MathMore » Numerical Algorithms » Multi-dimensional Minimization. ; Abstract Minimizer class, defining the interface for the various minimizer (like Minuit2, Minuit, GSL, etc..) in ROOT. ; Plug-in's exist in ROOT to be able to instantiate the derived classes without linking the library using the static function ROOT::Math::Factory::CreateMinimizer.; Here is the list of all possible minimizers and their respective methods (algorithms) that can be instantiated: The name shown below can be used to create them. More documentation can be found in the respective class. Minuit (class TMinuitMinimizer); Migrad (default); MigradImproved (Migrad with adding a method to improve minimization when ends-up in a local minimum, see par. 6.3 of Minuit tutorial on Function Minimization); Simplex; Minimize (a combination of Simplex + Migrad); Minimize; Scan; Seek. Minuit2 (class ROOT::Minuit2::Minuit2Minimizer); Migrad (default); Simplex; Minimize; Fumili (Fumili2); Scan. Fumili (class TFumiliMinimizer); GSLMultiMin (class ROOT::Math::GSLMinimizer) available when ROOT is built with mathmore support; BFGS2 (Default); BFGS; ConjugateFR; ConjugatePR; SteepestDescent. GSLMultiFit (class ROOT::Math::GSLNLMinimizer) available when ROOT is built mathmore support; GSLSimAn (class ROOT::Math::GSLSimAnMinimizer) available when ROOT is built with mathmore support; Genetic (class ROOT::Math::GeneticMinimizer); RMinimizer (class ROOT::Math::RMinimizer) available when ROOT is built with r support; BFGS (default); L-BFGS-S; Nelder-Mead; CG; and more methods, see the Details in the documentation of the function optimix of the optmix R package. The Minimizer class provides the interface to perform the minimization including; In addition to provide the API for function minimization (via ROOT::Math::Mi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html:1075,Simpl,Simplex,1075,doc/master/classROOT_1_1Math_1_1Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html,2,['Simpl'],['Simplex']
Usability," Long64_t TNDArray::GetBin ; (; const Int_t * ; idx); const. inline . Definition at line 72 of file TNDArray.h. ◆ GetCellSize(). Long64_t TNDArray::GetCellSize ; (; Int_t ; dim); const. inline . Definition at line 70 of file TNDArray.h. ◆ GetNbins(). Long64_t TNDArray::GetNbins ; (; ); const. inline . Definition at line 69 of file TNDArray.h. ◆ GetNdimensions(). Int_t TNDArray::GetNdimensions ; (; ); const. inline . Definition at line 68 of file TNDArray.h. ◆ Init(). virtual void TNDArray::Init ; (; Int_t ; ndim, . const Int_t * ; nbins, . bool ; addOverflow = false . ). inlinevirtual . Reimplemented in TNDArrayT< T >, and TNDArrayT< double >.; Definition at line 55 of file TNDArray.h. ◆ IsA(). TClass * TNDArray::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TNDArrayT< T >, and TNDArrayT< double >.; Definition at line 87 of file TNDArray.h. ◆ Reset(). virtual void TNDArray::Reset ; (; Option_t * ; option = """"). pure virtual . Implemented in TNDArrayT< T >, and TNDArrayT< double >. ◆ SetAsDouble(). virtual void TNDArray::SetAsDouble ; (; ULong64_t ; linidx, . Double_t ; value . ). pure virtual . Implemented in TNDArrayT< T >, and TNDArrayT< double >. ◆ Streamer(). void TNDArray::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TNDArrayT< T >, and TNDArrayT< double >. ◆ StreamerNVirtual(). void TNDArray::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 87 of file TNDArray.h. Member Data Documentation. ◆ fSizes. std::vector<Long64_t> TNDArray::fSizes. protected . bin count ; Definition at line 86 of file TNDArray.h. Libraries for TNDArray:. [legend]; The documentation for this class was generated from the following file:; hist/hist/inc/TNDArray.h. TNDArray. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:01 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNDArray.html:14010,Guid,Guide,14010,doc/master/classTNDArray.html,https://root.cern,https://root.cern/doc/master/classTNDArray.html,1,['Guid'],['Guide']
Usability," Long64_t nent, Option_t *o="""") override;  Generic (non-data based) selector processing: the Process() method of the specified selector is called 'n' times. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TProof;  TProof (const char *masterurl, const char *conffile=kPROOF_ConfFile, const char *confdir=kPROOF_ConfDir, Int_t loglevel=0, const char *alias=0, TProofMgr *mgr=0);  Create a PROOF environment. ;  ;  ~TProof () override;  Clean up PROOF environment. ;  ; Int_t ActivateWorker (const char *ord, Bool_t save=kTRUE);  Make sure that the worker identified by the ordinal number 'ord' is in the active list. ;  ; void AddChain (TChain *chain);  Add chain to data set. ;  ; Int_t AddDynamicPath (const char *libpath, Bool_t onClient=kFALSE, TList *wrks=0, Bool_t doCollect=kTRUE);  Add 'libpath' to the lib path search. ;  ; void AddFeedback (const char *name);  Add object to feedback list. ;  ; Int_t AddIncludePath (const char *incpath, Bool_t onClient=kFALSE, TList *wrks=0, Bool_t doCollect=kTRUE);  Add 'incpath' to the inc path search. ;  ; void AddInput (TObject *obj);  Add objects that might be needed during the processing of the selector (see Process()). ;  ; void AddInputData (TObject *obj, Bool_t push=kFALSE);  Add data objects that might be needed during the processing of the selector (see Process()). ;  ; Int_t Archive (const char *queryref, const char *url=0);  Send archive request for the query specified by ref. ;  ; Int_t Archive (Int_t query, const char *url);  Send archive request for the qry-th query in fQueries. ;  ; void Browse (TBrowser *b) override;  Build the PROOF's structure in the browser. ;  ; virtual Bool_t CancelStagingDataSet (const char *dataset);  Cancels a dataset staging request. ;  ; void cd (Int_t id=-1);  Set session with 'id' the default one. ;  ; Int_t CleanupSession (const char *sessiontag);  Send ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofSuperMaster.html:3281,feedback,feedback,3281,doc/master/classTProofSuperMaster.html,https://root.cern,https://root.cern/doc/master/classTProofSuperMaster.html,1,['feedback'],['feedback']
Usability," Long64_t ; major, . Long64_t ; minor . ); const. pure virtual . Implemented in TChainIndex, and TTreeIndex. ◆ GetMajorName(). virtual const char * TVirtualIndex::GetMajorName ; (; ); const. pure virtual . Implemented in TChainIndex, and TTreeIndex. ◆ GetMinorName(). virtual const char * TVirtualIndex::GetMinorName ; (; ); const. pure virtual . Implemented in TChainIndex, and TTreeIndex. ◆ GetN(). virtual Long64_t TVirtualIndex::GetN ; (; ); const. pure virtual . Implemented in TChainIndex, and TTreeIndex. ◆ GetTree(). virtual TTree * TVirtualIndex::GetTree ; (; ); const. inlinevirtual . Definition at line 46 of file TVirtualIndex.h. ◆ IsA(). TClass * TVirtualIndex::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 50 of file TVirtualIndex.h. ◆ IsValidFor(). virtual bool TVirtualIndex::IsValidFor ; (; const TTree * ; parent). pure virtual . Implemented in TChainIndex, and TTreeIndex. ◆ SetTree(). virtual void TVirtualIndex::SetTree ; (; TTree * ; T). pure virtual . Implemented in TChainIndex, and TTreeIndex. ◆ Streamer(). void TVirtualIndex::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed. ◆ StreamerNVirtual(). void TVirtualIndex::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 50 of file TVirtualIndex.h. ◆ UpdateFormulaLeaves(). virtual void TVirtualIndex::UpdateFormulaLeaves ; (; const TTree * ; parent). pure virtual . Implemented in TChainIndex, and TTreeIndex. Member Data Documentation. ◆ fTree. TTree* TVirtualIndex::fTree. protected . Definition at line 33 of file TVirtualIndex.h. Libraries for TVirtualIndex:. [legend]; The documentation for this class was generated from the following files:; tree/tree/inc/TVirtualIndex.h; tree/tree/src/TVirtualIndex.cxx. TVirtualIndex. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:45 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualIndex.html:15351,Guid,Guide,15351,doc/master/classTVirtualIndex.html,https://root.cern,https://root.cern/doc/master/classTVirtualIndex.html,1,['Guid'],['Guide']
Usability," Look up user specified normalization set for given input PDF component. RooArgSet* getConstraints(const RooArgSet& observables, RooArgSet& constrainedParams, Bool_t stripDisconnected) const; Return all parameter constraint p.d.f.s on parameters listed in constrainedParams; The observables set is required to distinguish unambiguously p.d.f in terms; of observables and parameters, which are not constraints, and p.d.fs in terms; of parameters only, which can serve as constraints p.d.f.s. void getParametersHook(const RooArgSet* , RooArgSet* , Bool_t stripDisconnected) const. void selectNormalizationRange(const char* rangeName = 0, Bool_t force = kFALSE); Interface function used by test statistics to freeze choice of range; for interpretation of conditional product terms. void fixRefRange(const char* rangeName). std::list<Double_t>* plotSamplingHint(RooAbsRealLValue& obs, Double_t xlo, Double_t xhi) const; Forward the plot sampling hint from the p.d.f. that defines the observable obs. void printMetaArgs(ostream& os) const; Customized printing of arguments of a RooProdPdf to more intuitively reflect the contents of the; product operator construction. Bool_t redirectServersHook(const RooAbsCollection& , Bool_t , Bool_t , Bool_t ); Implement support for node removal. TObject* clone(const char* newname) const; { return new RooProdPdf(*this,newname) ; }. Bool_t selfNormalized() const; { return _selfNorm ; }. Double_t expectedEvents(const RooArgSet* nset) const. const RooArgList& pdfList() const; { return _pdfList ; }. void setSelfNormalized(Bool_t flag); { _selfNorm = flag ; }. void setDefNormSet(const RooArgSet& nset); { _defNormSet.removeAll() ; _defNormSet.addClone(nset) ; }. void useDefaultGen(Bool_t flag = kTRUE); { _useDefaultGen = flag ; }. » Last changed: Mon Jul 4 15:23:43 2011 » Last generated: 2011-07-04 15:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooProdPdf.html:55679,intuit,intuitively,55679,root/html530/RooProdPdf.html,https://root.cern,https://root.cern/root/html530/RooProdPdf.html,1,['intuit'],['intuitively']
Usability," Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Support Mailing List mode on Discourse. Here is how to enable the ""mailing list mode"" feature on our Discourse forum. If you visit your profile, in Preferences - Emails, you will see:. By ticking ""Enable mailing list mode"", you will automatically receive an email every time a post is made on the forum.; Note: You can reply by email, and you can also mute a topic or category, so it will be excluded (something that regular mailing lists don't do). Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. © Copyright CERN 2014-18. All rights reserved. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/mailing-list-mode-discourse.html:2401,Guid,Guides,2401,d/mailing-list-mode-discourse.html,https://root.cern,https://root.cern/d/mailing-list-mode-discourse.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability," Matrix_t > > & GetFirstMomentBiases ();  ; std::vector< Matrix_t > & GetFirstMomentBiasesAt (size_t i);  ; std::vector< std::vector< Matrix_t > > & GetFirstMomentWeights ();  ; std::vector< Matrix_t > & GetFirstMomentWeightsAt (size_t i);  ; std::vector< std::vector< Matrix_t > > & GetSecondMomentBiases ();  ; std::vector< Matrix_t > & GetSecondMomentBiasesAt (size_t i);  ; std::vector< std::vector< Matrix_t > > & GetSecondMomentWeights ();  ; std::vector< Matrix_t > & GetSecondMomentWeightsAt (size_t i);  ;  Public Member Functions inherited from TMVA::DNN::VOptimizer< Architecture_t, Layer_t, DeepNet_t >;  VOptimizer (Scalar_t learningRate, DeepNet_t &deepNet);  Constructor. ;  ; virtual ~VOptimizer ()=default;  Virtual Destructor. ;  ; size_t GetGlobalStep () const;  ; Layer_t * GetLayerAt (size_t i);  ; std::vector< Layer_t * > & GetLayers ();  ; Scalar_t GetLearningRate () const;  Getters. ;  ; void IncrementGlobalStep ();  Increments the global step. ;  ; void SetLearningRate (size_t learningRate);  Setters. ;  ; void Step ();  Performs one step of optimization. ;  . Protected Member Functions; void UpdateBiases (size_t layerIndex, std::vector< Matrix_t > &biases, const std::vector< Matrix_t > &biasGradients);  Update the biases, given the current bias gradients. ;  ; void UpdateWeights (size_t layerIndex, std::vector< Matrix_t > &weights, const std::vector< Matrix_t > &weightGradients);  Update the weights, given the current weight gradients. ;  . Protected Attributes; Scalar_t fBeta1;  The Beta1 constant used by the optimizer. ;  ; Scalar_t fBeta2;  The Beta2 constant used by the optimizer. ;  ; Scalar_t fEpsilon;  The Smoothing term used to avoid division by zero. ;  ; std::vector< std::vector< Matrix_t > > fFirstMomentBiases;  The decaying average of the first moment of the past bias gradients associated with the deep net. ;  ; std::vector< std::vector< Matrix_t > > fFirstMomentWeights;  The decaying average of the first moment of the past weight gradients",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TAdam.html:2369,learn,learningRate,2369,doc/master/classTMVA_1_1DNN_1_1TAdam.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TAdam.html,1,['learn'],['learningRate']
Usability," Meet a TTree | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses » Introductory Tutorials Meet a TTree. We have created an example ROOT file containing a TTree: a typical data container used e.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/meet-ttree.html:1002,Guid,Guides,1002,d/meet-ttree.html,https://root.cern,https://root.cern/d/meet-ttree.html,1,['Guid'],['Guides']
Usability," Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development Code Owners. ROOT consists of several loosely coupled but consistently designed parts. The ""code owners"" of these parts are experts that review pull requests and guide these packages over a couple of years.; An up-to-date, detailed mapping of code versus owners can be found at https://github.com/root-project/root/blob/master/.github/CODEOWNERS. The long-term, coarse list can be found below:; Module; Code Owner; I/O; Philippe Canal (Fermilab);  •  Compression; Oksana Shadura (Nebraska-Lincoln); Math, Statistics, Machine Learning; Lorenzo Moneta (CERN);  •  RooFit; Wouter Verkerke (NIKHEF), Stephan Hageboeck (CERN);  •  New histograms (RHist); Hadrien Grasland (LAL), Axel Naumann (CERN); Graphics; Olivier Couet (CERN), Sergey Linev (GSI); RDataFrame; Enrico Guiraud (CERN); Web-GUI, http Server; Sergey Linev (GSI), Bertrand Bellenot (CERN); Event Display; Matevz Tadel (UCSD), Alja Mrak-Tadel (UCSD); PyROOT; Enric Tejedor (CERN); cling; Axel Naumann (CERN); Build System; Oksana Shadura (Nebraska-Lincoln); C++ Modules; Vassil Vassilev (Princeton), Oksana Shadura (Nebraska-Lincoln); Documentation; Olivier Couet (CERN). Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. © Copyright CERN 2014-18. All rights reserved. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/code-owners.html:3075,Guid,Guides,3075,d/code-owners.html,https://root.cern,https://root.cern/d/code-owners.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability," Member Data Documentation. ◆ fBasicUrl. TString TWebFile::fBasicUrl. protected . Definition at line 51 of file TWebFile.h. ◆ fBasicUrlOrg. TString TWebFile::fBasicUrlOrg. protected . Definition at line 53 of file TWebFile.h. ◆ fFullCache. void* TWebFile::fFullCache. protected . Definition at line 54 of file TWebFile.h. ◆ fFullCacheSize. Long64_t TWebFile::fFullCacheSize. protected . complete content of the file, some http server may return complete content ; Definition at line 55 of file TWebFile.h. ◆ fgMaxFullCacheSize. Long64_t TWebFile::fgMaxFullCacheSize = 500000000. staticprotected . Definition at line 58 of file TWebFile.h. ◆ fgProxy. TUrl TWebFile::fgProxy. staticprotected . size of the cached content ; Definition at line 57 of file TWebFile.h. ◆ fHasModRoot. Bool_t TWebFile::fHasModRoot. protected . Definition at line 45 of file TWebFile.h. ◆ fHTTP11. Bool_t TWebFile::fHTTP11. protected . Definition at line 46 of file TWebFile.h. ◆ fMsgGetHead. TString TWebFile::fMsgGetHead. protected . Definition at line 50 of file TWebFile.h. ◆ fMsgReadBuffer. TString TWebFile::fMsgReadBuffer. protected . Definition at line 48 of file TWebFile.h. ◆ fMsgReadBuffer10. TString TWebFile::fMsgReadBuffer10. protected . Definition at line 49 of file TWebFile.h. ◆ fNoProxy. Bool_t TWebFile::fNoProxy. protected . Definition at line 47 of file TWebFile.h. ◆ fProxy. TUrl TWebFile::fProxy. protected . Definition at line 44 of file TWebFile.h. ◆ fSize. Long64_t TWebFile::fSize. mutableprotected . Definition at line 42 of file TWebFile.h. ◆ fSocket. TSocket* TWebFile::fSocket. protected . Definition at line 43 of file TWebFile.h. ◆ fUrlOrg. TUrl TWebFile::fUrlOrg. protected . Definition at line 52 of file TWebFile.h. Libraries for TWebFile:. [legend]; The documentation for this class was generated from the following files:; net/net/inc/TWebFile.h; net/net/src/TWebFile.cxx. TWebFile. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:47 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebFile.html:59103,Guid,Guide,59103,doc/master/classTWebFile.html,https://root.cern,https://root.cern/doc/master/classTWebFile.html,1,['Guid'],['Guide']
Usability," Members; Includes; Libraries. Function documentation; TTask(); Default constructor invoked when reading a TTask object from a file. TTask(const char* name, const char* title); Standard constructor. TTask& operator=(const TTask& tt); assignment operator (PLEASE DO NOT USE THIS IS WRONG). TTask(const TTask& task); Copy constructor. ~TTask(); Delete a task and its subtasks. void Abort(); Abort current tree of tasks.; After this call, the tree of tasks is ready to be executed again.; The application must take care of cleaning data structures created; by previous executions. void Browse(TBrowser* b); Browse the list of tasks.; It is recommended to add the top level task to the list of; ROOT browsables by:; gROOT->GetListOfBrowsables()->Add(myTopLevelTask). void CleanTasks(); Reset tasks state: breakpoints and execute flags; also invokes the Clear function of each task to clear all data; structures created by a previous execution of a task. void Clear(Option_t* option = """"); Recursively call the Clear function of this task and its subtasks.; The Clear function must be implemented for each derived class; to clear all data structures created by a previous execution of a task.; This function is automatically called by the CleanTasks function. void Continue(); Resume execution at the current break point. void Exec(Option_t* option); Dummy Execute.; This function must be redefined in the derived classes. void ExecuteTask(Option_t* option = ""0""); Execute main task and its subtasks.; When calling this function, the Exec function of the corresponding class; is invoked, then the list of its subtasks is executed calling recursively; all the subtasks, etc. The option parameter may be used to select different execution steps; within a task. This parameter is passed also to all the subtasks. void ExecuteTasks(Option_t* option); Execute all the subtasks of a task. void ls(Option_t* option = ""*"") const; List the tree of tasks.; Indentation is used to identify the task tree. void Add(TT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTask.html:9964,Clear,Clear,9964,root/html528/TTask.html,https://root.cern,https://root.cern/root/html528/TTask.html,8,['Clear'],['Clear']
Usability," Merged commands are executed in reverse order. const char * GetName() const; Returns the command name. Default name is ""ClassName::RedoName(args)""; If list of merged commands is not empty the name is; ""ClassName::RedoName(args):cname1:cname2 ..."". const char * GetTitle() const; Returns command description.; By default, ""ClassName::RedoName(args)_ClassName::UndoName(args)"". const char * GetRedoName() const; Returns the name of redo command. const char * GetUndoName() const; Returns the name of undo command. Long_t * GetRedoArgs() const; Returns a pointer to array of redo arguments. Long_t * GetUndoArgs() const; Returns a pointer to array of undo arguments. Int_t GetNRargs() const; Returns a number of redo arguments. Int_t GetNUargs() const; Returns a number of undo arguments. void * GetObject() const; Returns an object for which undo redo acions are applied. Int_t GetStatus() const; Returns a number of sequential undo or redo operations. Bool_t IsMacro() const; Returns kTRUE if neither redo nor undo action specified. Bool_t IsUndoing() const; Undo action is in progress. Bool_t IsRedoing() const; Redo action is in progress. Bool_t IsExecuting() const; Returns kTRUE if command execution is in progress. void SetName(const char* name); Sets name of the command. void SetTitle(const char* title); Sets description of the command. void ls(Option_t* option = """") const; ls this command and merged commands. void PrintCollectionHeader(Option_t* option) const; Print collection header. TQCommand & operator=(const TQCommand& ). TQConnection * GetRedo() const; { return fRedo; }. TQConnection * GetUndo() const; { return fUndo; }. void Add(TObject* obj, Option_t* opt). » Author: Valeriy Onuchin 04/27/2004 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-03-14 16:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TQCommand.html:24095,Undo,Undo,24095,root/html534/TQCommand.html,https://root.cern,https://root.cern/root/html534/TQCommand.html,1,['Undo'],['Undo']
Usability," Merged commands are executed in reverse order. const char * GetName() const; Returns the command name. Default name is ""ClassName::RedoName(args)""; If list of merged commands is not empty the name is; ""ClassName::RedoName(args):cname1:cname2 ..."". const char * GetTitle() const; Returns command description.; By default, ""ClassName::RedoName(args)_ClassName::UndoName(args)"". const char * GetRedoName() const; Returns the name of redo command. const char * GetUndoName() const; Returns the name of undo command. Long_t * GetRedoArgs() const; Returns a pointer to array of redo arguments. Long_t * GetUndoArgs() const; Returns a pointer to array of undo arguments. Int_t GetNRargs() const; Returns a number of redo arguments. Int_t GetNUargs() const; Returns a number of undo arguments. void * GetObject() const; Returns an object for which undo redo acions are applied. Int_t GetStatus() const; Returns a number of sequential undo or redo operations. Bool_t IsMacro() const; Returns kTRUE if neither redo nor undo action specified. Bool_t IsUndoing() const; Undo action is in progress. Bool_t IsRedoing() const; Redo action is in progress. Bool_t IsExecuting() const; Returns kTRUE if command execution is in progress. void SetName(const char* name); Sets name of the command. void SetTitle(const char* title); Sets description of the command. void ls(Option_t* option = """") const; ls this command and merged commands. void PrintCollectionHeader(Option_t* option) const; Print collection header. TQCommand & operator=(const TQCommand& ). TQConnection * GetRedo() const; { return fRedo; }. TQConnection * GetUndo() const; { return fUndo; }. void Add(TObject* obj, Option_t* opt). » Author: Valeriy Onuchin 04/27/2004 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-02 16:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TQCommand.html:24835,Undo,Undo,24835,root/html604/TQCommand.html,https://root.cern,https://root.cern/root/html604/TQCommand.html,1,['Undo'],['Undo']
Usability," Merged commands are executed in reverse order. const char * GetName() const; Returns the command name. Default name is ""ClassName::RedoName(args)""; If list of merged commands is not empty the name is; ""ClassName::RedoName(args):cname1:cname2 ..."". const char * GetTitle() const; Returns command description.; By default, ""ClassName::RedoName(args)_ClassName::UndoName(args)"". const char * GetRedoName() const; Returns the name of redo command. const char * GetUndoName() const; Returns the name of undo command. Long_t * GetRedoArgs() const; Returns a pointer to array of redo arguments. Long_t * GetUndoArgs() const; Returns a pointer to array of undo arguments. Int_t GetNRargs() const; Returns a number of redo arguments. Int_t GetNUargs() const; Returns a number of undo arguments. void * GetObject() const; Returns an object for which undo redo acions are applied. Int_t GetStatus() const; Returns a number of sequential undo or redo operations. Bool_t IsMacro() const; Returns kTRUE if neither redo nor undo action specified. Bool_t IsUndoing() const; Undo action is in progress. Bool_t IsRedoing() const; Redo action is in progress. Bool_t IsExecuting() const; Returns kTRUE if command execution is in progress. void SetName(const char* name); Sets name of the command. void SetTitle(const char* title); Sets description of the command. void ls(Option_t* option = """") const; ls this command and merged commands. void PrintCollectionHeader(Option_t* option) const; Print collection header. TQCommand & operator=(const TQCommand& ). TQConnection * GetRedo() const; { return fRedo; }. TQConnection * GetUndo() const; { return fUndo; }. void Add(TObject* obj, Option_t* opt). » Author: Valeriy Onuchin 04/27/2004 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-30 15:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TQCommand.html:24835,Undo,Undo,24835,root/html602/TQCommand.html,https://root.cern,https://root.cern/root/html602/TQCommand.html,1,['Undo'],['Undo']
Usability," Method fNext;  Container accessors: generic iteration: next. ;  ; TClass * fOnFileClass;  On file class. ;  ; Bool_t fPointers;  Flag to indicate if containee has pointers (key or value) ;  ; Proxies_t fProxyKept;  Optimization: Keep proxies once they were created. ;  ; Proxies_t fProxyList;  Stack of recursive proxies. ;  ; TObjArray * fReadMemberWise;  Array of bundle of TStreamerInfoActions to stream out (read) ;  ; Sizing_t fResize;  Container accessors: resize container. ;  ; Method fSize;  Container accessors: size of container. ;  ; Staged_t fStaged;  Optimization: Keep staged array once they were created. ;  ; int fSTL_type;  STL container type. ;  ; Info_t fTypeinfo;  Type information. ;  ; Value * fVal;  Descriptor of the Value_type. ;  ; int fValDiff;  Offset between two consecutive value_types (memory layout). ;  ; int fValOffset;  Offset from key to value (in maps) ;  ; std::atomic< Value * > fValue;  Descriptor of the container value type. ;  ; TStreamerInfoActions::TActionSequence * fWriteMemberWise;  ;  Protected Attributes inherited from TVirtualCollectionProxy; TClassRef fClass;  ; UInt_t fProperties;  . Inheritance diagram for TGenSetProxy:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGenSetProxy(). TGenSetProxy::TGenSetProxy ; (; const TGenCollectionProxy & ; c). inline . Definition at line 235 of file TGenCollectionProxy.cxx. ◆ ~TGenSetProxy(). TGenSetProxy::~TGenSetProxy ; (; ). inlineoverride . Definition at line 239 of file TGenCollectionProxy.cxx. Member Function Documentation. ◆ At(). void * TGenSetProxy::At ; (; UInt_t ; idx). inlineoverridevirtual . Return the address of the value at index 'idx'. ; Reimplemented from TGenCollectionProxy.; Definition at line 243 of file TGenCollectionProxy.cxx. io/io/src/TGenCollectionProxy.cxx. TGenSetProxy. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:01 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGenSetProxy.html:12654,Guid,Guide,12654,doc/master/classTGenSetProxy.html,https://root.cern,https://root.cern/doc/master/classTGenSetProxy.html,1,['Guid'],['Guide']
Usability," No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Static Private Attributes |; Friends |; List of all members ; TProofLite Class ReferencePROOF » PROOF kernel Libraries. ; This class starts a PROOF session on the local machine: no daemons, client and master merged, communications via UNIX-like sockets. ; By default the number of workers started is NumberOfCores+1; a different number can be forced on construction. ; Definition at line 40 of file TProofLite.h. Public Member Functions;  TProofLite (const char *masterurl, const char *conffile=kPROOF_ConfFile, const char *confdir=kPROOF_ConfDir, Int_t loglevel=0, const char *alias=0, TProofMgr *mgr=0);  Create a PROOF environment. ;  ;  ~TProofLite () override;  Destructor. ;  ; Bool_t CancelStagingDataSet (const char *dataset) override;  Cancels a dataset staging request. ;  ; void ClearCache (const char *file=0) override;  Remove files from all file caches. ;  ; void ClearDataSetCache (const char *dataset=0) override;  Clear the content of the dataset cache, if any (matching 'dataset', if defined). ;  ; Long64_t DrawSelect (TDSet *dset, const char *varexp, const char *selection="""", Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0) override;  Execute the specified drawing action on a data set (TDSet). ;  ; Bool_t ExistsDataSet (const char *uri) override;  Returns kTRUE if 'dataset' described by 'uri' exists, kFALSE otherwise. ;  ; TFileCollection * GetDataSet (const char *uri, const char *=0) override;  Get a list of TFileInfo objects describing the files of the specified dataset. ;  ; TMap * GetDataSets (const char *uri="""", const char *=0) override;  lists all datasets that match given uri ;  ; TList * GetListOfQueries (Option_t *opt="""") override;  Get the list of queries. ;  ; TFileCollection * GetStagingStatusDataSet (const char *dataset) override;  Obtains a TFileCollection s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLite.html:1071,Clear,ClearCache,1071,doc/master/classTProofLite.html,https://root.cern,https://root.cern/doc/master/classTProofLite.html,1,['Clear'],['ClearCache']
Usability," On destruction, the ntuple flushes unwritten data to disk; 78 // and closes the attached ROOT file.; 79}; 80 ; 81void Analyze() {; 82 // Get a unique pointer to an empty RNTuple model; 83 auto model = RNTupleModel::Create();; 84 ; 85 // We only define the fields that are needed for reading; 86 std::shared_ptr<int> fldAge = model->MakeField<int>(""Age"");; 87 ; 88 // Create an ntuple and attach the read model to it; 89 auto ntuple = RNTupleReader::Open(std::move(model), ""Staff"", kNTupleFileName);; 90 ; 91 // Quick overview of the ntuple and list of fields.; 92 ntuple->PrintInfo();; 93 ; 94 std::cout << ""The first entry in JSON format:"" << std::endl;; 95 ntuple->Show(0);; 96 // In a future version of RNTuple, there will be support for ntuple->Scan(); 97 ; 98 auto c = new TCanvas(""c"", """", 200, 10, 700, 500);; 99 TH1I h(""h"", ""Age Distribution CERN, 1988"", 100, 0, 100);; 100 h.SetFillColor(48);; 101 ; 102 for (auto entryId : *ntuple) {; 103 // Populate fldAge; 104 ntuple->LoadEntry(entryId);; 105 h.Fill(*fldAge);; 106 }; 107 ; 108 h.DrawCopy();; 109}; 110 ; 111void ntpl001_staff() {; 112 Ingest();; 113 Analyze();; 114}; RNTupleModel.hxx; RNTupleReader.hxx; RNTupleWriter.hxx; c#define c(i)Definition RSha256.hxx:101; h#define h(i)Definition RSha256.hxx:106; TCanvas.h; TH1I.h; TROOT.h; gROOT#define gROOTDefinition TROOT.h:406; TString.h; ROOT::Experimental::RNTupleModelThe RNTupleModel encapulates the schema of an ntuple.Definition RNTupleModel.hxx:136; ROOT::Experimental::RNTupleReaderAn RNTuple that is used to read data from storage.Definition RNTupleReader.hxx:71; ROOT::Experimental::RNTupleWriterAn RNTuple that gets filled with entries (data) and writes them to storage.Definition RNTupleWriter.hxx:60; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1I1-D histogram with an int per channel (see TH1 documentation)Definition TH1.h:540. tutorialsv7ntuplentpl001_staff.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:11 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ntpl001__staff_8C_source.html:5206,Guid,Guide,5206,doc/master/ntpl001__staff_8C_source.html,https://root.cern,https://root.cern/doc/master/ntpl001__staff_8C_source.html,1,['Guid'],['Guide']
Usability," One can also call TF1::GetRandom to get a random variate from a function. ; Reimplemented in TH2, and TH3.; Definition at line 3519 of file TH1.cxx. ◆ FillRandom() [2/2]. void TH1::FillRandom ; (; TH1 * ; h, . Int_t ; ntimes = 5000, . TRandom * ; rng = nullptr . ). virtual . Fill histogram following distribution in histogram h. ; Parameters. h: Histogram pointer used for sampling random number ; ntimes: number of times the histogram is filled ; rng: (optional) Random number generator used for sampling. The distribution contained in the histogram h (TH1) is integrated over the channel contents for the bin range of this histogram. It is normalized to 1.; Getting one random number implies:; Generating a random number between 0 and 1 (say r1); Look in which bin in the normalized integral r1 corresponds to; Fill histogram channel ntimes random numbers are generated. SPECIAL CASE when the target histogram has the same binning as the source. in this case we simply use a poisson distribution where the mean value per bin = bincontent/integral. ; Reimplemented in TH2, and TH3.; Definition at line 3590 of file TH1.cxx. ◆ FindBin(). Int_t TH1::FindBin ; (; Double_t ; x, . Double_t ; y = 0, . Double_t ; z = 0 . ). virtual . Return Global bin number corresponding to x,y,z. ; 2-D and 3-D histograms are represented with a one dimensional structure. This has the advantage that all existing functions, such as GetBinContent, GetBinError, GetBinFunction work for all dimensions. This function tries to extend the axis if the given point belongs to an under-/overflow bin AND if CanExtendAllAxes() is true.; See also TH1::GetBin, TAxis::FindBin and TAxis::FindFixBin ; Reimplemented in TH2Poly.; Definition at line 3672 of file TH1.cxx. ◆ FindFirstBinAbove(). Int_t TH1::FindFirstBinAbove ; (; Double_t ; threshold = 0, . Int_t ; axis = 1, . Int_t ; firstBin = 1, . Int_t ; lastBin = -1 . ); const. virtual . Find first bin with content > threshold for axis (1=x, 2=y, 3=z) if no bins with conten",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:120314,simpl,simply,120314,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['simpl'],['simply']
Usability," Only keep the entries where ""col"" has values; df_filtered.Display({""twice""})->Print();; Further considerations; Note that working with missing values is currently supported with a TTree-based data source. Support of this functionality for other data sources may come in the future. Efficient analysis in Python; You can use RDataFrame in Python thanks to the dynamic Python/C++ translation of PyROOT. In general, the interface is the same as for C++, a simple example follows.; df = ROOT.RDataFrame(""myTree"", ""myFile.root""); sum = df.Filter(""x > 10"").Sum(""y""); print(sum.GetValue()). User code in the RDataFrame workflow; C++ code; In the simple example that was shown above, a C++ expression is passed to the Filter() operation as a string (""x > 0""), even if we call the method from Python. Indeed, under the hood, the analysis computations run in C++, while Python is just the interface language.; To perform more complex operations that don't fit into a simple expression string, you can just-in-time compile C++ functions - via the C++ interpreter cling - and use those functions in an expression. See the following snippet for an example:; # JIT a C++ function from Python; ROOT.gInterpreter.Declare(""""""; bool myFilter(float x) {; return x > 10;; }; """"""); ; df = ROOT.RDataFrame(""myTree"", ""myFile.root""); # Use the function in an RDF operation; sum = df.Filter(""myFilter(x)"").Sum(""y""); print(sum.GetValue()); To increase the performance even further, you can also pre-compile a C++ library with full code optimizations and load the function into the RDataFrame computation as follows.; ROOT.gSystem.Load(""path/to/myLibrary.so"") # Library with the myFilter function; ROOT.gInterpreter.Declare('#include ""myLibrary.h""') # Header with the declaration of the myFilter function; df = ROOT.RDataFrame(""myTree"", ""myFile.root""); sum = df.Filter(""myFilter(x)"").Sum(""y""); print(sum.GetValue()); A more thorough explanation of how to use C++ code from Python can be found in the PyROOT manual.; Python code",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDataFrame.html:87135,simpl,simple,87135,doc/master/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDataFrame.html,1,['simpl'],['simple']
Usability," P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; 340/// - F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; 341/// - E: draw vertical error bar if option ""L"" is also specified; 342 ; 343TLegendEntry *TLegend::AddEntry(const char *name, const char *label, Option_t *option); 344{; 345 if (!gPad) {; 346 Error(""AddEntry"", ""need to create a canvas first"");; 347 return nullptr;; 348 }; 349 ; 350 TObject *obj = gPad->FindObject(name);; 351 ; 352 // If the object ""name"" has not been found, the following code tries to; 353 // find it in TMultiGraph or THStack possibly present in the current pad.; 354 if (!obj) {; 355 TList *lop = gPad->GetListOfPrimitives();; 356 if (lop) {; 357 TIter next(lop);; 358 while(auto o = next()) {; 359 if ( o->InheritsFrom(TMultiGraph::Class() ) ) {; 360 TList * grlist = ((TMultiGraph *)o)->GetListOfGraphs();; 361 obj = grlist->FindObject(name);; 362 if (obj) break;; 363 }; 364 if ( o->InheritsFrom(THStack::Class() ) ) {; 365 TList * hlist = ((THStack *)o)->GetHists();; 366 obj = hlist->FindObject(name);; 367 if (obj) break;; 368 }; 369 }; 370 }; 371 }; 372 ; 373 return AddEntry( obj, label, option );; 374}; 375 ; 376////////////////////////////////////////////////////////////////////////////////; 377/// Clear all entries in this legend, including the header.; 378 ; 379void TLegend::Clear( Option_t *); 380{; 381 if (!fPrimitives) return;; 382 fPrimitives->Delete();; 383}; 384 ; 385////////////////////////////////////////////////////////////////////////////////; 386/// Copy this legend into ""obj"".; 387 ; 388void TLegend::Copy(TObject &obj) const; 389{; 390 auto &tgt = static_cast<TLegend &> (obj);; 391 TPave::Copy(tgt);; 392 TAttText::Copy(tgt);; 393 tgt.fEntrySeparation = fEntrySeparation;; 394 tgt.fMargin = fMargin;; 395 tgt.fNColumns = fNColumns;; 396 ; 397 if (tgt.fPrimitives) {; 398 tgt.fPrimitives->Delete();; 399 delete tgt.fPrimitives;; 400 tgt.fPrimitives = nullptr;; 401 }; 402 if (fPrim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLegend_8cxx_source.html:13620,Clear,Clear,13620,doc/master/TLegend_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLegend_8cxx_source.html,1,['Clear'],['Clear']
Usability," PARA shape; TGeoPatternParaY - a Y axis divison pattern for PARA shape; TGeoPatternParaZ - a Z axis divison pattern for PARA shape; TGeoPatternTrapZ - a Z axis divison pattern for TRAP or GTRA shapes; TGeoPatternCylR - a cylindrical R divison pattern; TGeoPatternCylPhi - a cylindrical phi divison pattern; TGeoPatternSphR - a spherical R divison pattern; TGeoPatternSphTheta - a spherical theta divison pattern; TGeoPatternSphPhi - a spherical phi divison pattern; TGeoPatternHoneycomb - a divison pattern specialized for honeycombs . Definition at line 31 of file TGeoPatternFinder.h. Classes; struct  ThreadData_t;  . Public Member Functions;  TGeoPatternFinder ();  Default constructor. ;  ;  TGeoPatternFinder (TGeoVolume *vol, Int_t ndiv);  Default constructor. ;  ;  ~TGeoPatternFinder () override;  Destructor. ;  ; virtual void cd (Int_t);  ; virtual TGeoNode * CdNext ();  Make next node (if any) current. ;  ; void ClearThreadData () const;  ; virtual TGeoMatrix * CreateMatrix () const =0;  ; void CreateThreadData (Int_t nthreads);  Create thread data for n threads max. ;  ; virtual TGeoNode * FindNode (Double_t *, const Double_t *=nullptr);  ; virtual Int_t GetByteCount () const;  ; Int_t GetCurrent ();  Return current index. ;  ; virtual Int_t GetDivAxis ();  ; Int_t GetDivIndex ();  ; Double_t GetEnd () const;  ; virtual TGeoMatrix * GetMatrix ();  Return current matrix. ;  ; Int_t GetNdiv () const;  ; Int_t GetNext () const;  Get index of next division. ;  ; TGeoNode * GetNodeOffset (Int_t idiv);  ; Double_t GetStart () const;  ; Double_t GetStep () const;  ; ThreadData_t & GetThreadData () const;  ; TGeoVolume * GetVolume () const;  ; TClass * IsA () const override;  ; virtual Bool_t IsOnBoundary (const Double_t *) const;  ; Bool_t IsReflected () const;  ; Bool_t IsSpacedOut () const;  ; virtual TGeoPatternFinder * MakeCopy (Bool_t reflect=kFALSE)=0;  ; void Reflect (Bool_t flag=kTRUE);  ; void SetDivIndex (Int_t index);  ; void SetNext (Int_t index);  Set index ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternFinder.html:1720,Clear,ClearThreadData,1720,doc/master/classTGeoPatternFinder.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternFinder.html,1,['Clear'],['ClearThreadData']
Usability," PEAC - A set of tools to quickly enable PROOF on a cluster poster presented by Gerri Ganis and Martin Vala.; Preparing for the new C++11 standard poster presented by Axel Naumann;; ROOT: High Quality, Systematically poster presented by Axel Naumann;; Improvements in ROOT I/O poster presented by Philippe Canal. An Exhibition Booth for demonstrating recent developments in data processing software used at the LHC presented by the CERN PH-SFT group (in Kimmel).; Papers NOT by the ROOT team, but related in spirit. The ""Bazaar"" software development process we try to follow:; The Cathedral and the Bazaar by Eric S. Raymond. In case you want to cite CINT, use the following references. C++ Interpreter - CINT, Masaharu Goto, CQ publishing, ISBN4-789-3085-3 (Japanese); Concept and application of Cint C++ interpreter, Masaharu Goto, Interface magazine 1996Aug-Nov, CQ publisihing, (Japanese); Cint - embedding Tcl/Tk graphics, Masaharu Goto, Interface magazine 1997 Feb, CQ publishing, (Japanese); BeOS and ROOT, Masaharu Goto, Interface magazine 1997 Sep, CQ publisihing, (Japanese); Learning C++ with CINT, Masaharu Goto, C magazine 1998Apr-1999Mar, Softbank Co, (Japanese); ROOT: An object oriented data analysis framework, Rene Brun & Fons Rademakers Linux Journal 998July Issue 51, Metro Link Inc, (English). Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. © Copyright CERN 2014-18. All rights reserved. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/publications.html:4991,Learn,Learning,4991,d/publications.html,https://root.cern,https://root.cern/d/publications.html,1,['Learn'],['Learning']
Usability," Permalink . Hi Alex, . Hi Alex,; Very good points but let me try to defend python. I have found that a following approach (used by ATLAS that I also adopted in my private code) works fantastically well:; -- Use python to read configuration, find input files, etc;; -- Write performance critical code in C++;; -- Create C++ objects in python (relying on ROOT for dictionary support);; -- Pass configuration from python to C++;; -- Do calculations in C++;; -- Return results to python for processing, ploting, etc;; -- Run entire plot making code in python for stacking, labeling, etc.; Granted, this is probably a more complex approach than most of us in physics are willing to tolerate. I suspect that you do not have much choice since the user community wants CINT-like functionality from ROOT (and one feature of the ROOT project that makes it great is a full consideration of what experiments and users need for data taking and analysis).; Thanks for the interesting discussion! I have learned quite a bit about ROOT plans and it all seems very promising. Cheers!. Submitted by Anonymous (not verified) on Thu, 07/23/2015 - 21:52 Permalink . Dependency on Python . In my experience, getting python scripts to work is a very unreliable affair. They almost always have dependencies on external packages and if you don't have EXACTLY the same version of python you only have about a 50% chance that anything you use will work. The language is simply not stable. C++ is bad enough. Scripting languages are much, much worse. The maintainers think the language is their playtoy and they take no responsibility to maintain backward compatibility from release to release. Python is just a Bad Idea(tm). Submitted by Anonymous (not verified) on Thu, 07/23/2015 - 21:52 Permalink . CINT need to be communitized, that's the whole problem . Indeed, for decade, Cint never made it to open-source because of ROOT dependencies and backward compatiblities. Now that I am seeing this arguement is no more, and we a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/blog/do-we-need-yet-another-custom-c-interpreter.html:18561,learn,learned,18561,d/blog/do-we-need-yet-another-custom-c-interpreter.html,https://root.cern,https://root.cern/d/blog/do-we-need-yet-another-custom-c-interpreter.html,1,['learn'],['learned']
Usability," Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoConeEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for volume editor. ~TGeoConeEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Slot for name. void DoApply(); Slot for applying current parameters. void DoModified(); Slot for modifing current parameters. void DoUndo(); Slot for undoing current operation. void DoRmin1(); Slot for Rmin1. void DoRmax1(); Slot for Rmax1. void DoRmin2(); Slot for Rmin2. void DoRmax2(); Slot for Rmax2. void DoDz(); Slot for Dz. TGeoConeEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()). » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-06-02 16:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGeoConeEditor.html:22457,undo,undoing,22457,root/html604/TGeoConeEditor.html,https://root.cern,https://root.cern/root/html604/TGeoConeEditor.html,1,['undo'],['undoing']
Usability," Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static TGLayoutHints*TGCompositeFrame::fgDefaultHintsdefault hints used by AddFrame(); static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoConeEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); Constructor for volume editor. ~TGeoConeEditor(); Destructor. void ConnectSignals2Slots(); Connect signals to slots. void SetModel(TObject* obj); Connect to the selected object. Bool_t IsDelayed() const; Check if shape drawing is delayed. void DoName(); Slot for name. void DoApply(); Slot for applying current parameters. void DoModified(); Slot for modifing current parameters. void DoUndo(); Slot for undoing current operation. void DoRmin1(); Slot for Rmin1. void DoRmax1(); Slot for Rmax1. void DoRmin2(); Slot for Rmin2. void DoRmax2(); Slot for Rmax2. void DoDz(); Slot for Dz. TGeoConeEditor(const TGWindow* p = 0, Int_t width = 140, Int_t height = 30, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()). » Author: M.Gheata » Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; » Last changed: :$Id$ » Last generated: 2015-06-30 15:00; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoConeEditor.html:22457,undo,undoing,22457,root/html602/TGeoConeEditor.html,https://root.cern,https://root.cern/root/html602/TGeoConeEditor.html,1,['undo'],['undoing']
Usability," PropertyNotify event on that window. ;  ; virtual void ChangeProperty (Window_t id, Atom_t property, Atom_t type, UChar_t *data, Int_t len);  Alters the property for the specified window and causes the X server to generate a PropertyNotify event on that window. ;  ; virtual void ChangeWindowAttributes (Window_t id, SetWindowAttributes_t *attr);  Changes the attributes of the specified window ""id"" according the values provided in ""attr"". ;  ; virtual Bool_t CheckEvent (Window_t id, EGEventType type, Event_t &ev);  Check if there is for window ""id"" an event of type ""type"". ;  ; virtual void ClearArea (Window_t id, Int_t x, Int_t y, UInt_t w, UInt_t h);  Paints a rectangular area in the specified window ""id"" according to the specified dimensions with the window's background pixel or pixmap. ;  ; virtual void ClearWindow ();  Clears the entire area of the current window. ;  ; virtual void ClearWindow (Window_t id);  Clears the entire area in the specified window and it is equivalent to ClearArea(id, 0, 0, 0, 0) ;  ; virtual void CloseDisplay ();  Closes connection to display server and destroys all windows. ;  ; virtual void ClosePixmap ();  Deletes current pixmap. ;  ; virtual void CloseWindow ();  Deletes current window. ;  ; virtual void ConvertPrimarySelection (Window_t id, Atom_t clipboard, Time_t when);  Causes a SelectionRequest event to be sent to the current primary selection owner. ;  ; virtual void ConvertSelection (Window_t, Atom_t &, Atom_t &, Atom_t &, Time_t &);  Requests that the specified selection be converted to the specified target type. ;  ; virtual void CopyArea (Drawable_t src, Drawable_t dest, GContext_t gc, Int_t src_x, Int_t src_y, UInt_t width, UInt_t height, Int_t dest_x, Int_t dest_y);  Combines the specified rectangle of ""src"" with the specified rectangle of ""dest"" according to the ""gc"". ;  ; virtual void CopyGC (GContext_t org, GContext_t dest, Mask_t mask);  Copies the specified components from the source GC ""org"" to the destination GC ""d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualX.html:3747,Clear,ClearWindow,3747,doc/master/classTVirtualX.html,https://root.cern,https://root.cern/doc/master/classTVirtualX.html,3,['Clear'],"['ClearArea', 'ClearWindow', 'Clears']"
Usability," Public Attributes; static constexpr unsigned value;  . Static Private Attributes; static constexpr std::size_t cacheLineSize = 64;  ; static constexpr unsigned elementsPerCacheLine = (cacheLineSize - sizeof(SmallVectorBase)) / sizeof(T);  ; static constexpr unsigned maxInlineByteSize = 1024;  . #include <ROOT/RVec.hxx>; Member Data Documentation. ◆ cacheLineSize. template<typename T > . constexpr std::size_t ROOT::Internal::VecOps::RVecInlineStorageSize< T >::cacheLineSize = 64. staticconstexprprivate . Definition at line 518 of file RVec.hxx. ◆ elementsPerCacheLine. template<typename T > . constexpr unsigned ROOT::Internal::VecOps::RVecInlineStorageSize< T >::elementsPerCacheLine = (cacheLineSize - sizeof(SmallVectorBase)) / sizeof(T). staticconstexprprivate . Definition at line 520 of file RVec.hxx. ◆ maxInlineByteSize. template<typename T > . constexpr unsigned ROOT::Internal::VecOps::RVecInlineStorageSize< T >::maxInlineByteSize = 1024. staticconstexprprivate . Definition at line 521 of file RVec.hxx. ◆ value. template<typename T > . constexpr unsigned ROOT::Internal::VecOps::RVecInlineStorageSize< T >::value. staticconstexpr . Initial value:=; elementsPerCacheLine >= 8 ? elementsPerCacheLine : (sizeof(T) * 8 > maxInlineByteSize ? 0 : 8); ROOT::Internal::VecOps::RVecInlineStorageSize::maxInlineByteSizestatic constexpr unsigned maxInlineByteSizeDefinition RVec.hxx:521; ROOT::Internal::VecOps::RVecInlineStorageSize::elementsPerCacheLinestatic constexpr unsigned elementsPerCacheLineDefinition RVec.hxx:520. Definition at line 524 of file RVec.hxx. Collaboration diagram for ROOT::Internal::VecOps::RVecInlineStorageSize< T >:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; math/vecops/inc/ROOT/RVec.hxx. ROOTInternalVecOpsRVecInlineStorageSize. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Internal_1_1VecOps_1_1RVecInlineStorageSize.html:2617,Guid,Guide,2617,doc/master/structROOT_1_1Internal_1_1VecOps_1_1RVecInlineStorageSize.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Internal_1_1VecOps_1_1RVecInlineStorageSize.html,1,['Guid'],['Guide']
Usability," Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TGHtml.h>. Inheritance diagram for TGHtmlLayoutContext:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TGHtmlLayoutContext(). TGHtmlLayoutContext::TGHtmlLayoutContext ; (; ). Html Layout Context constructor. ; Definition at line 38 of file TGHtmlLayout.cxx. Member Function Documentation. ◆ ClearMarginStack(). void TGHtmlLayoutContext::ClearMarginStack ; (; SHtmlMargin_t ** ; ppMargin). protected . Clear a margin stack to reclaim memory. ; This routine just blindly pops everything off the stack. Typically used when the screen is cleared or the widget is deleted, etc. ; Definition at line 165 of file TGHtmlLayout.cxx. ◆ ClearObstacle(). void TGHtmlLayoutContext::ClearObstacle ; (; int ; mode). protected . Clear a wrap-around obstacle. ; The second option determines the precise behavior.; CLEAR_Left Clear all obstacles on the left.; CLEAR_Right Clear all obstacles on the right.; CLEAR_Both Clear all obstacles on both sides.; CLEAR_First Clear only the first obstacle on either side. ; Definition at line 733 of file TGHtmlLayout.cxx. ◆ ComputeMargins(). void TGHtmlLayoutContext::ComputeMargins ; (; int * ; pX, . int * ; pY, . int * ; pW . ). protected . Compute the current margins for layout. ; Three values are returned:; *pY The top edge of the area in which we can put ink. This tak",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHtmlLayoutContext.html:12411,Clear,ClearMarginStack,12411,doc/master/classTGHtmlLayoutContext.html,https://root.cern,https://root.cern/doc/master/classTGHtmlLayoutContext.html,1,['Clear'],['ClearMarginStack']
Usability," Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; TTabCom Class Reference. . Definition at line 52 of file TTabCom.h. Public Types; enum  { kDebug = 17; };  ; enum  EContext_t { ;   kUNKNOWN_CONTEXT =-1; , kSYS_UserName; , kSYS_EnvVar; , kCINT_stdout; , ;   kCINT_stderr; , kCINT_stdin; , kCINT_Edit; , kCINT_Load; , ;   kCINT_Exec; , kCINT_EXec; , kCINT_pragma; , kCINT_includeSYS; , ;   kCINT_includePWD; , kCINT_cpp; , kROOT_Load; , kSYS_FileName; , ;   kCXX_NewProto; , kCXX_ConstructorProto; , kCXX_ScopeProto; , kCXX_DirectProto; , ;   kCXX_IndirectProto; , kCXX_ScopeMember; , kCXX_DirectMember; , kCXX_IndirectMember; , ;   kCXX_Global; , kCXX_GlobalProto; , kNUM_PAT. };  ; typedef TList TContainer;  ; typedef TListIter TContIter;  . Public Member Functions;  TTabCom ();  Default constructor. ;  ; virtual ~TTabCom ();  ; void ClearAll ();  clears all lists except for user names and system include files. ;  ; void ClearClasses ();  Clear classes and namespace collections. ;  ; void ClearCppDirectives ();  Forget all Cpp directives seen so far. ;  ; void ClearEnvVars ();  Forget all environment variables seen so far. ;  ; void ClearFiles ();  Close all files. ;  ; void ClearGlobalFunctions ();  Forget all global functions seen so far. ;  ; void ClearGlobals ();  Forget all global variables seen so far. ;  ; void ClearPragmas ();  Forget all pragmas seen so far. ;  ; void ClearSysIncFiles ();  Close system files. ;  ; void ClearUsers ();  Forget all user seen so far. ;  ; const TSeqCollection * GetListOfClasses ();  Return the list of classes. ;  ; const TSeqCollection * GetListOfCppDirectives ();  Return the list of CPP directives. ;  ; const TSeqCollection * GetListOfEnvVars ();  Uses ""env"" (Unix) or ""set"" (Windows) to get list of environment variables. ;  ; const TSeqCollection * GetListOfFilesInPath (const char path[]);  ""path"" should be initialized with a colon separated list of system directories ;  ; TCollection *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTabCom.html:1163,Clear,ClearClasses,1163,doc/master/classTTabCom.html,https://root.cern,https://root.cern/doc/master/classTTabCom.html,2,['Clear'],"['Clear', 'ClearClasses']"
Usability," Public Member Functions;  Net ();  c'tor ;  ;  Net (const Net &other);  d'tor ;  ; void addLayer (Layer &&layer);  ; void addLayer (Layer &layer);  add a layer (layout) ;  ; template<typename Settings > ; void backPropagate (std::vector< std::vector< LayerData > > &layerPatternData, const Settings &settings, size_t trainFromLayer, size_t totalNumWeights) const;  ; void clear ();  ; template<typename Weights > ; std::vector< double > compute (const std::vector< double > &input, const Weights &weights) const;  compute the net with the given input and the given weights ;  ; template<typename ItWeight > ; std::tuple< double, double > computeError (const Settings &settings, std::vector< LayerData > &lastLayerData, Batch &batch, ItWeight itWeightBegin, ItWeight itWeightEnd) const;  ; void dE ();  ; template<typename WeightsType , typename DropProbabilities > ; void dropOutWeightFactor (WeightsType &weights, const DropProbabilities &drops, bool inverse=false);  set the drop out configuration ;  ; double E ();  ; template<typename Container , typename ItWeight > ; double errorFunction (LayerData &layerData, Container truth, ItWeight itWeight, ItWeight itWeightEnd, double patternWeight, double factorWeightDecay, EnumRegularization eRegularization) const;  computes the error of the DNN ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Net.html:1075,clear,clear,1075,doc/master/classTMVA_1_1DNN_1_1Net.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1Net.html,1,['clear'],['clear']
Usability," Public Member Functions;  TVirtualProofPlayer ();  ;  ~TVirtualProofPlayer () override;  ; virtual void AddEventsProcessed (Long64_t ev)=0;  ; virtual void AddInput (TObject *inp)=0;  ; virtual void AddOutput (TList *out)=0;  ; virtual Int_t AddOutputObject (TObject *obj)=0;  ; virtual void AddQueryResult (TQueryResult *q)=0;  ; virtual void ClearInput ()=0;  ; virtual TDrawFeedback * CreateDrawFeedback (TProof *p)=0;  ; virtual void DeleteDrawFeedback (TDrawFeedback *f)=0;  ; virtual Long64_t DrawSelect (TDSet *set, const char *varexp, const char *selection, Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0)=0;  ; virtual void Feedback (TList *objs)=0;  ; virtual Long64_t Finalize (Bool_t force=kFALSE, Bool_t sync=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualProofPlayer.html:1605,Clear,ClearInput,1605,doc/master/classTVirtualProofPlayer.html,https://root.cern,https://root.cern/doc/master/classTVirtualProofPlayer.html,2,"['Clear', 'Feedback']","['ClearInput', 'Feedback']"
Usability," Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses » Introductory Tutorials The End. You are done - that was the introductory tutorial!. Image by Tangopaso; If you want to go on, have a look at the ROOT Courses section!; . ‹ Using a TSelector with PROOF; up. Navigate through this book; Meet a TTree; Accessing a TTree With a TBrowser; Using TTree::Draw() to access a TTree; TTree and Its Data; Using a Macro to Read a TTree; Histogramming; Fit Panel; Compiling Your Code (also known as ACLiC); Accessing a TTree With a TSelector; Histogramming in a Selector; Using a TSelector with PROOF; The End. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. © Copyright CERN 2014-18. All rights reserved. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/end.html:2500,Guid,Guides,2500,d/end.html,https://root.cern,https://root.cern/d/end.html,2,"['Guid', 'guid']","['Guides', 'guidelines']"
Usability," Publications | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation Publications. In case you want to cite ROOT in your own publications, this is the preferred reference. Rene Brun and Fons Rademakers,; ROO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/publications.html:1002,Guid,Guides,1002,d/publications.html,https://root.cern,https://root.cern/d/publications.html,1,['Guid'],['Guides']
Usability," Pull Request | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development » Git Primer Creating a Pull Request. Prerequisites. You have set up git on our system; You have registered a GitHub account and forked the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/creating-pull-request.html:1013,Guid,Guides,1013,d/creating-pull-request.html,https://root.cern,https://root.cern/d/creating-pull-request.html,1,['Guid'],['Guides']
Usability," Qt GUI initialization-. Int_t CreatROOTThread(); dummy*-*-*-*-; -. Int_t RegisterWid(QPaintDevice* wid); register QWidget for the embedded TCanvas. Int_t UnRegisterWid(QPaintDevice* wid); unregister QWidget to the TCanvas; return = Root registration Id or zero if the wd was not registered. Bool_t IsRegistered(QPaintDevice* wid); Check whether the object has been registered. Int_t InitWindow(ULong_t window); -; *-* if window == 0 InitWindow creates its own instance of TQtWindowsObject object; -; *-* Create a new windows; -; window is QWidget. Int_t OpenPixmap(UInt_t w, UInt_t h); *-* Create a new pixmap object. const QColor & ColorIndex(Color_t indx) const; Define the QColor object by ROOT color index. UInt_t ExecCommand(TGWin32Command* code); deprecated. void SetDoubleBufferOFF(); deprecated. void SetDoubleBufferON(); deprecated. void GetPlanes(Int_t& nplanes); Get maximum number of planes*-; *-* ============================; *-* nplanes : number of bit planes; *. void ClearWindow(); Clear current window. void ClosePixmap(); Delete the current pixmap. void CloseWindow(); Delete the current window. void DeleteSelectedObj(); Delete the current Qt object. QRect GetQRect(QPaintDevice& dev); Define the rectangle of the current ROOT selection. void CopyPixmap(int wd, int xpos, int ypos); Copy the pixmap wd at the position xpos, ypos in the current window. void CopyPixmap(const QPixmap& p, Int_t px1, Int_t py1); Copy the pixmap p at the position xpos, ypos in the current window. void CreateOpenGLContext(Int_t wid = 0); Create OpenGL context for win windows (for ""selected"" Window by default); printf("" TGQt::CreateOpenGLContext for wd = %x fSelected= %x, threadID= %d \n"",wd,fSelectedWindow,; GetCurrentThreadId());. void DeleteOpenGLContext(Int_t wid = 0); Delete OpenGL context for win windows (for ""selected"" Window by default). void DrawBox(Int_t x1, Int_t y1, Int_t x2, Int_t y2, TVirtualX::EBoxMode mode); Draw a box.; mode=0 hollow (kHollow); mode=1 solid (kSolid). void Dr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGQt.html:30228,Clear,ClearWindow,30228,root/html602/TGQt.html,https://root.cern,https://root.cern/root/html602/TGQt.html,4,['Clear'],"['Clear', 'ClearWindow']"
Usability," RBrowserReply &reply); 172{; 173 auto path = fWorkingPath;; 174 path.insert(path.end(), request.path.begin(), request.path.end());; 175 ; 176 if ((path != fLastPath) || !fLastElement) {; 177 ; 178 auto elem = GetSubElement(path);; 179 if (!elem) return false;; 180 ; 181 ResetLastRequestData(true);; 182 ; 183 fLastPath = path;; 184 fLastElement = std::move(elem);; 185 ; 186 fLastElement->cd(); // set element active; 187 } else if (request.reload) {; 188 // only reload items from element, not need to reset element itself; 189 ResetLastRequestData(false);; 190 }; 191 ; 192 // when request childs, always try to make elements; 193 if (fLastItems.empty()) {; 194 ; 195 auto iter = fLastElement->GetChildsIter();; 196 ; 197 if (!iter) return false;; 198 int id = 0;; 199 fLastAllChilds = true;; 200 ; 201 while (iter->Next() && fLastAllChilds) {; 202 fLastItems.emplace_back(iter->CreateItem());; 203 if (id++ > 10000); 204 fLastAllChilds = false;; 205 }; 206 ; 207 fLastSortedItems.clear();; 208 fLastSortMethod.clear();; 209 }; 210 ; 211 // create sorted array; 212 if ((fLastSortedItems.size() != fLastItems.size()) ||; 213 (fLastSortMethod != request.sort) ||; 214 (fLastSortReverse != request.reverse)) {; 215 fLastSortedItems.resize(fLastItems.size(), nullptr);; 216 int id = 0;; 217 if (request.sort.empty()) {; 218 // no sorting, just move all folders up; 219 for (auto &item : fLastItems); 220 if (item->IsFolder()); 221 fLastSortedItems[id++] = item.get();; 222 for (auto &item : fLastItems); 223 if (!item->IsFolder()); 224 fLastSortedItems[id++] = item.get();; 225 } else {; 226 // copy items; 227 for (auto &item : fLastItems); 228 fLastSortedItems[id++] = item.get();; 229 ; 230 if (request.sort != ""unsorted""); 231 std::sort(fLastSortedItems.begin(), fLastSortedItems.end(),; 232 [request](const Browsable::RItem *a, const Browsable::RItem *b) { return a ? a->Compare(b, request.sort) : !b; });; 233 }; 234 ; 235 if (request.reverse); 236 std::reverse(fLastSortedItems.begin(), fLast",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RBrowserData_8cxx_source.html:6546,clear,clear,6546,doc/master/RBrowserData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RBrowserData_8cxx_source.html,2,['clear'],['clear']
Usability," RDFHelpers.cxx. ◆ SaveGraph() [1/2]. template<typename NodeType > . std::string ROOT::RDF::SaveGraph ; (; NodeType ; node). Create a graphviz representation of the dataframe computation graph, return it as a string. ; Parameters. [in]nodeany node of the graph. Called on the head (first) node, it prints the entire graph. Otherwise, only the branch the node belongs to. The output can be displayed with a command akin to dot -Tpng output.dot > output.png && open output.png.; Note that ""hanging"" Defines, i.e. Defines without downstream nodes, will not be displayed by SaveGraph as they are effectively optimized away from the computation graph.; Note that SaveGraph is not thread-safe and must not be called concurrently from different threads. ; Definition at line 120 of file RDFHelpers.hxx. ◆ SaveGraph() [2/2]. template<typename NodeType > . void ROOT::RDF::SaveGraph ; (; NodeType ; node, . const std::string & ; outputFile . ). Create a graphviz representation of the dataframe computation graph, write it to the specified file. ; Parameters. [in]nodeany node of the graph. Called on the head (first) node, it prints the entire graph. Otherwise, only the branch the node belongs to. ; [in]outputFilefile where to save the representation. The output can be displayed with a command akin to dot -Tpng output.dot > output.png && open output.png.; Note that ""hanging"" Defines, i.e. Defines without downstream nodes, will not be displayed by SaveGraph as they are effectively optimized away from the computation graph.; Note that SaveGraph is not thread-safe and must not be called concurrently from different threads. ; Definition at line 139 of file RDFHelpers.hxx. ◆ splitInEqualRanges(). void ROOT::RDF::splitInEqualRanges ; (; std::vector< std::pair< ULong64_t, ULong64_t > > & ; ranges, . int ; nRecords, . unsigned int ; nSlots . ). Definition at line 519 of file RArrowDS.cxx. ROOTRDF. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:14:04 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1RDF.html:16646,Guid,Guide,16646,doc/v632/namespaceROOT_1_1RDF.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1RDF.html,1,['Guid'],['Guide']
Usability," RGeomData.cxx:1970; ROOT::RGeomDescription::ClearPhysNodeVisibilitybool ClearPhysNodeVisibility(const std::vector< std::string > &path)Reset custom visibility of physical node by path.Definition RGeomData.cxx:2065; ROOT::RGeomDescription::BuildDescriptionvoid BuildDescription(TGeoNode *topnode, TGeoVolume *topvolume)Build geometry description.Definition RGeomData.cxx:494; ROOT::RGeomDescription::SearchVisiblesint SearchVisibles(const std::string &find, std::string &hjson, std::string &json)Search visible nodes for provided name If number of found elements less than 100, create description ...Definition RGeomData.cxx:1411; ROOT::RGeomDescription::fSortMapstd::vector< int > fSortMap! nodes in order large -> smaller volumeDefinition RGeomData.hxx:252; ROOT::RGeomDescription::ProduceJsonstd::string ProduceJson(bool all_nodes=false)Produce JSON string which can be directly used with build function from JSROOT to create three....Definition RGeomData.cxx:1230; ROOT::RGeomDescription::ClearDrawDatavoid ClearDrawData()Clear raw data. Will be rebuild when next connection will be established.Definition RGeomData.cxx:1370; ROOT::RGeomDescription::MakePathByStackstd::vector< std::string > MakePathByStack(const std::vector< int > &stack)Returns path string for provided stack.Definition RGeomData.cxx:1716; ROOT::RGeomDescription::fMutexTVirtualMutex * fMutex! external mutex used to protect all dataDefinition RGeomData.hxx:266; ROOT::RGeomDescription::AddSignalHandlervoid AddSignalHandler(const void *handler, RGeomSignalFunc_t func)Add signal handler.Definition RGeomData.cxx:312; ROOT::RGeomDescription::ChangeConfigurationbool ChangeConfiguration(const std::string &json)Change configuration by client Returns true if any parameter was really changed.Definition RGeomData.cxx:2105; ROOT::RGeomDescription::CopyMaterialPropertiesvoid CopyMaterialProperties(TGeoVolume *vol, RGeomNode &node)Copy material properties.Definition RGeomData.cxx:1159; ROOT::RGeomDescription::GetClickedItemstd:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8hxx_source.html:31129,Clear,ClearDrawDatavoid,31129,doc/master/RGeomData_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8hxx_source.html,6,['Clear'],"['Clear', 'ClearDrawData', 'ClearDrawDatavoid']"
Usability," RGeomData.cxx:1970; ROOT::RGeomDescription::ClearPhysNodeVisibilitybool ClearPhysNodeVisibility(const std::vector< std::string > &path)Reset custom visibility of physical node by path.Definition RGeomData.cxx:2065; ROOT::RGeomDescription::BuildDescriptionvoid BuildDescription(TGeoNode *topnode, TGeoVolume *topvolume)Build geometry description.Definition RGeomData.cxx:494; ROOT::RGeomDescription::SearchVisiblesint SearchVisibles(const std::string &find, std::string &hjson, std::string &json)Search visible nodes for provided name If number of found elements less than 100, create description ...Definition RGeomData.cxx:1411; ROOT::RGeomDescription::fSortMapstd::vector< int > fSortMap! nodes in order large -> smaller volumeDefinition RGeomData.hxx:252; ROOT::RGeomDescription::ProduceJsonstd::string ProduceJson(bool all_nodes=false)Produce JSON string which can be directly used with build function from JSROOT to create three....Definition RGeomData.cxx:1230; ROOT::RGeomDescription::ClearDrawDatavoid ClearDrawData()Clear raw data. Will be rebuild when next connection will be established.Definition RGeomData.cxx:1370; ROOT::RGeomDescription::MakePathByStackstd::vector< std::string > MakePathByStack(const std::vector< int > &stack)Returns path string for provided stack.Definition RGeomData.cxx:1716; ROOT::RGeomDescription::fMutexTVirtualMutex * fMutex! external mutex used to protect all dataDefinition RGeomData.hxx:266; ROOT::RGeomDescription::AddSignalHandlervoid AddSignalHandler(const void *handler, RGeomSignalFunc_t func)Add signal handler.Definition RGeomData.cxx:312; ROOT::RGeomDescription::ChangeConfigurationbool ChangeConfiguration(const std::string &json)Change configuration by client Returns true if any parameter was really changed.Definition RGeomData.cxx:2105; ROOT::RGeomDescription::CopyMaterialPropertiesvoid CopyMaterialProperties(TGeoVolume *vol, RGeomNode &node)Copy material properties.Definition RGeomData.cxx:1159; ROOT::RGeomDescription::MakeStackByPathstd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8cxx_source.html:81380,Clear,ClearDrawDatavoid,81380,doc/master/RGeomData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8cxx_source.html,6,['Clear'],"['Clear', 'ClearDrawData', 'ClearDrawDatavoid']"
Usability," RNTupleWriter &)=delete; ROOT::Experimental::RNTupleWriter::fLastCommittedClusterGroupNTupleSize_t fLastCommittedClusterGroupDefinition RNTupleWriter.hxx:72; ROOT::Experimental::RNTupleWriter::~RNTupleWriter~RNTupleWriter()Definition RNTupleWriter.cxx:47; ROOT::Experimental::RNTupleWriter::Recreatestatic std::unique_ptr< RNTupleWriter > Recreate(std::unique_ptr< RNTupleModel > model, std::string_view ntupleName, std::string_view storage, const RNTupleWriteOptions &options=RNTupleWriteOptions())Throws an exception if the model is null.Definition RNTupleWriter.cxx:71; ROOT::Experimental::RNTupleWriter::GetNEntriesNTupleSize_t GetNEntries() constReturn the number of entries filled so far.Definition RNTupleWriter.hxx:135; ROOT::Experimental::RNTupleWriter::fFillContextRNTupleFillContext fFillContextDefinition RNTupleWriter.hxx:69; ROOT::Experimental::RNTupleWriter::Appendstatic std::unique_ptr< RNTupleWriter > Append(std::unique_ptr< RNTupleModel > model, std::string_view ntupleName, TFile &file, const RNTupleWriteOptions &options=RNTupleWriteOptions())Throws an exception if the model is null.Definition RNTupleWriter.cxx:95; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; ROOT::Experimental::Internal::CreateRNTupleWriterstd::unique_ptr< RNTupleWriter > CreateRNTupleWriter(std::unique_ptr< RNTupleModel > model, std::unique_ptr< Internal::RPageSink > sink)Definition RNTupleWriter.cxx:111; ROOT::Experimental::NTupleSize_tstd::uint64_t NTupleSize_tInteger type long enough to hold the maximum number of entries in a column.Definition RNTupleUtil.hxx:115; ROOT::Minuit2::GradientParameterSpace::Internal@ Internal; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4. treentuplev7incROOTRNTupleWriter.hxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:03 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleWriter_8hxx_source.html:16435,Guid,Guide,16435,doc/master/RNTupleWriter_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleWriter_8hxx_source.html,1,['Guid'],['Guide']
Usability," ROOT 6 Web Display. ; Implement TVirtualPadPainter which abstracts painting operations. ; TWebPadPainter tries to support old Paint methods of the ROOT classes. Main classes (like histograms or graphs) should be painted on JavaScript side ; Definition at line 26 of file TWebPadPainter.h. Public Member Functions;  TWebPadPainter ();  ; void ClearDrawable () override;  ; void CopyDrawable (Int_t, Int_t, Int_t) override;  ; Int_t CreateDrawable (UInt_t, UInt_t) override;  ; void DestroyDrawable (Int_t) override;  ; void DrawBox (Double_t x1, Double_t y1, Double_t x2, Double_t y2, EBoxMode mode) override;  Paint a simple box. ;  ; void DrawFillArea (Int_t n, const Double_t *x, const Double_t *y) override;  Paint filled area. ;  ; void DrawFillArea (Int_t n, const Float_t *x, const Float_t *y) override;  Paint filled area. ;  ; void DrawLine (Double_t x1, Double_t y1, Double_t x2, Double_t y2) override;  Paint a simple line. ;  ; void DrawLineNDC (Double_t u1, Double_t v1, Double_t u2, Double_t v2) override;  Paint a simple line in normalized coordinates. ;  ; void DrawPixels (const unsigned char *pixelData, UInt_t width, UInt_t height, Int_t dstX, Int_t dstY, Bool_t enableAlphaBlending) override;  Noop, for non-gl pad TASImage calls gVirtualX->CopyArea. ;  ; void DrawPolyLine (Int_t n, const Double_t *x, const Double_t *y) override;  Paint Polyline. ;  ; void DrawPolyLine (Int_t n, const Float_t *x, const Float_t *y) override;  Paint polyline. ;  ; void DrawPolyLineNDC (Int_t n, const Double_t *u, const Double_t *v) override;  Paint polyline in normalized coordinates. ;  ; void DrawPolyMarker (Int_t n, const Double_t *x, const Double_t *y) override;  Paint polymarker. ;  ; void DrawPolyMarker (Int_t n, const Float_t *x, const Float_t *y) override;  Paint polymarker. ;  ; void DrawText (Double_t x, Double_t y, const char *text, ETextMode mode) override;  Paint text. ;  ; void DrawText (Double_t x, Double_t y, const wchar_t *text, ETextMode mode) override;  Special versio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebPadPainter.html:1411,simpl,simple,1411,doc/master/classTWebPadPainter.html,https://root.cern,https://root.cern/doc/master/classTWebPadPainter.html,1,['simpl'],['simple']
Usability," ROOT Jenkins | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Development How to use the ROOT Jenkins. The ROOT project uses a Jenkins instance to schedule a number of software development procedures (nightly build",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/how-use-root-jenkins.html:1017,Guid,Guides,1017,d/how-use-root-jenkins.html,https://root.cern,https://root.cern/d/how-use-root-jenkins.html,1,['Guid'],['Guides']
Usability," ROOT class can be used from Python, its dictionary needs to be loaded into the current process. Starting with ROOT version 4.00/06, this happens automatically for all classes that are declared to the auto-loading mechanism through so-called rootmap files. Effectively, this means that all classes in the ROOT distributions are directly available for import. For example:; from ROOT import TCanvas # available at startup; c = TCanvas(). from ROOT import TLorentzVector # triggers auto-load of libPhysics; l = TLorentzVector(); Although it is not recommended, a simple way of working with PyROOT is doing a global import:; from ROOT import *. c = TCanvas(); l = TLorentzVector(); Keeping the ROOT namespace (“import ROOT”), or only importing from ROOT those classes that you will actually use (see above), however, will always be cleaner and clearer:; import ROOT. c = ROOT.TCanvas(); l = ROOT.TLorentzVector(); Since it is foreseen that most people will use the simple approach anyway, the request to copy all from module ROOT will not actually result in copying all ROOT classes into the current namespace. Instead, classes will still be bound (and possibly loaded) on an as-needed basis. Note carefully how this is different from other Python (extension) modules, and what to expect if you use the normal inspection tools (such as e.g. ‘dir()’). This feature prevents the inspection tools from being swamped by an enormous amount of classes, but they can no longer be used to explore unknown parts of the system (e.g. to find out which classes are available). Furthermore, because of this approach, <tab>-completion will usually not be available until after the first use (and hence creation) of a class.; Access to class static functions, public data members, enums, etc. is as expected. Many more example uses of ROOT classes from Python can be found in the tutorials directory in the ROOT distribution. The recipes section contains a description on working with your own classes (see “Using Your",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1051268,simpl,simple,1051268,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['simpl'],['simple']
Usability," ROOT objects.Definition TObject.h:41; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TRadialGradientDefinition TColorGradient.h:124; TRadialGradient::Classstatic TClass * Class(); TRadialGradient::kSimple@ kSimpleDefinition TColorGradient.h:127; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; TString::Formatstatic TString Format(const char *fmt,...)Static method which formats a string using a printf style format descriptor and return a TString.Definition TString.cxx:2378; TString::Formvoid Form(const char *fmt,...)Formats a string using a printf style format descriptor.Definition TString.cxx:2356; bool; double; int; unsigned int; nconst Int_t nDefinition legend1.C:16; TMath::MaxShort_t Max(Short_t a, Short_t b)Returns the largest of a and b.Definition TMathBase.h:250; TMath::MinShort_t Min(Short_t a, Short_t b)Returns the smallest of a and b.Definition TMathBase.h:198; TMath::AbsShort_t Abs(Short_t d)Returns the absolute value of parameter Short_t d.Definition TMathBase.h:123; ColorStruct_tDefinition GuiTypes.h:310; ColorStruct_t::fPixelULong_t fPixelcolor pixel value (index in color table)Definition GuiTypes.h:311; ColorStruct_t::fRedUShort_t fRedred component (0..65535)Definition GuiTypes.h:312; ColorStruct_t::fGreenUShort_t fGreengreen component (0..65535)Definition GuiTypes.h:313; ColorStruct_t::fBlueUShort_t fBlueblue component (0..65535)Definition GuiTypes.h:314; ColorStruct_t::fMaskUShort_t fMaskmask telling which color components are validDefinition GuiTypes.h:315; TColorGradient::PointDefinition TColorGradient.h:46; lTLine lDefinition textangle.C:4. corebasesrcTColor.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:05 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TColor_8cxx_source.html:163896,Guid,Guide,163896,doc/master/TColor_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TColor_8cxx_source.html,1,['Guid'],['Guide']
Usability," ROOT: Member List. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. TGraph2D Member List. This is the complete list of members for TGraph2D, including all inherited members. AbstractMethod(const char *method) constTObject; Add(TF2 *f, Double_t c1=1)TGraph2Dvirtual; AddPoint(Double_t x, Double_t y, Double_t z)TGraph2Dinlinevirtual; AddToTObjectTable(TObject *)TObjectprivatestatic; AppendPad(Option_t *option="""")TObjectvirtual; Apply(TF2 *f)TGraph2Dvirtual; Browse(TBrowser *) overrideTGraph2Dvirtual; Build(Int_t n)TGraph2Dprotected; CheckedHash()TObjectinline; Class()TGraph2Dstatic; Class_Name()TGraph2Dstatic; Class_Version()TGraph2Dinlinestatic; ClassName() constTObjectvirtual; Clear(Option_t *option="""") overrideTGraph2Dvirtual; Clone(const char *newname="""") const overrideTNamedvirtual; Compare(const TObject *obj) const overrideTNamedvirtual; TNamed::Copy(TObject &named) const overrideTNamedvirtual; TAttLine::Copy(TAttLine &attline) constTAttLine; TAttFill::Copy(TAttFill &attfill) constTAttFill; TAttMarker::Copy(TAttMarker &attmarker) constTAttMarker; CreateInterpolator(Bool_t oldInterp)TGraph2Dprivate; DeclFileName()TGraph2Dinlinestatic; Delete(Option_t *option="""")TObjectvirtual; DirectoryAutoAdd(TDirectory *)TGraph2Dvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTGraph2Dvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option=""P0"") overrideTGraph2Dvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTGraph2Dprivate; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2D-members.html:719,Clear,Clear,719,doc/master/classTGraph2D-members.html,https://root.cern,https://root.cern/doc/master/classTGraph2D-members.html,1,['Clear'],['Clear']
Usability," ROOT::Detail::RDF::RRange< PrevNodeRaw >::GetVariedFilter ; (; const std::string & ; ). inlinefinalvirtual . Return a clone of this node that acts as a Filter working with values in the variationName ""universe"". ; Reimplemented from ROOT::Detail::RDF::RNodeBase.; Definition at line 151 of file RRange.hxx. ◆ IncrChildrenCount(). template<typename PrevNodeRaw > . void ROOT::Detail::RDF::RRange< PrevNodeRaw >::IncrChildrenCount ; (; ). inlinefinalvirtual . Implements ROOT::Detail::RDF::RNodeBase.; Definition at line 106 of file RRange.hxx. ◆ operator=(). template<typename PrevNodeRaw > . RRange & ROOT::Detail::RDF::RRange< PrevNodeRaw >::operator= ; (; const RRange< PrevNodeRaw > & ; ). delete . ◆ PartialReport(). template<typename PrevNodeRaw > . void ROOT::Detail::RDF::RRange< PrevNodeRaw >::PartialReport ; (; ROOT::RDF::RCutFlowReport & ; rep); const. inlinefinalvirtual . Implements ROOT::Detail::RDF::RNodeBase.; Definition at line 97 of file RRange.hxx. ◆ Report(). template<typename PrevNodeRaw > . void ROOT::Detail::RDF::RRange< PrevNodeRaw >::Report ; (; ROOT::RDF::RCutFlowReport & ; rep); const. inlinefinalvirtual . Implements ROOT::Detail::RDF::RNodeBase.; Definition at line 95 of file RRange.hxx. ◆ StopProcessing(). template<typename PrevNodeRaw > . void ROOT::Detail::RDF::RRange< PrevNodeRaw >::StopProcessing ; (; ). inlinefinalvirtual . Implements ROOT::Detail::RDF::RNodeBase.; Definition at line 99 of file RRange.hxx. Member Data Documentation. ◆ fPrevNode. template<typename PrevNodeRaw > . PrevNode_t& ROOT::Detail::RDF::RRange< PrevNodeRaw >::fPrevNode. private . Definition at line 49 of file RRange.hxx. ◆ fPrevNodePtr. template<typename PrevNodeRaw > . const std::shared_ptr<PrevNode_t> ROOT::Detail::RDF::RRange< PrevNodeRaw >::fPrevNodePtr. private . Definition at line 48 of file RRange.hxx. tree/dataframe/inc/ROOT/RDF/RRange.hxx. ROOTDetailRDFRRange. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:02 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RRange.html:7639,Guid,Guide,7639,doc/master/classROOT_1_1Detail_1_1RDF_1_1RRange.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Detail_1_1RDF_1_1RRange.html,1,['Guid'],['Guide']
Usability," ROOT::Experimental;; 7 ; 8 ; 9TGeoNode *getNodeFromPath(TGeoNode *top, std::string path); 10{; 11 TGeoNode *node = top;; 12 std::istringstream f(path);; 13 std::string s;; 14 while (getline(f, s, '/')); 15 node = node->GetVolume()->FindNode(s.c_str());; 16 ; 17 return node;; 18}; 19 ; 20TGeoNode* testCmsGeo(); 21{; 22 TFile::SetCacheFileDir(""."");; 23 ; 24 TGeoManager::Import(""https://root.cern/files/cms.root"");; 25 ; 26 gGeoManager->DefaultColors();; 27 gGeoManager->GetVolume(""TRAK"")->InvisibleAll();; 28 gGeoManager->GetVolume(""HVP2"")->SetTransparency(20);; 29 gGeoManager->GetVolume(""HVEQ"")->SetTransparency(20);; 30 gGeoManager->GetVolume(""YE4"")->SetTransparency(10);; 31 gGeoManager->GetVolume(""YE3"")->SetTransparency(20);; 32 gGeoManager->GetVolume(""RB2"")->SetTransparency(99);; 33 gGeoManager->GetVolume(""RB3"")->SetTransparency(99);; 34 gGeoManager->GetVolume(""COCF"")->SetTransparency(99);; 35 gGeoManager->GetVolume(""HEC1"")->SetLineColor(7);; 36 gGeoManager->GetVolume(""EAP1"")->SetLineColor(7);; 37 gGeoManager->GetVolume(""EAP2"")->SetLineColor(7);; 38 gGeoManager->GetVolume(""EAP3"")->SetLineColor(7);; 39 gGeoManager->GetVolume(""EAP4"")->SetLineColor(7);; 40 gGeoManager->GetVolume(""HTC1"")->SetLineColor(2);; 41 ; 42 TGeoNode* top = gGeoManager->GetTopVolume()->FindNode(""CMSE_1"");; 43 TGeoNode* n = getNodeFromPath(top, ""MUON_1"");; 44 return top;; 45}; 46 ; 47TGeoNode* rootgeom(); 48{; 49 TGeoManager *geom = new TGeoManager(""simple1"", ""Simple geometry"");; 50 ; 51 TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);; 52 TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);; 53// //--- define some media; 54 TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);; 55 TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);; 56 ; 57 //--- define the transformations; 58 TGeoTranslation *tr1 = new TGeoTranslation(20., 0, 0.);; 59 TGeoTranslation *tr2 = new TGeoTranslation(10., 0., 0.);; 60 TGeoTranslation *tr3 = new TGeoTranslation(10., 20., 0.);; 61 TGeoTransl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/eveGeoBrowser_8C_source.html:1738,Simpl,Simple,1738,doc/master/eveGeoBrowser_8C_source.html,https://root.cern,https://root.cern/doc/master/eveGeoBrowser_8C_source.html,1,['Simpl'],['Simple']
Usability," ROOT::Fit::Init2DGausvoid Init2DGaus(const ROOT::Fit::BinData &data, TF1 *f1)compute initial parameter for 2D gaussian function given the fit data Set the sigma limits for zero t...Definition HFitInterface.cxx:388; ROOT::Fit::UnBinFitTFitResultPtr UnBinFit(ROOT::Fit::UnBinData *data, TF1 *f1, Foption_t &option, const ROOT::Math::MinimizerOptions &moption)fit an unbin data set (from tree or from histogram buffer) using a TF1 pointer and fit options.Definition HFitImpl.cxx:821; ROOT::Fit::EFitObjectTypeEFitObjectTypeDefinition HFitInterface.h:48; ROOT::Fit::EFitObjectType::kGraph@ kGraph; ROOT::Fit::EFitObjectType::kHistogram@ kHistogram; ROOT::Fit::FillDatavoid FillData(BinData &dv, const TH1 *hist, TF1 *func=nullptr)fill the data vector from a TH1.Definition HFitInterface.cxx:107; ROOT::Fit::InitExpovoid InitExpo(const ROOT::Fit::BinData &data, TF1 *f1)compute initial parameter for an exponential function given the fit data Set the constant and slope a...Definition HFitInterface.cxx:267; ROOT::Fit::InitGausvoid InitGaus(const ROOT::Fit::BinData &data, TF1 *f1)compute initial parameter for gaussian function given the fit data Set the sigma limits for zero top ...Definition HFitInterface.cxx:306; ROOT::Fit::EChisquareTypeEChisquareTypeDefinition HFitInterface.h:53; ROOT::Fit::EChisquareType::kPLikeRatio@ kPLikeRatio; ROOT::Fit::EChisquareType::kNeyman@ kNeyman; ROOT::Fit::EChisquareType::kPearson@ kPearson; ROOT::Fit::GetConfidenceIntervalsbool GetConfidenceIntervals(const TH1 *h1, const ROOT::Fit::FitResult &r, TGraphErrors *gr, double cl=0.95)compute confidence intervals at level cl for a fitted histogram h1 in a TGraphErrors grDefinition HFitInterface.cxx:965; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; Foption_tDefinition Foption.h:24. histhistincHFitInterface.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitInterface_8h_source.html:12446,Guid,Guide,12446,doc/master/HFitInterface_8h_source.html,https://root.cern,https://root.cern/doc/master/HFitInterface_8h_source.html,1,['Guid'],['Guide']
Usability, ROOT::RBrowserEditorWidget::GetKind ; (; ); const. inlineoverridevirtual . Implements ROOT::RBrowserWidget.; Definition at line 75 of file RBrowser.cxx. ◆ GetTitle(). std::string ROOT::RBrowserEditorWidget::GetTitle ; (; ). inlineoverridevirtual . Reimplemented from ROOT::RBrowserWidget.; Definition at line 76 of file RBrowser.cxx. ◆ GetUrl(). std::string ROOT::RBrowserEditorWidget::GetUrl ; (; ). inlineoverridevirtual . Implements ROOT::RBrowserWidget.; Definition at line 77 of file RBrowser.cxx. ◆ ResetConn(). void ROOT::RBrowserEditorWidget::ResetConn ; (; ). inlineoverridevirtual . Reimplemented from ROOT::RBrowserWidget.; Definition at line 73 of file RBrowser.cxx. ◆ SendWidgetContent(). std::string ROOT::RBrowserEditorWidget::SendWidgetContent ; (; ). inlineoverridevirtual . Reimplemented from ROOT::RBrowserWidget.; Definition at line 121 of file RBrowser.cxx. ◆ Show(). void ROOT::RBrowserEditorWidget::Show ; (; const std::string & ; ). inlineoverridevirtual . Implements ROOT::RBrowserWidget.; Definition at line 79 of file RBrowser.cxx. Member Data Documentation. ◆ fContent. std::string ROOT::RBrowserEditorWidget::fContent. Definition at line 66 of file RBrowser.cxx. ◆ fFileName. std::string ROOT::RBrowserEditorWidget::fFileName. Definition at line 65 of file RBrowser.cxx. ◆ fFirstSend. bool ROOT::RBrowserEditorWidget::fFirstSend {false}. ! if editor content was send at least once ; Definition at line 67 of file RBrowser.cxx. ◆ fIsEditor. bool ROOT::RBrowserEditorWidget::fIsEditor {true}. ! either editor or image viewer ; Definition at line 63 of file RBrowser.cxx. ◆ fItemPath. std::string ROOT::RBrowserEditorWidget::fItemPath. ! item path in the browser ; Definition at line 68 of file RBrowser.cxx. ◆ fTitle. std::string ROOT::RBrowserEditorWidget::fTitle. Definition at line 64 of file RBrowser.cxx. gui/browserv7/src/RBrowser.cxx. ROOTRBrowserEditorWidget. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:58 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RBrowserEditorWidget.html:4361,Guid,Guide,4361,doc/master/classROOT_1_1RBrowserEditorWidget.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RBrowserEditorWidget.html,1,['Guid'],['Guide']
Usability, ROOT::RDF::RCsvDS::fgDoubleRegex1. staticprivate . Definition at line 43 of file RCsvDS.hxx. ◆ fgDoubleRegex2. const TRegexp ROOT::RDF::RCsvDS::fgDoubleRegex2. staticprivate . Definition at line 43 of file RCsvDS.hxx. ◆ fgDoubleRegex3. const TRegexp ROOT::RDF::RCsvDS::fgDoubleRegex3. staticprivate . Definition at line 43 of file RCsvDS.hxx. ◆ fgFalseRegex. const TRegexp ROOT::RDF::RCsvDS::fgFalseRegex. staticprivate . Definition at line 43 of file RCsvDS.hxx. ◆ fgIntRegex. const TRegexp ROOT::RDF::RCsvDS::fgIntRegex. staticprivate . Definition at line 43 of file RCsvDS.hxx. ◆ fgTrueRegex. const TRegexp ROOT::RDF::RCsvDS::fgTrueRegex. staticprivate . Definition at line 43 of file RCsvDS.hxx. ◆ fHeaders. std::vector<std::string> ROOT::RDF::RCsvDS::fHeaders. private . Definition at line 53 of file RCsvDS.hxx. ◆ fLinesChunkSize. const Long64_t ROOT::RDF::RCsvDS::fLinesChunkSize. private . Definition at line 50 of file RCsvDS.hxx. ◆ fLong64EvtValues. std::vector<std::vector<Long64_t> > ROOT::RDF::RCsvDS::fLong64EvtValues. private . Definition at line 60 of file RCsvDS.hxx. ◆ fNSlots. unsigned int ROOT::RDF::RCsvDS::fNSlots = 0U. private . Definition at line 47 of file RCsvDS.hxx. ◆ fProcessedLines. ULong64_t ROOT::RDF::RCsvDS::fProcessedLines = 0ULL. private . Definition at line 52 of file RCsvDS.hxx. ◆ fReadHeaders. bool ROOT::RDF::RCsvDS::fReadHeaders = false. private . Definition at line 46 of file RCsvDS.hxx. ◆ fRecords. std::vector<Record_t> ROOT::RDF::RCsvDS::fRecords. private . Definition at line 58 of file RCsvDS.hxx. ◆ fStringEvtValues. std::vector<std::vector<std::string> > ROOT::RDF::RCsvDS::fStringEvtValues. private . Definition at line 61 of file RCsvDS.hxx. Libraries for ROOT::RDF::RCsvDS:. [legend]; The documentation for this class was generated from the following files:; tree/dataframe/inc/ROOT/RCsvDS.hxx; tree/dataframe/src/RCsvDS.cxx. ROOTRDFRCsvDS. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:27 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RCsvDS.html:17787,Guid,Guide,17787,doc/master/classROOT_1_1RDF_1_1RCsvDS.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RCsvDS.html,1,['Guid'],['Guide']
Usability," ROOT; » HIST; » HIST; » THnT<unsigned short>. class THnT<unsigned short>: public THn. Helper struct to hold one dimension's bin range for THnBinIter. Function Members (Methods); public:. virtual~THnT<unsigned short>(); voidTObject::AbstractMethod(const char* method) const; voidTHnBase::Add(const THnBase* h, Double_t c = 1.); voidTHnBase::Add(const TH1* hist, Double_t c = 1.); voidTHn::AddBinContent(const Int_t* idx, Double_t v = 1.); virtual voidTHn::AddBinContent(Long64_t bin, Double_t v = 1.); virtual voidTHn::AddBinError2(Long64_t bin, Double_t e2); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTHnBase::Browse(TBrowser* b); voidTHnBase::CalculateErrors(Bool_t calc = kTRUE); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; Double_tTHnBase::ComputeIntegral(); virtual voidTNamed::Copy(TObject& named) const; static THn*THn::CreateHn(const char* name, const char* title, const TH1* h1); static THn*THn::CreateHn(const char* name, const char* title, const THnBase* hn); virtual ROOT::THnBaseBinIter*THn::CreateIter(Bool_t respectAxisRange) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); voidTHnBase::Divide(const THnBase* h); voidTHnBase::Divide(const THnBase* h1, const THnBase* h2, Double_t c1 = 1., Double_t c2 = 1., Option_t* option = """"); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THnT_unsigned_short_.html:1028,Clear,Clear,1028,root/html602/THnT_unsigned_short_.html,https://root.cern,https://root.cern/root/html602/THnT_unsigned_short_.html,2,['Clear'],['Clear']
Usability, R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGCompositeFrame. ◆ StreamerNVirtual(). void TSessionServerFrame::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 233 of file TSessionViewer.h. ◆ Update(). void TSessionServerFrame::Update ; (; TSessionDescription * ; desc). Update fields with values from session description desc. ; Definition at line 775 of file TSessionViewer.cxx. Member Data Documentation. ◆ fBtnAdd. TGTextButton* TSessionServerFrame::fBtnAdd. private . Definition at line 192 of file TSessionViewer.h. ◆ fBtnConnect. TGTextButton* TSessionServerFrame::fBtnConnect. private . Definition at line 193 of file TSessionViewer.h. ◆ fFrmNewServer. TGCompositeFrame* TSessionServerFrame::fFrmNewServer. private . Definition at line 183 of file TSessionViewer.h. ◆ fLogLevel. TGNumberEntry* TSessionServerFrame::fLogLevel. private . Definition at line 187 of file TSessionViewer.h. ◆ fNumPort. TGNumberEntry* TSessionServerFrame::fNumPort. private . Definition at line 186 of file TSessionViewer.h. ◆ fSync. TGCheckButton* TSessionServerFrame::fSync. private . Definition at line 190 of file TSessionViewer.h. ◆ fTxtAddress. TGTextEntry* TSessionServerFrame::fTxtAddress. private . Definition at line 185 of file TSessionViewer.h. ◆ fTxtConfig. TGTextEntry* TSessionServerFrame::fTxtConfig. private . Definition at line 188 of file TSessionViewer.h. ◆ fTxtName. TGTextEntry* TSessionServerFrame::fTxtName. private . Definition at line 184 of file TSessionViewer.h. ◆ fTxtUsrName. TGTextEntry* TSessionServerFrame::fTxtUsrName. private . Definition at line 189 of file TSessionViewer.h. ◆ fViewer. TSessionViewer* TSessionServerFrame::fViewer. private . Definition at line 191 of file TSessionViewer.h. gui/sessionviewer/inc/TSessionViewer.h; gui/sessionviewer/src/TSessionViewer.cxx. TSessionServerFrame. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:27 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSessionServerFrame.html:39280,Guid,Guide,39280,doc/master/classTSessionServerFrame.html,https://root.cern,https://root.cern/doc/master/classTSessionServerFrame.html,1,['Guid'],['Guide']
Usability," R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TBinomialEfficiencyFitter::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 73 of file TBinomialEfficiencyFitter.h. Member Data Documentation. ◆ fAverage. Bool_t TBinomialEfficiencyFitter::fAverage. protected . True if the fit function must be averaged over the bin. ; Definition at line 50 of file TBinomialEfficiencyFitter.h. ◆ fDenominator. TH1* TBinomialEfficiencyFitter::fDenominator. protected . Denominator histogram. ; Definition at line 45 of file TBinomialEfficiencyFitter.h. ◆ fEpsilon. Double_t TBinomialEfficiencyFitter::fEpsilon. protected . Precision required for function integration (option ""I"") ; Definition at line 48 of file TBinomialEfficiencyFitter.h. ◆ fFitDone. Bool_t TBinomialEfficiencyFitter::fFitDone. protected . Set to kTRUE when the fit has been done. ; Definition at line 49 of file TBinomialEfficiencyFitter.h. ◆ fFitter. ROOT::Fit::Fitter* TBinomialEfficiencyFitter::fFitter. protected . pointer to the real fitter ; Definition at line 52 of file TBinomialEfficiencyFitter.h. ◆ fFunction. TF1* TBinomialEfficiencyFitter::fFunction. protected . Function to fit. ; Definition at line 47 of file TBinomialEfficiencyFitter.h. ◆ fNumerator. TH1* TBinomialEfficiencyFitter::fNumerator. protected . Numerator histogram. ; Definition at line 46 of file TBinomialEfficiencyFitter.h. ◆ fRange. Bool_t TBinomialEfficiencyFitter::fRange. protected . True if the fit range must be taken from the function range. ; Definition at line 51 of file TBinomialEfficiencyFitter.h. Libraries for TBinomialEfficiencyFitter:. [legend]; The documentation for this class was generated from the following files:; hist/hist/inc/TBinomialEfficiencyFitter.h; hist/hist/src/TBinomialEfficiencyFitter.cxx. TBinomialEfficiencyFitter. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBinomialEfficiencyFitter.html:21310,Guid,Guide,21310,doc/master/classTBinomialEfficiencyFitter.html,https://root.cern,https://root.cern/doc/master/classTBinomialEfficiencyFitter.html,1,['Guid'],['Guide']
Usability, R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TTVRecord::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 72 of file TTVSession.h. Member Data Documentation. ◆ fAutoexec. bool TTVRecord::fAutoexec. Autoexecute user code command. ; Definition at line 45 of file TTVSession.h. ◆ fCut. TString TTVRecord::fCut. Cut expression. ; Definition at line 39 of file TTVSession.h. ◆ fCutAlias. TString TTVRecord::fCutAlias. Cut alias. ; Definition at line 40 of file TTVSession.h. ◆ fCutEnabled. bool TTVRecord::fCutEnabled. True if current cut is active. ; Definition at line 43 of file TTVSession.h. ◆ fName. TString TTVRecord::fName. Name of this record. ; Definition at line 32 of file TTVSession.h. ◆ fOption. TString TTVRecord::fOption. Graphic option. ; Definition at line 41 of file TTVSession.h. ◆ fScanRedirected. bool TTVRecord::fScanRedirected. Redirect switch. ; Definition at line 42 of file TTVSession.h. ◆ fUserCode. TString TTVRecord::fUserCode. Command executed when record is connected. ; Definition at line 44 of file TTVSession.h. ◆ fX. TString TTVRecord::fX. X expression. ; Definition at line 33 of file TTVSession.h. ◆ fXAlias. TString TTVRecord::fXAlias. X alias. ; Definition at line 34 of file TTVSession.h. ◆ fY. TString TTVRecord::fY. Y expression. ; Definition at line 35 of file TTVSession.h. ◆ fYAlias. TString TTVRecord::fYAlias. Y alias. ; Definition at line 36 of file TTVSession.h. ◆ fZ. TString TTVRecord::fZ. Z expression. ; Definition at line 37 of file TTVSession.h. ◆ fZAlias. TString TTVRecord::fZAlias. Z alias. ; Definition at line 38 of file TTVSession.h. Libraries for TTVRecord:. [legend]; The documentation for this class was generated from the following files:; tree/treeviewer/inc/TTVSession.h; tree/treeviewer/src/TTVSession.cxx. TTVRecord. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:41 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTVRecord.html:17499,Guid,Guide,17499,doc/master/classTTVRecord.html,https://root.cern,https://root.cern/doc/master/classTTVRecord.html,1,['Guid'],['Guide']
Usability," Randomize(double alpha, double beta, Double_t& seed); Randomize matrix element values. void TMatrixTBase<Element> Streamer(TBuffer& b); Stream an object of class TMatrixTBase<Element>. template<class Element> Element TMatrixTBase<Element> SetTol(double newTol). Element * GetElements(). Int_t GetRowLwb() const; { return fRowLwb; }. Int_t GetRowUpb() const; { return fNrows+fRowLwb-1; }. Int_t GetNrows() const; { return fNrows; }. Int_t GetColLwb() const; { return fColLwb; }. Int_t GetColUpb() const; { return fNcols+fColLwb-1; }. Int_t GetNcols() const; { return fNcols; }. Int_t GetNoElements() const; { return fNelems; }. Element GetTol() const; { return fTol; }. const Element * GetMatrixArray() const. Element * GetMatrixArray(). const Int_t * GetRowIndexArray() const. Int_t * GetRowIndexArray(). const Int_t * GetColIndexArray() const. Int_t * GetColIndexArray(). TMatrixTBase<Element> & SetRowIndexArray(Int_t* data). TMatrixTBase<Element> & SetColIndexArray(Int_t* data). void Clear(Option_t* option = """"). void Invalidate(); { SetBit(kStatus); }. void MakeValid(); { ResetBit(kStatus); }. Bool_t IsValid() const; { return !TestBit(kStatus); }. Bool_t IsOwner() const; { return fIsOwner; }. TMatrixTBase<Element> & GetSub(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, TMatrixTBase<double>& target, Option_t* option = ""S"") const. TMatrixTBase<Element> & ResizeTo(Int_t nrows, Int_t ncols, Int_t nr_nonzeros = -1). TMatrixTBase<Element> & ResizeTo(Int_t row_lwb, Int_t row_upb, Int_t col_lwb, Int_t col_upb, Int_t nr_nonzeros = -1). Double_t Determinant() const; { AbstractMethod(""Determinant()""); return 0.; }. void Determinant(Double_t& d1, Double_t& d2) const; { AbstractMethod(""Determinant()""); d1 = 0.; d2 = 0.; }. Element NormInf() const; { return RowNorm(); }. Element Norm1() const; { return ColNorm(); }. Element operator()(Int_t rown, Int_t coln) const. Element & operator()(Int_t rown, Int_t coln). » Last changed: root/matrix:$Id: TMatrixTBase.h 20882 2007-11-19 11",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMatrixTBase_double_.html:21299,Clear,Clear,21299,root/html528/TMatrixTBase_double_.html,https://root.cern,https://root.cern/root/html528/TMatrixTBase_double_.html,3,['Clear'],['Clear']
Usability," Read a TTree | ROOT a Data analysis Framework. Menu. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git PrimerCreating a Pull Request; A suggested work flow for distributed projects: NoSY; Git How Tos; Git Tips and Tricks; Github ssh key. Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. . Enter your keywords . ; View the results at Google, or enable JavaScript to view them here. . ; Download . ; Download ROOT . ; All Releases . ; Documentation . ; Reference Manual . ; User's Guides . ; HowTo . ; Courses . ; Building ROOT . ; Tutorials . ; Javascript Root . ; ROOT and Spark . ; Publications . ; FAQ . ; News . ; Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses » Introductory Tutorials Using a Macro to Read a TTree. Why using a macro?; As real analyses don't fit into simple TTree::Draw()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/using-macro-read-ttree.html:1019,Guid,Guides,1019,d/using-macro-read-ttree.html,https://root.cern,https://root.cern/d/using-macro-read-ttree.html,1,['Guid'],['Guides']
Usability," Read n-tuples in distinct workers, fill histograms, merge them and fit ;  mt103_fillNtupleFromMultipleThreads.C Fill the same TNtuple from different threads ;  mt201_parallelHistoFill.C Parallel fill of a histogram ;  mt301_TTaskGroupSimple.C Shows how to run items of work asynchronously with a TTaskGroup ;  mt304_fillHistos.CFill histograms in parallel with automatic binning ;  mtbb001_fillHistos.C Fill histograms in parallel and write them on file ;  mtbb101_fillNtuples.C Fill n-tuples in distinct workers ;  mtbb201_parallelHistoFill.C Parallel fill of a histogram ;  ► net;  alien.C Example of use of the TAlien class (an implementation of TGrid) ;  authclient.CThis macro should be run together with authserv.C to test authentication between two remote ROOT sessions ;  authserv.CThis macro should be run together with authclient.C to test authentication between two remote ROOT sessions ;  fastMergeServer.CThis script shows how to make a simple iterative server that can receive TMemFile from multiple clients and merge them into a single file without block ;  hclient.CClient program which creates and fills a histogram ;  hclientbonj.CClient program which creates and fills a histogram ;  hcons.CHistogram consumer script ;  hprod.CHistogram producer script ;  hserv.CServer program which waits for two clients to connect ;  hserv2.CThis script shows how to make a simple iterative server that can accept connections while handling currently open connections ;  hserv2bonj.CThis script shows how to make a simple iterative server that can accept connections while handling currently open connections ;  LDAPExample.C;  parallelMergeClient.CClient program which creates and fills 2 histograms and a TTree ;  parallelMergeServer.CThis script shows how to make a simple iterative server that can accept connections while handling currently open connections ;  parallelMergeTest.C;  pclient.CClient program to test parallel sockets ;  pserv.CServer program to test parallel sockets ;  spy.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v616/files.html:140789,simpl,simple,140789,doc/v616/files.html,https://root.cern,https://root.cern/doc/v616/files.html,1,['simpl'],['simple']
Usability," Reimplemented from TGeoBBox.; Definition at line 629 of file TGeoCompositeShape.cxx. ◆ SavePrimitive(). void TGeoCompositeShape::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save a primitive as a C++ statement(s) on output stream ""out"". ; Reimplemented from TGeoBBox.; Definition at line 531 of file TGeoCompositeShape.cxx. ◆ SetDimensions(). void TGeoCompositeShape::SetDimensions ; (; Double_t * ; ). inlineoverridevirtual . Reimplemented from TGeoBBox.; Definition at line 79 of file TGeoCompositeShape.h. ◆ SetPoints() [1/2]. void TGeoCompositeShape::SetPoints ; (; Double_t * ; points); const. overridevirtual . create points for a composite shape ; Reimplemented from TGeoBBox.; Definition at line 548 of file TGeoCompositeShape.cxx. ◆ SetPoints() [2/2]. void TGeoCompositeShape::SetPoints ; (; Float_t * ; points); const. overridevirtual . create points for a composite shape ; Reimplemented from TGeoBBox.; Definition at line 557 of file TGeoCompositeShape.cxx. ◆ Sizeof3D(). void TGeoCompositeShape::Sizeof3D ; (; ); const. overridevirtual . compute size of this 3D object ; Reimplemented from TGeoBBox.; Definition at line 566 of file TGeoCompositeShape.cxx. ◆ Streamer(). void TGeoCompositeShape::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGeoBBox. ◆ StreamerNVirtual(). void TGeoCompositeShape::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 84 of file TGeoCompositeShape.h. Member Data Documentation. ◆ fNode. TGeoBoolNode* TGeoCompositeShape::fNode. private . Definition at line 30 of file TGeoCompositeShape.h. Libraries for TGeoCompositeShape:. [legend]; The documentation for this class was generated from the following files:; geom/geom/inc/TGeoCompositeShape.h; geom/geom/src/TGeoCompositeShape.cxx. TGeoCompositeShape. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:02 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoCompositeShape.html:45270,Guid,Guide,45270,doc/master/classTGeoCompositeShape.html,https://root.cern,https://root.cern/doc/master/classTGeoCompositeShape.html,1,['Guid'],['Guide']
Usability," Reimplemented from TGeoPatternFinder.; Definition at line 1260 of file TGeoPatternFinder.cxx. ◆ MakeCopy(). TGeoPatternFinder * TGeoPatternParaZ::MakeCopy ; (; Bool_t ; reflect = kFALSE). overridevirtual . Make a copy of this finder. Reflect by Z if required. ; Implements TGeoPatternFinder.; Definition at line 1299 of file TGeoPatternFinder.cxx. ◆ operator=(). TGeoPatternParaZ & TGeoPatternParaZ::operator= ; (; const TGeoPatternParaZ & ; pf). assignment operator ; Definition at line 1230 of file TGeoPatternFinder.cxx. ◆ SavePrimitive(). void TGeoPatternParaZ::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save a primitive as a C++ statement(s) on output stream ""out"". ; Reimplemented from TObject.; Definition at line 1311 of file TGeoPatternFinder.cxx. ◆ Streamer(). void TGeoPatternParaZ::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGeoPatternFinder. ◆ StreamerNVirtual(). void TGeoPatternParaZ::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 303 of file TGeoPatternFinder.h. ◆ UpdateMatrix(). void TGeoPatternParaZ::UpdateMatrix ; (; Int_t ; idiv, . TGeoHMatrix & ; matrix . ); const. overridevirtual . Fills external matrix with the local one corresponding to the given division index. ; Reimplemented from TGeoPatternFinder.; Definition at line 1338 of file TGeoPatternFinder.cxx. Member Data Documentation. ◆ fTxz. Double_t TGeoPatternParaZ::fTxz = 0. private . Definition at line 279 of file TGeoPatternFinder.h. ◆ fTyz. Double_t TGeoPatternParaZ::fTyz = 0. private . Definition at line 280 of file TGeoPatternFinder.h. Libraries for TGeoPatternParaZ:. [legend]; The documentation for this class was generated from the following files:; geom/geom/inc/TGeoPatternFinder.h; geom/geom/src/TGeoPatternFinder.cxx. TGeoPatternParaZ. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:08 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternParaZ.html:18601,Guid,Guide,18601,doc/master/classTGeoPatternParaZ.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternParaZ.html,1,['Guid'],['Guide']
Usability," Reimplemented from TGeoPatternFinder.; Definition at line 1449 of file TGeoPatternFinder.cxx. ◆ MakeCopy(). TGeoPatternFinder * TGeoPatternTrapZ::MakeCopy ; (; Bool_t ; reflect = kFALSE). overridevirtual . Make a copy of this finder. Reflect by Z if required. ; Implements TGeoPatternFinder.; Definition at line 1488 of file TGeoPatternFinder.cxx. ◆ operator=(). TGeoPatternTrapZ & TGeoPatternTrapZ::operator= ; (; const TGeoPatternTrapZ & ; pf). assignment operator ; Definition at line 1418 of file TGeoPatternFinder.cxx. ◆ SavePrimitive(). void TGeoPatternTrapZ::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save a primitive as a C++ statement(s) on output stream ""out"". ; Reimplemented from TObject.; Definition at line 1500 of file TGeoPatternFinder.cxx. ◆ Streamer(). void TGeoPatternTrapZ::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGeoPatternFinder. ◆ StreamerNVirtual(). void TGeoPatternTrapZ::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 341 of file TGeoPatternFinder.h. ◆ UpdateMatrix(). void TGeoPatternTrapZ::UpdateMatrix ; (; Int_t ; idiv, . TGeoHMatrix & ; matrix . ); const. overridevirtual . Fills external matrix with the local one corresponding to the given division index. ; Reimplemented from TGeoPatternFinder.; Definition at line 1527 of file TGeoPatternFinder.cxx. Member Data Documentation. ◆ fTxz. Double_t TGeoPatternTrapZ::fTxz = 0. private . Definition at line 315 of file TGeoPatternFinder.h. ◆ fTyz. Double_t TGeoPatternTrapZ::fTyz = 0. private . Definition at line 316 of file TGeoPatternFinder.h. Libraries for TGeoPatternTrapZ:. [legend]; The documentation for this class was generated from the following files:; geom/geom/inc/TGeoPatternFinder.h; geom/geom/src/TGeoPatternFinder.cxx. TGeoPatternTrapZ. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:08 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPatternTrapZ.html:18903,Guid,Guide,18903,doc/master/classTGeoPatternTrapZ.html,https://root.cern,https://root.cern/doc/master/classTGeoPatternTrapZ.html,1,['Guid'],['Guide']
Usability," Reimplemented from TGraph.; Definition at line 646 of file TGraphBentErrors.cxx. ◆ UpdateArrays(). void TGraphBentErrors::UpdateArrays ; (; const std::vector< Int_t > & ; sorting_indices, . Int_t ; numSortedPoints, . Int_t ; low . ). overrideprotectedvirtual . Update the fX, fY, fEXlow, fEXhigh, fEXlowd, fEXhighd, fEYlow, fEYhigh, fEYlowd, ; and fEYhighd arrays with the sorted values. ; Reimplemented from TGraph.; Definition at line 665 of file TGraphBentErrors.cxx. Member Data Documentation. ◆ fEXhigh. Double_t* TGraphBentErrors::fEXhigh. protected . [fNpoints] array of X high errors ; Definition at line 29 of file TGraphBentErrors.h. ◆ fEXhighd. Double_t* TGraphBentErrors::fEXhighd. protected . [fNpoints] array of X high displacements ; Definition at line 34 of file TGraphBentErrors.h. ◆ fEXlow. Double_t* TGraphBentErrors::fEXlow. protected . [fNpoints] array of X low errors ; Definition at line 28 of file TGraphBentErrors.h. ◆ fEXlowd. Double_t* TGraphBentErrors::fEXlowd. protected . [fNpoints] array of X low displacements ; Definition at line 33 of file TGraphBentErrors.h. ◆ fEYhigh. Double_t* TGraphBentErrors::fEYhigh. protected . [fNpoints] array of Y high errors ; Definition at line 31 of file TGraphBentErrors.h. ◆ fEYhighd. Double_t* TGraphBentErrors::fEYhighd. protected . [fNpoints] array of Y high displacements ; Definition at line 36 of file TGraphBentErrors.h. ◆ fEYlow. Double_t* TGraphBentErrors::fEYlow. protected . [fNpoints] array of Y low errors ; Definition at line 30 of file TGraphBentErrors.h. ◆ fEYlowd. Double_t* TGraphBentErrors::fEYlowd. protected . [fNpoints] array of Y low displacements ; Definition at line 35 of file TGraphBentErrors.h. Libraries for TGraphBentErrors:. [legend]; The documentation for this class was generated from the following files:; hist/hist/inc/TGraphBentErrors.h; hist/hist/src/TGraphBentErrors.cxx. TGraphBentErrors. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphBentErrors.html:46580,Guid,Guide,46580,doc/master/classTGraphBentErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphBentErrors.html,1,['Guid'],['Guide']
Usability," Reimplemented from TH1.; Definition at line 567 of file TH1.h. ◆ SetBinsLength(). void TH1I::SetBinsLength ; (; Int_t ; n = -1). overridevirtual . Set total number of bins including under/overflow Reallocate bin contents array. ; Reimplemented from TH1.; Definition at line 9950 of file TH1.cxx. ◆ Streamer(). void TH1I::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TH1. ◆ StreamerNVirtual(). void TH1I::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 557 of file TH1.h. ◆ UpdateBinContent(). void TH1I::UpdateBinContent ; (; Int_t ; bin, . Double_t ; content . ). inlineoverrideprotectedvirtual . Raw update of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ; Reimplemented from TH1.; Definition at line 568 of file TH1.h. Friends And Related Symbol Documentation. ◆ operator* [1/3]. TH1I operator* ; (; const TH1I & ; h1, . const TH1I & ; h2 . ). friend . Operator *. ; Definition at line 10004 of file TH1.cxx. ◆ operator* [2/3]. TH1I operator* ; (; const TH1I & ; h1, . Double_t ; c1 . ). friend . Definition at line 573 of file TH1.h. ◆ operator* [3/3]. TH1I operator* ; (; Double_t ; c1, . const TH1I & ; h1 . ). friend . Operator *. ; Definition at line 9971 of file TH1.cxx. ◆ operator+. TH1I operator+ ; (; const TH1I & ; h1, . const TH1I & ; h2 . ). friend . Operator +. ; Definition at line 9982 of file TH1.cxx. ◆ operator-. TH1I operator- ; (; const TH1I & ; h1, . const TH1I & ; h2 . ). friend . Operator -. ; Definition at line 9993 of file TH1.cxx. ◆ operator/. TH1I operator/ ; (; const TH1I & ; h1, . const TH1I & ; h2 . ). friend . Operator /. ; Definition at line 10015 of file TH1.cxx. Libraries for TH1I:. [legend]; The documentation for this class was generated from the following files:; hist/hist/inc/TH1.h; hist/hist/src/TH1.cxx. TH1I. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:44 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1I.html:56619,Guid,Guide,56619,doc/master/classTH1I.html,https://root.cern,https://root.cern/doc/master/classTH1I.html,1,['Guid'],['Guide']
Usability," Return ""true"" if the point (x,y) is inside the bin. ; Definition at line 1673 of file TH2Poly.cxx. ◆ SetChanged(). void TH2PolyBin::SetChanged ; (; Bool_t ; flag). inline . Definition at line 44 of file TH2Poly.h. ◆ SetContent(). void TH2PolyBin::SetContent ; (; Double_t ; content). inline . Definition at line 45 of file TH2Poly.h. ◆ Streamer(). void TH2PolyBin::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TProfile2PolyBin. ◆ StreamerNVirtual(). void TH2PolyBin::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 58 of file TH2Poly.h. Member Data Documentation. ◆ fArea. Double_t TH2PolyBin::fArea. protected . Bin area. ; Definition at line 51 of file TH2Poly.h. ◆ fChanged. Bool_t TH2PolyBin::fChanged. protected . For the 3D Painter. ; Definition at line 48 of file TH2Poly.h. ◆ fContent. Double_t TH2PolyBin::fContent. protected . Bin content. ; Definition at line 52 of file TH2Poly.h. ◆ fNumber. Int_t TH2PolyBin::fNumber. protected . Bin number of the bin in TH2Poly. ; Definition at line 49 of file TH2Poly.h. ◆ fPoly. TObject* TH2PolyBin::fPoly. protected . Object holding the polygon definition. ; Definition at line 50 of file TH2Poly.h. ◆ fXmax. Double_t TH2PolyBin::fXmax. protected . X maximum value. ; Definition at line 55 of file TH2Poly.h. ◆ fXmin. Double_t TH2PolyBin::fXmin. protected . X minimum value. ; Definition at line 53 of file TH2Poly.h. ◆ fYmax. Double_t TH2PolyBin::fYmax. protected . Y maximum value. ; Definition at line 56 of file TH2Poly.h. ◆ fYmin. Double_t TH2PolyBin::fYmin. protected . Y minimum value. ; Definition at line 54 of file TH2Poly.h. Libraries for TH2PolyBin:. [legend]; The documentation for this class was generated from the following files:; hist/hist/inc/TH2Poly.h; hist/hist/src/TH2Poly.cxx. TH2PolyBin. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:46 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2PolyBin.html:16009,Guid,Guide,16009,doc/master/classTH2PolyBin.html,https://root.cern,https://root.cern/doc/master/classTH2PolyBin.html,1,['Guid'],['Guide']
Usability," Return kTRUE if the addition was successful. ; Definition at line 198 of file TFileMerger.cxx. ◆ AddFile() [3/3]. Bool_t TFileMerger::AddFile ; (; TFile * ; source, . Bool_t ; own, . Bool_t ; cpProgress . ). protectedvirtual . Add the TFile to this file merger and give ownership of the TFile to this object (unless kFALSE is returned). ; Return kTRUE if the addition was successful. ; Definition at line 220 of file TFileMerger.cxx. ◆ AddObjectNames(). void TFileMerger::AddObjectNames ; (; const char * ; name). inline . Definition at line 101 of file TFileMerger.h. ◆ Class(). static TClass * TFileMerger::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFileMerger::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFileMerger::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 127 of file TFileMerger.h. ◆ ClearObjectNames(). void TFileMerger::ClearObjectNames ; (; ). inline . Definition at line 103 of file TFileMerger.h. ◆ DeclFileName(). static const char * TFileMerger::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 127 of file TFileMerger.h. ◆ GetCWD(). virtual const char * TFileMerger::GetCWD ; (; ). inlinevirtual . Definition at line 107 of file TFileMerger.h. ◆ GetMaxOpenedFiles(). Int_t TFileMerger::GetMaxOpenedFiles ; (; ); const. inline . Definition at line 93 of file TFileMerger.h. ◆ GetMergeList(). TList * TFileMerger::GetMergeList ; (; ). inline . Definition at line 91 of file TFileMerger.h. ◆ GetMergeOptions(). const char * TFileMerger::GetMergeOptions ; (; ). inline . Definition at line 97 of file TFileMerger.h. ◆ GetMsgPrefix(). const char * TFileMerger::GetMsgPrefix ; (; ); const. inline . Definition at line 95 of file TFileMerger.h. ◆ GetNotrees(). Bool_t TFileMerger::GetNotrees ; (; ); const. inline . Definition at line 123 of file TFileMerger.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileMerger.html:19101,Clear,ClearObjectNames,19101,doc/master/classTFileMerger.html,https://root.cern,https://root.cern/doc/master/classTFileMerger.html,1,['Clear'],['ClearObjectNames']
Usability, ReturnsName of the file containing the class declaration ; Definition at line 93 of file RooAbsPdf.h. ◆ IsA(). virtual TClass * RooAbsPdf::GenSpec::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 93 of file RooAbsPdf.h. ◆ Streamer(). virtual void RooAbsPdf::GenSpec::Streamer ; (; TBuffer & ; ). virtual . ◆ StreamerNVirtual(). void RooAbsPdf::GenSpec::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 93 of file RooAbsPdf.h. Friends And Related Symbol Documentation. ◆ RooAbsPdf. friend class RooAbsPdf. friend . Definition at line 82 of file RooAbsPdf.h. Member Data Documentation. ◆ _dsetName. TString RooAbsPdf::GenSpec::_dsetName. private . Definition at line 90 of file RooAbsPdf.h. ◆ _extended. bool RooAbsPdf::GenSpec::_extended = false. private . Definition at line 87 of file RooAbsPdf.h. ◆ _genContext. std::unique_ptr<RooAbsGenContext> RooAbsPdf::GenSpec::_genContext. private . Definition at line 83 of file RooAbsPdf.h. ◆ _init. bool RooAbsPdf::GenSpec::_init = false. private . Definition at line 91 of file RooAbsPdf.h. ◆ _nGen. Int_t RooAbsPdf::GenSpec::_nGen = 0. private . Definition at line 86 of file RooAbsPdf.h. ◆ _protoData. RooDataSet* RooAbsPdf::GenSpec::_protoData = nullptr. private . Definition at line 85 of file RooAbsPdf.h. ◆ _randProto. bool RooAbsPdf::GenSpec::_randProto = false. private . Definition at line 88 of file RooAbsPdf.h. ◆ _resampleProto. bool RooAbsPdf::GenSpec::_resampleProto = false. private . Definition at line 89 of file RooAbsPdf.h. ◆ _whatVars. RooArgSet RooAbsPdf::GenSpec::_whatVars. private . Definition at line 84 of file RooAbsPdf.h. Libraries for RooAbsPdf::GenSpec:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooAbsPdf.h; roofit/roofitcore/src/RooAbsPdf.cxx. RooAbsPdfGenSpec. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:41 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf_1_1GenSpec.html:4398,Guid,Guide,4398,doc/master/classRooAbsPdf_1_1GenSpec.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf_1_1GenSpec.html,1,['Guid'],['Guide']
Usability," ReturnsTClass describing current object ; Reimplemented from TMVA::Results.; Definition at line 82 of file ResultsRegression.h. ◆ Log(). MsgLogger & TMVA::ResultsRegression::Log ; (; ); const. inlineprivate . Definition at line 79 of file ResultsRegression.h. ◆ operator[](). const std::vector< Float_t > & TMVA::ResultsRegression::operator[] ; (; Int_t ; ievt); const. inlineoverridevirtual . Implements TMVA::Results.; Definition at line 67 of file ResultsRegression.h. ◆ QuadraticDeviation(). TH1F * TMVA::ResultsRegression::QuadraticDeviation ; (; UInt_t ; tgtNum, . Bool_t ; truncate = false, . Double_t ; truncvalue = 0. . ). Definition at line 75 of file ResultsRegression.cxx. ◆ Resize(). void TMVA::ResultsRegression::Resize ; (; Int_t ; entries). inline . Definition at line 60 of file ResultsRegression.h. ◆ SetValue(). void TMVA::ResultsRegression::SetValue ; (; std::vector< Float_t > & ; value, . Int_t ; ievt . ). Definition at line 67 of file ResultsRegression.cxx. ◆ Streamer(). void TMVA::ResultsRegression::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TMVA::Results. ◆ StreamerNVirtual(). void TMVA::ResultsRegression::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 82 of file ResultsRegression.h. Member Data Documentation. ◆ fLogger. MsgLogger* TMVA::ResultsRegression::fLogger. mutableprivate . ! message logger ; Definition at line 78 of file ResultsRegression.h. ◆ fRegValues. std::vector<std::vector<Float_t> > TMVA::ResultsRegression::fRegValues. mutableprivate . mva values (Results) ; Definition at line 77 of file ResultsRegression.h. Libraries for TMVA::ResultsRegression:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/ResultsRegression.h; tmva/tmva/src/ResultsRegression.cxx. TMVAResultsRegression. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:41 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1ResultsRegression.html:16279,Guid,Guide,16279,doc/master/classTMVA_1_1ResultsRegression.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1ResultsRegression.html,1,['Guid'],['Guide']
Usability, ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooExtendedBinding::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooExtendedBinding::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 35 of file RooExtendedBinding.h. ◆ clone(). TObject * RooExtendedBinding::clone ; (; const char * ; newname); const. inlineoverridevirtual . Implements RooAbsArg.; Definition at line 25 of file RooExtendedBinding.h. ◆ DeclFileName(). static const char * RooExtendedBinding::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 35 of file RooExtendedBinding.h. ◆ evaluate(). double RooExtendedBinding::evaluate ; (; ); const. overrideprotectedvirtual . Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 35 of file RooExtendedBinding.cxx. ◆ IsA(). TClass * RooExtendedBinding::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsReal.; Definition at line 35 of file RooExtendedBinding.h. ◆ Streamer(). void RooExtendedBinding::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsReal. ◆ StreamerNVirtual(). void RooExtendedBinding::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 35 of file RooExtendedBinding.h. Member Data Documentation. ◆ pdf. RooRealProxy RooExtendedBinding::pdf. protected . Definition at line 29 of file RooExtendedBinding.h. Libraries for RooExtendedBinding:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooExtendedBinding.h; roofit/roofitcore/src/RooExtendedBinding.cxx. RooExtendedBinding. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:52 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExtendedBinding.html:62268,Guid,Guide,62268,doc/master/classRooExtendedBinding.html,https://root.cern,https://root.cern/doc/master/classRooExtendedBinding.html,1,['Guid'],['Guide']
Usability," Rndm(Int_t)TRandominlinevirtual; RndmArray(Int_t n, Float_t *array)TRandomvirtual; RndmArray(Int_t n, Double_t *array)TRandomvirtual; SaveAs(const char *filename="""", Option_t *option="""") constTObjectvirtual; SavePrimitive(std::ostream &out, Option_t *option="""")TObjectvirtual; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetDrawOption(Option_t *option="""")TObjectvirtual; SetDtorOnly(void *obj)TObjectstatic; SetName(const char *name)TNamedvirtual; SetNameTitle(const char *name, const char *title)TNamedvirtual; SetObjectStat(Bool_t stat)TObjectstatic; SetSeed(ULong_t seed=0)TRandomvirtual; SetTitle(const char *title="""")TNamedvirtual; SetUniqueID(UInt_t uid)TObjectvirtual; Sizeof() constTNamedvirtual; Sphere(Double_t &x, Double_t &y, Double_t &z, Double_t r)TRandomvirtual; Streamer(TBuffer &) overrideTRandomvirtual; StreamerNVirtual(TBuffer &ClassDef_StreamerNVirtual_b)TRandominline; SysError(const char *method, const char *msgfmt,...) constTObjectvirtual; TestBit(UInt_t f) constTObjectinline; TestBits(UInt_t f) constTObjectinline; TNamed()TNamedinline; TNamed(const char *name, const char *title)TNamedinline; TNamed(const TString &name, const TString &title)TNamedinline; TNamed(const TNamed &named)TNamed; TObject()TObjectinline; TObject(const TObject &object)TObjectinline; TRandom(UInt_t seed=65539)TRandom; Uniform(Double_t x1=1)TRandomvirtual; Uniform(Double_t x1, Double_t x2)TRandomvirtual; UseCurrentStyle()TObjectvirtual; Warning(const char *method, const char *msgfmt,...) constTObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)TObjectvirtual; Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0) constTObjectvirtual; WriteRandom(const char *filename) constTRandomvirtual; ~TNamed()TNamedvirtual; ~TObject()TObjectvirtual; ~TRandom() overrideTRandom; ~TRandomEngine()ROOT::Math::TRandomEngineinlinevirtual. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRandom-members.html:6889,Guid,Guide,6889,doc/master/classTRandom-members.html,https://root.cern,https://root.cern/doc/master/classTRandom-members.html,1,['Guid'],['Guide']
Usability," RooAbsBinning &binning);  ; bool SetXaxis (int nbins, const double *bins);  ; bool SetXaxis (int nbins, double low, double high);  ; bool SetXaxis (TAxis *ax);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; std::shared_ptr< TStyle > style (TObject *initObject=nullptr, bool autoCreate=true) const;  ; xRooNode variations () const;  ; xRooNode vars () const;  List of variables (observables and parameters) of this node. ;  ; xRooNode Vary (const xRooNode &child);  ; RooWorkspace * ws () const;  The RooWorkspace this node belong to, if any. ;  ; template<typename T > ; T * xget () const;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; virtual void SetNameTitle (const char *name, const char *title);  Set all the TNamed parameters (name and title). ;  ; virtual Int_t Sizeof () const;  Return size of the TNamed part of the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html:8635,Clear,Clear,8635,doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1XRooFit_1_1xRooNode.html,1,['Clear'],['Clear']
Usability, RooAbsGenContext::_expectedEvents. protected . Number of expected events from extended p.d.f. ; Definition at line 80 of file RooAbsGenContext.h. ◆ _extendMode. RooAbsPdf::ExtendMode RooAbsGenContext::_extendMode. protected . Extended mode capabilities of p.d.f. ; Definition at line 83 of file RooAbsGenContext.h. ◆ _genData. RooDataSet* RooAbsGenContext::_genData = nullptr. protected . ! Data being generated ; Definition at line 87 of file RooAbsGenContext.h. ◆ _isValid. bool RooAbsGenContext::_isValid. protected . Is context in valid state? ; Definition at line 78 of file RooAbsGenContext.h. ◆ _nextProtoIndex. Int_t RooAbsGenContext::_nextProtoIndex. protected . Next prototype event to load according to LUT. ; Definition at line 82 of file RooAbsGenContext.h. ◆ _normRange. TString RooAbsGenContext::_normRange. protected . Normalization range of pdf. ; Definition at line 85 of file RooAbsGenContext.h. ◆ _protoOrder. std::vector<Int_t> RooAbsGenContext::_protoOrder. protected . LUT with traversal order of prototype data. ; Definition at line 84 of file RooAbsGenContext.h. ◆ _prototype. const RooDataSet* RooAbsGenContext::_prototype. protected . Pointer to prototype dataset. ; Definition at line 76 of file RooAbsGenContext.h. ◆ _protoVars. RooArgSet RooAbsGenContext::_protoVars. protected . Prototype observables. ; Definition at line 81 of file RooAbsGenContext.h. ◆ _theEvent. RooArgSet RooAbsGenContext::_theEvent. protected . Pointer to observable event being generated. ; Definition at line 77 of file RooAbsGenContext.h. ◆ _verbose. bool RooAbsGenContext::_verbose. protected . Verbose messaging? ; Definition at line 79 of file RooAbsGenContext.h. Libraries for RooAbsGenContext:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooAbsGenContext.h; roofit/roofitcore/src/RooAbsGenContext.cxx. RooAbsGenContext. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:40 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsGenContext.html:25867,Guid,Guide,25867,doc/master/classRooAbsGenContext.html,https://root.cern,https://root.cern/doc/master/classRooAbsGenContext.html,1,['Guid'],['Guide']
Usability," RooAbsMCStudyModule(const RooAbsMCStudyModule& other); RooAbsMCStudyModule(const char* name, const char* title); virtual~RooAbsMCStudyModule(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tdoInitializeInstance(RooMCStudy&); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsMCStudyModule.html:1277,Clear,Clear,1277,root/html526/RooAbsMCStudyModule.html,https://root.cern,https://root.cern/root/html526/RooAbsMCStudyModule.html,5,['Clear'],['Clear']
Usability," RooAbsReal & ; func, . const RooArgList & ; observables, . int ; order = 1, . std::vector< double > const & ; observableValues = {}, . double ; eps1 = 1e-6, . double ; eps2 = 1e-3 . ). static . Taylor expanding given function in terms of observables around observableValues. ; Supports expansions upto order 2. Parameters. [in]funcFunction of variables that is taylor expanded. ; [in]observablesSet of variables to perform the expansion. It's type is RooArgList to ensure that it is always ordered the same as the observableValues vector. However, duplicate observables are still not allowed. ; [in]orderOrder of the expansion (0,1,2 supported). ; [in]observableValuesCoordinates around which expansion is performed. If empty, the nominal observable values are taken, if the size matches the size of the observables RooArgSet, the values are mapped to the observables in matching order. If it contains only one element, the same single value is used for all observables. ; [in]eps1Precision for first derivative and second derivative. ; [in]eps2Precision for second partial derivative of cross-derivative. . Definition at line 242 of file RooPolyFunc.cxx. ◆ terms(). const std::vector< std::unique_ptr< RooListProxy > > & RooPolyFunc::terms ; (; ); const. inline . Definition at line 41 of file RooPolyFunc.h. ◆ variables(). const RooArgList & RooPolyFunc::variables ; (; ); const. inline . Definition at line 40 of file RooPolyFunc.h. Member Data Documentation. ◆ _terms. std::vector<std::unique_ptr<RooListProxy> > RooPolyFunc::_terms. protected . Definition at line 63 of file RooPolyFunc.h. ◆ _vars. RooListProxy RooPolyFunc::_vars. protected . Definition at line 62 of file RooPolyFunc.h. Libraries for RooPolyFunc:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooPolyFunc.h; roofit/roofitcore/src/RooPolyFunc.cxx. RooPolyFunc. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:04 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPolyFunc.html:67217,Guid,Guide,67217,doc/master/classRooPolyFunc.html,https://root.cern,https://root.cern/doc/master/classRooPolyFunc.html,1,['Guid'],['Guide']
Usability," RooAbsStudy(); RooAbsStudy(const RooAbsStudy& other); RooAbsStudy(const char* name, const char* title); virtual~RooAbsStudy(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual Bool_tattach(RooWorkspace&); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; RooLinkedList*detailedData(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual Bool_texecute(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual Bool_tfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsStudy.html:813,Clear,Clear,813,root/html526/RooAbsStudy.html,https://root.cern,https://root.cern/root/html526/RooAbsStudy.html,2,['Clear'],['Clear']
Usability," RooAcceptReject(); RooAcceptReject(const RooAcceptReject&); RooAcceptReject(const RooAbsReal& func, const RooArgSet& genVars, const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0); virtual~RooAcceptReject(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); voidRooAbsNumGenerator::attachParameters(const RooArgSet& vars); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tcanSampleCategories() const; virtual Bool_tcanSampleConditional() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual RooAbsNumGenerator*clone(const RooAbsReal& func, const RooArgSet& genVars, const RooArgSet&, const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAcceptReject.html:1319,Clear,Clear,1319,root/html526/RooAcceptReject.html,https://root.cern,https://root.cern/root/html526/RooAcceptReject.html,5,['Clear'],['Clear']
Usability," RooAdaptiveGaussKronrodIntegrator1D(); RooAdaptiveGaussKronrodIntegrator1D(const RooAdaptiveGaussKronrodIntegrator1D&); RooAdaptiveGaussKronrodIntegrator1D(const RooAbsFunc& function, const RooNumIntConfig& config); RooAdaptiveGaussKronrodIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, const RooNumIntConfig& config); virtual~RooAdaptiveGaussKronrodIntegrator1D(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAdaptiveGaussKronrodIntegrator1D.html:2394,Clear,Clear,2394,root/html526/RooAdaptiveGaussKronrodIntegrator1D.html,https://root.cern,https://root.cern/root/html526/RooAdaptiveGaussKronrodIntegrator1D.html,5,['Clear'],['Clear']
Usability," RooAdaptiveIntegratorND(); RooAdaptiveIntegratorND(const RooAbsFunc& function, const RooNumIntConfig& config); virtual~RooAdaptiveIntegratorND(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); Double_tRooAbsIntegrator::calculate(const Double_t* yvec = 0); virtual Bool_tcanIntegrate1D() const; virtual Bool_tcanIntegrate2D() const; virtual Bool_tcanIntegrateND() const; virtual Bool_tcanIntegrateOpenEnded() const; virtual Bool_tcheckLimits() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual RooAbsIntegrator*clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAdaptiveIntegratorND.html:1131,Clear,Clear,1131,root/html526/RooAdaptiveIntegratorND.html,https://root.cern,https://root.cern/root/html526/RooAdaptiveIntegratorND.html,5,['Clear'],['Clear']
Usability," RooAddGenContext(const RooAddPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); RooAddGenContext(const RooAddModel& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); virtual~RooAddGenContext(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidattach(const RooArgSet& params); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooAbsGenContext::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooAbsGenContext::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAddGenContext.html:1356,Clear,Clear,1356,root/html526/RooAddGenContext.html,https://root.cern,https://root.cern/root/html526/RooAddGenContext.html,5,['Clear'],['Clear']
Usability," RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); Bool_tRooAbsPdf::canBeExtended() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*RooAbsArg::clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Double_tcoefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; virtual Double_tcoefficient(Int_t basisIndex) const; virtual RooArgSet*coefVars(Int_t coefIdx) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode); virtual voidTNamed::Copy(TObject& named) const; static voidRooAbsArg::copyList(TList& dest, const TList& source); static UInt_tRooAbsArg::crc32(const char* data); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsAnaConvPdf.html:3917,Clear,Clear,3917,root/html526/RooAbsAnaConvPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsAnaConvPdf.html,1,['Clear'],['Clear']
Usability," RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); Bool_tRooAbsPdf::canBeExtended() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*RooAbsArg::clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode); virtual voidTNamed::Copy(TObject& named) const; static voidRooAbsArg::copyList(TList& dest, const TList& source); static UInt_tRooAbsArg::crc32(const char* data); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooCmdArg arg1, const RooCmdArg arg2 = RooCmdArg::none(), const RooCmdArg arg3 = RooCmdArg::none(), const R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsCachedPdf.html:3017,Clear,Clear,3017,root/html526/RooAbsCachedPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsCachedPdf.html,2,['Clear'],['Clear']
Usability," RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); Bool_tRooAbsPdf::canBeExtended() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Double_tRooAbsAnaConvPdf::coefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; virtual Double_tcoefficient(Int_t basisIndex) const; virtual RooArgSet*RooAbsAnaConvPdf::coefVars(Int_t coefIdx) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode); virtual voidTNamed::Copy(TObject& named) const; static voidRooAbsArg::copyList(TList& dest, const TList& source); static UInt_tRooAbsArg::crc32(const char* data); RooAbsReal*RooAbsPdf::createCdf(const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooDecay.html:2421,Clear,Clear,2421,root/html526/RooDecay.html,https://root.cern,https://root.cern/root/html526/RooDecay.html,1,['Clear'],['Clear']
Usability," RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); Bool_tRooAbsPdf::canBeExtended() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Double_tcoefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; virtual Double_tcoefficient(Int_t basisIndex) const; virtual RooArgSet*RooAbsAnaConvPdf::coefVars(Int_t coefIdx) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode); virtual voidTNamed::Copy(TObject& named) const; static voidRooAbsArg::copyList(TList& dest, const TList& source); static UInt_tRooAbsArg::crc32(const char* data); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooBCPEffDecay.html:2723,Clear,Clear,2723,root/html526/RooBCPEffDecay.html,https://root.cern,https://root.cern/root/html526/RooBCPEffDecay.html,4,['Clear'],['Clear']
Usability," RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); Bool_tRooAbsPdf::canBeExtended() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Double_tcoefAnalyticalIntegral(Int_t coef, Int_t code, const char* rangeName = 0) const; virtual Double_tcoefficient(Int_t basisIndex) const; virtual RooArgSet*coefVars(Int_t coefIdx) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode); virtual voidTNamed::Copy(TObject& named) const; static voidRooAbsArg::copyList(TList& dest, const TList& source); static UInt_tRooAbsArg::crc32(const char* data); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooArgSet& n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooBDecay.html:2621,Clear,Clear,2621,root/html526/RooBDecay.html,https://root.cern,https://root.cern/root/html526/RooBDecay.html,1,['Clear'],['Clear']
Usability," RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); Bool_tRooAbsPdf::canBeExtended() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode); virtual voidTNamed::Copy(TObject& named) const; static voidRooAbsArg::copyList(TList& dest, const TList& source); static UInt_tRooAbsArg::crc32(const char* data); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooCmdArg arg1, const RooCmdArg arg2 = RooCmdArg::none(), const RooCmdArg arg3 = RooCmdArg::none(), const RooCmdArg ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooArgusBG.html:2445,Clear,Clear,2445,root/html526/RooArgusBG.html,https://root.cern,https://root.cern/root/html526/RooArgusBG.html,49,['Clear'],['Clear']
Usability," RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore& set); const set<std::string>&RooAbsArg::attributes() const; RooAbsFunc*RooAbsReal::bindVars(const RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); Bool_tRooAbsPdf::canBeExtended() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); voidclearConvolutionWindow(); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode); RooNumIntConfig&convIntConfig(); virtual voidTNamed::Copy(TObject& named) const; static voidRooAbsArg::copyList(TList& dest, const TList& source); static UInt_tRooAbsArg::crc32(const char* data); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooCmdArg arg1, const RooCmdArg arg2 = RooCmdArg::none(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumConvPdf.html:4597,Clear,Clear,4597,root/html526/RooNumConvPdf.html,https://root.cern,https://root.cern/root/html526/RooNumConvPdf.html,1,['Clear'],['Clear']
Usability," RooArgProxy(); RooArgProxy(const RooArgProxy&); RooArgProxy(const char* name, RooAbsArg* owner, const RooArgProxy& other); RooArgProxy(const char* name, const char* desc, RooAbsArg* owner, Bool_t valueServer, Bool_t shapeServer, Bool_t proxyOwnsArg = kFALSE); RooArgProxy(const char* name, const char* desc, RooAbsArg* owner, RooAbsArg& arg, Bool_t valueServer, Bool_t shapeServer, Bool_t proxyOwnsArg = kFALSE); virtual~RooArgProxy(); RooAbsArg*absArg() const; voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooArgProxy.html:1554,Clear,Clear,1554,root/html526/RooArgProxy.html,https://root.cern,https://root.cern/root/html526/RooArgProxy.html,5,['Clear'],['Clear']
Usability," RooArgSet& vars, const RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); Bool_tcacheAlpha() const; virtual const char*RooAbsArg::cacheUniqueSuffix() const; Bool_tRooAbsPdf::canBeExtended() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual RooAbsReal*RooAbsPdf::createChi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooIntegralMorph.html:6580,clear,clearValueDirty,6580,root/html532/RooIntegralMorph.html,https://root.cern,https://root.cern/root/html532/RooIntegralMorph.html,1,['clear'],['clearValueDirty']
Usability," RooArgSet&, RooLinkedList&); virtual voidprintCompactTreeHook(ostream&, const char*); virtual Bool_tredirectServersHook(const RooAbsCollection&, Bool_t, Bool_t, Bool_t); voidreset(); Int_tsetObj(const RooArgSet* nset, RooAbsCacheElement* obj, const TNamed* isetRangeName = 0); Int_tsetObj(const RooArgSet* nset, const RooArgSet* iset, RooAbsCacheElement* obj, const TNamed* isetRangeName = 0); virtual voidShowMembers(TMemberInspector& insp, char* parent); voidsterilize(); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; protected:. Int_t_lastIndexLast slot accessed; Int_t_maxSizeMaximum size; RooNormSetCache*_nsetCache! Normalization/Integration set manager; RooAbsCacheElement**_object! Payload; RooAbsArg*RooAbsCache::_ownerPointer to owning RooAbsArg; Int_t_sizeActual use. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void RooCacheManager<T> reset(); Clear the cache. void RooCacheManager<T> sterilize(); Clear the cache payload but retain slot mapping w.r.t to; normalization and integration sets. Int_t RooCacheManager<T> setObj(const RooArgSet* nset, const RooArgSet* iset, RooAbsCacheElement* obj, const TNamed* isetRangeName = 0); Insert payload object 'obj' in cache indexed on nset,iset and isetRangeName. T* RooCacheManager<T> getObj(const RooArgSet* nset, const RooArgSet* iset, Int_t* sterileIdx = 0, const TNamed* isetRangeName = 0); Retrieve payload object indexed on nset,uset amd isetRangeName; If sterileIdx is not null, it is set to the index of the sterile; slot in cacse such a slot is recycled. T* RooCacheManager<T> getObjByIndex(Int_t index) const; Retrieve payload object by slot index. const RooNameSet* RooCacheManager<T> nameSet1ByIndex(Int_t index) const; Retrieve RooNameSet associated with slot at given index. const RooNameSet* RooCacheManager<T> nameSet2ByIndex(Int_t index) const; Retrieve RooNameSet associated with slot at given index. T* getObj(const RooArgSet* nset, Int_t* st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCacheManager_RooAbsCacheElement_.html:3307,Clear,Clear,3307,root/html526/RooCacheManager_RooAbsCacheElement_.html,https://root.cern,https://root.cern/root/html526/RooCacheManager_RooAbsCacheElement_.html,1,['Clear'],['Clear']
Usability," RooArgSet* nset = 0, Bool_t clipInvalid = kFALSE) const; virtual RooAbsGenContext*RooAbsPdf::binnedGenContext(const RooArgSet& vars, Bool_t verbose = kFALSE) const; voidRooAbsArg::branchNodeServerList(RooAbsCollection* list, const RooAbsArg* arg = 0, Bool_t recurseNonDerived = kFALSE) const; virtual voidTObject::Browse(TBrowser* b); virtual const char*RooAbsArg::cacheUniqueSuffix() const; Bool_tRooAbsPdf::canBeExtended() const; virtual RooAbsArg::CacheModeRooAbsArg::canNodeBeCached() const; voidRooAbsArg::changeServer(RooAbsArg& server, Bool_t valueProp, Bool_t shapeProp); Bool_tRooAbsArg::checkDependents(const RooArgSet* nset) const; virtual Bool_tRooAbsArg::checkObservables(const RooArgSet* nset) const; virtual RooFitResult*RooAbsPdf::chi2FitTo(RooDataHist& data, const RooLinkedList& cmdList); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); static voidRooAbsPdf::clearEvalError(); static voidRooAbsReal::clearEvalErrorLog(); voidRooAbsArg::clearShapeDirty() const; voidRooAbsArg::clearValueAndShapeDirty() const; voidRooAbsArg::clearValueDirty() const; TIterator*RooAbsArg::clientIterator() const; virtual TObject*clone(const char* newname) const; virtual TObject*RooAbsArg::Clone(const char* newname = 0) const; virtual RooAbsArg*RooAbsArg::cloneTree(const char* newname = 0) const; virtual Int_tRooAbsArg::Compare(const TObject* other) const; virtual voidRooAbsArg::constOptimizeTestStatistic(RooAbsArg::ConstOpCode opcode, Bool_t doAlsoTrackingOpt = kTRUE); virtual voidTNamed::Copy(TObject& named) const; static UInt_tRooAbsArg::crc32(const char* data); static UInt_tRooAbsArg::crc32(const char* data, ULong_t sz, UInt_t crc = 0); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooArgSet& nset = RooArgSet()); RooAbsReal*RooAbsPdf::createCdf(const RooArgSet& iset, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction1PdfBinding_double_double_.html:3250,clear,clearEvalErrorLog,3250,root/html534/RooCFunction1PdfBinding_double_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction1PdfBinding_double_double_.html,32,['clear'],['clearEvalErrorLog']
Usability," RooBinIntegrator(); RooBinIntegrator(const RooAbsFunc& function); RooBinIntegrator(const RooAbsFunc& function, const RooNumIntConfig& config); virtual~RooBinIntegrator(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); Double_tRooAbsIntegrator::calculate(const Double_t* yvec = 0); virtual Bool_tcanIntegrate1D() const; virtual Bool_tcanIntegrate2D() const; virtual Bool_tcanIntegrateND() const; virtual Bool_tcanIntegrateOpenEnded() const; virtual Bool_tcheckLimits() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual RooAbsIntegrator*clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBinIntegrator.html:1129,Clear,Clear,1129,root/html534/RooBinIntegrator.html,https://root.cern,https://root.cern/root/html534/RooBinIntegrator.html,1,['Clear'],['Clear']
Usability," RooBinIntegrator(); RooBinIntegrator(const RooAbsFunc& function); RooBinIntegrator(const RooBinIntegrator&); RooBinIntegrator(const RooAbsFunc& function, const RooNumIntConfig& config); virtual~RooBinIntegrator(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); Double_tRooAbsIntegrator::calculate(const Double_t* yvec = 0); virtual Bool_tcanIntegrate1D() const; virtual Bool_tcanIntegrate2D() const; virtual Bool_tcanIntegrateND() const; virtual Bool_tcanIntegrateOpenEnded() const; virtual Bool_tcheckLimits() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual RooAbsIntegrator*clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooBinIntegrator.html:1172,Clear,Clear,1172,root/html532/RooBinIntegrator.html,https://root.cern,https://root.cern/root/html532/RooBinIntegrator.html,1,['Clear'],['Clear']
Usability," RooBinnedGenContext(const RooAbsPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); virtual~RooBinnedGenContext(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidattach(const RooArgSet& params); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooAbsGenContext::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooAbsGenContext::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooBinnedGenContext.html:955,Clear,Clear,955,root/html532/RooBinnedGenContext.html,https://root.cern,https://root.cern/root/html532/RooBinnedGenContext.html,2,['Clear'],['Clear']
Usability," RooCFunction1Ref<double,double>(double (*)(double) ptr = 0); RooCFunction1Ref<double,double>(const RooCFunction1Ref<double,double>&); virtual~RooCFunction1Ref<double,double>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction1Ref_double_double_.html:1452,Clear,Clear,1452,root/html526/RooCFunction1Ref_double_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction1Ref_double_double_.html,5,['Clear'],['Clear']
Usability," RooCFunction1Ref<double,int>(double (*)(int) ptr = 0); RooCFunction1Ref<double,int>(const RooCFunction1Ref<double,int>&); virtual~RooCFunction1Ref<double,int>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction1Ref_double_int_.html:1425,Clear,Clear,1425,root/html526/RooCFunction1Ref_double_int_.html,https://root.cern,https://root.cern/root/html526/RooCFunction1Ref_double_int_.html,5,['Clear'],['Clear']
Usability," RooCFunction2Ref<double,double,double>(double (*)(double,double) ptr = 0); RooCFunction2Ref<double,double,double>(const RooCFunction2Ref<double,double,double>&); virtual~RooCFunction2Ref<double,double,double>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction2Ref_double_double_double_.html:1517,Clear,Clear,1517,root/html526/RooCFunction2Ref_double_double_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction2Ref_double_double_double_.html,5,['Clear'],['Clear']
Usability," RooCFunction2Ref<double,double,int>(double (*)(double,int) ptr = 0); RooCFunction2Ref<double,double,int>(const RooCFunction2Ref<double,double,int>&); virtual~RooCFunction2Ref<double,double,int>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction2Ref_double_double_int_.html:1490,Clear,Clear,1490,root/html526/RooCFunction2Ref_double_double_int_.html,https://root.cern,https://root.cern/root/html526/RooCFunction2Ref_double_double_int_.html,5,['Clear'],['Clear']
Usability," RooCFunction2Ref<double,int,double>(double (*)(int,double) ptr = 0); RooCFunction2Ref<double,int,double>(const RooCFunction2Ref<double,int,double>&); virtual~RooCFunction2Ref<double,int,double>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction2Ref_double_int_double_.html:1490,Clear,Clear,1490,root/html526/RooCFunction2Ref_double_int_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction2Ref_double_int_double_.html,5,['Clear'],['Clear']
Usability," RooCFunction2Ref<double,int,int>(double (*)(int,int) ptr = 0); RooCFunction2Ref<double,int,int>(const RooCFunction2Ref<double,int,int>&); virtual~RooCFunction2Ref<double,int,int>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction2Ref_double_int_int_.html:1463,Clear,Clear,1463,root/html526/RooCFunction2Ref_double_int_int_.html,https://root.cern,https://root.cern/root/html526/RooCFunction2Ref_double_int_int_.html,5,['Clear'],['Clear']
Usability," RooCFunction2Ref<double,unsigned int,double>(double (*)(unsigned int,double) ptr = 0); RooCFunction2Ref<double,unsigned int,double>(const RooCFunction2Ref<double,unsigned int,double>&); virtual~RooCFunction2Ref<double,unsigned int,double>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::Draw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction2Ref_double_unsigned_int_double_.html:1563,Clear,Clear,1563,root/html526/RooCFunction2Ref_double_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction2Ref_double_unsigned_int_double_.html,5,['Clear'],['Clear']
Usability," RooCFunction3Ref<double,double,double,bool>(double (*)(double,double,bool) ptr = 0); RooCFunction3Ref<double,double,double,bool>(const RooCFunction3Ref<double,double,double,bool>&); virtual~RooCFunction3Ref<double,double,double,bool>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::Dra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction3Ref_double_double_double_bool_.html:1564,Clear,Clear,1564,root/html526/RooCFunction3Ref_double_double_double_bool_.html,https://root.cern,https://root.cern/root/html526/RooCFunction3Ref_double_double_double_bool_.html,5,['Clear'],['Clear']
Usability," RooCFunction3Ref<double,double,double,double>(double (*)(double,double,double) ptr = 0); RooCFunction3Ref<double,double,double,double>(const RooCFunction3Ref<double,double,double,double>&); virtual~RooCFunction3Ref<double,double,double,double>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction3Ref_double_double_double_double_.html:1582,Clear,Clear,1582,root/html526/RooCFunction3Ref_double_double_double_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction3Ref_double_double_double_double_.html,5,['Clear'],['Clear']
Usability," RooCFunction3Ref<double,double,int,int>(double (*)(double,int,int) ptr = 0); RooCFunction3Ref<double,double,int,int>(const RooCFunction3Ref<double,double,int,int>&); virtual~RooCFunction3Ref<double,double,int,int>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction3Ref_double_double_int_int_.html:1528,Clear,Clear,1528,root/html526/RooCFunction3Ref_double_double_int_int_.html,https://root.cern,https://root.cern/root/html526/RooCFunction3Ref_double_double_int_int_.html,5,['Clear'],['Clear']
Usability," RooCFunction3Ref<double,unsigned int,double,double>(double (*)(unsigned int,double,double) ptr = 0); RooCFunction3Ref<double,unsigned int,double,double>(const RooCFunction3Ref<double,unsigned int,double,double>&); virtual~RooCFunction3Ref<double,unsigned int,double,double>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction3Ref_double_unsigned_int_double_double_.html:1628,Clear,Clear,1628,root/html526/RooCFunction3Ref_double_unsigned_int_double_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction3Ref_double_unsigned_int_double_double_.html,5,['Clear'],['Clear']
Usability," RooCFunction3Ref<double,unsigned int,double,unsigned int>(double (*)(unsigned int,double,unsigned int) ptr = 0); RooCFunction3Ref<double,unsigned int,double,unsigned int>(const RooCFunction3Ref<double,unsigned int,double,unsigned int>&); virtual~RooCFunction3Ref<double,unsigned int,double,unsigned int>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction3Ref_double_unsigned_int_double_unsigned_int_.html:1674,Clear,Clear,1674,root/html526/RooCFunction3Ref_double_unsigned_int_double_unsigned_int_.html,https://root.cern,https://root.cern/root/html526/RooCFunction3Ref_double_unsigned_int_double_unsigned_int_.html,5,['Clear'],['Clear']
Usability," RooCFunction3Ref<double,unsigned int,unsigned int,double>(double (*)(unsigned int,unsigned int,double) ptr = 0); RooCFunction3Ref<double,unsigned int,unsigned int,double>(const RooCFunction3Ref<double,unsigned int,unsigned int,double>&); virtual~RooCFunction3Ref<double,unsigned int,unsigned int,double>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction3Ref_double_unsigned_int_unsigned_int_double_.html:1674,Clear,Clear,1674,root/html526/RooCFunction3Ref_double_unsigned_int_unsigned_int_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction3Ref_double_unsigned_int_unsigned_int_double_.html,5,['Clear'],['Clear']
Usability," RooCFunction4Ref<double,double,double,double,bool>(double (*)(double,double,double,bool) ptr = 0); RooCFunction4Ref<double,double,double,double,bool>(const RooCFunction4Ref<double,double,double,double,bool>&); virtual~RooCFunction4Ref<double,double,double,double,bool>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction4Ref_double_double_double_double_bool_.html:1629,Clear,Clear,1629,root/html526/RooCFunction4Ref_double_double_double_double_bool_.html,https://root.cern,https://root.cern/root/html526/RooCFunction4Ref_double_double_double_double_bool_.html,5,['Clear'],['Clear']
Usability," RooCFunction4Ref<double,double,double,double,double>(double (*)(double,double,double,double) ptr = 0); RooCFunction4Ref<double,double,double,double,double>(const RooCFunction4Ref<double,double,double,double,double>&); virtual~RooCFunction4Ref<double,double,double,double,double>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* opti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction4Ref_double_double_double_double_double_.html:1647,Clear,Clear,1647,root/html526/RooCFunction4Ref_double_double_double_double_double_.html,https://root.cern,https://root.cern/root/html526/RooCFunction4Ref_double_double_double_double_double_.html,5,['Clear'],['Clear']
Usability," RooCFunction4Ref<double,double,double,double,int>(double (*)(double,double,double,int) ptr = 0); RooCFunction4Ref<double,double,double,double,int>(const RooCFunction4Ref<double,double,double,double,int>&); virtual~RooCFunction4Ref<double,double,double,double,int>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCFunction4Ref_double_double_double_double_int_.html:1620,Clear,Clear,1620,root/html526/RooCFunction4Ref_double_double_double_double_int_.html,https://root.cern,https://root.cern/root/html526/RooCFunction4Ref_double_double_double_double_int_.html,5,['Clear'],['Clear']
Usability," RooCatType(); RooCatType(const RooCatType& other); RooCatType(const char* name, Int_t value); virtual~RooCatType(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*Clone(const char*) const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCatType.html:894,Clear,Clear,894,root/html526/RooCatType.html,https://root.cern,https://root.cern/root/html526/RooCatType.html,3,['Clear'],['Clear']
Usability," RooCatType(); RooCatType(const RooCatType& other); RooCatType(const char* name, Int_t value); virtual~RooCatType(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); voidassignFast(const RooCatType& other); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*Clone(const char*) const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCatType.html:935,Clear,Clear,935,root/html532/RooCatType.html,https://root.cern,https://root.cern/root/html532/RooCatType.html,2,['Clear'],['Clear']
Usability," RooCategoryProxy(); RooCategoryProxy(const RooCategoryProxy&); RooCategoryProxy(const char* name, RooAbsArg* owner, const RooCategoryProxy& other); RooCategoryProxy(const char* name, const char* desc, RooAbsArg* owner, Bool_t valueServer = kTRUE, Bool_t shapeServer = kFALSE, Bool_t proxyOwnsArg = kFALSE); RooCategoryProxy(const char* name, const char* desc, RooAbsArg* owner, RooAbsCategory& ref, Bool_t valueServer = kTRUE, Bool_t shapeServer = kFALSE, Bool_t proxyOwnsArg = kFALSE); virtual~RooCategoryProxy(); RooAbsArg*RooArgProxy::absArg() const; voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const RooAbsCategory&arg() const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*Clone(const char* newName = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCategoryProxy.html:1534,Clear,Clear,1534,root/html526/RooCategoryProxy.html,https://root.cern,https://root.cern/root/html526/RooCategoryProxy.html,5,['Clear'],['Clear']
Usability," RooCategorySharedProperties(); RooCategorySharedProperties(const char* uuidstr); RooCategorySharedProperties(const RooCategorySharedProperties& other); virtual~RooCategorySharedProperties(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); TStringRooSharedProperties::asString(); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual RooSharedProperties*clone(); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; voidRooSharedProperties::decreaseRefCount(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCategorySharedProperties.html:1135,Clear,Clear,1135,root/html534/RooCategorySharedProperties.html,https://root.cern,https://root.cern/root/html534/RooCategorySharedProperties.html,1,['Clear'],['Clear']
Usability," RooCategorySharedProperties(); RooCategorySharedProperties(const char* uuidstr); RooCategorySharedProperties(const RooCategorySharedProperties& other); virtual~RooCategorySharedProperties(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual RooSharedProperties*clone(); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCategorySharedProperties.html:1095,Clear,Clear,1095,root/html526/RooCategorySharedProperties.html,https://root.cern,https://root.cern/root/html526/RooCategorySharedProperties.html,4,['Clear'],['Clear']
Usability," RooChi2MCSModule(); RooChi2MCSModule(const RooChi2MCSModule& other); virtual~RooChi2MCSModule(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tRooAbsMCStudyModule::doInitializeInstance(RooMCStudy&); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooChi2MCSModule.html:1012,Clear,Clear,1012,root/html526/RooChi2MCSModule.html,https://root.cern,https://root.cern/root/html526/RooChi2MCSModule.html,5,['Clear'],['Clear']
Usability," RooClassFactory(); virtual~RooClassFactory(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooClassFactory.html:935,Clear,Clear,935,root/html526/RooClassFactory.html,https://root.cern,https://root.cern/root/html526/RooClassFactory.html,5,['Clear'],['Clear']
Usability," RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={})RooAbsRealvirtual; chi2FitTo(RooDataHist &data, const RooLinkedList &cmdList)RooAbsRealvirtual; chi2FitTo(RooDataSet &xydata, const RooCmdArg &arg1={}, const RooCmdArg &arg2={}, const RooCmdArg &arg3={}, const RooCmdArg &arg4={}, const RooCmdArg &arg5={}, const RooCmdArg &arg6={}, const RooCmdArg &arg7={}, const RooCmdArg &arg8={})RooAbsRealvirtual; chi2FitTo(RooDataSet &xydata, const RooLinkedList &cmdList)RooAbsRealvirtual; Class()RooAbsPdfstatic; Class_Name()RooAbsPdfstatic; Class_Version()RooAbsPdfinlinestatic; ClassName() constTObjectvirtual; cleanBranchName() constRooAbsArgprotected; Clear(Option_t *option="""") overrideTNamedvirtual; clearEvalErrorLog()RooAbsRealstatic; clearShapeDirty() constRooAbsArginlineprotected; clearValueAndShapeDirty() constRooAbsArginlineprotected; clearValueDirty() constRooAbsArginlineprotected; clients() constRooAbsArginline; Clone(const char *newname=nullptr) const overrideRooAbsArginlinevirtual; clone(const char *newname=nullptr) const =0RooAbsArgpure virtual; cloneTree(const char *newname=nullptr) constRooAbsArgvirtual; CollectErrors enum valueRooAbsReal; Compare(const TObject *other) const overrideRooAbsArgvirtual; compileForNormSet(RooArgSet const &normSet, RooFit::Detail::CompileContext &ctx) const overrideRooAbsPdfvirtual; ConfigChange enum valueRooAbsArg; constRooAbsArg; constRooAbsArg; ConstOpCode enum nameRooAbsArg; constOptimizeTestStatistic(ConstOpCode opcode, bool doAlsoTrackingOpt=true)RooAbsArgvirtual; ContentsOption enum nameRooPrintable; Copy(TObject &named) const overrideTNamedvirtual; copyCache(const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) overrideRooAbsRealprotectedvirtual; CountErrors enum valueRooAbsReal; createCdf(const RooArgSet &iset, const RooArgSet &nset=RooArgSet())RooAbsPdf; createCd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsPdf-members.html:6121,clear,clearValueDirty,6121,doc/master/classRooAbsPdf-members.html,https://root.cern,https://root.cern/doc/master/classRooAbsPdf-members.html,1,['clear'],['clearValueDirty']
Usability," RooCmdArg(); RooCmdArg(const RooCmdArg& other); RooCmdArg(const char* name, Int_t i1 = 0, Int_t i2 = 0, Double_t d1 = 0, Double_t d2 = 0, const char* s1 = 0, const char* s2 = 0, const TObject* o1 = 0, const TObject* o2 = 0, const RooCmdArg* ca = 0, const char* s3 = 0, const RooArgSet* c1 = 0, const RooArgSet* c2 = 0); virtual~RooCmdArg(); voidTObject::AbstractMethod(const char* method) const; voidaddArg(const RooCmdArg& arg); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*Clone(const char* newName = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCmdArg.html:1312,Clear,Clear,1312,root/html526/RooCmdArg.html,https://root.cern,https://root.cern/root/html526/RooCmdArg.html,5,['Clear'],['Clear']
Usability," RooCmdConfig(const char* methodName); RooCmdConfig(const RooCmdConfig& other); virtual~RooCmdConfig(); voidTObject::AbstractMethod(const char* method) const; voidallowUndefined(Bool_t flag = kTRUE); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static Int_tdecodeIntOnTheFly(const char* callerID, const char* cmdArgName, Int_t intIdx, Int_t defVal, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& arg5 = RooCmdArg(), const RooCmdArg& arg6 = RooCmdArg(), const RooCmdArg& arg7 = RooCmdArg(), const RooCmdArg& arg8 = RooCmdArg(), const RooCmdArg& arg9 = RooCmdArg()); static TObject*decodeObjOnTheFly(const char* callerID, const char* cmdArgName, Int_t objIdx, TObject* defVal, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg(), const RooCmdArg& arg3 = RooCmdArg(), const RooCmdArg& arg4 = RooCmdArg(), const RooCmdArg& a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCmdConfig.html:1121,Clear,Clear,1121,root/html526/RooCmdConfig.html,https://root.cern,https://root.cern/root/html526/RooCmdConfig.html,5,['Clear'],['Clear']
Usability," RooConstraintSum, RooConstVar, RooConvCoefVar, RooConvGenContext, RooCurve, RooDataHist, RooDataSet, RooDerivative, RooEffGenContext, RooEfficiency, RooEffProd, RooEllipse, RooErrorVar, RooExtendedBinding, RooExtendedTerm, RooExtendPdf, RooFactoryWSTool, RooFFTConvPdf, RooFirstMoment, RooFit::TestStatistics::RooRealL, RooCatType, RooTreeData, RooFitResult, RooFormulaVar, RooFracRemainder, RooGenContext, RooGenericPdf, RooHist, RooHistFunc, RooHistPdf, RooLinearCombination, RooLinearVar, RooLinTransBinning, RooMappedCategory, RooMoment, RooMultiCategory, RooMultiVarGaussian, RooNumCdf, RooNumConvolution, RooNumConvPdf, RooNumGenConfig, RooNumIntConfig, RooNumRunningInt, RooParamBinning, RooPlot, RooPlotable, RooPolyFunc, RooPolyVar, RooProdGenContext, RooProdPdf, RooProduct, RooProfileLL, RooProjectedPdf, RooPullVar, RooRangeBinning, RooRangeBoolean, RooRatio, RooRealIntegral, RooRealSumFunc, RooRealSumPdf, RooRealVar, RooRecursiveFraction, RooResolutionModel, RooSecondMoment, RooSimGenContext, RooSimSplitGenContext, RooSimultaneous, RooStringVar, RooSuperCategory, RooTable, RooThresholdCategory, RooTreeDataStore, RooTruthModel, RooUniformBinning, RooVectorDataStore, RooWrapperPdf, RooLegendre, RooNonCentralChiSquare, RooSpHarmonic, RooStats::Heaviside, RooStats::HypoTestPlot, RooStats::LikelihoodIntervalPlot, RooStats::MCMCIntervalPlot, and RooStats::SamplingDistPlot. ◆ StreamerNVirtual(). void RooPrintable::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 59 of file RooPrintable.h. Member Data Documentation. ◆ _nameLength. Int_t RooPrintable::_nameLength. staticprotected . Definition at line 57 of file RooPrintable.h. Libraries for RooPrintable:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooPrintable.h; roofit/roofitcore/src/RooPrintable.cxx. RooPrintable. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:05 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPrintable.html:18409,Guid,Guide,18409,doc/master/classRooPrintable.html,https://root.cern,https://root.cern/doc/master/classRooPrintable.html,1,['Guid'],['Guide']
Usability," RooConvGenContext(const RooFFTConvPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); RooConvGenContext(const RooNumConvPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); RooConvGenContext(const RooAbsAnaConvPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); virtual~RooConvGenContext(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidattach(const RooArgSet& params); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooAbsGenContext::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooAbsGenContext::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooConvGenContext.html:1537,Clear,Clear,1537,root/html526/RooConvGenContext.html,https://root.cern,https://root.cern/root/html526/RooConvGenContext.html,5,['Clear'],['Clear']
Usability," RooDLLSignificanceMCSModule(const RooDLLSignificanceMCSModule& other); RooDLLSignificanceMCSModule(const RooRealVar& param, Double_t nullHypoValue = 0); RooDLLSignificanceMCSModule(const char* parName, Double_t nullHypoValue = 0); virtual~RooDLLSignificanceMCSModule(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tRooAbsMCStudyModule::doInitializeInstance(RooMCStudy&); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooDLLSignificanceMCSModule.html:1508,Clear,Clear,1508,root/html526/RooDLLSignificanceMCSModule.html,https://root.cern,https://root.cern/root/html526/RooDLLSignificanceMCSModule.html,5,['Clear'],['Clear']
Usability," RooDouble(); RooDouble(Double_t value); RooDouble(const RooDouble& other); virtual~RooDouble(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tCompare(const TObject* other) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooDouble.html:751,Clear,Clear,751,root/html526/RooDouble.html,https://root.cern,https://root.cern/root/html526/RooDouble.html,5,['Clear'],['Clear']
Usability," RooEffGenContext(const RooEffGenContext&); RooEffGenContext(const RooAbsPdf& model, const RooAbsPdf& pdf, const RooAbsReal& eff, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE, const RooArgSet* forceDirect = 0); virtual~RooEffGenContext(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidRooAbsGenContext::attach(const RooArgSet& params); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooAbsGenContext::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooAbsGenContext::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooEffGenContext.html:1344,Clear,Clear,1344,root/html526/RooEffGenContext.html,https://root.cern,https://root.cern/root/html526/RooEffGenContext.html,5,['Clear'],['Clear']
Usability," RooEllipse(); RooEllipse(const RooEllipse&); RooEllipse(const char* name, Double_t x1, Double_t x2, Double_t s1, Double_t s2, Double_t rho = 0, Int_t points = 100); virtual~RooEllipse(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTGraph::Apply(TF1* f); virtual voidTGraph::Browse(TBrowser* b); virtual Double_tTGraph::Chisquare(const TF1* f1) const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; static Bool_tTGraph::CompareArg(const TGraph* gr, Int_t left, Int_t right); static Bool_tTGraph::CompareRadius(const TGraph* gr, Int_t left, Int_t right); static Bool_tTGraph::CompareX(const TGraph* gr, Int_t left, Int_t right); static Bool_tTGraph::CompareY(const TGraph* gr, Int_t left, Int_t right); virtual voidTGraph::ComputeRange(Double_t& xmin, Double_t& ymin, Double_t& xmax, Double_t& ymax) const; virtual voidTNamed::Copy(TObject& named) const; TObject*RooPlotable::crossCast(); virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooEllipse.html:968,Clear,Clear,968,root/html526/RooEllipse.html,https://root.cern,https://root.cern/root/html526/RooEllipse.html,4,['Clear'],['Clear']
Usability," RooEllipse(); RooEllipse(const RooEllipse&); RooEllipse(const char* name, Double_t x1, Double_t x2, Double_t s1, Double_t s2, Double_t rho = 0, Int_t points = 100); virtual~RooEllipse(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTGraph::Apply(TF1* f); virtual voidTGraph::Browse(TBrowser* b); virtual Double_tTGraph::Chisquare(const TF1* f1, Option_t* option = """") const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; static Bool_tTGraph::CompareArg(const TGraph* gr, Int_t left, Int_t right); static Bool_tTGraph::CompareRadius(const TGraph* gr, Int_t left, Int_t right); static Bool_tTGraph::CompareX(const TGraph* gr, Int_t left, Int_t right); static Bool_tTGraph::CompareY(const TGraph* gr, Int_t left, Int_t right); virtual voidTGraph::ComputeRange(Double_t& xmin, Double_t& ymin, Double_t& xmax, Double_t& ymax) const; virtual voidTNamed::Copy(TObject& named) const; TObject*RooPlotable::crossCast(); virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooEllipse.html:991,Clear,Clear,991,root/html534/RooEllipse.html,https://root.cern,https://root.cern/root/html534/RooEllipse.html,1,['Clear'],['Clear']
Usability," RooExpensiveObjectCache(); RooExpensiveObjectCache(const RooExpensiveObjectCache&); virtual~RooExpensiveObjectCache(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; static voidcleanup(); virtual voidTObject::Clear(Option_t* = """"); voidclearAll(); Bool_tclearObj(Int_t uniqueID); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* met",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooExpensiveObjectCache.html:1078,Clear,Clear,1078,root/html526/RooExpensiveObjectCache.html,https://root.cern,https://root.cern/root/html526/RooExpensiveObjectCache.html,5,['Clear'],['Clear']
Usability," RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. Int_t activeStream(const TObject* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. ostream& log(const RooAbsArg* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with RooAbsArg object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. ostream& log(const TObject* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with TObject object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. void Print(Option_t* options = 0) const; Print configuration of message service. If ""v"" option is given also; inactive streams are listed. StreamConfig& getStream(Int_t id); { return _streams[id] ; }. Int_t numStreams() const; { return _streams.size() ; }. void reset(); { cleanup() ; }. void setGlobalKillBelow(RooFit::MsgLevel level); { _globMinLevel = level ; }. RooFit::MsgLevel globalKillBelow() const; { return _globMinLevel ; }. void showPid(Bool_t flag); { _showPid = flag ; }. Bool_t silentMode() const; Print level support for RooFit-related messages that are not routed through RooMsgService (such as Minuit printouts). { return _silentMode ; }. void setSilentMode(Bool_t flag); { _silentMode = flag ; }. Int_t errorCount() const; { return _errorCount ; }. void clearErrorCount(); { _errorCount = 0 ; }. Int_t& debugCode(); { return _debugCode ; }. RooMsgService(); Private ctor -- singleton class. » Last changed: Fri Dec 10 17:05:04 2010 » Last generated: 2010-12-10 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooMsgService.html:12355,clear,clearErrorCount,12355,root/html528/RooMsgService.html,https://root.cern,https://root.cern/root/html528/RooMsgService.html,1,['clear'],['clearErrorCount']
Usability," RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. Int_t activeStream(const TObject* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. ostream& log(const RooAbsArg* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with RooAbsArg object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. ostream& log(const TObject* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with TObject object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. void Print(Option_t* options = 0) const; Print configuration of message service. If ""v"" option is given also; inactive streams are listed. StreamConfig& getStream(Int_t id); { return _streams[id] ; }. Int_t numStreams() const; { return _streams.size() ; }. void reset(); { cleanup() ; }. void setGlobalKillBelow(RooFit::MsgLevel level); { _globMinLevel = level ; }. RooFit::MsgLevel globalKillBelow() const; { return _globMinLevel ; }. void showPid(Bool_t flag); { _showPid = flag ; }. Bool_t silentMode() const; Print level support for RooFit-related messages that are not routed through RooMsgService (such as Minuit printouts). { return _silentMode ; }. void setSilentMode(Bool_t flag); { _silentMode = flag ; }. Int_t errorCount() const; { return _errorCount ; }. void clearErrorCount(); { _errorCount = 0 ; }. Int_t& debugCode(); { return _debugCode ; }. RooMsgService(); Private ctor -- singleton class. » Last changed: Tue Jun 30 14:34:06 2015 » Last generated: 2015-06-30 14:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooMsgService.html:12900,clear,clearErrorCount,12900,root/html602/RooMsgService.html,https://root.cern,https://root.cern/root/html602/RooMsgService.html,1,['clear'],['clearErrorCount']
Usability," RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. Int_t activeStream(const TObject* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. ostream& log(const RooAbsArg* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with RooAbsArg object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. ostream& log(const TObject* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with TObject object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. void Print(Option_t* options = 0) const; Print configuration of message service. If ""v"" option is given also; inactive streams are listed. StreamConfig& getStream(Int_t id); { return _streams[id] ; }. Int_t numStreams() const; { return _streams.size() ; }. void reset(); { cleanup() ; }. void setGlobalKillBelow(RooFit::MsgLevel level); { _globMinLevel = level ; }. RooFit::MsgLevel globalKillBelow() const; { return _globMinLevel ; }. void showPid(Bool_t flag); { _showPid = flag ; }. Bool_t silentMode() const; Print level support for RooFit-related messages that are not routed through RooMsgService (such as Minuit printouts). { return _silentMode ; }. void setSilentMode(Bool_t flag); { _silentMode = flag ; }. Int_t errorCount() const; { return _errorCount ; }. void clearErrorCount(); { _errorCount = 0 ; }. Int_t& debugCode(); { return _debugCode ; }. RooMsgService(); Private ctor -- singleton class. » Last changed: Tue Mar 10 17:17:55 2015 » Last generated: 2015-03-10 17:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooMsgService.html:12443,clear,clearErrorCount,12443,root/html534/RooMsgService.html,https://root.cern,https://root.cern/root/html534/RooMsgService.html,1,['clear'],['clearErrorCount']
Usability," RooFitResult(const RooFitResult& other); RooFitResult(const char* name = 0, const char* title = 0); virtual~RooFitResult(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*clone() const; virtual TObject*Clone(const char* newname = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; TMatrixDSymconditionalCovarianceMatrix(const RooArgList& params) const; const RooArgList&constPars() const; virtual voidTNamed::Copy(TObject& named) const; const RooArgList*correlation(const RooAbsArg& par) const; const RooArgList*correlation(const char* parname) const; Double_tcorrelation(const RooAbsArg& par1, const RooAbsArg& par2) const; Double_tcorrelation(const char* parname1, const char* parname2) const; TH2*correlationHist(const char* name = ""correlation_matrix"") const; const TMatrixDSym&correlationMatrix() const; const TMatrixDSym&covarianceMatrix() const; Int_tcovQual() const; RooAbsPdf*createHessePdf(const RooArgSet& params) const; virtual Int_tdefaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooFitResult.html:1091,Clear,Clear,1091,root/html532/RooFitResult.html,https://root.cern,https://root.cern/root/html532/RooFitResult.html,2,['Clear'],['Clear']
Usability," RooFitResult(const RooFitResult& other); RooFitResult(const char* name = 0, const char* title = 0); virtual~RooFitResult(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*clone() const; virtual TObject*Clone(const char* newname = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; const RooArgList&constPars() const; virtual voidTNamed::Copy(TObject& named) const; const RooArgList*correlation(const RooAbsArg& par) const; const RooArgList*correlation(const char* parname) const; Double_tcorrelation(const RooAbsArg& par1, const RooAbsArg& par2) const; Double_tcorrelation(const char* parname1, const char* parname2) const; TH2*correlationHist(const char* name = ""correlation_matrix"") const; const TMatrixDSym&correlationMatrix() const; const TMatrixDSym&covarianceMatrix() const; Int_tcovQual() const; RooAbsPdf*createHessePdf(const RooArgSet& params) const; virtual Int_tdefaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptiondefau",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooFitResult.html:1091,Clear,Clear,1091,root/html526/RooFitResult.html,https://root.cern,https://root.cern/root/html526/RooFitResult.html,3,['Clear'],['Clear']
Usability," RooFoamGenerator(); RooFoamGenerator(const RooFoamGenerator&); RooFoamGenerator(const RooAbsReal& func, const RooArgSet& genVars, const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0); virtual~RooFoamGenerator(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); voidRooAbsNumGenerator::attachParameters(const RooArgSet& vars); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tcanSampleCategories() const; virtual Bool_tcanSampleConditional() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual RooAbsNumGenerator*clone(const RooAbsReal& func, const RooArgSet& genVars, const RooArgSet&, const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooFoamGenerator.html:1326,Clear,Clear,1326,root/html526/RooFoamGenerator.html,https://root.cern,https://root.cern/root/html526/RooFoamGenerator.html,5,['Clear'],['Clear']
Usability," RooFormula(); RooFormula(const RooFormula& other, const char* name = 0); RooFormula(const char* name, const char* formula, const RooArgList& varList); virtual~RooFormula(); voidTObject::AbstractMethod(const char* method) const; RooArgSet&actualDependents() const; virtual voidTFormula::Analyze(const char* schain, Int_t& err, Int_t offset = 0); virtual Bool_tTFormula::AnalyzeFunction(TString& chaine, Int_t& err, Int_t offset = 0); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); Bool_tchangeDependents(const RooAbsCollection& newDeps, Bool_t mustReplaceAll, Bool_t nameChange); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTFormula::Clear(Option_t* option = """"); virtual TObject*Clone(const char* newName = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tTFormula::Compile(const char* expression = """"); virtual voidTFormula::Copy(TObject& formula) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooFormula.html:1554,Clear,Clear,1554,root/html526/RooFormula.html,https://root.cern,https://root.cern/root/html526/RooFormula.html,5,['Clear'],['Clear']
Usability," RooGaussKronrodIntegrator1D(); RooGaussKronrodIntegrator1D(const RooGaussKronrodIntegrator1D&); RooGaussKronrodIntegrator1D(const RooAbsFunc& function, const RooNumIntConfig& config); RooGaussKronrodIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, const RooNumIntConfig& config); virtual~RooGaussKronrodIntegrator1D(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); Double_tRooAbsIntegrator::calculate(const Double_t* yvec = 0); virtual Bool_tcanIntegrate1D() const; virtual Bool_tcanIntegrate2D() const; virtual Bool_tcanIntegrateND() const; virtual Bool_tcanIntegrateOpenEnded() const; virtual Bool_tcheckLi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooGaussKronrodIntegrator1D.html:2106,Clear,Clear,2106,root/html526/RooGaussKronrodIntegrator1D.html,https://root.cern,https://root.cern/root/html526/RooGaussKronrodIntegrator1D.html,5,['Clear'],['Clear']
Usability," RooGaussian::getX ; (; ); const. inline . Get the x variable. ; Definition at line 45 of file RooGaussian.h. ◆ IsA(). TClass * RooGaussian::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 69 of file RooGaussian.h. ◆ Streamer(). void RooGaussian::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsPdf. ◆ StreamerNVirtual(). void RooGaussian::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 69 of file RooGaussian.h. ◆ translate(). void RooGaussian::translate ; (; RooFit::Detail::CodeSquashContext & ; ctx); const. overridevirtual . This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ; The function adds the code represented by each class as an std::string (that is later concatenated with code strings from translate calls) to form the C++ code that AD tools can understand. Any class that wants to support AD, has to implement this function.; Parameters. [in]ctxAn object to manage auxiliary information for code-squashing. Also takes the code string that this class outputs into the squashed code through the 'addToCodeBody' function. . Reimplemented from RooAbsArg.; Definition at line 132 of file RooGaussian.cxx. Member Data Documentation. ◆ mean. RooRealProxy RooGaussian::mean. protected . Definition at line 60 of file RooGaussian.h. ◆ sigma. RooRealProxy RooGaussian::sigma. protected . Definition at line 61 of file RooGaussian.h. ◆ x. RooRealProxy RooGaussian::x. protected . Definition at line 59 of file RooGaussian.h. Libraries for RooGaussian:. [legend]; The documentation for this class was generated from the following files:; roofit/roofit/inc/RooGaussian.h; roofit/roofit/src/RooGaussian.cxx. RooGaussian. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:55 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooGaussian.html:80980,Guid,Guide,80980,doc/master/classRooGaussian.html,https://root.cern,https://root.cern/doc/master/classRooGaussian.html,1,['Guid'],['Guide']
Usability," RooGenContext(const RooGenContext&); RooGenContext(const RooAbsPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t verbose = kFALSE, const RooArgSet* forceDirect = 0); virtual~RooGenContext(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidattach(const RooArgSet& params); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooAbsGenContext::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooAbsGenContext::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMEN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooGenContext.html:1292,Clear,Clear,1292,root/html526/RooGenContext.html,https://root.cern,https://root.cern/root/html526/RooGenContext.html,5,['Clear'],['Clear']
Usability," RooGenFitStudy(const RooGenFitStudy& other); RooGenFitStudy(const char* name = 0, const char* title = 0); virtual~RooGenFitStudy(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual Bool_tattach(RooWorkspace& w); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual RooAbsStudy*clone(const char* newname = """") const; virtual TObject*RooAbsStudy::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; RooLinkedList*RooAbsStudy::detailedData(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidRooAbsStudy::dump(); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual Bool_texecute(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual Bool_tfinalize(); virtual TObject*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooGenFitStudy.html:837,Clear,Clear,837,root/html534/RooGenFitStudy.html,https://root.cern,https://root.cern/root/html534/RooGenFitStudy.html,1,['Clear'],['Clear']
Usability," RooGenFitStudy(const RooGenFitStudy& other); RooGenFitStudy(const char* name = 0, const char* title = 0); virtual~RooGenFitStudy(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual Bool_tattach(RooWorkspace& w); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; RooLinkedList*RooAbsStudy::detailedData(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual Bool_texecute(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual Bool_tfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooGenFitStudy.html:837,Clear,Clear,837,root/html526/RooGenFitStudy.html,https://root.cern,https://root.cern/root/html526/RooGenFitStudy.html,2,['Clear'],['Clear']
Usability," RooGrid(); RooGrid(const RooAbsFunc& function); RooGrid(const RooGrid&); virtual~RooGrid(); voidTObject::AbstractMethod(const char* method) const; voidaccumulate(const UInt_t* bin, Double_t amount); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Double_tcoord(Int_t i, Int_t j) const; virtual voidTObject::Copy(TObject& object) const; UInt_t*createIndexVector() const; Double_t*createPoint() const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooGrid.html:903,Clear,Clear,903,root/html526/RooGrid.html,https://root.cern,https://root.cern/root/html526/RooGrid.html,5,['Clear'],['Clear']
Usability," RooHashTable(const RooHashTable& other); RooHashTable(Int_t initSize = 17, RooHashTable::HashMethod hashMethod = Name); virtual~RooHashTable(); voidTObject::AbstractMethod(const char* method) const; voidadd(TObject* arg, TObject* hashArg = 0); virtual voidTObject::AppendPad(Option_t* option = """"); Double_tavgCollisions() const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; Int_tentries() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooHashTable.html:1081,Clear,Clear,1081,root/html532/RooHashTable.html,https://root.cern,https://root.cern/root/html532/RooHashTable.html,2,['Clear'],['Clear']
Usability," RooHashTable(const RooHashTable& other); RooHashTable(Int_t initSize = 17, RooHashTable::HashMethod hashMethod = Name); virtual~RooHashTable(); voidTObject::AbstractMethod(const char* method) const; voidadd(TObject* arg, TObject* hashArg = 0); virtual voidTObject::AppendPad(Option_t* option = """"); Double_tavgCollisions() const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; TObject*find(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooHashTable.html:1081,Clear,Clear,1081,root/html526/RooHashTable.html,https://root.cern,https://root.cern/root/html526/RooHashTable.html,3,['Clear'],['Clear']
Usability," RooImproperIntegrator1D(); RooImproperIntegrator1D(const RooAbsFunc& function); RooImproperIntegrator1D(const RooAbsFunc& function, const RooNumIntConfig& config); RooImproperIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, const RooNumIntConfig& config); virtual~RooImproperIntegrator1D(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); Double_tRooAbsIntegrator::calculate(const Double_t* yvec = 0); virtual Bool_tcanIntegrate1D() const; virtual Bool_tcanIntegrate2D() const; virtual Bool_tcanIntegrateND() const; virtual Bool_tcanIntegrateOpenEnded() const; virtual Bool_tcheckLimits() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual RooAbsIntegrator*clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMEN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooImproperIntegrator1D.html:1429,Clear,Clear,1429,root/html526/RooImproperIntegrator1D.html,https://root.cern,https://root.cern/root/html526/RooImproperIntegrator1D.html,5,['Clear'],['Clear']
Usability," RooInt(); RooInt(Int_t value); RooInt(const RooInt& other); virtual~RooInt(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tCompare(const TObject* other) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooInt.html:718,Clear,Clear,718,root/html526/RooInt.html,https://root.cern,https://root.cern/root/html526/RooInt.html,5,['Clear'],['Clear']
Usability," RooMCIntegrator(); RooMCIntegrator(const RooMCIntegrator&); RooMCIntegrator(const RooAbsFunc& function, const RooNumIntConfig& config); RooMCIntegrator(const RooAbsFunc& function, RooMCIntegrator::SamplingMode mode = Importance, RooMCIntegrator::GeneratorType genType = QuasiRandom, Bool_t verbose = kFALSE); virtual~RooMCIntegrator(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); Double_tRooAbsIntegrator::calculate(const Double_t* yvec = 0); virtual Bool_tcanIntegrate1D() const; virtual Bool_tcanIntegrate2D() const; virtual Bool_tcanIntegrateND() const; virtual Bool_tcanIntegrateOpenEnded() const; virtual Bool_tcheckLimits() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual RooAbsIntegrator*clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMCIntegrator.html:1493,Clear,Clear,1493,root/html526/RooMCIntegrator.html,https://root.cern,https://root.cern/root/html526/RooMCIntegrator.html,5,['Clear'],['Clear']
Usability," RooMCStudy(const RooAbsPdf& genModel, const RooAbsPdf& fitModel, const RooArgSet& dependents, const char* genOptions = """", const char* fitOptions = """", const RooDataSet* genProtoData = 0, const RooArgSet& projDeps = RooArgSet()); RooMCStudy(const RooAbsPdf& model, const RooArgSet& observables, RooCmdArg arg1 = RooCmdArg::none(), RooCmdArg arg2 = RooCmdArg::none(), RooCmdArg arg3 = RooCmdArg::none(), RooCmdArg arg4 = RooCmdArg::none(), RooCmdArg arg5 = RooCmdArg::none(), RooCmdArg arg6 = RooCmdArg::none(), RooCmdArg arg7 = RooCmdArg::none(), RooCmdArg arg8 = RooCmdArg::none()); virtual~RooMCStudy(); voidTObject::AbstractMethod(const char* method) const; Bool_taddFitResult(const RooFitResult& fr); voidaddModule(RooAbsMCStudyModule& module); virtual voidTObject::AppendPad(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMCStudy.html:2157,Clear,Clear,2157,root/html526/RooMCStudy.html,https://root.cern,https://root.cern/root/html526/RooMCStudy.html,1,['Clear'],['Clear']
Usability," RooMCStudy(const RooAbsPdf& genModel, const RooAbsPdf& fitModel, const RooArgSet& dependents, const char* genOptions = """", const char* fitOptions = """", const RooDataSet* genProtoData = 0, const RooArgSet& projDeps = RooArgSet()); RooMCStudy(const RooAbsPdf& model, const RooArgSet& observables, const RooCmdArg& arg1 = RooCmdArg::none(), const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none()); virtual~RooMCStudy(); voidTObject::AbstractMethod(const char* method) const; Bool_taddFitResult(const RooFitResult& fr); voidaddModule(RooAb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooMCStudy.html:2213,Clear,Clear,2213,root/html528/RooMCStudy.html,https://root.cern,https://root.cern/root/html528/RooMCStudy.html,4,['Clear'],['Clear']
Usability," RooMapCatEntry(); RooMapCatEntry(const RooMapCatEntry& other); RooMapCatEntry(const char* exp, const RooCatType* cat); virtual~RooMapCatEntry(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*Clone(const char* newName = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMapCatEntry.html:734,Clear,Clear,734,root/html526/RooMapCatEntry.html,https://root.cern,https://root.cern/root/html526/RooMapCatEntry.html,5,['Clear'],['Clear']
Usability," RooMinimizer(RooAbsReal& function); virtual~RooMinimizer(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; static voidcleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; RooPlot*contour(RooRealVar& var1, RooRealVar& var2, Double_t n1 = 1, Double_t n2 = 2, Double_t n3 = 0, Double_t n4 = 0, Double_t n5 = 0, Double_t n6 = 0); virtual voidTObject::Copy(TObject& object) const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooMinimizer.html:1653,Clear,Clear,1653,root/html534/RooMinimizer.html,https://root.cern,https://root.cern/root/html534/RooMinimizer.html,1,['Clear'],['Clear']
Usability," RooMinimizer(RooAbsReal& function); virtual~RooMinimizer(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; static voidcleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; RooPlot*contour(RooRealVar& var1, RooRealVar& var2, Double_t n1 = 1, Double_t n2 = 2, Double_t n3 = 0, Double_t n4 = 0, Double_t n5 = 0, Double_t n6 = 0); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMinimizer.html:1590,Clear,Clear,1590,root/html526/RooMinimizer.html,https://root.cern,https://root.cern/root/html526/RooMinimizer.html,4,['Clear'],['Clear']
Usability," RooMinuit(RooAbsReal& function); virtual~RooMinuit(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; static voidcleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; RooPlot*contour(RooRealVar& var1, RooRealVar& var2, Double_t n1 = 1, Double_t n2 = 2, Double_t n3 = 0, Double_t n4 = 0, Double_t n5 = 0, Double_t n6 = 0); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMinuit.html:1523,Clear,Clear,1523,root/html526/RooMinuit.html,https://root.cern,https://root.cern/root/html526/RooMinuit.html,5,['Clear'],['Clear']
Usability," RooNameSet(); RooNameSet(const RooArgSet& argSet); RooNameSet(const RooNameSet& other); virtual~RooNameSet(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*Clone(const char*) const; virtual Int_tTObject::Compare(const TObject* obj) const; const char*content() const; virtual voidTObject::Copy(TObject& object) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooNameSet.html:1025,Clear,Clear,1025,root/html534/RooNameSet.html,https://root.cern,https://root.cern/root/html534/RooNameSet.html,1,['Clear'],['Clear']
Usability," RooNameSet(); RooNameSet(const RooArgSet& argSet); RooNameSet(const RooNameSet& other); virtual~RooNameSet(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*Clone(const char*) const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNameSet.html:1025,Clear,Clear,1025,root/html526/RooNameSet.html,https://root.cern,https://root.cern/root/html526/RooNameSet.html,4,['Clear'],['Clear']
Usability," RooNumGenConfig(); RooNumGenConfig(const RooNumGenConfig& other); virtual~RooNumGenConfig(); voidTObject::AbstractMethod(const char* method) const; Bool_taddConfigSection(const RooAbsNumGenerator* proto, const RooArgSet& defaultConfig); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; static voidcleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static RooNumGenConfig&defaultConfig(); virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptiondefaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMetho",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumGenConfig.html:1036,Clear,Clear,1036,root/html526/RooNumGenConfig.html,https://root.cern,https://root.cern/root/html526/RooNumGenConfig.html,5,['Clear'],['Clear']
Usability," RooNumIntConfig(); RooNumIntConfig(const RooNumIntConfig& other); virtual~RooNumIntConfig(); voidTObject::AbstractMethod(const char* method) const; Bool_taddConfigSection(const RooAbsIntegrator* proto, const RooArgSet& defaultConfig); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; static voidcleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static RooNumIntConfig&defaultConfig(); virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptiondefaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; Double_tepsAbs() const; Double_tepsRel() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooNumIntConfig.html:1034,Clear,Clear,1034,root/html526/RooNumIntConfig.html,https://root.cern,https://root.cern/root/html526/RooNumIntConfig.html,5,['Clear'],['Clear']
Usability," RooObjCacheManager(const RooObjCacheManager& other, RooAbsArg* owner = 0); RooObjCacheManager(RooAbsArg* owner = 0, Int_t maxSize = 10, Bool_t clearCacheOnServerRedirect = kTRUE); virtual~RooObjCacheManager(); Int_tRooCacheManager<RooAbsCacheElement>::cacheSize() const; static TClass*Class(); static Bool_tclearObsList(); static voiddoClearObsList(Bool_t flag); virtual voidfindConstantNodes(const RooArgSet&, RooArgSet&, RooLinkedList&); RooAbsCacheElement*RooCacheManager<RooAbsCacheElement>::getObj(const RooArgSet* nset, Int_t* sterileIndex = 0, const TNamed* isetRangeName = 0); RooAbsCacheElement*RooCacheManager<RooAbsCacheElement>::getObj(const RooArgSet* nset, const RooArgSet* iset, Int_t* sterileIdx, const char* isetRangeName); RooAbsCacheElement*RooCacheManager<RooAbsCacheElement>::getObj(const RooArgSet* nset, const RooArgSet* iset, Int_t* sterileIdx = 0, const TNamed* isetRangeName = 0); RooAbsCacheElement*RooCacheManager<RooAbsCacheElement>::getObjByIndex(Int_t index) const; virtual voidinsertObjectHook(RooAbsCacheElement&); virtual TClass*IsA() const; Int_tRooCa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooObjCacheManager.html:1058,clear,clearCacheOnServerRedirect,1058,root/html532/RooObjCacheManager.html,https://root.cern,https://root.cern/root/html532/RooObjCacheManager.html,1,['clear'],['clearCacheOnServerRedirect']
Usability," RooObjCacheManager(const RooObjCacheManager& other, RooAbsArg* owner = 0); RooObjCacheManager(RooAbsArg* owner = 0, Int_t maxSize = 2, Bool_t clearCacheOnServerRedirect = kTRUE, Bool_t allowOptimize = kFALSE); virtual~RooObjCacheManager(); Int_tRooCacheManager<RooAbsCacheElement>::cacheSize() const; static TClass*Class(); static Bool_tclearObsList(); static voiddoClearObsList(Bool_t flag); virtual voidfindConstantNodes(const RooArgSet&, RooArgSet&, RooLinkedList&); RooAbsCacheElement*RooCacheManager<RooAbsCacheElement>::getObj(const RooArgSet* nset, Int_t* sterileIndex = 0, const TNamed* isetRangeName = 0); RooAbsCacheElement*RooCacheManager<RooAbsCacheElement>::getObj(const RooArgSet* nset, const RooArgSet* iset, Int_t* sterileIdx, const char* isetRangeName); RooAbsCacheElement*RooCacheManager<RooAbsCacheElement>::getObj(const RooArgSet* nset, const RooArgSet* iset, Int_t* sterileIdx = 0, const TNamed* isetRangeName = 0); RooAbsCacheElement*RooCacheManager<RooAbsCacheElement>::getObjByIndex(Int_t index) const; virtual voidinsertObjectHook(RooAbsCacheElement&); virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooObjCacheManager.html:1057,clear,clearCacheOnServerRedirect,1057,root/html534/RooObjCacheManager.html,https://root.cern,https://root.cern/root/html534/RooObjCacheManager.html,1,['clear'],['clearCacheOnServerRedirect']
Usability," RooParamBinning(const char* name = 0); RooParamBinning(const RooParamBinning& other, const char* name = 0); RooParamBinning(RooAbsReal& xlo, RooAbsReal& xhi, Int_t nBins, const char* name = 0); virtual~RooParamBinning(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual Double_t*array() const; virtual Double_taverageBinWidth() const; virtual Double_tbinCenter(Int_t bin) const; virtual Double_tbinHigh(Int_t bin) const; virtual Double_tbinLow(Int_t bin) const; virtual Int_tbinNumber(Double_t x) const; virtual Double_tbinWidth(Int_t bin) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual RooAbsBinning*clone(const char* name = 0) const; virtual TObject*RooAbsBinning::Clone(const char* newname = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooParamBinning.html:1568,Clear,Clear,1568,root/html526/RooParamBinning.html,https://root.cern,https://root.cern/root/html526/RooParamBinning.html,5,['Clear'],['Clear']
Usability," RooPolyVar.h. ◆ Streamer(). void RooPolyVar::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsReal. ◆ StreamerNVirtual(). void RooPolyVar::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 62 of file RooPolyVar.h. ◆ translate(). void RooPolyVar::translate ; (; RooFit::Detail::CodeSquashContext & ; ctx); const. overridevirtual . This function defines a translation for each RooAbsReal based object that can be used to express the class as simple C++ code. ; The function adds the code represented by each class as an std::string (that is later concatenated with code strings from translate calls) to form the C++ code that AD tools can understand. Any class that wants to support AD, has to implement this function.; Parameters. [in]ctxAn object to manage auxiliary information for code-squashing. Also takes the code string that this class outputs into the squashed code through the 'addToCodeBody' function. . Reimplemented from RooAbsArg.; Definition at line 115 of file RooPolyVar.cxx. Friends And Related Symbol Documentation. ◆ RooPolynomial. friend class RooPolynomial. friend . Definition at line 55 of file RooPolyVar.h. Member Data Documentation. ◆ _coefList. RooListProxy RooPolyVar::_coefList. protected . Definition at line 43 of file RooPolyVar.h. ◆ _lowestOrder. Int_t RooPolyVar::_lowestOrder = 0. protected . Definition at line 44 of file RooPolyVar.h. ◆ _wksp. std::vector<double> RooPolyVar::_wksp. mutableprotected . ! do not persist ; Definition at line 46 of file RooPolyVar.h. ◆ _x. RooRealProxy RooPolyVar::_x. protected . Definition at line 42 of file RooPolyVar.h. Libraries for RooPolyVar:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitcore/inc/RooPolyVar.h; roofit/roofitcore/src/RooPolyVar.cxx. RooPolyVar. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:04 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPolyVar.html:66527,Guid,Guide,66527,doc/master/classRooPolyVar.html,https://root.cern,https://root.cern/doc/master/classRooPolyVar.html,1,['Guid'],['Guide']
Usability," RooProdGenContext(const RooProdPdf& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); virtual~RooProdGenContext(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidattach(const RooArgSet& params); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooAbsGenContext::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooAbsGenContext::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooProdGenContext.html:1088,Clear,Clear,1088,root/html526/RooProdGenContext.html,https://root.cern,https://root.cern/root/html526/RooProdGenContext.html,5,['Clear'],['Clear']
Usability," RooProofDriverSelector(TTree* = 0); virtual~RooProofDriverSelector(); virtual voidTSelector::Abort(const char* why, TSelector::EAbort what = kAbortProcess); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTSelector::Begin(TTree*); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooProofDriverSelector.html:935,Clear,Clear,935,root/html530/RooProofDriverSelector.html,https://root.cern,https://root.cern/root/html530/RooProofDriverSelector.html,3,['Clear'],['Clear']
Usability," RooProofDriverSelector(TTree* = 0); virtual~RooProofDriverSelector(); virtual voidTSelector::Abort(const char* why, TSelector::EAbort what = kAbortProcess); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTSelector::Begin(TTree*); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector::G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooProofDriverSelector.html:933,Clear,Clear,933,root/html526/RooProofDriverSelector.html,https://root.cern,https://root.cern/root/html526/RooProofDriverSelector.html,2,['Clear'],['Clear']
Usability," RooRandomizeParamMCSModule(); RooRandomizeParamMCSModule(const RooRandomizeParamMCSModule& other); virtual~RooRandomizeParamMCSModule(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tRooAbsMCStudyModule::doInitializeInstance(RooMCStudy&); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRandomizeParamMCSModule.html:1551,Clear,Clear,1551,root/html526/RooRandomizeParamMCSModule.html,https://root.cern,https://root.cern/root/html526/RooRandomizeParamMCSModule.html,5,['Clear'],['Clear']
Usability," RooRangeBinning(const char* name = 0); RooRangeBinning(const RooRangeBinning&, const char* name = 0); RooRangeBinning(Double_t xmin, Double_t xmax, const char* name = 0); virtual~RooRangeBinning(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual Double_t*array() const; virtual Double_taverageBinWidth() const; virtual Double_tbinCenter(Int_t) const; virtual Double_tbinHigh(Int_t) const; virtual Double_tbinLow(Int_t) const; virtual Int_tbinNumber(Double_t) const; virtual Double_tbinWidth(Int_t) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual RooAbsBinning*clone(const char* name = 0) const; virtual TObject*RooAbsBinning::Clone(const char* newname = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRangeBinning.html:1233,Clear,Clear,1233,root/html526/RooRangeBinning.html,https://root.cern,https://root.cern/root/html526/RooRangeBinning.html,5,['Clear'],['Clear']
Usability," RooRealIntegral::init(sinhGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(coshGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(sinhGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:Plotting -- RooAbsPdf::plotOn(pdf) directly selected PDF components: (ampl1); [#1] INFO:Plotting -- RooAbsPdf::plotOn(pdf) indirectly selected PDF components: (poly1,coshGBasis); [#1] INFO:Plotting -- RooAbsReal::plotOn(pdf) plot on cosa integrates over variables (t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(coshGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(sinhGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(coshGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:Plotting -- RooAbsPdf::plotOn(pdf) directly selected PDF components: (ampl2); [#1] INFO:Plotting -- RooAbsPdf::plotOn(pdf) indirectly selected PDF components: (poly2,sinhGBasis); [#1] INFO:Plotting -- RooAbsReal::plotOn(pdf) plot on cosa integrates over variables (t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(coshGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(sinhGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); [#1] INFO:NumericIntegration -- RooRealIntegral::init(sinhGBasis_Int[t]) using numeric integrator RooIntegrator1D to calculate Int(t); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf704_amplitudefit.py. tutorialsroofitrf704_amplitudefit.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf704__amplitudefit_8py.html:8231,Guid,Guide,8231,doc/master/rf704__amplitudefit_8py.html,https://root.cern,https://root.cern/doc/master/rf704__amplitudefit_8py.html,1,['Guid'],['Guide']
Usability," RooRealProxy(); RooRealProxy(const RooRealProxy&); RooRealProxy(const char* name, RooAbsArg* owner, const RooRealProxy& other); RooRealProxy(const char* name, const char* desc, RooAbsArg* owner, Bool_t valueServer = kTRUE, Bool_t shapeServer = kFALSE, Bool_t proxyOwnsArg = kFALSE); RooRealProxy(const char* name, const char* desc, RooAbsArg* owner, RooAbsReal& ref, Bool_t valueServer = kTRUE, Bool_t shapeServer = kFALSE, Bool_t proxyOwnsArg = kFALSE); virtual~RooRealProxy(); RooAbsArg*RooArgProxy::absArg() const; voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const RooAbsReal&arg() const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*Clone(const char* newName = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRealProxy.html:1428,Clear,Clear,1428,root/html526/RooRealProxy.html,https://root.cern,https://root.cern/root/html526/RooRealProxy.html,5,['Clear'],['Clear']
Usability," RooRealVarSharedProperties(); RooRealVarSharedProperties(const RooRealVarSharedProperties&); RooRealVarSharedProperties(const char* uuidstr); virtual~RooRealVarSharedProperties(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); TStringRooSharedProperties::asString(); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual RooSharedProperties*clone(); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; voidRooSharedProperties::decreaseRefCount(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooRealVarSharedProperties.html:1077,Clear,Clear,1077,root/html534/RooRealVarSharedProperties.html,https://root.cern,https://root.cern/root/html534/RooRealVarSharedProperties.html,1,['Clear'],['Clear']
Usability," RooRealVarSharedProperties(); RooRealVarSharedProperties(const RooRealVarSharedProperties&); RooRealVarSharedProperties(const char* uuidstr); virtual~RooRealVarSharedProperties(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual RooSharedProperties*clone(); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRealVarSharedProperties.html:1037,Clear,Clear,1037,root/html526/RooRealVarSharedProperties.html,https://root.cern,https://root.cern/root/html526/RooRealVarSharedProperties.html,4,['Clear'],['Clear']
Usability," RooRefCountList(); RooRefCountList(const RooRefCountList&); virtual~RooRefCountList(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(TObject* arg); virtual voidAdd(TObject* obj, Int_t count); virtual voidTObject::AppendPad(Option_t* option = """"); TObject*RooLinkedList::At(Int_t index) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidRooLinkedList::Clear(Option_t* o = 0); virtual TObject*RooLinkedList::Clone(const char* = 0) const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidRooLinkedList::Delete(Option_t* o = 0); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooRefCountList.html:1096,Clear,Clear,1096,root/html534/RooRefCountList.html,https://root.cern,https://root.cern/root/html534/RooRefCountList.html,1,['Clear'],['Clear']
Usability," RooRefCountList(); RooRefCountList(const RooRefCountList&); virtual~RooRefCountList(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(TObject* arg); virtual voidAdd(TObject* obj, Int_t count); virtual voidTObject::AppendPad(Option_t* option = """"); TObject*RooLinkedList::At(Int_t index) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidRooLinkedList::Clear(Option_t* o = 0); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidRooLinkedList::Delete(Option_t* o = 0); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRefCountList.html:1096,Clear,Clear,1096,root/html526/RooRefCountList.html,https://root.cern,https://root.cern/root/html526/RooRefCountList.html,4,['Clear'],['Clear']
Usability," RooSegmentedIntegrator1D(); RooSegmentedIntegrator1D(const RooAbsFunc& function, const RooNumIntConfig& config); RooSegmentedIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, const RooNumIntConfig& config); virtual~RooSegmentedIntegrator1D(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); Double_tRooAbsIntegrator::calculate(const Double_t* yvec = 0); virtual Bool_tcanIntegrate1D() const; virtual Bool_tcanIntegrate2D() const; virtual Bool_tcanIntegrateND() const; virtual Bool_tcanIntegrateOpenEnded() const; virtual Bool_tcheckLimits() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual RooAbsIntegrator*clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSegmentedIntegrator1D.html:1253,Clear,Clear,1253,root/html526/RooSegmentedIntegrator1D.html,https://root.cern,https://root.cern/root/html526/RooSegmentedIntegrator1D.html,5,['Clear'],['Clear']
Usability," RooSegmentedIntegrator2D(); RooSegmentedIntegrator2D(const RooAbsFunc& function, const RooNumIntConfig& config); RooSegmentedIntegrator2D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax, const RooNumIntConfig& config); virtual~RooSegmentedIntegrator2D(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); Double_tRooAbsIntegrator::calculate(const Double_t* yvec = 0); virtual Bool_tcanIntegrate1D() const; virtual Bool_tcanIntegrate2D() const; virtual Bool_tcanIntegrateND() const; virtual Bool_tcanIntegrateOpenEnded() const; virtual Bool_tcheckLimits() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual RooAbsIntegrator*clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSegmentedIntegrator2D.html:1291,Clear,Clear,1291,root/html526/RooSegmentedIntegrator2D.html,https://root.cern,https://root.cern/root/html526/RooSegmentedIntegrator2D.html,5,['Clear'],['Clear']
Usability," RooSetPair(const RooArgSet* set1 = 0, const RooArgSet* set2 = 0); virtual~RooSetPair(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSetPair.html:733,Clear,Clear,733,root/html526/RooSetPair.html,https://root.cern,https://root.cern/root/html526/RooSetPair.html,5,['Clear'],['Clear']
Usability," RooSharedPropertiesList(); RooSharedPropertiesList(const RooSharedPropertiesList&); virtual~RooSharedPropertiesList(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSharedPropertiesList.html:860,Clear,Clear,860,root/html526/RooSharedPropertiesList.html,https://root.cern,https://root.cern/root/html526/RooSharedPropertiesList.html,5,['Clear'],['Clear']
Usability," RooSimGenContext(const RooSimultaneous& model, const RooArgSet& vars, const RooDataSet* prototype = 0, const RooArgSet* auxProto = 0, Bool_t _verbose = kFALSE); virtual~RooSimGenContext(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidattach(const RooArgSet& params); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooAbsGenContext::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooAbsGenContext::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooSimGenContext.html:1004,Clear,Clear,1004,root/html526/RooSimGenContext.html,https://root.cern,https://root.cern/root/html526/RooSimGenContext.html,5,['Clear'],['Clear']
Usability," RooSimSplitGenContext(const RooSimultaneous& model, const RooArgSet& vars, Bool_t _verbose = kFALSE, Bool_t autoBinned = kTRUE, const char* binnedTag = """"); virtual~RooSimSplitGenContext(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidattach(const RooArgSet& params); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooAbsGenContext::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooAbsGenContext::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* para",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooSimSplitGenContext.html:1025,Clear,Clear,1025,root/html532/RooSimSplitGenContext.html,https://root.cern,https://root.cern/root/html532/RooSimSplitGenContext.html,2,['Clear'],['Clear']
Usability," RooSpHarmonic.cxx. ◆ getMaxVal(). Int_t RooSpHarmonic::getMaxVal ; (; const RooArgSet & ; vars); const. overridevirtual . Advertise capability to determine maximum value of function for given set of observables. ; If no direct generator method is provided, this information will assist the accept/reject generator to operate more efficiently as it can skip the initial trial sampling phase to empirically find the function maximum ; Reimplemented from RooLegendre.; Definition at line 167 of file RooSpHarmonic.cxx. ◆ IsA(). TClass * RooSpHarmonic::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooLegendre.; Definition at line 42 of file RooSpHarmonic.h. ◆ maxVal(). double RooSpHarmonic::maxVal ; (; Int_t ; code); const. overridevirtual . Return maximum value for set of observables identified by code assigned in getMaxVal. ; Reimplemented from RooLegendre.; Definition at line 171 of file RooSpHarmonic.cxx. ◆ Streamer(). void RooSpHarmonic::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooLegendre. ◆ StreamerNVirtual(). void RooSpHarmonic::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 42 of file RooSpHarmonic.h. Member Data Documentation. ◆ _n. double RooSpHarmonic::_n. private . Definition at line 37 of file RooSpHarmonic.h. ◆ _phi. RooRealProxy RooSpHarmonic::_phi. private . Definition at line 36 of file RooSpHarmonic.h. ◆ _sgn1. int RooSpHarmonic::_sgn1. private . Definition at line 38 of file RooSpHarmonic.h. ◆ _sgn2. int RooSpHarmonic::_sgn2. private . Definition at line 38 of file RooSpHarmonic.h. Libraries for RooSpHarmonic:. [legend]; The documentation for this class was generated from the following files:; roofit/roofitmore/inc/RooSpHarmonic.h; roofit/roofitmore/src/RooSpHarmonic.cxx. RooSpHarmonic. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:09 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSpHarmonic.html:66454,Guid,Guide,66454,doc/master/classRooSpHarmonic.html,https://root.cern,https://root.cern/doc/master/classRooSpHarmonic.html,1,['Guid'],['Guide']
Usability, RooStats::HypoTestPlot. RooStats::HypoTestResult←. RooStats::HybridResult. RooStats::LikelihoodInterval. RooStats::LikelihoodIntervalPlot. RooStats::MCMCCalculator. RooStats::MCMCInterval. RooStats::MCMCIntervalPlot. RooStats::MarkovChain. RooStats::MaxLikelihoodEstimateTestStat. RooStats::MetropolisHastings. RooStats::MinNLLTestStat. RooStats::ModelConfig. RooStats::NeymanConstruction. RooStats::NumEventsTestStat. RooStats::PdfProposal. RooStats::PointSetInterval. RooStats::ProfileLikelihoodCalculator. RooStats::ProfileLikelihoodTestStat. RooStats::ProposalFunction←. RooStats::PdfProposal. RooStats::SequentialProposal. RooStats::UniformProposal. RooStats::ProposalHelper. RooStats::RatioOfProfiledLikelihoodsTestStat. RooStats::SPlot. RooStats::SamplingDistPlot←. RooStats::HypoTestPlot. RooStats::SamplingDistribution. RooStats::SamplingSummary. RooStats::SamplingSummaryLookup. RooStats::SequentialProposal. RooStats::SimpleInterval←. RooStats::HypoTestInverterResult. RooStats::SimpleLikelihoodRatioTestStat. RooStats::ToyMCImportanceSampler. RooStats::ToyMCPayload. RooStats::ToyMCSampler←. RooStats::ToyMCImportanceSampler. RooStats::ToyMCStudy. RooStats::UniformProposal. RooStats::UpperLimitMCSModule. RooStepFunction. RooStringVar. RooStudyManager. RooStudyPackage. RooSuperCategory. RooTFnBinding. RooTFnPdfBinding. RooTFoamBinding. RooTObjWrap. RooTable←. Roo1DTable. RooThreshEntry. RooThresholdCategory. RooTreeData. RooTreeDataStore. RooTruthModel. RooUnblindCPAsymVar. RooUnblindOffset. RooUnblindPrecision. RooUnblindUniform. RooUniform. RooUniformBinning. RooUnitTest. RooVectorDataStore. RooVectorDataStore::RealFullVector. RooVoigtian. RooWorkspace. RooWorkspace::CodeRepo. RooWorkspace::WSDir. RooXYChi2Var. TASImage. TASImagePlugin←. TASPluginGS. TASPaletteEditor. TASPluginGS. TAdvancedGraphicsDialog. TApplication←. PyROOT::TPyROOTApplication. TApplicationRemote. TApplicationServer. TGApplication. TProofServ; ←. TProofServLite. TXProofServ. TQApplication. TRint. TApp,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassHierarchy.html:27120,Simpl,SimpleLikelihoodRatioTestStat,27120,root/html534/ClassHierarchy.html,https://root.cern,https://root.cern/root/html534/ClassHierarchy.html,3,['Simpl'],['SimpleLikelihoodRatioTestStat']
Usability," RooStudyManager(RooWorkspace& w); RooStudyManager(const char* studyPackFileName); RooStudyManager(RooWorkspace& w, RooAbsStudy& study); ~RooStudyManager(); voidTObject::AbstractMethod(const char* method) const; voidaddStudy(RooAbsStudy& study); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; static voidcloseProof(Option_t* option = ""s""); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStudyManager.html:923,Clear,Clear,923,root/html530/RooStudyManager.html,https://root.cern,https://root.cern/root/html530/RooStudyManager.html,3,['Clear'],['Clear']
Usability," RooStudyManager(RooWorkspace& w); RooStudyManager(const char* studyPackFileName); RooStudyManager(RooWorkspace& w, RooAbsStudy& study); ~RooStudyManager(); voidTObject::AbstractMethod(const char* method) const; voidaddStudy(RooAbsStudy& study); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStudyManager.html:923,Clear,Clear,923,root/html526/RooStudyManager.html,https://root.cern,https://root.cern/root/html526/RooStudyManager.html,2,['Clear'],['Clear']
Usability," RooStudyPackage(); RooStudyPackage(RooWorkspace& w); RooStudyPackage(const RooStudyPackage&); ~RooStudyPackage(); voidTObject::AbstractMethod(const char* method) const; voidaddStudy(RooAbsStudy& study); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*Clone(const char* = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; voiddriver(Int_t nExperiments); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); voidexportData(TList* olist, Int_t seqno); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); voidfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::Fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStudyPackage.html:881,Clear,Clear,881,root/html530/RooStudyPackage.html,https://root.cern,https://root.cern/root/html530/RooStudyPackage.html,3,['Clear'],['Clear']
Usability," RooStudyPackage(); RooStudyPackage(RooWorkspace& w); ~RooStudyPackage(); voidTObject::AbstractMethod(const char* method) const; voidaddStudy(RooAbsStudy& study); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; voiddriver(Int_t nExperiments); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); voidexportData(TList* olist, Int_t seqno); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); voidfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStudyPackage.html:840,Clear,Clear,840,root/html526/RooStudyPackage.html,https://root.cern,https://root.cern/root/html526/RooStudyPackage.html,2,['Clear'],['Clear']
Usability," RooTFoamBinding(const RooTFoamBinding&); RooTFoamBinding(const RooAbsReal& pdf, const RooArgSet& observables); virtual~RooTFoamBinding(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); RooRealBinding&binding(); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Double_tDensity(Int_t ndim, Double_t*); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooTFoamBinding.html:830,Clear,Clear,830,root/html526/RooTFoamBinding.html,https://root.cern,https://root.cern/root/html526/RooTFoamBinding.html,5,['Clear'],['Clear']
Usability," RooTObjWrap(Bool_t isArray = kFALSE); RooTObjWrap(const RooTObjWrap& other); RooTObjWrap(TObject* inObj, Bool_t isArray = kFALSE); virtual~RooTObjWrap(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooTObjWrap.html:802,Clear,Clear,802,root/html526/RooTObjWrap.html,https://root.cern,https://root.cern/root/html526/RooTObjWrap.html,5,['Clear'],['Clear']
Usability," RooThreshEntry(); RooThreshEntry(const RooThreshEntry& other); RooThreshEntry(Double_t thresh, const RooCatType& cat); virtual~RooThreshEntry(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); const RooCatType&cat() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*Clone(const char*) const; virtual Int_tCompare(const TObject*) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooThreshEntry.html:834,Clear,Clear,834,root/html526/RooThreshEntry.html,https://root.cern,https://root.cern/root/html526/RooThreshEntry.html,5,['Clear'],['Clear']
Usability," RooThresholdCategory, RooTreeDataStore, RooTruthModel, RooUniformBinning, RooVectorDataStore, RooWorkspace::CodeRepo, RooWorkspace::WSDir, RooWorkspace, RooWrapperPdf, RooLegendre, RooNonCentralChiSquare, RooSpHarmonic, RooStats::BayesianCalculator, RooStats::SamplingSummaryLookup, RooStats::AcceptanceRegion, RooStats::SamplingSummary, RooStats::ConfidenceBelt, RooStats::ConfInterval, RooStats::Heaviside, RooStats::HLFactory, RooStats::HybridPlot, RooStats::HybridResult, RooStats::HypoTestInverterPlot, RooStats::HypoTestInverterResult, RooStats::HypoTestPlot, RooStats::HypoTestResult, RooStats::LikelihoodInterval, RooStats::LikelihoodIntervalPlot, RooStats::MarkovChain, RooStats::MCMCCalculator, RooStats::MCMCInterval, RooStats::MCMCIntervalPlot, RooStats::MetropolisHastings, RooStats::PdfProposal, RooStats::PointSetInterval, RooStats::ProposalFunction, RooStats::ProposalHelper, RooStats::SamplingDistPlot, RooStats::SamplingDistribution, RooStats::SequentialProposal, RooStats::SimpleInterval, RooStats::SPlot, RooStats::ToyMCStudy, RooStats::ToyMCPayload, RooStats::UniformProposal, RooStats::UpperLimitMCSModule, ROOT::Experimental::XRooFit::xRooBrowser, ROOT::Experimental::XRooFit::xRooNode, TODBCResult, TODBCRow, TMVA::CvSplitKFolds, TMVA::Results, TMVA::ResultsClassification, TMVA::ResultsMulticlass, TMVA::ResultsRegression, ROOT::Experimental::Internal::RKeyBlob, ROOT::Internal::TreeUtils::RNoCleanupNotifier, TBasket, TBasketSQL, TBranch, TVirtualBranchBrowsable, TMethodBrowsable, TNonSplitBrowsable, TCollectionPropertyBrowsable, TCollectionMethodBrowsable, TBranchClones, TBranchElement, TBranchObject, TBranchRef, TBranchSTL, TBufferSQL, TChain, TChainElement, TCut, TEntryList, TEntryListArray, TEntryListBlock, TEntryListFromFile, TEventList, TFriendElement, TLeaf, TLeafB, TLeafC, TLeafD, TLeafD32, TLeafElement, TLeafF, TLeafF16, TLeafG, TLeafI, TLeafL, TLeafO, TLeafObject, TLeafS, TNtuple, TNtupleD, TQueryResult, TSelector, TSelectorScalar, TTree, TTreeCache, TTr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObject.html:68302,Simpl,SimpleInterval,68302,doc/master/classTObject.html,https://root.cern,https://root.cern/doc/master/classTObject.html,1,['Simpl'],['SimpleInterval']
Usability," RooThresholdCategory, RooTreeDataStore, RooTruthModel, RooUniformBinning, RooVectorDataStore, RooWorkspace::CodeRepo, RooWorkspace::WSDir, RooWorkspace, RooWrapperPdf, RooLegendre, RooNonCentralChiSquare, RooSpHarmonic, RooStats::BayesianCalculator, RooStats::SamplingSummaryLookup, RooStats::AcceptanceRegion, RooStats::SamplingSummary, RooStats::ConfidenceBelt, RooStats::ConfInterval, RooStats::Heaviside, RooStats::HLFactory, RooStats::HybridPlot, RooStats::HybridResult, RooStats::HypoTestInverterPlot, RooStats::HypoTestInverterResult, RooStats::HypoTestPlot, RooStats::HypoTestResult, RooStats::LikelihoodInterval, RooStats::LikelihoodIntervalPlot, RooStats::MarkovChain, RooStats::MCMCCalculator, RooStats::MCMCInterval, RooStats::MCMCIntervalPlot, RooStats::MetropolisHastings, RooStats::PdfProposal, RooStats::PointSetInterval, RooStats::ProposalFunction, RooStats::ProposalHelper, RooStats::SamplingDistPlot, RooStats::SamplingDistribution, RooStats::SequentialProposal, RooStats::SimpleInterval, RooStats::SPlot, RooStats::ToyMCStudy, RooStats::ToyMCPayload, RooStats::UniformProposal, RooStats::UpperLimitMCSModule, ROOT::Experimental::XRooFit::xRooBrowser, ROOT::Experimental::XRooFit::xRooNode, TODBCResult, TODBCRow, TMVA::CvSplitKFolds, TMVA::Results, TMVA::ResultsClassification, TMVA::ResultsMulticlass, TMVA::ResultsRegression, ROOT::Internal::TreeUtils::RNoCleanupNotifier, TBasket, TBasketSQL, TBranch, TVirtualBranchBrowsable, TMethodBrowsable, TNonSplitBrowsable, TCollectionPropertyBrowsable, TCollectionMethodBrowsable, TBranchClones, TBranchElement, TBranchObject, TBranchRef, TBranchSTL, TBufferSQL, TChain, TChainElement, TCut, TEntryList, TEntryListArray, TEntryListBlock, TEntryListFromFile, TEventList, TFriendElement, TLeaf, TLeafB, TLeafC, TLeafD, TLeafD32, TLeafElement, TLeafF, TLeafF16, TLeafG, TLeafI, TLeafL, TLeafO, TLeafObject, TLeafS, TNtuple, TNtupleD, TQueryResult, TSelector, TSelectorScalar, TTree, TTreeCache, TTreeCacheUnzip, TTreeSQL, TVirtualIndex, T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObject.html:113096,Simpl,SimpleInterval,113096,doc/master/classTObject.html,https://root.cern,https://root.cern/doc/master/classTObject.html,1,['Simpl'],['SimpleInterval']
Usability," RooUniformBinning(const char* name = 0); RooUniformBinning(const RooUniformBinning& other, const char* name = 0); RooUniformBinning(Double_t xlo, Double_t xhi, Int_t nBins, const char* name = 0); virtual~RooUniformBinning(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual Double_t*array() const; virtual Double_taverageBinWidth() const; virtual Double_tbinCenter(Int_t bin) const; virtual Double_tbinHigh(Int_t bin) const; virtual Double_tbinLow(Int_t bin) const; virtual Int_tbinNumber(Double_t x) const; virtual Double_tbinWidth(Int_t bin) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual RooAbsBinning*clone(const char* name = 0) const; virtual TObject*RooAbsBinning::Clone(const char* newname = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooUniformBinning.html:1388,Clear,Clear,1388,root/html526/RooUniformBinning.html,https://root.cern,https://root.cern/root/html526/RooUniformBinning.html,5,['Clear'],['Clear']
Usability," Rule.h. ◆ SetSSBNeve(). void TMVA::Rule::SetSSBNeve ; (; Double_t ; v). inline . Definition at line 93 of file Rule.h. ◆ SetSupport(). void TMVA::Rule::SetSupport ; (; Double_t ; v). inline . Definition at line 87 of file Rule.h. Friends And Related Symbol Documentation. ◆ operator<<. std::ostream & operator<< ; (; std::ostream & ; os, . const Rule & ; rule . ). friend . Member Data Documentation. ◆ fCoefficient. Double_t TMVA::Rule::fCoefficient. private . rule coeff. a(k) ; Definition at line 176 of file Rule.h. ◆ fCut. RuleCut* TMVA::Rule::fCut. private . all cuts associated with the rule ; Definition at line 172 of file Rule.h. ◆ fImportance. Double_t TMVA::Rule::fImportance. private . importance of rule ; Definition at line 177 of file Rule.h. ◆ fImportanceRef. Double_t TMVA::Rule::fImportanceRef. private . importance ref ; Definition at line 178 of file Rule.h. ◆ fLogger. MsgLogger* TMVA::Rule::fLogger. mutableprivate . ! message logger ; Definition at line 183 of file Rule.h. ◆ fNorm. Double_t TMVA::Rule::fNorm. private . normalization - usually 1.0/t(k) ; Definition at line 173 of file Rule.h. ◆ fRuleEnsemble. const RuleEnsemble* TMVA::Rule::fRuleEnsemble. private . pointer to parent RuleEnsemble ; Definition at line 179 of file Rule.h. ◆ fSigma. Double_t TMVA::Rule::fSigma. private . t(k) = sqrt(s*(1-s)) ; Definition at line 175 of file Rule.h. ◆ fSSB. Double_t TMVA::Rule::fSSB. private . S/(S+B) for rule. ; Definition at line 180 of file Rule.h. ◆ fSSBNeve. Double_t TMVA::Rule::fSSBNeve. private . N(events) reaching the last node in reevaluation. ; Definition at line 181 of file Rule.h. ◆ fSupport. Double_t TMVA::Rule::fSupport. private . s(k) ; Definition at line 174 of file Rule.h. Libraries for TMVA::Rule:. [legend]; The documentation for this class was generated from the following files:; tmva/tmva/inc/TMVA/Rule.h; tmva/tmva/src/Rule.cxx. TMVARule. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:42 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Rule.html:11859,Guid,Guide,11859,doc/master/classTMVA_1_1Rule.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Rule.html,1,['Guid'],['Guide']
Usability," Sample, fit and plot convoluted pdf; # ----------------------------------------------------------------------; ; # Sample 1000 events in x from gxlx; data = lxg.generate({t}, 10000); ; # Fit gxlx to data; lxg.fitTo(data, PrintLevel=-1); ; # Plot data, pdf, landau (X) gauss pdf; frame = t.frame(Title=""landau (x) gauss convolution""); data.plotOn(frame); lxg.plotOn(frame); landau.plotOn(frame, LineStyle=""--""); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf208_convolution"", ""rf208_convolution"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf208_convolution.png""); [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x85ab260 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; [#1] INFO:Fitting -- RooAbsPdf::fitTo(lxg_over_lxg_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_lxg_over_lxg_Int[t]_lxgData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x88084e0 with pdf lx_CONV_gauss_CACHE_Obs[t] for nset () with code 1 from preexisting content.; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x82935f0 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf208_convolution.py. tutorialsroofitrf208_convolution.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf208__convolution_8py.html:3104,Guid,Guide,3104,doc/master/rf208__convolution_8py.html,https://root.cern,https://root.cern/doc/master/rf208__convolution_8py.html,1,['Guid'],['Guide']
Usability," Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; List of all members ; TBrowserObject Class Reference. ; This class is designed to wrap a Foreign object in order to inject it into the Browse sub-system. ; Definition at line 80 of file TBrowser.cxx. Public Member Functions;  TBrowserObject (void *obj, TClass *cl, const char *brname);  ;  ~TBrowserObject ();  ; void Browse (TBrowser *b) override;  Browse object. May be overridden for another default action. ;  ; TClass * IsA () const override;  ; Bool_t IsFolder () const override;  Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ;  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; TClass * IsA () const override;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBrowserObject.html:1060,Clear,Clear,1060,doc/master/classTBrowserObject.html,https://root.cern,https://root.cern/doc/master/classTBrowserObject.html,1,['Clear'],['Clear']
Usability," Searching...; No Matches. Namespaces ; rf706_histpdf.py File ReferenceTutorials » RooFit Tutorials. Detailed Description; Special pdf's: histogram based pdfs and functions . ; import ROOT; ; ; # Create pdf for sampling; # ---------------------------------------------; ; x = ROOT.RooRealVar(""x"", ""x"", 0, 20); p = ROOT.RooPolynomial(""p"", ""p"", x, [0.01, -0.01, 0.0004]); ; # Create low stats histogram; # ---------------------------------------------------; ; # Sample 500 events from p; x.setBins(20); data1 = p.generate({x}, 500); ; # Create a binned dataset with 20 bins and 500 events; hist1 = data1.binnedClone(); ; # Represent data in dh as pdf in x; histpdf1 = ROOT.RooHistPdf(""histpdf1"", ""histpdf1"", {x}, hist1, 0); ; # Plot unbinned data and histogram pdf overlaid; frame1 = x.frame(Title=""Low statistics histogram pdf"", Bins=100); data1.plotOn(frame1); histpdf1.plotOn(frame1); ; # Create high stats histogram; # -----------------------------------------------------; ; # Sample 100000 events from p; x.setBins(10); data2 = p.generate({x}, 100000); ; # Create a binned dataset with 10 bins and 100K events; hist2 = data2.binnedClone(); ; # Represent data in dh as pdf in x, 2nd order interpolation; histpdf2 = ROOT.RooHistPdf(""histpdf2"", ""histpdf2"", {x}, hist2, 2); ; # Plot unbinned data and histogram pdf overlaid; frame2 = x.frame(Title=""High stats histogram pdf with interpolation"", Bins=100); data2.plotOn(frame2); histpdf2.plotOn(frame2); ; c = ROOT.TCanvas(""rf706_histpdf"", ""rf706_histpdf"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame1.GetYaxis().SetTitleOffset(1.4); frame1.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.8); frame2.Draw(); ; c.SaveAs(""rf706_histpdf.png""); DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C++ version) ; Definition in file rf706_histpdf.py. tutorialsroofitrf706_histpdf.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf706__histpdf_8py.html:2032,Guid,Guide,2032,doc/master/rf706__histpdf_8py.html,https://root.cern,https://root.cern/doc/master/rf706__histpdf_8py.html,1,['Guid'],['Guide']
Usability," Searching...; No Matches. ROOTR.C. Go to the documentation of this file. 1//script to test Modules; 2#include<TRInterface.h>; 3 ; 4Double_t myFunc(Double_t x); 5{; 6 return cos(x);; 7}; 8 ; 9void ROOTR(); 10{; 11 ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; 12 r.SetVerbose(kFALSE);; 13 r.LoadModule(""Gpad"");; 14 r.LoadModule(""Hist"");; 15 r.LoadModule(""Rint"");; 16 ; 17 r<<""x<-seq(0,2*pi,by=.1)"";; 18 r<<""c1<-new(TCanvas,'c1','dlnorm')"";; 19 r<<""u <-new(TGraph,length(x),x,dlnorm(x))"" ;//TGraph(int,double*,double*); 20 r<<""u$Draw()"";; 21 ; 22 r<<""c2<-new(TCanvas,'c2','DiLog from TMath')"";; 23 r<<""o<- new(TF1,'dilog','TMath::DiLog(x)',0,2*pi)"";; 24 r<<""o$Draw()"";; 25// ; 26 r<<""c3<-new(TCanvas,'c3','Custom')"";; 27 r<<""i <- new(TF1,'f2','[0]*myFunc([1]*x)',0,2*pi)""; ; 28 r<<""i$SetRange(0,2*pi)"";; 29 r<<""i$SetParameter(0,4)"";; 30 r<<""i$SetParameter(1,pi/2)"";; 31 r<<""print(i$Eval(0))"";; 32 r<<""print(i$Eval(c(0,pi)))"";; 33 r<<""i$Draw('')"";; 34 ; 35// r<<""gApp<-new(TRint,'ROOTR')"";; 36// r<<""gApp$ProcessLine('cout<<\""Calling cout from TRint\""<<endl;')"";; 37 ; 38}; ROOTRvoid ROOTR()Definition ROOTR.C:9; myFuncDouble_t myFunc(Double_t x)Definition ROOTR.C:4; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; Double_tdouble Double_tDefinition RtypesCore.h:59; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TRInterface.h; ROOT::R::TRInterfaceROOT R was implemented using the R Project library and the modules Rcpp and RInsideDefinition TRInterface.h:136; ROOT::R::TRInterface::Instancestatic TRInterface & Instance()static method to get an TRInterface instance referenceDefinition TRInterface.cxx:187; xDouble_t x[n]Definition legend1.C:17. bindingsrtestsROOTR.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:02 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ROOTR_8C_source.html:2020,Guid,Guide,2020,doc/master/ROOTR_8C_source.html,https://root.cern,https://root.cern/doc/master/ROOTR_8C_source.html,1,['Guid'],['Guide']
Usability," Set EYlow for point i. ; Definition at line 1376 of file TGraphAsymmErrors.cxx. ◆ Streamer(). void TGraphAsymmErrors::Streamer ; (; TBuffer & ; b). overridevirtual . Stream an object of class TGraphAsymmErrors. ; Reimplemented from TGraph.; Definition at line 1404 of file TGraphAsymmErrors.cxx. ◆ StreamerNVirtual(). void TGraphAsymmErrors::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 89 of file TGraphAsymmErrors.h. ◆ SwapPoints(). void TGraphAsymmErrors::SwapPoints ; (; Int_t ; pos1, . Int_t ; pos2 . ). overrideprotectedvirtual . Swap points. ; Reimplemented from TGraph.; Definition at line 1456 of file TGraphAsymmErrors.cxx. ◆ UpdateArrays(). void TGraphAsymmErrors::UpdateArrays ; (; const std::vector< Int_t > & ; sorting_indices, . Int_t ; numSortedPoints, . Int_t ; low . ). overrideprotectedvirtual . Update the fX, fY, fEXlow, fEXhigh, fEYlow and fEYhigh arrays with the sorted values. ; Reimplemented from TGraph.; Definition at line 1468 of file TGraphAsymmErrors.cxx. Member Data Documentation. ◆ fEXhigh. Double_t* TGraphAsymmErrors::fEXhigh {nullptr}. protected . [fNpoints] array of X high errors ; Definition at line 30 of file TGraphAsymmErrors.h. ◆ fEXlow. Double_t* TGraphAsymmErrors::fEXlow {nullptr}. protected . [fNpoints] array of X low errors ; Definition at line 29 of file TGraphAsymmErrors.h. ◆ fEYhigh. Double_t* TGraphAsymmErrors::fEYhigh {nullptr}. protected . [fNpoints] array of Y high errors ; Definition at line 32 of file TGraphAsymmErrors.h. ◆ fEYlow. Double_t* TGraphAsymmErrors::fEYlow {nullptr}. protected . [fNpoints] array of Y low errors ; Definition at line 31 of file TGraphAsymmErrors.h. Libraries for TGraphAsymmErrors:. [legend]; The documentation for this class was generated from the following files:; hist/hist/inc/TGraphAsymmErrors.h; hist/hist/src/TGraphAsymmErrors.cxx. TGraphAsymmErrors. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphAsymmErrors.html:54491,Guid,Guide,54491,doc/master/classTGraphAsymmErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphAsymmErrors.html,1,['Guid'],['Guide']
Usability," Set color with its R G B components. . r: % of red in [0,1]; g: % of green in [0,1]; b: % of blue in [0,1] . Implements TVirtualPS.; Definition at line 981 of file TImageDump.cxx. ◆ SetType(). void TImageDump::SetType ; (; Int_t ; type = -111). inlineoverridevirtual . Reimplemented from TVirtualPS.; Definition at line 54 of file TImageDump.h. ◆ Streamer(). void TImageDump::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TImageDump::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 58 of file TImageDump.h. ◆ Text() [1/2]. void TImageDump::Text ; (; Double_t ; x, . Double_t ; y, . const char * ; chars . ). overridevirtual . Draw text. . x: x position of the text; y: y position of the text . Implements TVirtualPS.; Definition at line 854 of file TImageDump.cxx. ◆ Text() [2/2]. void TImageDump::Text ; (; Double_t ; x, . Double_t ; y, . const wchar_t * ; chars . ). overridevirtual . Draw text. . x: x position of the text; y: y position of the text . Implements TVirtualPS.; Definition at line 877 of file TImageDump.cxx. ◆ XtoPixel(). Int_t TImageDump::XtoPixel ; (; Double_t ; x). protected . x to pixel ; Definition at line 988 of file TImageDump.cxx. ◆ YtoPixel(). Int_t TImageDump::YtoPixel ; (; Double_t ; y). protected . y to pixel ; Definition at line 996 of file TImageDump.cxx. Member Data Documentation. ◆ fImage. TImage* TImageDump::fImage {nullptr}. protected . Image. ; Definition at line 24 of file TImageDump.h. ◆ fType. Int_t TImageDump::fType {0}. protected . PostScript workstation type. ; Definition at line 25 of file TImageDump.h. Libraries for TImageDump:. [legend]; The documentation for this class was generated from the following files:; graf2d/postscript/inc/TImageDump.h; graf2d/postscript/src/TImageDump.cxx. TImageDump. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:51 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTImageDump.html:30261,Guid,Guide,30261,doc/master/classTImageDump.html,https://root.cern,https://root.cern/doc/master/classTImageDump.html,1,['Guid'],['Guide']
Usability, SimpleInterval.cxx. ◆ IsA(). TClass * RooStats::SimpleInterval::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooStats::ConfInterval.; Definition at line 60 of file SimpleInterval.h. ◆ IsInInterval(). bool SimpleInterval::IsInInterval ; (; const RooArgSet & ; parameterPoint); const. overridevirtual . check if parameter is in the interval ; Method to determine if a parameter point is in the interval. ; Implements RooStats::ConfInterval.; Definition at line 93 of file SimpleInterval.cxx. ◆ LowerLimit(). virtual double RooStats::SimpleInterval::LowerLimit ; (; ). inlinevirtual . return the interval lower limit ; Reimplemented in RooStats::HypoTestInverterResult.; Definition at line 46 of file SimpleInterval.h. ◆ operator=(). SimpleInterval & SimpleInterval::operator= ; (; const SimpleInterval & ; other). default constructor ; Definition at line 64 of file SimpleInterval.cxx. ◆ SetConfidenceLevel(). void RooStats::SimpleInterval::SetConfidenceLevel ; (; double ; ). inlineoverridevirtual . set the confidence level for the interval. ; Simple interval is defined at construction time so this function has no effect ; Implements RooStats::ConfInterval.; Definition at line 40 of file SimpleInterval.h. ◆ Streamer(). void RooStats::SimpleInterval::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooStats::ConfInterval. ◆ StreamerNVirtual(). void RooStats::SimpleInterval::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 60 of file SimpleInterval.h. ◆ UpperLimit(). virtual double RooStats::SimpleInterval::UpperLimit ; (; ). inlinevirtual . return the interval upper limit ; Reimplemented in RooStats::HypoTestInverterResult.; Definition at line 48 of file SimpleInterval.h. Member Data Documentation. ◆ fConfidenceLevel. double RooStats::SimpleInterval::fConfidenceLevel. confidence level ; Definition at line 65 of file SimpleInt,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1SimpleInterval.html:16441,Simpl,SimpleInterval,16441,doc/master/classRooStats_1_1SimpleInterval.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1SimpleInterval.html,1,['Simpl'],['SimpleInterval']
Usability," Ssiz_t TString::Capacity ; (; ); const. inline . Definition at line 364 of file TString.h. ◆ Capacity() [2/2]. Ssiz_t TString::Capacity ; (; Ssiz_t ; nc). Return string capacity. ; If nc != current capacity Clone() the string in a string with the desired capacity. ; Definition at line 442 of file TString.cxx. ◆ Chop(). TString & TString::Chop ; (; ). inline . Definition at line 691 of file TString.h. ◆ Class(). static TClass * TString::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TString::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TString::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 473 of file TString.h. ◆ Clear(). void TString::Clear ; (; ). Clear string without changing its capacity. ; Definition at line 1235 of file TString.cxx. ◆ Clobber(). Ssiz_t TString::Clobber ; (; Ssiz_t ; nc). protected . Clear string and make sure it has a capacity of nc. ; WarningIf nc > MaxSize(), then Fatal() is raised, and only MaxSize() elements are allocated if Fatal does not abort ; ReturnsResulting allocated capacity (after clamping, if needed) ; Definition at line 1246 of file TString.cxx. ◆ Clone(). void TString::Clone ; (; Ssiz_t ; tot). private . Make self a distinct copy with capacity of at least tot, where tot cannot be smaller than the current length. ; Preserve previous contents. WarningIf tot > MaxSize(), then Fatal() is raised and only MaxSize() elements are allocated ; Definition at line 1279 of file TString.cxx. ◆ CompareTo() [1/2]. int TString::CompareTo ; (; const char * ; cs2, . ECaseCompare ; cmp = kExact . ); const. Compare a string to char *cs2. ; Returns returns zero if the two strings are identical, otherwise returns the difference between the first two differing bytes (treated as unsigned char values, so that ‘\200’ is greater than ‘\0’, for example). Zero-length strings are always identical. ; Def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTString.html:25264,Clear,Clear,25264,doc/master/classTString.html,https://root.cern,https://root.cern/doc/master/classTString.html,2,['Clear'],['Clear']
Usability," Static Public Member Functions |; Private Attributes |; List of all members ; ROOT::Internal::TreeUtils::RNoCleanupNotifier Class Reference. . Definition at line 64 of file InternalTreeUtils.hxx. Public Member Functions;  RNoCleanupNotifier ();  ; TClass * IsA () const override;  ; void RegisterChain (TChain &c);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNotifyLink< RNoCleanupNotifierHelper >;  TNotifyLink (RNoCleanupNotifierHelper *subscriber);  ; TClass * IsA () const override;  ; Bool_t Notify () override;  Call Notify on our subscriber and propagate the call to the next link. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNotifyLinkBase; void Clear (Option_t *="""") override;  ; TObject * GetNext () const;  ; TClass * IsA () const override;  ; Bool_t IsLinked ();  ; template<class Chain > ; void PrependLink (Chain &chain);  Set this link as the head of the chain's list of notify subscribers. ;  ; template<class Chain > ; void RemoveLink (Chain &chain);  Remove this link from a chain's list of notify subscribers. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1TreeUtils_1_1RNoCleanupNotifier.html:1142,Clear,Clear,1142,doc/master/classROOT_1_1Internal_1_1TreeUtils_1_1RNoCleanupNotifier.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1TreeUtils_1_1RNoCleanupNotifier.html,1,['Clear'],['Clear']
Usability," Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a1 8.9483e-03 +/- 2.70e-02; a2 1.0177e-01 +/- 1.69e-02; ; ==> ML Fit results on 43K unweighted events; ; RooFitResult: minimized FCN value: 118892, estimated distance to minimum: 0.000206627; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a1 -1.2106e-03 +/- 4.02e-03; a2 9.7573e-02 +/- 2.37e-03; ; ==> ML Fit results on 1K weighted events with a summed weight of 43K; ; RooFitResult: minimized FCN value: 119682, estimated distance to minimum: 1.25398e-05; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a1 -4.8713e-03 +/- 4.03e-03; a2 9.8645e-02 +/- 2.41e-03; ; ==> Corrected ML Fit results on 1K weighted events with a summed weight of 43K; ; RooFitResult: minimized FCN value: 119682, estimated distance to minimum: 79498.5; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a1 -4.8565e-03 +/- 3.00e-02; a2 9.8652e-02 +/- 2.99e-02; ; ==> Chi2 Fit results on 1K weighted events with a summed weight of 43K; ; RooFitResult: minimized FCN value: 31.3747, estimated distance to minimum: 4.135e-08; covariance matrix quality: Full, accurate covariance matrix; Status : MIGRAD=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a1 -9.9890e-03 +/- 2.63e-02; a2 1.0637e-01 +/- 1.02e-02; ; DateJuly 2008 ; AuthorWouter Verkerke ; Definition in file rf403_weightedevts.C. tutorialsroofitrf403_weightedevts.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf403__weightedevts_8C.html:15745,Guid,Guide,15745,doc/master/rf403__weightedevts_8C.html,https://root.cern,https://root.cern/doc/master/rf403__weightedevts_8C.html,1,['Guid'],['Guide']
Usability," Storage Representation;  Matrix and Vector classesClasses representing Matrices and Vectors of arbitrary type and dimension ;  Unuran;  VecOps;  ▼Monte CarloThe Monte Carlo related packages ;  EGParticle Data Group interface ;  Pythia6The Pythia6 interface ;  Pythia8The Pythia8 interface ;  VMCVirtual Monte Carlo ;  ▼PROOFClasses defining the Parallel ROOT Facility, PROOF, a framework for parallel analysis of ROOT TTrees ;  PROOF kernel LibrariesThe PROOF kernel libraries (libProof, libProofPlayer, libProofDraw) contain the classes defining the kernel of the PROOF facility, i.e ;  PROOF benchmark utilitiesSet of utilities to benchmark a PROOF facility ;  XProofD client LibraryThe XProofD client library, libProofx, contain the classes providing the client to interact with the XRootD-based xproofd daemon ;  TMVAThe Multi Variate Analysis package ;  ▼RoofitRooFit toolkit classes ;  RoofitcoreCore RooFit classes ;  ►RoostatsRooStats toolkit classes ;  HistFactoryFactory classes to create RooFit workspaces from histograms ;  DataFrameROOT's RDataFrame allows to analyse data stored in TTrees with a high level interface ;  Tree LibraryTo store large quantities of same-class objects, ROOT provides the TTree and TNtuple classes ;  ▼TutorialsA collection of macros helping to learn ROOT by example ;  Tutorials specific to Mac/CocoaVarious examples showing graphics done with the Mac graphics system Cocoa. These examples run only on Mac/Os ;  Containers tutorialsExamples showing the ""containers' classes"" usage. ;  Data Frame tutorialsThese examples show the functionalities of RDataFrame: ROOT's declarative analysis interface ;  Event display tutorialsExamples showing the ""Event display classes"" usage. ;  Fast Fourier Transforms tutorialsExample showing the Fast Fourier Transforms interface in ROOT ;  Fit TutorialsThese tutorials illustrate the main fitting features. Their names are related to the aspect which is treated in the code ;  FITS files interface tutorialsExamples showi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v616/modules.html:9043,learn,learn,9043,doc/v616/modules.html,https://root.cern,https://root.cern/doc/v616/modules.html,1,['learn'],['learn']
Usability," T, D > ROOT::Math::operator/ ; (; const SVector< T, D > & ; lhs, . const A & ; rhs . ). inline . Division of the vector element by a scalar value: v2(i) = v1(i)/a returning a vector expression. ; Definition at line 837 of file BinaryOperators.h. ◆ operator/() [3/3]. template<class T , unsigned int D> . VecExpr< BinaryOp< DivOp< T >, SVector< T, D >, SVector< T, D >, T >, T, D > ROOT::Math::operator/ ; (; const SVector< T, D > & ; lhs, . const SVector< T, D > & ; rhs . ). inline . Element by element division of vectors of the same dimension: v3(i) = v1(i)/v2(i) returning a vector expression. ; Definition at line 784 of file BinaryOperators.h. ◆ sqr(). template<class T , unsigned int D> . VecExpr< UnaryOp< Sqr< T >, SVector< T, D >, T >, T, D > ROOT::Math::sqr ; (; const SVector< T, D > & ; rhs). inline . square of a vector v2(i) = v1(i)*v1(i) . ; returning a vector expression ; Definition at line 224 of file UnaryOperators.h. ◆ sqrt(). template<class T , unsigned int D> . VecExpr< UnaryOp< Sqrt< T >, SVector< T, D >, T >, T, D > ROOT::Math::sqrt ; (; const SVector< T, D > & ; rhs). inline . square root of a vector (element by element) v2(i) = sqrt( v1(i) ) returning a vector expression ; Definition at line 299 of file UnaryOperators.h. ◆ TensorProd(). template<class T , unsigned int D1, unsigned int D2> . Expr< TensorMulOp< SVector< T, D1 >, SVector< T, D2 > >, T, D1, D2 > ROOT::Math::TensorProd ; (; const SVector< T, D1 > & ; lhs, . const SVector< T, D2 > & ; rhs . ). inline . Tensor Vector Product : M(i,j) = v(i) * v(j) returning a matrix expression. ; Definition at line 885 of file MatrixFunctions.h. ◆ Unit(). template<class T , unsigned int D> . SVector< T, D > ROOT::Math::Unit ; (; const SVector< T, D > & ; rhs). inline . Unit. ; Return a vector of unit length: \( \vec{e}_v = \vec{v}/|\vec{v}| \).; AuthorT. Glebe ; Definition at line 382 of file Functions.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__VectFunction.html:13081,Guid,Guide,13081,doc/master/group__VectFunction.html,https://root.cern,https://root.cern/doc/master/group__VectFunction.html,1,['Guid'],['Guide']
Usability," TAS3File(const char* url, Option_t* opt = """"); virtual~TAS3File(); voidTObject::AbstractMethod(const char* method) const; virtual voidTDirectoryFile::Add(TObject* obj, Bool_t replace = kFALSE); static voidTDirectory::AddDirectory(Bool_t add = kTRUE); static Bool_tTDirectory::AddDirectoryStatus(); virtual voidTDirectoryFile::Append(TObject* obj, Bool_t replace = kFALSE); virtual Int_tTDirectoryFile::AppendKey(TKey* key); virtual voidTObject::AppendPad(Option_t* option = """"); static TFileOpenHandle*TFile::AsyncOpen(const char* name, Option_t* option = """", const char* ftitle = """", Int_t compress = 1, Int_t netopt = 0); virtual voidTDirectoryFile::Browse(TBrowser* b); virtual voidTDirectoryFile::Build(TFile* motherFile = 0, TDirectory* motherDir = 0); virtual Bool_tTDirectoryFile::cd(const char* path = 0); static Bool_tTDirectory::Cd(const char* path); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTDirectory::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual TObject*TDirectoryFile::CloneObject(const TObject* obj, Bool_t autoadd = kTRUE); virtual voidTFile::Close(Option_t* option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TAS3File.html:1778,Clear,Clear,1778,root/html532/TAS3File.html,https://root.cern,https://root.cern/root/html532/TAS3File.html,1,['Clear'],['Clear']
Usability," TASImage.h. ◆ fgVisual. ASVisual * TASImage::fgVisual = nullptr. staticprotected . pointer to visual structure ; Definition at line 72 of file TASImage.h. ◆ fImage. ASImage* TASImage::fImage. protected . ! pointer to image structure of original image ; Definition at line 57 of file TASImage.h. ◆ fIsGray. Bool_t TASImage::fIsGray. protected . ! kTRUE if image is gray ; Definition at line 69 of file TASImage.h. ◆ fMaxValue. Double_t TASImage::fMaxValue. protected . ! max value in image ; Definition at line 59 of file TASImage.h. ◆ fMinValue. Double_t TASImage::fMinValue. protected . ! min value in image ; Definition at line 60 of file TASImage.h. ◆ fPaintMode. Int_t TASImage::fPaintMode. protected . ! 1 - fast mode, 0 - low memory slow mode ; Definition at line 67 of file TASImage.h. ◆ fScaledImage. TASImage* TASImage::fScaledImage. protected . ! temporary scaled and zoomed image produced from original image ; Definition at line 58 of file TASImage.h. ◆ fZoomHeight. UInt_t TASImage::fZoomHeight. protected . ! hight of zoomed image in image pixels ; Definition at line 64 of file TASImage.h. ◆ fZoomOffX. UInt_t TASImage::fZoomOffX. protected . ! X - offset for zooming in image pixels ; Definition at line 61 of file TASImage.h. ◆ fZoomOffY. UInt_t TASImage::fZoomOffY. protected . ! Y - offset for zooming im image pixels ; Definition at line 62 of file TASImage.h. ◆ fZoomUpdate. Int_t TASImage::fZoomUpdate. protected . ! kZoom - new zooming required, kZoomOps - other ops in action, kNoZoom - no zooming or ops ; Definition at line 65 of file TASImage.h. ◆ fZoomWidth. UInt_t TASImage::fZoomWidth. protected . ! width of zoomed image in image pixels ; Definition at line 63 of file TASImage.h. Libraries for TASImage:. [legend]; The documentation for this class was generated from the following files:; graf2d/asimage/inc/TASImage.h; graf2d/asimage/src/TASImage.cxx. TASImage. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:15 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASImage.html:84643,Guid,Guide,84643,doc/master/classTASImage.html,https://root.cern,https://root.cern/doc/master/classTASImage.html,1,['Guid'],['Guide']
Usability," TASImagePlugin(const char* ext); TASImagePlugin(const TASImagePlugin&); virtual~TASImagePlugin(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual Bool_tASImage2File(ASImage*); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMEN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TASImagePlugin.html:1596,Clear,Clear,1596,root/html534/TASImagePlugin.html,https://root.cern,https://root.cern/root/html534/TASImagePlugin.html,1,['Clear'],['Clear']
Usability," TASImagePlugin(const char* ext); TASImagePlugin(const TASImagePlugin&); virtual~TASImagePlugin(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual Bool_tASImage2File(ASImage*); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TASImagePlugin.html:1485,Clear,Clear,1485,root/html526/TASImagePlugin.html,https://root.cern,https://root.cern/root/html526/TASImagePlugin.html,4,['Clear'],['Clear']
Usability," TASPluginGS(const char* ext); TASPluginGS(const TASPluginGS&); virtual~TASPluginGS(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual Bool_tTASImagePlugin::ASImage2File(ASImage*); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual ASImage*File2ASImage(const char* filename); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TASPluginGS.html:789,Clear,Clear,789,root/html526/TASPluginGS.html,https://root.cern,https://root.cern/root/html526/TASPluginGS.html,5,['Clear'],['Clear']
Usability," TApplication(const char* appClassName, Int_t* argc, char** argv, void* options = 0, Int_t numOptions = 0); virtual~TApplication(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual const char*ApplicationName() const; static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; Int_tArgc() const; char**Argv() const; char*Argv(Int_t index) const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidClearInputFiles(); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TApplication.html:1368,Clear,Clear,1368,root/html526/TApplication.html,https://root.cern,https://root.cern/root/html526/TApplication.html,5,['Clear'],['Clear']
Usability," TApplicationRemote(const char* url, Int_t debug = 0, const char* script = 0); virtual~TApplicationRemote(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual const char*ApplicationName() const; static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; Int_tTApplication::Argc() const; char**TApplication::Argv() const; char*TApplication::Argv(Int_t index) const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidBrowse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTApplication::ClearInputFiles(); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TApplicationRemote.html:1333,Clear,Clear,1333,root/html526/TApplicationRemote.html,https://root.cern,https://root.cern/root/html526/TApplicationRemote.html,10,['Clear'],"['Clear', 'ClearInputFiles']"
Usability," TApplicationServer(Int_t* argc, char** argv, FILE* flog, const char* logfile); virtual~TApplicationServer(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual const char*TApplication::ApplicationName() const; static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; Int_tTApplication::Argc() const; char**TApplication::Argv() const; char*TApplication::Argv(Int_t index) const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); Int_tBrowseDirectory(const char* dirname); Int_tBrowseFile(const char* fname); Int_tBrowseKey(const char* keyname); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTApplication::ClearInputFiles(); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TApplicationServer.html:1390,Clear,Clear,1390,root/html526/TApplicationServer.html,https://root.cern,https://root.cern/root/html526/TApplicationServer.html,10,['Clear'],"['Clear', 'ClearInputFiles']"
Usability," TArc(); TArc(const TArc& arc); TArc(Double_t x1, Double_t y1, Double_t radius, Double_t phimin = 0, Double_t phimax = 360); virtual~TArc(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidCopy(TObject& arc) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTEllipse::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTEllipse::Draw(Option_t* option = """"); virtual voidDrawArc(Double_t x1, Double_t y1, Double_t radius, Double_t phimin = 0, Double_t phimax = 360, Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTEllipse::DrawEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2, Double_t phimin, Double_t phimax, Double_t theta, Option_t* option = """"); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TArc.html:906,Clear,Clear,906,root/html526/TArc.html,https://root.cern,https://root.cern/root/html526/TArc.html,5,['Clear'],['Clear']
Usability," TArchiveMember(); TArchiveMember(const char* name); TArchiveMember(const TArchiveMember& member); virtual~TArchiveMember(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetComment() const; Long64_tGetCompressedSize() const; Long64_tGetDecompressedSize() const; virtual Option_t*TObject::GetDrawO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TArchiveMember.html:833,Clear,Clear,833,root/html526/TArchiveMember.html,https://root.cern,https://root.cern/root/html526/TArchiveMember.html,5,['Clear'],['Clear']
Usability," TAuthenticate(const TAuthenticate&); TAuthenticate(TSocket* sock, const char* remote, const char* proto, const char* user = """"); virtual~TAuthenticate(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tAuthenticate(); static voidAuthError(const char* where, Int_t error); Int_tAuthExists(TString User, Int_t method, const char* Options, Int_t* Message, Int_t* Rflag, CheckSecCtx_t funcheck); virtual voidTObject::Browse(TBrowser* b); voidCatchTimeOut(); Bool_tCheckNetrc(TString& user, TString& passwd); Bool_tCheckNetrc(TString& user, TString& passwd, Bool_t& pwhash, Bool_t srppwd); static Bool_tCheckProofAuth(Int_t cSec, TString& det); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static Int_tDecodeRSAPublic(const char* rsapubexport, rsa_NUMBER& n, rsa_NUMBER& d, char** rsassl = 0); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAuthenticate.html:1232,Clear,Clear,1232,root/html526/TAuthenticate.html,https://root.cern,https://root.cern/root/html526/TAuthenticate.html,5,['Clear'],['Clear']
Usability," TAxis(); TAxis(const TAxis& axis); TAxis(Int_t nbins, const Double_t* xbins); TAxis(Int_t nbins, Double_t xmin, Double_t xmax); virtual~TAxis(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidCenterLabels(Bool_t center = kTRUE)TOGGLE GETTER ; virtual voidCenterTitle(Bool_t center = kTRUE)TOGGLE GETTER ; const char*ChooseTimeFormat(Double_t axislength = 0); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject& axis) const; virtual voidDelete(Option_t* = """"); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*DrawClone(Option_t* = """") const; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAxis.html:1233,Clear,Clear,1233,root/html526/TAxis.html,https://root.cern,https://root.cern/root/html526/TAxis.html,5,['Clear'],['Clear']
Usability," TAxis.cxx:1157; TAxis::CanBeAlphanumericBool_t CanBeAlphanumeric()Definition TAxis.h:87; TAxis::fTimeFormatTString fTimeFormatDate&time format, ex: 09/12/99 12:34:00.Definition TAxis.h:42; TAxis::GetParentvirtual TObject * GetParent() constDefinition TAxis.h:128; TAxis::SetRangevirtual void SetRange(Int_t first=0, Int_t last=0)Set the viewing range for the axis using bin numbers.Definition TAxis.cxx:1052; TAxis::GetBinWidthvirtual Double_t GetBinWidth(Int_t bin) constReturn bin width.Definition TAxis.cxx:540; TAxis::GetBinUpEdgevirtual Double_t GetBinUpEdge(Int_t bin) constReturn up edge of bin.Definition TAxis.cxx:528; TAxis::GetFirstInt_t GetFirst() constReturn first bin on the axis i.e.Definition TAxis.cxx:458; TAxis::GetTicksvirtual const char * GetTicks() constReturn the ticks option (see SetTicks)Definition TAxis.cxx:634; TAxis::fBits2UShort_t fBits2Second bit status word.Definition TAxis.h:40; TAxis::fFirstInt_t fFirstFirst bin to display.Definition TAxis.h:38; TAxis::GetLabelsTHashList * GetLabels() constDefinition TAxis.h:121; THashListTHashList implements a hybrid collection class consisting of a hash table and a list to store TObject...Definition THashList.h:34; TListA doubly linked list.Definition TList.h:38; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TNamed::fTitleTString fTitleDefinition TNamed.h:33; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; bool; double; int; xDouble_t x[n]Definition legend1.C:17; v@ vDefinition rootcling_impl.cxx:3699. histhistincTAxis.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAxis_8h_source.html:25118,Guid,Guide,25118,doc/master/TAxis_8h_source.html,https://root.cern,https://root.cern/doc/master/TAxis_8h_source.html,1,['Guid'],['Guide']
Usability," TBRIK(); TBRIK(const TBRIK&); TBRIK(const char* name, const char* title, const char* material, Float_t dx, Float_t dy, Float_t dz); virtual~TBRIK(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBRIK.html:995,Clear,Clear,995,root/html526/TBRIK.html,https://root.cern,https://root.cern/root/html526/TBRIK.html,5,['Clear'],['Clear']
Usability," TBaseClass(BaseClassInfo_t* info = 0, TClass* cl = 0); virtual~TBaseClass(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TClass*GetClassPointer(B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBaseClass.html:896,Clear,Clear,896,root/html526/TBaseClass.html,https://root.cern,https://root.cern/root/html526/TBaseClass.html,4,['Clear'],['Clear']
Usability," TBaseClass(BaseClassInfo_t* info = 0, TClass* cl = 0); virtual~TBaseClass(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidTDictionary::CreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBaseClass.html:896,Clear,Clear,896,root/html534/TBaseClass.html,https://root.cern,https://root.cern/root/html534/TBaseClass.html,1,['Clear'],['Clear']
Usability," TBasket(); TBasket(TDirectory* motherDir); TBasket(const char* name, const char* title, TBranch* branch); virtual~TBasket(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdjustSize(Int_t newsize); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTKey::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; Long64_tCopyTo(TFile* to); virtual voidTKey::Delete(Option_t* option = """"); virtual voidTKey::DeleteBuffer(); virtual voidDeleteEntryOffset(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual Int_tDropBuffers(); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTKey::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TBranch*GetBranch() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBasket.html:782,Clear,Clear,782,root/html526/TBasket.html,https://root.cern,https://root.cern/root/html526/TBasket.html,5,['Clear'],['Clear']
Usability," TBasketSQL(); TBasketSQL(const char* name, const char* title, TBranch* branch, TSQLResult** rs, TString* insert_query, vector<Int_t>* vc, TSQLRow** row); virtual~TBasketSQL(); voidTObject::AbstractMethod(const char* method) const; virtual voidTBasket::AdjustSize(Int_t newsize); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTKey::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; Long64_tTBasket::CopyTo(TFile* to); voidCreateBuffer(const char* name, TString title, vector<Int_t>* vc, TBranch* branch, TSQLResult** rs); virtual voidTKey::Delete(Option_t* option = """"); virtual voidTKey::DeleteBuffer(); virtual voidTBasket::DeleteEntryOffset(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual Int_tTBasket::DropBuffers(); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBasketSQL.html:840,Clear,Clear,840,root/html526/TBasketSQL.html,https://root.cern,https://root.cern/root/html526/TBasketSQL.html,5,['Clear'],['Clear']
Usability," TBenchmark(); virtual~TBenchmark(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetBench(const char* name) const; Float_tGetCpuTime(const char* name); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBenchmark.html:734,Clear,Clear,734,root/html526/TBenchmark.html,https://root.cern,https://root.cern/root/html526/TBenchmark.html,4,['Clear'],['Clear']
Usability," TBenchmark(); virtual~TBenchmark(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetBench(const char* name) const; Float_tGetCpuTime(const char* name); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBenchmark.html:681,Clear,Clear,681,root/html534/TBenchmark.html,https://root.cern,https://root.cern/root/html534/TBenchmark.html,1,['Clear'],['Clear']
Usability," TBenchmark::Showvirtual void Show(const char *name)Stops Benchmark name and Prints results.Definition TBenchmark.cxx:155; TCanvasThe Canvas class.Definition TCanvas.h:23; TDirectory::GetObjectvoid GetObject(const char *namecycle, T *&ptr)Get an object with proper type checking.Definition TDirectory.h:212; TF11-Dim function classDefinition TF1.h:233; TF1::Printvoid Print(Option_t *option="""") const overrideThis method must be overridden when a class wants to print itself.Definition TF1.cxx:2897; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; TFile::lsvoid ls(Option_t *option="""") const overrideList file contents.Definition TFile.cxx:1457; TFile::Openstatic TFile * Open(const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0)Create / open a file.Definition TFile.cxx:4089; TH1F1-D histogram with a float per channel (see TH1 documentation)Definition TH1.h:622; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TPaveTextA Pave (see TPave) with text, lines or/and boxes inside.Definition TPaveText.h:21; TStringBasic string class.Definition TString.h:139; TString::Dataconst char * Data() constDefinition TString.h:376; TString::AppendTString & Append(const char *cs)Definition TString.h:572; TSystem::AccessPathNamevirtual Bool_t AccessPathName(const char *path, EAccessMode mode=kFileExists)Returns FALSE if one can access a file using the specified access mode.Definition TSystem.cxx:1296; c1return c1Definition legend1.C:41; fit1_py.fitlabelfitlabelDefinition fit1_py.py:12; fit1Definition fit1.py:1; AuthorRene Brun ; Definition in file fit1.C. tutorialsfitfit1.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fit1_8C.html:5705,Guid,Guide,5705,doc/master/fit1_8C.html,https://root.cern,https://root.cern/doc/master/fit1_8C.html,1,['Guid'],['Guide']
Usability," TBonjourBrowser(); virtual~TBonjourBrowser(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); voidBonjourSocketReadyRead(); virtual voidTObject::Browse(TBrowser* b); Int_tBrowseForServiceType(const char* serviceType); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBonjourBrowser.html:1616,Clear,Clear,1616,root/html530/TBonjourBrowser.html,https://root.cern,https://root.cern/root/html530/TBonjourBrowser.html,2,['Clear'],['Clear']
Usability," TBonjourRecord(); TBonjourRecord(const TBonjourRecord&); TBonjourRecord(const char* name, const char* regType, const char* domain); TBonjourRecord(const char* name, const char* regType, const char* domain, const char* txt); virtual~TBonjourRecord(); voidTObject::AbstractMethod(const char* method) const; voidAddTXTRecord(const char* record); voidAddTXTRecord(const TString& record); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBonjourRecord.html:983,Clear,Clear,983,root/html530/TBonjourRecord.html,https://root.cern,https://root.cern/root/html530/TBonjourRecord.html,2,['Clear'],['Clear']
Usability," TBonjourRegistrar(); virtual~TBonjourRegistrar(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); voidBonjourSocketReadyRead(); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBonjourRegistrar.html:1638,Clear,Clear,1638,root/html530/TBonjourRegistrar.html,https://root.cern,https://root.cern/root/html530/TBonjourRegistrar.html,2,['Clear'],['Clear']
Usability," TBonjourResolver(); virtual~TBonjourResolver(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); voidBonjourSocketReadyRead(); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; virtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBonjourResolver.html:1305,Clear,Clear,1305,root/html530/TBonjourResolver.html,https://root.cern,https://root.cern/root/html530/TBonjourResolver.html,2,['Clear'],['Clear']
Usability," TBox(); TBox(const TBox& box); TBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual~TBox(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidCopy(TObject& box) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual TBox*DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* nam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBox.html:901,Clear,Clear,901,root/html534/TBox.html,https://root.cern,https://root.cern/root/html534/TBox.html,1,['Clear'],['Clear']
Usability," TBox(); TBox(const TBox& box); TBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual~TBox(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidCopy(TObject& box) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual TBox*DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBox.html:882,Clear,Clear,882,root/html526/TBox.html,https://root.cern,https://root.cern/root/html526/TBox.html,4,['Clear'],['Clear']
Usability," TBranch(); TBranch(TTree* tree, const char* name, void* address, const char* leaflist, Int_t basketsize = 32000, Int_t compress = -1); TBranch(TBranch* parent, const char* name, void* address, const char* leaflist, Int_t basketsize = 32000, Int_t compress = -1); virtual~TBranch(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddBasket(TBasket& b, Bool_t ondisk, Long64_t startEntry); virtual voidAddLastBasket(Long64_t startEntry); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteBaskets(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidDropBaskets(Option_t* option = """"); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Exec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBranch.html:1282,Clear,Clear,1282,root/html526/TBranch.html,https://root.cern,https://root.cern/root/html526/TBranch.html,5,['Clear'],['Clear']
Usability," TBranchClones(); TBranchClones(TTree* tree, const char* name, void* clonesaddress, Int_t basketsize = 32000, Int_t compress = -1, Int_t splitlevel = 1); TBranchClones(TBranch* parent, const char* name, void* clonesaddress, Int_t basketsize = 32000, Int_t compress = -1, Int_t splitlevel = 1); virtual~TBranchClones(); voidTObject::AbstractMethod(const char* method) const; virtual voidTBranch::AddBasket(TBasket& b, Bool_t ondisk, Long64_t startEntry); virtual voidTBranch::AddLastBasket(Long64_t startEntry); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTBranch::DeleteBaskets(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTBranch::DropBaskets(Option_t* option = """"); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBranchClones.html:1088,Clear,Clear,1088,root/html526/TBranchClones.html,https://root.cern,https://root.cern/root/html526/TBranchClones.html,5,['Clear'],['Clear']
Usability," TBranchObject(); TBranchObject(TBranch* parent, const char* name, const char* classname, void* addobj, Int_t basketsize = 32000, Int_t splitlevel = 0, Int_t compress = -1, Bool_t isptrptr = kTRUE); TBranchObject(TTree* tree, const char* name, const char* classname, void* addobj, Int_t basketsize = 32000, Int_t splitlevel = 0, Int_t compress = -1, Bool_t isptrptr = kTRUE); virtual~TBranchObject(); voidTObject::AbstractMethod(const char* method) const; virtual voidTBranch::AddBasket(TBasket& b, Bool_t ondisk, Long64_t startEntry); virtual voidTBranch::AddLastBasket(Long64_t startEntry); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTBranch::DeleteBaskets(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTBranch::DropBaskets(Option_t* option = """"); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* metho",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBranchObject.html:1158,Clear,Clear,1158,root/html526/TBranchObject.html,https://root.cern,https://root.cern/root/html526/TBranchObject.html,5,['Clear'],['Clear']
Usability," TBranchSTL(); TBranchSTL(TTree* tree, const char* name, TVirtualCollectionProxy* collProxy, Int_t buffsize, Int_t splitlevel); TBranchSTL(TBranch* parent, const char* name, TVirtualCollectionProxy* collProxy, Int_t buffsize, Int_t splitlevel, TStreamerInfo* info, Int_t id); virtual~TBranchSTL(); voidTObject::AbstractMethod(const char* method) const; virtual voidTBranch::AddBasket(TBasket& b, Bool_t ondisk, Long64_t startEntry); virtual voidTBranch::AddLastBasket(Long64_t startEntry); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTBranch::DeleteBaskets(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTBranch::DropBaskets(Option_t* option = """"); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBranchSTL.html:1132,Clear,Clear,1132,root/html526/TBranchSTL.html,https://root.cern,https://root.cern/root/html526/TBranchSTL.html,5,['Clear'],['Clear']
Usability," TBrowserPlugin(const TBrowserPlugin&); TBrowserPlugin(const char* name, const char* cmd = """", Int_t tab = 1, Int_t sub = -1); virtual~TBrowserPlugin(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBrowserPlugin.html:794,Clear,Clear,794,root/html530/TBrowserPlugin.html,https://root.cern,https://root.cern/root/html530/TBrowserPlugin.html,3,['Clear'],['Clear']
Usability," TBrowserPlugin(const TBrowserPlugin&); TBrowserPlugin(const char* name, const char* cmd = """", Int_t tab = 1, Int_t sub = -1); virtual~TBrowserPlugin(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBrowserPlugin.html:792,Clear,Clear,792,root/html526/TBrowserPlugin.html,https://root.cern,https://root.cern/root/html526/TBrowserPlugin.html,2,['Clear'],['Clear']
Usability," TBufferFile(TBuffer::EMode mode); TBufferFile(TBuffer::EMode mode, Int_t bufsiz); TBufferFile(TBuffer::EMode mode, Int_t bufsiz, void* buf, Bool_t adopt = kTRUE, ReAllocCharFun_t reallocfunc = 0); virtual~TBufferFile(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); char*TBuffer::Buffer() const; Int_tTBuffer::BufferSize() const; virtual Int_tCheckByteCount(UInt_t startpos, UInt_t bcnt, const TClass* clss); virtual Int_tCheckByteCount(UInt_t startpos, UInt_t bcnt, const char* classname); virtual Bool_tCheckObject(const TObject* obj); virtual Bool_tCheckObject(const void* obj, const TClass* ptrClass); static TClass*Class(); virtual voidClassBegin(const TClass*, Version_t = -1); virtual voidClassEnd(const TClass*); virtual voidClassMember(const char*, const char* = 0, Int_t = -1, Int_t = -1); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidDecrementLevel(TVirtualStreamerInfo*); virtual voidTObject::Delete(Option_t* option = """")MENU ; voidTBuffer::DetachBuffer(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBufferFile.html:1405,Clear,Clear,1405,root/html526/TBufferFile.html,https://root.cern,https://root.cern/root/html526/TBufferFile.html,2,['Clear'],['Clear']
Usability," TBufferSQL2(TBuffer::EMode mode); TBufferSQL2(TBuffer::EMode mode, TSQLFile* file); virtual~TBufferSQL2(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); voidTBuffer::AutoExpand(Int_t size_needed); virtual voidTObject::Browse(TBrowser* b); char*TBuffer::Buffer() const; Int_tTBuffer::BufferSize() const; virtual Int_tCheckByteCount(UInt_t startpos, UInt_t bcnt, const TClass* clss); virtual Int_tCheckByteCount(UInt_t startpos, UInt_t bcnt, const char* classname); virtual Bool_tTBufferFile::CheckObject(const TObject* obj); virtual Bool_tTBufferFile::CheckObject(const void* obj, const TClass* ptrClass); static TClass*Class(); virtual voidClassBegin(const TClass*, Version_t = -1); virtual voidClassEnd(const TClass*); virtual voidClassMember(const char* name, const char* typeName = 0, Int_t arrsize1 = -1, Int_t arrsize2 = -1); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidDecrementLevel(TVirtualStreamerInfo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBufferSQL2.html:1760,Clear,Clear,1760,root/html530/TBufferSQL2.html,https://root.cern,https://root.cern/root/html530/TBufferSQL2.html,1,['Clear'],['Clear']
Usability," TBufferXML(TBuffer::EMode mode); TBufferXML(TBuffer::EMode mode, TXMLFile* file); virtual~TBufferXML(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); char*TBuffer::Buffer() const; Int_tTBuffer::BufferSize() const; virtual Int_tCheckByteCount(UInt_t startpos, UInt_t bcnt, const TClass* clss); virtual Int_tCheckByteCount(UInt_t startpos, UInt_t bcnt, const char* classname); virtual Bool_tTBufferFile::CheckObject(const TObject* obj); virtual Bool_tTBufferFile::CheckObject(const void* obj, const TClass* ptrClass); static TClass*Class(); virtual voidClassBegin(const TClass*, Version_t = -1); virtual voidClassEnd(const TClass*); virtual voidClassMember(const char* name, const char* typeName = 0, Int_t arrsize1 = -1, Int_t arrsize2 = -1); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; static TObject*ConvertFromXML(const char* str, Bool_t GenericLayout = kFALSE, Bool_t UseNamespaces =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBufferXML.html:1757,Clear,Clear,1757,root/html526/TBufferXML.html,https://root.cern,https://root.cern/root/html526/TBufferXML.html,2,['Clear'],['Clear']
Usability," TBufferXML(TBuffer::EMode mode); TBufferXML(TBuffer::EMode mode, TXMLFile* file); virtual~TBufferXML(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); voidTBuffer::AutoExpand(Int_t size_needed); virtual voidTObject::Browse(TBrowser* b); char*TBuffer::Buffer() const; Int_tTBuffer::BufferSize() const; virtual Int_tCheckByteCount(UInt_t startpos, UInt_t bcnt, const TClass* clss); virtual Int_tCheckByteCount(UInt_t startpos, UInt_t bcnt, const char* classname); virtual Bool_tTBufferFile::CheckObject(const TObject* obj); virtual Bool_tTBufferFile::CheckObject(const void* obj, const TClass* ptrClass); static TClass*Class(); virtual voidClassBegin(const TClass*, Version_t = -1); virtual voidClassEnd(const TClass*); virtual voidClassMember(const char* name, const char* typeName = 0, Int_t arrsize1 = -1, Int_t arrsize2 = -1); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; static TObject*ConvertFromXML(const char* str, Bool_t Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBufferXML.html:1801,Clear,Clear,1801,root/html530/TBufferXML.html,https://root.cern,https://root.cern/root/html530/TBufferXML.html,1,['Clear'],['Clear']
Usability," TCONE(); TCONE(const TCONE&); TCONE(const char* name, const char* title, const char* material, Float_t dz, Float_t rmax1, Float_t rmax2 = 0); TCONE(const char* name, const char* title, const char* material, Float_t dz, Float_t rmin1, Float_t rmax1, Float_t rmin2, Float_t rmax2); virtual~TCONE(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTTUBE::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCONE.html:1141,Clear,Clear,1141,root/html526/TCONE.html,https://root.cern,https://root.cern/root/html526/TCONE.html,5,['Clear'],['Clear']
Usability, TCONE::~TCONE ; (; ). override . CONE shape default destructor. ; Definition at line 69 of file TCONE.cxx. Member Function Documentation. ◆ Class(). static TClass * TCONE::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TCONE::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TCONE::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 45 of file TCONE.h. ◆ DeclFileName(). static const char * TCONE::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 45 of file TCONE.h. ◆ GetRmax2(). Float_t TCONE::GetRmax2 ; (; ); const. inline . Definition at line 43 of file TCONE.h. ◆ GetRmin2(). Float_t TCONE::GetRmin2 ; (; ); const. inline . Definition at line 42 of file TCONE.h. ◆ IsA(). TClass * TCONE::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 45 of file TCONE.h. ◆ SetPoints(). void TCONE::SetPoints ; (; Double_t * ; points); const. overrideprotectedvirtual . Create CONE points. ; Reimplemented from TShape.; Definition at line 76 of file TCONE.cxx. ◆ Streamer(). void TCONE::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TCONE::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 45 of file TCONE.h. Member Data Documentation. ◆ fRmax2. Float_t TCONE::fRmax2. protected . Definition at line 32 of file TCONE.h. ◆ fRmin2. Float_t TCONE::fRmin2. protected . Definition at line 31 of file TCONE.h. Libraries for TCONE:. [legend]; The documentation for this class was generated from the following files:; graf3d/g3d/inc/TCONE.h; graf3d/g3d/src/TCONE.cxx. TCONE. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:25 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCONE.html:21920,Guid,Guide,21920,doc/master/classTCONE.html,https://root.cern,https://root.cern/doc/master/classTCONE.html,1,['Guid'],['Guide']
Usability," TCONS(); TCONS(const TCONS&); TCONS(const char* name, const char* title, const char* material, Float_t rmax1, Float_t dz, Float_t phi1, Float_t phi2, Float_t rmax2 = 0); TCONS(const char* name, const char* title, const char* material, Float_t dz, Float_t rmin1, Float_t rmax1, Float_t rmin2, Float_t rmax2, Float_t phi1, Float_t phi2); virtual~TCONS(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTTUBS::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCONS.html:1388,Clear,Clear,1388,root/html526/TCONS.html,https://root.cern,https://root.cern/root/html526/TCONS.html,5,['Clear'],['Clear']
Usability," TCTUB(); TCTUB(const TCTUB&); TCTUB(const char* name, const char* title, const char* material, Float_t rmin, Float_t rmax, Float_t dz, Float_t phi1, Float_t phi2, Float_t* lowNormal, Float_t* highNormal); TCTUB(const char* name, const char* title, const char* material, Float_t rmin, Float_t rmax, Float_t dz, Float_t phi1, Float_t phi2, Float_t coslx, Float_t cosly, Float_t coslz, Float_t coshx, Float_t coshy, Float_t coshz); virtual~TCTUB(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCTUB.html:1671,Clear,Clear,1671,root/html526/TCTUB.html,https://root.cern,https://root.cern/root/html526/TCTUB.html,5,['Clear'],['Clear']
Usability, TCandle::fLogY. protected . make the candle appear logy-like ; Definition at line 85 of file TCandle.h. ◆ fLogZ. int TCandle::fLogZ. protected . make the candle appear logz-like ; Definition at line 86 of file TCandle.h. ◆ fMean. Double_t TCandle::fMean. protected . Position of the mean. ; Definition at line 63 of file TCandle.h. ◆ fMedian. Double_t TCandle::fMedian. protected . Position of the median. ; Definition at line 64 of file TCandle.h. ◆ fMedianErr. Double_t TCandle::fMedianErr. protected . The size of the notch. ; Definition at line 65 of file TCandle.h. ◆ fNDatapoints. Long64_t TCandle::fNDatapoints. protected . Number of Datapoints within this candle. ; Definition at line 72 of file TCandle.h. ◆ fNDrawPoints. Long64_t TCandle::fNDrawPoints. protected . max number of outliers or other point to be shown ; Definition at line 76 of file TCandle.h. ◆ fNHistoPoints. int TCandle::fNHistoPoints. protected . Definition at line 80 of file TCandle.h. ◆ fOption. CandleOption TCandle::fOption. protected . Setting the style of the candle. ; Definition at line 82 of file TCandle.h. ◆ fOptionStr. TString TCandle::fOptionStr. protected . String to draw the candle. ; Definition at line 83 of file TCandle.h. ◆ fPosCandleAxis. Double_t TCandle::fPosCandleAxis. protected . x-pos for a vertical candle ; Definition at line 59 of file TCandle.h. ◆ fProj. TH1D* TCandle::fProj {nullptr}. protected . Definition at line 56 of file TCandle.h. ◆ fWhiskerDown. Double_t TCandle::fWhiskerDown. protected . Position of the lower whisker end. ; Definition at line 69 of file TCandle.h. ◆ fWhiskerUp. Double_t TCandle::fWhiskerUp. protected . Position of the upper whisker end. ; Definition at line 68 of file TCandle.h. Libraries for TCandle:. [legend]; The documentation for this class was generated from the following files:; graf2d/graf/inc/TCandle.h; graf2d/graf/src/TCandle.cxx. TCandle. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:22 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCandle.html:24173,Guid,Guide,24173,doc/master/classTCandle.html,https://root.cern,https://root.cern/doc/master/classTCandle.html,1,['Guid'],['Guide']
Usability," TCanvas::GetEventXInt_t GetEventX() const overrideDefinition TCanvas.h:136; TCanvas::SetCanvasSizevoid SetCanvasSize(UInt_t ww, UInt_t wh) overrideSet Width and Height of canvas to ww and wh respectively.Definition TCanvas.cxx:1975; TCanvas::GetSelectedPadTVirtualPad * GetSelectedPad() const overrideDefinition TCanvas.h:146; TCanvas::SetCursorvoid SetCursor(ECursor cursor) overrideSet cursor.Definition TCanvas.cxx:1989; TCanvas::GetCanvasIDInt_t GetCanvasID() const overrideDefinition TCanvas.h:157; TCanvas::GetWindowWidthUInt_t GetWindowWidth() constDefinition TCanvas.h:161; TCanvas::FeedbackModevoid FeedbackMode(Bool_t set)Turn rubberband feedback mode on or off.Definition TCanvas.cxx:1128; TCanvas::SetClickSelectedvoid SetClickSelected(TObject *obj)Definition TCanvas.h:209; TCanvas::GetPadSaveTVirtualPad * GetPadSave() const overrideDefinition TCanvas.h:139; TCanvas::Updatevoid Update() overrideUpdate canvas pad buffers.Definition TCanvas.cxx:2489; TCanvas::Clearedvirtual void Cleared(TVirtualPad *pad)Emit pad Cleared signal.Definition TCanvas.cxx:770; TCanvas::GetWwUInt_t GetWw() const overrideDefinition TCanvas.h:163; TCanvas::OpaqueMovingBool_t OpaqueMoving() const overrideDefinition TCanvas.h:180; TCanvas::GetWhUInt_t GetWh() const overrideDefinition TCanvas.h:164; TCanvas::Classstatic TClass * Class(); TCanvas::SetSelectedvoid SetSelected(TObject *obj) overrideSet selected canvas.Definition TCanvas.cxx:2146; TCanvas::GetEventInt_t GetEvent() const overrideDefinition TCanvas.h:135; TCanvas::IsWebBool_t IsWeb() const overrideIs web canvas.Definition TCanvas.cxx:1496; TCanvas::SetBatchvoid SetBatch(Bool_t batch=kTRUE) overrideToggle batch mode.Definition TCanvas.cxx:1957; TCanvas::UseGLBool_t UseGL() constDefinition TCanvas.h:228; TCanvas::OpaqueResizingBool_t OpaqueResizing() const overrideDefinition TCanvas.h:181; TClassTClass instances represent classes, structs and namespaces in the ROOT type system.Definition TClass.h:81; TClass::GetListOfMethodsTList * Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8cxx_source.html:273212,Clear,Clearedvirtual,273212,doc/master/TPad_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPad_8cxx_source.html,3,['Clear'],"['Cleared', 'Clearedvirtual']"
Usability," TChainElement(); TChainElement(const TChainElement&); TChainElement(const char* title, const char* filename); virtual~TChainElement(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidCreatePackets(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual void*GetBaddress() const; virtual const char*GetBaddressClassName() const; virtual Bool_tGetBaddressIsPtr() const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TChainElement.html:764,Clear,Clear,764,root/html526/TChainElement.html,https://root.cern,https://root.cern/root/html526/TChainElement.html,5,['Clear'],['Clear']
Usability," TChainIndex(); TChainIndex(const TChainIndex&); TChainIndex(const TTree* T, const char* majorname, const char* minorname); virtual~TChainIndex(); voidTObject::AbstractMethod(const char* method) const; virtual voidAppend(const TVirtualIndex*, Bool_t delaySort = kFALSE); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tGetEnt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TChainIndex.html:815,Clear,Clear,815,root/html526/TChainIndex.html,https://root.cern,https://root.cern/root/html526/TChainIndex.html,2,['Clear'],['Clear']
Usability," TChainIndex(); TChainIndex(const TChainIndex&); TChainIndex(const TTree* T, const char* majorname, const char* minorname); virtual~TChainIndex(); voidTObject::AbstractMethod(const char* method) const; virtual voidAppend(const TVirtualIndex*, Bool_t delaySort = kFALSE); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Long64_tGet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TChainIndex.html:815,Clear,Clear,815,root/html530/TChainIndex.html,https://root.cern,https://root.cern/root/html530/TChainIndex.html,3,['Clear'],['Clear']
Usability," TChair(TTable* table); TChair(const TChair& org); virtual~TChair(); voidTObject::AbstractMethod(const char* method) const; virtual voidTDataSet::Add(TDataSet* dataset); virtual voidAddAt(TDataSet* dataset, Int_t idx); virtual voidAddAt(const void* c, Int_t i); virtual voidTDataSet::AddAtAndExpand(TDataSet* dataset, Int_t idx = 0); virtual voidTDataSet::AddFirst(TDataSet* dataset); virtual voidTDataSet::AddLast(TDataSet* dataset); virtual voidAdopt(Int_t n, void* array); virtual voidTObject::AppendPad(Option_t* option = """"); const void*At(Int_t i) const; virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TDataSet::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; Int_tCopyRows(const TChair* srcChair, Int_t srcRow = 0, Int_t dstRow = 0, Int_t nRows = 0, Bool_t expand = kFALSE); virtual voidCopySet(TChair& chair); virtual voidTDataSet::Delete(Option_t* opt = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* opt); virtual TH1*Draw(TCut varexp, TCut selection, Option_t* option = """", Int_t nentries = 1000000000, Int_t firstentry = 0); virtual TH1*Draw(const char* varexp, const char* selection, Option_t* option = """", Int_t nentries = 1000000000, Int_t firstentry = 0); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TChair.html:1077,Clear,Clear,1077,root/html526/TChair.html,https://root.cern,https://root.cern/root/html526/TChair.html,5,['Clear'],['Clear']
Usability," TCivetweb(); TCivetweb(const TCivetweb&); virtual~TCivetweb(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tCreate(const char* args); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TCivetweb.html:1498,Clear,Clear,1498,root/html534/TCivetweb.html,https://root.cern,https://root.cern/root/html534/TCivetweb.html,1,['Clear'],['Clear']
Usability," TClass * TProof::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProof::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TProof::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 1073 of file TProof.h. ◆ CleanGDirectory(). void TProof::CleanGDirectory ; (; TList * ; ol). private . Remove links to objects in list 'ol' from gDirectory. ; Definition at line 3046 of file TProof.cxx. ◆ CleanupSession(). Int_t TProof::CleanupSession ; (; const char * ; sessiontag). Send cleanup request for the session specified by tag. ; Definition at line 6092 of file TProof.cxx. ◆ ClearCache(). void TProof::ClearCache ; (; const char * ; file = 0). virtual . Remove file from all file caches. ; If file is 0 or """" or ""*"", remove all the files ; Reimplemented in TProofLite.; Definition at line 7714 of file TProof.cxx. ◆ ClearData(). void TProof::ClearData ; (; UInt_t ; what = kUnregistered, . const char * ; dsname = 0 . ). Remove files for the data directory. ; The option 'what' can take the values: kPurge remove all files and directories under '~/data' kUnregistered remove only files not in registered datasets (default) kDataset remove files belonging to dataset 'dsname' User is prompt for confirmation, unless kForceClear is ORed with the option ; Definition at line 7412 of file TProof.cxx. ◆ ClearDataProgress(). void TProof::ClearDataProgress ; (; Int_t ; r, . Int_t ; t . ). private . Progress bar for clear data. ; Definition at line 7670 of file TProof.cxx. ◆ ClearDataSetCache(). void TProof::ClearDataSetCache ; (; const char * ; dataset = 0). virtual . Clear the content of the dataset cache, if any (matching 'dataset', if defined). ; Reimplemented in TProofLite.; Definition at line 10896 of file TProof.cxx. ◆ ClearFeedback(). void TProof::ClearFeedback ; (; ). Clear feedback list. ; Definition at line 10012 of file TProof.cxx. ◆ ClearInput",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:74569,Clear,ClearData,74569,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['Clear'],['ClearData']
Usability," TClass * IsA () const override;  ; virtual Bool_t IsBinFactorGlobal (void) const;  check whether there is only a global scaling factor for this node ;  ; void PrintStream (std::ostream &out, Int_t indent=0, int debug=0) const;  print some information about this binning tree ;  ; void SetBinFactorFunction (Double_t normalisation, TF1 *userFunc=nullptr);  set normalisation factor and function which are used in calls to GetBinFactor() ;  ; void SetBinMapEntry (Int_t *binMap, Int_t globalBin, Int_t destBin) const;  set one entry in a bin map ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TNamed;  TNamed ();  ;  TNamed (const char *name, const char *title);  ;  TNamed (const TNamed &named);  TNamed copy ctor. ;  ;  TNamed (const TString &name, const TString &title);  ; virtual ~TNamed ();  TNamed destructor. ;  ; void Clear (Option_t *option="""") override;  Set name and title to empty strings (""""). ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; Int_t Compare (const TObject *obj) const override;  Compare two TNamed objects. ;  ; void Copy (TObject &named) const override;  Copy this to obj. ;  ; virtual void FillBuffer (char *&buffer);  Encode TNamed into output buffer. ;  ; const char * GetName () const override;  Returns name of object. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; ULong_t Hash () const override;  Return hash value for this object. ;  ; Bool_t IsSortable () const override;  ; void ls (Option_t *option="""") const override;  List TNamed name and title. ;  ; TNamed & operator= (const TNamed &rhs);  TNamed assignment operator. ;  ; void Print (Option_t *option="""") const override;  Print TNamed name and title. ;  ; virtual void SetName (const char *name);  Set the name of the TNamed. ;  ; virtual void SetNameTitle (con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldBinning.html:11253,Clear,Clear,11253,doc/master/classTUnfoldBinning.html,https://root.cern,https://root.cern/doc/master/classTUnfoldBinning.html,1,['Clear'],['Clear']
Usability," TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInInterval(const RooArgSet&) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Double_tLowerLimit(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooStats::SimpleInterval&operator=(const RooStats::SimpleInterval& other); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetConfidenceLevel(Double_t); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); RooStats::S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__SimpleInterval.html:3860,Simpl,SimpleInterval,3860,root/html534/RooStats__SimpleInterval.html,https://root.cern,https://root.cern/root/html534/RooStats__SimpleInterval.html,1,['Simpl'],['SimpleInterval']
Usability," TClass*IsA() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tIsInInterval(const RooArgSet&) const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; Bool_tTObject::IsZombie() const; virtual Double_tLowerLimit(); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); RooStats::SimpleInterval&operator=(const RooStats::SimpleInterval&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidSetConfidenceLevel(Double_t); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); RooStats::Si",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__SimpleInterval.html:3860,Simpl,SimpleInterval,3860,root/html530/RooStats__SimpleInterval.html,https://root.cern,https://root.cern/root/html530/RooStats__SimpleInterval.html,2,['Simpl'],['SimpleInterval']
Usability," TClassDocInfo(TClass* cl, const char* htmlfilename = """", const char* fsdecl = """", const char* fsimpl = """", const char* decl = 0, const char* impl = 0); TClassDocInfo(TDictionary* cl, const char* htmlfilename = """", const char* fsdecl = """", const char* fsimpl = """", const char* decl = 0, const char* impl = 0); virtual~TClassDocInfo(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tCompare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TClassDocInfo.html:1043,Clear,Clear,1043,root/html526/TClassDocInfo.html,https://root.cern,https://root.cern/root/html526/TClassDocInfo.html,5,['Clear'],['Clear']
Usability," TClassMenuItem(); TClassMenuItem(Int_t type, TClass* parent, const char* title = """", const char* functionname = """", TObject* obj = 0, const char* args = """", Int_t selfobjposition = -1, Bool_t self = kFALSE); virtual~TClassMenuItem(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TClassMenuItem.html:1401,Clear,Clear,1401,root/html526/TClassMenuItem.html,https://root.cern,https://root.cern/root/html526/TClassMenuItem.html,5,['Clear'],['Clear']
Usability," TClassTable(const TClassTable&); virtual~TClassTable(); voidTObject::AbstractMethod(const char* method) const; static voidAdd(const char* cname, Version_t id, const type_info& info, VoidFuncPtr_t dict, Int_t pragmabits); virtual voidTObject::AppendPad(Option_t* option = """"); static char*At(int index); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); intClasses(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* nam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TClassTable.html:1043,Clear,Clear,1043,root/html526/TClassTable.html,https://root.cern,https://root.cern/root/html526/TClassTable.html,5,['Clear'],['Clear']
Usability," TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. * Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; * TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray object class, implementing the reset; procedure for pointer objects.; * If the objects are added using the placement new then the Clear must; deallocate the memory.; * If the objects are added using TClonesArray::ConstructedAt then the; heap-based memory can stay allocated and reused as the constructor is; not called for already constructed/added object.; * To reduce memory fragmentation, please make sure that the; TClonesArrays are not destroyed and created on every event. They; must only be constructed/destructed at the beginning/end of the; run. Function Members (Methods); public:. virtual~TClonesArray(); voidAbsorbObjects(TClonesArray* tc); voidAbsorbObjects(TClonesArray* tc, Int_t idx1, Int_t idx2); voidTObject::AbstractMethod(const char* method) const; virtual voidTObjArray::Add(TObject* obj); virtual voidAddAfter(const TObject*, TObject*); virtual voidTCol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TClonesArray.html:4032,Clear,Clear,4032,root/html604/TClonesArray.html,https://root.cern,https://root.cern/root/html604/TClonesArray.html,1,['Clear'],['Clear']
Usability," TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. * Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; * TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray object class, implementing the reset; procedure for pointer objects.; * To reduce memory fragmentation, please make sure that the; TClonesArrays are not destroyed and created on every event. They; must only be constructed/destructed at the beginning/end of the; run. Function Members (Methods); public:. TClonesArray(); TClonesArray(const TClonesArray& tc); TClonesArray(const char* classname, Int_t size = 1000, Bool_t call_dtor = kFALSE); TClonesArray(const TClass* cl, Int_t size = 1000, Bool_t call_dtor = kFALSE); virtual~TClonesArray(); voidAbsorbObjects(TClonesArray* tc); voidAbsorbObjects(TClonesArray* tc, Int_t idx1, Int_t idx2); voidTObject::AbstractMethod(const char* method) const; virtual voidTObjArray::Add(TObject* obj); virtual voidAddAfter(const TObject*, TObject*); virtual voidTCollection::AddAll(const TCollection* col); virtual voidAddAt(TObject*, Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TClonesArray.html:4032,Clear,Clear,4032,root/html532/TClonesArray.html,https://root.cern,https://root.cern/root/html532/TClonesArray.html,2,['Clear'],['Clear']
Usability," TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. * Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; * TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray object class, implementing the reset; procedure for pointer objects.; * To reduce memory fragmentation, please make sure that the; TClonesArrays are not destroyed and created on every event. They; must only be constructed/destructed at the beginning/end of the; run. Function Members (Methods); public:. virtual~TClonesArray(); voidAbsorbObjects(TClonesArray* tc); voidAbsorbObjects(TClonesArray* tc, Int_t idx1, Int_t idx2); voidTObject::AbstractMethod(const char* method) const; virtual voidTObjArray::Add(TObject* obj); virtual voidAddAfter(const TObject*, TObject*); virtual voidTCollection::AddAll(const TCollection* col); virtual voidAddAt(TObject*, Int_t); virtual voidAddAtAndExpand(TObject*, Int_t); virtual Int_tAddAtFree(TObject*); virtual voidAddBefore(const TObject*, TObject*); virtual voidAddFirst(TObject*); virtual voidAddLast(TObject*); TObject*AddrAt(Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TClonesArray.html:4032,Clear,Clear,4032,root/html602/TClonesArray.html,https://root.cern,https://root.cern/root/html602/TClonesArray.html,1,['Clear'],['Clear']
Usability," TColor documentation: use modern C++ in the examples.; Make sure the python examples do not generate wrong namespaces in the documentation.; The dataframe tutorials json spec files were not displayed properly. Moreover there was no direct correspondence between the code source and the json file. Those files do not have any doc in them. With a direct link to the GitHub source file the dependency between source code and json is now more obvious.; Document how to remove shadow of TPave, as it was not evident (only explanations were hidden here and there in the forum).; Improve the SetFillColorAlpha documentation.; Simplify some graphics examples: arrow.C, crown.C, diamond.C and ellipse.C.; Fix a typo in the documentation of TGraph::SetHighlight in TGraph.cxx.; Change the marker style in the tutorial df014_CSVDataSource.; Remove useless settings in the tutorial scatter.C.; Fix the tutorial h1analysisTreeReader.C.; Fix doxygen formatting in TGNumberEntry.cxx.; Avoid the CDT documentation to appear in the reference guide.; Remove last references to the old ROOT drupal website. Build, Configuration and Testing Infrastructure; Release v6.32.00 is the first one integrated and tested entirely through the new GitHub based build system.; Bugs and Issues fixed in this release; More than 200 items were addressed for this release. The full list is:. [#15621] - Buffer overflow in TBranch::Init; [#15610] - Memory leak in TTree getattr pythonization; [#15590] - Infinite recursion in TFile::Open; [#15460] - TEnum::GetEnum(“B”)->GetUnderlyingType() does not following typedefs; [#15413] - Fails to build with cuDNN version 9; [#15406] - TEnum::GetEnum does not seem to see ‘through’ using statements.; [#15399] - Memory leak with jitted nodes if the execution is never triggered; [#15396] - [TMVA] Pymva test (Keras) failing on 632 and main; [#15370] - Broken link in HS3 printout; [#15340] - Webgraphics: canvas displayed, but many error printed; [#15253] - C++ standard not propagated via CMa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/release-notes.html:24468,guid,guide,24468,doc/v632/release-notes.html,https://root.cern,https://root.cern/doc/v632/release-notes.html,1,['guid'],['guide']
Usability," TColorWheel(); virtual~TColorWheel(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TColorWheel.html:1771,Clear,Clear,1771,root/html526/TColorWheel.html,https://root.cern,https://root.cern/root/html526/TColorWheel.html,5,['Clear'],['Clear']
Usability," TColumnView(const TColumnView&); TColumnView(const char* colName = """", TTable* table = 0); virtual~TColumnView(); voidTObject::AbstractMethod(const char* method) const; virtual voidTDataSet::Add(TDataSet* dataset); virtual voidTChair::AddAt(TDataSet* dataset, Int_t idx); virtual voidTChair::AddAt(const void* c, Int_t i); virtual voidTDataSet::AddAtAndExpand(TDataSet* dataset, Int_t idx = 0); virtual voidTDataSet::AddFirst(TDataSet* dataset); virtual voidTDataSet::AddLast(TDataSet* dataset); virtual voidTChair::Adopt(Int_t n, void* array); virtual voidTObject::AppendPad(Option_t* option = """"); const void*TChair::At(Int_t i) const; virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TDataSet::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; Int_tTChair::CopyRows(const TChair* srcChair, Int_t srcRow = 0, Int_t dstRow = 0, Int_t nRows = 0, Bool_t expand = kFALSE); virtual voidTChair::CopySet(TChair& chair); virtual voidTDataSet::Delete(Option_t* opt = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTChair::Draw(Option_t* opt); virtual TH1*TChair::Draw(TCut varexp, TCut selection, Option_t* option = """", Int_t nentries = 1000000000, Int_t firstentry = 0); virtual TH1*TChair::Draw(const char* varexp, const char* selection, Option_t* option = """", Int_t nentries = 1000000000, Int_t firstentry = 0); virtual voidTObject::DrawClass() constMENU",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TColumnView.html:1166,Clear,Clear,1166,root/html526/TColumnView.html,https://root.cern,https://root.cern/root/html526/TColumnView.html,5,['Clear'],['Clear']
Usability," TCondition(TMutex* m = 0); virtual~TCondition(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); Int_tBroadcast(); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCondition.html:839,Clear,Clear,839,root/html526/TCondition.html,https://root.cern,https://root.cern/root/html526/TCondition.html,5,['Clear'],['Clear']
Usability," TCondor(const char* pool = """"); TCondor(const TCondor&); virtual~TCondor(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); TList*Claim(Int_t n, const char* cmd); TCondorSlave*Claim(const char* vmname, const char* cmd); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCondor.html:926,Clear,Clear,926,root/html526/TCondor.html,https://root.cern,https://root.cern/root/html526/TCondor.html,5,['Clear'],['Clear']
Usability," TCondorSlave(); TCondorSlave(const TCondorSlave&); ~TCondorSlave(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCondorSlave.html:837,Clear,Clear,837,root/html526/TCondorSlave.html,https://root.cern,https://root.cern/root/html526/TCondorSlave.html,5,['Clear'],['Clear']
Usability," TConfidenceLevel(); TConfidenceLevel(const TConfidenceLevel&); TConfidenceLevel(Int_t mc, bool onesided = kTRUE); virtual~TConfidenceLevel(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; Double_tCLb(bool use_sMC = kFALSE) const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; Double_tCLs(bool use_sMC = kFALSE) const; Double_tCLsb(bool use_sMC = kFALSE) const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGet3sProbability() const; Double_tGet5sProbability() const; Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TConfidenceLevel.html:823,Clear,Clear,823,root/html526/TConfidenceLevel.html,https://root.cern,https://root.cern/root/html526/TConfidenceLevel.html,5,['Clear'],['Clear']
Usability," TContextMenu(const char* name, const char* title = ""Context sensitive popup menu""); virtual~TContextMenu(); voidTObject::AbstractMethod(const char* method) const; virtual voidAction(TClassMenuItem* classmenuitem); voidAction(TMethod* method); voidAction(TToggle* toggle); virtual voidAction(TObject* object, TMethod* method); virtual voidAction(TObject* object, TToggle* toggle); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual const char*CreateArgumentTitle(TMethodArg* argument); virtual const char*CreateDialogTitle(TObject* object, TFunction* method); virtual const char*CreatePopupTitle(TObject* object); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TContextMenu.html:1443,Clear,Clear,1443,root/html526/TContextMenu.html,https://root.cern,https://root.cern/root/html526/TContextMenu.html,5,['Clear'],['Clear']
Usability," TControlBarButton(); TControlBarButton(const TControlBarButton&); TControlBarButton(const char* label, const char* action = """", const char* hint = """", const char* type = ""button""); virtual~TControlBarButton(); voidTObject::AbstractMethod(const char* method) const; virtual voidAction(); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidCreate(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TControlBarButton.html:924,Clear,Clear,924,root/html526/TControlBarButton.html,https://root.cern,https://root.cern/root/html526/TControlBarButton.html,5,['Clear'],['Clear']
Usability," TCrown(); TCrown(const TCrown& crown); TCrown(Double_t x1, Double_t y1, Double_t radin, Double_t radout, Double_t phimin = 0, Double_t phimax = 360); virtual~TCrown(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidCopy(TObject& crown) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTEllipse::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCrown.html:1430,Clear,Clear,1430,root/html526/TCrown.html,https://root.cern,https://root.cern/root/html526/TCrown.html,5,['Clear'],['Clear']
Usability," TCurlyArc.cxx:502; TCurlyArc::~TCurlyArc~TCurlyArc() overrideDefinition TCurlyArc.h:33; TCurlyArc::SetDefaultIsCurlystatic void SetDefaultIsCurly(Bool_t IsCurly)Set default ""IsCurly"".Definition TCurlyArc.cxx:486; TCurlyArc::ExecuteEventvoid ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideExecute action corresponding to one event.Definition TCurlyArc.cxx:156; TCurlyArc::GetBBoxCenterTPoint GetBBoxCenter() overrideReturn the center of the BoundingBox as TPoint in pixels.Definition TCurlyArc.cxx:535; TCurlyArc::fgDefaultIsCurlystatic Bool_t fgDefaultIsCurlydefault curly typeDefinition TCurlyArc.h:26; TCurlyArc::SavePrimitivevoid SavePrimitive(std::ostream &out, Option_t *="""") overrideSave primitive as a C++ statement(s) on output stream out.Definition TCurlyArc.cxx:413; TCurlyArc::SetBBoxCentervoid SetBBoxCenter(const TPoint &p) overrideSet center of the BoundingBox.Definition TCurlyArc.cxx:547; TCurlyArc::SetBBoxCenterYvoid SetBBoxCenterY(const Int_t y) overrideSet Y coordinate of the center of the BoundingBox.Definition TCurlyArc.cxx:568; TCurlyArc::SetBBoxY1void SetBBoxY1(const Int_t y) overrideSet top of BoundingBox to a value (resize in y direction on top)Definition TCurlyArc.cxx:606; TCurlyArc::GetPhiminDouble_t GetPhimin() constDefinition TCurlyArc.h:39; TCurlyArc::SetPhimaxvirtual void SetPhimax(Double_t phimax)Set Curly Arc maximum Phi.Definition TCurlyArc.cxx:461; TCurlyArc::SetBBoxCenterXvoid SetBBoxCenterX(const Int_t x) overrideSet X coordinate of the center of the BoundingBox.Definition TCurlyArc.cxx:558; TCurlyLineImplements curly or wavy polylines used to draw Feynman diagrams.Definition TCurlyLine.h:19; TPointDefinition TPoint.h:31; bool; double; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; Rectangle_tRectangle structure (maps to the X11 XRectangle structure)Definition GuiTypes.h:361. graf2dgrafincTCurlyArc.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:18 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCurlyArc_8h_source.html:7930,Guid,Guide,7930,doc/master/TCurlyArc_8h_source.html,https://root.cern,https://root.cern/doc/master/TCurlyArc_8h_source.html,1,['Guid'],['Guide']
Usability," TCut(); TCut(const char* title); TCut(const TCut& cut); TCut(const char* name, const char* title); virtual~TCut(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCut.html:1281,Clear,Clear,1281,root/html526/TCut.html,https://root.cern,https://root.cern/root/html526/TCut.html,5,['Clear'],['Clear']
Usability," TDNDData(Atom_t dt = kNone, void* d = 0, Int_t len = 0, Atom_t act = kNone); virtual~TDNDData(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Opti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TDNDData.html:676,Clear,Clear,676,root/html530/TDNDData.html,https://root.cern,https://root.cern/root/html530/TDNDData.html,3,['Clear'],['Clear']
Usability," TDNDData(Atom_t dt = kNone, void* d = 0, Int_t len = 0, Atom_t act = kNone); virtual~TDNDData(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TDNDData.html:674,Clear,Clear,674,root/html526/TDNDData.html,https://root.cern,https://root.cern/root/html526/TDNDData.html,2,['Clear'],['Clear']
Usability," TDOMParser(); virtual~TDOMParser(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTQObject::Destroyed()SIG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TDOMParser.html:1224,Clear,Clear,1224,root/html526/TDOMParser.html,https://root.cern,https://root.cern/root/html526/TDOMParser.html,5,['Clear'],['Clear']
Usability," TDSet object. ;  ;  TDSet (const TChain &chain, Bool_t withfriends=kTRUE);  Create a named TDSet object from existing TChain 'chain'. ;  ;  ~TDSet () override;  Cleanup. ;  ; virtual Bool_t Add (const char *file, const char *objname=0, const char *dir=0, Long64_t first=0, Long64_t num=-1, const char *msd=0);  Add file to list of files to be analyzed. ;  ; virtual Bool_t Add (TCollection *fileinfo, const char *meta=0, Bool_t availableOnly=kFALSE, TCollection *badlist=0);  Add files passed as list of TFileInfo, TUrl or TObjString objects . ;  ; virtual Bool_t Add (TDSet *set);  Add specified data set to the this set. ;  ; virtual Bool_t Add (TFileInfo *fileinfo, const char *meta=0);  Add file described by 'fi' to list of files to be analyzed. ;  ; virtual void AddFriend (TDSet *friendset, const char *alias);  Add friend dataset to this set. ;  ; void AddInput (TObject *obj);  Add objects that might be needed during the processing of the selector (see Process()). ;  ; void ClearInput ();  Clear input object list. ;  ; TDSetElement * Current () const;  ; virtual Long64_t Draw (const char *varexp, const char *selection, Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0);  Draw expression varexp for specified entries. ;  ; virtual Long64_t Draw (const char *varexp, const TCut &selection, Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0);  Draw expression varexp for specified entries. ;  ; void Draw (Option_t *opt) override;  Default Draw method for all objects. ;  ; Bool_t ElementsValid ();  Check if all elements are valid. ;  ; Int_t ExportFileList (const char *filepath, Option_t *opt="""");  Export TDSetElements files as list of TFileInfo objects in file 'fpath'. ;  ; const char * GetDirectory () const;  ; TObject * GetEntryList () const;  ; TList * GetListOfElements () const;  ; Int_t GetNumOfFiles ();  Return the number of files in the dataset. ;  ; const char * GetObjName () const;  ; TObject * GetOutput (const char *name);  Get specified",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDSet.html:3270,Clear,ClearInput,3270,doc/master/classTDSet.html,https://root.cern,https://root.cern/doc/master/classTDSet.html,4,['Clear'],"['Clear', 'ClearInput']"
Usability," TDSet(); TDSet(const TChain& chain, Bool_t withfriends = kTRUE); TDSet(const char* name, const char* objname = ""*"", const char* dir = ""/"", const char* type = 0); virtual~TDSet(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tAdd(TDSet* set); virtual Bool_tAdd(TFileInfo* fileinfo, const char* meta = 0); virtual Bool_tAdd(TCollection* fileinfo, const char* meta = 0, Bool_t availableOnly = kFALSE, TCollection* badlist = 0); virtual Bool_tAdd(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); virtual voidAddFriend(TDSet* friendset, const char* alias); voidAddInput(TObject* obj); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDSet.html:2016,Clear,Clear,2016,root/html528/TDSet.html,https://root.cern,https://root.cern/root/html528/TDSet.html,4,['Clear'],['Clear']
Usability," TDSetElement(); TDSetElement(const TDSetElement& elem); TDSetElement(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0, const char* dataset = 0); virtual~TDSetElement(); voidTObject::AbstractMethod(const char* method) const; voidAddAssocObj(TObject* assocobj); virtual voidAddFriend(TDSetElement* friendElement, const char* alias); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tCompare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """"",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDSetElement.html:1763,Clear,Clear,1763,root/html528/TDSetElement.html,https://root.cern,https://root.cern/root/html528/TDSetElement.html,4,['Clear'],['Clear']
Usability," TDSetProxy(); TDSetProxy(const char* type, const char* objname = ""*"", const char* dir = ""/""); ~TDSetProxy(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tTDSet::Add(TDSet* set); virtual Bool_tTDSet::Add(TFileInfo* fileinfo, const char* meta = 0); virtual Bool_tTDSet::Add(TCollection* fileinfo, const char* meta = 0, Bool_t availableOnly = kFALSE, TCollection* badlist = 0); virtual Bool_tTDSet::Add(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); virtual voidTDSet::AddFriend(TDSet* friendset, const char* alias); voidTDSet::AddInput(TObject* obj); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); voidTDSet::ClearInput(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; TDSetElement*TDSet::Current() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTDSet::Draw(Option_t* opt); virtual Long64_tTDSet::Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual Long64_tTDSet::Draw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDSetProxy.html:1209,Clear,Clear,1209,root/html528/TDSetProxy.html,https://root.cern,https://root.cern/root/html528/TDSetProxy.html,8,['Clear'],"['Clear', 'ClearInput']"
Usability," TDataSetIter(TDataSet* l, Bool_t dir); TDataSetIter(TDataSet* l = 0, Int_t depth = 1, Bool_t dir = kIterForward); virtual~TDataSetIter(); voidTObject::AbstractMethod(const char* method) const; virtual TDataSet*Add(TDataSet* set); virtual TDataSet*Add(TDataSet* set, const Char_t* path); virtual TDataSet*Add(TDataSet* set, TDataSet* dataset); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual TDataSet*Cd(const Char_t* dirname); virtual TDataSet*Cd(TDataSet* ds); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual TDataSet*Cwd() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDf() const; virtual TDataSet*Dir(Char_t* dirname); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual Int_tDu() const; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDataSetIter.html:1220,Clear,Clear,1220,root/html534/TDataSetIter.html,https://root.cern,https://root.cern/root/html534/TDataSetIter.html,1,['Clear'],['Clear']
Usability," TDataSetIter(const TDataSetIter&); TDataSetIter(TDataSet* l, Bool_t dir); TDataSetIter(TDataSet* l = 0, Int_t depth = 1, Bool_t dir = kIterForward); virtual~TDataSetIter(); voidTObject::AbstractMethod(const char* method) const; virtual TDataSet*Add(TDataSet* set); virtual TDataSet*Add(TDataSet* set, const Char_t* path); virtual TDataSet*Add(TDataSet* set, TDataSet* dataset); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual TDataSet*Cd(const Char_t* dirname); virtual TDataSet*Cd(TDataSet* ds); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual TDataSet*Cwd() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDf() const; virtual TDataSet*Dir(Char_t* dirname); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual Int_tDu() const; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataSetIter.html:1255,Clear,Clear,1255,root/html528/TDataSetIter.html,https://root.cern,https://root.cern/root/html528/TDataSetIter.html,3,['Clear'],['Clear']
Usability," TDataSetManager(const char* group = 0, const char* user = 0, const char* options = 0); virtual~TDataSetManager(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static Bool_tCheckDataSetSrvMaps(TUrl* furl, TString& fn, TList* srvmaplist = 0); static Bool_tCheckStagedStatus(TFileInfo* fileInfo, Int_t fopt, Int_t maxfiles, Int_t newstagedfiles, TFileStager* stager, Bool_t createStager, Bool_t dbg, Bool_t& changed, Bool_t& touched, Bool_t& disappeared); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual Int_tClearCache(const char* uri); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static TStringCreateUri(const char* dsGroup = 0, const char* dsUser = 0, const char* dsName = 0, const char* dsTree = 0); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDataSetManager.html:1154,Clear,Clear,1154,root/html534/TDataSetManager.html,https://root.cern,https://root.cern/root/html534/TDataSetManager.html,1,['Clear'],['Clear']
Usability," TDataSetManager(const char* group = 0, const char* user = 0, const char* options = 0); virtual~TDataSetManager(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static Bool_tCheckDataSetSrvMaps(TUrl* furl, TString& fn, TList* srvmaplist = 0); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual Int_tClearCache(const char* uri); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static TStringCreateUri(const char* dsGroup = 0, const char* dsUser = 0, const char* dsName = 0, const char* dsTree = 0); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Bool_tExistsDataSet(const char* uri); virtual voidTObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataSetManager.html:942,Clear,Clear,942,root/html528/TDataSetManager.html,https://root.cern,https://root.cern/root/html528/TDataSetManager.html,3,['Clear'],['Clear']
Usability," TDataSetManagerFile(); TDataSetManagerFile(const char* ins); TDataSetManagerFile(const char* group, const char* user, const char* ins); virtual~TDataSetManagerFile(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static Bool_tTDataSetManager::CheckDataSetSrvMaps(TUrl* furl, TString& fn, TList* srvmaplist = 0); static Bool_tTDataSetManager::CheckStagedStatus(TFileInfo* fileInfo, Int_t fopt, Int_t maxfiles, Int_t newstagedfiles, TFileStager* stager, Bool_t createStager, Bool_t dbg, Bool_t& changed, Bool_t& touched, Bool_t& disappeared); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual Int_tClearCache(const char* uri = 0); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static TStringTDataSetManager::CreateUri(const char* dsGroup = 0, const char* dsUser = 0, const char* dsName = 0, const char* dsTree = 0); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDataSetManagerFile.html:1226,Clear,Clear,1226,root/html534/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html534/TDataSetManagerFile.html,1,['Clear'],['Clear']
Usability," TDataSetManagerFile(); TDataSetManagerFile(const char* ins); TDataSetManagerFile(const char* group, const char* user, const char* ins); virtual~TDataSetManagerFile(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static Bool_tTDataSetManager::CheckDataSetSrvMaps(TUrl* furl, TString& fn, TList* srvmaplist = 0); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual Int_tClearCache(const char* uri = 0); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static TStringTDataSetManager::CreateUri(const char* dsGroup = 0, const char* dsUser = 0, const char* dsName = 0, const char* dsTree = 0); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataSetManagerFile.html:997,Clear,Clear,997,root/html528/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html528/TDataSetManagerFile.html,3,['Clear'],['Clear']
Usability," TDataType(TypedefInfo_t* info = 0); TDataType(const char* typenam); virtual~TDataType(); voidTObject::AbstractMethod(const char* method) const; static voidAddBuiltins(TCollection* types); virtual voidTObject::AppendPad(Option_t* option = """"); const char*AsString(void* buf) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDataType.html:992,Clear,Clear,992,root/html532/TDataType.html,https://root.cern,https://root.cern/root/html532/TDataType.html,1,['Clear'],['Clear']
Usability," TDataType(TypedefInfo_t* info = 0); TDataType(const char* typenam); virtual~TDataType(); voidTObject::AbstractMethod(const char* method) const; static voidAddBuiltins(TCollection* types); virtual voidTObject::AppendPad(Option_t* option = """"); const char*AsString(void* buf) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidTDictionary::CreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDataType.html:992,Clear,Clear,992,root/html534/TDataType.html,https://root.cern,https://root.cern/root/html534/TDataType.html,1,['Clear'],['Clear']
Usability," TDataType(TypedefInfo_t* info = 0); TDataType(const char* typenam); virtual~TDataType(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*AsString(void* buf) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataType.html:948,Clear,Clear,948,root/html528/TDataType.html,https://root.cern,https://root.cern/root/html528/TDataType.html,2,['Clear'],['Clear']
Usability," TDatabasePDG(); virtual~TDatabasePDG(); voidTObject::AbstractMethod(const char* method) const; virtual TParticlePDG*AddAntiParticle(const char* Name, Int_t PdgCode); virtual TParticlePDG*AddParticle(const char* Name, const char* Title, Double_t Mass, Bool_t Stable, Double_t DecayWidth, Double_t Charge, const char* ParticleClass, Int_t PdgCode, Int_t Anti = -1, Int_t TrackingCode = 0); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tConvertGeant3ToPdg(Int_t Geant3Number) const; virtual Int_tConvertIsajetToPdg(Int_t isaNumber) const; virtual Int_tConvertPdgToGeant3(Int_t pdgNumber) const; virtual voidTNamed::Copy(TObject& named) const; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDatabasePDG.html:1628,Clear,Clear,1628,root/html534/TDatabasePDG.html,https://root.cern,https://root.cern/root/html534/TDatabasePDG.html,1,['Clear'],['Clear']
Usability," TDatabasePDG(); virtual~TDatabasePDG(); voidTObject::AbstractMethod(const char* method) const; virtual TParticlePDG*AddAntiParticle(const char* Name, Int_t PdgCode); virtual TParticlePDG*AddParticle(const char* Name, const char* Title, Double_t Mass, Bool_t Stable, Double_t DecayWidth, Double_t Charge, const char* ParticleClass, Int_t PdgCode, Int_t Anti = -1, Int_t TrackingCode = 0); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tConvertGeant3ToPdg(Int_t Geant3Number); virtual Int_tConvertIsajetToPdg(Int_t isaNumber); virtual Int_tConvertPdgToGeant3(Int_t pdgNumber); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::De",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDatabasePDG.html:1628,Clear,Clear,1628,root/html528/TDatabasePDG.html,https://root.cern,https://root.cern/root/html528/TDatabasePDG.html,3,['Clear'],['Clear']
Usability," TDecayChannel(); TDecayChannel(const TDecayChannel&); TDecayChannel(Int_t Number, Int_t MatrixElementCode, Double_t BranchingRatio, Int_t NDaughters, Int_t* DaughterPdgCode); virtual~TDecayChannel(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); Double_tBranchingRatio(); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; Int_tDaughterPdgCode(Int_t i); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDecayChannel.html:865,Clear,Clear,865,root/html528/TDecayChannel.html,https://root.cern,https://root.cern/root/html528/TDecayChannel.html,4,['Clear'],['Clear']
Usability," TDecompSparse(); TDecompSparse(const TDecompSparse& another); TDecompSparse(const TMatrixDSparse& a, Int_t verbose); TDecompSparse(Int_t nRows, Int_t nr_nonZeros, Int_t verbose); TDecompSparse(Int_t row_lwb, Int_t row_upb, Int_t nr_nonZeros, Int_t verbose); virtual~TDecompSparse(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual Double_tTDecompBase::Condition(); virtual voidTObject::Copy(TObject& object) const; virtual Bool_tDecompose(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDet(Double_t&, Double_t&); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDecompSparse.html:1082,Clear,Clear,1082,root/html528/TDecompSparse.html,https://root.cern,https://root.cern/root/html528/TDecompSparse.html,4,['Clear'],['Clear']
Usability," TDeepNet<Architecture_t, Layer_t>> . Scalar_t TMVA::DNN::TAdadelta< Architecture_t, Layer_t, DeepNet_t >::fRho. protected . The Rho constant used by the optimizer. ; Definition at line 51 of file Adadelta.h. ◆ fWorkBiasTensor1. template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>, typename DeepNet_t = TDeepNet<Architecture_t, Layer_t>> . std::vector<std::vector<Matrix_t> > TMVA::DNN::TAdadelta< Architecture_t, Layer_t, DeepNet_t >::fWorkBiasTensor1. protected . working tensor used to keep a temporary copy of bias or bias gradients ; Definition at line 63 of file Adadelta.h. ◆ fWorkBiasTensor2. template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>, typename DeepNet_t = TDeepNet<Architecture_t, Layer_t>> . std::vector<std::vector<Matrix_t> > TMVA::DNN::TAdadelta< Architecture_t, Layer_t, DeepNet_t >::fWorkBiasTensor2. protected . working tensor used to keep a temporary copy of bias or bias gradients ; Definition at line 65 of file Adadelta.h. ◆ fWorkWeightTensor1. template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>, typename DeepNet_t = TDeepNet<Architecture_t, Layer_t>> . std::vector<std::vector<Matrix_t> > TMVA::DNN::TAdadelta< Architecture_t, Layer_t, DeepNet_t >::fWorkWeightTensor1. protected . working tensor used to keep a temporary copy of weights or weight gradients ; Definition at line 62 of file Adadelta.h. ◆ fWorkWeightTensor2. template<typename Architecture_t , typename Layer_t = VGeneralLayer<Architecture_t>, typename DeepNet_t = TDeepNet<Architecture_t, Layer_t>> . std::vector<std::vector<Matrix_t> > TMVA::DNN::TAdadelta< Architecture_t, Layer_t, DeepNet_t >::fWorkWeightTensor2. protected . working tensor used to keep a temporary copy of weights or weight gradients ; Definition at line 64 of file Adadelta.h. tmva/tmva/inc/TMVA/DNN/Adadelta.h. TMVADNNTAdadelta. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:46 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TAdadelta.html:14694,Guid,Guide,14694,doc/master/classTMVA_1_1DNN_1_1TAdadelta.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TAdadelta.html,1,['Guid'],['Guide']
Usability," TDiamond(); TDiamond(const TDiamond& diamond); TDiamond(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual~TDiamond(); voidTObject::AbstractMethod(const char* method) const; virtual TBox*TPaveText::AddBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual TLine*TPaveText::AddLine(Double_t x1 = 0, Double_t y1 = 0, Double_t x2 = 0, Double_t y2 = 0); virtual TText*TPaveText::AddText(const char* label); virtual TText*TPaveText::AddText(Double_t x1, Double_t y1, const char* label); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTPaveText::Clear(Option_t* option = """")MENU ; virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTPave::ConvertNDCtoPad(); virtual voidTPave::Copy(TObject& pave) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTPaveText::DeleteText()MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual TBox*TBox::DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDiamond.html:1302,Clear,Clear,1302,root/html528/TDiamond.html,https://root.cern,https://root.cern/root/html528/TDiamond.html,4,['Clear'],['Clear']
Usability," TDirectoryFile(); TDirectoryFile(const char* name, const char* title, Option_t* option = """", TDirectory* motherDir = 0); virtual~TDirectoryFile(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(TObject* obj, Bool_t replace = kFALSE); static voidTDirectory::AddDirectory(Bool_t add = kTRUE); static Bool_tTDirectory::AddDirectoryStatus(); virtual voidAppend(TObject* obj, Bool_t replace = kFALSE); virtual Int_tAppendKey(TKey* key); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); virtual voidBuild(TFile* motherFile = 0, TDirectory* motherDir = 0); virtual Bool_tcd(const char* path = 0); static Bool_tTDirectory::Cd(const char* path); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTDirectory::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual TObject*CloneObject(const TObject* obj, Bool_t autoadd = kTRUE); virtual voidClose(Option_t* option = """"); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject&) const; static TDirectory*&TDirectory::CurrentDirectory(); static voidTDirectory::DecodeNameCycle(const char* namecycle, char* name, Short_t& cycle); virtual voidDelete(const char* namecycle = """"); virtual voidTDirectory::DeleteAll(Option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDirectoryFile.html:1473,Clear,Clear,1473,root/html532/TDirectoryFile.html,https://root.cern,https://root.cern/root/html532/TDirectoryFile.html,1,['Clear'],['Clear']
Usability," TDirectoryFile(); TDirectoryFile(const char* name, const char* title, Option_t* option = """", TDirectory* motherDir = 0); virtual~TDirectoryFile(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(TObject* obj, Bool_t replace = kFALSE); static voidTDirectory::AddDirectory(Bool_t add = kTRUE); static Bool_tTDirectory::AddDirectoryStatus(); virtual voidAppend(TObject* obj, Bool_t replace = kFALSE); virtual Int_tAppendKey(TKey* key); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); virtual voidBuild(TFile* motherFile = 0, TDirectory* motherDir = 0); virtual Bool_tcd(const char* path = 0); static Bool_tTDirectory::Cd(const char* path); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTDirectory::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual TObject*CloneObject(const TObject* obj, Bool_t autoadd = kTRUE); virtual voidClose(Option_t* option = """"); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject&) const; static TDirectory*&TDirectory::CurrentDirectory(); static voidTDirectory::DecodeNameCycle(const char* namecycle, char* name, Short_t& cycle, const size_t namesize = 0); virtual voidDelete(const char* namecycle = """"); virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDirectoryFile.html:1473,Clear,Clear,1473,root/html534/TDirectoryFile.html,https://root.cern,https://root.cern/root/html534/TDirectoryFile.html,1,['Clear'],['Clear']
Usability," TDirectoryFile(); TDirectoryFile(const char* name, const char* title, Option_t* option = """", TDirectory* motherDir = 0); virtual~TDirectoryFile(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(TObject* obj, Bool_t replace = kFALSE); static voidTDirectory::AddDirectory(Bool_t add = kTRUE); static Bool_tTDirectory::AddDirectoryStatus(); virtual voidAppend(TObject* obj, Bool_t replace = kFALSE); virtual Int_tAppendKey(TKey* key); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); virtual voidBuild(TFile* motherFile = 0, TDirectory* motherDir = 0); virtual Bool_tcd(const char* path = 0); static Bool_tTDirectory::Cd(const char* path); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTDirectory::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual TObject*CloneObject(const TObject* obj, Bool_t autoadd = kTRUE); virtual voidClose(Option_t* option = """"); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject&) const; static voidTDirectory::DecodeNameCycle(const char* namecycle, char* name, Short_t& cycle); virtual voidDelete(const char* namecycle = """"); virtual voidTDirectory::DeleteAll(Option_t* option = """"); virtual Int_tTObject::DistancetoP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDirectoryFile.html:1473,Clear,Clear,1473,root/html528/TDirectoryFile.html,https://root.cern,https://root.cern/root/html528/TDirectoryFile.html,2,['Clear'],['Clear']
Usability," TDocHtmlDirective(); TDocHtmlDirective(const TDocHtmlDirective&); virtual~TDocHtmlDirective(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTDocDirective::DeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDocHtmlDirective.html:871,Clear,Clear,871,root/html528/TDocHtmlDirective.html,https://root.cern,https://root.cern/root/html528/TDocHtmlDirective.html,4,['Clear'],['Clear']
Usability," TDocLatexDirective(); TDocLatexDirective(const TDocLatexDirective&); virtual~TDocLatexDirective(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDocLatexDirective.html:1456,Clear,Clear,1456,root/html528/TDocLatexDirective.html,https://root.cern,https://root.cern/root/html528/TDocLatexDirective.html,4,['Clear'],['Clear']
Usability," TDocMacroDirective(); TDocMacroDirective(const TDocMacroDirective&); virtual~TDocMacroDirective(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* param",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDocMacroDirective.html:1305,Clear,Clear,1305,root/html528/TDocMacroDirective.html,https://root.cern,https://root.cern/root/html528/TDocMacroDirective.html,4,['Clear'],['Clear']
Usability," TDocParser(TDocOutput& docOutput); TDocParser(TClassDocOutput& docOutput, TClass* cl); virtual~TDocParser(); voidTObject::AbstractMethod(const char* method) const; static voidAnchorFromLine(const TString& line, TString& anchor); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; voidConvert(ostream& out, istream& in, const char* relpath, Bool_t isCode, Bool_t interpretDirectives); virtual voidTObject::Copy(TObject& object) const; virtual voidDecorateKeywords(TString& text); virtual voidDecorateKeywords(ostream& out, const char* text); voidDecrementMethodCount(const char* name); virtual voidTObject::Delete(O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDocParser.html:1523,Clear,Clear,1523,root/html528/TDocParser.html,https://root.cern,https://root.cern/root/html528/TDocParser.html,3,['Clear'],['Clear']
Usability," TDrawFeedback(TProof* proof = 0, TSeqCollection* names = 0); virtual~TDrawFeedback(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTQObject::Destroyed()SIGNAL ; Bool_tT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDrawFeedback.html:1211,Clear,Clear,1211,root/html534/TDrawFeedback.html,https://root.cern,https://root.cern/root/html534/TDrawFeedback.html,1,['Clear'],['Clear']
Usability," TDrawFeedback(TProof* proof = 0, TSeqCollection* names = 0); virtual~TDrawFeedback(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTQObject::Destroyed()SIGNAL ; Bool_tTQObject::Disconnect(const char* signal = 0, void* receiver = 0, const char* slot = 0); static Bool_tTQObject::Disconnect(TQObject* sender, const char* signal = 0, void* receiver = 0, const char* slo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDrawFeedback.html:1013,Clear,Clear,1013,root/html528/TDrawFeedback.html,https://root.cern,https://root.cern/root/html528/TDrawFeedback.html,3,['Clear'],['Clear']
Usability," TELTU(); TELTU(const TELTU&); TELTU(const char* name, const char* title, const char* material, Float_t rx, Float_t ry, Float_t dz); virtual~TELTU(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTTUBE::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TELTU.html:1122,Clear,Clear,1122,root/html528/TELTU.html,https://root.cern,https://root.cern/root/html528/TELTU.html,4,['Clear'],['Clear']
Usability," TEditQueryFrame(TGWindow* p, Int_t w, Int_t h); virtual~TEditQueryFrame(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); voidBuild(TSessionViewer* gui); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEditQueryFrame.html:1428,Clear,Clear,1428,root/html530/TEditQueryFrame.html,https://root.cern,https://root.cern/root/html530/TEditQueryFrame.html,3,['Clear'],['Clear']
Usability," TEditQueryFrame(TGWindow* p, Int_t w, Int_t h); virtual~TEditQueryFrame(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); voidBuild(TSessionViewer* gui); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEditQueryFrame.html:1426,Clear,Clear,1426,root/html528/TEditQueryFrame.html,https://root.cern,https://root.cern/root/html528/TEditQueryFrame.html,1,['Clear'],['Clear']
Usability," TEfficiency(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup); TEfficiency(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Int_t nbinsy, const Double_t* ybins, Int_t nbinsz, const Double_t* zbins); TEfficiency(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup, Int_t nbinsz, Double_t zlow, Double_t zup); virtual~TEfficiency(); voidTObject::AbstractMethod(const char* method) const; voidAdd(const TEfficiency& rEff); static Double_tAgrestiCoull(Int_t total, Int_t passed, Double_t level, Bool_t bUpper); virtual voidTObject::AppendPad(Option_t* option = """"); static Double_tBayesian(Int_t total, Int_t passed, Double_t level, Double_t alpha, Double_t beta, Bool_t bUpper, Bool_t bShortest = false); static Double_tBetaCentralInterval(Double_t level, Double_t alpha, Double_t beta, Bool_t bUpper); static Double_tBetaMean(Double_t alpha, Double_t beta); static Double_tBetaMode(Double_t alpha, Double_t beta); static Bool_tBetaShortestInterval(Double_t level, Double_t alpha, Double_t beta, Double_t& lower, Double_t& upper); virtual voidTObject::Browse(TBrowser* b); static Bool_tCheckBinning(const TH1& pass, const TH1& total); static Bool_tCheckConsistency(const TH1& pass, const TH1& total, Option_t* opt = """"); static Bool_tCheckEntries(const TH1& pass, const TH1& total, Option_t* opt = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; static Double_tClopperPearson(Int_t total, Int_t passed, Double_t level, Bool_t bUpper); static TGraphAsymmErrors*Combine(TCollection* pList, Option_t* opt = """", Int_t n = 0, const Double_t* w = 0); static Double_tCombine(Double_t& up, Double_t& low, Int_t n, const Int_t* pass, const Int_t* total, Double_t alpha, Double_t beta, Double_t level = 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEfficiency.html:21799,Clear,Clear,21799,root/html528/TEfficiency.html,https://root.cern,https://root.cern/root/html528/TEfficiency.html,4,['Clear'],['Clear']
Usability," TEllipse(); TEllipse(const TEllipse& ellipse); TEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2 = 0, Double_t phimin = 0, Double_t phimax = 360, Double_t theta = 0); virtual~TEllipse(); voidTObject::AbstractMethod(co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEllipse.html:2214,Clear,Clear,2214,root/html534/TEllipse.html,https://root.cern,https://root.cern/root/html534/TEllipse.html,1,['Clear'],['Clear']
Usability," TEllipse(); TEllipse(const TEllipse& ellipse); TEllipse(Double_t x1, Double_t y1, Double_t r1, Double_t r2 = 0, Double_t phimin = 0, Double_t phimax = 360, Double_t theta = 0); virtual~TEllipse(); voidTObject::AbstractMethod(const char* method) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEllipse.html:2195,Clear,Clear,2195,root/html528/TEllipse.html,https://root.cern,https://root.cern/root/html528/TEllipse.html,3,['Clear'],['Clear']
Usability," TEmulatedMapProxy(const TEmulatedMapProxy& copy); TEmulatedMapProxy(const char* cl_name); virtual~TEmulatedMapProxy(); virtual void*TEmulatedCollectionProxy::Allocate(UInt_t n, Bool_t forceDelete); virtual void*At(UInt_t idx); virtual voidTEmulatedCollectionProxy::Clear(const char* opt = """"); virtual voidTEmulatedCollectionProxy::Commit(void* env); virtual voidTEmulatedCollectionProxy::DeleteArray(void* p, Bool_t dtorOnly = kFALSE); virtual voidTEmulatedCollectionProxy::Destructor(void* p, Bool_t dtorOnly = kFALSE); virtual TVirtualCollectionProxy*Generate() const; virtual TClass*TGenCollectionProxy::GetCollectionClass(); virtual Int_tTGenCollectionProxy::GetCollectionType(); virtual TStreamerInfoActions::TActionSequence*TGenCollectionProxy::GetConversionReadMemberWiseActions(TClass* oldClass, Int_t version); virtual TVirtualCollectionProxy::CopyIterator_tTGenCollectionProxy::GetFunctionCopyIterator(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::CreateIterators_tTGenCollectionProxy::GetFunctionCreateIterators(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::DeleteIterator_tTGenCollectionProxy::GetFunctionDeleteIterator(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::DeleteTwoIterators_tTGenCollectionProxy::GetFunctionDeleteTwoIterators(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::Next_tTGenCollectionProxy::GetFunctionNext(Bool_t read = kTRUE); virtual ULong_tTGenCollectionProxy::GetIncrement(); virtual TClass*TGenCollectionProxy::GetOnFileClass() const; virtual Int_tTVirtualCollectionProxy:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEmulatedMapProxy.html:720,Clear,Clear,720,root/html530/TEmulatedMapProxy.html,https://root.cern,https://root.cern/root/html530/TEmulatedMapProxy.html,1,['Clear'],['Clear']
Usability," TEmulatedMapProxy(const TEmulatedMapProxy& copy); TEmulatedMapProxy(const char* cl_name); virtual~TEmulatedMapProxy(); virtual void*TEmulatedCollectionProxy::Allocate(UInt_t n, Bool_t forceDelete); virtual void*At(UInt_t idx); virtual voidTEmulatedCollectionProxy::Clear(const char* opt = """"); virtual voidTEmulatedCollectionProxy::Commit(void* env); virtual voidTEmulatedCollectionProxy::DeleteArray(void* p, Bool_t dtorOnly = kFALSE); virtual voidTEmulatedCollectionProxy::Destructor(void* p, Bool_t dtorOnly = kFALSE); virtual TVirtualCollectionProxy*Generate() const; virtual TClass*TGenCollectionProxy::GetCollectionClass(); virtual Int_tTGenCollectionProxy::GetCollectionType(); virtual TStreamerInfoActions::TActionSequence*TGenCollectionProxy::GetConversionReadMemberWiseActions(TClass* oldClass, Int_t version); virtual TVirtualCollectionProxy::CopyIterator_tTGenCollectionProxy::GetFunctionCopyIterator(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::CreateIterators_tTGenCollectionProxy::GetFunctionCreateIterators(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::DeleteIterator_tTGenCollectionProxy::GetFunctionDeleteIterator(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::DeleteTwoIterators_tTGenCollectionProxy::GetFunctionDeleteTwoIterators(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::Next_tTGenCollectionProxy::GetFunctionNext(Bool_t read = kTRUE); virtual ULong_tTGenCollectionProxy::GetIncrement(); virtual TClass*TGenCollectionProxy::GetOnFileClass() const; virtual Int_tTVirtualCollectionProxy::G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEmulatedMapProxy.html:718,Clear,Clear,718,root/html528/TEmulatedMapProxy.html,https://root.cern,https://root.cern/root/html528/TEmulatedMapProxy.html,1,['Clear'],['Clear']
Usability," TEmulatedMapProxy(const TEmulatedMapProxy& copy); TEmulatedMapProxy(const char* cl_name, Bool_t silent); virtual~TEmulatedMapProxy(); virtual void*TEmulatedCollectionProxy::Allocate(UInt_t n, Bool_t forceDelete); virtual void*At(UInt_t idx); virtual voidTEmulatedCollectionProxy::Clear(const char* opt = """"); virtual voidTEmulatedCollectionProxy::Commit(void* env); virtual voidTEmulatedCollectionProxy::DeleteArray(void* p, Bool_t dtorOnly = kFALSE) const; virtual voidTEmulatedCollectionProxy::Destructor(void* p, Bool_t dtorOnly = kFALSE) const; virtual TVirtualCollectionProxy*Generate() const; virtual TClass*TGenCollectionProxy::GetCollectionClass() const; virtual Int_tTGenCollectionProxy::GetCollectionType() const; virtual TStreamerInfoActions::TActionSequence*TGenCollectionProxy::GetConversionReadMemberWiseActions(TClass* oldClass, Int_t version); virtual TVirtualCollectionProxy::CopyIterator_tTGenCollectionProxy::GetFunctionCopyIterator(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::CreateIterators_tTGenCollectionProxy::GetFunctionCreateIterators(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::DeleteIterator_tTGenCollectionProxy::GetFunctionDeleteIterator(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::DeleteTwoIterators_tTGenCollectionProxy::GetFunctionDeleteTwoIterators(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::Next_tTGenCollectionProxy::GetFunctionNext(Bool_t read = kTRUE); virtual ULong_tTGenCollectionProxy::GetIncrement() const; virtual TClass*TGenCollectionProxy::GetOnFileClass()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEmulatedMapProxy.html:735,Clear,Clear,735,root/html534/TEmulatedMapProxy.html,https://root.cern,https://root.cern/root/html534/TEmulatedMapProxy.html,1,['Clear'],['Clear']
Usability," TEmulatedMapProxy(const TEmulatedMapProxy& copy); TEmulatedMapProxy(const char* cl_name, Bool_t silent); virtual~TEmulatedMapProxy(); virtual void*TEmulatedCollectionProxy::Allocate(UInt_t n, Bool_t forceDelete); virtual void*At(UInt_t idx); virtual voidTEmulatedCollectionProxy::Clear(const char* opt = """"); virtual voidTEmulatedCollectionProxy::Commit(void* env); virtual voidTEmulatedCollectionProxy::DeleteArray(void* p, Bool_t dtorOnly = kFALSE); virtual voidTEmulatedCollectionProxy::Destructor(void* p, Bool_t dtorOnly = kFALSE); virtual TVirtualCollectionProxy*Generate() const; virtual TClass*TGenCollectionProxy::GetCollectionClass(); virtual Int_tTGenCollectionProxy::GetCollectionType(); virtual TStreamerInfoActions::TActionSequence*TGenCollectionProxy::GetConversionReadMemberWiseActions(TClass* oldClass, Int_t version); virtual TVirtualCollectionProxy::CopyIterator_tTGenCollectionProxy::GetFunctionCopyIterator(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::CreateIterators_tTGenCollectionProxy::GetFunctionCreateIterators(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::DeleteIterator_tTGenCollectionProxy::GetFunctionDeleteIterator(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::DeleteTwoIterators_tTGenCollectionProxy::GetFunctionDeleteTwoIterators(Bool_t read = kTRUE); virtual TVirtualCollectionProxy::Next_tTGenCollectionProxy::GetFunctionNext(Bool_t read = kTRUE); virtual ULong_tTGenCollectionProxy::GetIncrement(); virtual TClass*TGenCollectionProxy::GetOnFileClass() const; virtual Int_tTVirtualC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEmulatedMapProxy.html:735,Clear,Clear,735,root/html532/TEmulatedMapProxy.html,https://root.cern,https://root.cern/root/html532/TEmulatedMapProxy.html,1,['Clear'],['Clear']
Usability," TEntryListFromFile(); TEntryListFromFile(const TEntryListFromFile&); TEntryListFromFile(const char* filename, const char* listname, Int_t nfiles); virtual~TEntryListFromFile(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(const TEntryList*); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tContains(Long64_t, TTree*); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTEntryList::DirectoryAutoAdd(TDi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEntryListFromFile.html:1662,Clear,Clear,1662,root/html528/TEntryListFromFile.html,https://root.cern,https://root.cern/root/html528/TEntryListFromFile.html,3,['Clear'],['Clear']
Usability," TEntryListFromFile(); TEntryListFromFile(const char* filename, const char* listname, Int_t nfiles); virtual~TEntryListFromFile(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(const TEntryList*); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tContains(Long64_t, TTree*); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTEntryList::DirectoryAutoAdd(TDirectory*); virtual Int_tTObject::DistancetoPrim",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEntryListFromFile.html:1615,Clear,Clear,1615,root/html534/TEntryListFromFile.html,https://root.cern,https://root.cern/root/html534/TEntryListFromFile.html,1,['Clear'],['Clear']
Usability, TEnvRec(); TEnvRec(const TEnvRec&); ~TEnvRec(); voidTObject::Abst,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEnvRec.html:2227,Clear,Clear,2227,root/html530/TEnvRec.html,https://root.cern,https://root.cern/root/html530/TEnvRec.html,3,['Clear'],['Clear']
Usability, TEnvRec(); TEnvRec(const TEnvRec&); ~TEnvRec(); voidTObject::Abstra,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEnvRec.html:2225,Clear,Clear,2225,root/html528/TEnvRec.html,https://root.cern,https://root.cern/root/html528/TEnvRec.html,1,['Clear'],['Clear']
Usability," TEve3DProjection(); TEve3DProjection(const TEve3DProjection&); virtual~TEve3DProjection(); virtual Bool_tTEveProjection::AcceptSegment(TEveVector&, TEveVector&, Float_t) const; voidTEveProjection::AddPreScaleEntry(Int_t coord, Float_t max_val, Float_t scale); virtual voidTEveProjection::BisectBreakPoint(TEveVector& vL, TEveVector& vR, Float_t eps_sqr = 1e-10f); voidTEveProjection::ChangePreScaleEntry(Int_t coord, Int_t entry, Float_t new_scale); static TClass*Class(); voidTEveProjection::ClearPreScales(); Float_tTEveProjection::GetDistortion() const; Float_tTEveProjection::GetFixR() const; Float_tTEveProjection::GetFixZ() const; TEveProjection::EGeoMode_eTEveProjection::GetGeoMode() const; Float_tTEveProjection::GetLimit(Int_t i, Bool_t pos); Float_tTEveProjection::GetMaxTrackStep() const; const Char_t*TEveProjection::GetName() const; Float_tTEveProjection::GetPastFixRFac() const; Float_tTEveProjection::GetPastFixZFac() const; virtual Float_t*TEveProjection::GetProjectedCenter(); virtual Float_tTEveProjection::GetScreenVal(Int_t ax, Float_t value); TEveProjection::EPType_eTEveProjection::GetType() const; Bool_tTEveProjection::GetUsePreScale() const; virtual Float_tTEveProjection::GetValForScreenPos(Int_t ax, Float_t value); virtual Bool_tTEveProjection::HasSeveralSubSpaces() const; virtual Bool_tIs2D() const; virtual Bool_tIs3D() const; virtual TClass*IsA() const; virtual Bool_tTEveProjection::IsOnSubSpaceBoundrary(const TEveVector&) const; TEve3DProjection&operator=(const TEve3DProjection&); voidTEveProjection::PreScalePoint(Float_t& x, Float_t&",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEve3DProjection.html:922,Clear,ClearPreScales,922,root/html528/TEve3DProjection.html,https://root.cern,https://root.cern/root/html528/TEve3DProjection.html,1,['Clear'],['ClearPreScales']
Usability," TEve3DProjection(); TEve3DProjection(const TEve3DProjection&); virtual~TEve3DProjection(); virtual Bool_tTEveProjection::AcceptSegment(TEveVector&, TEveVector&, Float_t) const; voidTEveProjection::AddPreScaleEntry(Int_t coord, Float_t max_val, Float_t scale); virtual voidTEveProjection::BisectBreakPoint(TEveVector& vL, TEveVector& vR, Float_t eps_sqr); virtual voidTEveProjection::BisectBreakPoint(TEveVector& vL, TEveVector& vR, Bool_t project_result = kFALSE, Float_t depth = 0); voidTEveProjection::ChangePreScaleEntry(Int_t coord, Int_t entry, Float_t new_scale); static TClass*Class(); voidTEveProjection::ClearPreScales(); Bool_tTEveProjection::GetDisplaceOrigin() const; Float_tTEveProjection::GetDistortion() const; Float_tTEveProjection::GetFixR() const; Float_tTEveProjection::GetFixZ() const; TEveProjection::EGeoMode_eTEveProjection::GetGeoMode() const; Float_tTEveProjection::GetLimit(Int_t i, Bool_t pos); Float_tTEveProjection::GetMaxTrackStep() const; const Char_t*TEveProjection::GetName() const; TEveVectorTEveProjection::GetOrthogonalCenter(int idx, TEveVector& out); Float_tTEveProjection::GetPastFixRFac() const; Float_tTEveProjection::GetPastFixZFac() const; virtual Float_t*TEveProjection::GetProjectedCenter(); virtual Float_tTEveProjection::GetScreenVal(Int_t ax, Float_t value); Float_tTEveProjection::GetScreenVal(Int_t i, Float_t x, TEveVector& dirVec, TEveVector& oCenter); TEveProjection::EPType_eTEveProjection::GetType() const; Bool_tTEveProjection::GetUsePreScale() const; virtual Float_tTEveProjection::GetValForScreenPos(Int_t ax, Floa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEve3DProjection.html:1042,Clear,ClearPreScales,1042,root/html530/TEve3DProjection.html,https://root.cern,https://root.cern/root/html530/TEve3DProjection.html,3,['Clear'],['ClearPreScales']
Usability," TEveCluster(); TEveCluster(const TEveCluster&); virtual~TEveCluster(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveCluster.html:662,Clear,Clear,662,root/html528/TEveCluster.html,https://root.cern,https://root.cern/root/html528/TEveCluster.html,4,['Clear'],['Clear']
Usability," TEveContextMenu(const char* name, const char* title = ""Eve context menu""); ~TEveContextMenu(); voidTObject::AbstractMethod(const char* method) const; virtual voidTContextMenu::Action(TClassMenuItem* classmenuitem); voidTContextMenu::Action(TMethod* method); voidTContextMenu::Action(TToggle* toggle); virtual voidTContextMenu::Action(TObject* object, TMethod* method); virtual voidTContextMenu::Action(TObject* object, TToggle* toggle); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual const char*TContextMenu::CreateArgumentTitle(TMethodArg* argument); virtual const char*TContextMenu::CreateDialogTitle(TObject* object, TFunction* method); virtual const char*TContextMenu::CreatePopupTitle(TObject* object); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; voidTContextMenu::Execute(const char* params); voidTContextMenu::Execute(TObjArray* par",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveContextMenu.html:1086,Clear,Clear,1086,root/html534/TEveContextMenu.html,https://root.cern,https://root.cern/root/html534/TEveContextMenu.html,1,['Clear'],['Clear']
Usability," TEveException(); TEveException(const TString& s); TEveException(const char* s); TEveException(const string& s); TEveException(const TEveException&); virtual~TEveException(); TString&TString::Append(const char* cs); TString&TString::Append(const TString& s); TString&TString::Append(const char* cs, Ssiz_t n); TString&TString::Append(const TString& s, Ssiz_t n); TString&TString::Append(char c, Ssiz_t rep = 1); Double_tTString::Atof() const; Int_tTString::Atoi() const; Long64_tTString::Atoll() const; Bool_tTString::BeginsWith(const char* s, TString::ECaseCompare cmp = kExact) const; Bool_tTString::BeginsWith(const TString& pat, TString::ECaseCompare cmp = kExact) const; Ssiz_tTString::Capacity() const; Ssiz_tTString::Capacity(Ssiz_t n); TString&TString::Chop(); static TClass*Class(); voidTString::Clear(); intTString::CompareTo(const char* cs, TString::ECaseCompare cmp = kExact) const; intTString::CompareTo(const TString& st, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TRegexp& pat) const; Bool_tTString::Contains(TPRegexp& pat) const; Bool_tTString::Contains(const char* s, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TString& pat, TString::ECaseCompare cmp = kExact) const; TStringTString::Copy() const; Int_tTString::CountChar(Int_t c) const; const char*TString::Data() const; Bool_tTString::EndsWith(const char* pat, TString::ECaseCompare cmp = kExact) const; Bool_tTString::EqualTo(const char* cs, TString::ECaseCompare cmp = kExact) const; Bool_tTString::EqualTo(const TString& st, TString::ECaseCompare cmp = kExact) co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveException.html:1211,Clear,Clear,1211,root/html530/TEveException.html,https://root.cern,https://root.cern/root/html530/TEveException.html,2,['Clear'],['Clear']
Usability," TEveException(); TEveException(const TString& s); TEveException(const char* s); TEveException(const string& s); TEveException(const TEveException&); virtual~TEveException(); TString&TString::Append(const char* cs); TString&TString::Append(const TString& s); TString&TString::Append(const char* cs, Ssiz_t n); TString&TString::Append(const TString& s, Ssiz_t n); TString&TString::Append(char c, Ssiz_t rep = 1); Double_tTString::Atof() const; Int_tTString::Atoi() const; Long64_tTString::Atoll() const; Bool_tTString::BeginsWith(const char* s, TString::ECaseCompare cmp = kExact) const; Bool_tTString::BeginsWith(const TString& pat, TString::ECaseCompare cmp = kExact) const; Ssiz_tTString::Capacity() const; Ssiz_tTString::Capacity(Ssiz_t n); TString&TString::Chop(); static TClass*Class(); voidTString::Clear(); intTString::CompareTo(const char* cs, TString::ECaseCompare cmp = kExact) const; intTString::CompareTo(const TString& st, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TRegexp& pat) const; Bool_tTString::Contains(TPRegexp& pat) const; Bool_tTString::Contains(const char* s, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TString& pat, TString::ECaseCompare cmp = kExact) const; TStringTString::Copy() const; Int_tTString::CountChar(Int_t c) const; const char*TString::Data() const; Bool_tTString::EndsWith(const char* pat, TString::ECaseCompare cmp = kExact) const; virtual voidTString::FillBuffer(char*& buffer); Ssiz_tTString::First(char c) const; Ssiz_tTString::First(const char* cs) const; voidTString::Form(const char* fmt)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveException.html:1211,Clear,Clear,1211,root/html528/TEveException.html,https://root.cern,https://root.cern/root/html528/TEveException.html,1,['Clear'],['Clear']
Usability," TEveException(); TEveException(const TString& s); TEveException(const char* s); TEveException(const string& s); TEveException(const TEveException&); virtual~TEveException(); TString&TString::Append(const char* cs); TString&TString::Append(const TString& s); TString&TString::Append(const char* cs, Ssiz_t n); TString&TString::Append(const TString& s, Ssiz_t n); TString&TString::Append(char c, Ssiz_t rep = 1); Double_tTString::Atof() const; Int_tTString::Atoi() const; Long64_tTString::Atoll() const; static TStringTString::BaseConvert(const TString& s_in, Int_t base_in, Int_t base_out); Bool_tTString::BeginsWith(const char* s, TString::ECaseCompare cmp = kExact) const; Bool_tTString::BeginsWith(const TString& pat, TString::ECaseCompare cmp = kExact) const; Ssiz_tTString::Capacity() const; Ssiz_tTString::Capacity(Ssiz_t n); TString&TString::Chop(); static TClass*Class(); voidTString::Clear(); intTString::CompareTo(const char* cs, TString::ECaseCompare cmp = kExact) const; intTString::CompareTo(const TString& st, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TRegexp& pat) const; Bool_tTString::Contains(TPRegexp& pat) const; Bool_tTString::Contains(const char* s, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TString& pat, TString::ECaseCompare cmp = kExact) const; TStringTString::Copy() const; Int_tTString::CountChar(Int_t c) const; const char*TString::Data() const; Bool_tTString::EndsWith(const char* pat, TString::ECaseCompare cmp = kExact) const; Bool_tTString::EqualTo(const char* cs, TString::ECaseCompare cmp = kExact)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveException.html:1299,Clear,Clear,1299,root/html534/TEveException.html,https://root.cern,https://root.cern/root/html534/TEveException.html,1,['Clear'],['Clear']
Usability," TEveFrameBox(); virtual~TEveFrameBox(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTEveRefBackPtr::DecRefCount(TEveElement* re); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Color_tGetBackColor() const; UChar_t*GetBackRGBA(); Bool_tGetDrawBack() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Color_tGetFrameColor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveFrameBox.html:727,Clear,Clear,727,root/html528/TEveFrameBox.html,https://root.cern,https://root.cern/root/html528/TEveFrameBox.html,4,['Clear'],['Clear']
Usability," TEveGedNameTextButton(TEveGedNameFrame* p); virtual~TEveGedNameTextButton(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTGButton::AllowStayDown(Bool_t a); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); voidTGTextButton::ChangeText(const char* title)MENU ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual voidTGButton::Clicked()SIGNAL ; virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveGedNameTextButton.html:1353,Clear,Clear,1353,root/html528/TEveGedNameTextButton.html,https://root.cern,https://root.cern/root/html528/TEveGedNameTextButton.html,4,['Clear'],['Clear']
Usability," TEveGeoPolyShape(); virtual~TEveGeoPolyShape(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tTGeoBBox::Capacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTGeoBBox::ComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidTGeoBBox::ComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); virtual voidTGeoBBox::ComputeNormal_v(const Double_t* points, const Double_t* dirs, Double_t* norms, Int_t vecsize); static TEveGeoPolyShape*Construct(TGeoCompositeShape* cshp, Int_t n_seg); virtual Bool_tTGeoBBox::Contains(const Double_t* point) const; static Bool_tTGeoBBox::Contains(const Double_t* point, Double_t dx, Double_t dy, Double_t dz, const Double_t* origin); virtual voidTGeoBBox::Contains_v(const Double_t* points, Bool_t* inside, Int_t vecsize) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(const Double_t* point, const Double_t* dir) const; virtual voidTG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveGeoPolyShape.html:1007,Clear,Clear,1007,root/html534/TEveGeoPolyShape.html,https://root.cern,https://root.cern/root/html534/TEveGeoPolyShape.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TEveGeoPolyShape(); virtual~TEveGeoPolyShape(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tTGeoBBox::Capacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTGeoBBox::ComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidTGeoBBox::ComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); static TEveGeoPolyShape*Construct(TGeoCompositeShape* cshp, Int_t n_seg); virtual Bool_tTGeoBBox::Contains(Double_t* point) const; static Bool_tTGeoBBox::Contains(const Double_t* point, Double_t dx, Double_t dy, Double_t dz, const Double_t* origin); virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTGeoBBox::DistancetoPrimitive(Int_t px, Int_t py); virtual Double_tTGeoBBox::DistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; static Double_tTGeoBBox::DistFromInside(const Double_t* point, const Double_t* dir, Double_t dx, Double_t dy, Double_t dz, const Double_t* origin, Double_t stepm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveGeoPolyShape.html:879,Clear,Clear,879,root/html528/TEveGeoPolyShape.html,https://root.cern,https://root.cern/root/html528/TEveGeoPolyShape.html,1,['Clear'],['Clear']
Usability," TEveGeoPolyShape(); virtual~TEveGeoPolyShape(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tTGeoBBox::Capacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTGeoBBox::ComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidTGeoBBox::ComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); static TEveGeoPolyShape*Construct(TGeoCompositeShape* cshp, Int_t n_seg); virtual Bool_tTGeoBBox::Contains(Double_t* point) const; static Bool_tTGeoBBox::Contains(const Double_t* point, Double_t dx, Double_t dy, Double_t dz, const Double_t* origin); virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTGeoBBox::DistancetoPrimitive(Int_t px, Int_t py); virtual Double_tTGeoBBox::DistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; static Double_tTGeoBBox::DistFromInside(const Double_t* point, const Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveGeoPolyShape.html:967,Clear,Clear,967,root/html530/TEveGeoPolyShape.html,https://root.cern,https://root.cern/root/html530/TEveGeoPolyShape.html,1,['Clear'],['Clear']
Usability," TEveGeoPolyShape(); virtual~TEveGeoPolyShape(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tTGeoBBox::Capacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTGeoBBox::ComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidTGeoBBox::ComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); static TEveGeoPolyShape*Construct(TGeoCompositeShape* cshp, Int_t n_seg); virtual Bool_tTGeoBBox::Contains(Double_t* point) const; static Bool_tTGeoBBox::Contains(const Double_t* point, Double_t dx, Double_t dy, Double_t dz, const Double_t* origin); virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTGeoBBox::DistancetoPrimitive(Int_t px, Int_t py); virtual Double_tTGeoBBox::DistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; static Double_tTGeoBBox::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveGeoPolyShape.html:967,Clear,Clear,967,root/html532/TEveGeoPolyShape.html,https://root.cern,https://root.cern/root/html532/TEveGeoPolyShape.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TEveGeoShapeExtract(const char* n = ""TEveGeoShapeExtract"", const char* t = 0); virtual~TEveGeoShapeExtract(); voidTObject::AbstractMethod(const char* method) const; voidAddElement(TEveGeoShapeExtract* gse); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveGeoShapeExtract.html:950,Clear,Clear,950,root/html528/TEveGeoShapeExtract.html,https://root.cern,https://root.cern/root/html528/TEveGeoShapeExtract.html,4,['Clear'],['Clear']
Usability," TEveGridStepper(Int_t sm = kSM_XYZ); virtual~TEveGridStepper(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetCx() const; Int_tGetCy() const; Int_tGetCz() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Float_tGetDx() const; Float_tGetDy() const; Float_tGetDz() const; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveGridStepper.html:750,Clear,Clear,750,root/html528/TEveGridStepper.html,https://root.cern,https://root.cern/root/html528/TEveGridStepper.html,4,['Clear'],['Clear']
Usability," TEveGridStepperSubEditor(const TGWindow* p); virtual~TEveGridStepperSubEditor(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); voidChanged()SIGNAL ; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveGridStepperSubEditor.html:1405,Clear,Clear,1405,root/html528/TEveGridStepperSubEditor.html,https://root.cern,https://root.cern/root/html528/TEveGridStepperSubEditor.html,4,['Clear'],['Clear']
Usability," TEveHit(); TEveHit(const TEveHit&); virtual~TEveHit(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveHit.html:634,Clear,Clear,634,root/html528/TEveHit.html,https://root.cern,https://root.cern/root/html528/TEveHit.html,4,['Clear'],['Clear']
Usability," TEveLegoEventHandler(TGWindow* w, TObject* obj, TEveCaloLego* lego = 0); virtual~TEveLegoEventHandler(); voidTObject::AbstractMethod(const char* method) const; voidTGEventHandler::Activate(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGLEventHandler::ClearMouseOver(); virtual TObject*TNamed::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTNamed::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTNamed::Copy(TObject& named) const; voidTGEventHandler::DeActivate(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTQObject::Destroyed()SIGNAL ; Bool_tTQObject::Disconnect(const char* signal = 0, void* receiver = 0, const char* slot = 0); static Bool_tTQObject::Disconnec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveLegoEventHandler.html:1008,Clear,Clear,1008,root/html528/TEveLegoEventHandler.html,https://root.cern,https://root.cern/root/html528/TEveLegoEventHandler.html,8,['Clear'],"['Clear', 'ClearMouseOver']"
Usability," TEveMCRecCrossRef(); TEveMCRecCrossRef(const TEveMCRecCrossRef&); virtual~TEveMCRecCrossRef(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveMCRecCrossRef.html:704,Clear,Clear,704,root/html528/TEveMCRecCrossRef.html,https://root.cern,https://root.cern/root/html528/TEveMCRecCrossRef.html,4,['Clear'],['Clear']
Usability," TEveMCTrack(); TEveMCTrack(const TEveMCTrack&); virtual~TEveMCTrack(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); Int_tTParticle::Beauty() const; virtual voidTObject::Browse(TBrowser* b); Int_tTParticle::Charm() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTParticle::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; Double_tTParticle::Energy() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; Double_tTParticle::Eta() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTParticle::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tTParticle::GetCalcMass() const; Int_tTParticle::GetDaught",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveMCTrack.html:727,Clear,Clear,727,root/html532/TEveMCTrack.html,https://root.cern,https://root.cern/root/html532/TEveMCTrack.html,2,['Clear'],['Clear']
Usability," TEveMCTrack(); TEveMCTrack(const TEveMCTrack&); virtual~TEveMCTrack(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); Int_tTParticle::Beauty(); virtual voidTObject::Browse(TBrowser* b); Int_tTParticle::Charm(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTParticle::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; Double_tTParticle::Energy() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; Double_tTParticle::Eta() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTParticle::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tTParticle::GetCalcMass() const; Int_tTParticle::GetDaughter(Int_t i) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveMCTrack.html:715,Clear,Clear,715,root/html528/TEveMCTrack.html,https://root.cern,https://root.cern/root/html528/TEveMCTrack.html,2,['Clear'],['Clear']
Usability," TEveMacro(); TEveMacro(const TEveMacro&); TEveMacro(const char* name); virtual~TEveMacro(); voidTObject::AbstractMethod(const char* method) const; virtual TObjString*TMacro::AddLine(const char* text); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTMacro::Browse(TBrowser* b); virtual TMD5*TMacro::Checksum(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual Long_tExec(const char* params = ""0"", Int_t* error = 0); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveMacro.html:847,Clear,Clear,847,root/html528/TEveMacro.html,https://root.cern,https://root.cern/root/html528/TEveMacro.html,4,['Clear'],['Clear']
Usability," TEvePointSelector(TTree* t = 0, TEvePointSelectorConsumer* c = 0, const char* vexp = """", const char* sel = """"); virtual~TEvePointSelector(); virtual voidTSelector::Abort(const char* why, TSelector::EAbort what = kAbortProcess); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTSelectorDraw::Begin(TTree* tree); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEvePointSelector.html:1150,Clear,Clear,1150,root/html528/TEvePointSelector.html,https://root.cern,https://root.cern/root/html528/TEvePointSelector.html,4,['Clear'],['Clear']
Usability," TEveRGBAPalette(); TEveRGBAPalette(Int_t min, Int_t max, Bool_t interp = kTRUE, Bool_t showdef = kTRUE, Bool_t fixcolrng = kFALSE); virtual~TEveRGBAPalette(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidClearColorArray(); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); const UChar_t*ColorFromValue(Int_t val) const; voidColorFromValue(Int_t val, UChar_t* pix, Bool_t alpha = kTRUE) const; Bool_tColorFromValue(Int_t val, Int_t defVal, UChar_t* pix, Bool_t alpha = kTRUE) const; virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveRGBAPalette.html:1277,Clear,Clear,1277,root/html528/TEveRGBAPalette.html,https://root.cern,https://root.cern/root/html528/TEveRGBAPalette.html,4,['Clear'],['Clear']
Usability," TEveRGBAPaletteSubEditor(const TGWindow* p); virtual~TEveRGBAPaletteSubEditor(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); voidChanged()SIGNAL ; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveRGBAPaletteSubEditor.html:1379,Clear,Clear,1379,root/html528/TEveRGBAPaletteSubEditor.html,https://root.cern,https://root.cern/root/html528/TEveRGBAPaletteSubEditor.html,4,['Clear'],['Clear']
Usability," TEveRPhiProjection(); TEveRPhiProjection(const TEveRPhiProjection&); virtual~TEveRPhiProjection(); virtual Bool_tTEveProjection::AcceptSegment(TEveVector&, TEveVector&, Float_t) const; voidTEveProjection::AddPreScaleEntry(Int_t coord, Float_t max_val, Float_t scale); virtual voidTEveProjection::BisectBreakPoint(TEveVector& vL, TEveVector& vR, Float_t eps_sqr = 1e-10f); voidTEveProjection::ChangePreScaleEntry(Int_t coord, Int_t entry, Float_t new_scale); static TClass*Class(); voidTEveProjection::ClearPreScales(); Float_tTEveProjection::GetDistortion() const; Float_tTEveProjection::GetFixR() const; Float_tTEveProjection::GetFixZ() const; TEveProjection::EGeoMode_eTEveProjection::GetGeoMode() const; Float_tTEveProjection::GetLimit(Int_t i, Bool_t pos); Float_tTEveProjection::GetMaxTrackStep() const; const Char_t*TEveProjection::GetName() const; Float_tTEveProjection::GetPastFixRFac() const; Float_tTEveProjection::GetPastFixZFac() const; virtual Float_t*TEveProjection::GetProjectedCenter(); virtual Float_tTEveProjection::GetScreenVal(Int_t ax, Float_t value); TEveProjection::EPType_eTEveProjection::GetType() const; Bool_tTEveProjection::GetUsePreScale() const; virtual Float_tTEveProjection::GetValForScreenPos(Int_t ax, Float_t value); virtual Bool_tTEveProjection::HasSeveralSubSpaces() const; virtual Bool_tIs2D() const; virtual Bool_tIs3D() const; virtual TClass*IsA() const; virtual Bool_tTEveProjection::IsOnSubSpaceBoundrary(const TEveVector&) const; TEveRPhiProjection&operator=(const TEveRPhiProjection&); voidTEveProjection::PreScalePoint(Float_t& x, Float_t& y); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveRPhiProjection.html:912,Clear,ClearPreScales,912,root/html528/TEveRPhiProjection.html,https://root.cern,https://root.cern/root/html528/TEveRPhiProjection.html,1,['Clear'],['ClearPreScales']
Usability," TEveRPhiProjection(); TEveRPhiProjection(const TEveRPhiProjection&); virtual~TEveRPhiProjection(); virtual Bool_tTEveProjection::AcceptSegment(TEveVector&, TEveVector&, Float_t) const; voidTEveProjection::AddPreScaleEntry(Int_t coord, Float_t max_val, Float_t scale); virtual voidTEveProjection::BisectBreakPoint(TEveVector& vL, TEveVector& vR, Float_t eps_sqr); virtual voidTEveProjection::BisectBreakPoint(TEveVector& vL, TEveVector& vR, Bool_t project_result = kFALSE, Float_t depth = 0); voidTEveProjection::ChangePreScaleEntry(Int_t coord, Int_t entry, Float_t new_scale); static TClass*Class(); voidTEveProjection::ClearPreScales(); Bool_tTEveProjection::GetDisplaceOrigin() const; Float_tTEveProjection::GetDistortion() const; Float_tTEveProjection::GetFixR() const; Float_tTEveProjection::GetFixZ() const; TEveProjection::EGeoMode_eTEveProjection::GetGeoMode() const; Float_tTEveProjection::GetLimit(Int_t i, Bool_t pos); Float_tTEveProjection::GetMaxTrackStep() const; const Char_t*TEveProjection::GetName() const; TEveVectorTEveProjection::GetOrthogonalCenter(int idx, TEveVector& out); Float_tTEveProjection::GetPastFixRFac() const; Float_tTEveProjection::GetPastFixZFac() const; virtual Float_t*TEveProjection::GetProjectedCenter(); virtual Float_tTEveProjection::GetScreenVal(Int_t ax, Float_t value); Float_tTEveProjection::GetScreenVal(Int_t i, Float_t x, TEveVector& dirVec, TEveVector& oCenter); TEveProjection::EPType_eTEveProjection::GetType() const; Bool_tTEveProjection::GetUsePreScale() const; virtual Float_tTEveProjection::GetValForScreenPos(Int_t ax, Float_t value)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveRPhiProjection.html:1032,Clear,ClearPreScales,1032,root/html530/TEveRPhiProjection.html,https://root.cern,https://root.cern/root/html530/TEveRPhiProjection.html,3,['Clear'],['ClearPreScales']
Usability," TEveRecCascade(); TEveRecCascade(const TEveRecCascade&); virtual~TEveRecCascade(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveRecCascade.html:683,Clear,Clear,683,root/html528/TEveRecCascade.html,https://root.cern,https://root.cern/root/html528/TEveRecCascade.html,4,['Clear'],['Clear']
Usability," TEveRecKink(); TEveRecKink(const TEveRecKink&); virtual~TEveRecKink(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveRecKink.html:662,Clear,Clear,662,root/html528/TEveRecKink.html,https://root.cern,https://root.cern/root/html528/TEveRecKink.html,4,['Clear'],['Clear']
Usability," TEveRecTrack(); TEveRecTrack(const TEveRecTrack&); virtual~TEveRecTrack(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveRecTrack.html:669,Clear,Clear,669,root/html528/TEveRecTrack.html,https://root.cern,https://root.cern/root/html528/TEveRecTrack.html,1,['Clear'],['Clear']
Usability," TEveRecTrackT<double>(); TEveRecTrackT<double>(const TEveRecTrackT<double>&); virtual~TEveRecTrackT<double>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveRecTrackT_double_.html:824,Clear,Clear,824,root/html530/TEveRecTrackT_double_.html,https://root.cern,https://root.cern/root/html530/TEveRecTrackT_double_.html,3,['Clear'],['Clear']
Usability," TEveRecTrackT<float>(); TEveRecTrackT<float>(const TEveRecTrackT<float>&); virtual~TEveRecTrackT<float>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveRecTrackT_float_.html:830,Clear,Clear,830,root/html530/TEveRecTrackT_float_.html,https://root.cern,https://root.cern/root/html530/TEveRecTrackT_float_.html,3,['Clear'],['Clear']
Usability," TEveRecV0(); TEveRecV0(const TEveRecV0&); virtual~TEveRecV0(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveRecV0.html:648,Clear,Clear,648,root/html528/TEveRecV0.html,https://root.cern,https://root.cern/root/html528/TEveRecV0.html,4,['Clear'],['Clear']
Usability," TEveRhoZProjection(); TEveRhoZProjection(const TEveRhoZProjection&); virtual~TEveRhoZProjection(); virtual Bool_tAcceptSegment(TEveVector& v1, TEveVector& v2, Float_t tolerance) const; voidTEveProjection::AddPreScaleEntry(Int_t coord, Float_t max_val, Float_t scale); virtual voidTEveProjection::BisectBreakPoint(TEveVector& vL, TEveVector& vR, Float_t eps_sqr = 1e-10f); voidTEveProjection::ChangePreScaleEntry(Int_t coord, Int_t entry, Float_t new_scale); static TClass*Class(); voidTEveProjection::ClearPreScales(); Float_tTEveProjection::GetDistortion() const; Float_tTEveProjection::GetFixR() const; Float_tTEveProjection::GetFixZ() const; TEveProjection::EGeoMode_eTEveProjection::GetGeoMode() const; Float_tTEveProjection::GetLimit(Int_t i, Bool_t pos); Float_tTEveProjection::GetMaxTrackStep() const; const Char_t*TEveProjection::GetName() const; Float_tTEveProjection::GetPastFixRFac() const; Float_tTEveProjection::GetPastFixZFac() const; virtual Float_t*GetProjectedCenter(); virtual Float_tTEveProjection::GetScreenVal(Int_t ax, Float_t value); TEveProjection::EPType_eTEveProjection::GetType() const; Bool_tTEveProjection::GetUsePreScale() const; virtual Float_tTEveProjection::GetValForScreenPos(Int_t ax, Float_t value); virtual Bool_tHasSeveralSubSpaces() const; virtual Bool_tIs2D() const; virtual Bool_tIs3D() const; virtual TClass*IsA() const; virtual Bool_tIsOnSubSpaceBoundrary(const TEveVector& v) const; TEveRhoZProjection&operator=(const TEveRhoZProjection&); voidTEveProjection::PreScalePoint(Floa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveRhoZProjection.html:980,Clear,ClearPreScales,980,root/html528/TEveRhoZProjection.html,https://root.cern,https://root.cern/root/html528/TEveRhoZProjection.html,1,['Clear'],['ClearPreScales']
Usability," TEveRhoZProjection(); TEveRhoZProjection(const TEveRhoZProjection&); virtual~TEveRhoZProjection(); virtual Bool_tAcceptSegment(TEveVector& v1, TEveVector& v2, Float_t tolerance) const; voidTEveProjection::AddPreScaleEntry(Int_t coord, Float_t max_val, Float_t scale); virtual voidTEveProjection::BisectBreakPoint(TEveVector& vL, TEveVector& vR, Float_t eps_sqr); virtual voidTEveProjection::BisectBreakPoint(TEveVector& vL, TEveVector& vR, Bool_t project_result = kFALSE, Float_t depth = 0); voidTEveProjection::ChangePreScaleEntry(Int_t coord, Int_t entry, Float_t new_scale); static TClass*Class(); voidTEveProjection::ClearPreScales(); Bool_tTEveProjection::GetDisplaceOrigin() const; Float_tTEveProjection::GetDistortion() const; Float_tTEveProjection::GetFixR() const; Float_tTEveProjection::GetFixZ() const; TEveProjection::EGeoMode_eTEveProjection::GetGeoMode() const; Float_tTEveProjection::GetLimit(Int_t i, Bool_t pos); Float_tTEveProjection::GetMaxTrackStep() const; const Char_t*TEveProjection::GetName() const; TEveVectorTEveProjection::GetOrthogonalCenter(int idx, TEveVector& out); Float_tTEveProjection::GetPastFixRFac() const; Float_tTEveProjection::GetPastFixZFac() const; virtual Float_t*GetProjectedCenter(); virtual Float_tTEveProjection::GetScreenVal(Int_t ax, Float_t value); Float_tTEveProjection::GetScreenVal(Int_t i, Float_t x, TEveVector& dirVec, TEveVector& oCenter); TEveProjection::EPType_eTEveProjection::GetType() const; Bool_tTEveProjection::GetUsePreScale() const; virtual Float_tTEvePro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveRhoZProjection.html:1100,Clear,ClearPreScales,1100,root/html530/TEveRhoZProjection.html,https://root.cern,https://root.cern/root/html530/TEveRhoZProjection.html,3,['Clear'],['ClearPreScales']
Usability," TEveSelection*fHighlight; Bool_tfKeepEmptyCont; TEveGListTreeEditorFrame*fLTEFrame; TFolder*fMacroFolder; TEveElementList*fOrphanage; Int_tfRedrawDisabled; TTimerfRedrawTimer; Bool_tfResetCameras; TEveSceneList*fScenes; TEveSelection*fSelection; TExMap*fStampedElements; Bool_tfTimerActive; Bool_tfUseOrphanage; TEveViewerList*fViewers; TMap*fVizDB; Bool_tfVizDBReplace; Bool_tfVizDBUpdate; TEveWindowManager*fWindowManager. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveManager(UInt_t w, UInt_t h, Bool_t map_window = kTRUE, Option_t* opt = ""FI""); Constructor.; If map_window is true, the TEveBrowser window is mapped. Option string is first parsed for the following characters:; V - spawn a default GL viewer. The consumed characters are removed from the options and they; are passed to TEveBrowser for creation of additional plugins. Default options: ""FIV"" - file-browser, command-line, GL-viewer. ~TEveManager(); Destructor. void ClearOrphanage(); Clear the orphanage. TGWindow* GetMainWindow() const; Get the main window, i.e. EVE-browser. TEveViewer* GetDefaultViewer() const; Returns the default viewer - the first one in the fViewers list. TGLViewer* GetDefaultGLViewer() const; Get TGLViewer of the default TEveViewer. TEveGedEditor* GetEditor() const; Returns main object editor. TGStatusBar* GetStatusBar() const; Returns main window status bar. TCanvas* AddCanvasTab(const char* name); Add a new canvas tab. TEveViewer* SpawnNewViewer(const char* name, const char* title = """", Bool_t embed = kTRUE); Create a new GL viewer. TEveScene* SpawnNewScene(const char* name, const char* title = """"); Create a new scene. TMacro* GetMacro(const char* name) const; Find macro in fMacroFolder by name. void EditElement(TEveElement* element); Show element in default editor. void RegisterRedraw3D(); Register a request for 3D redraw. void DoRedraw3D(); Perform 3D redraw of scenes and viewers whose contents has; changed. void FullRedraw3D(Bool_t rese",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveManager.html:5033,Clear,ClearOrphanage,5033,root/html534/TEveManager.html,https://root.cern,https://root.cern/root/html534/TEveManager.html,4,['Clear'],"['Clear', 'ClearOrphanage']"
Usability," TEveSelectorToEventList(TEventList* evl, const char* sel); ~TEveSelectorToEventList(); virtual voidTSelector::Abort(const char* why, TSelector::EAbort what = kAbortProcess); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTSelectorDraw::Begin(TTree* tree); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveSelectorToEventList.html:946,Clear,Clear,946,root/html528/TEveSelectorToEventList.html,https://root.cern,https://root.cern/root/html528/TEveSelectorToEventList.html,4,['Clear'],['Clear']
Usability," TEveTrackPropagatorSubEditor(const TGWindow* p); virtual~TEveTrackPropagatorSubEditor(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); voidChanged()SIGNAL ; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveTrackPropagatorSubEditor.html:1433,Clear,Clear,1433,root/html528/TEveTrackPropagatorSubEditor.html,https://root.cern,https://root.cern/root/html528/TEveTrackPropagatorSubEditor.html,4,['Clear'],['Clear']
Usability," TEveTrans(); TEveTrans(const TEveTrans& t); TEveTrans(const Double_t* arr); TEveTrans(const Float_t* arr); virtual~TEveTrans(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); Double_t*Array(); const Double_t*Array() const; Double_t*ArrT(); const Double_t*ArrT() const; Double_t*ArrX(); const Double_t*ArrX() const; Double_t*ArrY(); const Double_t*ArrY() const; Double_t*ArrZ(); const Double_t*ArrZ() const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; Double_tCM(Int_t i, Int_t j) const; Double_t&CM(Int_t i, Int_t j); virtual Int_tTObject::Compare(const TObject* o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveTrans.html:1801,Clear,Clear,1801,root/html528/TEveTrans.html,https://root.cern,https://root.cern/root/html528/TEveTrans.html,4,['Clear'],['Clear']
Usability," TEveTransSubEditor(TGWindow* p); virtual~TEveTransSubEditor(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); Bool_tTGFrame::Contains(Int_t x,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveTransSubEditor.html:1335,Clear,Clear,1335,root/html528/TEveTransSubEditor.html,https://root.cern,https://root.cern/root/html528/TEveTransSubEditor.html,4,['Clear'],['Clear']
Usability," TEveVSD(const char* name = ""TEveVSD"", const char* title = """"); virtual~TEveVSD(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidCreateBranches(); virtual voidCreateTrees(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteTrees(); static voidDisableTObjectStreamersForVSDStruct(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveVSD.html:759,Clear,Clear,759,root/html528/TEveVSD.html,https://root.cern,https://root.cern/root/html528/TEveVSD.html,4,['Clear'],['Clear']
Usability," TEveWindow & ; ). private . ◆ PopulateEmptyFrame(). void TEveWindow::PopulateEmptyFrame ; (; TEveCompositeFrame * ; ef). Populate given frame-slot - intended for initial population of a new slot or low-level window-swapping. ; No layout or window-mapping is done. ; Definition at line 727 of file TEveWindow.cxx. ◆ PostDock(). void TEveWindow::PostDock ; (; ). virtual . Virtual function called after a window is docked. ; Reimplemented in TEveViewer.; Definition at line 703 of file TEveWindow.cxx. ◆ PreDeleteElement(). void TEveWindow::PreDeleteElement ; (; ). overrideprotectedvirtual . Called before the element is deleted, thus offering the last chance to detach from acquired resources and from the framework itself. ; Here the request is just passed to TEveManager. If you override it, make sure to call base-class version. ; Reimplemented from TEveElement.; Definition at line 681 of file TEveWindow.cxx. ◆ PreUndock(). void TEveWindow::PreUndock ; (; ). virtual . Virtual function called before a window is undocked. ; Reimplemented in TEveViewer.; Definition at line 690 of file TEveWindow.cxx. ◆ ReplaceWindow(). void TEveWindow::ReplaceWindow ; (; TEveWindow * ; w). Replace this window with the passed one. ; Eve parent-ship is properly handled. This will most likely lead to the destruction of this window. Layout is called on the frame. ; Definition at line 819 of file TEveWindow.cxx. ◆ SetCurrent(). void TEveWindow::SetCurrent ; (; Bool_t ; curr). protectedvirtual . Set current state of this eve-window. ; Protected method - called by window-manager. ; Reimplemented in TEveWindowSlot.; Definition at line 929 of file TEveWindow.cxx. ◆ SetCurrentBackgroundColor(). void TEveWindow::SetCurrentBackgroundColor ; (; Pixel_t ; p). static . Set background-color for marking the title-bar of current window. Static. ; Definition at line 1114 of file TEveWindow.cxx. ◆ SetMainFrameDefHeight(). void TEveWindow::SetMainFrameDefHeight ; (; UInt_t ; x). static . Set default height for new ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveWindow.html:42970,undo,undocked,42970,doc/master/classTEveWindow.html,https://root.cern,https://root.cern/doc/master/classTEveWindow.html,1,['undo'],['undocked']
Usability," TEventIterObj(); TEventIterObj(const TEventIterObj&); TEventIterObj(TDSet* dset, TSelector* sel, Long64_t first, Long64_t num); virtual~TEventIterObj(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static TEventIter*TEventIter::Create(TDSet* dset, TSelector* sel, Long64_t first, Long64_t num); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Long64_tGetCac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEventIterObj.html:851,Clear,Clear,851,root/html528/TEventIterObj.html,https://root.cern,https://root.cern/root/html528/TEventIterObj.html,4,['Clear'],['Clear']
Usability," TEventIterTree(); TEventIterTree(const TEventIterTree&); TEventIterTree(TDSet* dset, TSelector* sel, Long64_t first, Long64_t num); virtual~TEventIterTree(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static TEventIter*TEventIter::Create(TDSet* dset, TSelector* sel, Long64_t first, Long64_t num); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Long64",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEventIterTree.html:859,Clear,Clear,859,root/html528/TEventIterTree.html,https://root.cern,https://root.cern/root/html528/TEventIterTree.html,4,['Clear'],['Clear']
Usability," TEventIterUnit(); TEventIterUnit(const TEventIterUnit&); TEventIterUnit(TDSet* dset, TSelector* sel, Long64_t num); virtual~TEventIterUnit(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static TEventIter*TEventIter::Create(TDSet* dset, TSelector* sel, Long64_t first, Long64_t num); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Long64_tGetCacheSize()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEventIterUnit.html:843,Clear,Clear,843,root/html528/TEventIterUnit.html,https://root.cern,https://root.cern/root/html528/TEventIterUnit.html,4,['Clear'],['Clear']
Usability," TExMap(Int_t mapSize = 100); TExMap(const TExMap& map); virtual~TExMap(); voidTObject::AbstractMethod(const char* method) const; voidAdd(Long64_t key, Long64_t value); voidAdd(ULong64_t hash, Long64_t key, Long64_t value); voidAddAt(UInt_t slot, ULong64_t hash, Long64_t key, Long64_t value); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); Int_tCapacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidDelete(Option_t* opt = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); voidExpand(Int_t newsize); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TExMap.html:1044,Clear,Clear,1044,root/html528/TExMap.html,https://root.cern,https://root.cern/root/html528/TExMap.html,4,['Clear'],['Clear']
Usability," TF1 class for the list of functions formats. Function Members (Methods); public:. virtual~TF2(); voidTObject::AbstractMethod(const char* method) const; static voidTF1::AbsValue(Bool_t reject = kTRUE); virtual voidTF1::AddParameter(const TString& name, Double_t value); virtual Bool_tTF1::AddToGlobalList(Bool_t on = kTRUE); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTF1::Browse(TBrowser* b); static voidTF1::CalcGaussLegendreSamplingPoints(Int_t num, Double_t* x, Double_t* w, Double_t eps = 3.0E-11); virtual Double_tTF1::CentralMoment(Double_t n, Double_t a, Double_t b, const Double_t* params = 0, Double_t epsilon = 9.9999999999999995E-7); virtual Double_tCentralMoment2(Double_t nx, Double_t ax, Double_t bx, Double_t ny, Double_t ay, Double_t by, Double_t epsilon = 9.9999999999999995E-7); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject& f2) const; virtual Double_tCovariance2XY(Double_t ax, Double_t bx, Double_t ay, Double_t by, Double_t epsilon = 9.9999999999999995E-7); virtual TH1*CreateHistogram(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Double_tTF1::Derivative(Double_t x, Double_t* params = 0, Double_t epsilon = 0.001) const; virtual Double_tTF1::Derivative2(Double_t x, Double_t* params = 0, Double_t epsilon = 0.001) const; virtual Double_tTF1::Derivative3(Double_t x, Double_t* params = 0, Double_t epsilon = 0.001) const; static Double_tTF1::DerivativeError(); Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TF1*DrawCopy(Option_t* opti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TF2.html:1371,Clear,Clear,1371,root/html604/TF2.html,https://root.cern,https://root.cern/root/html604/TF2.html,1,['Clear'],['Clear']
Usability," TFFTComplex(); TFFTComplex(const TFFTComplex&); TFFTComplex(Int_t n, Bool_t inPlace); TFFTComplex(Int_t ndim, Int_t* n, Bool_t inPlace = kFALSE); virtual~TFFTComplex(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFFTComplex.html:1959,Clear,Clear,1959,root/html528/TFFTComplex.html,https://root.cern,https://root.cern/root/html528/TFFTComplex.html,4,['Clear'],['Clear']
Usability," TFFTComplexReal(); TFFTComplexReal(const TFFTComplexReal&); TFFTComplexReal(Int_t n, Bool_t inPlace); TFFTComplexReal(Int_t ndim, Int_t* n, Bool_t inPlace); virtual~TFFTComplexReal(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrow",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFFTComplexReal.html:2101,Clear,Clear,2101,root/html528/TFFTComplexReal.html,https://root.cern,https://root.cern/root/html528/TFFTComplexReal.html,4,['Clear'],['Clear']
Usability," TFFTRealComplex(); TFFTRealComplex(const TFFTRealComplex&); TFFTRealComplex(Int_t n, Bool_t inPlace); TFFTRealComplex(Int_t ndim, Int_t* n, Bool_t inPlace); virtual~TFFTRealComplex(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFFTRealComplex.html:2059,Clear,Clear,2059,root/html528/TFFTRealComplex.html,https://root.cern,https://root.cern/root/html528/TFFTRealComplex.html,4,['Clear'],['Clear']
Usability," TFHandler_DNN_CPU : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 0.012591 1.0260 [ -3.3377 5.7307 ]; : var2: 0.0016174 1.0380 [ -4.5569 5.7307 ]; : fvalue: 165.93 84.643 [ 2.0973 391.01 ]; : -----------------------------------------------------------; : Start of deep neural network training on CPU using MT, nthreads = 1; : ; TFHandler_DNN_CPU : Variable Mean RMS [ Min Max ]; : -----------------------------------------------------------; : var1: 0.012591 1.0260 [ -3.3377 5.7307 ]; : var2: 0.0016174 1.0380 [ -4.5569 5.7307 ]; : fvalue: 165.93 84.643 [ 2.0973 391.01 ]; : -----------------------------------------------------------; : ***** Deep Learning Network *****; DEEP NEURAL NETWORK: Depth = 4 Input = ( 1, 1, 2 ) Batch size = 50 Loss function = R; Layer 0 DENSE Layer: ( Input = 2 , Width = 50 ) Output = ( 1 , 50 , 50 ) Activation Function = Tanh; Layer 1 DENSE Layer: ( Input = 50 , Width = 50 ) Output = ( 1 , 50 , 50 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 50 , Width = 50 ) Output = ( 1 , 50 , 50 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 50 , Width = 1 ) Output = ( 1 , 50 , 1 ) Activation Function = Identity; : Using 800 events for training and 200 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 33494.1; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 34747.6 33079.7 0.0192196 0.00176099 45822.6 0; : 2 Minimum Test error found - save the configuration ; : 2 | 34222.2 32417.1 0.0195047 0.0017702 45109.9 0; : 3 Minimum Test error found - save the configuration ; : 3 | 33496 31618.4 0.019",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:10203,Learn,Learning,10203,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['Learn'],['Learning']
Usability," TFITSHDU(const char* filepath_with_filter); TFITSHDU(const TFITSHDU&); TFITSHDU(const char* filepath, Int_t extension_number); TFITSHDU(const char* filepath, const char* extension_name); virtual~TFITSHDU(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); Bool_tChange(const char* filter); Bool_tChange(Int_t extension_number); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* opt = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFITSHDU.html:994,Clear,Clear,994,root/html528/TFITSHDU.html,https://root.cern,https://root.cern/root/html528/TFITSHDU.html,4,['Clear'],['Clear']
Usability," TFPBlock(Long64_t*, Int_t*, Int_t); virtual~TFPBlock(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; char*GetBuffer() const; Long64_tGetCapacity() const; Long64_tGetDataSize() const; virtual Option_t*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFPBlock.html:869,Clear,Clear,869,root/html534/TFPBlock.html,https://root.cern,https://root.cern/root/html534/TFPBlock.html,1,['Clear'],['Clear']
Usability," TFPBlock(const TFPBlock&); TFPBlock(Long64_t*, Int_t*, Int_t); virtual~TFPBlock(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; char*GetBuffer() const; virtual Option_t*TObject::GetDrawOption() const; s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFPBlock.html:896,Clear,Clear,896,root/html530/TFPBlock.html,https://root.cern,https://root.cern/root/html530/TFPBlock.html,2,['Clear'],['Clear']
Usability," TFTP(const char* url, Int_t parallel = 1, Int_t wsize = kDfltWindowSize, TSocket* sock = 0); virtual~TFTP(); voidTObject::AbstractMethod(const char* method) const; Bool_tAccessPathName(const char* path, EAccessMode mode = kFileExists, Bool_t print = kFALSE); virtual voidTObject::AppendPad(Option_t* option = """"); voidAscii(); voidascii(); voidbin(); voidBinary(); virtual voidTObject::Browse(TBrowser* b); voidbye(); voidcd(const char* dir) const; Int_tChangeDirectory(const char* dir) const; Int_tChangePermission(const char* file, Int_t mode) const; voidchmod(const char* file, Int_t mode) const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; Int_tClose(); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tDeleteDirectory(const char* dir) const; Int_tDeleteFile(const char* file) const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFTP.html:1200,Clear,Clear,1200,root/html528/TFTP.html,https://root.cern,https://root.cern/root/html528/TFTP.html,4,['Clear'],['Clear']
Usability," TFastCgi(); TFastCgi(const TFastCgi&); virtual~TFastCgi(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tCreate(const char* args); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFastCgi.html:1437,Clear,Clear,1437,root/html534/TFastCgi.html,https://root.cern,https://root.cern/root/html534/TFastCgi.html,1,['Clear'],['Clear']
Usability," TFile); TStringTNamed::fNameobject identifier; TObjArray*fObjects!Array pointing to the referenced objects; TStringTNamed::fTitleobject title; static UInt_tfgNumberReferenced objects count; static TExMap*fgObjPIDsTable pointer to pids; static TProcessID*fgPIDPointer to current session ProcessID; static TObjArray*fgPIDsTable of ProcessIDs. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProcessID(); Default constructor. ~TProcessID(); Destructor. TProcessID * AddProcessID(); Static function to add a new TProcessID to the list of PIDs. UInt_t AssignID(TObject* obj); static function returning the ID assigned to obj; If the object is not yet referenced, its kIsReferenced bit is set; and its fUniqueID set to the current number of referenced objects so far. void CheckInit(); Initialize fObjects. void Cleanup(); static function (called by TROOT destructor) to delete all TProcessIDs. void Clear(Option_t* option = """"); delete the TObjArray pointing to referenced objects; this function is called by TFile::Close(""R""). Int_t DecrementCount(). TProcessID * GetProcessID(UShort_t pid); static function returning a pointer to TProcessID number pid in fgPIDs. UInt_t GetNProcessIDs(); Return the (static) number of process IDs. TProcessID * GetProcessWithUID(UInt_t uid, const void* obj); static function returning a pointer to TProcessID with its pid; encoded in the highest byte of uid. TProcessID * GetProcessWithUID(const TObject* obj); static function returning a pointer to TProcessID with its pid; encoded in the highest byte of obj->GetUniqueID(). TProcessID * GetSessionProcessID(); static function returning the pointer to the session TProcessID. Int_t IncrementCount(); Increase the reference count to this object. UInt_t GetObjectCount(); Return the current referenced object count; fgNumber is incremented everytime a new object is referenced. TObject * GetObjectWithID(UInt_t uid); returns the TObject with unique identifier uid in the table",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProcessID.html:8486,Clear,Clear,8486,root/html528/TProcessID.html,https://root.cern,https://root.cern/root/html528/TProcessID.html,6,['Clear'],['Clear']
Usability," TFile::Openstatic TFile * Open(const char *name, Option_t *option="""", const char *ftitle="""", Int_t compress=ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault, Int_t netopt=0)Create / open a file.Definition TFile.cxx:4089; TFile::SetCacheFileDirstatic Bool_t SetCacheFileDir(std::string_view cacheDir, Bool_t operateDisconnected=kTRUE, Bool_t forceCacheread=kFALSE)Sets the directory where to locally stage/cache remote files.Definition TFile.cxx:4626; TMVA::Tools::Instancestatic Tools & Instance()Definition Tools.cxx:71; TMVA::Tools::SplitStringstd::vector< TString > SplitString(const TString &theOpt, const char separator) constsplits the option string at 'separator' and fills the list 'splitV' with the primitive stringsDefinition Tools.cxx:1199; TMVA::Types::kFisher@ kFisherDefinition Types.h:82; TMVA::Types::kTMlpANN@ kTMlpANNDefinition Types.h:85; TMVA::Types::kFDA@ kFDADefinition Types.h:92; TMVA::Types::kBDT@ kBDTDefinition Types.h:86; TMVA::Types::kPDERS@ kPDERSDefinition Types.h:80; TMVA::Types::kDL@ kDLDefinition Types.h:99; TMVA::Types::kPDEFoam@ kPDEFoamDefinition Types.h:94; TMVA::Types::kLikelihood@ kLikelihoodDefinition Types.h:79; TMVA::Types::kCuts@ kCutsDefinition Types.h:78; TMVA::Types::kLD@ kLDDefinition Types.h:95; TMVA::Types::kHMatrix@ kHMatrixDefinition Types.h:81; TMVA::Types::kSVM@ kSVMDefinition Types.h:89; TMVA::Types::kRuleFit@ kRuleFitDefinition Types.h:88; TMVA::Types::kCFMlpANN@ kCFMlpANNDefinition Types.h:84; TMVA::Types::kKNN@ kKNNDefinition Types.h:83; TMVA::Types::kMLP@ kMLPDefinition Types.h:90; TStringBasic string class.Definition TString.h:139; TString::IsNullBool_t IsNull() constDefinition TString.h:414; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; TMVA::gToolsTools & gTools(); TMVA::TMVAGuivoid TMVAGui(const char *fName=""TMVA.root"", TString dataset=""""); Factory.h. tutorialstmvaTMVAClassification.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:11 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C_source.html:30416,Guid,Guide,30416,doc/master/TMVAClassification_8C_source.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C_source.html,1,['Guid'],['Guide']
Usability," TFileCacheRead(); TFileCacheRead(TFile* file, Int_t buffersize); virtual~TFileCacheRead(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddBranch(TBranch*, Bool_t = kFALSE); virtual voidAddBranch(const char*, Bool_t = kFALSE); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* err",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFileCacheRead.html:1329,Clear,Clear,1329,root/html528/TFileCacheRead.html,https://root.cern,https://root.cern/root/html528/TFileCacheRead.html,3,['Clear'],['Clear']
Usability," TFileCacheRead(); TFileCacheRead(TFile* file, Int_t buffersize, TObject* tree = 0); virtual~TFileCacheRead(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddBranch(TBranch*, Bool_t = kFALSE); virtual voidAddBranch(const char*, Bool_t = kFALSE); virtual voidAddNoCacheBytesRead(Long64_t len); virtual voidAddNoCacheReadCalls(Int_t reads); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidClose(Option_t* option = """"); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFileCacheRead.html:1441,Clear,Clear,1441,root/html534/TFileCacheRead.html,https://root.cern,https://root.cern/root/html534/TFileCacheRead.html,1,['Clear'],['Clear']
Usability," TFileCacheWrite(); TFileCacheWrite(TFile* file, Int_t buffersize); virtual~TFileCacheWrite(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFileCacheWrite.html:1214,Clear,Clear,1214,root/html528/TFileCacheWrite.html,https://root.cern,https://root.cern/root/html528/TFileCacheWrite.html,4,['Clear'],['Clear']
Usability," TFileCollection(const char* name = 0, const char* title = 0, const char* file = 0, Int_t nfiles = -1, Int_t firstfile = 1); virtual~TFileCollection(); voidTObject::AbstractMethod(const char* method) const; Int_tAdd(TFileInfo* info); Int_tAdd(TFileCollection* coll); Int_tAdd(const char* path); Int_tAddFromFile(const char* file, Int_t nfiles = -1, Int_t firstfile = 1); Bool_tAddMetaData(TObject* meta); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFileCollection.html:1175,Clear,Clear,1175,root/html528/TFileCollection.html,https://root.cern,https://root.cern/root/html528/TFileCollection.html,4,['Clear'],['Clear']
Usability," TFileHandler(int fd, int mask); virtual~TFileHandler(); voidTObject::AbstractMethod(const char* method) const; voidTSysEvtHandler::Activate(); virtual voidTSysEvtHandler::Activated()SIGNAL ; virtual voidAdd(); virtual voidTSysEvtHandler::Added()SIGNAL ; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; voidTSysEvtHandler::DeActivate(); virtual voidTSysEvtHandler::DeActivated()SIGNAL ; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTQObject::Destroyed()SIGNAL ; Bool_tTQObject::Disconnect(const char* signal =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFileHandler.html:1087,Clear,Clear,1087,root/html528/TFileHandler.html,https://root.cern,https://root.cern/root/html528/TFileHandler.html,4,['Clear'],['Clear']
Usability," TFileInfo(const TFileInfo&); TFileInfo(const char* url = 0, Long64_t size = -1, const char* uuid = 0, const char* md5 = 0, TObject* meta = 0); virtual~TFileInfo(); voidTObject::AbstractMethod(const char* method) const; Bool_tAddMetaData(TObject* meta); Bool_tAddUrl(const char* url, Bool_t infront = kFALSE); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tCompare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); TUrl*FindByUrl(const char* url, Bool_t withDeflt = kFALSE); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFileInfo.html:891,Clear,Clear,891,root/html528/TFileInfo.html,https://root.cern,https://root.cern/root/html528/TFileInfo.html,4,['Clear'],['Clear']
Usability," TFileInfoMeta(); TFileInfoMeta(const TFileInfoMeta& m); TFileInfoMeta(const char* objPath, const char* objClass = ""TTree"", Long64_t entries = -1, Long64_t first = 0, Long64_t last = -1, Long64_t totbytes = -1, Long64_t zipbytes = -1); TFileInfoMeta(const char* objPath, const char* objDir, const char* objClass, Long64_t entries = -1, Long64_t first = 0, Long64_t last = -1, Long64_t totbytes = -1, Long64_t zipbytes = -1); virtual~TFileInfoMeta(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFileInfoMeta.html:1098,Clear,Clear,1098,root/html528/TFileInfoMeta.html,https://root.cern,https://root.cern/root/html528/TFileInfoMeta.html,4,['Clear'],['Clear']
Usability," TFileMerger(Bool_t isLocal = kTRUE, Bool_t histoOneGo = kTRUE); virtual~TFileMerger(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tAddAdoptFile(TFile* source, Bool_t cpProgress = kTRUE); virtual Bool_tAddFile(const char* url, Bool_t cpProgress = kTRUE); virtual Bool_tAddFile(TFile* source, Bool_t cpProgress = kTRUE); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFileMerger.html:1261,Clear,Clear,1261,root/html532/TFileMerger.html,https://root.cern,https://root.cern/root/html532/TFileMerger.html,1,['Clear'],['Clear']
Usability," TFileMerger(Bool_t isLocal = kTRUE, Bool_t histoOneGo = kTRUE); virtual~TFileMerger(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tAddAdoptFile(TFile* source, Bool_t cpProgress = kTRUE); virtual Bool_tAddFile(const char* url, Bool_t cpProgress = kTRUE); virtual Bool_tAddFile(TFile* source, Bool_t cpProgress = kTRUE); voidAddObjectNames(const char* name); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidClearObjectNames(); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFileMerger.html:1299,Clear,Clear,1299,root/html534/TFileMerger.html,https://root.cern,https://root.cern/root/html534/TFileMerger.html,1,['Clear'],['Clear']
Usability," TFileMerger(Bool_t isLocal = kTRUE, Bool_t histoOneGo = kTRUE); virtual~TFileMerger(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tAddFile(const char* url, Bool_t cpProgress = kTRUE); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFileMerger.html:1138,Clear,Clear,1138,root/html528/TFileMerger.html,https://root.cern,https://root.cern/root/html528/TFileMerger.html,1,['Clear'],['Clear']
Usability," TFileMerger(Bool_t isLocal = kTRUE, Bool_t histoOneGo = kTRUE); virtual~TFileMerger(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tAddFile(const char* url, Bool_t cpProgress = kTRUE); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* met",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFileMerger.html:1126,Clear,Clear,1126,root/html530/TFileMerger.html,https://root.cern,https://root.cern/root/html530/TFileMerger.html,1,['Clear'],['Clear']
Usability," TFilePrefetch(TFile*); TFilePrefetch(const TFilePrefetch&); virtual~TFilePrefetch(); voidTObject::AbstractMethod(const char* method) const; voidAddPendingBlock(TFPBlock*); voidAddReadBlock(TFPBlock*); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tBinarySearchReadList(TFPBlock*, Long64_t, Int_t, Int_t*); virtual voidTObject::Browse(TBrowser* b); Bool_tCheckBlockInCache(char*&, TFPBlock*); Bool_tCheckCachePath(const char*); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; TFPBlock*CreateBlockObj(Long64_t*, Int_t*, Int_t); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; char*GetBlockFromCache(const char*, Int_t); virtual Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFilePrefetch.html:865,Clear,Clear,865,root/html530/TFilePrefetch.html,https://root.cern,https://root.cern/root/html530/TFilePrefetch.html,2,['Clear'],['Clear']
Usability," TFilePrefetch(TFile*); TFilePrefetch(const TFilePrefetch&); virtual~TFilePrefetch(); voidTObject::AbstractMethod(const char* method) const; voidAddPendingBlock(TFPBlock*); voidAddReadBlock(TFPBlock*); virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tBinarySearchReadList(TFPBlock*, Long64_t, Int_t, Int_t*); virtual voidTObject::Browse(TBrowser* b); Bool_tCheckBlockInCache(char*&, TFPBlock*); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; TFPBlock*CreateBlockObj(Long64_t*, Int_t*, Int_t); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; char*GetBlockFromCache(const char*, Int_t); TCondition*GetCondNewBlock() const; virtual O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFilePrefetch.html:830,Clear,Clear,830,root/html534/TFilePrefetch.html,https://root.cern,https://root.cern/root/html534/TFilePrefetch.html,1,['Clear'],['Clear']
Usability, TFilePrefetch.h. ◆ fMutexPendingList. std::mutex TFilePrefetch::fMutexPendingList. private . mutex for the pending list ; Definition at line 40 of file TFilePrefetch.h. ◆ fMutexReadList. std::mutex TFilePrefetch::fMutexReadList. private . mutex for the list of read blocks ; Definition at line 41 of file TFilePrefetch.h. ◆ fNewBlockAdded. std::condition_variable TFilePrefetch::fNewBlockAdded. private . signal the addition of a new pending block ; Definition at line 42 of file TFilePrefetch.h. ◆ fPathCache. TString TFilePrefetch::fPathCache. private . path to the cache directory ; Definition at line 45 of file TFilePrefetch.h. ◆ fPendingBlocks. TList* TFilePrefetch::fPendingBlocks. private . list of pending blocks to be read ; Definition at line 37 of file TFilePrefetch.h. ◆ fPrefetchFinished. std::atomic<Bool_t> TFilePrefetch::fPrefetchFinished. private . true if prefetching is over ; Definition at line 48 of file TFilePrefetch.h. ◆ fReadBlockAdded. std::condition_variable TFilePrefetch::fReadBlockAdded. private . signal the addition of a new red block ; Definition at line 43 of file TFilePrefetch.h. ◆ fReadBlocks. TList* TFilePrefetch::fReadBlocks. private . list of blocks read ; Definition at line 38 of file TFilePrefetch.h. ◆ fSemChangeFile. TSemaphore* TFilePrefetch::fSemChangeFile. private . semaphore used when changing a file in TChain ; Definition at line 44 of file TFilePrefetch.h. ◆ fThreadJoined. Bool_t TFilePrefetch::fThreadJoined. private . mark if async thread was joined ; Definition at line 47 of file TFilePrefetch.h. ◆ fWaitTime. TStopwatch TFilePrefetch::fWaitTime. private . time waiting to prefetch a buffer (in usec) ; Definition at line 46 of file TFilePrefetch.h. Libraries for TFilePrefetch:. [legend]; The documentation for this class was generated from the following files:; io/io/inc/TFilePrefetch.h; io/io/src/TFilePrefetch.cxx. TFilePrefetch. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:51 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFilePrefetch.html:21176,Guid,Guide,21176,doc/master/classTFilePrefetch.html,https://root.cern,https://root.cern/doc/master/classTFilePrefetch.html,1,['Guid'],['Guide']
Usability," TFileSet(); TFileSet(const TFileSet&); TFileSet(const TString& dirname, const Char_t* filename = 0, Bool_t expand = kTRUE, Int_t maxDepth = 10); virtual~TFileSet(); voidTObject::AbstractMethod(const char* method) const; virtual voidTDataSet::Add(TDataSet* dataset); virtual voidTDataSet::AddAt(TDataSet* dataset, Int_t idx = 0); virtual voidTDataSet::AddAtAndExpand(TDataSet* dataset, Int_t idx = 0); virtual voidTDataSet::AddFirst(TDataSet* dataset); virtual voidTDataSet::AddLast(TDataSet* dataset); virtual voidTObject::AppendPad(Option_t* option = """"); TDataSet*TDataSet::At(Int_t idx) const; virtual voidTDataSet::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TDataSet::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTDataSet::Delete(Option_t* opt = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFileSet.html:1368,Clear,Clear,1368,root/html528/TFileSet.html,https://root.cern,https://root.cern/root/html528/TFileSet.html,4,['Clear'],['Clear']
Usability," TFileStager(const char* stager); TFileStager(const TFileStager&); virtual~TFileStager(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFileStager.html:987,Clear,Clear,987,root/html530/TFileStager.html,https://root.cern,https://root.cern/root/html530/TFileStager.html,3,['Clear'],['Clear']
Usability," TFileStager(const char* stager); TFileStager(const TFileStager&); virtual~TFileStager(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFileStager.html:985,Clear,Clear,985,root/html528/TFileStager.html,https://root.cern,https://root.cern/root/html528/TFileStager.html,1,['Clear'],['Clear']
Usability," TFitResult(int status = 0); TFitResult(const ROOT::Fit::FitResult& f); TFitResult(const TFitResult&); virtual~TFitResult(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); doubleROOT::Fit::FitResult::Chi2() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; doubleROOT::Fit::FitResult::Correlation(unsigned int i, unsigned int j) const; doubleROOT::Fit::FitResult::CovMatrix(unsigned int i, unsigned int j) const; intROOT::Fit::FitResult::CovMatrixStatus() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; doubleROOT::Fit::FitResult::Edm() const; doubleError(unsigned int i) const; const vector<double>&ROOT::Fit::FitResult::Errors() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFitResult.html:764,Clear,Clear,764,root/html534/TFitResult.html,https://root.cern,https://root.cern/root/html534/TFitResult.html,1,['Clear'],['Clear']
Usability," TFitResult(int status = 0); TFitResult(const ROOT::Fit::FitResult& f); TFitResult(const TFitResult&); virtual~TFitResult(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); doubleROOT::Fit::FitResult::Chi2() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; doubleROOT::Fit::FitResult::Correlation(unsigned int i, unsigned int j) const; doubleROOT::Fit::FitResult::CovMatrix(unsigned int i, unsigned int j) const; intROOT::Fit::FitResult::CovMatrixStatus() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; doubleROOT::Fit::FitResult::Edm() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; const vector<double>&ROOT::Fit::FitResult::Errors() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFitResult.html:764,Clear,Clear,764,root/html528/TFitResult.html,https://root.cern,https://root.cern/root/html528/TFitResult.html,3,['Clear'],['Clear']
Usability," TFoamCell(); TFoamCell(Int_t); TFoamCell(TFoamCell&); virtual~TFoamCell(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); voidCalcVolume(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidFill(Int_t, TFoamCell*, TFoamCell*, TFoamCell*); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFoamCell.html:909,Clear,Clear,909,root/html528/TFoamCell.html,https://root.cern,https://root.cern/root/html528/TFoamCell.html,4,['Clear'],['Clear']
Usability," TFoamMaxwt(); TFoamMaxwt(TFoamMaxwt& From); TFoamMaxwt(Double_t, Int_t); virtual~TFoamMaxwt(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidFill(Double_t); virtual TObject*TObject::FindObject(const char* name) const; virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFoamMaxwt.html:1006,Clear,Clear,1006,root/html528/TFoamMaxwt.html,https://root.cern,https://root.cern/root/html528/TFoamMaxwt.html,4,['Clear'],['Clear']
Usability," TFoamVect(); TFoamVect(Int_t); TFoamVect(const TFoamVect&); virtual~TFoamVect(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetCoord(Int_t i) const; Int_tGetDim() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFoamVect.html:777,Clear,Clear,777,root/html528/TFoamVect.html,https://root.cern,https://root.cern/root/html528/TFoamVect.html,4,['Clear'],['Clear']
Usability," TFormulaPrimitive(); TFormulaPrimitive(const char* name, const char* formula, TFormulaPrimitive::GenFunc0 fpointer); TFormulaPrimitive(const char* name, const char* formula, TFormulaPrimitive::TFunc0 fpointer); TFormulaPrimitive(const char* name, const char* formula, TFormulaPrimitive::GenFuncG fpointer, Int_t npar); ~TFormulaPrimitive(); voidTObject::AbstractMethod(const char* method) const; static Int_tAddFormula(TFormulaPrimitive* formula); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFormulaPrimitive.html:1789,Clear,Clear,1789,root/html528/TFormulaPrimitive.html,https://root.cern,https://root.cern/root/html528/TFormulaPrimitive.html,4,['Clear'],['Clear']
Usability," TFrame(); TFrame(const TFrame& frame); TFrame(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual~TFrame(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidCopy(TObject& frame) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTBox::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual TBox*TBox::DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTWbox::DrawWbox(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Color_t color = 33, Short_t bordersize = 5, Short_t bordermode = -1); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFrame.html:726,Clear,Clear,726,root/html528/TFrame.html,https://root.cern,https://root.cern/root/html528/TFrame.html,4,['Clear'],['Clear']
Usability," TFree(); TFree(const TFree&); TFree(TList* lfree, Long64_t first, Long64_t last); virtual~TFree(); voidTObject::AbstractMethod(const char* method) const; TFree*AddFree(TList* lfree, Long64_t first, Long64_t last); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFree.html:1340,Clear,Clear,1340,root/html528/TFree.html,https://root.cern,https://root.cern/root/html528/TFree.html,4,['Clear'],['Clear']
Usability," TFriendElement(); TFriendElement(TTree* tree, const char* treename, const char* filename); TFriendElement(TTree* tree, const char* treename, TFile* file); TFriendElement(TTree* tree, TTree* friendtree, const char* alias); virtual~TFriendElement(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual TTree*Connect(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual TTree*DisConnect(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFriendElement.html:1193,Clear,Clear,1193,root/html528/TFriendElement.html,https://root.cern,https://root.cern/root/html528/TFriendElement.html,4,['Clear'],['Clear']
Usability," TFumiliMinimizer(int dummy = 0); virtual~TFumiliMinimizer(); static TClass*Class(); virtual voidROOT::Math::Minimizer::Clear(); virtual boolROOT::Math::Minimizer::Contour(unsigned int ivar, unsigned int jvar, unsigned int& npoints, double* xi, double* xj); virtual doubleROOT::Math::Minimizer::Correlation(unsigned int i, unsigned int j) const; virtual doubleCovMatrix(unsigned int i, unsigned int j) const; virtual intCovMatrixStatus() const; virtual doubleEdm() const; doubleROOT::Math::Minimizer::ErrorDef() const; virtual const double*Errors() const; virtual boolROOT::Math::Minimizer::FixVariable(unsigned int ivar); virtual boolROOT::Math::Minimizer::GetCovMatrix(double* covMat) const; virtual boolROOT::Math::Minimizer::GetHessianMatrix(double* hMat) const; virtual boolROOT::Math::Minimizer::GetMinosError(unsigned int ivar, double& errLow, double& errUp, int option = 0); virtual boolROOT::Math::Minimizer::GetVariableSettings(unsigned int ivar, ROOT::Fit::ParameterSettings&) const; virtual doubleROOT::Math::Minimizer::GlobalCC(unsigned int ivar) const; virtual boolROOT::Math::Minimizer::Hesse(); virtual TClass*IsA() const; virtual boolROOT::Math::Minimizer::IsFixedVariable(unsigned int ivar) const; boolROOT::Math::Minimizer::IsValidError() const; unsigned intROOT::Math::Minimizer::MaxFunctionCalls",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFumiliMinimizer.html:805,Clear,Clear,805,root/html534/TFumiliMinimizer.html,https://root.cern,https://root.cern/root/html534/TFumiliMinimizer.html,1,['Clear'],['Clear']
Usability," TFumiliMinimizer(int dummy = 0); virtual~TFumiliMinimizer(); static TClass*Class(); virtual voidROOT::Math::Minimizer::Clear(); virtual boolROOT::Math::Minimizer::Contour(unsigned int, unsigned int, unsigned int&, double*, double*); virtual doubleROOT::Math::Minimizer::Correlation(unsigned int i, unsigned int j) const; virtual doubleCovMatrix(unsigned int i, unsigned int j) const; virtual intCovMatrixStatus() const; virtual doubleEdm() const; doubleROOT::Math::Minimizer::ErrorDef() const; virtual const double*Errors() const; virtual boolROOT::Math::Minimizer::GetCovMatrix(double*) const; virtual boolROOT::Math::Minimizer::GetHessianMatrix(double*) const; virtual boolROOT::Math::Minimizer::GetMinosError(unsigned int, double& errLow, double& errUp, int = 0); virtual doubleROOT::Math::Minimizer::GlobalCC(unsigned int) const; virtual boolROOT::Math::Minimizer::Hesse(); virtual TClass*IsA() const; boolROOT::Math::Minimizer::IsValidError() const; unsigned intROOT::Math::Minimizer::MaxFunctionCalls() const; unsigned intROOT::Math::Minimizer::MaxIterations() const; virtual const double*MinGradient() const; virtual boolMinimize(); virtual doubleMinValue() const; virtual unsigned intNCalls() const; virtual unsigned intNDim() const; virtual unsigned intNFree() const; virtual ROOT::Math::MinimizerOptionsRO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFumiliMinimizer.html:805,Clear,Clear,805,root/html530/TFumiliMinimizer.html,https://root.cern,https://root.cern/root/html530/TFumiliMinimizer.html,2,['Clear'],['Clear']
Usability," TFumiliMinimizer(int dummy = 0); virtual~TFumiliMinimizer(); static TClass*Class(); virtual voidROOT::Math::Minimizer::Clear(); virtual boolROOT::Math::Minimizer::Contour(unsigned int, unsigned int, unsigned int&, double*, double*); virtual doubleROOT::Math::Minimizer::Correlation(unsigned int i, unsigned int j) const; virtual doubleCovMatrix(unsigned int i, unsigned int j) const; virtual intCovMatrixStatus() const; virtual doubleEdm() const; doubleROOT::Math::Minimizer::ErrorDef() const; virtual const double*Errors() const; virtual boolROOT::Math::Minimizer::GetMinosError(unsigned int, double& errLow, double& errUp, int = 0); virtual doubleROOT::Math::Minimizer::GlobalCC(unsigned int) const; virtual boolROOT::Math::Minimizer::Hesse(); virtual TClass*IsA() const; boolROOT::Math::Minimizer::IsValidError() const; unsigned intROOT::Math::Minimizer::MaxFunctionCalls() const; unsigned intROOT::Math::Minimizer::MaxIterations() const; virtual const double*MinGradient() const; virtual boolMinimize(); virtual doubleMinValue() const; virtual unsigned intNCalls() const; virtual unsigned intNDim() const; virtual unsigned intNFree() const; virtual ROOT::Math::MinimizerOptionsROOT::Math::Minimizer::Options() const; doubleROOT::Math::Minimizer::Precision() const; intROOT::Math::Minimizer::PrintLevel() const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFumiliMinimizer.html:805,Clear,Clear,805,root/html528/TFumiliMinimizer.html,https://root.cern,https://root.cern/root/html528/TFumiliMinimizer.html,1,['Clear'],['Clear']
Usability," TFunction(MethodInfo_t* info = 0); TFunction(const TFunction& orig); virtual~TFunction(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static TDictionary*TDict",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFunction.html:904,Clear,Clear,904,root/html532/TFunction.html,https://root.cern,https://root.cern/root/html532/TFunction.html,1,['Clear'],['Clear']
Usability," TFunction(MethodInfo_t* info = 0); TFunction(const TFunction& orig); virtual~TFunction(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFunction.html:904,Clear,Clear,904,root/html528/TFunction.html,https://root.cern,https://root.cern/root/html528/TFunction.html,2,['Clear'],['Clear']
Usability," TFunction(MethodInfo_t* info = 0); TFunction(const TFunction& orig); virtual~TFunction(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidTDictionary::CreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFunction.html:904,Clear,Clear,904,root/html534/TFunction.html,https://root.cern,https://root.cern/root/html534/TFunction.html,1,['Clear'],['Clear']
Usability," TG16ColorSelector(const TGWindow* p = 0); virtual~TG16ColorSelector(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TG16ColorSelector.html:1971,Clear,Clear,1971,root/html528/TG16ColorSelector.html,https://root.cern,https://root.cern/root/html528/TG16ColorSelector.html,4,['Clear'],['Clear']
Usability," TGApplication(const char* appClassName, Int_t* argc, char** argv, void* options = 0, Int_t numOptions = 0); virtual~TGApplication(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual const char*TApplication::ApplicationName() const; static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; Int_tTApplication::Argc() const; char**TApplication::Argv() const; char*TApplication::Argv(Int_t index) const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTApplication::ClearInputFiles(); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; static voidTApplication",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGApplication.html:1257,Clear,Clear,1257,root/html528/TGApplication.html,https://root.cern,https://root.cern/root/html528/TGApplication.html,8,['Clear'],"['Clear', 'ClearInputFiles']"
Usability," TGCanvas(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = kSunkenFrame|kDoubleBorder, Pixel_t back = GetDefaultFrameBackground()); virtual~TGCanvas(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidAddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGCanvas.html:2434,Clear,Clear,2434,root/html528/TGCanvas.html,https://root.cern,https://root.cern/root/html528/TGCanvas.html,4,['Clear'],['Clear']
Usability," TGClient(const char* dpyName = 0); virtual~TGClient(); voidTObject::AbstractMethod(const char* method) const; voidAddIdleHandler(TGIdleHandler* h); voidAddUnknownWindowHandler(TGUnknownWindowHandler* h); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTQObject::Destroyed()SIGNAL ; Bool_tTQObject::Disconnect(const char* signal = 0, void* receiver = 0, const char* slot = 0); static Bool_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGClient.html:1112,Clear,Clear,1112,root/html528/TGClient.html,https://root.cern,https://root.cern/root/html528/TGClient.html,3,['Clear'],['Clear']
Usability," TGClient(const char* dpyName = 0); virtual~TGClient(); voidTObject::AbstractMethod(const char* method) const; voidAddIdleHandler(TGIdleHandler* h); voidAddUnknownWindowHandler(TGUnknownWindowHandler* h); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); voidCancelRedraw(TGWindow* w); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTQObject::Destroyed()SIGNAL ; Bool_tTQObject::Disconnect(const char* signal = 0, void* receiver = 0, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGClient.html:1143,Clear,Clear,1143,root/html534/TGClient.html,https://root.cern,https://root.cern/root/html534/TGClient.html,1,['Clear'],['Clear']
Usability," TGColorFrame(const TGWindow* p = 0, Pixel_t c = 0, Int_t n = 1); virtual~TGColorFrame(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGColorFrame.html:1770,Clear,Clear,1770,root/html528/TGColorFrame.html,https://root.cern,https://root.cern/root/html528/TGColorFrame.html,4,['Clear'],['Clear']
Usability," TGColorPalette(const TGWindow* p = 0, Int_t cols = 8, Int_t rows = 8, Int_t id = -1); virtual~TGColorPalette(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGColorPalette.html:1851,Clear,Clear,1851,root/html528/TGColorPalette.html,https://root.cern,https://root.cern/root/html528/TGColorPalette.html,4,['Clear'],['Clear']
Usability," TGColorPick(const TGWindow* p = 0, Int_t w = 1, Int_t h = 1, Int_t id = -1); virtual~TGColorPick(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual voidColorSe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGColorPick.html:1830,Clear,Clear,1830,root/html528/TGColorPick.html,https://root.cern,https://root.cern/root/html528/TGColorPick.html,4,['Clear'],['Clear']
Usability," TGColorPopup(const TGWindow* p = 0, const TGWindow* m = 0, Pixel_t color = 0); virtual~TGColorPopup(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGColorPopup.html:1988,Clear,Clear,1988,root/html528/TGColorPopup.html,https://root.cern,https://root.cern/root/html528/TGColorPopup.html,4,['Clear'],['Clear']
Usability," TGColorSelect(const TGWindow* p = 0, Pixel_t color = 0, Int_t id = -1); virtual~TGColorSelect(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTGButton::AllowStayDown(Bool_t a); virtual voidAlphaColorSelected(ULong_t colptr = 0)SIGNAL ; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); voidTGTextButton::ChangeText(const char* title)MENU ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGColorSelect.html:1999,Clear,Clear,1999,root/html534/TGColorSelect.html,https://root.cern,https://root.cern/root/html534/TGColorSelect.html,1,['Clear'],['Clear']
Usability," TGColorSelect(const TGWindow* p = 0, Pixel_t color = 0, Int_t id = -1); virtual~TGColorSelect(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTGButton::AllowStayDown(Bool_t a); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); voidTGTextButton::ChangeText(const char* title)MENU ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual voidTGButton::Clicked()SIGNAL ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGColorSelect.html:1940,Clear,Clear,1940,root/html528/TGColorSelect.html,https://root.cern,https://root.cern/root/html528/TGColorSelect.html,3,['Clear'],['Clear']
Usability," TGColumnLayout(const TGColumnLayout&); TGColumnLayout(TGCompositeFrame* main, Int_t s = 0); ~TGColumnLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGColumnLayout.html:1660,Clear,Clear,1660,root/html528/TGColumnLayout.html,https://root.cern,https://root.cern/root/html528/TGColumnLayout.html,4,['Clear'],['Clear']
Usability," TGDMLRefl(); TGDMLRefl(const TGDMLRefl&); TGDMLRefl(const char* name, const char* solid, TGeoMatrix* matrix); virtual~TGDMLRefl(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TGeoMatr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGDMLRefl.html:827,Clear,Clear,827,root/html534/TGDMLRefl.html,https://root.cern,https://root.cern/root/html534/TGDMLRefl.html,1,['Clear'],['Clear']
Usability," TGDMLRefl(); TGDMLRefl(const TGDMLRefl&); TGDMLRefl(const char* name, const char* solid, TGeoMatrix* matrix); virtual~TGDMLRefl(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TGeoMatrix*GetMatrix(); virtual const char*TObject::GetName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGDMLRefl.html:776,Clear,Clear,776,root/html528/TGDMLRefl.html,https://root.cern,https://root.cern/root/html528/TGDMLRefl.html,2,['Clear'],['Clear']
Usability," TGDMLRefl(); TGDMLRefl(const TGDMLRefl&); TGDMLRefl(const char* name, const char* solid, TGeoMatrix* matrix); virtual~TGDMLRefl(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TGeoMatrix*GetMatrix(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGDMLRefl.html:699,Clear,Clear,699,root/html532/TGDMLRefl.html,https://root.cern,https://root.cern/root/html532/TGDMLRefl.html,1,['Clear'],['Clear']
Usability," TGDMLWrite(); TGDMLWrite(const TGDMLWrite&); virtual~TGDMLWrite(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGDMLWrite.html:638,Clear,Clear,638,root/html532/TGDMLWrite.html,https://root.cern,https://root.cern/root/html532/TGDMLWrite.html,1,['Clear'],['Clear']
Usability," TGDNDManager(TGFrame* toplevel, Atom_t* typelist); virtual~TGDNDManager(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tDrag(Int_t x_root, Int_t y_root, Atom_t action, Time_t timestamp); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; Bool_tDrop(); virtual voidTObject::Dump() constMENU ; Bool_tEndDrag(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static Atom_tGetDNDActionAsk(); static Atom_tGetDNDActionCopy(); static Atom_tGetDNDActionDescrip(); static Atom_tGetDNDActionLink(); static Atom_tGetDNDActionLis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGDNDManager.html:704,Clear,Clear,704,root/html528/TGDNDManager.html,https://root.cern,https://root.cern/root/html528/TGDNDManager.html,4,['Clear'],['Clear']
Usability," TGDockButton(const TGCompositeFrame* p = 0, Int_t id = 1); virtual~TGDockButton(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTGButton::AllowStayDown(Bool_t a); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual voidTGButton::Clicked()SIGNAL ; virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGDockButton.html:1577,Clear,Clear,1577,root/html528/TGDockButton.html,https://root.cern,https://root.cern/root/html528/TGDockButton.html,4,['Clear'],['Clear']
Usability," TGDockHideButton(const TGCompositeFrame* p = 0); ~TGDockHideButton(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTGButton::AllowStayDown(Bool_t a); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual voidTGButton::Clicked()SIGNAL ; virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* sign",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGDockHideButton.html:1580,Clear,Clear,1580,root/html528/TGDockHideButton.html,https://root.cern,https://root.cern/root/html528/TGDockHideButton.html,4,['Clear'],['Clear']
Usability," TGDoubleHSlider(const TGWindow* p = 0, UInt_t w = 1, UInt_t type = 1, Int_t id = -1, UInt_t options = kHorizontalFrame, Pixel_t back = GetDefaultFrameBackground(), Bool_t reversed = kFALSE, Bool_t mark_ends = kFALSE); virtual~TGDoubleHSlider(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGDoubleHSlider.html:2538,Clear,Clear,2538,root/html528/TGDoubleHSlider.html,https://root.cern,https://root.cern/root/html528/TGDoubleHSlider.html,4,['Clear'],['Clear']
Usability," TGDoubleVSlider(const TGWindow* p = 0, UInt_t h = 1, UInt_t type = 1, Int_t id = -1, UInt_t options = kVerticalFrame, Pixel_t back = GetDefaultFrameBackground(), Bool_t reversed = kFALSE, Bool_t mark_ends = kFALSE); virtual~TGDoubleVSlider(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGDoubleVSlider.html:2536,Clear,Clear,2536,root/html528/TGDoubleVSlider.html,https://root.cern,https://root.cern/root/html528/TGDoubleVSlider.html,4,['Clear'],['Clear']
Usability," TGDragWindow(const TGWindow* p, Pixmap_t pic, Pixmap_t mask, UInt_t options = kChildFrame, Pixel_t back = GetWhitePixel()); virtual~TGDragWindow(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); Bool_tTGFrame::Contains(Int_t x, Int_t y) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTGFrame::Delete(Option_t* = """"); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGDragWindow.html:1216,Clear,Clear,1216,root/html528/TGDragWindow.html,https://root.cern,https://root.cern/root/html528/TGDragWindow.html,4,['Clear'],['Clear']
Usability," TGEventHandler(const char* name, TGWindow* w, TObject* obj, const char* title = """"); virtual~TGEventHandler(); voidTObject::AbstractMethod(const char* method) const; voidActivate(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTNamed::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTNamed::Copy(TObject& named) const; voidDeActivate(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTQObject::Destroyed()SIGNAL ; Bool_tTQObject::Disconnect(const char* signal = 0, void* receiver = 0, const char* slot = 0); static Bool_tTQObject::Disconnect(TQObject* sender, const char* signal = 0, void* receiver = 0, const char* slot = 0); stati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGEventHandler.html:979,Clear,Clear,979,root/html528/TGEventHandler.html,https://root.cern,https://root.cern/root/html528/TGEventHandler.html,4,['Clear'],['Clear']
Usability," TGFontPool(TGClient* client); virtual~TGFontPool(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; TGFont*FindFont(FontStruct_t font) const; TGFont*FindFontByHandle(FontH_t font) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGFontPool.html:884,Clear,Clear,884,root/html528/TGFontPool.html,https://root.cern,https://root.cern/root/html528/TGFontPool.html,4,['Clear'],['Clear']
Usability," TGFrame(TGClient* c, Window_t id, const TGWindow* parent = 0); TGFrame(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = 0, Pixel_t back = GetDefaultFrameBackground()); virtual~TGFrame(); voidTObject::AbstractMethod(const char* method) const; virtual voidActivate(Bool_t); voidAddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGFrame.html:2280,Clear,Clear,2280,root/html528/TGFrame.html,https://root.cern,https://root.cern/root/html528/TGFrame.html,4,['Clear'],['Clear']
Usability," TGFrameElement(); TGFrameElement(TGFrame* f, TGLayoutHints* l); virtual~TGFrameElement(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGFrameElement.html:763,Clear,Clear,763,root/html530/TGFrameElement.html,https://root.cern,https://root.cern/root/html530/TGFrameElement.html,3,['Clear'],['Clear']
Usability," TGFrameElement(); TGFrameElement(TGFrame* f, TGLayoutHints* l); virtual~TGFrameElement(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGFrameElement.html:761,Clear,Clear,761,root/html528/TGFrameElement.html,https://root.cern,https://root.cern/root/html528/TGFrameElement.html,1,['Clear'],['Clear']
Usability," TGFrameElementPack(TGFrame* frame, TGLayoutHints* lh = 0, Float_t weight = 1); ~TGFrameElementPack(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGFrameElementPack.html:678,Clear,Clear,678,root/html530/TGFrameElementPack.html,https://root.cern,https://root.cern/root/html530/TGFrameElementPack.html,3,['Clear'],['Clear']
Usability," TGFrameElementPack(TGFrame* frame, TGLayoutHints* lh = 0, Float_t weight = 1); ~TGFrameElementPack(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Opti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGFrameElementPack.html:676,Clear,Clear,676,root/html528/TGFrameElementPack.html,https://root.cern,https://root.cern/root/html528/TGFrameElementPack.html,1,['Clear'],['Clear']
Usability," TGGC(GCValues_t* values = 0); TGGC(const TGGC& g); virtual~TGGC(); voidTObject::AbstractMethod(const char* method) const; voidTRefCnt::AddReference(); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetArcMode() const; const GCValues_t*GetAttributes() const; Pixel_tGetBackground() const; Int_tGetCapStyle() const; Pixmap_tGetClipMask() const; Int_tGetClipXOrigin() const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGGC.html:793,Clear,Clear,793,root/html528/TGGC.html,https://root.cern,https://root.cern/root/html528/TGGC.html,4,['Clear'],['Clear']
Usability," TGGCPool(TGClient* client); virtual~TGGCPool(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; TGGC*FindGC(const TGGC* gc); TGGC*FindGC(GContext_t gc); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidFreeGC(const TGGC* gc); voidFreeGC(GContext_t gc); TGClient*TGObject::GetClient() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGGCPool.html:742,Clear,Clear,742,root/html528/TGGCPool.html,https://root.cern,https://root.cern/root/html528/TGGCPool.html,4,['Clear'],['Clear']
Usability," TGHScrollBar(const TGWindow* p = 0, UInt_t w = 4, UInt_t h = 2, UInt_t options = kHorizontalFrame, Pixel_t back = GetDefaultFrameBackground()); virtual~TGHScrollBar(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGScrollBar::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGHScrollBar.html:1814,Clear,Clear,1814,root/html528/TGHScrollBar.html,https://root.cern,https://root.cern/root/html528/TGHScrollBar.html,4,['Clear'],['Clear']
Usability," TGHSlider(const TGWindow* p = 0, UInt_t w = 40, UInt_t type = kSlider1|kScaleBoth, Int_t id = -1, UInt_t options = kHorizontalFrame, Pixel_t back = GetDefaultFrameBackground()); virtual~TGHSlider(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); virtual voidTGSlider::ChangeSl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGHSlider.html:2119,Clear,Clear,2119,root/html528/TGHSlider.html,https://root.cern,https://root.cern/root/html528/TGHSlider.html,4,['Clear'],['Clear']
Usability," TGHSplitter(const TGWindow* p, UInt_t w, UInt_t h, Bool_t external); TGHSplitter(const TGWindow* p = 0, UInt_t w = 4, UInt_t h = 4, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); virtual~TGHSplitter(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGHSplitter.html:1433,Clear,Clear,1433,root/html528/TGHSplitter.html,https://root.cern,https://root.cern/root/html528/TGHSplitter.html,4,['Clear'],['Clear']
Usability," TGHorizontal3DLine(const TGWindow* p = 0, UInt_t w = 4, UInt_t h = 2, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); ~TGHorizontal3DLine(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Conn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGHorizontal3DLine.html:1387,Clear,Clear,1387,root/html528/TGHorizontal3DLine.html,https://root.cern,https://root.cern/root/html528/TGHorizontal3DLine.html,4,['Clear'],['Clear']
Usability," TGHorizontalLayout(TGCompositeFrame* main); TGHorizontalLayout(const TGHorizontalLayout&); ~TGHorizontalLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGHorizontalLayout.html:1680,Clear,Clear,1680,root/html528/TGHorizontalLayout.html,https://root.cern,https://root.cern/root/html528/TGHorizontalLayout.html,4,['Clear'],['Clear']
Usability," TGHotString(const char* s); TGHotString(const TGHotString&); ~TGHotString(); TString&TString::Append(const char* cs); TString&TString::Append(const TString& s); TString&TString::Append(const char* cs, Ssiz_t n); TString&TString::Append(const TString& s, Ssiz_t n); TString&TString::Append(char c, Ssiz_t rep = 1); Double_tTString::Atof() const; Int_tTString::Atoi() const; Long64_tTString::Atoll() const; Bool_tTString::BeginsWith(const char* s, TString::ECaseCompare cmp = kExact) const; Bool_tTString::BeginsWith(const TString& pat, TString::ECaseCompare cmp = kExact) const; Ssiz_tTString::Capacity() const; Ssiz_tTString::Capacity(Ssiz_t n); TString&TString::Chop(); static TClass*Class(); voidTString::Clear(); intTString::CompareTo(const char* cs, TString::ECaseCompare cmp = kExact) const; intTString::CompareTo(const TString& st, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TRegexp& pat) const; Bool_tTString::Contains(TPRegexp& pat) const; Bool_tTString::Contains(const char* s, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TString& pat, TString::ECaseCompare cmp = kExact) const; TStringTString::Copy() const; Int_tTString::CountChar(Int_t c) const; const char*TString::Data() const; virtual voidDraw(Drawable_t id, GContext_t gc, Int_t x, Int_t y); virtual voidDrawWrapped(Drawable_t id, GContext_t gc, Int_t x, Int_t y, UInt_t w, FontStruct_t font); Bool_tTString::EndsWith(const char* pat, TStri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGHotString.html:1243,Clear,Clear,1243,root/html528/TGHotString.html,https://root.cern,https://root.cern/root/html528/TGHotString.html,3,['Clear'],['Clear']
Usability," TGHotString(const char* s); TGHotString(const TGHotString&); ~TGHotString(); TString&TString::Append(const char* cs); TString&TString::Append(const TString& s); TString&TString::Append(const char* cs, Ssiz_t n); TString&TString::Append(const TString& s, Ssiz_t n); TString&TString::Append(char c, Ssiz_t rep = 1); Double_tTString::Atof() const; Int_tTString::Atoi() const; Long64_tTString::Atoll() const; static TStringTString::BaseConvert(const TString& s_in, Int_t base_in, Int_t base_out); Bool_tTString::BeginsWith(const char* s, TString::ECaseCompare cmp = kExact) const; Bool_tTString::BeginsWith(const TString& pat, TString::ECaseCompare cmp = kExact) const; Ssiz_tTString::Capacity() const; Ssiz_tTString::Capacity(Ssiz_t n); TString&TString::Chop(); static TClass*Class(); voidTString::Clear(); intTString::CompareTo(const char* cs, TString::ECaseCompare cmp = kExact) const; intTString::CompareTo(const TString& st, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TRegexp& pat) const; Bool_tTString::Contains(TPRegexp& pat) const; Bool_tTString::Contains(const char* s, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TString& pat, TString::ECaseCompare cmp = kExact) const; TStringTString::Copy() const; Int_tTString::CountChar(Int_t c) const; const char*TString::Data() const; virtual voidDraw(Drawable_t id, GContext_t gc, Int_t x, Int_t y); virtual voidDrawWrapped(Drawable_t id, GContext_t gc, Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGHotString.html:1331,Clear,Clear,1331,root/html534/TGHotString.html,https://root.cern,https://root.cern/root/html534/TGHotString.html,1,['Clear'],['Clear']
Usability," TGIcon(const TGWindow* p = 0, const char* image = 0); TGIcon(const TGWindow* p, const TGPicture* pic, UInt_t w, UInt_t h, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); virtual~TGIcon(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidChangeBackgroundColor(); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); Bool_tTGFrame::Contains(Int_t x, Int_t y) const; virtual voidTObject::Copy(TObject& object) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGIcon.html:1268,Clear,Clear,1268,root/html528/TGIcon.html,https://root.cern,https://root.cern/root/html528/TGIcon.html,4,['Clear'],['Clear']
Usability," TGIconLBEntry(const TGWindow* p = 0, Int_t id = -1, const char* str = 0, const TGPicture* pic = 0, UInt_t w = 0, Style_t s = 0, UInt_t options = kHorizontalFrame, Pixel_t back = GetWhitePixel()); virtual~TGIconLBEntry(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGLBEntry::Activate(Bool_t a); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGIconLBEntry.html:1827,Clear,Clear,1827,root/html530/TGIconLBEntry.html,https://root.cern,https://root.cern/root/html530/TGIconLBEntry.html,3,['Clear'],['Clear']
Usability," TGIconLBEntry(const TGWindow* p = 0, Int_t id = -1, const char* str = 0, const TGPicture* pic = 0, UInt_t w = 0, Style_t s = 0, UInt_t options = kHorizontalFrame, Pixel_t back = GetWhitePixel()); virtual~TGIconLBEntry(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGLBEntry::Activate(Bool_t a); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGIconLBEntry.html:1825,Clear,Clear,1825,root/html528/TGIconLBEntry.html,https://root.cern,https://root.cern/root/html528/TGIconLBEntry.html,1,['Clear'],['Clear']
Usability," TGIdleHandler(TGWindow* w); TGIdleHandler(const TGIdleHandler&); virtual~TGIdleHandler(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGIdleHandler.html:771,Clear,Clear,771,root/html528/TGIdleHandler.html,https://root.cern,https://root.cern/root/html528/TGIdleHandler.html,4,['Clear'],['Clear']
Usability," TGImageMap(const TGWindow* p = 0, const TGPicture* pic = 0); TGImageMap(const TGWindow* p, const TString& pic); virtual~TGImageMap(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); voidAddRegion(const TGRegion& region, Int_t id); virtual voidTGButton::AllowStayDown(Bool_t a); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual voidTGButton::Clicked()SIGNAL ; virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGImageMap.html:1460,Clear,Clear,1460,root/html528/TGImageMap.html,https://root.cern,https://root.cern/root/html528/TGImageMap.html,4,['Clear'],['Clear']
Usability," TGItemContext(); TGItemContext(const TGItemContext&); virtual~TGItemContext(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); voidAssociate(TTVLVEntry* item); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidDelete(Option_t*)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """")MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidEditExpression()MENU ; voidEmpty()MENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGItemContext.html:778,Clear,Clear,778,root/html530/TGItemContext.html,https://root.cern,https://root.cern/root/html530/TGItemContext.html,3,['Clear'],['Clear']
Usability," TGL5DDataSet(TTree* inputData); ~TGL5DDataSet(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGL5DDataSet.html:624,Clear,Clear,624,root/html528/TGL5DDataSet.html,https://root.cern,https://root.cern/root/html528/TGL5DDataSet.html,4,['Clear'],['Clear']
Usability," TGLAutoRotator(TGLViewer* v); virtual~TGLAutoRotator(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetADolly() const; Double_tGetATheta() const; TGLCamera*GetCamera() const; Double_tGetDeltaPhi() const; virtual Option_t*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLAutoRotator.html:839,Clear,Clear,839,root/html534/TGLAutoRotator.html,https://root.cern,https://root.cern/root/html534/TGLAutoRotator.html,1,['Clear'],['Clear']
Usability," TGLAutoRotator(TGLViewer* v); virtual~TGLAutoRotator(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetADolly() const; Double_tGetATheta() const; TGLCamera*GetCamera() const; virtual Option_t*TObject::GetDrawOption() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGLAutoRotator.html:839,Clear,Clear,839,root/html530/TGLAutoRotator.html,https://root.cern,https://root.cern/root/html530/TGLAutoRotator.html,2,['Clear'],['Clear']
Usability," TGLAutoRotator(TGLViewer* v); virtual~TGLAutoRotator(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetADolly() const; Double_tGetATheta() const; TGLCamera*GetCamera() const; virtual Option_t*TObject::GetDrawOption() const; Double_tGetDt() const; static Long_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLAutoRotator.html:803,Clear,Clear,803,root/html528/TGLAutoRotator.html,https://root.cern,https://root.cern/root/html528/TGLAutoRotator.html,1,['Clear'],['Clear']
Usability," TGLBEntry(const TGWindow* p = 0, Int_t id = -1, UInt_t options = kHorizontalFrame, Pixel_t back = GetWhitePixel()); ~TGLBEntry(); voidTObject::AbstractMethod(const char* method) const; virtual voidActivate(Bool_t a); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* recei",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLBEntry.html:1731,Clear,Clear,1731,root/html528/TGLBEntry.html,https://root.cern,https://root.cern/root/html528/TGLBEntry.html,4,['Clear'],['Clear']
Usability," TGLClipSetSubEditor(const TGWindow* p); virtual~TGLClipSetSubEditor(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); voidChanged()SIGNAL ; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); voidClipTypeChanged(Int_t); voidClipValueChanged(); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLClipSetSubEditor.html:1346,Clear,Clear,1346,root/html528/TGLClipSetSubEditor.html,https://root.cern,https://root.cern/root/html528/TGLClipSetSubEditor.html,4,['Clear'],['Clear']
Usability," TGLEventHandler(TGWindow* w, TObject* obj); virtual~TGLEventHandler(); voidTObject::AbstractMethod(const char* method) const; voidTGEventHandler::Activate(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidClearMouseOver(); virtual TObject*TNamed::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTNamed::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLEventHandler.html:1493,Clear,Clear,1493,root/html528/TGLEventHandler.html,https://root.cern,https://root.cern/root/html528/TGLEventHandler.html,4,['Clear'],['Clear']
Usability," TGLLightSet(); virtual~TGLLightSet(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Float_tGetFrontPower() const; virtual const char*TObject::GetIconName() const; UInt_tGetLightState(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLLightSet.html:666,Clear,Clear,666,root/html528/TGLLightSet.html,https://root.cern,https://root.cern/root/html528/TGLLightSet.html,4,['Clear'],['Clear']
Usability," TGLLightSetSubEditor(const TGWindow* p); virtual~TGLLightSetSubEditor(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); voidChanged()SIGNAL ; virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLLightSetSubEditor.html:1370,Clear,Clear,1370,root/html528/TGLLightSetSubEditor.html,https://root.cern,https://root.cern/root/html528/TGLLightSetSubEditor.html,4,['Clear'],['Clear']
Usability," TGLOrthoCamera(); TGLOrthoCamera(TGLOrthoCamera::EType type, const TGLVector3& hAxis, const TGLVector3& vAxis); virtual~TGLOrthoCamera(); voidTObject::AbstractMethod(const char* method) const; Bool_tTGLCamera::AdjustAndClampVal(Double_t& val, Double_t min, Double_t max, Int_t screenShift, Int_t screenShiftRange, Bool_t mod1, Bool_t mod2) const; Double_tTGLCamera::AdjustDelta(Double_t screenShift, Double_t deltaFactor, Bool_t mod1, Bool_t mod2) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidApply(const TGLBoundingBox& sceneBox, const TGLRect* pickRect = 0) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidConfigure(Double_t zoom, Double_t dolly, Double_t* center, Double_t hRotate, Double_t vRotate); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual Bool_tDolly(Int_t delta, Bool_t mod1, Bool_t mod2); virtual voidTObject::Draw(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLOrthoCamera.html:1493,Clear,Clear,1493,root/html534/TGLOrthoCamera.html,https://root.cern,https://root.cern/root/html534/TGLOrthoCamera.html,1,['Clear'],['Clear']
Usability," TGLPShapeObj(); TGLPShapeObj(TGLPhysicalShape* sh, TGLViewer* v); virtual~TGLPShapeObj(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLPShapeObj.html:751,Clear,Clear,751,root/html528/TGLPShapeObj.html,https://root.cern,https://root.cern/root/html528/TGLPShapeObj.html,4,['Clear'],['Clear']
Usability," TGLParametricEquation(const TString& name, ParametricEquation_t equation, Double_t uMin, Double_t uMax, Double_t vMin, Double_t vMax); TGLParametricEquation(const TString& name, const TString& xEquation, const TString& yEquation, const TString& zEquation, Double_t uMin, Double_t uMax, Double_t vMin, Double_t vMax); ~TGLParametricEquation(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLParametricEquation.html:1692,Clear,Clear,1692,root/html528/TGLParametricEquation.html,https://root.cern,https://root.cern/root/html528/TGLParametricEquation.html,4,['Clear'],['Clear']
Usability," TGLPerspectiveCamera(); TGLPerspectiveCamera(const TGLVector3& hAxis, const TGLVector3& vAxis); virtual~TGLPerspectiveCamera(); voidTObject::AbstractMethod(const char* method) const; Bool_tTGLCamera::AdjustAndClampVal(Double_t& val, Double_t min, Double_t max, Int_t screenShift, Int_t screenShiftRange, Bool_t mod1, Bool_t mod2) const; Double_tTGLCamera::AdjustDelta(Double_t screenShift, Double_t deltaFactor, Bool_t mod1, Bool_t mod2) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidApply(const TGLBoundingBox& box, const TGLRect* pickRect = 0) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidConfigure(Double_t fov, Double_t dolly, Double_t* center, Double_t hRotate, Double_t vRotate); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual Bool_tTGLCamera::Dolly(Int_t delta, Bool_t mod1, Bool_t mod2); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; voidTGLCamera::DrawDebugAids() const; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLPerspectiveCamera.html:1164,Clear,Clear,1164,root/html534/TGLPerspectiveCamera.html,https://root.cern,https://root.cern/root/html534/TGLPerspectiveCamera.html,1,['Clear'],['Clear']
Usability," TGLTH3Slice(const TString& sliceName, const TH3* hist, const TGLPlotCoordinates* coord, const TGLPlotBox* box, TGLTH3Slice::ESliceAxis axis); TGLTH3Slice(const TString& sliceName, const TH3* hist, const TF3* fun, const TGLPlotCoordinates* coord, const TGLPlotBox* box, TGLTH3Slice::ESliceAxis axis); ~TGLTH3Slice(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; voidDrawSlice(Double_t pos) const; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLTH3Slice.html:906,Clear,Clear,906,root/html528/TGLTH3Slice.html,https://root.cern,https://root.cern/root/html528/TGLTH3Slice.html,4,['Clear'],['Clear']
Usability," TGLabel*fRaterate of process in events/sec; TCanvas*fStatsCanvasnode statistics canvas; TSessionQueryFrame::EQueryStatusfStatusstatus of actual query; TGTab*fTabmain tab frame; TGLabel*fTotaltotal progress info; TSessionViewer*fViewerpointer on main viewer; TGHProgressBar*frmProgcurrent process progress bar; static TSessionQueryFrame::EQueryStatuskAborted; static TSessionQueryFrame::EQueryStatuskDone; static TSessionQueryFrame::EQueryStatuskRunning; static TSessionQueryFrame::EQueryStatuskStopped. Class Charts. Inheritance Chart:. TObject. ←; TGObject. ←; TGWindow. TQObject. ←; TGFrame. ←; TGCompositeFrame. ←; TSessionQueryFrame. Function documentation; TSessionQueryFrame(TGWindow* parent, Int_t w, Int_t h); Constructor. ~TSessionQueryFrame(); Destructor. void Build(TSessionViewer* gui); Build query information frame. void Modified(Bool_t mod = kTRUE); Notify changes in query editor settings. void Feedback(TList* objs); Feedback function connected to Feedback signal.; Used to update feedback histograms. void UpdateHistos(TList* objs); Update feedback histograms. void Progress(Long64_t total, Long64_t processed); Update progress bar and status labels. void Progress(Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti, Int_t actw, Int_t tses, Float_t eses); New version of Progress (just forward to the old version; for the time being). void ProgressLocal(Long64_t total, Long64_t processed); Update progress bar and status labels. void IndicateStop(Bool_t aborted); Indicate that Cancel or Stop was clicked. void ResetProgressDialog(const char* selec, Int_t files, Long64_t first, Long64_t entries); Reset progress frame information fields. void OnBtnFinalize(); Finalize query. void OnBtnStop(); Stop processing query. void OnBtnShowLog(); Show query log. void OnBtnRetrieve(); Retrieve query. void OnBtnAbort(); Abort processing query. void OnBtnSubmit(); Submit query. void UpdateButtons(TQueryDescription* de",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSessionQueryFrame.html:22470,feedback,feedback,22470,root/html602/TSessionQueryFrame.html,https://root.cern,https://root.cern/root/html602/TSessionQueryFrame.html,2,['feedback'],['feedback']
Usability," TGLayoutHints(const TGLayoutHints& lh); TGLayoutHints(ULong_t hints = kLHintsNormal, Int_t padleft = 0, Int_t padright = 0, Int_t padtop = 0, Int_t padbottom = 0); virtual~TGLayoutHints(); voidTObject::AbstractMethod(const char* method) const; voidTRefCnt::AddReference(); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLayoutHints.html:1776,Clear,Clear,1776,root/html528/TGLayoutHints.html,https://root.cern,https://root.cern/root/html528/TGLayoutHints.html,4,['Clear'],['Clear']
Usability," TGLineLBEntry(const TGWindow* p = 0, Int_t id = -1, const char* str = 0, UInt_t w = 0, Style_t s = 0, UInt_t options = kHorizontalFrame, Pixel_t back = GetWhitePixel()); virtual~TGLineLBEntry(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGLBEntry::Activate(Bool_t a); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLineLBEntry.html:1825,Clear,Clear,1825,root/html528/TGLineLBEntry.html,https://root.cern,https://root.cern/root/html528/TGLineLBEntry.html,4,['Clear'],['Clear']
Usability," TGListDetailsLayout(TGCompositeFrame* main, Int_t sep = 0, UInt_t w = 0); ~TGListDetailsLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Dra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGListDetailsLayout.html:1663,Clear,Clear,1663,root/html528/TGListDetailsLayout.html,https://root.cern,https://root.cern/root/html528/TGListDetailsLayout.html,4,['Clear'],['Clear']
Usability," TGListLayout(TGCompositeFrame* main, Int_t sep = 0); ~TGListLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::Dr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGListLayout.html:1614,Clear,Clear,1614,root/html528/TGListLayout.html,https://root.cern,https://root.cern/root/html528/TGListLayout.html,4,['Clear'],['Clear']
Usability," TGListView(const TGWindow* p, UInt_t w, UInt_t h, UInt_t options = kSunkenFrame|kDoubleBorder, Pixel_t back = GetDefaultFrameBackground()); virtual~TGListView(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCanvas::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidAdjustHeaders(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual voidTGCanvas::ClearViewPort(); virtual voidClicked(TGLVEntry* entry, Int_t btn)SIGNAL ; virtual voidClicked(TGLVEntry* entry, Int_t btn, Int_t x, Int_t y)SIGNAL ; virtual TObject*TObject::Clone(const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGListView.html:1769,Clear,Clear,1769,root/html528/TGListView.html,https://root.cern,https://root.cern/root/html528/TGListView.html,8,['Clear'],"['Clear', 'ClearViewPort']"
Usability, TGListView.h. ◆ fCurrent. const TGPicture* TGLVEntry::fCurrent. protected . current icon ; Definition at line 55 of file TGListView.h. ◆ fFontStruct. FontStruct_t TGLVEntry::fFontStruct. protected . text font ; Definition at line 59 of file TGListView.h. ◆ fgDefaultFont. const TGFont * TGLVEntry::fgDefaultFont = nullptr. staticprotected . Definition at line 62 of file TGListView.h. ◆ fgDefaultGC. TGGC * TGLVEntry::fgDefaultGC = nullptr. staticprotected . Definition at line 63 of file TGListView.h. ◆ fItemName. TGString* TGLVEntry::fItemName. protected . name of item ; Definition at line 43 of file TGListView.h. ◆ fJmode. Int_t* TGLVEntry::fJmode. protected . alignment for sub names ; Definition at line 46 of file TGListView.h. ◆ fNormGC. GContext_t TGLVEntry::fNormGC. protected . drawing graphics context ; Definition at line 58 of file TGListView.h. ◆ fSelPic. TGSelectedPicture* TGLVEntry::fSelPic. protected . selected icon ; Definition at line 57 of file TGListView.h. ◆ fSmallPic. const TGPicture* TGLVEntry::fSmallPic. protected . small icon ; Definition at line 54 of file TGListView.h. ◆ fSubnames. TGString** TGLVEntry::fSubnames. protected . sub names of item (details) ; Definition at line 44 of file TGListView.h. ◆ fTHeight. UInt_t TGLVEntry::fTHeight. protected . height of name ; Definition at line 49 of file TGListView.h. ◆ fTWidth. UInt_t TGLVEntry::fTWidth. protected . width of name ; Definition at line 48 of file TGListView.h. ◆ fUserData. void* TGLVEntry::fUserData. protected . pointer to user data structure ; Definition at line 60 of file TGListView.h. ◆ fViewMode. EListViewMode TGLVEntry::fViewMode. protected . list view viewing mode ; Definition at line 52 of file TGListView.h. Libraries for TGLVEntry:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGListView.h; gui/gui/src/TGListView.cxx. TGLVEntry. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:26 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLVEntry.html:39040,Guid,Guide,39040,doc/master/classTGLVEntry.html,https://root.cern,https://root.cern/doc/master/classTGLVEntry.html,1,['Guid'],['Guide']
Usability," TGMatrixLayout(TGCompositeFrame* main, UInt_t r, UInt_t c, Int_t s = 0, Int_t h = 0); ~TGMatrixLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGMatrixLayout.html:1658,Clear,Clear,1658,root/html528/TGMatrixLayout.html,https://root.cern,https://root.cern/root/html528/TGMatrixLayout.html,4,['Clear'],['Clear']
Usability," TGMdiButtons(const TGWindow* p, const TGWindow* titlebar); virtual~TGMdiButtons(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* send",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGMdiButtons.html:1506,Clear,Clear,1506,root/html528/TGMdiButtons.html,https://root.cern,https://root.cern/root/html528/TGMdiButtons.html,4,['Clear'],['Clear']
Usability," TGMdiContainer(const TGMdiMainFrame* p, Int_t w, Int_t h, UInt_t options = 0, ULong_t back = GetDefaultFrameBackground()); ~TGMdiContainer(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); Bool_tTGFrame::Contains(Int_t x, Int_t y) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTGFrame::Delete(Option_t* = """"); virtual voidTGFram",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGMdiContainer.html:1205,Clear,Clear,1205,root/html528/TGMdiContainer.html,https://root.cern,https://root.cern/root/html528/TGMdiContainer.html,4,['Clear'],['Clear']
Usability," TGMdiCornerWinResizer(const TGWindow* p, const TGWindow* mdiwin, Int_t pos, const TGGC* boxGC, Int_t linew, Int_t mdioptions = kMdiDefaultResizeMode, Int_t w = 20, Int_t h = 20); ~TGMdiCornerWinResizer(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGMdiCornerWinResizer.html:1511,Clear,Clear,1511,root/html528/TGMdiCornerWinResizer.html,https://root.cern,https://root.cern/root/html528/TGMdiCornerWinResizer.html,4,['Clear'],['Clear']
Usability," TGMdiHorizontalWinResizer(const TGWindow* p, const TGWindow* mdiwin, Int_t pos, const TGGC* boxGC, Int_t linew, Int_t mdioptions = kMdiDefaultResizeMode, Int_t w = 5, Int_t h = 4); ~TGMdiHorizontalWinResizer(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGMdiHorizontalWinResizer.html:1529,Clear,Clear,1529,root/html528/TGMdiHorizontalWinResizer.html,https://root.cern,https://root.cern/root/html528/TGMdiHorizontalWinResizer.html,4,['Clear'],['Clear']
Usability," TGMdiTitleIcon(const TGWindow* p, const TGWindow* titlebar, const TGPicture* pic, Int_t w, Int_t h); virtual~TGMdiTitleIcon(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTGIcon::ChangeBackgroundColor(); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGMdiTitleIcon.html:1396,Clear,Clear,1396,root/html528/TGMdiTitleIcon.html,https://root.cern,https://root.cern/root/html528/TGMdiTitleIcon.html,4,['Clear'],['Clear']
Usability," TGMdiVerticalWinResizer(const TGWindow* p, const TGWindow* mdiwin, Int_t pos, const TGGC* boxGC, Int_t linew, Int_t mdioptions = kMdiDefaultResizeMode, Int_t w = 4, Int_t h = 5); ~TGMdiVerticalWinResizer(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGMdiVerticalWinResizer.html:1519,Clear,Clear,1519,root/html528/TGMdiVerticalWinResizer.html,https://root.cern,https://root.cern/root/html528/TGMdiVerticalWinResizer.html,4,['Clear'],['Clear']
Usability," TGMdiWinResizer(const TGWindow* p, const TGWindow* mdiwin, Int_t pos, const TGGC* boxGC, Int_t linew, Int_t mdioptions = kMdiDefaultResizeMode, Int_t w = 1, Int_t h = 1, UInt_t options = kOwnBackground); ~TGMdiWinResizer(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGMdiWinResizer.html:1521,Clear,Clear,1521,root/html528/TGMdiWinResizer.html,https://root.cern,https://root.cern/root/html528/TGMdiWinResizer.html,4,['Clear'],['Clear']
Usability," TGMenuEntry(); virtual~TGMenuEntry(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); UInt_tGetEh() const; Int_tGetEntryId() const; UInt_tGetEw() const; Int_tGetEx() const; Int_tGetEy() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGMenuEntry.html:778,Clear,Clear,778,root/html530/TGMenuEntry.html,https://root.cern,https://root.cern/root/html530/TGMenuEntry.html,3,['Clear'],['Clear']
Usability," TGMenuEntry(); virtual~TGMenuEntry(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); UInt_tGetEh() const; Int_tGetEntryId() const; UInt_tGetEw() const; Int_tGetEx() const; Int_tGetEy() const; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGMenuEntry.html:776,Clear,Clear,776,root/html528/TGMenuEntry.html,https://root.cern,https://root.cern/root/html528/TGMenuEntry.html,1,['Clear'],['Clear']
Usability," TGMimeTypes(TGClient* client, const char* file); virtual~TGMimeTypes(); voidTObject::AbstractMethod(const char* method) const; voidAddType(const char* type, const char* pat, const char* icon, const char* sicon, const char* action); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Bool_tGetAction(const char* filename, char* action); virtual O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGMimeTypes.html:908,Clear,Clear,908,root/html528/TGMimeTypes.html,https://root.cern,https://root.cern/root/html528/TGMimeTypes.html,4,['Clear'],['Clear']
Usability," TGObject(); TGObject(const TGObject& tgo); virtual~TGObject(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TGClient*GetClient() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGObject.html:818,Clear,Clear,818,root/html528/TGObject.html,https://root.cern,https://root.cern/root/html528/TGObject.html,4,['Clear'],['Clear']
Usability," TGPicture(const TGPicture&); virtual~TGPicture(); voidTObject::AbstractMethod(const char* method) const; voidTRefCnt::AddReference(); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Handle_t id, GContext_t gc, Int_t x, Int_t y) const; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGPicture.html:911,Clear,Clear,911,root/html528/TGPicture.html,https://root.cern,https://root.cern/root/html528/TGPicture.html,4,['Clear'],['Clear']
Usability," TGPicturePool(const TGClient* client, const char* path); virtual~TGPicturePool(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidFreePicture(const TGPicture* pic); virtual Option_t*TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGPicturePool.html:910,Clear,Clear,910,root/html528/TGPicturePool.html,https://root.cern,https://root.cern/root/html528/TGPicturePool.html,4,['Clear'],['Clear']
Usability," TGProgressBar.h. ◆ GetPosition(). Float_t TGProgressBar::GetPosition ; (; ); const. inline . Definition at line 62 of file TGProgressBar.h. ◆ GetShowPos(). Bool_t TGProgressBar::GetShowPos ; (; ); const. inline . Definition at line 65 of file TGProgressBar.h. ◆ GetValueFormat(). const char * TGProgressBar::GetValueFormat ; (; ); const. inline . Definition at line 67 of file TGProgressBar.h. ◆ Increment(). void TGProgressBar::Increment ; (; Float_t ; inc). Increment progress position. ; Definition at line 110 of file TGProgressBar.cxx. ◆ IsA(). TClass * TGProgressBar::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TGFrame.; Reimplemented in TGVProgressBar.; Definition at line 90 of file TGProgressBar.h. ◆ Percent(). virtual void TGProgressBar::Percent ; (; Bool_t ; on). inlinevirtual . Reimplemented in TGVProgressBar.; Definition at line 78 of file TGProgressBar.h. ◆ Reset(). void TGProgressBar::Reset ; (; ). virtual . Reset progress bar (i.e. set pos to 0). ; Definition at line 126 of file TGProgressBar.cxx. ◆ SavePrimitive(). void TGProgressBar::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save progress bar parameters as a C++ statement(s) on output stream out. ; Reimplemented from TGFrame.; Reimplemented in TGVProgressBar.; Definition at line 396 of file TGProgressBar.cxx. ◆ SetBarColor() [1/2]. void TGProgressBar::SetBarColor ; (; const char * ; color = ""blue""). Set progress bar color. ; Definition at line 166 of file TGProgressBar.cxx. ◆ SetBarColor() [2/2]. void TGProgressBar::SetBarColor ; (; Pixel_t ; color). virtual . Set progress bar color. ; Definition at line 156 of file TGProgressBar.cxx. ◆ SetBarType(). void TGProgressBar::SetBarType ; (; EBarType ; type). Set bar type. ; Definition at line 146 of file TGProgressBar.cxx. ◆ SetFillType(). void TGProgressBar::SetFillType ; (; EFillType ; type). Set fill type. ; Definition at line 136 of file TGProgressBa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGProgressBar.html:34546,progress bar,progress bar,34546,doc/master/classTGProgressBar.html,https://root.cern,https://root.cern/doc/master/classTGProgressBar.html,1,['progress bar'],['progress bar']
Usability," TGRectMap(Int_t rx, Int_t ry, UInt_t rw, UInt_t rh); virtual~TGRectMap(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tContains(Int_t px, Int_t py) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGRectMap.html:616,Clear,Clear,616,root/html530/TGRectMap.html,https://root.cern,https://root.cern/root/html530/TGRectMap.html,3,['Clear'],['Clear']
Usability," TGRectMap(Int_t rx, Int_t ry, UInt_t rw, UInt_t rh); virtual~TGRectMap(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tContains(Int_t px, Int_t py) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGRectMap.html:614,Clear,Clear,614,root/html528/TGRectMap.html,https://root.cern,https://root.cern/root/html528/TGRectMap.html,1,['Clear'],['Clear']
Usability," TGRegion(); TGRegion(const TGRegion& reg); TGRegion(Int_t n, TPoint* points, Bool_t winding = kFALSE); TGRegion(const TArrayS& x, const TArrayS& y, Bool_t winding = kFALSE); TGRegion(Int_t n, Int_t* x, Int_t* y, Bool_t winding = kFALSE); TGRegion(Int_t x, Int_t y, UInt_t w, UInt_t h, TGRegion::ERegionType = kRectangle); virtual~TGRegion(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tContains(const TPoint& p) const; Bool_tContains(Int_t x, Int_t y) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; TGRegionEor(const TGRegion& r) const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGRegion.html:1085,Clear,Clear,1085,root/html528/TGRegion.html,https://root.cern,https://root.cern/root/html528/TGRegion.html,4,['Clear'],['Clear']
Usability, TGRegion::operator-= ; (; const TGRegion & ; r). inline . Definition at line 65 of file TGImageMap.h. ◆ operator=(). TGRegion & TGRegion::operator= ; (; const TGRegion & ; r). Region assignment operator. ; Definition at line 193 of file TGImageMap.cxx. ◆ operator==(). Bool_t TGRegion::operator== ; (; const TGRegion & ; r); const. Region == operator. ; Definition at line 314 of file TGImageMap.cxx. ◆ operator^(). TGRegion TGRegion::operator^ ; (; const TGRegion & ; r); const. inline . Definition at line 61 of file TGImageMap.h. ◆ operator^=(). TGRegion & TGRegion::operator^= ; (; const TGRegion & ; r). inline . Definition at line 66 of file TGImageMap.h. ◆ operator|(). TGRegion TGRegion::operator| ; (; const TGRegion & ; r); const. inline . Definition at line 57 of file TGImageMap.h. ◆ operator|=(). TGRegion & TGRegion::operator|= ; (; const TGRegion & ; r). inline . Definition at line 62 of file TGImageMap.h. ◆ Streamer(). void TGRegion::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in TGRegionWithId. ◆ StreamerNVirtual(). void TGRegion::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 71 of file TGImageMap.h. ◆ Subtract(). TGRegion TGRegion::Subtract ; (; const TGRegion & ; r); const. Returns a region which is r subtracted from this region. ; Definition at line 273 of file TGImageMap.cxx. ◆ Unite(). TGRegion TGRegion::Unite ; (; const TGRegion & ; r); const. Return the union of this region with r. ; Definition at line 253 of file TGImageMap.cxx. Member Data Documentation. ◆ fData. TGRegionData* TGRegion::fData. protected . Definition at line 30 of file TGImageMap.h. Libraries for TGRegion:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGImageMap.h; gui/gui/src/TGImageMap.cxx. TGRegion. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:33 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGRegion.html:19118,Guid,Guide,19118,doc/master/classTGRegion.html,https://root.cern,https://root.cern/doc/master/classTGRegion.html,1,['Guid'],['Guide']
Usability," TGRegionWithId(); TGRegionWithId(const TGRegionWithId& reg); TGRegionWithId(const TGRegion& reg, Int_t id); TGRegionWithId(Int_t id, Int_t n, TPoint* points, Bool_t winding = kFALSE); TGRegionWithId(Int_t id, Int_t x, Int_t y, UInt_t w, UInt_t h, TGRegion::ERegionType = kRectangle); virtual~TGRegionWithId(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTGRegion::Contains(const TPoint& p) const; Bool_tTGRegion::Contains(Int_t x, Int_t y) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; voidDisplayPopup(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; TGRegionTGRegion::Eor(const TGRegion& r) const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGRegionWithId.html:1072,Clear,Clear,1072,root/html528/TGRegionWithId.html,https://root.cern,https://root.cern/root/html528/TGRegionWithId.html,4,['Clear'],['Clear']
Usability," TGResourcePool(TGClient* client); TGResourcePool(const TGResourcePool&); virtual~TGResourcePool(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Pixel_tGetBlackColor() const; const TGGC*GetBlackGC() const; Pixmap_tGetCheckeredBitmap() const; Pixmap_tGetCheckeredPixmap() const; TGClient*TGObject::GetClient() const; Atom_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGResourcePool.html:793,Clear,Clear,793,root/html528/TGResourcePool.html,https://root.cern,https://root.cern/root/html528/TGResourcePool.html,4,['Clear'],['Clear']
Usability," TGRowLayout(const TGRowLayout&); TGRowLayout(TGCompositeFrame* main, Int_t s = 0); ~TGRowLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGRowLayout.html:1644,Clear,Clear,1644,root/html528/TGRowLayout.html,https://root.cern,https://root.cern/root/html528/TGRowLayout.html,4,['Clear'],['Clear']
Usability," TGSFile(const char* url, Option_t* opt = """"); virtual~TGSFile(); voidTObject::AbstractMethod(const char* method) const; virtual voidTDirectoryFile::Add(TObject* obj, Bool_t replace = kFALSE); static voidTDirectory::AddDirectory(Bool_t add = kTRUE); static Bool_tTDirectory::AddDirectoryStatus(); virtual voidTDirectoryFile::Append(TObject* obj, Bool_t replace = kFALSE); virtual Int_tTDirectoryFile::AppendKey(TKey* key); virtual voidTObject::AppendPad(Option_t* option = """"); static TFileOpenHandle*TFile::AsyncOpen(const char* name, Option_t* option = """", const char* ftitle = """", Int_t compress = 1, Int_t netopt = 0); virtual voidTDirectoryFile::Browse(TBrowser* b); virtual voidTDirectoryFile::Build(TFile* motherFile = 0, TDirectory* motherDir = 0); virtual Bool_tTDirectoryFile::cd(const char* path = 0); static Bool_tTDirectory::Cd(const char* path); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTDirectory::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual TObject*TDirectoryFile::CloneObject(const TObject* obj, Bool_t autoadd = kTRUE); virtual voidTFile::Close(Option_t* option = """")MENU ; virtual Int_tTNamed:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGSFile.html:1745,Clear,Clear,1745,root/html532/TGSFile.html,https://root.cern,https://root.cern/root/html532/TGSFile.html,1,['Clear'],['Clear']
Usability," TGScrollBarElement(const TGWindow* p = 0, const TGPicture* pic = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = kRaisedFrame|kDoubleBorder, Pixel_t back = GetDefaultFrameBackground()); virtual~TGScrollBarElement(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGScrollBarElement.html:1820,Clear,Clear,1820,root/html528/TGScrollBarElement.html,https://root.cern,https://root.cern/root/html528/TGScrollBarElement.html,4,['Clear'],['Clear']
Usability," TGSelectedPicture(const TGClient* client, const TGPicture* p); virtual~TGSelectedPicture(); voidTObject::AbstractMethod(const char* method) const; voidTRefCnt::AddReference(); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTGPicture::Draw(Handle_t id, GContext_t gc, Int_t x, Int_t y) const; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGSelectedPicture.html:963,Clear,Clear,963,root/html528/TGSelectedPicture.html,https://root.cern,https://root.cern/root/html528/TGSelectedPicture.html,4,['Clear'],['Clear']
Usability," TGShapedFrame(const char* fname = 0, const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = 0); virtual~TGShapedFrame(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); Bool_tTGFrame::Contains(Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGShapedFrame.html:1337,Clear,Clear,1337,root/html528/TGShapedFrame.html,https://root.cern,https://root.cern/root/html528/TGShapedFrame.html,4,['Clear'],['Clear']
Usability," TGSlider::SetScale ; (; Int_t ; scale). inlinevirtual . Definition at line 74 of file TGSlider.h. ◆ SetState(). void TGSlider::SetState ; (; Bool_t ; state). virtual . Set state of widget. If kTRUE=enabled, kFALSE=disabled. ; Definition at line 160 of file TGSlider.cxx. ◆ Streamer(). void TGSlider::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGFrame.; Reimplemented in TGVSlider. ◆ StreamerNVirtual(). void TGSlider::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 88 of file TGSlider.h. Member Data Documentation. ◆ fDisabledPic. const TGPicture* TGSlider::fDisabledPic. protected . picture to draw disabled slider ; Definition at line 51 of file TGSlider.h. ◆ fDragging. Bool_t TGSlider::fDragging. protected . true if in dragging mode ; Definition at line 49 of file TGSlider.h. ◆ fPos. Int_t TGSlider::fPos. protected . logical position between fVmin and fVmax ; Definition at line 43 of file TGSlider.h. ◆ fRelPos. Int_t TGSlider::fRelPos. protected . slider position in pixel coordinates ; Definition at line 44 of file TGSlider.h. ◆ fScale. Int_t TGSlider::fScale. protected . tick mark scale ; Definition at line 48 of file TGSlider.h. ◆ fSliderPic. const TGPicture* TGSlider::fSliderPic. protected . picture to draw slider ; Definition at line 50 of file TGSlider.h. ◆ fType. Int_t TGSlider::fType. protected . slider type bits ; Definition at line 47 of file TGSlider.h. ◆ fVmax. Int_t TGSlider::fVmax. protected . logical upper limit of slider ; Definition at line 46 of file TGSlider.h. ◆ fVmin. Int_t TGSlider::fVmin. protected . logical lower limit of slider ; Definition at line 45 of file TGSlider.h. Libraries for TGSlider:. [legend]; The documentation for this class was generated from the following files:; gui/gui/inc/TGSlider.h; gui/gui/src/TGSlider.cxx. TGSlider. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:35 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSlider.html:35931,Guid,Guide,35931,doc/master/classTGSlider.html,https://root.cern,https://root.cern/doc/master/classTGSlider.html,1,['Guid'],['Guide']
Usability," TGSpeedo(const TGWindow* p = 0, int id = -1); TGSpeedo(const TGWindow* p, Float_t smin, Float_t smax, const char* lbl1 = """", const char* lbl2 = """", const char* dsp1 = """", const char* dsp2 = """", int id = -1); virtual~TGSpeedo(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); voidBuild(); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGSpeedo.html:1775,Clear,Clear,1775,root/html528/TGSpeedo.html,https://root.cern,https://root.cern/root/html528/TGSpeedo.html,4,['Clear'],['Clear']
Usability," TGSplitFrame(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = 0); virtual~TGSplitFrame(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidAddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidCleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidClose()MENU ; voidCloseAndCollapse()MENU ; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); Bool_tTGFrame::Contains(Int_t x, Int_t y) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGSplitFrame.html:1273,Clear,Clear,1273,root/html528/TGSplitFrame.html,https://root.cern,https://root.cern/root/html528/TGSplitFrame.html,4,['Clear'],['Clear']
Usability," TGString(); TGString(const char* s); TGString(Int_t number); TGString(const TGString* s); TGString(const TGString&); virtual~TGString(); TString&TString::Append(const char* cs); TString&TString::Append(const TString& s); TString&TString::Append(const char* cs, Ssiz_t n); TString&TString::Append(const TString& s, Ssiz_t n); TString&TString::Append(char c, Ssiz_t rep = 1); Double_tTString::Atof() const; Int_tTString::Atoi() const; Long64_tTString::Atoll() const; Bool_tTString::BeginsWith(const char* s, TString::ECaseCompare cmp = kExact) const; Bool_tTString::BeginsWith(const TString& pat, TString::ECaseCompare cmp = kExact) const; Ssiz_tTString::Capacity() const; Ssiz_tTString::Capacity(Ssiz_t n); TString&TString::Chop(); static TClass*Class(); voidTString::Clear(); intTString::CompareTo(const char* cs, TString::ECaseCompare cmp = kExact) const; intTString::CompareTo(const TString& st, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TRegexp& pat) const; Bool_tTString::Contains(TPRegexp& pat) const; Bool_tTString::Contains(const char* s, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TString& pat, TString::ECaseCompare cmp = kExact) const; TStringTString::Copy() const; Int_tTString::CountChar(Int_t c) const; const char*TString::Data() const; virtual voidDraw(Drawable_t id, GContext_t gc, Int_t x, Int_t y); virtual voidDrawWrapped(Drawable_t id, GContext_t gc, Int_t x, Int_t y, UInt_t w, FontStruct_t fon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGString.html:1293,Clear,Clear,1293,root/html528/TGString.html,https://root.cern,https://root.cern/root/html528/TGString.html,3,['Clear'],['Clear']
Usability," TGString(); TGString(const char* s); TGString(Int_t number); TGString(const TGString* s); TGString(const TGString&); virtual~TGString(); TString&TString::Append(const char* cs); TString&TString::Append(const TString& s); TString&TString::Append(const char* cs, Ssiz_t n); TString&TString::Append(const TString& s, Ssiz_t n); TString&TString::Append(char c, Ssiz_t rep = 1); Double_tTString::Atof() const; Int_tTString::Atoi() const; Long64_tTString::Atoll() const; static TStringTString::BaseConvert(const TString& s_in, Int_t base_in, Int_t base_out); Bool_tTString::BeginsWith(const char* s, TString::ECaseCompare cmp = kExact) const; Bool_tTString::BeginsWith(const TString& pat, TString::ECaseCompare cmp = kExact) const; Ssiz_tTString::Capacity() const; Ssiz_tTString::Capacity(Ssiz_t n); TString&TString::Chop(); static TClass*Class(); voidTString::Clear(); intTString::CompareTo(const char* cs, TString::ECaseCompare cmp = kExact) const; intTString::CompareTo(const TString& st, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TRegexp& pat) const; Bool_tTString::Contains(TPRegexp& pat) const; Bool_tTString::Contains(const char* s, TString::ECaseCompare cmp = kExact) const; Bool_tTString::Contains(const TString& pat, TString::ECaseCompare cmp = kExact) const; TStringTString::Copy() const; Int_tTString::CountChar(Int_t c) const; const char*TString::Data() const; virtual voidDraw(Drawable_t id, GContext_t gc, Int_t x, Int_t y); virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGString.html:1381,Clear,Clear,1381,root/html534/TGString.html,https://root.cern,https://root.cern/root/html534/TGString.html,1,['Clear'],['Clear']
Usability," TGTabElement(const TGWindow* p = 0, TGString* text = 0, UInt_t w = 1, UInt_t h = 1, GContext_t norm = TGTab::GetDefaultGC()(), FontStruct_t font = TGTab::GetDefaultFontStruct(), UInt_t options = kRaisedFrame, Pixel_t back = GetDefaultFrameBackground()); virtual~TGTabElement(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGTabElement.html:1669,Clear,Clear,1669,root/html528/TGTabElement.html,https://root.cern,https://root.cern/root/html528/TGTabElement.html,4,['Clear'],['Clear']
Usability," TGTabLayout(TGTab* main); ~TGTabLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGTabLayout.html:1017,Clear,Clear,1017,root/html528/TGTabLayout.html,https://root.cern,https://root.cern/root/html528/TGTabLayout.html,4,['Clear'],['Clear']
Usability," TGTextLBEntry(const TGWindow* p = 0, TGString* s = 0, Int_t id = -1, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t options = kHorizontalFrame, Pixel_t back = GetWhitePixel()); virtual~TGTextLBEntry(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGLBEntry::Activate(Bool_t a); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGTextLBEntry.html:1868,Clear,Clear,1868,root/html528/TGTextLBEntry.html,https://root.cern,https://root.cern/root/html528/TGTextLBEntry.html,4,['Clear'],['Clear']
Usability," TGTextLayout(); virtual~TGTextLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); Int_tCharBbox(Int_t index, Int_t* x, Int_t* y, Int_t* w, Int_t* h) const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Int_tDistanceToText(Int_t x, Int_t y) const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; voidDrawText(Drawable_t dst, GContext_t gc, Int_t x, Int_t y, Int_t firstChar, Int_t lastChar) const; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGTextLayout.html:951,Clear,Clear,951,root/html528/TGTextLayout.html,https://root.cern,https://root.cern/root/html528/TGTextLayout.html,4,['Clear'],['Clear']
Usability," TGTextView*fTexttext widget; Int_tfTextTypeType of retrieval; TGTextButton*fUrlButtonrebuild button; TGTextEntry*fUrlTexturl to connect to; TGVerticalFrame*fVworkersVertical frame. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofProgressLog(TProofProgressDialog* d, Int_t w = 700, Int_t h = 600); Create a window frame for log messages. TProofProgressLog(const char* url = 0, Int_t sessionidx = 0, Int_t w = 700, Int_t h = 600); Create a window frame for log messages. void Init(Int_t w = 700, Int_t h = 600); Init window frame for log messages. ~TProofProgressLog(); Destructor. void Popup(); Show log window. void Clear(Option_t* = 0); Clear log window. void LoadBuffer(const char* buffer); Load a text buffer in the window. void LoadFile(const char* file); Load a file in the window. void AddBuffer(const char* buffer); Add text to the window. void CloseWindow(); Handle close button or when closed via window manager action. void BuildLogList(Bool_t create = kFALSE); Build the list of workers. For this, extract the logs and take the names; of TProofLogElements. void DoLog(Bool_t grep = kFALSE); Display the logs. void LogMessage(const char* msg, Bool_t all); Load/append a log msg in the log frame, if open. void SaveToFile(); Save the logs to a file; Only the name of the file is taken, no expansion. void NoLineEntry(); Enable/disable the line number entry. void Select(Int_t id, Bool_t all = kTRUE); actions of select all/clear all button. void Rebuild(); Rebuild the log info for a new entered session. void SetUrl(const char* url); slots. { fSessionUrl = url; }. » Author: G Ganis, Aug 2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id: TProofProgressLog.h 32203 2010-02-03 18:47:34Z ganis $ » Last generated: 2010-09-23 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofProgressLog.html:24372,clear,clear,24372,root/html528/TProofProgressLog.html,https://root.cern,https://root.cern/root/html528/TProofProgressLog.html,1,['clear'],['clear']
Usability," TGTextView*fTexttext widget; Int_tfTextTypeType of retrieval; TGTextButton*fUrlButtonrebuild button; TGTextEntry*fUrlTexturl to connect to; TGVerticalFrame*fVworkersVertical frame. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofProgressLog(TProofProgressDialog* d, Int_t w = 700, Int_t h = 600); Create a window frame for log messages. TProofProgressLog(const char* url = 0, Int_t sessionidx = 0, Int_t w = 700, Int_t h = 600); Create a window frame for log messages. void Init(Int_t w = 700, Int_t h = 600); Init window frame for log messages. ~TProofProgressLog(); Destructor. void Popup(); Show log window. void Clear(Option_t* = 0); Clear log window. void LoadBuffer(const char* buffer); Load a text buffer in the window. void LoadFile(const char* file); Load a file in the window. void AddBuffer(const char* buffer); Add text to the window. void CloseWindow(); Handle close button or when closed via window manager action. void BuildLogList(Bool_t create = kFALSE); Build the list of workers. For this, extract the logs and take the names; of TProofLogElements. void DoLog(Bool_t grep = kFALSE); Display the logs. void LogMessage(const char* msg, Bool_t all); Load/append a log msg in the log frame, if open. void SaveToFile(); Save the logs to a file; Only the name of the file is taken, no expansion. void NoLineEntry(); Enable/disable the line number entry. void Select(Int_t id, Bool_t all = kTRUE); actions of select all/clear all button. void Rebuild(); Rebuild the log info for a new entered session. void SetUrl(const char* url); slots. { fSessionUrl = url; }. » Author: G Ganis, Aug 2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id: TProofProgressLog.h 32203 2010-02-03 18:47:34Z ganis $ » Last generated: 2011-07-04 15:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofProgressLog.html:24525,clear,clear,24525,root/html530/TProofProgressLog.html,https://root.cern,https://root.cern/root/html530/TProofProgressLog.html,1,['clear'],['clear']
Usability," TGTextView*fTexttext widget; Int_tfTextTypeType of retrieval; TGTextButton*fUrlButtonrebuild button; TGTextEntry*fUrlTexturl to connect to; TGVerticalFrame*fVworkersVertical frame. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofProgressLog(TProofProgressDialog* d, Int_t w = 700, Int_t h = 600); Create a window frame for log messages. TProofProgressLog(const char* url = 0, Int_t sessionidx = 0, Int_t w = 700, Int_t h = 600); Create a window frame for log messages. void Init(Int_t w = 700, Int_t h = 600); Init window frame for log messages. ~TProofProgressLog(); Destructor. void Popup(); Show log window. void Clear(Option_t* = 0); Clear log window. void LoadBuffer(const char* buffer); Load a text buffer in the window. void LoadFile(const char* file); Load a file in the window. void AddBuffer(const char* buffer); Add text to the window. void CloseWindow(); Handle close button or when closed via window manager action. void BuildLogList(Bool_t create = kFALSE); Build the list of workers. For this, extract the logs and take the names; of TProofLogElements. void DoLog(Bool_t grep = kFALSE); Display the logs. void LogMessage(const char* msg, Bool_t all); Load/append a log msg in the log frame, if open. void SaveToFile(); Save the logs to a file; Only the name of the file is taken, no expansion. void NoLineEntry(); Enable/disable the line number entry. void Select(Int_t id, Bool_t all = kTRUE); actions of select all/clear all button. void Rebuild(); Rebuild the log info for a new entered session. void SetUrl(const char* url); slots. { fSessionUrl = url; }. » Author: G Ganis, Aug 2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/sessionviewer:$Id: TProofProgressLog.h 32203 2010-02-03 18:47:34Z ganis $ » Last generated: 2011-12-02 14:28; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofProgressLog.html:24525,clear,clear,24525,root/html532/TProofProgressLog.html,https://root.cern,https://root.cern/root/html532/TProofProgressLog.html,1,['clear'],['clear']
Usability," TGTileLayout(TGCompositeFrame* main, Int_t sep = 0); ~TGTileLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGTileLayout.html:1617,Clear,Clear,1617,root/html528/TGTileLayout.html,https://root.cern,https://root.cern/root/html528/TGTileLayout.html,4,['Clear'],['Clear']
Usability," TGTreeLBEntry(const TGWindow* p = 0, TGString* text = 0, const TGPicture* pic = 0, Int_t id = -1, TGString* path = 0, GContext_t norm = GetDefaultGC()(), FontStruct_t font = GetDefaultFontStruct(), UInt_t options = kHorizontalFrame, Pixel_t back = GetWhitePixel()); virtual~TGTreeLBEntry(); voidTObject::AbstractMethod(const char* method) const; virtual voidActivate(Bool_t a); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGTreeLBEntry.html:1421,Clear,Clear,1421,root/html528/TGTreeLBEntry.html,https://root.cern,https://root.cern/root/html528/TGTreeLBEntry.html,4,['Clear'],['Clear']
Usability," TGVFileSplitter(const TGWindow* p = 0, UInt_t w = 4, UInt_t h = 4, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); virtual~TGVFileSplitter(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); voidButtonPressed()SIGNAL ; voidButtonReleased()SIGNAL ; virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGVFileSplitter.html:1442,Clear,Clear,1442,root/html528/TGVFileSplitter.html,https://root.cern,https://root.cern/root/html528/TGVFileSplitter.html,4,['Clear'],['Clear']
Usability," TGVScrollBar(const TGWindow* p = 0, UInt_t w = 2, UInt_t h = 4, UInt_t options = kVerticalFrame, Pixel_t back = GetDefaultFrameBackground()); virtual~TGVScrollBar(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGScrollBar::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGVScrollBar.html:1812,Clear,Clear,1812,root/html528/TGVScrollBar.html,https://root.cern,https://root.cern/root/html528/TGVScrollBar.html,4,['Clear'],['Clear']
Usability," TGVSlider(const TGWindow* p = 0, UInt_t h = 40, UInt_t type = kSlider1|kScaleBoth, Int_t id = -1, UInt_t options = kVerticalFrame, Pixel_t back = GetDefaultFrameBackground()); virtual~TGVSlider(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); virtual voidTGSlider::ChangeSlid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGVSlider.html:2117,Clear,Clear,2117,root/html528/TGVSlider.html,https://root.cern,https://root.cern/root/html528/TGVSlider.html,4,['Clear'],['Clear']
Usability," TGVSplitter(const TGWindow* p, UInt_t w, UInt_t h, Bool_t external); TGVSplitter(const TGWindow* p = 0, UInt_t w = 4, UInt_t h = 4, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); virtual~TGVSplitter(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGVSplitter.html:1433,Clear,Clear,1433,root/html528/TGVSplitter.html,https://root.cern,https://root.cern/root/html528/TGVSplitter.html,4,['Clear'],['Clear']
Usability," TGVertical3DLine(const TGWindow* p = 0, UInt_t w = 2, UInt_t h = 4, UInt_t options = kChildFrame, Pixel_t back = GetDefaultFrameBackground()); ~TGVertical3DLine(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGVertical3DLine.html:1377,Clear,Clear,1377,root/html528/TGVertical3DLine.html,https://root.cern,https://root.cern/root/html528/TGVertical3DLine.html,4,['Clear'],['Clear']
Usability," TGVerticalLayout(TGCompositeFrame* main); ~TGVerticalLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGVerticalLayout.html:1622,Clear,Clear,1622,root/html528/TGVerticalLayout.html,https://root.cern,https://root.cern/root/html528/TGVerticalLayout.html,4,['Clear'],['Clear']
Usability," TGViewFrame(TGView* v, UInt_t w, UInt_t h, UInt_t options = 0, Pixel_t back = GetWhitePixel()); ~TGViewFrame(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGViewFrame.html:1970,Clear,Clear,1970,root/html528/TGViewFrame.html,https://root.cern,https://root.cern/root/html528/TGViewFrame.html,4,['Clear'],['Clear']
Usability," TGWin32VirtualXProxy.cxx:174; valueOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void valueDefinition TGWin32VirtualXProxy.cxx:142; bytesOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h Atom_t Int_t ULong_t ULong_t bytesDefinition TGWin32VirtualXProxy.cxx:245; double; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx:4; ROOT::ToHumanReadableSizevoid ToHumanReadableSize(value_type bytes, Bool_t si, Double_t *coeff, const char **units)Return the size expressed in 'human readable' format.Definition StringConv.hxx:38; ROOT::FromHumanReadableSizeEFromHumanReadableSize FromHumanReadableSize(std::string_view str, T &value)Convert strings like the following into byte counts 5MB, 5 MB, 5M, 3.7GB, 123b, 456kB,...Definition StringConv.hxx:86; ROOT::EFromHumanReadableSizeEFromHumanReadableSizeDefinition StringConv.hxx:69; ROOT::EFromHumanReadableSize::kParseFail@ kParseFail; ROOT::EFromHumanReadableSize::kSuccess@ kSuccess; ROOT::EFromHumanReadableSize::kOverflow@ kOverflow; v@ vDefinition rootcling_impl.cxx:3687. corebaseincROOTStringConv.hxx. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:06:47 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/StringConv_8hxx_source.html:7813,Guid,Guide,7813,doc/v632/StringConv_8hxx_source.html,https://root.cern,https://root.cern/doc/v632/StringConv_8hxx_source.html,1,['Guid'],['Guide']
Usability," TGWindow(TGClient* c, Window_t id, const TGWindow* parent = 0); TGWindow(const TGWindow* p = 0, Int_t x = 0, Int_t y = 0, UInt_t w = 0, UInt_t h = 0, UInt_t border = 0, Int_t depth = 0, UInt_t clss = 0, void* visual = 0, SetWindowAttributes_t* attr = 0, UInt_t wtype = 0); virtual~TGWindow(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDestroySubwindows(); virtual voidDestroyWindow(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TGClient*TGOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGWindow.html:895,Clear,Clear,895,root/html528/TGWindow.html,https://root.cern,https://root.cern/root/html528/TGWindow.html,4,['Clear'],['Clear']
Usability," TGX11(const char* name, const char* title); virtual~TGX11(); voidTObject::AbstractMethod(const char* method) const; virtual Int_tAddPixmap(ULong_t pixid, UInt_t w, UInt_t h); virtual Int_tAddWindow(ULong_t qwid, UInt_t w, UInt_t h); virtual Bool_tAllocColor(Colormap_t cmap, ColorStruct_t& color); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBell(Int_t percent); virtual voidTObject::Browse(TBrowser* b); virtual voidChangeActivePointerGrab(Window_t, UInt_t, Cursor_t); virtual voidChangeGC(GContext_t gc, GCValues_t* gval); virtual voidChangeProperties(Window_t id, Atom_t property, Atom_t type, Int_t format, UChar_t* data, Int_t len); virtual voidChangeProperty(Window_t id, Atom_t property, Atom_t type, UChar_t* data, Int_t len); virtual voidChangeWindowAttributes(Window_t id, SetWindowAttributes_t* attr); virtual Bool_tCheckEvent(Window_t id, EGEventType type, Event_t& ev); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidClearArea(Window_t id, Int_t x, Int_t y, UInt_t w, UInt_t h); virtual voidClearWindow(); virtual voidClearWindow(Window_t id); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidCloseDisplay(); virtual voidClosePixmap(); virtual voidCloseWindow(); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidConvertPrimarySelection(Window_t id, Atom_t clipboard, Time_t when); virtual voidConvertSelection(Window_t, Atom_t&, Atom_t&, Atom_t&, Time_t&); virtual voidTNamed::Copy(TObject& named) const; virtual voidCopyArea(Drawable_t src, Drawable_t dest, GContext_t gc, Int_t src_x, Int_t src_y, UInt_t width, UInt_t height, Int_t dest_x, Int_t dest_y); virtual voidCopyGC(GContext_t org, GContext_t dest, Mask_t mask); virtual voidCopyPixmap(Int_t wid, Int_t xpos, Int_t ypos); virtual Pixmap_tCreateBitmap(Drawable_t id, const char* bitmap, UInt_t width, UInt_t height); virtual Cursor_tCreateCursor(ECursor cursor); virtual GC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGX11.html:1617,Clear,Clear,1617,root/html528/TGX11.html,https://root.cern,https://root.cern/root/html528/TGX11.html,3,['Clear'],['Clear']
Usability," TGaxis(); TGaxis(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax, const char* funcname, Int_t ndiv = 510, Option_t* chopt = """", Double_t gridlength = 0); TGaxis(Double_t xmin, Double_t ymin, Double_t xm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGaxis.html:2610,Clear,Clear,2610,root/html528/TGaxis.html,https://root.cern,https://root.cern/root/html528/TGaxis.html,4,['Clear'],['Clear']
Usability," TGedMarkerPopup(const TGWindow* p, const TGWindow* m, Style_t markerStyle); virtual~TGedMarkerPopup(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGedMarkerPopup.html:1719,Clear,Clear,1719,root/html528/TGedMarkerPopup.html,https://root.cern,https://root.cern/root/html528/TGedMarkerPopup.html,4,['Clear'],['Clear']
Usability," TGedMarkerSelect(const TGWindow* p, Style_t markerStyle, Int_t id); virtual~TGedMarkerSelect(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTGButton::AllowStayDown(Bool_t a); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); voidTGTextButton::ChangeText(const char* title)MENU ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual voidTGButton::Clicked()SIGNAL ; virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGedMarkerSelect.html:1674,Clear,Clear,1674,root/html528/TGedMarkerSelect.html,https://root.cern,https://root.cern/root/html528/TGedMarkerSelect.html,4,['Clear'],['Clear']
Usability," TGedPatternFrame(const TGWindow* p, Style_t pattern, Int_t width = 40, Int_t height = 20); virtual~TGedPatternFrame(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGedPatternFrame.html:1850,Clear,Clear,1850,root/html528/TGedPatternFrame.html,https://root.cern,https://root.cern/root/html528/TGedPatternFrame.html,4,['Clear'],['Clear']
Usability," TGedPatternPopup(const TGWindow* p, const TGWindow* m, Style_t pattern); virtual~TGedPatternPopup(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Clea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGedPatternPopup.html:2029,Clear,Clear,2029,root/html528/TGedPatternPopup.html,https://root.cern,https://root.cern/root/html528/TGedPatternPopup.html,4,['Clear'],['Clear']
Usability," TGedPatternSelect(const TGWindow* p, Style_t pattern, Int_t id); virtual~TGedPatternSelect(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTGButton::AllowStayDown(Bool_t a); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); voidTGTextButton::ChangeText(const char* title)MENU ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGedPatternSelect.html:1984,Clear,Clear,1984,root/html528/TGedPatternSelect.html,https://root.cern,https://root.cern/root/html528/TGedPatternSelect.html,4,['Clear'],['Clear']
Usability," TGedPatternSelector(const TGWindow* p); virtual~TGedPatternSelector(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGedPatternSelector.html:2015,Clear,Clear,2015,root/html528/TGedPatternSelector.html,https://root.cern,https://root.cern/root/html528/TGedPatternSelector.html,4,['Clear'],['Clear']
Usability," TGedSelect(const TGWindow* p, Int_t id); virtual~TGedSelect(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTGButton::AllowStayDown(Bool_t a); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; virtual voidTGWidget::Associate(const TGWindow* w); static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); voidTGTextButton::ChangeText(const char* title)MENU ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual voidTGButton::Clicked()SIGNAL ; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGedSelect.html:1935,Clear,Clear,1935,root/html528/TGedSelect.html,https://root.cern,https://root.cern/root/html528/TGedSelect.html,4,['Clear'],['Clear']
Usability," TGenPhaseSpace(); TGenPhaseSpace(const TGenPhaseSpace& gen); virtual~TGenPhaseSpace(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEven",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGenPhaseSpace.html:1204,Clear,Clear,1204,root/html528/TGenPhaseSpace.html,https://root.cern,https://root.cern/root/html528/TGenPhaseSpace.html,4,['Clear'],['Clear']
Usability," TGeoArb8(); TGeoArb8(Double_t dz, Double_t* vertices = 0); TGeoArb8(const char* name, Double_t dz, Double_t* vertices = 0); virtual~TGeoArb8(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoArb8.html:1947,Clear,Clear,1947,root/html534/TGeoArb8.html,https://root.cern,https://root.cern/root/html534/TGeoArb8.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoArb8(); TGeoArb8(Double_t dz, Double_t* vertices = 0); TGeoArb8(const char* name, Double_t dz, Double_t* vertices = 0); virtual~TGeoArb8(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoArb8.html:1819,Clear,Clear,1819,root/html528/TGeoArb8.html,https://root.cern,https://root.cern/root/html528/TGeoArb8.html,1,['Clear'],['Clear']
Usability," TGeoArb8(); TGeoArb8(Double_t dz, Double_t* vertices = 0); TGeoArb8(const char* name, Double_t dz, Double_t* vertices = 0); virtual~TGeoArb8(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoArb8.html:1907,Clear,Clear,1907,root/html530/TGeoArb8.html,https://root.cern,https://root.cern/root/html530/TGeoArb8.html,1,['Clear'],['Clear']
Usability," TGeoArb8(); TGeoArb8(Double_t dz, Double_t* vertices = 0); TGeoArb8(const char* name, Double_t dz, Double_t* vertices = 0); virtual~TGeoArb8(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoArb8.html:1907,Clear,Clear,1907,root/html532/TGeoArb8.html,https://root.cern,https://root.cern/root/html532/TGeoArb8.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoArb8.h:130; TGeoTrap::TGeoTrapTGeoTrap(); TGeoTrap::TGeoTrapTGeoTrap(Double_t dz, Double_t theta, Double_t phi); TGeoTrap::fTl1Double_t fTl1Definition TGeoArb8.h:103; TGeoTrap::fH2Double_t fH2Definition TGeoArb8.h:105; TGeoTrap::GetAlpha1Double_t GetAlpha1() constDefinition TGeoArb8.h:135; TGeoTrap::DivideTGeoVolume * Divide(TGeoVolume *voldiv, const char *divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step) override; TGeoTrap::GetBl2Double_t GetBl2() constDefinition TGeoArb8.h:137; TGeoTrap::GetTl2Double_t GetTl2() constDefinition TGeoArb8.h:138; TGeoTrap::DistFromOutside_vvoid DistFromOutside_v(const Double_t *points, const Double_t *dirs, Double_t *dists, Int_t vecsize, Double_t *step) const override; TGeoTrap::GetH1Double_t GetH1() constDefinition TGeoArb8.h:132; TGeoTrap::fThetaDouble_t fThetaDefinition TGeoArb8.h:99; TGeoTrap::GetMakeRuntimeShapeTGeoShape * GetMakeRuntimeShape(TGeoShape *mother, TGeoMatrix *mat) const override; TGeoTrap::DistFromOutsideDouble_t DistFromOutside(const Double_t *point, const Double_t *dir, Int_t iact=1, Double_t step=TGeoShape::Big(), Double_t *safe=nullptr) const override; TGeoTrap::fAlpha1Double_t fAlpha1Definition TGeoArb8.h:104; TGeoTrap::GetH2Double_t GetH2() constDefinition TGeoArb8.h:136; TGeoTrap::GetBl1Double_t GetBl1() constDefinition TGeoArb8.h:133; TGeoTrap::TGeoTrapTGeoTrap(Double_t dz, Double_t theta, Double_t phi, Double_t h1, Double_t bl1, Double_t tl1, Double_t alpha1, Double_t h2, Double_t bl2, Double_t tl2, Double_t alpha2); TGeoVolumeTGeoVolume, TGeoVolumeMulti, TGeoVolumeAssembly are the volume classes.Definition TGeoVolume.h:43; bool; double; int; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; h1TH1F * h1Definition legend1.C:5; TMath::AbsShort_t Abs(Short_t d)Returns the absolute value of parameter Short_t d.Definition TMathBase.h:123. geomgeomincTGeoArb8.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:13 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoArb8_8h_source.html:20769,Guid,Guide,20769,doc/master/TGeoArb8_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoArb8_8h_source.html,1,['Guid'],['Guide']
Usability," TGeoBatemanSol(); TGeoBatemanSol(TGeoElementRN* elem); TGeoBatemanSol(const TObjArray* chain); TGeoBatemanSol(const TGeoBatemanSol& other); virtual~TGeoBatemanSol(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Double_tConcentration(Double_t time) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoBatemanSol.html:1038,Clear,Clear,1038,root/html528/TGeoBatemanSol.html,https://root.cern,https://root.cern/root/html528/TGeoBatemanSol.html,4,['Clear'],['Clear']
Usability," TGeoBranchArray(); TGeoBranchArray(UShort_t level); TGeoBranchArray(const TGeoBranchArray&); virtual~TGeoBranchArray(); voidTObject::AbstractMethod(const char* method) const; voidAddLevel(UShort_t dindex); virtual voidTObject::AppendPad(Option_t* option = """"); static Long64_tBinarySearch(Long64_t n, const TGeoBranchArray** array, TGeoBranchArray* value); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; voidCleanMatrix(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tCompare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoBranchArray.html:1230,Clear,Clear,1230,root/html530/TGeoBranchArray.html,https://root.cern,https://root.cern/root/html530/TGeoBranchArray.html,2,['Clear'],['Clear']
Usability," TGeoBranchArray(TRootIOCtor*); virtual~TGeoBranchArray(); voidTObject::AbstractMethod(const char* method) const; voidAddLevel(Int_t dindex); virtual voidTObject::AppendPad(Option_t* option = """"); static Long64_tBinarySearch(Long64_t n, const TGeoBranchArray** array, TGeoBranchArray* value); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; voidCleanMatrix(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tCompare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; voidCopyTo(TGeoBranchArray* dest); size_tDataSize() const; void*DataStart() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoBranchArray.html:1165,Clear,Clear,1165,root/html534/TGeoBranchArray.html,https://root.cern,https://root.cern/root/html534/TGeoBranchArray.html,1,['Clear'],['Clear']
Usability," TGeoCacheState(); TGeoCacheState(Int_t capacity); virtual~TGeoCacheState(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectSt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoCacheState.html:694,Clear,Clear,694,root/html528/TGeoCacheState.html,https://root.cern,https://root.cern/root/html528/TGeoCacheState.html,4,['Clear'],['Clear']
Usability," TGeoCone(); TGeoCone(Double_t* params); TGeoCone(const TGeoCone&); TGeoCone(Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2); TGeoCone(const char* name, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2); virtual~TGeoCone(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static Double_tCapacity(Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2); voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); virtual voidComputeNormal_v(const Double_t* points, const Double_t* dirs, Double_t* norms, Int_t vecsize); static voidComputeNormalS(const Double_t* point, const Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoCone.html:1477,Clear,Clear,1477,root/html534/TGeoCone.html,https://root.cern,https://root.cern/root/html534/TGeoCone.html,1,['Clear'],['Clear']
Usability," TGeoCone(); TGeoCone(Double_t* params); TGeoCone(const TGeoCone&); TGeoCone(Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2); TGeoCone(const char* name, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2); virtual~TGeoCone(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static Double_tCapacity(Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); static voidComputeNormalS(Double_t* point, Double_t* dir, Double_t* norm, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoCone.html:1349,Clear,Clear,1349,root/html528/TGeoCone.html,https://root.cern,https://root.cern/root/html528/TGeoCone.html,1,['Clear'],['Clear']
Usability," TGeoCone(); TGeoCone(Double_t* params); TGeoCone(const TGeoCone&); TGeoCone(Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2); TGeoCone(const char* name, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2); virtual~TGeoCone(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static Double_tCapacity(Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2); voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); static voidComputeNormalS(Double_t* point, Double_t* dir, Double_t* norm, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoCone.html:1437,Clear,Clear,1437,root/html530/TGeoCone.html,https://root.cern,https://root.cern/root/html530/TGeoCone.html,1,['Clear'],['Clear']
Usability," TGeoCone(); TGeoCone(Double_t* params); TGeoCone(const TGeoCone&); TGeoCone(Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2); TGeoCone(const char* name, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2); virtual~TGeoCone(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static Double_tCapacity(Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2); voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); static voidComputeNormalS(Double_t* point, Double_t* dir, Double_t* norm, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Cop",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoCone.html:1437,Clear,Clear,1437,root/html532/TGeoCone.html,https://root.cern,https://root.cern/root/html532/TGeoCone.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoConeSeg(); TGeoConeSeg(Double_t* params); TGeoConeSeg(const TGeoConeSeg&); TGeoConeSeg(Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2, Double_t phi1, Double_t phi2); TGeoConeSeg(const char* name, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2, Double_t phi1, Double_t phi2); virtual~TGeoConeSeg(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static Double_tCapacity(Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2, Double_t phi1, Double_t phi2); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); static voidComputeNormalS(Double_t* point, Double_t* dir, Double_t* norm, Double_t dz, Double_t rmin1, Double_t rmax1, Double_t rmin2, Double_t rmax2, Double_t c1, Double_t s1, Double_t c2, Double_t s2); virtual Bool_tContains(Double_t* p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoConeSeg.html:1469,Clear,Clear,1469,root/html528/TGeoConeSeg.html,https://root.cern,https://root.cern/root/html528/TGeoConeSeg.html,1,['Clear'],['Clear']
Usability," TGeoCtub(); TGeoCtub(Double_t* params); TGeoCtub(const TGeoCtub&); TGeoCtub(Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2, Double_t lx, Double_t ly, Double_t lz, Double_t tx, Double_t ty, Double_t tz); TGeoCtub(const char* name, Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2, Double_t lx, Double_t ly, Double_t lz, Double_t tx, Double_t ty, Double_t tz); virtual~TGeoCtub(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoCtub.html:1790,Clear,Clear,1790,root/html528/TGeoCtub.html,https://root.cern,https://root.cern/root/html528/TGeoCtub.html,1,['Clear'],['Clear']
Usability," TGeoCtub(); TGeoCtub(Double_t* params); TGeoCtub(const TGeoCtub&); TGeoCtub(Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2, Double_t lx, Double_t ly, Double_t lz, Double_t tx, Double_t ty, Double_t tz); TGeoCtub(const char* name, Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2, Double_t lx, Double_t ly, Double_t lz, Double_t tx, Double_t ty, Double_t tz); virtual~TGeoCtub(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoCtub.html:1878,Clear,Clear,1878,root/html530/TGeoCtub.html,https://root.cern,https://root.cern/root/html530/TGeoCtub.html,1,['Clear'],['Clear']
Usability," TGeoCtub(); TGeoCtub(Double_t* params); TGeoCtub(const TGeoCtub&); TGeoCtub(Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2, Double_t lx, Double_t ly, Double_t lz, Double_t tx, Double_t ty, Double_t tz); TGeoCtub(const char* name, Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2, Double_t lx, Double_t ly, Double_t lz, Double_t tx, Double_t ty, Double_t tz); virtual~TGeoCtub(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoCtub.html:1878,Clear,Clear,1878,root/html532/TGeoCtub.html,https://root.cern,https://root.cern/root/html532/TGeoCtub.html,1,['Clear'],['Clear']
Usability," TGeoDecayChannel(); TGeoDecayChannel(const TGeoDecayChannel& dc); TGeoDecayChannel(Int_t decay, Int_t diso, Double_t branchingRatio, Double_t qValue); virtual~TGeoDecayChannel(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); Double_tBranchingRatio() const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; TGeoElementRN*Daughter() const; UInt_tDecay() const; static voidDecayName(UInt_t decay, TString& name); virtual voidDecayShift(Int_t& dA, Int_t& dZ, Int_t& dI) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tDeltaIso() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoDecayChannel.html:1036,Clear,Clear,1036,root/html528/TGeoDecayChannel.html,https://root.cern,https://root.cern/root/html528/TGeoDecayChannel.html,4,['Clear'],['Clear']
Usability," TGeoElement(); TGeoElement(const char* name, const char* title, Int_t nisotopes); TGeoElement(const char* name, const char* title, Int_t z, Double_t a); TGeoElement(const char* name, const char* title, Int_t z, Int_t n, Double_t a); virtual~TGeoElement(); Double_tA() const; voidTObject::AbstractMethod(const char* method) const; voidAddIsotope(TGeoIsotope* isotope, Double_t relativeAbundance); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual Int_tENDFCode() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoElement.html:1149,Clear,Clear,1149,root/html528/TGeoElement.html,https://root.cern,https://root.cern/root/html528/TGeoElement.html,4,['Clear'],['Clear']
Usability," TGeoElementTable(); TGeoElementTable(Int_t nelements); virtual~TGeoElementTable(); voidTObject::AbstractMethod(const char* method) const; voidAddElement(TGeoElement* elem); voidAddElement(const char* name, const char* title, Int_t z, Double_t a); voidAddElement(const char* name, const char* title, Int_t z, Int_t n, Double_t a); voidAddElementRN(TGeoElementRN* elem); voidAddIsotope(TGeoIsotope* isotope); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); voidBuildDefaultElements(); Bool_tCheckTable() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoElementTable.html:1231,Clear,Clear,1231,root/html534/TGeoElementTable.html,https://root.cern,https://root.cern/root/html534/TGeoElementTable.html,1,['Clear'],['Clear']
Usability," TGeoElementTable(); TGeoElementTable(Int_t nelements); virtual~TGeoElementTable(); voidTObject::AbstractMethod(const char* method) const; voidAddElement(const char* name, const char* title, Int_t z, Double_t a); voidAddElement(const char* name, const char* title, Int_t z, Int_t n, Double_t a); voidAddElementRN(TGeoElementRN* elem); voidAddIsotope(TGeoIsotope* isotope); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); voidBuildDefaultElements(); Bool_tCheckTable() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoElementTable.html:1196,Clear,Clear,1196,root/html528/TGeoElementTable.html,https://root.cern,https://root.cern/root/html528/TGeoElementTable.html,3,['Clear'],['Clear']
Usability," TGeoEltu(); TGeoEltu(Double_t* params); TGeoEltu(const TGeoEltu&); TGeoEltu(Double_t a, Double_t b, Double_t dz); TGeoEltu(const char* name, Double_t a, Double_t b, Double_t dz); virtual~TGeoEltu(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); virtual voidComputeNormal_v(const Double_t* points, const Double_t* dirs, Double_t* norms, Int_t vecsize); static voidTGeoTube::ComputeNormalS(const Double_t* point, const Double_t* dir, Double_t* norm, Double_t rmin, Double_t rmax, Double_t dz); virtual Bool_tContains(const Double_t* point) const; virtual voidContains_v(const Double_t* points, Bool_t* inside, Int_t vecsize) const; virtual voidTName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoEltu.html:1245,Clear,Clear,1245,root/html534/TGeoEltu.html,https://root.cern,https://root.cern/root/html534/TGeoEltu.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoEltu(); TGeoEltu(Double_t* params); TGeoEltu(const TGeoEltu&); TGeoEltu(Double_t a, Double_t b, Double_t dz); TGeoEltu(const char* name, Double_t a, Double_t b, Double_t dz); virtual~TGeoEltu(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); static voidTGeoTube::ComputeNormalS(Double_t* point, Double_t* dir, Double_t* norm, Double_t rmin, Double_t rmax, Double_t dz); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; static Double_tTGeoTube::DistFromInsid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoEltu.html:1117,Clear,Clear,1117,root/html528/TGeoEltu.html,https://root.cern,https://root.cern/root/html528/TGeoEltu.html,1,['Clear'],['Clear']
Usability," TGeoEltu(); TGeoEltu(Double_t* params); TGeoEltu(const TGeoEltu&); TGeoEltu(Double_t a, Double_t b, Double_t dz); TGeoEltu(const char* name, Double_t a, Double_t b, Double_t dz); virtual~TGeoEltu(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); static voidTGeoTube::ComputeNormalS(Double_t* point, Double_t* dir, Double_t* norm, Double_t rmin, Double_t rmax, Double_t dz); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoEltu.html:1205,Clear,Clear,1205,root/html530/TGeoEltu.html,https://root.cern,https://root.cern/root/html530/TGeoEltu.html,1,['Clear'],['Clear']
Usability," TGeoEltu(); TGeoEltu(Double_t* params); TGeoEltu(const TGeoEltu&); TGeoEltu(Double_t a, Double_t b, Double_t dz); TGeoEltu(const char* name, Double_t a, Double_t b, Double_t dz); virtual~TGeoEltu(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); static voidTGeoTube::ComputeNormalS(Double_t* point, Double_t* dir, Double_t* norm, Double_t rmin, Double_t rmax, Double_t dz); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoEltu.html:1205,Clear,Clear,1205,root/html532/TGeoEltu.html,https://root.cern,https://root.cern/root/html532/TGeoEltu.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoGlobalMagField(); virtual~TGeoGlobalMagField(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoGlobalMagField.html:1234,Clear,Clear,1234,root/html528/TGeoGlobalMagField.html,https://root.cern,https://root.cern/root/html528/TGeoGlobalMagField.html,4,['Clear'],['Clear']
Usability," TGeoGtra(); TGeoGtra(const TGeoGtra&); TGeoGtra(Double_t dz, Double_t theta, Double_t phi, Double_t twist, Double_t h1, Double_t bl1, Double_t tl1, Double_t alpha1, Double_t h2, Double_t bl2, Double_t tl2, Double_t alpha2); TGeoGtra(const char* name, Double_t dz, Double_t theta, Double_t phi, Double_t twist, Double_t h1, Double_t bl1, Double_t tl1, Double_t alpha1, Double_t h2, Double_t bl2, Double_t tl2, Double_t alpha2); virtual~TGeoGtra(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoGtra.html:2132,Clear,Clear,2132,root/html528/TGeoGtra.html,https://root.cern,https://root.cern/root/html528/TGeoGtra.html,3,['Clear'],['Clear']
Usability," TGeoHalfSpace(); TGeoHalfSpace(Double_t* params); TGeoHalfSpace(const TGeoHalfSpace&); TGeoHalfSpace(const char* name, Double_t* p, Double_t* n); virtual~TGeoHalfSpace(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); virtual voidComputeNormal_v(const Double_t* points, const Double_t* dirs, Double_t* norms, Int_t vecsize); virtual Bool_tContains(const Double_t* point) const; virtual voidContains_v(const Double_t* points, Bool_t* inside, Int_t vecsize) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(const Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoHalfSpace.html:1303,Clear,Clear,1303,root/html534/TGeoHalfSpace.html,https://root.cern,https://root.cern/root/html534/TGeoHalfSpace.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoHalfSpace(); TGeoHalfSpace(Double_t* params); TGeoHalfSpace(const TGeoHalfSpace&); TGeoHalfSpace(const char* name, Double_t* p, Double_t* n); virtual~TGeoHalfSpace(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; virtual Double_tDistFromOutside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoHalfSpace.html:1175,Clear,Clear,1175,root/html528/TGeoHalfSpace.html,https://root.cern,https://root.cern/root/html528/TGeoHalfSpace.html,1,['Clear'],['Clear']
Usability," TGeoHalfSpace(); TGeoHalfSpace(Double_t* params); TGeoHalfSpace(const TGeoHalfSpace&); TGeoHalfSpace(const char* name, Double_t* p, Double_t* n); virtual~TGeoHalfSpace(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; virtual Double_tDist",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoHalfSpace.html:1263,Clear,Clear,1263,root/html530/TGeoHalfSpace.html,https://root.cern,https://root.cern/root/html530/TGeoHalfSpace.html,1,['Clear'],['Clear']
Usability," TGeoHalfSpace(); TGeoHalfSpace(Double_t* params); TGeoHalfSpace(const TGeoHalfSpace&); TGeoHalfSpace(const char* name, Double_t* p, Double_t* n); virtual~TGeoHalfSpace(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(),",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoHalfSpace.html:1263,Clear,Clear,1263,root/html532/TGeoHalfSpace.html,https://root.cern,https://root.cern/root/html532/TGeoHalfSpace.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoHelix(); TGeoHelix(Double_t curvature, Double_t step, Int_t charge = 1); virtual~TGeoHelix(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Double_tComputeSafeStep(Double_t epsil = 1E-6) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoHelix.html:1726,Clear,Clear,1726,root/html534/TGeoHelix.html,https://root.cern,https://root.cern/root/html534/TGeoHelix.html,1,['Clear'],['Clear']
Usability," TGeoHelix(); TGeoHelix(const TGeoHelix&); TGeoHelix(Double_t curvature, Double_t step, Int_t charge = 1); virtual~TGeoHelix(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Double_tComputeSafeStep(Double_t epsil = 1E-6) const; virtual voidTObject::Copy(TObject& object) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoHelix.html:1755,Clear,Clear,1755,root/html528/TGeoHelix.html,https://root.cern,https://root.cern/root/html528/TGeoHelix.html,3,['Clear'],['Clear']
Usability," TGeoHype(); TGeoHype(Double_t* params); TGeoHype(const TGeoHype&); TGeoHype(Double_t rin, Double_t stin, Double_t rout, Double_t stout, Double_t dz); TGeoHype(const char* name, Double_t rin, Double_t stin, Double_t rout, Double_t stout, Double_t dz); virtual~TGeoHype(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoHype.html:2225,Clear,Clear,2225,root/html534/TGeoHype.html,https://root.cern,https://root.cern/root/html534/TGeoHype.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoHype(); TGeoHype(Double_t* params); TGeoHype(const TGeoHype&); TGeoHype(Double_t rin, Double_t stin, Double_t rout, Double_t stout, Double_t dz); TGeoHype(const char* name, Double_t rin, Double_t stin, Double_t rout, Double_t stout, Double_t dz); virtual~TGeoHype(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoHype.html:2097,Clear,Clear,2097,root/html528/TGeoHype.html,https://root.cern,https://root.cern/root/html528/TGeoHype.html,4,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoIntersection(); TGeoIntersection(const char* expr1, const char* expr2); TGeoIntersection(TGeoShape* left, TGeoShape* right, TGeoMatrix* lmat = 0, TGeoMatrix* rmat = 0); virtual~TGeoIntersection(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidComputeBBox(Double_t& dx, Double_t& dy, Double_t& dz, Double_t* origin); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoIntersection.html:1705,Clear,Clear,1705,root/html528/TGeoIntersection.html,https://root.cern,https://root.cern/root/html528/TGeoIntersection.html,2,['Clear'],['Clear']
Usability," TGeoIntersection(); TGeoIntersection(const char* expr1, const char* expr2); TGeoIntersection(TGeoShape* left, TGeoShape* right, TGeoMatrix* lmat = 0, TGeoMatrix* rmat = 0); virtual~TGeoIntersection(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoBoolNode::ClearThreadData() const; virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidComputeBBox(Double_t& dx, Double_t& dy, Double_t& dz, Double_t* origin); virtual voidComputeNorma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoIntersection.html:1705,Clear,Clear,1705,root/html532/TGeoIntersection.html,https://root.cern,https://root.cern/root/html532/TGeoIntersection.html,4,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoIsotope(); TGeoIsotope(const TGeoIsotope&); TGeoIsotope(const char* name, Int_t z, Int_t n, Double_t a); virtual~TGeoIsotope(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); static TGeoIsotope*FindIsotope(const char* name); virtual TObject*TObject::FindObject(const char* name) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoIsotope.html:940,Clear,Clear,940,root/html528/TGeoIsotope.html,https://root.cern,https://root.cern/root/html528/TGeoIsotope.html,4,['Clear'],['Clear']
Usability," TGeoMCGeometry(); TGeoMCGeometry(const char* name, const char* title, Bool_t g3CompatibleVolumeNames = false); virtual~TGeoMCGeometry(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoMCGeometry.html:815,Clear,Clear,815,root/html528/TGeoMCGeometry.html,https://root.cern,https://root.cern/root/html528/TGeoMCGeometry.html,4,['Clear'],['Clear']
Usability," TGeoMedium(); TGeoMedium(const char* name, Int_t numed, const TGeoMaterial* mat, Double_t* params = 0); TGeoMedium(const char* name, Int_t numed, Int_t imat, Int_t isvol, Int_t ifield, Double_t fieldm, Double_t tmaxfd, Double_t stemax, Double_t deemax, Double_t epsil, Double_t stmin); virtual~TGeoMedium(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoMedium.html:1460,Clear,Clear,1460,root/html530/TGeoMedium.html,https://root.cern,https://root.cern/root/html530/TGeoMedium.html,3,['Clear'],['Clear']
Usability," TGeoMedium(); TGeoMedium(const char* name, Int_t numed, const TGeoMaterial* mat, Double_t* params = 0); TGeoMedium(const char* name, Int_t numed, Int_t imat, Int_t isvol, Int_t ifield, Double_t fieldm, Double_t tmaxfd, Double_t stemax, Double_t deemax, Double_t epsil, Double_t stmin); virtual~TGeoMedium(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoMedium.html:922,Clear,Clear,922,root/html528/TGeoMedium.html,https://root.cern,https://root.cern/root/html528/TGeoMedium.html,1,['Clear'],['Clear']
Usability," TGeoNavigator(); TGeoNavigator(TGeoManager* geom); virtual~TGeoNavigator(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); voidBuildCache(Bool_t dummy = kFALSE, Bool_t nodeid = kFALSE); Bool_tcd(const char* path = """"); voidCdDown(Int_t index); voidCdDown(TGeoNode* node); voidCdNext(); voidCdNode(Int_t nodeid); voidCdTop(); voidCdUp(); Bool_tCheckPath(const char* path) const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; TGeoNode*CrossBoundaryAndLocate(Bool_t downwards, TGeoNode* skipnode); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); voidDoBackupState(); voidDoRestoreState(); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoNavigator.html:1376,Clear,Clear,1376,root/html534/TGeoNavigator.html,https://root.cern,https://root.cern/root/html534/TGeoNavigator.html,1,['Clear'],['Clear']
Usability," TGeoNavigator(); TGeoNavigator(TGeoManager* geom); virtual~TGeoNavigator(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); voidBuildCache(Bool_t dummy = kFALSE, Bool_t nodeid = kFALSE); Bool_tcd(const char* path = """"); voidCdDown(Int_t index); voidCdNext(); voidCdNode(Int_t nodeid); voidCdTop(); voidCdUp(); Bool_tCheckPath(const char* path) const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; TGeoNode*CrossBoundaryAndLocate(Bool_t downwards, TGeoNode* skipnode); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); voidDoBackupState(); voidDoRestoreState(); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoNavigator.html:1353,Clear,Clear,1353,root/html528/TGeoNavigator.html,https://root.cern,https://root.cern/root/html528/TGeoNavigator.html,3,['Clear'],['Clear']
Usability," TGeoNodeCache(); TGeoNodeCache(TGeoNode* top, Bool_t nodeid = kFALSE, Int_t capacity = 30); virtual~TGeoNodeCache(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); voidBuildIdArray(); Bool_tCdDown(Int_t index); voidCdNode(Int_t nodeid); voidCdTop(); voidCdUp(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidFillIdBranch(const Int_t* br, Int_t startlevel = 0); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; void*GetBranch() const; voidGetBranchNames(Int_t* names) const; voidGetBranchNumber",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoNodeCache.html:830,Clear,Clear,830,root/html528/TGeoNodeCache.html,https://root.cern,https://root.cern/root/html528/TGeoNodeCache.html,3,['Clear'],['Clear']
Usability," TGeoNodeCache(); TGeoNodeCache(TGeoNode* top, Bool_t nodeid = kFALSE, Int_t capacity = 30); virtual~TGeoNodeCache(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); voidBuildIdArray(); voidBuildInfoBranch(); Bool_tCdDown(Int_t index); Bool_tCdDown(TGeoNode* node); voidCdNode(Int_t nodeid); voidCdTop(); voidCdUp(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidFillIdBranch(const Int_t* br, Int_t startlevel = 0); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; void*GetBranch() const; voidGe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoNodeCache.html:883,Clear,Clear,883,root/html534/TGeoNodeCache.html,https://root.cern,https://root.cern/root/html534/TGeoNodeCache.html,1,['Clear'],['Clear']
Usability," TGeoPNEntry(); TGeoPNEntry(const char* unique_name, const char* path); virtual~TGeoPNEntry(); voidTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPNEntry.html:2234,Clear,Clear,2234,root/html528/TGeoPNEntry.html,https://root.cern,https://root.cern/root/html528/TGeoPNEntry.html,4,['Clear'],['Clear']
Usability," TGeoPainter.cxx:121; TGeoPainter::fCheckedNodeTGeoNode * fCheckedNodeDefinition TGeoPainter.h:59; TGeoPainter::PaintPhysicalNodevoid PaintPhysicalNode(TGeoPhysicalNode *node, Option_t *option="""")Paints a physical node associated with a path.Definition TGeoPainter.cxx:1609; TGeoPainter::fNVisNodesInt_t fNVisNodesDefinition TGeoPainter.h:48; TGeoPainter::fExplodedViewInt_t fExplodedViewDefinition TGeoPainter.h:51; TGeoPainter::GetVolumeInfoconst char * GetVolumeInfo(const TGeoVolume *volume, Int_t px, Int_t py) const overrideGet some info about the current selected volume.Definition TGeoPainter.cxx:1151; TGeoPainter::DrawCurrentPointvoid DrawCurrentPoint(Int_t color) overrideDraw current point in the same view.Definition TGeoPainter.cxx:1004; TGeoPainter::DrawPathvoid DrawPath(const char *path, Option_t *option="""") overrideDraw all volumes for a given path.Definition TGeoPainter.cxx:1026; TGeoPainter::OpProgressvoid OpProgress(const char *opname, Long64_t current, Long64_t size, TStopwatch *watch=nullptr, Bool_t last=kFALSE, Bool_t refresh=kFALSE, const char *msg="""") overrideText progress bar.Definition TGeoPainter.cxx:1684; TGeoPainter::SetCheckedNodevoid SetCheckedNode(TGeoNode *node) overrideSelect a node to be checked for overlaps.Definition TGeoPainter.cxx:2016; TGeoPainter::DrawBatemanSolvoid DrawBatemanSol(TGeoBatemanSol *sol, Option_t *option="""") overrideDraw the time evolution of a radionuclide.Definition TGeoPainter.cxx:726; TGeoPainter::fCheckerTGeoChecker * fCheckerDefinition TGeoPainter.h:64; TGeoPainter::fIsRaytracingBool_t fIsRaytracingDefinition TGeoPainter.h:55; TGeoPainter::ExecuteShapeEventvoid ExecuteShapeEvent(TGeoShape *shape, Int_t event, Int_t px, Int_t py) overrideExecute mouse actions on a given shape.Definition TGeoPainter.cxx:1089; TGeoPainter::WeightDouble_t Weight(Double_t precision, Option_t *option=""v"") overrideCompute weight [kg] of the current volume.Definition TGeoPainter.cxx:2221; TGeoPainter::ExecuteVolumeEventvoid ExecuteVolumeEv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPainter_8cxx_source.html:105975,progress bar,progress bar,105975,doc/master/TGeoPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoPainter_8cxx_source.html,1,['progress bar'],['progress bar']
Usability," TGeoPara(); TGeoPara(Double_t* param); TGeoPara(const TGeoPara&); TGeoPara(Double_t dx, Double_t dy, Double_t dz, Double_t alpha, Double_t theta, Double_t phi); TGeoPara(const char* name, Double_t dx, Double_t dy, Double_t dz, Double_t alpha, Double_t theta, Double_t phi); virtual~TGeoPara(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); virtual voidComputeNormal_v(const Double_t* points, const Double_t* dirs, Double_t* norms, Int_t vecsize); virtual Bool_tContains(const Double_t* point",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPara.html:1496,Clear,Clear,1496,root/html534/TGeoPara.html,https://root.cern,https://root.cern/root/html534/TGeoPara.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPara(); TGeoPara(Double_t* param); TGeoPara(const TGeoPara&); TGeoPara(Double_t dx, Double_t dy, Double_t dz, Double_t alpha, Double_t theta, Double_t phi); TGeoPara(const char* name, Double_t dx, Double_t dy, Double_t dz, Double_t alpha, Double_t theta, Double_t phi); virtual~TGeoPara(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTGeoBBox::DistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* poin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPara.html:1368,Clear,Clear,1368,root/html528/TGeoPara.html,https://root.cern,https://root.cern/root/html528/TGeoPara.html,1,['Clear'],['Clear']
Usability," TGeoPara(); TGeoPara(Double_t* param); TGeoPara(const TGeoPara&); TGeoPara(Double_t dx, Double_t dy, Double_t dz, Double_t alpha, Double_t theta, Double_t phi); TGeoPara(const char* name, Double_t dx, Double_t dy, Double_t dz, Double_t alpha, Double_t theta, Double_t phi); virtual~TGeoPara(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTGeoBBox",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoPara.html:1456,Clear,Clear,1456,root/html530/TGeoPara.html,https://root.cern,https://root.cern/root/html530/TGeoPara.html,1,['Clear'],['Clear']
Usability," TGeoPara(); TGeoPara(Double_t* param); TGeoPara(const TGeoPara&); TGeoPara(Double_t dx, Double_t dy, Double_t dz, Double_t alpha, Double_t theta, Double_t phi); TGeoPara(const char* name, Double_t dx, Double_t dy, Double_t dz, Double_t alpha, Double_t theta, Double_t phi); virtual~TGeoPara(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPara.html:1456,Clear,Clear,1456,root/html532/TGeoPara.html,https://root.cern,https://root.cern/root/html532/TGeoPara.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoParaboloid(); TGeoParaboloid(Double_t* params); TGeoParaboloid(const TGeoParaboloid&); TGeoParaboloid(Double_t rlo, Double_t rhi, Double_t dz); TGeoParaboloid(const char* name, Double_t rlo, Double_t rhi, Double_t dz); virtual~TGeoParaboloid(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoParaboloid.html:1740,Clear,Clear,1740,root/html534/TGeoParaboloid.html,https://root.cern,https://root.cern/root/html534/TGeoParaboloid.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoParaboloid(); TGeoParaboloid(Double_t* params); TGeoParaboloid(const TGeoParaboloid&); TGeoParaboloid(Double_t rlo, Double_t rhi, Double_t dz); TGeoParaboloid(const char* name, Double_t rlo, Double_t rhi, Double_t dz); virtual~TGeoParaboloid(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoParaboloid.html:1612,Clear,Clear,1612,root/html528/TGeoParaboloid.html,https://root.cern,https://root.cern/root/html528/TGeoParaboloid.html,1,['Clear'],['Clear']
Usability," TGeoParaboloid(); TGeoParaboloid(Double_t* params); TGeoParaboloid(const TGeoParaboloid&); TGeoParaboloid(Double_t rlo, Double_t rhi, Double_t dz); TGeoParaboloid(const char* name, Double_t rlo, Double_t rhi, Double_t dz); virtual~TGeoParaboloid(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoParaboloid.html:1700,Clear,Clear,1700,root/html530/TGeoParaboloid.html,https://root.cern,https://root.cern/root/html530/TGeoParaboloid.html,1,['Clear'],['Clear']
Usability," TGeoParaboloid(); TGeoParaboloid(Double_t* params); TGeoParaboloid(const TGeoParaboloid&); TGeoParaboloid(Double_t rlo, Double_t rhi, Double_t dz); TGeoParaboloid(const char* name, Double_t rlo, Double_t rhi, Double_t dz); virtual~TGeoParaboloid(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoParaboloid.html:1700,Clear,Clear,1700,root/html532/TGeoParaboloid.html,https://root.cern,https://root.cern/root/html532/TGeoParaboloid.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternCylPhi(); TGeoPatternCylPhi(TGeoVolume* vol, Int_t ndivisions); TGeoPatternCylPhi(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternCylPhi(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternCylPhi(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPatternCylPhi.html:1884,Clear,Clear,1884,root/html528/TGeoPatternCylPhi.html,https://root.cern,https://root.cern/root/html528/TGeoPatternCylPhi.html,2,['Clear'],['Clear']
Usability," TGeoPatternCylPhi(); TGeoPatternCylPhi(TGeoVolume* vol, Int_t ndivisions); TGeoPatternCylPhi(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternCylPhi(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternCylPhi(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual TObject*TObject::Clone(const char* new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternCylPhi.html:1884,Clear,Clear,1884,root/html532/TGeoPatternCylPhi.html,https://root.cern,https://root.cern/root/html532/TGeoPatternCylPhi.html,4,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternCylR(); TGeoPatternCylR(const TGeoPatternCylR& pf); TGeoPatternCylR(TGeoVolume* vol, Int_t ndivisions); TGeoPatternCylR(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternCylR(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternCylR(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual TObject*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPatternCylR.html:1912,Clear,Clear,1912,root/html534/TGeoPatternCylR.html,https://root.cern,https://root.cern/root/html534/TGeoPatternCylR.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternCylR(); TGeoPatternCylR(const TGeoPatternCylR&); TGeoPatternCylR(TGeoVolume* vol, Int_t ndivisions); TGeoPatternCylR(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternCylR(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternCylR(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPatternCylR.html:1909,Clear,Clear,1909,root/html528/TGeoPatternCylR.html,https://root.cern,https://root.cern/root/html528/TGeoPatternCylR.html,2,['Clear'],['Clear']
Usability," TGeoPatternCylR(); TGeoPatternCylR(const TGeoPatternCylR&); TGeoPatternCylR(TGeoVolume* vol, Int_t ndivisions); TGeoPatternCylR(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternCylR(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternCylR(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual TObject*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternCylR.html:1909,Clear,Clear,1909,root/html532/TGeoPatternCylR.html,https://root.cern,https://root.cern/root/html532/TGeoPatternCylR.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternFinder(); TGeoPatternFinder(TGeoVolume* vol, Int_t ndiv); virtual~TGeoPatternFinder(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t); virtual TGeoNode*CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPatternFinder.html:1691,Clear,Clear,1691,root/html528/TGeoPatternFinder.html,https://root.cern,https://root.cern/root/html528/TGeoPatternFinder.html,2,['Clear'],['Clear']
Usability," TGeoPatternHoneycomb(); TGeoPatternHoneycomb(TGeoVolume* vol, Int_t nrows); virtual~TGeoPatternHoneycomb(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPatternHoneycomb.html:1744,Clear,Clear,1744,root/html528/TGeoPatternHoneycomb.html,https://root.cern,https://root.cern/root/html528/TGeoPatternHoneycomb.html,2,['Clear'],['Clear']
Usability," TGeoPatternHoneycomb(); TGeoPatternHoneycomb(TGeoVolume* vol, Int_t nrows); virtual~TGeoPatternHoneycomb(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual TGeoMat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternHoneycomb.html:1744,Clear,Clear,1744,root/html532/TGeoPatternHoneycomb.html,https://root.cern,https://root.cern/root/html532/TGeoPatternHoneycomb.html,4,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternParaX(); TGeoPatternParaX(const TGeoPatternParaX& pf); TGeoPatternParaX(TGeoVolume* vol, Int_t ndivisions); TGeoPatternParaX(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternParaX(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternParaX(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPatternParaX.html:1922,Clear,Clear,1922,root/html534/TGeoPatternParaX.html,https://root.cern,https://root.cern/root/html534/TGeoPatternParaX.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternParaX(); TGeoPatternParaX(const TGeoPatternParaX&); TGeoPatternParaX(TGeoVolume* vol, Int_t ndivisions); TGeoPatternParaX(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternParaX(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternParaX(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPatternParaX.html:1919,Clear,Clear,1919,root/html528/TGeoPatternParaX.html,https://root.cern,https://root.cern/root/html528/TGeoPatternParaX.html,2,['Clear'],['Clear']
Usability," TGeoPatternParaX(); TGeoPatternParaX(const TGeoPatternParaX&); TGeoPatternParaX(TGeoVolume* vol, Int_t ndivisions); TGeoPatternParaX(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternParaX(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternParaX(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternParaX.html:1919,Clear,Clear,1919,root/html532/TGeoPatternParaX.html,https://root.cern,https://root.cern/root/html532/TGeoPatternParaX.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternParaY(); TGeoPatternParaY(const TGeoPatternParaY& pf); TGeoPatternParaY(TGeoVolume* vol, Int_t ndivisions); TGeoPatternParaY(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternParaY(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternParaY(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPatternParaY.html:1922,Clear,Clear,1922,root/html534/TGeoPatternParaY.html,https://root.cern,https://root.cern/root/html534/TGeoPatternParaY.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternParaY(); TGeoPatternParaY(const TGeoPatternParaY&); TGeoPatternParaY(TGeoVolume* vol, Int_t ndivisions); TGeoPatternParaY(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternParaY(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternParaY(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPatternParaY.html:1919,Clear,Clear,1919,root/html528/TGeoPatternParaY.html,https://root.cern,https://root.cern/root/html528/TGeoPatternParaY.html,2,['Clear'],['Clear']
Usability," TGeoPatternParaY(); TGeoPatternParaY(const TGeoPatternParaY&); TGeoPatternParaY(TGeoVolume* vol, Int_t ndivisions); TGeoPatternParaY(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternParaY(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternParaY(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternParaY.html:1919,Clear,Clear,1919,root/html532/TGeoPatternParaY.html,https://root.cern,https://root.cern/root/html532/TGeoPatternParaY.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternParaZ(); TGeoPatternParaZ(const TGeoPatternParaZ& pf); TGeoPatternParaZ(TGeoVolume* vol, Int_t ndivisions); TGeoPatternParaZ(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternParaZ(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternParaZ(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPatternParaZ.html:1922,Clear,Clear,1922,root/html534/TGeoPatternParaZ.html,https://root.cern,https://root.cern/root/html534/TGeoPatternParaZ.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternParaZ(); TGeoPatternParaZ(const TGeoPatternParaZ&); TGeoPatternParaZ(TGeoVolume* vol, Int_t ndivisions); TGeoPatternParaZ(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternParaZ(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternParaZ(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPatternParaZ.html:1919,Clear,Clear,1919,root/html528/TGeoPatternParaZ.html,https://root.cern,https://root.cern/root/html528/TGeoPatternParaZ.html,2,['Clear'],['Clear']
Usability," TGeoPatternParaZ(); TGeoPatternParaZ(const TGeoPatternParaZ&); TGeoPatternParaZ(TGeoVolume* vol, Int_t ndivisions); TGeoPatternParaZ(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternParaZ(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternParaZ(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternParaZ.html:1919,Clear,Clear,1919,root/html532/TGeoPatternParaZ.html,https://root.cern,https://root.cern/root/html532/TGeoPatternParaZ.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternSphPhi(); TGeoPatternSphPhi(TGeoVolume* vol, Int_t ndivisions); TGeoPatternSphPhi(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternSphPhi(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternSphPhi(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual TObject*TObject::Clone(const char* new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPatternSphPhi.html:1884,Clear,Clear,1884,root/html534/TGeoPatternSphPhi.html,https://root.cern,https://root.cern/root/html534/TGeoPatternSphPhi.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternSphPhi(); TGeoPatternSphPhi(const TGeoPatternSphPhi&); TGeoPatternSphPhi(TGeoVolume* vol, Int_t ndivisions); TGeoPatternSphPhi(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternSphPhi(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternSphPhi(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newnam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPatternSphPhi.html:1929,Clear,Clear,1929,root/html528/TGeoPatternSphPhi.html,https://root.cern,https://root.cern/root/html528/TGeoPatternSphPhi.html,2,['Clear'],['Clear']
Usability," TGeoPatternSphPhi(); TGeoPatternSphPhi(const TGeoPatternSphPhi&); TGeoPatternSphPhi(TGeoVolume* vol, Int_t ndivisions); TGeoPatternSphPhi(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternSphPhi(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternSphPhi(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternSphPhi.html:1929,Clear,Clear,1929,root/html532/TGeoPatternSphPhi.html,https://root.cern,https://root.cern/root/html532/TGeoPatternSphPhi.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternSphR(); TGeoPatternSphR(const TGeoPatternSphR& pf); TGeoPatternSphR(TGeoVolume* vol, Int_t ndivisions); TGeoPatternSphR(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternSphR(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternSphR(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual TObject*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPatternSphR.html:1912,Clear,Clear,1912,root/html534/TGeoPatternSphR.html,https://root.cern,https://root.cern/root/html534/TGeoPatternSphR.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternSphR(); TGeoPatternSphR(const TGeoPatternSphR&); TGeoPatternSphR(TGeoVolume* vol, Int_t ndivisions); TGeoPatternSphR(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternSphR(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternSphR(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPatternSphR.html:1909,Clear,Clear,1909,root/html528/TGeoPatternSphR.html,https://root.cern,https://root.cern/root/html528/TGeoPatternSphR.html,2,['Clear'],['Clear']
Usability," TGeoPatternSphR(); TGeoPatternSphR(const TGeoPatternSphR&); TGeoPatternSphR(TGeoVolume* vol, Int_t ndivisions); TGeoPatternSphR(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternSphR(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternSphR(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual TObject*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternSphR.html:1909,Clear,Clear,1909,root/html532/TGeoPatternSphR.html,https://root.cern,https://root.cern/root/html532/TGeoPatternSphR.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternSphTheta(); TGeoPatternSphTheta(const TGeoPatternSphTheta& pf); TGeoPatternSphTheta(TGeoVolume* vol, Int_t ndivisions); TGeoPatternSphTheta(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternSphTheta(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternSphTheta(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::Cle",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPatternSphTheta.html:1952,Clear,Clear,1952,root/html534/TGeoPatternSphTheta.html,https://root.cern,https://root.cern/root/html534/TGeoPatternSphTheta.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternSphTheta(); TGeoPatternSphTheta(const TGeoPatternSphTheta&); TGeoPatternSphTheta(TGeoVolume* vol, Int_t ndivisions); TGeoPatternSphTheta(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternSphTheta(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternSphTheta(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPatternSphTheta.html:1949,Clear,Clear,1949,root/html528/TGeoPatternSphTheta.html,https://root.cern,https://root.cern/root/html528/TGeoPatternSphTheta.html,2,['Clear'],['Clear']
Usability," TGeoPatternSphTheta(); TGeoPatternSphTheta(const TGeoPatternSphTheta&); TGeoPatternSphTheta(TGeoVolume* vol, Int_t ndivisions); TGeoPatternSphTheta(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternSphTheta(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternSphTheta(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternSphTheta.html:1949,Clear,Clear,1949,root/html532/TGeoPatternSphTheta.html,https://root.cern,https://root.cern/root/html532/TGeoPatternSphTheta.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternTrapZ(); TGeoPatternTrapZ(const TGeoPatternTrapZ& pf); TGeoPatternTrapZ(TGeoVolume* vol, Int_t ndivisions); TGeoPatternTrapZ(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternTrapZ(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternTrapZ(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPatternTrapZ.html:1922,Clear,Clear,1922,root/html534/TGeoPatternTrapZ.html,https://root.cern,https://root.cern/root/html534/TGeoPatternTrapZ.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternTrapZ(); TGeoPatternTrapZ(const TGeoPatternTrapZ&); TGeoPatternTrapZ(TGeoVolume* vol, Int_t ndivisions); TGeoPatternTrapZ(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternTrapZ(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternTrapZ(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPatternTrapZ.html:1919,Clear,Clear,1919,root/html528/TGeoPatternTrapZ.html,https://root.cern,https://root.cern/root/html528/TGeoPatternTrapZ.html,2,['Clear'],['Clear']
Usability," TGeoPatternTrapZ(); TGeoPatternTrapZ(const TGeoPatternTrapZ&); TGeoPatternTrapZ(TGeoVolume* vol, Int_t ndivisions); TGeoPatternTrapZ(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternTrapZ(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternTrapZ(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternTrapZ.html:1919,Clear,Clear,1919,root/html532/TGeoPatternTrapZ.html,https://root.cern,https://root.cern/root/html532/TGeoPatternTrapZ.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternX(); TGeoPatternX(const TGeoPatternX& pf); TGeoPatternX(TGeoVolume* vol, Int_t ndivisions); TGeoPatternX(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternX(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternX(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual TObject*TObject::Clone(const char* newna",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPatternX.html:1882,Clear,Clear,1882,root/html534/TGeoPatternX.html,https://root.cern,https://root.cern/root/html534/TGeoPatternX.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternX(); TGeoPatternX(const TGeoPatternX&); TGeoPatternX(TGeoVolume* vol, Int_t ndivisions); TGeoPatternX(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternX(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternX(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPatternX.html:1879,Clear,Clear,1879,root/html528/TGeoPatternX.html,https://root.cern,https://root.cern/root/html528/TGeoPatternX.html,2,['Clear'],['Clear']
Usability," TGeoPatternX(); TGeoPatternX(const TGeoPatternX&); TGeoPatternX(TGeoVolume* vol, Int_t ndivisions); TGeoPatternX(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternX(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternX(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual TObject*TObject::Clone(const char* newname ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternX.html:1879,Clear,Clear,1879,root/html532/TGeoPatternX.html,https://root.cern,https://root.cern/root/html532/TGeoPatternX.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternY(); TGeoPatternY(const TGeoPatternY& pf); TGeoPatternY(TGeoVolume* vol, Int_t ndivisions); TGeoPatternY(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternY(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternY(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual TObject*TObject::Clone(const char* newna",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPatternY.html:1882,Clear,Clear,1882,root/html534/TGeoPatternY.html,https://root.cern,https://root.cern/root/html534/TGeoPatternY.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternY(); TGeoPatternY(const TGeoPatternY&); TGeoPatternY(TGeoVolume* vol, Int_t ndivisions); TGeoPatternY(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternY(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternY(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPatternY.html:1879,Clear,Clear,1879,root/html528/TGeoPatternY.html,https://root.cern,https://root.cern/root/html528/TGeoPatternY.html,2,['Clear'],['Clear']
Usability," TGeoPatternY(); TGeoPatternY(const TGeoPatternY&); TGeoPatternY(TGeoVolume* vol, Int_t ndivisions); TGeoPatternY(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternY(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternY(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual TObject*TObject::Clone(const char* newname ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternY.html:1879,Clear,Clear,1879,root/html532/TGeoPatternY.html,https://root.cern,https://root.cern/root/html532/TGeoPatternY.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternZ(); TGeoPatternZ(const TGeoPatternZ& pf); TGeoPatternZ(TGeoVolume* vol, Int_t ndivisions); TGeoPatternZ(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternZ(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternZ(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual TObject*TObject::Clone(const char* newna",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPatternZ.html:1882,Clear,Clear,1882,root/html534/TGeoPatternZ.html,https://root.cern,https://root.cern/root/html534/TGeoPatternZ.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPatternZ(); TGeoPatternZ(const TGeoPatternZ&); TGeoPatternZ(TGeoVolume* vol, Int_t ndivisions); TGeoPatternZ(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternZ(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternZ(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPatternZ.html:1879,Clear,Clear,1879,root/html528/TGeoPatternZ.html,https://root.cern,https://root.cern/root/html528/TGeoPatternZ.html,2,['Clear'],['Clear']
Usability," TGeoPatternZ(); TGeoPatternZ(const TGeoPatternZ&); TGeoPatternZ(TGeoVolume* vol, Int_t ndivisions); TGeoPatternZ(TGeoVolume* vol, Int_t ndivisions, Double_t step); TGeoPatternZ(TGeoVolume* vol, Int_t ndivisions, Double_t start, Double_t end); virtual~TGeoPatternZ(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidcd(Int_t idiv); virtual TGeoNode*TGeoPatternFinder::CdNext(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoPatternFinder::ClearThreadData() const; virtual TObject*TObject::Clone(const char* newname ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPatternZ.html:1879,Clear,Clear,1879,root/html532/TGeoPatternZ.html,https://root.cern,https://root.cern/root/html532/TGeoPatternZ.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPcon(); TGeoPcon(Double_t* params); TGeoPcon(Double_t phi, Double_t dphi, Int_t nz); TGeoPcon(const char* name, Double_t phi, Double_t dphi, Int_t nz); virtual~TGeoPcon(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); virtual voidComputeNormal_v(const Double_t* points, const Double_t* dirs, Double_t* norms, Int_t vecsize); virtual Bool_tContains(const Double_t* point) const; virtual voidContains_v(const Double_t* points, Bool_t* inside, Int_t vecsize) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPcon.html:1316,Clear,Clear,1316,root/html534/TGeoPcon.html,https://root.cern,https://root.cern/root/html534/TGeoPcon.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPcon(); TGeoPcon(Double_t* params); TGeoPcon(Double_t phi, Double_t dphi, Int_t nz); TGeoPcon(const char* name, Double_t phi, Double_t dphi, Int_t nz); virtual~TGeoPcon(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidDefineSection(Int_t snum, Double_t z, Double_t rmin, Double_t rmax); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; virtual Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPcon.html:1188,Clear,Clear,1188,root/html528/TGeoPcon.html,https://root.cern,https://root.cern/root/html528/TGeoPcon.html,1,['Clear'],['Clear']
Usability," TGeoPcon(); TGeoPcon(Double_t* params); TGeoPcon(Double_t phi, Double_t dphi, Int_t nz); TGeoPcon(const char* name, Double_t phi, Double_t dphi, Int_t nz); virtual~TGeoPcon(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidDefineSection(Int_t snum, Double_t z, Double_t rmin, Double_t rmax); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoPcon.html:1276,Clear,Clear,1276,root/html530/TGeoPcon.html,https://root.cern,https://root.cern/root/html530/TGeoPcon.html,1,['Clear'],['Clear']
Usability," TGeoPcon(); TGeoPcon(Double_t* params); TGeoPcon(Double_t phi, Double_t dphi, Int_t nz); TGeoPcon(const char* name, Double_t phi, Double_t dphi, Int_t nz); virtual~TGeoPcon(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidDefineSection(Int_t snum, Double_t z, Double_t rmin, Double_t rmax); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPcon.html:1276,Clear,Clear,1276,root/html532/TGeoPcon.html,https://root.cern,https://root.cern/root/html532/TGeoPcon.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPgon(); TGeoPgon(Double_t* params); TGeoPgon(const TGeoPgon&); TGeoPgon(Double_t phi, Double_t dphi, Int_t nedges, Int_t nz); TGeoPgon(const char* name, Double_t phi, Double_t dphi, Int_t nedges, Int_t nz); virtual~TGeoPgon(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); virtual voidComputeNormal_v(const Double_t* points, const Double_t* dirs, Double_t* norms, Int_t vecsize); virtual Bool_tContains(const Double_t* point) const; virtual voidCon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPgon.html:1483,Clear,Clear,1483,root/html534/TGeoPgon.html,https://root.cern,https://root.cern/root/html534/TGeoPgon.html,1,['Clear'],['Clear']
Usability," TGeoPgon(); TGeoPgon(Double_t* params); TGeoPgon(const TGeoPgon&); TGeoPgon(Double_t phi, Double_t dphi, Int_t nedges, Int_t nz); TGeoPgon(const char* name, Double_t phi, Double_t dphi, Int_t nedges, Int_t nz); virtual~TGeoPgon(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTGeoPcon::DefineSection(Int_t snum, Double_t z, Double_t rmin, Double_t rmax); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPgon.html:1292,Clear,Clear,1292,root/html528/TGeoPgon.html,https://root.cern,https://root.cern/root/html528/TGeoPgon.html,1,['Clear'],['Clear']
Usability," TGeoPgon(); TGeoPgon(Double_t* params); TGeoPgon(const TGeoPgon&); TGeoPgon(Double_t phi, Double_t dphi, Int_t nedges, Int_t nz); TGeoPgon(const char* name, Double_t phi, Double_t dphi, Int_t nedges, Int_t nz); virtual~TGeoPgon(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTGeoPcon::DefineSection(Int_t snum, Double_t z, Double_t rmin, Double_t rmax); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoPgon.html:1380,Clear,Clear,1380,root/html530/TGeoPgon.html,https://root.cern,https://root.cern/root/html530/TGeoPgon.html,1,['Clear'],['Clear']
Usability," TGeoPgon(); TGeoPgon(Double_t* params); TGeoPgon(const TGeoPgon&); TGeoPgon(Double_t phi, Double_t dphi, Int_t nedges, Int_t nz); TGeoPgon(const char* name, Double_t phi, Double_t dphi, Int_t nedges, Int_t nz); virtual~TGeoPgon(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTGeoPcon::DefineSection(Int_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPgon.html:1443,Clear,Clear,1443,root/html532/TGeoPgon.html,https://root.cern,https://root.cern/root/html532/TGeoPgon.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoPolygon(); TGeoPolygon(Int_t nvert); TGeoPolygon(const TGeoPolygon&); virtual~TGeoPolygon(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); Double_tArea() const; virtual voidTObject::Browse(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoPolygon.html:2106,Clear,Clear,2106,root/html528/TGeoPolygon.html,https://root.cern,https://root.cern/root/html528/TGeoPolygon.html,3,['Clear'],['Clear']
Usability," TGeoPolygon(); TGeoPolygon(Int_t nvert); TGeoPolygon(const TGeoPolygon&); virtual~TGeoPolygon(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); Double_tArea() const; virtual voidTObject::Browse(TBrows",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPolygon.html:2100,Clear,Clear,2100,root/html534/TGeoPolygon.html,https://root.cern,https://root.cern/root/html534/TGeoPolygon.html,1,['Clear'],['Clear']
Usability," TGeoRCExtension(); TGeoRCExtension(TObject* obj); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoRCExtension.html:1040,Clear,Clear,1040,root/html534/TGeoRCExtension.html,https://root.cern,https://root.cern/root/html534/TGeoRCExtension.html,1,['Clear'],['Clear']
Usability," TGeoScaledShape(); TGeoScaledShape(const TGeoScaledShape&); TGeoScaledShape(TGeoShape* shape, TGeoScale* scale); TGeoScaledShape(const char* name, TGeoShape* shape, TGeoScale* scale); virtual~TGeoScaledShape(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); virtual voidComputeNormal_v(const Double_t* points, const Double_t* dirs, Double_t* norms, Int_t vecsize); virtual Bool_tContains(const Double_t* point) const; virtual voidContains_v(const Double_t* points, Bool_t* inside, Int_t vecsize) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(const Double_t* point, const Double_t* dir) const; virtual voidTGeoShape::CreateThreadData(Int_t); virtual voidTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoScaledShape.html:1195,Clear,Clear,1195,root/html534/TGeoScaledShape.html,https://root.cern,https://root.cern/root/html534/TGeoScaledShape.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoScaledShape(); TGeoScaledShape(const TGeoScaledShape&); TGeoScaledShape(TGeoShape* shape, TGeoScale* scale); TGeoScaledShape(const char* name, TGeoShape* shape, TGeoScale* scale); virtual~TGeoScaledShape(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; virtual Double_tDistFromOutside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; static Double_tTGeoShape::DistToPhiMin(Double_t* point, Double_t* dir, Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoScaledShape.html:1067,Clear,Clear,1067,root/html528/TGeoScaledShape.html,https://root.cern,https://root.cern/root/html528/TGeoScaledShape.html,1,['Clear'],['Clear']
Usability," TGeoScaledShape(); TGeoScaledShape(const TGeoScaledShape&); TGeoScaledShape(TGeoShape* shape, TGeoScale* scale); TGeoScaledShape(const char* name, TGeoShape* shape, TGeoScale* scale); virtual~TGeoScaledShape(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; virtual Double_tDistFromOutside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoScaledShape.html:1155,Clear,Clear,1155,root/html530/TGeoScaledShape.html,https://root.cern,https://root.cern/root/html530/TGeoScaledShape.html,1,['Clear'],['Clear']
Usability," TGeoScaledShape(); TGeoScaledShape(const TGeoScaledShape&); TGeoScaledShape(TGeoShape* shape, TGeoScale* scale); TGeoScaledShape(const char* name, TGeoShape* shape, TGeoScale* scale); virtual~TGeoScaledShape(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; virtual Double_tDistFromOutside(Double_t* point, Double_t* dir, Int_t iact = 1, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoScaledShape.html:1155,Clear,Clear,1155,root/html532/TGeoScaledShape.html,https://root.cern,https://root.cern/root/html532/TGeoScaledShape.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoShapeAssembly(); TGeoShapeAssembly(TGeoVolumeAssembly* vol); TGeoShapeAssembly(const TGeoShapeAssembly&); virtual~TGeoShapeAssembly(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tTGeoBBox::Capacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); virtual voidComputeNormal_v(const Double_t* points, const Double_t* dirs, Double_t* norms, Int_t vecsize); virtual Bool_tContains(const Double_t* point) const; virtual voidContains_v(const Double_t* points, Bool_t* inside, Int_t vecsize) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(const Double_t* point, const Double_t* dir) const; virtual voidTGeoShape::CreateThreadData(Int_t); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoShapeAssembly.html:1143,Clear,Clear,1143,root/html534/TGeoShapeAssembly.html,https://root.cern,https://root.cern/root/html534/TGeoShapeAssembly.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoShapeAssembly(); TGeoShapeAssembly(TGeoVolumeAssembly* vol); TGeoShapeAssembly(const TGeoShapeAssembly&); virtual~TGeoShapeAssembly(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tTGeoBBox::Capacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; virtual Double_tDistFromOutside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; static Double_tTGeoShape::DistToPhiMin(Double_t* point, Double_t* dir, Double_t s1, Double_t c1, Double_t s2, Double_t c2, Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoShapeAssembly.html:1015,Clear,Clear,1015,root/html528/TGeoShapeAssembly.html,https://root.cern,https://root.cern/root/html528/TGeoShapeAssembly.html,1,['Clear'],['Clear']
Usability," TGeoShapeAssembly(); TGeoShapeAssembly(TGeoVolumeAssembly* vol); TGeoShapeAssembly(const TGeoShapeAssembly&); virtual~TGeoShapeAssembly(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tTGeoBBox::Capacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; virtual Double_tDistFromOutside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; static Double_tTGeoShape::DistToPhiMin(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoShapeAssembly.html:1103,Clear,Clear,1103,root/html530/TGeoShapeAssembly.html,https://root.cern,https://root.cern/root/html530/TGeoShapeAssembly.html,1,['Clear'],['Clear']
Usability," TGeoShapeAssembly(); TGeoShapeAssembly(TGeoVolumeAssembly* vol); TGeoShapeAssembly(const TGeoShapeAssembly&); virtual~TGeoShapeAssembly(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tTGeoBBox::Capacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; virtual Double_tDistFromOutside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoShapeAssembly.html:1103,Clear,Clear,1103,root/html532/TGeoShapeAssembly.html,https://root.cern,https://root.cern/root/html532/TGeoShapeAssembly.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoSphere(); TGeoSphere(const TGeoSphere&); TGeoSphere(Double_t* param, Int_t nparam = 6); TGeoSphere(Double_t rmin, Double_t rmax, Double_t theta1 = 0, Double_t theta2 = 180, Double_t phi1 = 0, Double_t phi2 = 360); TGeoSphere(const char* name, Double_t rmin, Double_t rmax, Double_t theta1 = 0, Double_t theta2 = 180, Double_t phi1 = 0, Double_t phi2 = 360); virtual~TGeoSphere(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); virtual voidComputeNormal_v(const Double_t* points, const Double_t* dirs, Double_t* norms, Int_t vecsize); virtual Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoSphere.html:1526,Clear,Clear,1526,root/html534/TGeoSphere.html,https://root.cern,https://root.cern/root/html534/TGeoSphere.html,1,['Clear'],['Clear']
Usability," TGeoSphere(); TGeoSphere(const TGeoSphere&); TGeoSphere(Double_t* param, Int_t nparam = 6); TGeoSphere(Double_t rmin, Double_t rmax, Double_t theta1 = 0, Double_t theta2 = 180, Double_t phi1 = 0, Double_t phi2 = 360); TGeoSphere(const char* name, Double_t rmin, Double_t rmax, Double_t theta1 = 0, Double_t theta2 = 180, Double_t phi1 = 0, Double_t phi2 = 360); virtual~TGeoSphere(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoSphere.html:1398,Clear,Clear,1398,root/html528/TGeoSphere.html,https://root.cern,https://root.cern/root/html528/TGeoSphere.html,1,['Clear'],['Clear']
Usability," TGeoSphere(); TGeoSphere(const TGeoSphere&); TGeoSphere(Double_t* param, Int_t nparam = 6); TGeoSphere(Double_t rmin, Double_t rmax, Double_t theta1 = 0, Double_t theta2 = 180, Double_t phi1 = 0, Double_t phi2 = 360); TGeoSphere(const char* name, Double_t rmin, Double_t rmax, Double_t theta1 = 0, Double_t theta2 = 180, Double_t phi1 = 0, Double_t phi2 = 360); virtual~TGeoSphere(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoSphere.html:1486,Clear,Clear,1486,root/html530/TGeoSphere.html,https://root.cern,https://root.cern/root/html530/TGeoSphere.html,1,['Clear'],['Clear']
Usability," TGeoSphere(); TGeoSphere(const TGeoSphere&); TGeoSphere(Double_t* param, Int_t nparam = 6); TGeoSphere(Double_t rmin, Double_t rmax, Double_t theta1 = 0, Double_t theta2 = 180, Double_t phi1 = 0, Double_t phi2 = 360); TGeoSphere(const char* name, Double_t rmin, Double_t rmax, Double_t theta1 = 0, Double_t theta2 = 180, Double_t phi1 = 0, Double_t phi2 = 360); virtual~TGeoSphere(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoSphere.html:1486,Clear,Clear,1486,root/html532/TGeoSphere.html,https://root.cern,https://root.cern/root/html532/TGeoSphere.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoSphere(const TGeoSphere&); TGeoSphere(Double_t* param, Int_t nparam = 6); TGeoSphere(Double_t rmin, Double_t rmax, Double_t theta1 = 0, Double_t theta2 = 180, Double_t phi1 = 0, Double_t phi2 = 360); TGeoSphere(const char* name, Double_t rmin, Double_t rmax, Double_t theta1 = 0, Double_t theta2 = 180, Double_t phi1 = 0, Double_t phi2 = 360); virtual~TGeoSphere(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); virtual voidComputeNormal_v(const Double_t* points, const Double_t* dirs, Double_t* norms, Int_t vecsize); virtual Bool_tContains(const Double_t* point) const; virtual voidContains_v(const Double_t* points, Bool_t* inside, Int_t vecsize) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(const Double_t* point, const Double_t* dir) const; virtual voidTGeoShape::CreateThreadData(Int_t); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(const Double_t* point, const Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; virtual voidD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoSphere.html:1579,Clear,ClearThreadData,1579,root/html534/TGeoSphere.html,https://root.cern,https://root.cern/root/html534/TGeoSphere.html,1,['Clear'],['ClearThreadData']
Usability," TGeoSubtraction(); TGeoSubtraction(const char* expr1, const char* expr2); TGeoSubtraction(TGeoShape* left, TGeoShape* right, TGeoMatrix* lmat = 0, TGeoMatrix* rmat = 0); virtual~TGeoSubtraction(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidComputeBBox(Double_t& dx, Double_t& dy, Double_t& dz, Double_t* origin); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoSubtraction.html:1698,Clear,Clear,1698,root/html528/TGeoSubtraction.html,https://root.cern,https://root.cern/root/html528/TGeoSubtraction.html,2,['Clear'],['Clear']
Usability," TGeoSubtraction(); TGeoSubtraction(const char* expr1, const char* expr2); TGeoSubtraction(TGeoShape* left, TGeoShape* right, TGeoMatrix* lmat = 0, TGeoMatrix* rmat = 0); virtual~TGeoSubtraction(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoBoolNode::ClearThreadData() const; virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidComputeBBox(Double_t& dx, Double_t& dy, Double_t& dz, Double_t* origin); virtual voidComputeNormal(Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoSubtraction.html:1698,Clear,Clear,1698,root/html532/TGeoSubtraction.html,https://root.cern,https://root.cern/root/html532/TGeoSubtraction.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoSubtraction(); TGeoSubtraction(const char* expr1, const char* expr2); TGeoSubtraction(TGeoShape* left, TGeoShape* right, TGeoMatrix* lmat = 0, TGeoMatrix* rmat = 0); virtual~TGeoSubtraction(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoBoolNode::ClearThreadData() const; virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidComputeBBox(Double_t& dx, Double_t& dy, Double_t& dz, Double_t* origin); virtual voidComputeNormal(const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoSubtraction.html:1698,Clear,Clear,1698,root/html534/TGeoSubtraction.html,https://root.cern,https://root.cern/root/html534/TGeoSubtraction.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoTabManager(TGedEditor* ged); virtual~TGeoTabManager(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; static voidCleanup(TGCompositeFrame* frame); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoTabManager.html:1274,Clear,Clear,1274,root/html528/TGeoTabManager.html,https://root.cern,https://root.cern/root/html528/TGeoTabManager.html,4,['Clear'],['Clear']
Usability," TGeoTorus(); TGeoTorus(Double_t* params); TGeoTorus(const TGeoTorus&); TGeoTorus(Double_t r, Double_t rmin, Double_t rmax, Double_t phi1 = 0, Double_t dphi = 360); TGeoTorus(const char* name, Double_t r, Double_t rmin, Double_t rmax, Double_t phi1 = 0, Double_t dphi = 360); virtual~TGeoTorus(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); virtual voidComputeNormal_v(const Double_t* points, const Double_t* dirs, Double_t* norms, Int_t vecsize); virtual Bool_tContains(const Double_t* point) const; virtual voidContains_v(const Double_t* points, Bool_t* inside, Int_t vecsize) const; virtual voidTNamed::Copy(TObject& named) const; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoTorus.html:1351,Clear,Clear,1351,root/html534/TGeoTorus.html,https://root.cern,https://root.cern/root/html534/TGeoTorus.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoTorus(); TGeoTorus(Double_t* params); TGeoTorus(const TGeoTorus&); TGeoTorus(Double_t r, Double_t rmin, Double_t rmax, Double_t phi1 = 0, Double_t dphi = 360); TGeoTorus(const char* name, Double_t r, Double_t rmin, Double_t rmax, Double_t phi1 = 0, Double_t dphi = 360); virtual~TGeoTorus(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; Double_tDaxis(Double_t* pt, Double_t* dir, Double_t t) const; Double_tDDaxis(Double_t* pt, Double_t* dir, Double_t t) const; Double_tDDDaxis(Double_t* pt, Double_t* dir, Double_t t) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoTorus.html:1223,Clear,Clear,1223,root/html528/TGeoTorus.html,https://root.cern,https://root.cern/root/html528/TGeoTorus.html,1,['Clear'],['Clear']
Usability," TGeoTorus(); TGeoTorus(Double_t* params); TGeoTorus(const TGeoTorus&); TGeoTorus(Double_t r, Double_t rmin, Double_t rmax, Double_t phi1 = 0, Double_t dphi = 360); TGeoTorus(const char* name, Double_t r, Double_t rmin, Double_t rmax, Double_t phi1 = 0, Double_t dphi = 360); virtual~TGeoTorus(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; Double_tDaxis(Double_t* pt, Double_t* dir, Double_t t) const; Double_tDDaxis(Double_t* pt, Double_t* dir, Double_t t) const; Double_tDDDaxis(Double_t* pt, Double_t* dir, Double_t t) const; virtual voidTObject::Delete(Option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoTorus.html:1311,Clear,Clear,1311,root/html530/TGeoTorus.html,https://root.cern,https://root.cern/root/html530/TGeoTorus.html,1,['Clear'],['Clear']
Usability," TGeoTorus(); TGeoTorus(Double_t* params); TGeoTorus(const TGeoTorus&); TGeoTorus(Double_t r, Double_t rmin, Double_t rmax, Double_t phi1 = 0, Double_t dphi = 360); TGeoTorus(const char* name, Double_t r, Double_t rmin, Double_t rmax, Double_t phi1 = 0, Double_t dphi = 360); virtual~TGeoTorus(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; Double_tDaxis(Double_t* pt, Double_t* dir, Double_t t) const; Double_tDDaxis(Double_t* pt, Double_t* dir, Double_t t) const; Double_tDDDaxis(Double_t* pt, Double_t* dir, Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoTorus.html:1311,Clear,Clear,1311,root/html532/TGeoTorus.html,https://root.cern,https://root.cern/root/html532/TGeoTorus.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoTrack(); TGeoTrack(Int_t id, Int_t pdgcode, TVirtualGeoTrack* parent = 0, TObject* particle = 0); virtual~TGeoTrack(); voidTObject::AbstractMethod(const char* method) const; virtual Int_tAddDaughter(TVirtualGeoTrack* other); virtual TVirtualGeoTrack*AddDaughter(Int_t id, Int_t pdgcode, TObject* particle = 0); virtual voidAddPoint(Double_t x, Double_t y, Double_t z, Double_t t); virtual voidAnimateTrack(Double_t tmin = 0, Double_t tmax = 5E-8, Double_t nframes = 200, Option_t* option = ""/*"")MENU ; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """")MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoTrack.html:1274,Clear,Clear,1274,root/html528/TGeoTrack.html,https://root.cern,https://root.cern/root/html528/TGeoTrack.html,4,['Clear'],['Clear']
Usability," TGeoTrap(); TGeoTrap(const TGeoTrap&); TGeoTrap(Double_t dz, Double_t theta, Double_t phi); TGeoTrap(Double_t dz, Double_t theta, Double_t phi, Double_t h1, Double_t bl1, Double_t tl1, Double_t alpha1, Double_t h2, Double_t bl2, Double_t tl2, Double_t alpha2); TGeoTrap(const char* name, Double_t dz, Double_t theta, Double_t phi, Double_t h1, Double_t bl1, Double_t tl1, Double_t alpha1, Double_t h2, Double_t bl2, Double_t tl2, Double_t alpha2); virtual~TGeoTrap(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Bro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoTrap.html:2153,Clear,Clear,2153,root/html528/TGeoTrap.html,https://root.cern,https://root.cern/root/html528/TGeoTrap.html,1,['Clear'],['Clear']
Usability," TGeoTrd1(); TGeoTrd1(Double_t* params); TGeoTrd1(const TGeoTrd1&); TGeoTrd1(Double_t dx1, Double_t dx2, Double_t dy, Double_t dz); TGeoTrd1(const char* name, Double_t dx1, Double_t dx2, Double_t dy, Double_t dz); virtual~TGeoTrd1(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); virtual voidComputeNormal_v(const Double_t* points, const Double_t* dirs, Double_t* norms, Int_t vecsize); virtual Bool_tContains(const Double_t* point) const; virtual voidContains_v(const Double_t* points, Bool_t* inside, Int_t vecsize) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoTrd1.html:1316,Clear,Clear,1316,root/html534/TGeoTrd1.html,https://root.cern,https://root.cern/root/html534/TGeoTrd1.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoTrd1(); TGeoTrd1(Double_t* params); TGeoTrd1(const TGeoTrd1&); TGeoTrd1(Double_t dx1, Double_t dx2, Double_t dy, Double_t dz); TGeoTrd1(const char* name, Double_t dx1, Double_t dx2, Double_t dy, Double_t dz); virtual~TGeoTrd1(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTGeoBBox::DistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; virtual Double_tDistFromOutside(Double_t* point, Double_t* dir, Int_t iact = 1, Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoTrd1.html:1188,Clear,Clear,1188,root/html528/TGeoTrd1.html,https://root.cern,https://root.cern/root/html528/TGeoTrd1.html,1,['Clear'],['Clear']
Usability," TGeoTrd1(); TGeoTrd1(Double_t* params); TGeoTrd1(const TGeoTrd1&); TGeoTrd1(Double_t dx1, Double_t dx2, Double_t dy, Double_t dz); TGeoTrd1(const char* name, Double_t dx1, Double_t dx2, Double_t dy, Double_t dz); virtual~TGeoTrd1(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTGeoBBox::DistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoTrd1.html:1276,Clear,Clear,1276,root/html530/TGeoTrd1.html,https://root.cern,https://root.cern/root/html530/TGeoTrd1.html,1,['Clear'],['Clear']
Usability," TGeoTrd1(); TGeoTrd1(Double_t* params); TGeoTrd1(const TGeoTrd1&); TGeoTrd1(Double_t dx1, Double_t dx2, Double_t dy, Double_t dz); TGeoTrd1(const char* name, Double_t dx1, Double_t dx2, Double_t dy, Double_t dz); virtual~TGeoTrd1(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTGeoBBox::DistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoTrd1.html:1276,Clear,Clear,1276,root/html532/TGeoTrd1.html,https://root.cern,https://root.cern/root/html532/TGeoTrd1.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoTrd2(); TGeoTrd2(Double_t* params); TGeoTrd2(const TGeoTrd2&); TGeoTrd2(Double_t dx1, Double_t dx2, Double_t dy1, Double_t dy2, Double_t dz); TGeoTrd2(const char* name, Double_t dx1, Double_t dx2, Double_t dy1, Double_t dy2, Double_t dz); virtual~TGeoTrd2(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(const Double_t* point, const Double_t* dir, Double_t* norm); virtual voidComputeNormal_v(const Double_t* points, const Double_t* dirs, Double_t* norms, Int_t vecsize); virtual Bool_tContains(const Double_t* point) const; virtual voidContains_v(const Double_t* points, Bool_t* inside, Int_t vecsize) const; virtual voidTNamed::Copy(TObject& named) cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoTrd2.html:1357,Clear,Clear,1357,root/html534/TGeoTrd2.html,https://root.cern,https://root.cern/root/html534/TGeoTrd2.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoTrd2(); TGeoTrd2(Double_t* params); TGeoTrd2(const TGeoTrd2&); TGeoTrd2(Double_t dx1, Double_t dx2, Double_t dy1, Double_t dy2, Double_t dz); TGeoTrd2(const char* name, Double_t dx1, Double_t dx2, Double_t dy1, Double_t dy2, Double_t dz); virtual~TGeoTrd2(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTGeoBBox::DistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; virtual Double_tDistFromOutside(Double_t* po",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoTrd2.html:1229,Clear,Clear,1229,root/html528/TGeoTrd2.html,https://root.cern,https://root.cern/root/html528/TGeoTrd2.html,1,['Clear'],['Clear']
Usability," TGeoTrd2(); TGeoTrd2(Double_t* params); TGeoTrd2(const TGeoTrd2&); TGeoTrd2(Double_t dx1, Double_t dx2, Double_t dy1, Double_t dy2, Double_t dz); TGeoTrd2(const char* name, Double_t dx1, Double_t dx2, Double_t dy1, Double_t dy2, Double_t dz); virtual~TGeoTrd2(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTGeoBBox::DistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, Double_t* dir, Int_t iact = 1, Double_t step = T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoTrd2.html:1317,Clear,Clear,1317,root/html530/TGeoTrd2.html,https://root.cern,https://root.cern/root/html530/TGeoTrd2.html,1,['Clear'],['Clear']
Usability," TGeoTrd2(); TGeoTrd2(Double_t* params); TGeoTrd2(const TGeoTrd2&); TGeoTrd2(Double_t dx1, Double_t dx2, Double_t dy1, Double_t dy2, Double_t dz); TGeoTrd2(const char* name, Double_t dx1, Double_t dx2, Double_t dy1, Double_t dy2, Double_t dz); virtual~TGeoTrd2(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tTGeoBBox::CouldBeCrossed(Double_t* point, Double_t* dir) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTGeoBBox::DistancetoPrimitive(Int_t px, Int_t py); virtual Double_tDistFromInside(Double_t* point, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoTrd2.html:1317,Clear,Clear,1317,root/html532/TGeoTrd2.html,https://root.cern,https://root.cern/root/html532/TGeoTrd2.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoTube(); TGeoTube(Double_t* params); TGeoTube(const TGeoTube&); TGeoTube(Double_t rmin, Double_t rmax, Double_t dz); TGeoTube(const char* name, Double_t rmin, Double_t rmax, Double_t dz); virtual~TGeoTube(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGeoShape::AfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static Double_tCapacity(Double_t rmin, Double_t rmax, Double_t dz); voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoTube.html:1877,Clear,Clear,1877,root/html534/TGeoTube.html,https://root.cern,https://root.cern/root/html534/TGeoTube.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoTube(); TGeoTube(Double_t* params); TGeoTube(const TGeoTube&); TGeoTube(Double_t rmin, Double_t rmax, Double_t dz); TGeoTube(const char* name, Double_t rmin, Double_t rmax, Double_t dz); virtual~TGeoTube(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static Double_tCapacity(Double_t rmin, Double_t rmax, Double_t dz); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); static voidComputeNormalS(Double_t* point, Double_t* dir, Double_t* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoTube.html:1639,Clear,Clear,1639,root/html528/TGeoTube.html,https://root.cern,https://root.cern/root/html528/TGeoTube.html,1,['Clear'],['Clear']
Usability," TGeoTube(); TGeoTube(Double_t* params); TGeoTube(const TGeoTube&); TGeoTube(Double_t rmin, Double_t rmax, Double_t dz); TGeoTube(const char* name, Double_t rmin, Double_t rmax, Double_t dz); virtual~TGeoTube(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static Double_tCapacity(Double_t rmin, Double_t rmax, Double_t dz); voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNormal(Double_t* point, Double_t* di",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoTube.html:1727,Clear,Clear,1727,root/html530/TGeoTube.html,https://root.cern,https://root.cern/root/html530/TGeoTube.html,1,['Clear'],['Clear']
Usability," TGeoTube(); TGeoTube(Double_t* params); TGeoTube(const TGeoTube&); TGeoTube(Double_t rmin, Double_t rmax, Double_t dz); TGeoTube(const char* name, Double_t rmin, Double_t rmax, Double_t dz); virtual~TGeoTube(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static Double_tCapacity(Double_t rmin, Double_t rmax, Double_t dz); voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoTube.html:1727,Clear,Clear,1727,root/html532/TGeoTube.html,https://root.cern,https://root.cern/root/html532/TGeoTube.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoTubeSeg(); TGeoTubeSeg(Double_t* params); TGeoTubeSeg(const TGeoTubeSeg&); TGeoTubeSeg(Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2); TGeoTubeSeg(const char* name, Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2); virtual~TGeoTubeSeg(); voidTObject::AbstractMethod(const char* method) const; virtual voidAfterStreamer(); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static Double_tCapacity(Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2); voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoTubeSeg.html:1986,Clear,Clear,1986,root/html534/TGeoTubeSeg.html,https://root.cern,https://root.cern/root/html534/TGeoTubeSeg.html,1,['Clear'],['Clear']
Usability," TGeoTubeSeg(); TGeoTubeSeg(Double_t* params); TGeoTubeSeg(const TGeoTubeSeg&); TGeoTubeSeg(Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2); TGeoTubeSeg(const char* name, Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2); virtual~TGeoTubeSeg(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static Double_tCapacity(Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidComputeBBox(); static Double_tTGeoShape::ComputeEpsMch(); virtual voidComputeNorm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoTubeSeg.html:1759,Clear,Clear,1759,root/html528/TGeoTubeSeg.html,https://root.cern,https://root.cern/root/html528/TGeoTubeSeg.html,1,['Clear'],['Clear']
Usability," TGeoTubeSeg(); TGeoTubeSeg(Double_t* params); TGeoTubeSeg(const TGeoTubeSeg&); TGeoTubeSeg(Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2); TGeoTubeSeg(const char* name, Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2); virtual~TGeoTubeSeg(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static Double_tCapacity(Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2); voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoTubeSeg.html:1847,Clear,Clear,1847,root/html530/TGeoTubeSeg.html,https://root.cern,https://root.cern/root/html530/TGeoTubeSeg.html,1,['Clear'],['Clear']
Usability," TGeoTubeSeg(); TGeoTubeSeg(Double_t* params); TGeoTubeSeg(const TGeoTubeSeg&); TGeoTubeSeg(Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2); TGeoTubeSeg(const char* name, Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2); virtual~TGeoTubeSeg(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTGeoBBox::AreOverlapping(const TGeoBBox* box1, const TGeoMatrix* mat1, const TGeoBBox* box2, const TGeoMatrix* mat2); static Double_tTGeoShape::Big(); virtual voidTObject::Browse(TBrowser* b); virtual Double_tCapacity() const; static Double_tCapacity(Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2); voidTGeoShape::CheckShape(Int_t testNo, Int_t nsamples = 10000, Option_t* option = """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual voidTGeoShape::ClearThreadData() const; virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoTubeSeg.html:1847,Clear,Clear,1847,root/html532/TGeoTubeSeg.html,https://root.cern,https://root.cern/root/html532/TGeoTubeSeg.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoUniformMagField(); TGeoUniformMagField(Double_t Bx, Double_t By, Double_t Bz); virtual~TGeoUniformMagField(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidField(const Double_t*, Double_t* B); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoUniformMagField.html:785,Clear,Clear,785,root/html528/TGeoUniformMagField.html,https://root.cern,https://root.cern/root/html528/TGeoUniformMagField.html,4,['Clear'],['Clear']
Usability," TGeoUnion(); TGeoUnion(const char* expr1, const char* expr2); TGeoUnion(TGeoShape* left, TGeoShape* right, TGeoMatrix* lmat = 0, TGeoMatrix* rmat = 0); virtual~TGeoUnion(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidComputeBBox(Double_t& dx, Double_t& dy, Double_t& dz, Double_t* origin); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm); virtual Bool_tContains(Double_t* point) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoUnion.html:1656,Clear,Clear,1656,root/html528/TGeoUnion.html,https://root.cern,https://root.cern/root/html528/TGeoUnion.html,2,['Clear'],['Clear']
Usability," TGeoUnion(); TGeoUnion(const char* expr1, const char* expr2); TGeoUnion(TGeoShape* left, TGeoShape* right, TGeoMatrix* lmat = 0, TGeoMatrix* rmat = 0); virtual~TGeoUnion(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoBoolNode::ClearThreadData() const; virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidComputeBBox(Double_t& dx, Double_t& dy, Double_t& dz, Double_t* origin); virtual voidComputeNormal(Double_t* point, Double_t* dir, Double_t* norm)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoUnion.html:1656,Clear,Clear,1656,root/html532/TGeoUnion.html,https://root.cern,https://root.cern/root/html532/TGeoUnion.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoUnion(); TGeoUnion(const char* expr1, const char* expr2); TGeoUnion(TGeoShape* left, TGeoShape* right, TGeoMatrix* lmat = 0, TGeoMatrix* rmat = 0); virtual~TGeoUnion(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidTGeoBoolNode::ClearThreadData() const; virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidComputeBBox(Double_t& dx, Double_t& dy, Double_t& dz, Double_t* origin); virtual voidComputeNormal(const Double_t* point, const Double_t* dir, Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoUnion.html:1656,Clear,Clear,1656,root/html534/TGeoUnion.html,https://root.cern,https://root.cern/root/html534/TGeoUnion.html,2,['Clear'],"['Clear', 'ClearThreadData']"
Usability," TGeoVolume * ; vol, . Int_t ; copy_no, . TGeoMatrix * ; mat = nullptr, . Option_t * ; option = """" . ). overridevirtual . Add a component to the assembly. ; Reimplemented from TGeoVolume.; Definition at line 2978 of file TGeoVolume.cxx. ◆ AddNodeOverlap(). void TGeoVolumeAssembly::AddNodeOverlap ; (; TGeoVolume * ; vol, . Int_t ; copy_no, . TGeoMatrix * ; mat, . Option_t * ; option . ). overridevirtual . Add an overlapping node - not allowed for assemblies. ; Reimplemented from TGeoVolume.; Definition at line 2989 of file TGeoVolume.cxx. ◆ Class(). static TClass * TGeoVolumeAssembly::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoVolumeAssembly::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoVolumeAssembly::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 359 of file TGeoVolume.h. ◆ ClearThreadData(). void TGeoVolumeAssembly::ClearThreadData ; (; ); const. overridevirtual . Reimplemented from TGeoVolume.; Definition at line 2884 of file TGeoVolume.cxx. ◆ CloneVolume(). TGeoVolume * TGeoVolumeAssembly::CloneVolume ; (; ); const. overridevirtual . Clone this volume. ; build a volume with same name, shape and medium ; Reimplemented from TGeoVolume.; Definition at line 3001 of file TGeoVolume.cxx. ◆ CreateThreadData(). void TGeoVolumeAssembly::CreateThreadData ; (; Int_t ; nthreads). overridevirtual . Reimplemented from TGeoVolume.; Definition at line 2899 of file TGeoVolume.cxx. ◆ DeclFileName(). static const char * TGeoVolumeAssembly::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 359 of file TGeoVolume.h. ◆ Divide() [1/2]. TGeoVolume * TGeoVolumeAssembly::Divide ; (; const char * ; divname, . Int_t ; iaxis, . Int_t ; ndiv, . Double_t ; start, . Double_t ; step, . Int_t ; numed = 0, . Option_t * ; option = """" . ). overridevirtual . Division make",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolumeAssembly.html:32598,Clear,ClearThreadData,32598,doc/master/classTGeoVolumeAssembly.html,https://root.cern,https://root.cern/doc/master/classTGeoVolumeAssembly.html,1,['Clear'],['ClearThreadData']
Usability," TGeoVoxelFinder(); TGeoVoxelFinder(TGeoVolume* vol); virtual~TGeoVoxelFinder(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidCreateCheckList(); voidDaughterToMother(Int_t id, Double_t* local, Double_t* master) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual Double_tEfficiency(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFindOverlaps(Int_t inode) const; Double_t*GetBoxes() const; Int_t*GetCheckList(Int_t& nelem) const; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoVoxelFinder.html:719,Clear,Clear,719,root/html528/TGeoVoxelFinder.html,https://root.cern,https://root.cern/root/html528/TGeoVoxelFinder.html,2,['Clear'],['Clear']
Usability," TGeoVoxelFinder(); TGeoVoxelFinder(TGeoVolume* vol); virtual~TGeoVoxelFinder(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; voidDaughterToMother(Int_t id, const Double_t* local, Double_t* master) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual Double_tEfficiency(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFindOverlaps(Int_t inode) const; Double_t*GetBoxes() const; Int_t*GetCheckList(Int_t& nelem, TGeoStateInfo& td) const; virtual Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoVoxelFinder.html:719,Clear,Clear,719,root/html534/TGeoVoxelFinder.html,https://root.cern,https://root.cern/root/html534/TGeoVoxelFinder.html,1,['Clear'],['Clear']
Usability," TGeoVoxelFinder(); TGeoVoxelFinder(TGeoVolume* vol); virtual~TGeoVoxelFinder(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidClearThreadData() const; virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidCreateCheckList(Int_t tid = 0); voidDaughterToMother(Int_t id, Double_t* local, Double_t* master) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual Double_tEfficiency(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFindOverlaps(Int_t inode) const; Double_t*GetBoxes() const; Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoVoxelFinder.html:719,Clear,Clear,719,root/html532/TGeoVoxelFinder.html,https://root.cern,https://root.cern/root/html532/TGeoVoxelFinder.html,1,['Clear'],['Clear']
Usability," TGlobal(DataMemberInfo_t* info = 0); TGlobal(const TGlobal&); virtual~TGlobal(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; void*GetAddress() const; Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGlobal.html:891,Clear,Clear,891,root/html528/TGlobal.html,https://root.cern,https://root.cern/root/html528/TGlobal.html,3,['Clear'],['Clear']
Usability," TGlobal(DataMemberInfo_t* info = 0); TGlobal(const TGlobal&); virtual~TGlobal(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidTDictionary::CreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* ob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGlobal.html:891,Clear,Clear,891,root/html534/TGlobal.html,https://root.cern,https://root.cern/root/html534/TGlobal.html,1,['Clear'],['Clear']
Usability," TGondzioSolver(); TGondzioSolver(const TGondzioSolver& another); TGondzioSolver(TQpProbBase* of, TQpDataBase* prob, Int_t verbose = 0); virtual~TGondzioSolver(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; Double_tTQpSolverBase::DataNorm(); virtual voidDefMonitor(TQpDataBase* data, TQpVar* vars, TQpResidual* resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t status_code, Int_t level); virtual voidTQpSolverBase::DefStart(TQpProbBase* formulation, TQpVar* iterate, TQpDataBase* prob, TQpResidual* resid, TQpVar* step); virtual Int_tTQpSolverBase::DefStatus(TQpDataBase* data, TQpVar* vars, TQpResidual* resids, Int_t i, Double_t mu, Int_t level); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTQpSolverBase::DoMonitor(TQpDataBase* data, TQpVar* vars, TQpResidual* resids, Double_t alpha, Double_t sigma, Int_t i, Double_t mu, Int_t stop_code, Int_t level); virtual Int_tTQpSolverBase::DoStatus(TQpDataBase* data, TQpVar* vars, TQpResidual* resids, Int_t i, Double_t mu, Int_t level); virtual voidTObject::Draw(Opti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGondzioSolver.html:894,Clear,Clear,894,root/html528/TGondzioSolver.html,https://root.cern,https://root.cern/root/html528/TGondzioSolver.html,4,['Clear'],['Clear']
Usability," TGraph(); TGraph(Int_t n); TGraph(const TGraph& gr); TGraph(const TH1* h); TGraph(const TVectorF& vx, const TVectorF& vy); TGraph(const TVectorD& vx, const TVectorD& vy); TGraph(const TF1* f, Option_t* option = """"); TGraph(Int_t n, const Int_t* x, const Int_t* y); TGraph(Int_t n, const Float_t* x, const Float_t* y); TGraph(Int_t n, const Double_t* x, const Double_t* y); TGraph(const char* filename, const char* format = ""%lg %lg"", Option_t* option = """"); virtual~TGraph(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidApply(TF1* f); virtual voidBrowse(TBrowser* b); virtual Double_tChisquare(const TF1* f1) const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; static Bool_tCompareArg(const TGraph* gr, Int_t left, Int_t right); static Bool_tCompareRadius(const TGraph* gr, Int_t left, Int_t right); static Bool_tCompareX(const ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGraph.html:1685,Clear,Clear,1685,root/html530/TGraph.html,https://root.cern,https://root.cern/root/html530/TGraph.html,2,['Clear'],['Clear']
Usability," TGraph(); TGraph(Int_t n); TGraph(const TGraph& gr); TGraph(const TH1* h); TGraph(const TVectorF& vx, const TVectorF& vy); TGraph(const TVectorD& vx, const TVectorD& vy); TGraph(const TF1* f, Option_t* option = """"); TGraph(Int_t n, const Int_t* x, const Int_t* y); TGraph(Int_t n, const Float_t* x, const Float_t* y); TGraph(Int_t n, const Double_t* x, const Double_t* y); TGraph(const char* filename, const char* format = ""%lg %lg"", Option_t* option = """"); virtual~TGraph(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidApply(TF1* f); virtual voidBrowse(TBrowser* b); virtual Double_tChisquare(const TF1* f1) const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; static Bool_tCompareArg(const TGraph* gr, Int_t left, Int_t right); static Bool_tCompareRadius(const TGraph* gr, Int_t left, Int_t right); static Bool_tCompareX(const T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraph.html:1684,Clear,Clear,1684,root/html528/TGraph.html,https://root.cern,https://root.cern/root/html528/TGraph.html,1,['Clear'],['Clear']
Usability," TGraph(); TGraph(Int_t n); TGraph(const TGraph& gr); TGraph(const TH1* h); TGraph(const TVectorF& vx, const TVectorF& vy); TGraph(const TVectorD& vx, const TVectorD& vy); TGraph(const TF1* f, Option_t* option = """"); TGraph(Int_t n, const Int_t* x, const Int_t* y); TGraph(Int_t n, const Float_t* x, const Float_t* y); TGraph(Int_t n, const Double_t* x, const Double_t* y); TGraph(const char* filename, const char* format = ""%lg %lg"", Option_t* option = """"); virtual~TGraph(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidApply(TF1* f); virtual voidBrowse(TBrowser* b); virtual Double_tChisquare(const TF1* f1, Option_t* option = """") const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraph.html:1906,Clear,Clear,1906,root/html534/TGraph.html,https://root.cern,https://root.cern/root/html534/TGraph.html,1,['Clear'],['Clear']
Usability," TGraph2DErrors(); TGraph2DErrors(Int_t n); TGraph2DErrors(Int_t n, Double_t* x, Double_t* y, Double_t* z, Double_t* ex = 0, Double_t* ey = 0, Double_t* ez = 0, Option_t* option = """"); virtual~TGraph2DErrors(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGraph2D::Clear(Option_t* op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGraph2DErrors.html:1983,Clear,Clear,1983,root/html530/TGraph2DErrors.html,https://root.cern,https://root.cern/root/html530/TGraph2DErrors.html,2,['Clear'],['Clear']
Usability," TGraph2DErrors(); TGraph2DErrors(Int_t n); TGraph2DErrors(Int_t n, Double_t* x, Double_t* y, Double_t* z, Double_t* ex = 0, Double_t* ey = 0, Double_t* ez = 0, Option_t* option = """"); virtual~TGraph2DErrors(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGraph2D::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTGraph2D::DirectoryAutoAdd(TDirectory*); Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTGraph2D::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTGraph2D::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTGraph2D::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TGraph2D::FindObject(const char* name) const; virtual TObject*TGraph2D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraph2DErrors.html:795,Clear,Clear,795,root/html528/TGraph2DErrors.html,https://root.cern,https://root.cern/root/html528/TGraph2DErrors.html,1,['Clear'],['Clear']
Usability," TGraph2DErrors(); TGraph2DErrors(Int_t n); TGraph2DErrors(const TGraph2DErrors&); TGraph2DErrors(Int_t n, Double_t* x, Double_t* y, Double_t* z, Double_t* ex = 0, Double_t* ey = 0, Double_t* ez = 0, Option_t* option = """"); virtual~TGraph2DErrors(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTGraph2D::Browse(TBrowser*); static TClass*Class(); virtual const char*TObject::ClassName() const; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraph2DErrors.html:2021,Clear,Clear,2021,root/html534/TGraph2DErrors.html,https://root.cern,https://root.cern/root/html534/TGraph2DErrors.html,1,['Clear'],['Clear']
Usability," TGraph2DPainter(); TGraph2DPainter(TGraphDelaunay* gd); TGraph2DPainter(const TGraph2DPainter&); virtual~TGraph2DPainter(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TList*GetContourList(Double_t contour); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraph2DPainter.html:758,Clear,Clear,758,root/html528/TGraph2DPainter.html,https://root.cern,https://root.cern/root/html528/TGraph2DPainter.html,4,['Clear'],['Clear']
Usability," TGraphBentErrors(); TGraphBentErrors(Int_t n); TGraphBentErrors(const TGraphBentErrors& gr); TGraphBentErrors(Int_t n, const Float_t* x, const Float_t* y, const Float_t* exl = 0, const Float_t* exh = 0, const Float_t* eyl = 0, const Float_t* eyh = 0, const Float_t* exld = 0, const Float_t* exhd = 0, const Float_t* eyld = 0, const Float_t* eyhd = 0); TGraphBentErrors(Int_t n, const Double_t* x, const Double_t* y, const Double_t* exl = 0, const Double_t* exh = 0, const Double_t* eyl = 0, const Do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphBentErrors.html:2475,Clear,Clear,2475,root/html528/TGraphBentErrors.html,https://root.cern,https://root.cern/root/html528/TGraphBentErrors.html,3,['Clear'],['Clear']
Usability," TGraphBentErrors(); TGraphBentErrors(Int_t n); TGraphBentErrors(const TGraphBentErrors& gr); TGraphBentErrors(Int_t n, const Float_t* x, const Float_t* y, const Float_t* exl = 0, const Float_t* exh = 0, const Float_t* eyl = 0, const Float_t* eyh = 0, const Float_t* exld = 0, const Float_t* exhd = 0, const Float_t* eyld = 0, const Float_t* eyhd = 0); TGraphBentErrors(Int_t n, const Double_t* x, const Double_t* y, const Double_t* exl = 0, const Double_t* exh = 0, const Double_t* eyl = 0, const Double_t* eyh = 0, const Double_t* exld = 0, const Double_t* exhd = 0, const Double_t* eyld = 0, const Double_t* eyhd = 0); virtual~TGraphBentErrors(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidApply(TF1* f); virtual voidTGraph::Browse(TBrowser* b); virtual Double_tTGraph::Chisquare(const TF1* f1, Option_t* option = """") const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; static Bool_tTGraph::CompareArg(const TGraph* gr, Int_t left, Int_t right); static Bool_tTGraph::CompareRadius(const TGraph* gr, Int_t left, Int_t right); static Bool_tTGraph::CompareX(const TGraph* gr, Int_t left, Int_t right); static Bool_tTGraph::CompareY(const TGraph* gr, Int_t left, Int_t right); virtual voidComputeRange(Double_t& xmin, Double_t& ymin, Double_t& xmax, Double_t& ymax) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTGraph::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTGraph::Draw(Option_t* chopt = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTGraph",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraphBentErrors.html:2499,Clear,Clear,2499,root/html534/TGraphBentErrors.html,https://root.cern,https://root.cern/root/html534/TGraphBentErrors.html,1,['Clear'],['Clear']
Usability," TGraphDelaunay(); TGraphDelaunay(TGraph2D* g); virtual~TGraphDelaunay(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; Double_tComputeZ(Double_t x, Double_t y); virtual voidTNamed::Copy(TObject& named) const; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphDelaunay.html:1756,Clear,Clear,1756,root/html528/TGraphDelaunay.html,https://root.cern,https://root.cern/root/html528/TGraphDelaunay.html,4,['Clear'],['Clear']
Usability," TGraphEdge(); TGraphEdge(const TGraphEdge&); TGraphEdge(TGraphNode* n1, TGraphNode* n2); virtual~TGraphEdge(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; voidCreateGVEdge(Agraph_t* gv); virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOptio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphEdge.html:811,Clear,Clear,811,root/html528/TGraphEdge.html,https://root.cern,https://root.cern/root/html528/TGraphEdge.html,3,['Clear'],['Clear']
Usability," TGraphEdge(); TGraphEdge(const TGraphEdge&); TGraphEdge(TGraphNode* n1, TGraphNode* n2); virtual~TGraphEdge(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; voidCreateGVEdge(GVizAgraph_t* gv); virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraphEdge.html:811,Clear,Clear,811,root/html534/TGraphEdge.html,https://root.cern,https://root.cern/root/html534/TGraphEdge.html,1,['Clear'],['Clear']
Usability," TGraphNode(); TGraphNode(const TGraphNode&); TGraphNode(const char* name, const char* title = """"); virtual~TGraphNode(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidCreateGVNode(Agraph_t* gv); virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphNode.html:836,Clear,Clear,836,root/html528/TGraphNode.html,https://root.cern,https://root.cern/root/html528/TGraphNode.html,3,['Clear'],['Clear']
Usability," TGraphNode(); TGraphNode(const TGraphNode&); TGraphNode(const char* name, const char* title = """"); virtual~TGraphNode(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidCreateGVNode(GVizAgraph_t* gv); virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraphNode.html:836,Clear,Clear,836,root/html534/TGraphNode.html,https://root.cern,https://root.cern/root/html534/TGraphNode.html,1,['Clear'],['Clear']
Usability," TGraphPolar(); TGraphPolar(const TGraphPolar&); TGraphPolar(Int_t n, const Double_t* theta = 0, const Double_t* r = 0, const Double_t* etheta = 0, const Double_t* er = 0); virtual~TGraphPolar(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTGraphErrors::Apply(TF1* f); virtual voidTGraph::Browse(TBrowser* b); static Int_tTGraphErrors::CalculateScanfFields(const char* fmt); virtual Double_tTGraph::Chisquare(const TF1* f1, Option_t* option = """") const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Comp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraphPolar.html:1883,Clear,Clear,1883,root/html534/TGraphPolar.html,https://root.cern,https://root.cern/root/html534/TGraphPolar.html,1,['Clear'],['Clear']
Usability," TGraphPolar(); TGraphPolar(const TGraphPolar&); TGraphPolar(Int_t n, const Double_t* x = 0, const Double_t* y = 0, const Double_t* ex = 0, const Double_t* ey = 0); virtual~TGraphPolar(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTGraphErrors::Apply(TF1* f); virtual voidTGraph::Browse(TBrowser* b); static Int_tTGraphErrors::CalculateScanfFields(const char* fmt); virtual Double_tTGraph::Chisquare(const TF1* f1) const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphPolar.html:1856,Clear,Clear,1856,root/html528/TGraphPolar.html,https://root.cern,https://root.cern/root/html528/TGraphPolar.html,3,['Clear'],['Clear']
Usability," TGraphPolargram(const char* name = """"); TGraphPolargram(const TGraphPolargram&); TGraphPolargram(const char* name, Double_t rmin, Double_t rmax, Double_t tmin, Double_t tmax); virtual~TGraphPolargram(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); voidChangeRangePolar(Double_t tmin, Double_t tmax); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* options = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphPolargram.html:1439,Clear,Clear,1439,root/html528/TGraphPolargram.html,https://root.cern,https://root.cern/root/html528/TGraphPolargram.html,4,['Clear'],['Clear']
Usability, TGraphPolargram.h. ◆ fPolarOffset. Double_t TGraphPolargram::fPolarOffset. private . Offset for Polar labels. ; Definition at line 31 of file TGraphPolargram.h. ◆ fPolarTextSize. Double_t TGraphPolargram::fPolarTextSize. private . Set Polar text size. ; Definition at line 32 of file TGraphPolargram.h. ◆ fRadialLabelColor. Color_t TGraphPolargram::fRadialLabelColor. private . Set color of the radial labels. ; Definition at line 28 of file TGraphPolargram.h. ◆ fRadialLabelFont. Font_t TGraphPolargram::fRadialLabelFont. private . Set font of radial labels. ; Definition at line 42 of file TGraphPolargram.h. ◆ fRadialOffset. Double_t TGraphPolargram::fRadialOffset. private . Offset for radial labels. ; Definition at line 33 of file TGraphPolargram.h. ◆ fRadialTextSize. Double_t TGraphPolargram::fRadialTextSize. private . Definition at line 34 of file TGraphPolargram.h. ◆ fRadian. Bool_t TGraphPolargram::fRadian. private . Definition at line 23 of file TGraphPolargram.h. ◆ fRwrmax. Double_t TGraphPolargram::fRwrmax. private . Maximal radial value (real world) ; Definition at line 36 of file TGraphPolargram.h. ◆ fRwrmin. Double_t TGraphPolargram::fRwrmin. private . Minimal radial value (real world) ; Definition at line 35 of file TGraphPolargram.h. ◆ fRwtmax. Double_t TGraphPolargram::fRwtmax. private . Minimal angular value (real world) ; Definition at line 38 of file TGraphPolargram.h. ◆ fRwtmin. Double_t TGraphPolargram::fRwtmin. private . Minimal angular value (real world) ; Definition at line 37 of file TGraphPolargram.h. ◆ fTickpolarSize. Double_t TGraphPolargram::fTickpolarSize. private . Set size of Tickmarks. ; Definition at line 39 of file TGraphPolargram.h. Libraries for TGraphPolargram:. [legend]; The documentation for this class was generated from the following files:; graf2d/graf/inc/TGraphPolargram.h; graf2d/graf/src/TGraphPolargram.cxx. TGraphPolargram. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:32 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPolargram.html:35125,Guid,Guide,35125,doc/master/classTGraphPolargram.html,https://root.cern,https://root.cern/doc/master/classTGraphPolargram.html,1,['Guid'],['Guide']
Usability," TGraphTime(); TGraphTime(const TGraphTime& gr); TGraphTime(Int_t nsteps, Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax); virtual~TGraphTime(); voidTObject::AbstractMethod(const char* method) const; virtual Int_tAdd(const TObject* obj, Int_t slot, Option_t* option = """"); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* chopt = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphTime.html:1100,Clear,Clear,1100,root/html528/TGraphTime.html,https://root.cern,https://root.cern/root/html528/TGraphTime.html,4,['Clear'],['Clear']
Usability," TGrid(); TGrid(const TGrid&); virtual~TGrid(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tCd(const char* = """", Bool_t = kFALSE); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual TGridResult*Command(const char*, Bool_t = kFALSE, UInt_t = 2); virtual Int_tTObject::Compare(const TObject* obj) const; static TGrid*Connect(const char* grid, const char* uid = 0, const char* pw = 0, const char* options = 0); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGrid.html:1079,Clear,Clear,1079,root/html528/TGrid.html,https://root.cern,https://root.cern/root/html528/TGrid.html,4,['Clear'],['Clear']
Usability," TGridCollection(); TGridCollection(const TGridCollection&); virtual~TGridCollection(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(TGridCollection*); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tCheckIfOnline(Bool_t = kFALSE); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Bool_tDeselectFile(const char*, Int_t = -1, Int_t = -1); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual Bool_tDownscaleSelection(UInt_t = 2); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Bool_tExportXML(const char*, Bool_t = kTRUE, Bool_t = kTRUE, const char* = ""ROOT xml"", const char* = ""Exported XML""); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGridCollection.html:795,Clear,Clear,795,root/html530/TGridCollection.html,https://root.cern,https://root.cern/root/html530/TGridCollection.html,3,['Clear'],['Clear']
Usability," TGridCollection(); TGridCollection(const TGridCollection&); virtual~TGridCollection(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(TGridCollection*); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual Bool_tCheckIfOnline(Bool_t = kFALSE); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Bool_tDeselectFile(const char*, Int_t = -1, Int_t = -1); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual Bool_tDownscaleSelection(UInt_t = 2); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual Bool_tExportXML(const char*, Bool_t = kTRUE, Bool_t = kTRUE, const char* = ""ROOT xml"", const char* = ""Exported XML""); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGridCollection.html:793,Clear,Clear,793,root/html528/TGridCollection.html,https://root.cern,https://root.cern/root/html528/TGridCollection.html,1,['Clear'],['Clear']
Usability," TGridJDL::AddToRequirements ; (; const char * ; value = nullptr, . const char * ; description = nullptr . ). pure virtual . ◆ AddToSet(). void TGridJDL::AddToSet ; (; const char * ; key, . const char * ; value . ). Adds a value to a key value which hosts a set of values. ; E.g. InputSandbox: {""file1"",""file2""} ; Definition at line 172 of file TGridJDL.cxx. ◆ AddToSetDescription(). void TGridJDL::AddToSetDescription ; (; const char * ; key, . const char * ; description . ). Adds a value to a key value which hosts a set of values. ; E.g. InputSandbox: {""file1"",""file2""} ; Definition at line 195 of file TGridJDL.cxx. ◆ Class(). static TClass * TGridJDL::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGridJDL::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGridJDL::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 75 of file TGridJDL.h. ◆ Clear(). void TGridJDL::Clear ; (; const Option_t * ; = """"). override . Clears the JDL information. ; Definition at line 42 of file TGridJDL.cxx. ◆ DeclFileName(). static const char * TGridJDL::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 75 of file TGridJDL.h. ◆ Generate(). TString TGridJDL::Generate ; (; ). virtual . Generates the JDL snippet. ; Definition at line 208 of file TGridJDL.cxx. ◆ GetDescription(). const char * TGridJDL::GetDescription ; (; const char * ; key). Returns the value corresponding to the provided key. ; Return 0 in case key is not found. ; Definition at line 131 of file TGridJDL.cxx. ◆ GetValue(). const char * TGridJDL::GetValue ; (; const char * ; key). Returns the value corresponding to the provided key. ; Return 0 in case key is not found. ; Definition at line 77 of file TGridJDL.cxx. ◆ IsA(). TClass * TGridJDL::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGridJDL.html:15443,Clear,Clear,15443,doc/master/classTGridJDL.html,https://root.cern,https://root.cern/doc/master/classTGridJDL.html,1,['Clear'],['Clear']
Usability," TGuiBldEditor(const TGWindow* p = 0); virtual~TGuiBldEditor(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); voidChangeSelected(TGFrame*)SIGNAL ; virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); Bool_tTGFrame::Contai",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGuiBldEditor.html:1346,Clear,Clear,1346,root/html528/TGuiBldEditor.html,https://root.cern,https://root.cern/root/html528/TGuiBldEditor.html,4,['Clear'],['Clear']
Usability," TGuiBldGeometryFrame(const TGWindow* p, TGuiBldEditor* editor); virtual~TGuiBldGeometryFrame(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGCompositeFrame::ChangeOptions(UInt_t options); voidChangeSelected(TGFrame* frame); virtual voidTGCompositeFrame::ChangeSubframesBackground(Pixel_t back); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTGCompositeFrame::Cleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); Bool_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGuiBldGeometryFrame.html:1362,Clear,Clear,1362,root/html528/TGuiBldGeometryFrame.html,https://root.cern,https://root.cern/root/html528/TGuiBldGeometryFrame.html,4,['Clear'],['Clear']
