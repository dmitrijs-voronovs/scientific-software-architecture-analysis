quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"/// This represents clause 'inclusive' in the '#pragma omp scan' directive.; ///; /// \code; /// #pragma omp scan inclusive(a,b); /// \endcode; /// In this example directive '#pragma omp scan' has clause 'inclusive'; /// with the variables 'a' and 'b'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:230,variab,variables,230,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['variab'],['variables']
Modifiability,"/// This represents clause 'is_device_ptr' in the '#pragma omp ...'; /// directives.; ///; /// \code; /// #pragma omp target is_device_ptr(a,b); /// \endcode; /// In this example directive '#pragma omp target' has clause; /// 'is_device_ptr' with the variables 'a' and 'b'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:251,variab,variables,251,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['variab'],['variables']
Modifiability,"/// This represents clause 'lastprivate' in the '#pragma omp ...'; /// directives.; ///; /// \code; /// #pragma omp simd lastprivate(a,b); /// \endcode; /// In this example directive '#pragma omp simd' has clause 'lastprivate'; /// with the variables 'a' and 'b'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:241,variab,variables,241,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['variab'],['variables']
Modifiability,"/// This represents clause 'linear' in the '#pragma omp ...'; /// directives.; ///; /// \code; /// #pragma omp simd linear(a,b : 2); /// \endcode; /// In this example directive '#pragma omp simd' has clause 'linear'; /// with variables 'a', 'b' and linear step '2'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:226,variab,variables,226,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['variab'],['variables']
Modifiability,"/// This represents clause 'map' in the '#pragma omp ...'; /// directives.; ///; /// \code; /// #pragma omp target map(a,b); /// \endcode; /// In this example directive '#pragma omp target' has clause 'map'; /// with the variables 'a' and 'b'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:221,variab,variables,221,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['variab'],['variables']
Modifiability,/// This represents clause 'nontemporal' in the '#pragma omp ...' directives.; ///; /// \code; /// #pragma omp simd nontemporal(a); /// \endcode; /// In this example directive '#pragma omp simd' has clause 'nontemporal' for; /// the variable 'a'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:233,variab,variable,233,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['variab'],['variable']
Modifiability,"/// This represents clause 'private' in the '#pragma omp ...' directives.; ///; /// \code; /// #pragma omp parallel private(a,b); /// \endcode; /// In this example directive '#pragma omp parallel' has clause 'private'; /// with the variables 'a' and 'b'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:232,variab,variables,232,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['variab'],['variables']
Modifiability,"/// This represents clause 'reduction' in the '#pragma omp ...'; /// directives.; ///; /// \code; /// #pragma omp parallel reduction(+:a,b); /// \endcode; /// In this example directive '#pragma omp parallel' has clause 'reduction'; /// with operator '+' and the variables 'a' and 'b'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:262,variab,variables,262,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['variab'],['variables']
Modifiability,"/// This represents clause 'shared' in the '#pragma omp ...' directives.; ///; /// \code; /// #pragma omp parallel shared(a,b); /// \endcode; /// In this example directive '#pragma omp parallel' has clause 'shared'; /// with the variables 'a' and 'b'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:229,variab,variables,229,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['variab'],['variables']
Modifiability,"/// This represents clause 'task_reduction' in the '#pragma omp taskgroup'; /// directives.; ///; /// \code; /// #pragma omp taskgroup task_reduction(+:a,b); /// \endcode; /// In this example directive '#pragma omp taskgroup' has clause; /// 'task_reduction' with operator '+' and the variables 'a' and 'b'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:285,variab,variables,285,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['variab'],['variables']
Modifiability,"/// This represents clause 'to' in the '#pragma omp ...'; /// directives.; ///; /// \code; /// #pragma omp target update to(a,b); /// \endcode; /// In this example directive '#pragma omp target update' has clause 'to'; /// with the variables 'a' and 'b'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:232,variab,variables,232,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['variab'],['variables']
Modifiability,"/// This represents clause 'use_device_addr' in the '#pragma omp ...'; /// directives.; ///; /// \code; /// #pragma omp target data use_device_addr(a,b); /// \endcode; /// In this example directive '#pragma omp target data' has clause; /// 'use_device_addr' with the variables 'a' and 'b'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:267,variab,variables,267,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['variab'],['variables']
Modifiability,"/// This represents clause 'use_device_ptr' in the '#pragma omp ...'; /// directives.; ///; /// \code; /// #pragma omp target data use_device_ptr(a,b); /// \endcode; /// In this example directive '#pragma omp target data' has clause; /// 'use_device_ptr' with the variables 'a' and 'b'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:264,variab,variables,264,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['variab'],['variables']
Modifiability,"/// This represents clauses with the list of variables like 'private',; /// 'firstprivate', 'copyin', 'shared', or 'reduction' clauses in the; /// '#pragma omp ...' directives.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:45,variab,variables,45,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['variab'],['variables']
Modifiability,"/// This represents implicit clause 'depend' for the '#pragma omp task'; /// directive.; ///; /// \code; /// #pragma omp task depend(in:a,b); /// \endcode; /// In this example directive '#pragma omp task' with clause 'depend' with the; /// variables 'a' and 'b' with dependency 'in'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:240,variab,variables,240,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['variab'],['variables']
Modifiability,"/// This represents implicit clause 'depobj' for the '#pragma omp depobj'; /// directive.; /// This clause does not exist by itself, it can be only as a part of 'omp; /// depobj' directive. This clause is introduced to keep the original structure; /// of \a OMPExecutableDirective class and its derivatives and to use the; /// existing infrastructure of clauses with the list of variables.; ///; /// \code; /// #pragma omp depobj(a) destroy; /// \endcode; /// In this example directive '#pragma omp depobj' has implicit clause 'depobj'; /// with the depobj 'a'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:379,variab,variables,379,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['variab'],['variables']
Modifiability,"/// This represents implicit clause 'flush' for the '#pragma omp flush'; /// directive.; /// This clause does not exist by itself, it can be only as a part of 'omp; /// flush' directive. This clause is introduced to keep the original structure; /// of \a OMPExecutableDirective class and its derivatives and to use the; /// existing infrastructure of clauses with the list of variables.; ///; /// \code; /// #pragma omp flush(a,b); /// \endcode; /// In this example directive '#pragma omp flush' has implicit clause 'flush'; /// with the variables 'a' and 'b'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:376,variab,variables,376,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,2,['variab'],['variables']
Modifiability,/// This represents the llvm.instrprof.mcdc.condbitmap.update intrinsic.; /// It does not pertain to global bitmap updates or parameters and so doesn't; /// inherit from InstrProfMCDCBitmapInstBase.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h:157,inherit,inherit,157,interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IntrinsicInst.h,1,['inherit'],['inherit']
Modifiability,"/// This represents the number of categories of debug location coverage being; /// calculated. The first category is the number of variables with 0% location; /// coverage, but the last category is the number of variables with 100%; /// location coverage.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp:131,variab,variables,131,interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,2,['variab'],['variables']
Modifiability,/// This represents variables DIE offsets.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp:20,variab,variables,20,interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,1,['variab'],['variables']
Modifiability,/// This routine joins the analysis results of all incoming edges in @MBB by; /// inserting a new DBG_VALUE instruction at the start of the @MBB - if the same; /// source variable in all the predecessors of @MBB reside in the same location.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:171,variab,variable,171,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"/// This struct pack the shape and tile data together for user. We suggest; /// initializing the struct as early as possible, because compiler depends; /// on the shape information to do configure. The constant value is preferred; /// for optimization by compiler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/amxintrin.h:187,config,configure,187,interpreter/llvm-project/clang/lib/Headers/amxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/amxintrin.h,1,['config'],['configure']
Modifiability,/// This type may be used as the value type of a global variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DerivedTypes.h:56,variab,variable,56,interpreter/llvm-project/llvm/include/llvm/IR/DerivedTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DerivedTypes.h,1,['variab'],['variable']
Modifiability,"/// This virtual key function only exists to limit the emission of debug info; /// describing the Sema class. GCC and Clang only emit debug info for a class; /// with a vtable when the vtable is emitted. Sema is final and not; /// polymorphic, but the debug info size savings are so significant that it is; /// worth adding a vtable just to take advantage of this optimization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:231,polymorphi,polymorphic,231,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['polymorphi'],['polymorphic']
Modifiability,/// Thread-private partial reduction variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:37,variab,variable,37,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,1,['variab'],['variable']
Modifiability,"/// Thread-safe allocator adaptor. Uses a spin lock on the assumption that; /// contention here is extremely rare.; ///; /// TODO: Using a spin lock on every allocation can be quite expensive when; /// contention is high. Since this is mainly used for BumpPtrAllocator and; /// SpecificBumpPtrAllocator, it'd be better to have a specific thread-safe; /// BumpPtrAllocator implementation that only use a fair lock when allocating a; /// new slab but otherwise using atomic and be lock-free.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ThreadSafeAllocator.h:26,adapt,adaptor,26,interpreter/llvm-project/llvm/include/llvm/Support/ThreadSafeAllocator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ThreadSafeAllocator.h,1,['adapt'],['adaptor']
Modifiability,"/// To 'execute' an alloca, we create a temporary global variable to represent; /// its body. This vector is needed so we can delete the temporary globals; /// when we are done.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Evaluator.h:57,variab,variable,57,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Evaluator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Evaluator.h,1,['variab'],['variable']
Modifiability,"/// To enable interprocedural analysis, we assign LLVM values to the following; /// groups. The register group represents SSA registers, the return group; /// represents the return values of functions, and the memory group represents; /// in-memory values. An LLVM Value can technically be in more than one group.; /// It's necessary to distinguish these groups so we can, for example, track a; /// global variable separately from the value stored at its location.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/CalledValuePropagation.cpp:406,variab,variable,406,interpreter/llvm-project/llvm/lib/Transforms/IPO/CalledValuePropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/CalledValuePropagation.cpp,1,['variab'],['variable']
Modifiability,/// Tokenizes content of configuration file.; ///; /// \param [in] Source The string representing content of config file.; /// \param [in] Saver Delegates back to the caller for saving parsed strings.; /// \param [out] NewArgv All parsed strings are appended to NewArgv.; /// \param [in] MarkEOLs Added for compatibility with TokenizerCallback.; ///; /// It works like TokenizeGNUCommandLine with ability to skip comment lines.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:25,config,configuration,25,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,2,['config'],"['config', 'configuration']"
Modifiability,/// Total number of CFGs with variables analyzed for uninitialized; /// uses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/AnalysisBasedWarnings.h:30,variab,variables,30,interpreter/llvm-project/clang/include/clang/Sema/AnalysisBasedWarnings.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/AnalysisBasedWarnings.h,1,['variab'],['variables']
Modifiability,/// Total number of PC range bytes covered by DW_AT_locations (only for local; /// variables).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp:83,variab,variables,83,interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,1,['variab'],['variables']
Modifiability,/// Total number of PC range bytes covered by DW_AT_locations with; /// the debug entry values (DW_OP_entry_value) (only for local variables).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp:131,variab,variables,131,interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,1,['variab'],['variables']
Modifiability,/// Total number of PC range bytes in each local variable's enclosing scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp:49,variab,variable,49,interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,1,['variab'],['variable']
Modifiability,/// Total number of PC range bytes in each variable's enclosing scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp:43,variab,variable,43,interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,1,['variab'],['variable']
Modifiability,/// Total number of local variables and function parameters processed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp:26,variab,variables,26,interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,1,['variab'],['variables']
Modifiability,/// Total number of local variables processed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp:26,variab,variables,26,interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,1,['variab'],['variables']
Modifiability,/// Total number of variables analyzed for uninitialized uses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/AnalysisBasedWarnings.h:20,variab,variables,20,interpreter/llvm-project/clang/include/clang/Sema/AnalysisBasedWarnings.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/AnalysisBasedWarnings.h,1,['variab'],['variables']
Modifiability,"/// Trace the predicate state through a call.; ///; /// There are several layers of this needed to handle the full complexity of; /// calls.; ///; /// First, we need to send the predicate state into the called function. We do; /// this by merging it into the high bits of the stack pointer.; ///; /// For tail calls, this is all we need to do.; ///; /// For calls where we might return and resume the control flow, we need to; /// extract the predicate state from the high bits of the stack pointer after; /// control returns from the called function.; ///; /// We also need to verify that we intended to return to this location in the; /// code. An attacker might arrange for the processor to mispredict the return; /// to this valid but incorrect return address in the program rather than the; /// correct one. See the paper on this attack, called ""ret2spec"" by the; /// researchers, here:; /// https://christian-rossow.de/publications/ret2spec-ccs2018.pdf; ///; /// The way we verify that we returned to the correct location is by preserving; /// the expected return address across the call. One technique involves taking; /// advantage of the red-zone to load the return address from `8(%rsp)` where it; /// was left by the RET instruction when it popped `%rsp`. Alternatively, we can; /// directly save the address into a register that will be preserved across the; /// call. We compare this intended return address against the address; /// immediately following the call (the observed return address). If these; /// mismatch, we have detected misspeculation and can poison our predicate; /// state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp:74,layers,layers,74,interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,1,['layers'],['layers']
Modifiability,/// Track escaped local variables with auto storage. Used during SEH; /// outlining to produce a call to llvm.localescape.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h:24,variab,variables,24,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,1,['variab'],['variables']
Modifiability,"/// Track variable location debug instructions while using the instruction; /// referencing implementation. Such debug instructions do not need to be; /// updated during regalloc because they identify instructions rather than; /// register locations. However, they needs to be removed from the; /// MachineFunction during regalloc, then re-inserted later, to avoid; /// disrupting the allocator.; ///; /// \param MI Any DBG_VALUE / DBG_INSTR_REF / DBG_PHI instruction; /// \param Idx Last valid SlotIndex before instruction; ///; /// \returns Iterator to continue processing from after unlinking.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:10,variab,variable,10,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,1,['variab'],['variable']
Modifiability,"/// Tracker for converting machine value locations and variable values into; /// variable locations (the output of LiveDebugValues), recorded as DBG_VALUEs; /// specifying block live-in locations and transfers within blocks.; ///; /// Operating on a per-block basis, this class takes a (pre-loaded) MLocTracker; /// and must be initialized with the set of variable values that are live-in to; /// the block. The caller then repeatedly calls process(). TransferTracker picks; /// out variable locations for the live-in variable values (if there _is_ a; /// location) and creates the corresponding DBG_VALUEs. Then, as the block is; /// stepped through, transfers of values between machine locations are; /// identified and if profitable, a DBG_VALUE created.; ///; /// This is where debug use-before-defs would be resolved: a variable with an; /// unavailable value could materialize in the middle of a block, when the; /// value becomes available. Or, we could detect clobbers and re-specify the; /// variable in a backup location. (XXX these are unimplemented).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:55,variab,variable,55,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,7,['variab'],['variable']
Modifiability,"/// Tracker for what values are in machine locations. Listens to the Things; /// being Done by various instructions, and maintains a table of what machine; /// locations have what values (as defined by a ValueIDNum).; ///; /// There are potentially a much larger number of machine locations on the; /// target machine than the actual working-set size of the function. On x86 for; /// example, we're extremely unlikely to want to track values through control; /// or debug registers. To avoid doing so, MLocTracker has several layers of; /// indirection going on, described below, to avoid unnecessarily tracking; /// any location.; ///; /// Here's a sort of diagram of the indexes, read from the bottom up:; ///; /// Size on stack Offset on stack; /// \ /; /// Stack Idx (Where in slot is this?); /// /; /// /; /// Slot Num (%stack.0) /; /// FrameIdx => SpillNum /; /// \ /; /// SpillID (int) Register number (int); /// \ /; /// LocationID => LocIdx; /// |; /// LocIdx => ValueIDNum; ///; /// The aim here is that the LocIdx => ValueIDNum vector is just an array of; /// values in numbered locations, so that later analyses can ignore whether the; /// location is a register or otherwise. To map a register / spill location to; /// a LocIdx, you have to use the (sparse) LocationID => LocIdx map. And to; /// build a LocationID for a stack slot, you need to combine identifiers for; /// which stack slot it is and where within that slot is being described.; ///; /// Register mask operands cause trouble by technically defining every register;; /// various hacks are used to avoid tracking registers that are never read and; /// only written by regmasks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h:526,layers,layers,526,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,1,['layers'],['layers']
Modifiability,/// Tracks the mapping of unit level debug information variables to debug; /// information entries.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.h:55,variab,variables,55,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.h,1,['variab'],['variables']
Modifiability,/// Transfer variables based on \p Src to be based on \p Dst. This handles; /// both register copies as well as spills and restores. Creates DBG_VALUEs; /// describing the movement.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:13,variab,variables,13,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variables']
Modifiability,"/// Transform a string into a valid C++ variable name by replacing forbidden; /// characters with underscores.; /// @param in The input string.; /// @return A new string valid variable name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx:40,variab,variable,40,roofit/roofitcore/src/RooFitImplHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitImplHelpers.cxx,2,['variab'],['variable']
Modifiability,/// Transform managed variables for device compilation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCUDANV.cpp:22,variab,variables,22,interpreter/llvm-project/clang/lib/CodeGen/CGCUDANV.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCUDANV.cpp,1,['variab'],['variables']
Modifiability,"/// Transform the specified condition.; ///; /// By default, this transforms the variable and expression and rebuilds; /// the condition.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h:81,variab,variable,81,interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,1,['variab'],['variable']
Modifiability,"/// Transforms a compile command so that it applies the same configuration to; /// a different file. Most args are left intact, but tweaks may be needed; /// to certain flags (-x, -std etc).; ///; /// The output command will always end in {""--"", Filename}.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/CompilationDatabase.h:61,config,configuration,61,interpreter/llvm-project/clang/include/clang/Tooling/CompilationDatabase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/CompilationDatabase.h,1,['config'],['configuration']
Modifiability,"/// Transforms the parameters of a function type into the; /// given vectors.; ///; /// The result vectors should be kept in sync; null entries in the; /// variables vector are acceptable.; ///; /// LastParamTransformed, if non-null, will be set to the index of the last; /// parameter on which transfromation was started. In the event of an error,; /// this will contain the parameter which failed to instantiate.; ///; /// Return true on error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h:156,variab,variables,156,interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,1,['variab'],['variables']
Modifiability,"/// Transforms the parameters of a requires expresison into the given vectors.; ///; /// The result vectors should be kept in sync; null entries in the; /// variables vector are acceptable.; ///; /// Returns an unset ExprResult on success. Returns an ExprResult the 'not; /// satisfied' RequiresExpr if subsitution failed, OR an ExprError, both of; /// which are cases where transformation shouldn't continue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h:157,variab,variables,157,interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,1,['variab'],['variables']
Modifiability,"/// Translate the given fit result to a RooArgSet in a generic way.; /// Prefix is prepended to all variable names.; /// Note that the returned set is managed by the user and the user must; /// explicitly delete all the set content (the returned set does not own the content)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/DetailedOutputAggregator.h:100,variab,variable,100,roofit/roostats/inc/RooStats/DetailedOutputAggregator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/DetailedOutputAggregator.h,1,['variab'],['variable']
Modifiability,"/// Traverses `S` and inserts into `Fields`, `Vars` and `Funcs` any fields,; /// global variables and functions that are declared in or referenced from; /// sub-statements.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/DataflowEnvironment.cpp:88,variab,variables,88,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/DataflowEnvironment.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/DataflowEnvironment.cpp,1,['variab'],['variables']
Modifiability,"/// Traverses each refactoring option used by the rule and invokes the; /// \c visit callback in the consumer for each option.; ///; /// Options are visited in the order of use, e.g. if a rule has two; /// requirements that use options, the options from the first requirement; /// are visited before the options in the second requirement.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRule.h:19,refactor,refactoring,19,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRule.h,1,['refactor'],['refactoring']
Modifiability,/// Tries to load options from configuration files.; ///; /// \returns true if error occurred.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h:31,config,configuration,31,interpreter/llvm-project/clang/include/clang/Driver/Driver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h,1,['config'],['configuration']
Modifiability,/// Tries to load options from default configuration files (deduced from; /// executable filename).; ///; /// \returns true if error occurred.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h:39,config,configuration,39,interpreter/llvm-project/clang/include/clang/Driver/Driver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h,1,['config'],['configuration']
Modifiability,"/// Triple - Helper class for working with autoconf configuration names. For; /// historical reasons, we also call these 'triples' (they used to contain; /// exactly three fields).; ///; /// Configuration names are strings in the canonical form:; /// ARCHITECTURE-VENDOR-OPERATING_SYSTEM; /// or; /// ARCHITECTURE-VENDOR-OPERATING_SYSTEM-ENVIRONMENT; ///; /// This class is used for clients which want to support arbitrary; /// configuration names, but also want to implement certain special; /// behavior for particular configurations. This class isolates the mapping; /// from the components of the configuration name to well known IDs.; ///; /// At its core the Triple class is designed to be a wrapper for a triple; /// string; the constructor does not change or normalize the triple string.; /// Clients that need to handle the non-canonical triples that users often; /// specify should use the normalize method.; ///; /// See autoconf/config.guess for a glimpse into what configuration names; /// look like in practice.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h:52,config,configuration,52,interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h,7,"['Config', 'config']","['Configuration', 'config', 'configuration', 'configurations']"
Modifiability,"/// Trivial adaptor that maps from a module to its functions.; ///; /// Designed to allow composition of a FunctionPass(Manager) and; /// a ModulePassManager, by running the FunctionPass(Manager) over every; /// function in the module.; ///; /// Function passes run within this adaptor can rely on having exclusive access; /// to the function they are run over. They should not read or modify any other; /// functions! Other threads or systems may be manipulating other functions in; /// the module, and so their state should never be relied on.; /// FIXME: Make the above true for all of LLVM's actual passes, some still; /// violate this principle.; ///; /// Function passes can also read the module containing the function, but they; /// should not modify that module outside of the use lists of various globals.; /// For example, a function pass is not permitted to add functions to the; /// module.; /// FIXME: Make the above true for all of LLVM's actual passes, some still; /// violate this principle.; ///; /// Note that although function passes can access module analyses, module; /// analyses are not invalidated while the function passes are running, so they; /// may be stale. Function analyses will not be stale.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h:12,adapt,adaptor,12,interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,2,['adapt'],['adaptor']
Modifiability,/// True if files should be updated in place. RewriteFilename is only called; /// if this is false.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Frontend/FixItRewriter.h:46,Rewrite,RewriteFilename,46,interpreter/llvm-project/clang/include/clang/Rewrite/Frontend/FixItRewriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Frontend/FixItRewriter.h,1,['Rewrite'],['RewriteFilename']
Modifiability,/// True if the SwitchStmt has storage for a condition variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:55,variab,variable,55,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,1,['variab'],['variable']
Modifiability,/// True if the WhileStmt has storage for a condition variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:54,variab,variable,54,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,1,['variab'],['variable']
Modifiability,/// True if the variable is a __block variable that is captured by an; /// escaping block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h:16,variab,variable,16,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,2,['variab'],['variable']
Modifiability,/// True if the variable is known positive in the current constraint.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp:16,variab,variable,16,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,1,['variab'],['variable']
Modifiability,/// True if the variable is of aggregate type and has a constant; /// initializer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h:16,variab,variable,16,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,1,['variab'],['variable']
Modifiability,/// True if these lookup results should be extended by; /// argument-dependent lookup if this is the operand of a function call.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:43,extend,extended,43,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,1,['extend'],['extended']
Modifiability,/// True if this IfStmt has storage for a variable declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:42,variab,variable,42,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,1,['variab'],['variable']
Modifiability,/// True if this SwitchStmt has storage for a condition variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:56,variab,variable,56,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,1,['variab'],['variable']
Modifiability,/// True if this WhileStmt has storage for a condition variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:55,variab,variable,55,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,1,['variab'],['variable']
Modifiability,/// True if this declaration should be extended by; /// argument-dependent lookup.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h:39,extend,extended,39,interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h,1,['extend'],['extended']
Modifiability,/// True if this if statement has storage for a variable declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:48,variab,variable,48,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,1,['variab'],['variable']
Modifiability,/// True if this variable has been captured.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:17,variab,variable,17,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,1,['variab'],['variable']
Modifiability,/// True if we've finished generating IR. This prevents us from generating; /// additional LLVM IR after emitting output in HandleTranslationUnit. This; /// can happen when Clang plugins trigger additional AST deserialization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/BackendConsumer.h:179,plugin,plugins,179,interpreter/llvm-project/clang/lib/CodeGen/BackendConsumer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/BackendConsumer.h,1,['plugin'],['plugins']
Modifiability,"/// True iff this segment is a single segment that lies between the; /// specified boundaries, exclusively. Vregs live across a backedge are not; /// considered local. The boundaries are expected to lie within an extended; /// basic block, so vregs that are not live out should contain no holes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h:213,extend,extended,213,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h,1,['extend'],['extended']
Modifiability,/// True iff we've successfully evaluated the variable as a constant; /// expression and extracted its integer value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ComparisonCategories.h:46,variab,variable,46,interpreter/llvm-project/clang/include/clang/AST/ComparisonCategories.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ComparisonCategories.h,1,['variab'],['variable']
Modifiability,/// True when this option must be specified before invoking the refactoring; /// action.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringOption.h:64,refactor,refactoring,64,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringOption.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringOption.h,1,['refactor'],['refactoring']
Modifiability,/// Try to capture the given variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:29,variab,variable,29,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['variab'],['variable']
Modifiability,"/// Try to capture the given variable.; ///; /// \param Var The variable to capture.; ///; /// \param Loc The location at which the capture occurs.; ///; /// \param Kind The kind of capture, which may be implicit (for either a; /// block or a lambda), or explicit by-value or by-reference (for a lambda).; ///; /// \param EllipsisLoc The location of the ellipsis, if one is provided in; /// an explicit lambda capture.; ///; /// \param BuildAndDiagnose Whether we are actually supposed to add the; /// captures or diagnose errors. If false, this routine merely check whether; /// the capture can occur without performing the capture itself or complaining; /// if the variable cannot be captured.; ///; /// \param CaptureType Will be set to the type of the field used to capture; /// this variable in the innermost block or lambda. Only valid when the; /// variable can be captured.; ///; /// \param DeclRefType Will be set to the type of a reference to the capture; /// from within the current scope. Only valid when the variable can be; /// captured.; ///; /// \param FunctionScopeIndexToStopAt If non-null, it points to the index; /// of the FunctionScopeInfo stack beyond which we do not attempt to capture.; /// This is useful when enclosing lambdas must speculatively capture; /// variables that may or may not be used in certain specializations of; /// a nested generic lambda.; ///; /// \returns true if an error occurred (i.e., the variable cannot be; /// captured) and false if the capture succeeded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:29,variab,variable,29,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,8,['variab'],"['variable', 'variables']"
Modifiability,/// Try to detect a recurrence that monotonically increases/decreases from a; /// non-zero starting value. These are common as induction variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:137,variab,variables,137,interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,1,['variab'],['variables']
Modifiability,/// Try to detect a recurrence that the value of the induction variable is; /// always a power of two (or zero).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:63,variab,variable,63,interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,1,['variab'],['variable']
Modifiability,"/// Try to emit a reference to the given value without producing it as; /// an l-value. This is just an optimization, but it avoids us needing; /// to emit global copies of variables if they're named without triggering; /// a formal use in a context where we can't emit a direct reference to them,; /// for instance if a block or lambda or a member of a local class uses a; /// const int variable or constexpr variable from an enclosing function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp:173,variab,variables,173,interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,3,['variab'],"['variable', 'variables']"
Modifiability,"/// Try to ensure that the alignment of \p V is at least \p PrefAlign bytes. If; /// the owning object can be modified and has an alignment less than \p; /// PrefAlign, it will be increased and \p PrefAlign returned. If the alignment; /// cannot be increased, the known alignment of the value is returned.; ///; /// It is not always possible to modify the alignment of the underlying object,; /// so if alignment is important, a more reliable approach is to simply align; /// all global variables and allocation instructions to their preferred; /// alignment from the beginning.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h:487,variab,variables,487,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h,1,['variab'],['variables']
Modifiability,"/// Try to evaluate the expression to the form (a - b + constant) where; /// neither a nor b are variables.; ///; /// This is a more aggressive variant of evaluateAsRelocatable. The intended; /// use is for when relocations are not available, like the .size directive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCExpr.h:97,variab,variables,97,interpreter/llvm-project/llvm/include/llvm/MC/MCExpr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCExpr.h,1,['variab'],['variables']
Modifiability,/// Try to evaluate the initializer for a variable declaration.; ///; /// \param Info Information about the ongoing evaluation.; /// \param E An expression to be used when printing diagnostics.; /// \param VD The variable whose initializer should be obtained.; /// \param Version The version of the variable within the frame.; /// \param Frame The frame in which the variable was created. Must be null; /// if this variable is not local to the evaluation.; /// \param Result Filled in with a pointer to the value of the variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:42,variab,variable,42,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,6,['variab'],['variable']
Modifiability,"/// Try to find the next source that share the same register file; /// for the value defined by \p Reg and \p SubReg.; /// When true is returned, the \p RewriteMap can be used by the client to; /// retrieve all Def -> Use along the way up to the next source. Any found; /// Use that is not itself a key for another entry, is the next source to; /// use. During the search for the next source, multiple sources can be found; /// given multiple incoming sources of a PHI instruction. In this case, we; /// look in each PHI source for the next source; all found next sources must; /// share the same register file as \p Reg and \p SubReg. The client should; /// then be capable to rewrite all intermediate PHIs to get the next source.; /// \return False if no alternative sources are available. True otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp:153,Rewrite,RewriteMap,153,interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,2,"['Rewrite', 'rewrite']","['RewriteMap', 'rewrite']"
Modifiability,/// Try to fold a sext/zext/aext dag node into a ConstantSDNode or; /// a build_vector of constants.; /// This function is called by the DAGCombiner when visiting sext/zext/aext; /// dag nodes (see for example method DAGCombiner::visitSIGN_EXTEND).; /// Vector extends are not folded if operations are legal; this is to; /// avoid introducing illegal build_vector dag nodes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:261,extend,extends,261,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extends']
Modifiability,"/// Try to lower a vector shuffle as a zero extension on any microarch.; ///; /// This routine will try to do everything in its power to cleverly lower; /// a shuffle which happens to match the pattern of a zero extend. It doesn't; /// check for the profitability of this lowering, it tries to aggressively; /// match this pattern. It will use all of the micro-architectural details it; /// can to emit an efficient lowering. It handles both blends with all-zero; /// inputs to explicitly zero-extend and undef-lanes (sometimes undef due to; /// masking out later).; ///; /// The reason we have dedicated lowering for zext-style shuffles is that they; /// are both incredibly common and often quite performance sensitive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:212,extend,extend,212,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,['extend'],['extend']
Modifiability,/// Try to narrow the width of a binop if at least 1 operand is an extend of; /// of a value. This requires a potentially expensive known bits check to make; /// sure the narrow op does not overflow.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:67,extend,extend,67,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,1,['extend'],['extend']
Modifiability,"/// Try to narrow the width of an insert element. This could be generalized for; /// any vector constant, but we limit the transform to insertion into undef to; /// avoid potential backend problems from unsupported insertion widths. This; /// could also be extended to handle the case of inserting a scalar constant; /// into a vector variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp:257,extend,extended,257,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp,2,"['extend', 'variab']","['extended', 'variable']"
Modifiability,"/// Try to optimize extending or truncating conversion instructions (like; /// zext, trunc, fptoui, uitofp) for the target.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:20,extend,extending,20,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['extend'],['extending']
Modifiability,"/// Try to recolor broken hints.; /// Broken hints may be repaired by recoloring when an evicted variable; /// freed up a register for a larger live-range.; /// Consider the following example:; /// BB1:; /// a =; /// b =; /// BB2:; /// ...; /// = b; /// = a; /// Let us assume b gets split:; /// BB1:; /// a =; /// b =; /// BB2:; /// c = b; /// ...; /// d = c; /// = d; /// = a; /// Because of how the allocation work, b, c, and d may be assigned different; /// colors. Now, if a gets evicted later:; /// BB1:; /// a =; /// st a, SpillSlot; /// b =; /// BB2:; /// c = b; /// ...; /// d = c; /// = d; /// e = ld SpillSlot; /// = e; /// This is likely that we can assign the same register for b, c, and d,; /// getting rid of 2 copies.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocGreedy.cpp:97,variab,variable,97,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocGreedy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocGreedy.cpp,1,['variab'],['variable']
Modifiability,"/// Turn a comparison of the form \p Op0 \p Pred \p Op1 into a vector of; /// constraints, using indices from the corresponding constraint system.; /// New variables that need to be added to the system are collected in; /// \p NewVariables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp:156,variab,variables,156,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,1,['variab'],['variables']
Modifiability,"/// Turns a comparison of the form \p Op0 \p Pred \p Op1 into a vector of; /// constraints using getConstraint. Returns an empty constraint if the result; /// cannot be used to query the existing constraint system, e.g. because it; /// would require adding new variables. Also tries to convert signed; /// predicates to unsigned ones if possible to allow using the unsigned system; /// which increases the effectiveness of the signed <-> unsigned transfer; /// logic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp:261,variab,variables,261,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,1,['variab'],['variables']
Modifiability,/// Two-bit value indicating which register is the designated frame pointer; /// register for local variables. Included in S_FRAMEPROC.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.h:100,variab,variables,100,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.h,1,['variab'],['variables']
Modifiability,/// Type of the global variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:23,variab,variable,23,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,1,['variab'],['variable']
Modifiability,/// Type wrapper for integer ID for Variables. 0 is reserved.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AssignmentTrackingAnalysis.h:36,Variab,Variables,36,interpreter/llvm-project/llvm/include/llvm/CodeGen/AssignmentTrackingAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AssignmentTrackingAnalysis.h,1,['Variab'],['Variables']
Modifiability,/// TypeUnitAccelInfo extends AccelInfo structure with type specific fileds.; /// We need these additional fields to decide whether OutDIE should have an; /// accelerator record or not. The TypeEntryBodyPtr can refer to the; /// declaration DIE and definition DIE corresponding to the type entry.; /// Only one of them would be used in final output. So if TypeUnitAccelInfo; /// refers OutDIE which does not match with TypeEntryBodyPtr->getFinalDie(); /// then such record should be skipped.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerTypeUnit.h:22,extend,extends,22,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerTypeUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DWARFLinkerTypeUnit.h,1,['extend'],['extends']
Modifiability,"/// Types for recording sets of variable fragments that overlap. For a given; /// local variable, we record all other fragments of that variable that could; /// overlap it, to reduce search time.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h:32,variab,variable,32,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,3,['variab'],['variable']
Modifiability,"/// Undefines local variables (variables whose name does not start with a '$'; /// sign), i.e. removes them from GlobalVariableTable and from; /// GlobalNumericVariableTable and also clears the value of numeric; /// variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:20,variab,variables,20,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,3,['variab'],['variables']
Modifiability,"/// Unnamed constant global variables solely contaning a pointer to; /// another globals variable act like a global variable ""proxy"", or GOT; /// equivalents, i.e., it's only used to hold the address of the latter. One; /// optimization is to replace accesses to these proxies by using the GOT; /// entry for the final global instead. Hence, we select GOT equivalent; /// candidates among all the module global variables, avoid emitting them; /// unnecessarily and finally replace references to them by pc relative; /// accesses to GOT entries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h:28,variab,variables,28,interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,4,['variab'],"['variable', 'variables']"
Modifiability,"/// Unnamed constant global variables solely contaning a pointer to; /// another globals variable is equivalent to a GOT table entry; it contains the; /// the address of another symbol. Optimize it and replace accesses to these; /// ""GOT equivalents"" by using the GOT entry for the final global instead.; /// Compute GOT equivalent candidates among all global variables to avoid; /// emitting them if possible later on, after it use is replaced by a GOT entry; /// access.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:28,variab,variables,28,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,3,['variab'],"['variable', 'variables']"
Modifiability,/// Unpack a VariableRef cursor into the variable it references and the; /// location where the where the reference occurred.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXCursor.h:13,Variab,VariableRef,13,interpreter/llvm-project/clang/tools/libclang/CXCursor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXCursor.h,2,"['Variab', 'variab']","['VariableRef', 'variable']"
Modifiability,"/// Update expression for the originally specified iteration variable,; /// calculated as VD = Begin + CounterVD * Step;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprOpenMP.h:61,variab,variable,61,interpreter/llvm-project/clang/include/clang/AST/ExprOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprOpenMP.h,1,['variab'],['variable']
Modifiability,"/// Update the attribute index and attempt to read the attribute value. If the; /// attribute is able to be read, update AttrValue and the Index member; /// variable. If the attribute value is not able to be read, an appropriate; /// error will be set if the Err member variable is non-NULL and the iterator; /// will be set to the end value so iteration stops.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDie.h:157,variab,variable,157,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDie.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFDie.h,2,['variab'],['variable']
Modifiability,"/// Update the level indent to adapt to the given \p Line.; ///; /// When a line is not formatted, we move the subsequent lines on the same; /// level to the same indent.; /// Note that \c nextLine must have been called before this method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp:31,adapt,adapt,31,interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp,1,['adapt'],['adapt']
Modifiability,"/// Updates the initializer at index @p Init with the new; /// expression @p expr, and returns the old expression at that; /// location.; ///; /// When @p Init is out of range for this initializer list, the; /// initializer list will be extended with NULL expressions to; /// accommodate the new entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h:237,extend,extended,237,interpreter/llvm-project/clang/include/clang/AST/Expr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h,1,['extend'],['extended']
Modifiability,"/// Updates the stack slot of this variable, assuming `inStackSlot()` is; /// true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h:35,variab,variable,35,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,1,['variab'],['variable']
Modifiability,/// Updates watched literals that are affected by a variable assignment.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp:52,variab,variable,52,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,1,['variab'],['variable']
Modifiability,/// UpperBound - local variable passed to runtime.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:23,variab,variable,23,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['variab'],['variable']
Modifiability,"/// Use automatic scanning, i.e. adaptive",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestInverter.h:33,adapt,adaptive,33,roofit/roostats/inc/RooStats/HypoTestInverter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestInverter.h,1,['adapt'],['adaptive']
Modifiability,/// Use extended type for fp arithmetic.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/LangOptions.h:8,extend,extended,8,interpreter/llvm-project/clang/include/clang/Basic/LangOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/LangOptions.h,1,['extend'],['extended']
Modifiability,/// Use of registers held in unsigned integer variables (or more rarely signed; /// integers) is no longer permitted to avoid ambiguity with upcoming support; /// for immediates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h:46,variab,variables,46,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h,1,['variab'],['variables']
Modifiability,"/// Use predicate only to mask operations on data in the loop.; /// When the VL is not known to be a power-of-2, this method requires a; /// runtime overflow check for the i + VL in the loop because it compares the; /// scalar induction variable against the tripcount rounded up by VL which may; /// overflow. When the VL is a power-of-2, both the increment and uprounded; /// tripcount will overflow to 0, which does not require a runtime check; /// since the loop is exited when the loop induction variable equals the; /// uprounded trip-count, which are both 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h:237,variab,variable,237,interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,2,['variab'],['variable']
Modifiability,"/// Used during constraint checking, sets up the constraint template argument; /// lists, and calls SetupConstraintScope to set up the; /// LocalInstantiationScope to have the proper set of ParVarDecls configured.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:202,config,configured,202,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['config'],['configured']
Modifiability,"/// Used for SPIR kernel functions. Inherits the restrictions of SPIR_FUNC,; /// except it cannot have non-void return values, it cannot have variable; /// arguments, it can also be called by the host or it is externally; /// visible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/CallingConv.h:36,Inherit,Inherits,36,interpreter/llvm-project/llvm/include/llvm/IR/CallingConv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/CallingConv.h,2,"['Inherit', 'variab']","['Inherits', 'variable']"
Modifiability,"/// Used for SPIR non-kernel device functions. No lowering or expansion of; /// arguments. Structures are passed as a pointer to a struct with the; /// byval attribute. Functions can only call SPIR_FUNC and SPIR_KERNEL; /// functions. Functions can only have zero or one return values. Variable; /// arguments are not allowed, except for printf. How arguments/return; /// values are lowered are not specified. Functions are only visible to the; /// devices.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/CallingConv.h:286,Variab,Variable,286,interpreter/llvm-project/llvm/include/llvm/IR/CallingConv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/CallingConv.h,1,['Variab'],['Variable']
Modifiability,"/// Used for dynamically loading instances of InlineOrder as plugins; ///; /// Plugins must implement an InlineOrderFactory, for an example refer to:; /// llvm/unittests/Analysis/InlineOrderPlugin/InlineOrderPlugin.cpp; ///; /// If a PluginInlineOrderAnalysis has been registered with the; /// current ModuleAnalysisManager, llvm::getInlineOrder returns an; /// InlineOrder created by the PluginInlineOrderAnalysis' Factory.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InlineOrder.h:61,plugin,plugins,61,interpreter/llvm-project/llvm/include/llvm/Analysis/InlineOrder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InlineOrder.h,4,"['Plugin', 'plugin']","['PluginInlineOrderAnalysis', 'Plugins', 'plugins']"
Modifiability,"/// Used for dynamically registering InlineAdvisors as plugins; ///; /// An advisor plugin adds a new advisor at runtime by registering an instance; /// of PluginInlineAdvisorAnalysis in the current ModuleAnalysisManager.; /// For example, the following code dynamically registers a; /// DefaultInlineAdvisor:; ///; /// namespace {; ///; /// InlineAdvisor *defaultAdvisorFactory(Module &M, FunctionAnalysisManager; /// &FAM,; /// InlineParams Params, InlineContext IC); /// {; /// return new DefaultInlineAdvisor(M, FAM, Params, IC);; /// }; ///; /// struct DefaultDynamicAdvisor : PassInfoMixin<DefaultDynamicAdvisor> {; /// PreservedAnalyses run(Module &, ModuleAnalysisManager &MAM) {; /// PluginInlineAdvisorAnalysis PA(defaultAdvisorFactory);; /// MAM.registerPass([&] { return PA; });; /// return PreservedAnalyses::all();; /// }; /// };; ///; /// } // namespace; ///; /// extern ""C"" LLVM_ATTRIBUTE_WEAK ::llvm::PassPluginLibraryInfo; /// llvmGetPassPluginInfo() {; /// return {LLVM_PLUGIN_API_VERSION, ""DynamicDefaultAdvisor"",; /// LLVM_VERSION_STRING,; /// [](PassBuilder &PB) {; /// PB.registerPipelineStartEPCallback(; /// [](ModulePassManager &MPM, OptimizationLevel Level) {; /// MPM.addPass(DefaultDynamicAdvisor());; /// });; /// }};; /// }; ///; /// A plugin must implement an AdvisorFactory and register it with a; /// PluginInlineAdvisorAnlysis to the provided ModuleanAlysisManager.; ///; /// If such a plugin has been registered; /// InlineAdvisorAnalysis::Result::tryCreate will return the dynamically loaded; /// advisor.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h:55,plugin,plugins,55,interpreter/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h,7,"['Plugin', 'plugin']","['PluginInlineAdvisorAnalysis', 'PluginInlineAdvisorAnlysis', 'plugin', 'plugins']"
Modifiability,/// Used to create unique names for artificial VLA size debug info variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h:67,variab,variables,67,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,1,['variab'],['variables']
Modifiability,/// Used to deserialize the on-disk global variable table.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/APINotes/APINotesReader.cpp:43,variab,variable,43,interpreter/llvm-project/clang/lib/APINotes/APINotesReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/APINotes/APINotesReader.cpp,1,['variab'],['variable']
Modifiability,/// Used to parameterize getRange,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolution.h:12,parameteriz,parameterize,12,interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolution.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolution.h,1,['parameteriz'],['parameterize']
Modifiability,/// Used to parse the configuration file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp:22,config,configuration,22,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,1,['config'],['configuration']
Modifiability,/// Used to serialize the on-disk global variable table.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/APINotes/APINotesWriter.cpp:41,variab,variable,41,interpreter/llvm-project/clang/lib/APINotes/APINotesWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/APINotes/APINotesWriter.cpp,1,['variab'],['variable']
Modifiability,/// User directory for config files.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h:23,config,config,23,interpreter/llvm-project/clang/include/clang/Driver/Driver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/Driver.h,1,['config'],['config']
Modifiability,/// User provided configuration for this Attributor instance.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:18,config,configuration,18,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['config'],['configuration']
Modifiability,"/// Utility analysis that determines what values are worth profiling.; /// The actual logic is inside the ValueProfileCollectorImpl, whose job is to; /// populate the Candidates vector.; ///; /// Value profiling an expression means to track the values that this expression; /// takes at runtime and the frequency of each value.; /// It is important to distinguish between two sets of value profiles for a; /// particular expression:; /// 1) The set of values at the point of evaluation.; /// 2) The set of values at the point of use.; /// In some cases, the two sets are identical, but it's not unusual for the two; /// to differ.; ///; /// To elaborate more, consider this C code, and focus on the expression `nn`:; /// void foo(int nn, bool b) {; /// if (b) memcpy(x, y, nn);; /// }; /// The point of evaluation can be as early as the start of the function, and; /// let's say the value profile for `nn` is:; /// total=100; (value,freq) set = {(8,10), (32,50)}; /// The point of use is right before we call memcpy, and since we execute the; /// memcpy conditionally, the value profile of `nn` can be:; /// total=15; (value,freq) set = {(8,10), (4,5)}; ///; /// For this reason, a plugin is responsible for computing the insertion point; /// for each value to be profiled. The `CandidateInfo` structure encapsulates; /// all the information needed for each value profile site.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ValueProfileCollector.h:1182,plugin,plugin,1182,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ValueProfileCollector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ValueProfileCollector.h,1,['plugin'],['plugin']
Modifiability,"/// Utility class for getting and setting loop vectorizer hints in the form; /// of loop metadata.; /// This class keeps a number of loop annotations locally (as member variables); /// and can, upon request, write them back as metadata on the loop. It will; /// initially scan the loop for existing metadata, and will update the local; /// values based on information in the loop.; /// We cannot write all values to metadata, as the mere presence of some info,; /// for example 'force', means a decision has been made. So, we need to be; /// careful NOT to add them if the user hasn't specifically asked so.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h:169,variab,variables,169,interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,1,['variab'],['variables']
Modifiability,/// Utility type to build an inheritance chain that makes it easy to rank; /// overload candidates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/STLExtras.h:29,inherit,inheritance,29,interpreter/llvm-project/llvm/include/llvm/ADT/STLExtras.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/STLExtras.h,1,['inherit'],['inheritance']
Modifiability,/// VE Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VETargetMachine.cpp:27,Config,Configuration,27,interpreter/llvm-project/llvm/lib/Target/VE/VETargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VETargetMachine.cpp,1,['Config'],['Configuration']
Modifiability,"/// VEXTS, ByteWidth - takes an input in VSFRC and produces an output in; /// VSFRC that is sign-extended from ByteWidth to a 64-byte integer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h:97,extend,extended,97,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,1,['extend'],['extended']
Modifiability,/// VFPThumb2PostEncoder - Post-process encoded VFP instructions and rewrite; /// them to their Thumb2 form if we are currently in Thumb2 mode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp:69,rewrite,rewrite,69,interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMMCCodeEmitter.cpp,1,['rewrite'],['rewrite']
Modifiability,/// VMI_NonDiamondRepeat - Class has non-diamond repeated inheritance.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:58,inherit,inheritance,58,interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,1,['inherit'],['inheritance']
Modifiability,/// VPRecipeBase is a base class modeling a sequence of one or more output IR; /// instructions. VPRecipeBase owns the VPValues it defines through VPDef; /// and is responsible for deleting its defined values. Single-value; /// recipes must inherit from VPSingleDef instead of inheriting from both; /// VPRecipeBase and VPValue separately.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h:241,inherit,inherit,241,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,2,['inherit'],"['inherit', 'inheriting']"
Modifiability,/// VPSingleDef is a base class for recipes for modeling a sequence of one or; /// more output IR that define a single result VPValue.; /// Note that VPRecipeBase must be inherited from before VPValue.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h:171,inherit,inherited,171,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,1,['inherit'],['inherited']
Modifiability,"/// VPlan opcodes, extending LLVM IR with idiomatics instructions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h:19,extend,extending,19,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,1,['extend'],['extending']
Modifiability,"/// VSRC, CHAIN = SEXT_LD_SPLAT, CHAIN, Ptr - a splatting load memory; /// that sign-extends.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h:85,extend,extends,85,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,1,['extend'],['extends']
Modifiability,"/// VSRC, CHAIN = ZEXT_LD_SPLAT, CHAIN, Ptr - a splatting load memory; /// that zero-extends.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h:85,extend,extends,85,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,1,['extend'],['extends']
Modifiability,"/// Validate part of the configuration, which contains a list of argument; /// indexes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp:25,config,configuration,25,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/GenericTaintChecker.cpp,1,['config'],['configuration']
Modifiability,"/// Validate register name used for global register variables.; ///; /// This function returns true if the register passed in RegName can be used; /// for global register variables on this target. In addition, it returns; /// true in HasSizeMismatch if the size of the register doesn't match the; /// variable size passed in RegSize.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h:52,variab,variables,52,interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,3,['variab'],"['variable', 'variables']"
Modifiability,"/// Value - Output value of this node computed from the Bias and links.; /// This is always on of the values {-1, 0, 1}. A positive number means the; /// variable should go in a register through this bundle.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp:154,variab,variable,154,interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp,1,['variab'],['variable']
Modifiability,"/// Value of numeric variable, if defined, or std::nullopt otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:21,variab,variable,21,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,1,['variab'],['variable']
Modifiability,"/// Value of this variable, def'd in block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:18,variab,variable,18,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"/// ValueTypes are data types that can actually be held in registers.; /// All variables and expressions must have a value type.; /// Pointer types are further subdivided into the various heap-allocated; /// types, such as functions, records, etc.; /// Structured types that are passed by value (e.g. complex numbers); /// require special handling; they use BT_ValueRef, and size ST_0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:79,variab,variables,79,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,1,['variab'],['variables']
Modifiability,"/// Values - keep track of the mapping from parent values to values in the new; /// intervals. Given a pair (RegIdx, ParentVNI->id), Values contains:; ///; /// 1. No entry - the value is not mapped to Edit.get(RegIdx).; /// 2. (Null, false) - the value is mapped to multiple values in; /// Edit.get(RegIdx). Each value is represented by a minimal live range at; /// its def. The full live range can be inferred exactly from the range; /// of RegIdx in RegAssign.; /// 3. (Null, true). As above, but the ranges in RegAssign are too large, and; /// the live range must be recomputed using ::extend().; /// 4. (VNI, false) The value is mapped to a single new value.; /// The new value has no live ranges anywhere.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h:589,extend,extend,589,interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h,1,['extend'],['extend']
Modifiability,"/// VarStreamArray represents an array of variable length records backed by a; /// stream. This could be a contiguous sequence of bytes in memory, it could; /// be a file on disk, or it could be a PDB stream where bytes are stored as; /// discontiguous blocks in a file. Usually it is desirable to treat arrays; /// as contiguous blocks of memory, but doing so with large PDB files, for; /// example, could mean allocating huge amounts of memory just to allow; /// re-ordering of stream data to be contiguous before iterating over it. By; /// abstracting this out, we need not duplicate this memory, and we can; /// iterate over arrays in arbitrarily formatted streams. Elements are parsed; /// lazily on iteration, so there is no upfront cost associated with building; /// or copying a VarStreamArray, no matter how large it may be.; ///; /// You create a VarStreamArray by specifying a ValueType and an Extractor type.; /// If you do not specify an Extractor type, you are expected to specialize; /// VarStreamArrayExtractor<T> for your ValueType.; ///; /// By default an Extractor is default constructed in the class, but in some; /// cases you might find it useful for an Extractor to maintain state across; /// extractions. In this case you can provide your own Extractor through a; /// secondary constructor. The following examples show various ways of; /// creating a VarStreamArray.; ///; /// // Will use VarStreamArrayExtractor<MyType> as the extractor.; /// VarStreamArray<MyType> MyTypeArray;; ///; /// // Will use a default-constructed MyExtractor as the extractor.; /// VarStreamArray<MyType, MyExtractor> MyTypeArray2;; ///; /// // Will use the specific instance of MyExtractor provided.; /// // MyExtractor need not be default-constructible in this case.; /// MyExtractor E(SomeContext);; /// VarStreamArray<MyType, MyExtractor> MyTypeArray3(E);; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamArray.h:42,variab,variable,42,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamArray.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamArray.h,1,['variab'],['variable']
Modifiability,/// Variable decls are numbered by identifier.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumCXXABI.cpp:4,Variab,Variable,4,interpreter/llvm-project/clang/lib/AST/ItaniumCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumCXXABI.cpp,1,['Variab'],['Variable']
Modifiability,/// Variable location definition used by FunctionVarLocs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AssignmentTrackingAnalysis.h:4,Variab,Variable,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/AssignmentTrackingAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AssignmentTrackingAnalysis.h,1,['Variab'],['Variable']
Modifiability,/// Variable scoping information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/BTF/BTF.h:4,Variab,Variable,4,interpreter/llvm-project/llvm/include/llvm/DebugInfo/BTF/BTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/BTF/BTF.h,1,['Variab'],['Variable']
Modifiability,/// Variable to storage mapping.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.h:4,Variab,Variable,4,interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.h,1,['Variab'],['Variable']
Modifiability,/// Variable tracker -- listens to DBG_VALUEs occurring as InstrRefBasedImpl; /// steps through a block. Reads the values at each location from the; /// MLocTracker object.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h:4,Variab,Variable,4,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,1,['Variab'],['Variable']
Modifiability,/// Variable-length array must not have an initializer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Initialization.h:4,Variab,Variable-length,4,interpreter/llvm-project/clang/include/clang/Sema/Initialization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Initialization.h,1,['Variab'],['Variable-length']
Modifiability,"/// VariableExprAST - Expression class for referencing a variable, like ""a"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp:4,Variab,VariableExprAST,4,interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,36,"['Variab', 'variab']","['VariableExprAST', 'variable']"
Modifiability,/// VariableMap - A map from variable names ('$dst') to the recorded operand; /// number that they were captured as. These are biased by 1 to make; /// insertion easier.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DAGISelMatcherGen.cpp:4,Variab,VariableMap,4,interpreter/llvm-project/llvm/utils/TableGen/DAGISelMatcherGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DAGISelMatcherGen.cpp,2,"['Variab', 'variab']","['VariableMap', 'variable']"
Modifiability,"/// VariableSummary; /// ::= 'variable' ':' '(' 'module' ':' ModuleReference ',' GVFlags; /// [',' OptionalRefs]? ')'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:4,Variab,VariableSummary,4,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,2,"['Variab', 'variab']","['VariableSummary', 'variable']"
Modifiability,/// Variables,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/BrainF/BrainF.h:4,Variab,Variables,4,interpreter/llvm-project/llvm/examples/BrainF/BrainF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/BrainF/BrainF.h,1,['Variab'],['Variables']
Modifiability,"/// Variables for which we've emitted globals containing their constant; /// values along with the corresponding globals, for opportunistic reuse.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h:4,Variab,Variables,4,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h,1,['Variab'],['Variables']
Modifiability,/// Variables that can be removed from the system once the stack entry gets; /// removed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp:4,Variab,Variables,4,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,1,['Variab'],['Variables']
Modifiability,"/// Variables used to help with collecting of named operands for predicates; /// with 'let PredicateCodeUsesOperands = 1'. WaitingForNamedOperands is set; /// to the number of named operands that predicate expects. Store locations in; /// StoreIdxForName correspond to the order in which operand names appear in; /// predicate's argument list.; /// When we visit named operand and WaitingForNamedOperands is not zero, add; /// matcher that will record operand and decrease counter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelEmitter.cpp:4,Variab,Variables,4,interpreter/llvm-project/llvm/utils/TableGen/GlobalISelEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelEmitter.cpp,1,['Variab'],['Variables']
Modifiability,"/// VariadicOperatorMatcher related types.; /// @{; /// Polymorphic matcher object that uses a \c; /// DynTypedMatcher::VariadicOperator operator.; ///; /// Input matchers can have any type (including other polymorphic matcher; /// types), and the actual Matcher<T> is generated on demand with an implicit; /// conversion operator.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ASTMatchers/ASTMatchersInternal.h:56,Polymorphi,Polymorphic,56,interpreter/llvm-project/clang/include/clang/ASTMatchers/ASTMatchersInternal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ASTMatchers/ASTMatchersInternal.h,2,"['Polymorphi', 'polymorphi']","['Polymorphic', 'polymorphic']"
Modifiability,/// Vector (per block) of a collection (inner smallvector) of live-ins.; /// Used as the result type for the variable value dataflow problem.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h:109,variab,variable,109,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,1,['variab'],['variable']
Modifiability,/// Vector holding pointers to all parsed numeric variables. Used to; /// automatically free them once they are guaranteed to no longer be used.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:50,variab,variables,50,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,1,['variab'],['variables']
Modifiability,"/// Verifies the header of a unit in a .debug_info or .debug_types section.; ///; /// This function currently checks for:; /// - Unit is in 32-bit DWARF format. The function can be modified to; /// support 64-bit format.; /// - The DWARF version is valid; /// - The unit type is valid (if unit is in version >=5); /// - The unit doesn't extend beyond the containing section; /// - The address size is valid; /// - The offset in the .debug_abbrev section is valid; ///; /// \param DebugInfoData The section data; /// \param Offset A reference to the offset start of the unit. The offset will; /// be updated to point to the next unit in the section; /// \param UnitIndex The index of the unit to be verified; /// \param UnitType A reference to the type of the unit; /// \param isUnitDWARF64 A reference to a flag that shows whether the unit is; /// in 64-bit format.; ///; /// \returns true if the header is verified successfully, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFVerifier.h:337,extend,extend,337,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFVerifier.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFVerifier.h,1,['extend'],['extend']
Modifiability,/// Verify if the intrinsic has variable arguments. This method is intended to; /// be called after all the fixed arguments have been matched first.; ///; /// This method returns true on error.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Intrinsics.h:32,variab,variable,32,interpreter/llvm-project/llvm/include/llvm/IR/Intrinsics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Intrinsics.h,1,['variab'],['variable']
Modifiability,"/// Verify that the coefficient projection works for different configurations; /// of the RooAddPdf.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx:63,config,configurations,63,roofit/roofitcore/test/testRooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooAddPdf.cxx,1,['config'],['configurations']
Modifiability,/// VirtRegInfo - This list is a mapping from virtual register number to; /// variable information.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h:78,variab,variable,78,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,1,['variab'],['variable']
Modifiability,/// VirtRegRewriter pass. Rewrite virtual registers to physical registers as; /// assigned in VirtRegMap.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h:26,Rewrite,Rewrite,26,interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,1,['Rewrite'],['Rewrite']
Modifiability,"/// Virtual destructor needed in this inheritance-based design",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx:38,inherit,inheritance-based,38,hist/histv7/inc/ROOT/RAxis.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxis.hxx,1,['inherit'],['inheritance-based']
Modifiability,/// Virtual method implemented by subclasses that returns a reference to that; /// target's TargetSubtargetInfo-derived member variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h:127,variab,variable,127,interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h,1,['variab'],['variable']
Modifiability,/// Visit a global variable record.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/Serialization/SerializerBase.h:19,variab,variable,19,interpreter/llvm-project/clang/include/clang/ExtractAPI/Serialization/SerializerBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/Serialization/SerializerBase.h,2,['variab'],['variable']
Modifiability,/// Visitor to rewrite aggregate loads and stores as scalar.; ///; /// This pass aggressively rewrites all aggregate loads and stores on; /// a particular pointer (or any pointer derived from it which we can identify); /// with scalar loads and stores.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:15,rewrite,rewrite,15,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,2,['rewrite'],"['rewrite', 'rewrites']"
Modifiability,/// Visitor to rewrite instructions using p particular slice of an alloca; /// to use a new alloca.; ///; /// Also implements the rewriting to vector-based accesses when the partition; /// passes the isVectorPromotionViable predicate. Most of the rewriting logic; /// lives here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:15,rewrite,rewrite,15,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,1,['rewrite'],['rewrite']
Modifiability,/// Visits the given statment without creating a variable; /// scope for it in case it is a compound statement.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeStmtGen.cpp:49,variab,variable,49,interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeStmtGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeStmtGen.cpp,1,['variab'],['variable']
Modifiability,/// Walk outwards from an expression we want to bind a reference to and; /// find the expression whose lifetime needs to be extended. Record; /// the LHSs of comma expressions and adjustments needed along the path.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h:124,extend,extended,124,interpreter/llvm-project/clang/include/clang/AST/Expr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h,1,['extend'],['extended']
Modifiability,"/// Walk the list of protocol references from a class, category or; /// protocol to traverse the DAG formed from it's inheritance hierarchy. Find; /// the list of protocols that ends each walk at either a runtime; /// protocol or a non-runtime protocol with no parents. For the common case of; /// just a list of standard runtime protocols this just returns the same list; /// that was passed in.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCRuntime.h:118,inherit,inheritance,118,interpreter/llvm-project/clang/lib/CodeGen/CGObjCRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCRuntime.h,1,['inherit'],['inheritance']
Modifiability,/// Warn about use-while-consumed errors.; /// \param MethodName -- The name of the method that was incorrectly; /// invoked.; ///; /// \param State -- The state the object was used in.; ///; /// \param VariableName -- The name of the variable that holds the unique; /// value.; ///; /// \param Loc -- The SourceLocation of the method invocation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h:203,Variab,VariableName,203,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h,2,"['Variab', 'variab']","['VariableName', 'variable']"
Modifiability,/// Warn that a variable's state doesn't match at the entry and exit; /// of a loop.; ///; /// \param Loc -- The location of the end of the loop.; ///; /// \param VariableName -- The name of the variable that has a mismatched; /// state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h:16,variab,variable,16,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/Consumed.h,3,"['Variab', 'variab']","['VariableName', 'variable']"
Modifiability,/// Warn when a protected operation occurs while no locks are held.; /// \param D -- The decl for the protected variable or function; /// \param POK -- The kind of protected operation (e.g. variable access); /// \param AK -- The kind of access (i.e. read or write) that occurred; /// \param Loc -- The location of the protected operation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:112,variab,variable,112,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,2,['variab'],['variable']
Modifiability,"/// Warn when a protected operation occurs while the specific mutex protecting; /// the operation is not locked.; /// \param Kind -- the capability's name parameter (role, mutex, etc).; /// \param D -- The decl for the protected variable or function; /// \param POK -- The kind of protected operation (e.g. variable access); /// \param LockName -- A StringRef name for the lock expression, to be printed; /// in the error message.; /// \param LK -- The kind of access (i.e. read or write) that occurred; /// \param Loc -- The location of the protected operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:229,variab,variable,229,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,2,['variab'],['variable']
Modifiability,/// We are between inheritance colon and the real class/struct definition; /// scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Scope.h:19,inherit,inheritance,19,interpreter/llvm-project/clang/include/clang/Sema/Scope.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Scope.h,1,['inherit'],['inheritance']
Modifiability,"/// We are substituting template parameters for (typically) other template; /// parameters in order to rewrite a declaration as a different declaration; /// (for example, when forming a deduction guide from a constructor).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Template.h:103,rewrite,rewrite,103,interpreter/llvm-project/clang/include/clang/Sema/Template.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Template.h,1,['rewrite'],['rewrite']
Modifiability,"/// We can encode up to four bits in the low bits of a; /// type pointer, but there are many more type qualifiers that we want; /// to be able to apply to an arbitrary type. Therefore we have this; /// struct, intended to be heap-allocated and used by QualType to; /// store qualifiers.; ///; /// The current design tags the 'const', 'restrict', and 'volatile' qualifiers; /// in three low bits on the QualType pointer; a fourth bit records whether; /// the pointer is an ExtQuals node. The extended qualifiers (address spaces,; /// Objective-C GC attributes) are much more rare.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h:491,extend,extended,491,interpreter/llvm-project/clang/include/clang/AST/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h,1,['extend'],['extended']
Modifiability,/// We didn't calculate whether the designated initializers should be; /// inherited or not.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclObjC.h:75,inherit,inherited,75,interpreter/llvm-project/clang/include/clang/AST/DeclObjC.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclObjC.h,1,['inherit'],['inherited']
Modifiability,"/// We explicitly compute and set the unsafe stack layout for all unsafe; /// static alloca instructions. We save the unsafe ""base pointer"" in the; /// prologue into a local variable and restore it in the epilogue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SafeStack.cpp:174,variab,variable,174,interpreter/llvm-project/llvm/lib/CodeGen/SafeStack.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SafeStack.cpp,1,['variab'],['variable']
Modifiability,"/// We need to perform a generic polymorphic operation (like a typeid; /// or a cast), which requires an object with a vfptr. Adjust the; /// address to point to an object with a vfptr.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp:33,polymorphi,polymorphic,33,interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,1,['polymorphi'],['polymorphic']
Modifiability,"/// We only use `shared library` mode in cases where the static library form; /// of the components provided are not available; note however that this is; /// skipped if we're run from within the build dir. However, once installed,; /// we still need to provide correct output when the static archives are; /// removed or, as in the case of CMake's `BUILD_SHARED_LIBS`, never present; /// in the first place. This can't be done at configure/build time.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp:431,config,configure,431,interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp,1,['config'],['configure']
Modifiability,"/// We provide a function which tries to compute the (demangled) name of a type; /// statically.; ///; /// This routine may fail on some platforms or for particularly unusual types.; /// Do not use it for anything other than logging and debugging aids. It isn't; /// portable or dependendable in any real sense.; ///; /// The returned StringRef will point into a static storage duration string.; /// However, it may not be null terminated and may be some strangely aligned; /// inner substring of a larger string.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TypeName.h:267,portab,portable,267,interpreter/llvm-project/llvm/include/llvm/Support/TypeName.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TypeName.h,1,['portab'],['portable']
Modifiability,"/// We should lifetime-extend, but we don't because (due to technical; /// limitations) we can't. This happens for default member initializers,; /// which we don't clone for every use, so we don't have a unique; /// MaterializeTemporaryExpr to update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:23,extend,extend,23,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['extend'],['extend']
Modifiability,"/// We use this class to visit different types of expressions in; /// CFGBlocks, and build up the lockset.; /// An expression may cause us to add or remove locks from the lockset, or else; /// output error messages related to missing locks.; /// FIXME: In future, we may be able to not inherit from a visitor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp:286,inherit,inherit,286,interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,1,['inherit'],['inherit']
Modifiability,"/// We want to put the allocas whose lifetime-ranges are not overlapped; /// into one slot of coroutine frame.; /// Consider the example at:https://bugs.llvm.org/show_bug.cgi?id=45566; ///; /// cppcoro::task<void> alternative_paths(bool cond) {; /// if (cond) {; /// big_structure a;; /// process(a);; /// co_await something();; /// } else {; /// big_structure b;; /// process2(b);; /// co_await something();; /// }; /// }; ///; /// We want to put variable a and variable b in the same slot to; /// reduce the size of coroutine frame.; ///; /// This function use StackLifetime algorithm to partition the AllocaInsts in; /// Spills to non-overlapped sets in order to put Alloca in the same; /// non-overlapped set into the same slot in the Coroutine Frame. Then add; /// field for the allocas in the same non-overlapped set by using the largest; /// type as the field type.; ///; /// Side Effects: Because We sort the allocas, the order of allocas in the; /// frame may be different with the order in the source code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp:448,variab,variable,448,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,2,['variab'],['variable']
Modifiability,/// We've just determined that \p Old and \p New both appear to be definitions; /// of the same variable. Either diagnose or fix the problem.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:96,variab,variable,96,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,/// Weak definition of inline variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:30,variab,variable,30,interpreter/llvm-project/clang/include/clang/AST/ASTContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContext.h,1,['variab'],['variable']
Modifiability,"/// WeakTopLevelDecl - Translation-unit scoped declarations generated by; /// \#pragma weak during processing of other Decls.; /// I couldn't figure out a clean way to generate these in-line, so; /// we store them here and handle separately -- which is a hack.; /// It would be best to refactor this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:286,refactor,refactor,286,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['refactor'],['refactor']
Modifiability,/// WebAssembly Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp:36,Config,Configuration,36,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyTargetMachine.cpp,1,['Config'],['Configuration']
Modifiability,"/// What kind of floating point number this is.; ///; /// Only 2 bits are required, but VisualStudio incorrectly sign extends it.; /// Using the extra bit keeps it from failing under VisualStudio.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APFloat.h:118,extend,extends,118,interpreter/llvm-project/llvm/include/llvm/ADT/APFloat.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APFloat.h,1,['extend'],['extends']
Modifiability,"/// When Kind == EK_Base, the base specifier that provides the; /// base class. The integer specifies whether the base is an inherited; /// virtual base.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Initialization.h:125,inherit,inherited,125,interpreter/llvm-project/clang/include/clang/Sema/Initialization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Initialization.h,1,['inherit'],['inherited']
Modifiability,"/// When Kind == EK_Variable, EK_Member, EK_Binding, or; /// EK_TemplateParameter, the variable, binding, or template parameter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Initialization.h:87,variab,variable,87,interpreter/llvm-project/clang/include/clang/Sema/Initialization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Initialization.h,1,['variab'],['variable']
Modifiability,"/// When accessing thread-local variables under either the general-dynamic or; /// local-dynamic system, we make a ""TLS-descriptor"" call. The variable will; /// have a descriptor, accessible via a PC-relative ADRP, and whose first entry; /// is a function pointer to carry out the resolution.; ///; /// The sequence is:; /// adrp x0, :tlsdesc:var; /// ldr x1, [x0, #:tlsdesc_lo12:var]; /// add x0, x0, #:tlsdesc_lo12:var; /// .tlsdesccall var; /// blr x1; /// (TPIDR_EL0 offset now in x0); ///; /// The above sequence must be produced unscheduled, to enable the linker to; /// optimize/relax this sequence.; /// Therefore, a pseudo-instruction (TLSDESC_CALLSEQ) is used to represent the; /// above sequence, and expanded really late in the compilation flow, to ensure; /// the sequence is produced as per above.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:32,variab,variables,32,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"/// When determining per-block variable values and emitting to DBG_VALUEs,; /// this function explores by lexical scope depth. Doing so means that per; /// block information can be fully computed before exploration finishes,; /// allowing us to emit it and free data structures earlier than otherwise.; /// It's also good for locality.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h:31,variab,variable,31,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,1,['variab'],['variable']
Modifiability,"/// When macro expansion introduces nodes with children, those are marked as; /// \c MacroParent.; /// FIXME: The formatting code currently hard-codes the assumption that; /// child nodes are introduced by blocks following an opening brace.; /// This is deeply baked into the code and disentangling this will require; /// signficant refactorings. \c MacroParent allows us to special-case the; /// cases in which we treat parents as block-openers for now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/FormatToken.h:333,refactor,refactorings,333,interpreter/llvm-project/clang/lib/Format/FormatToken.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/FormatToken.h,1,['refactor'],['refactorings']
Modifiability,"/// When matching a given pattern, this holds the pointers to the classes; /// representing the numeric variables defined in previous patterns. When; /// matching a pattern all definitions for that pattern are recorded in the; /// NumericVariableDefs table in the Pattern instance of that pattern.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:104,variab,variables,104,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,1,['variab'],['variables']
Modifiability,"/// When matching a given pattern, this holds the value of all the string; /// variables defined in previous patterns. In a pattern, only the last; /// definition for a given variable is recorded in this table.; /// Back-references are used for uses after any the other definition.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:79,variab,variables,79,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,2,['variab'],"['variable', 'variables']"
Modifiability,"/// When the operands of vector mul are extended from smaller size values,; /// like i8 and i16, the type of mul may be shrinked to generate more; /// efficient code. Two typical patterns are handled:; /// Pattern1:; /// %2 = sext/zext <N x i8> %1 to <N x i32>; /// %4 = sext/zext <N x i8> %3 to <N x i32>; // or %4 = build_vector <N x i32> %C1, ..., %CN (%C1..%CN are constants); /// %5 = mul <N x i32> %2, %4; ///; /// Pattern2:; /// %2 = zext/sext <N x i16> %1 to <N x i32>; /// %4 = zext/sext <N x i16> %3 to <N x i32>; /// or %4 = build_vector <N x i32> %C1, ..., %CN (%C1..%CN are constants); /// %5 = mul <N x i32> %2, %4; ///; /// There are four mul shrinking modes:; /// If %2 == sext32(trunc8(%2)), i.e., the scalar value range of %2 is; /// -128 to 128, and the scalar value range of %4 is also -128 to 128,; /// generate pmullw+sext32 for it (MULS8 mode).; /// If %2 == zext32(trunc8(%2)), i.e., the scalar value range of %2 is; /// 0 to 255, and the scalar value range of %4 is also 0 to 255,; /// generate pmullw+zext32 for it (MULU8 mode).; /// If %2 == sext32(trunc16(%2)), i.e., the scalar value range of %2 is; /// -32768 to 32767, and the scalar value range of %4 is also -32768 to 32767,; /// generate pmullw+pmulhw for it (MULS16 mode).; /// If %2 == zext32(trunc16(%2)), i.e., the scalar value range of %2 is; /// 0 to 65535, and the scalar value range of %4 is also 0 to 65535,; /// generate pmullw+pmulhuw for it (MULU16 mode).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:40,extend,extended,40,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extended']
Modifiability,"/// When true, SCEVExpander tries to expand expressions in ""canonical"" form.; /// When false, expressions are expanded in a more literal form.; ///; /// In ""canonical"" form addrecs are expanded as arithmetic based on a; /// canonical induction variable. Note that CanonicalMode doesn't guarantee; /// that all expressions are expanded in ""canonical"" form. For some; /// expressions literal mode can be preferred.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h:244,variab,variable,244,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/ScalarEvolutionExpander.h,1,['variab'],['variable']
Modifiability,"/// When we inline a basic block into an invoke,; /// we have to turn all of the calls that can throw into invokes.; /// This function analyze BB to see if there are any calls, and if so,; /// it rewrites them to be invokes that jump to InvokeDest and fills in the PHI; /// nodes in that block with the values specified in InvokeDestPHIValues.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp:196,rewrite,rewrites,196,interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/InlineFunction.cpp,1,['rewrite'],['rewrites']
Modifiability,"/// Whenever we do an LValue to Rvalue cast, we are reading a variable and; /// need to ensure we hold any required mutexes.; /// FIXME: Deal with non-primitive types.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp:62,variab,variable,62,interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,1,['variab'],['variable']
Modifiability,/// Where the variable was referenced.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:14,variab,variable,14,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,1,['variab'],['variable']
Modifiability,/// Whether JIT compilation of external global variables is allowed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h:47,variab,variables,47,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,1,['variab'],['variables']
Modifiability,/// Whether a C++ static variable or CUDA/HIP kernel may be externalized.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:25,variab,variable,25,interpreter/llvm-project/clang/include/clang/AST/ASTContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContext.h,1,['variab'],['variable']
Modifiability,/// Whether a C++ static variable or CUDA/HIP kernel should be externalized.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:25,variab,variable,25,interpreter/llvm-project/clang/include/clang/AST/ASTContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContext.h,1,['variab'],['variable']
Modifiability,/// Whether it resembles a flexible array member. This is a static member; /// because we want to be able to call it with a nullptr. That allows us to; /// perform non-Decl specific checks based on the object's type and strict; /// flex array level.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h:27,flexible,flexible,27,interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,1,['flexible'],['flexible']
Modifiability,/// Whether target allows debuginfo types for decl only variables/functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h:56,variab,variables,56,interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,1,['variab'],['variables']
Modifiability,/// Whether target supports variable-length arrays.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h:28,variab,variable-length,28,interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,1,['variab'],['variable-length']
Modifiability,/// Whether the class contains a using declaration; /// to inherit the named class's constructors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h:59,inherit,inherit,59,interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h,1,['inherit'],['inherit']
Modifiability,/// Whether the constructor is inherited from a virtual base class of the; /// class that we construct.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h:31,inherit,inherited,31,interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h,1,['inherit'],['inherited']
Modifiability,/// Whether the consumer should attempt to rewrite the source file; /// with fix-it hints attached to the diagnostics it consumes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h:43,rewrite,rewrite,43,interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/PathDiagnostic.h,1,['rewrite'],['rewrite']
Modifiability,"/// Whether the set of configuration macros is exhaustive.; ///; /// When the set of configuration macros is exhaustive, meaning; /// that no identifier not in this list should affect how the module is; /// built.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Module.h:23,config,configuration,23,interpreter/llvm-project/clang/include/clang/Basic/Module.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Module.h,2,['config'],['configuration']
Modifiability,/// Whether the thrown variable (if any) is in scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:23,variab,variable,23,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,1,['variab'],['variable']
Modifiability,"/// Whether this class is polymorphic (C++ [class.virtual]),; /// which means that the class contains or inherits a virtual function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h:26,polymorphi,polymorphic,26,interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h,2,"['inherit', 'polymorphi']","['inherits', 'polymorphic']"
Modifiability,/// Whether this declaration is a complete definition of the; /// variable template specialization. We can't otherwise tell apart; /// an instantiated declaration from an instantiated definition with; /// no initializer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h:66,variab,variable,66,interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h,1,['variab'],['variable']
Modifiability,"/// Whether this declaration is a top-level declaration (function,; /// global variable, etc.) that is lexically inside an objc container; /// definition.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h:79,variab,variable,79,interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,2,['variab'],['variable']
Modifiability,"/// Whether this function has a prototype, either because one; /// was explicitly written or because it was ""inherited"" by merging; /// a declaration without a prototype with a declaration that has a; /// prototype.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:109,inherit,inherited,109,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['inherit'],['inherited']
Modifiability,"/// Whether this function has an extended frame record [Ctx, FP, LR]. If so,; /// bit 60 of the in-memory FP will be 1 to enable other tools to detect the; /// extended record.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MachineFunctionInfo.h:33,extend,extended,33,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MachineFunctionInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MachineFunctionInfo.h,2,['extend'],['extended']
Modifiability,"/// Whether this function has an extended frame record [Ctx, RBP, Return; /// addr]. If so, bit 60 of the in-memory frame pointer will be 1 to enable; /// other tools to detect the extended record.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MachineFunctionInfo.h:33,extend,extended,33,interpreter/llvm-project/llvm/lib/Target/X86/X86MachineFunctionInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MachineFunctionInfo.h,2,['extend'],['extended']
Modifiability,/// Whether this function has extended Qualifiers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h:30,extend,extended,30,interpreter/llvm-project/clang/include/clang/AST/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h,1,['extend'],['extended']
Modifiability,/// Whether this function has extended parameter information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h:30,extend,extended,30,interpreter/llvm-project/clang/include/clang/AST/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h,1,['extend'],['extended']
Modifiability,/// Whether this function inherited its prototype from a; /// previous declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:26,inherit,inherited,26,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['inherit'],['inherited']
Modifiability,"/// Whether this is a ""by ref"" capture, i.e. a capture of a __block; /// variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:73,variab,variable,73,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['variab'],['variable']
Modifiability,"/// Whether this is a nested capture, i.e. the variable captured; /// is not from outside the immediately enclosing function/block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:47,variab,variable,47,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['variab'],['variable']
Modifiability,/// Whether this is an exhaustive set of configuration macros.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/ModuleMap.h:41,config,configuration,41,interpreter/llvm-project/clang/include/clang/Lex/ModuleMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/ModuleMap.h,1,['config'],['configuration']
Modifiability,/// Whether this local extern variable declaration's previous declaration; /// was declared in the same block scope. Only correct in C++.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:30,variab,variable,30,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['variab'],['variable']
Modifiability,/// Whether this local extern variable's previous declaration was; /// declared in the same block scope. This controls whether we should merge; /// the type of this declaration with its previous declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:30,variab,variable,30,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['variab'],['variable']
Modifiability,"/// Whether this local variable could be allocated in the return; /// slot of its function, enabling the named return value optimization; /// (NRVO).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:23,variab,variable,23,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['variab'],['variable']
Modifiability,/// Whether this parameter inherits a default argument from a; /// prior declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:27,inherit,inherits,27,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['inherit'],['inherits']
Modifiability,/// Whether this type involves a variable-length array type; /// with a definite size.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h:33,variab,variable-length,33,interpreter/llvm-project/clang/include/clang/AST/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h,1,['variab'],['variable-length']
Modifiability,/// Whether this type is a variably-modified type (C99 6.7.5).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h:27,variab,variably-modified,27,interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DependenceFlags.h,2,['variab'],['variably-modified']
Modifiability,/// Whether this variable has (C++1z) inline explicitly specified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:17,variab,variable,17,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['variab'],['variable']
Modifiability,/// Whether this variable has a flexible array member initialized with one; /// or more elements. This can only be called for declarations where; /// hasInit() is true.; ///; /// (The standard doesn't allow initializing flexible array members; this is; /// a gcc/msvc extension.),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:17,variab,variable,17,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,3,"['flexible', 'variab']","['flexible', 'variable']"
Modifiability,/// Whether this variable is (C++0x) constexpr.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:17,variab,variable,17,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['variab'],['variable']
Modifiability,/// Whether this variable is (C++11) constexpr.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:17,variab,variable,17,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['variab'],['variable']
Modifiability,/// Whether this variable is (C++1z) inline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:17,variab,variable,17,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,2,['variab'],['variable']
Modifiability,/// Whether this variable is an ARC pseudo-__strong variable; see; /// isARCPseudoStrong() for details.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:17,variab,variable,17,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,2,['variab'],['variable']
Modifiability,"/// Whether this variable is known to have constant destruction. That is,; /// whether running the destructor on the initial value is a side-effect; /// (and doesn't inspect any state that might have changed during program; /// execution). This is currently only computed if the destructor is; /// non-trivial.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:17,variab,variable,17,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['variab'],['variable']
Modifiability,"/// Whether this variable is known to have constant initialization. This is; /// currently only computed in C++, for static / thread storage duration; /// variables that might have constant initialization and for variables that; /// are usable in constant expressions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:17,variab,variable,17,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,3,['variab'],"['variable', 'variables']"
Modifiability,/// Whether this variable is the exception variable in a C++ catch; /// or an Objective-C @catch statement.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:17,variab,variable,17,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,2,['variab'],['variable']
Modifiability,/// Whether this variable is the for-in loop declaration in Objective-C.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:17,variab,variable,17,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['variab'],['variable']
Modifiability,/// Whether this variable is the for-range-declaration in a C++0x; /// for-range statement.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:17,variab,variable,17,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['variab'],['variable']
Modifiability,/// Whether this variable is the implicit variable for a lambda init-capture.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:17,variab,variable,17,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,2,['variab'],['variable']
Modifiability,"/// Whether this variable is the implicit variable for a lambda init-capture.; /// Only VarDecl can be init captures, but both VarDecl and BindingDecl; /// can be captured.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:17,variab,variable,17,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,2,['variab'],['variable']
Modifiability,/// Whether this variable is the implicit variable for a lambda; /// init-capture.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:17,variab,variable,17,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,2,['variab'],['variable']
Modifiability,/// Whether to accept an AST file that has a different configuration; /// from the current compiler instance.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h:55,config,configuration,55,interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,1,['config'],['configuration']
Modifiability,"/// Whether to round the result up to the alignment of allocas, byval; /// arguments, and global variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h:97,variab,variables,97,interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h,1,['variab'],['variables']
Modifiability,/// Whether we should merge global variables that have external linkage.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalMerge.h:35,variab,variables,35,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalMerge.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalMerge.h,1,['variab'],['variables']
Modifiability,/// Whether we want a static variable to force us to keep its enclosing; /// function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h:29,variab,variable,29,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinker.h,3,['variab'],['variable']
Modifiability,/// Widen Induction Variables - Extend the width of an IV to cover its; /// widest uses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyIndVar.h:20,Variab,Variables,20,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyIndVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyIndVar.h,2,"['Extend', 'Variab']","['Extend', 'Variables']"
Modifiability,/// Will return a global variable of the given type. If a variable with a; /// different type already exists then a new variable with the right type; /// will be created and all uses of the old variable will be replaced with a; /// bitcast to the new variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h:25,variab,variable,25,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h,5,['variab'],['variable']
Modifiability,"/// Worklist of alloca instructions to simplify.; ///; /// Each alloca in the function is added to this. Each new alloca formed gets; /// added to it as well to recursively simplify unless that alloca can be; /// directly promoted. Finally, each time we rewrite a use of an alloca other; /// the one being actively rewritten, we add it back onto the list if not; /// already present to ensure it is re-visited.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:254,rewrite,rewrite,254,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,1,['rewrite'],['rewrite']
Modifiability,"/// Would the destruction of this variable have any effect, and if so, what; /// kind?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:34,variab,variable,34,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['variab'],['variable']
Modifiability,/// Would use of this function result in a rewrite using a different; /// operator?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Overload.h:43,rewrite,rewrite,43,interpreter/llvm-project/clang/include/clang/Sema/Overload.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Overload.h,1,['rewrite'],['rewrite']
Modifiability,/// Wrapper around extendRegister to ensure we extend to a full 32-bit register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCallLowering.cpp:19,extend,extendRegister,19,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCallLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCallLowering.cpp,2,['extend'],"['extend', 'extendRegister']"
Modifiability,/// Wrapping flags may allow combining constants separated by an extend.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp:65,extend,extend,65,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp,1,['extend'],['extend']
Modifiability,/// Write all refactored files to disk.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring.h:14,refactor,refactored,14,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring.h,1,['refactor'],['refactored']
Modifiability,/// Write to \p Stream the result of applying all changes to the; /// original buffer.; /// Note that it isn't safe to use this function to overwrite memory mapped; /// files in-place (PR17960). Consider using a higher-level utility such as; /// Rewriter::overwriteChangedFiles() instead.; ///; /// The original buffer is not actually changed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteBuffer.h:246,Rewrite,Rewriter,246,interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteBuffer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteBuffer.h,1,['Rewrite'],['Rewriter']
Modifiability,"/// WriteNode - Write out the description of node in the inheritance; /// diagram, which may be a base class or it may be the root node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/InheritViz.cpp:57,inherit,inheritance,57,interpreter/llvm-project/clang/lib/AST/InheritViz.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/InheritViz.cpp,1,['inherit'],['inheritance']
Modifiability,/// Writing a variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h:14,variab,variable,14,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafety.h,1,['variab'],['variable']
Modifiability,/// X = FP_EXTEND(Y) - Extend a smaller FP type into a larger FP type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h:23,Extend,Extend,23,interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h,1,['Extend'],['Extend']
Modifiability,/// X = STRICT_FP_EXTEND(Y) - Extend a smaller FP type into a larger FP; /// type.; /// It is used to limit optimizations while the DAG is being optimized.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h:30,Extend,Extend,30,interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h,1,['Extend'],['Extend']
Modifiability,/// X.Y - Represent a reference to a subfield of a variable,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h:51,variab,variable,51,interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h,1,['variab'],['variable']
Modifiability,/// X86 Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetMachine.cpp:28,Config,Configuration,28,interpreter/llvm-project/llvm/lib/Target/X86/X86TargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetMachine.cpp,1,['Config'],['Configuration']
Modifiability,/// X86FastEmitExtend - Emit a machine instruction to extend a value Src of; /// type SrcVT to type DstVT using the specified extension opcode Opc (e.g.; /// ISD::SIGN_EXTEND).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:54,extend,extend,54,interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp,1,['extend'],['extend']
Modifiability,/// XCore Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/XCore/XCoreTargetMachine.cpp:30,Config,Configuration,30,interpreter/llvm-project/llvm/lib/Target/XCore/XCoreTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/XCore/XCoreTargetMachine.cpp,1,['Config'],['Configuration']
Modifiability,"/// ZERO_EXTEND_VECTOR_INREG(Vector) - This operator represents an; /// in-register zero-extension of the low lanes of an integer vector. The; /// result type must have fewer elements than the operand type, and those; /// elements must be larger integer types such that the total size of the; /// operand type is less than or equal to the size of the result type. Each; /// of the low operand elements is zero-extended into the corresponding,; /// wider result elements.; /// NOTE: The type legalizer prefers to make the operand and result size; /// the same to allow expansion to shuffle vector during op legalization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h:410,extend,extended,410,interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h,1,['extend'],['extended']
Modifiability,"/// Zero extend or truncate to width; ///; /// Make this APInt have the bit width given by \p width. The value is zero; /// extended, truncated, or left alone to make it that width.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h:9,extend,extend,9,interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,2,['extend'],"['extend', 'extended']"
Modifiability,/// Zero extend to a new width.; ///; /// This operation zero extends the APInt to a new width. The high order bits; /// are filled with 0 bits. It is an error to specify a width that is less; /// than the current width.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h:9,extend,extend,9,interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,2,['extend'],"['extend', 'extends']"
Modifiability,/// Zero-extends 16-bit elements from the 128-bit vector of [8 x i16] in; /// \a __V and returns the 32-bit values in the corresponding elements of a; /// 256-bit vector of [8 x i32].; ///; /// \code{.operation}; /// FOR i := 0 TO 7; /// j := i*16; /// k := i*32; /// result[k+31:k] := ZeroExtend(__V[j+15:j]); /// ENDFOR; /// \endcode; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the \c VPMOVZXWD instruction.; ///; /// \param __V; /// A 128-bit vector of [8 x i16] containing the source values.; /// \returns A 256-bit vector of [8 x i32] containing the zero-extended; /// values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx2intrin.h:9,extend,extends,9,interpreter/llvm-project/clang/lib/Headers/avx2intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx2intrin.h,2,['extend'],"['extended', 'extends']"
Modifiability,/// Zero-extends 16-bit elements from the lower half of the 128-bit vector of; /// [8 x i16] in \a __V and returns the 64-bit values in the corresponding; /// elements of a 256-bit vector of [4 x i64].; ///; /// \code{.operation}; /// result[63:0] := ZeroExtend(__V[15:0]); /// result[127:64] := ZeroExtend(__V[31:16]); /// result[191:128] := ZeroExtend(__V[47:32]); /// result[255:192] := ZeroExtend(__V[64:48]); /// \endcode; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the \c VPMOVSXWQ instruction.; ///; /// \param __V; /// A 128-bit vector of [8 x i16] containing the source values.; /// \returns A 256-bit vector of [4 x i64] containing the zero-extended; /// values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx2intrin.h:9,extend,extends,9,interpreter/llvm-project/clang/lib/Headers/avx2intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx2intrin.h,2,['extend'],"['extended', 'extends']"
Modifiability,/// Zero-extends 32-bit elements from the 128-bit vector of [4 x i32] in; /// \a __V and returns the 64-bit values in the corresponding elements of a; /// 256-bit vector of [4 x i64].; ///; /// \code{.operation}; /// result[63:0] := ZeroExtend(__V[31:0]); /// result[127:64] := ZeroExtend(__V[63:32]); /// result[191:128] := ZeroExtend(__V[95:64]); /// result[255:192] := ZeroExtend(__V[127:96]); /// \endcode; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the \c VPMOVZXDQ instruction.; ///; /// \param __V; /// A 128-bit vector of [4 x i32] containing the source values.; /// \returns A 256-bit vector of [4 x i64] containing the zero-extended; /// values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx2intrin.h:9,extend,extends,9,interpreter/llvm-project/clang/lib/Headers/avx2intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx2intrin.h,2,['extend'],"['extended', 'extends']"
Modifiability,/// Zero-extends bytes from the 128-bit integer vector in \a __V and returns; /// the 16-bit values in the corresponding elements of a 256-bit vector; /// of [16 x i16].; ///; /// \code{.operation}; /// FOR i := 0 TO 15; /// j := i*8; /// k := i*16; /// result[k+15:k] := ZeroExtend(__V[j+7:j]); /// ENDFOR; /// \endcode; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the \c VPMOVZXBW instruction.; ///; /// \param __V; /// A 128-bit integer vector containing the source bytes.; /// \returns A 256-bit vector of [16 x i16] containing the zero-extended; /// values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx2intrin.h:9,extend,extends,9,interpreter/llvm-project/clang/lib/Headers/avx2intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx2intrin.h,2,['extend'],"['extended', 'extends']"
Modifiability,/// Zero-extends bytes from the lower half of the 128-bit integer vector in; /// \a __V and returns the 32-bit values in the corresponding elements of a; /// 256-bit vector of [8 x i32].; ///; /// \code{.operation}; /// FOR i := 0 TO 7; /// j := i*8; /// k := i*32; /// result[k+31:k] := ZeroExtend(__V[j+7:j]); /// ENDFOR; /// \endcode; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the \c VPMOVZXBD instruction.; ///; /// \param __V; /// A 128-bit integer vector containing the source bytes.; /// \returns A 256-bit vector of [8 x i32] containing the zero-extended; /// values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx2intrin.h:9,extend,extends,9,interpreter/llvm-project/clang/lib/Headers/avx2intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx2intrin.h,2,['extend'],"['extended', 'extends']"
Modifiability,/// Zero-extends each of the lower four 16-bit integer elements of a; /// 128-bit integer vector of [8 x i16] to 32-bit values and returns them in; /// a 128-bit vector of [4 x i32]. The upper four elements of the input; /// vector are unused.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VPMOVZXWD / PMOVZXWD </c> instruction.; ///; /// \param __V; /// A 128-bit vector of [8 x i16]. The lower four 16-bit elements are; /// zero-extended to 32-bit values.; /// \returns A 128-bit vector of [4 x i32] containing the zero-extended values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:9,extend,extends,9,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,3,['extend'],"['extended', 'extends']"
Modifiability,/// Zero-extends each of the lower four 8-bit integer elements of a; /// 128-bit vector of [16 x i8] to 32-bit values and returns them in a; /// 128-bit vector of [4 x i32]. The upper twelve elements of the input; /// vector are unused.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VPMOVZXBD / PMOVZXBD </c> instruction.; ///; /// \param __V; /// A 128-bit vector of [16 x i8]. The lower four 8-bit elements are; /// zero-extended to 32-bit values.; /// \returns A 128-bit vector of [4 x i32] containing the zero-extended values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:9,extend,extends,9,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,3,['extend'],"['extended', 'extends']"
Modifiability,/// Zero-extends each of the lower two 16-bit integer elements of a; /// 128-bit integer vector of [8 x i16] to 64-bit values and returns them in; /// a 128-bit vector of [2 x i64]. The upper six elements of the input vector; /// are unused.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VPMOVZXWQ / PMOVZXWQ </c> instruction.; ///; /// \param __V; /// A 128-bit vector of [8 x i16]. The lower two 16-bit elements are; /// zero-extended to 64-bit values.; /// \returns A 128-bit vector of [2 x i64] containing the zero-extended values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:9,extend,extends,9,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,3,['extend'],"['extended', 'extends']"
Modifiability,/// Zero-extends each of the lower two 32-bit integer elements of a; /// 128-bit integer vector of [4 x i32] to 64-bit values and returns them in; /// a 128-bit vector of [2 x i64]. The upper two elements of the input vector; /// are unused.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VPMOVZXDQ / PMOVZXDQ </c> instruction.; ///; /// \param __V; /// A 128-bit vector of [4 x i32]. The lower two 32-bit elements are; /// zero-extended to 64-bit values.; /// \returns A 128-bit vector of [2 x i64] containing the zero-extended values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:9,extend,extends,9,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,3,['extend'],"['extended', 'extends']"
Modifiability,/// Zero-extends each of the lower two 8-bit integer elements of a; /// 128-bit integer vector of [16 x i8] to 64-bit values and returns them in; /// a 128-bit vector of [2 x i64]. The upper fourteen elements of the input; /// vector are unused.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VPMOVZXBQ / PMOVZXBQ </c> instruction.; ///; /// \param __V; /// A 128-bit vector of [16 x i8]. The lower two 8-bit elements are; /// zero-extended to 64-bit values.; /// \returns A 128-bit vector of [2 x i64] containing the zero-extended values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:9,extend,extends,9,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,3,['extend'],"['extended', 'extends']"
Modifiability,/// Zero-extends the first four bytes from the 128-bit integer vector in; /// \a __V and returns the 64-bit values in the corresponding elements of a; /// 256-bit vector of [4 x i64].; ///; /// \code{.operation}; /// result[63:0] := ZeroExtend(__V[7:0]); /// result[127:64] := ZeroExtend(__V[15:8]); /// result[191:128] := ZeroExtend(__V[23:16]); /// result[255:192] := ZeroExtend(__V[31:24]); /// \endcode; ///; /// \headerfile <immintrin.h>; ///; /// This intrinsic corresponds to the \c VPMOVZXBQ instruction.; ///; /// \param __V; /// A 128-bit integer vector containing the source bytes.; /// \returns A 256-bit vector of [4 x i64] containing the zero-extended; /// values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx2intrin.h:9,extend,extends,9,interpreter/llvm-project/clang/lib/Headers/avx2intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx2intrin.h,2,['extend'],"['extended', 'extends']"
Modifiability,/// [MS] decl-specifier:; /// __declspec ( extended-decl-modifier-seq ); ///; /// [MS] extended-decl-modifier-seq:; /// extended-decl-modifier[opt]; /// extended-decl-modifier extended-decl-modifier-seq,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp:43,extend,extended-decl-modifier-seq,43,interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,5,['extend'],"['extended-decl-modifier', 'extended-decl-modifier-seq']"
Modifiability,"/// \anchor applyConcreteDbgVariableAttribute; /// \name applyConcreteDbgVariableAttribute; /// Overload set which applies attributes to \c VariableDie based on; /// the active variant of \c DV, which is passed as the first argument.; ///@{; /// See \ref applyConcreteDbgVariableAttribute",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.h:140,Variab,VariableDie,140,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.h,1,['Variab'],['VariableDie']
Modifiability,"/// \brief A vector of macros that should be interpreted as type declarations; /// instead of as function calls.; ///; /// These are expected to be macros of the form:; /// \code; /// STACK_OF(...); /// \endcode; ///; /// In the .clang-format configuration file, this can be configured like:; /// \code{.yaml}; /// TypenameMacros: ['STACK_OF', 'LIST']; /// \endcode; ///; /// For example: OpenSSL STACK_OF, BSD LIST_ENTRY.; /// \version 9",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:243,config,configuration,243,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,2,['config'],"['configuration', 'configured']"
Modifiability,"/// \brief Configuration bits for the parent interpreter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h:11,Config,Configuration,11,interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h,1,['Config'],['Configuration']
Modifiability,"/// \brief Constructor for RooBCPEffDecay.; ///; /// Creates an instance of RooBCPEffDecay with the specified parameters.; ///; /// \param[in] name The name of the PDF.; /// \param[in] title The title of the PDF.; /// \param[in] t The time variable.; /// \param[in] tag The CP state category.; /// \param[in] tau The decay time parameter.; /// \param[in] dm The mixing frequency parameter.; /// \param[in] avgMistag The average mistag rate parameter.; /// \param[in] CPeigenval The CP eigen value parameter.; /// \param[in] absLambda The absolute value of the complex lambda parameter.; /// \param[in] argLambda The argument of the complex lambda parameter.; /// \param[in] effRatio The B0/B0bar efficiency ratio.; /// \param[in] delMistag Delta mistag rate parameter.; /// \param[in] model The resolution model.; /// \param[in] type The decay type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx:240,variab,variable,240,roofit/roofit/src/RooBCPEffDecay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPEffDecay.cxx,1,['variab'],['variable']
Modifiability,"/// \brief Constructor for RooBCPGenDecay.; ///; /// Creates an instance of RooBCPGenDecay with the specified parameters.; ///; /// \param[in] name The name of the PDF.; /// \param[in] title The title of the PDF.; /// \param[in] t The time variable.; /// \param[in] tag The CP state category.; /// \param[in] tau The decay time parameter.; /// \param[in] dm The mixing frequency parameter.; /// \param[in] avgMistag The average mistag rate parameter.; /// \param[in] avgC Coefficient of cos term.; /// \param[in] avgS Coefficient of sin term.; /// \param[in] delMistag Delta mistag rate parameter.; /// \param[in] mu Tag efficiency difference parameter.; /// \param[in] model The resolution model.; /// \param[in] type The decay type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPGenDecay.cxx:240,variab,variable,240,roofit/roofit/src/RooBCPGenDecay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBCPGenDecay.cxx,1,['variab'],['variable']
Modifiability,"/// \brief Constructor for RooBDecay.; ///; /// Creates an instance of RooBDecay with the specified parameters.; ///; /// \param[in] name The name of the PDF.; /// \param[in] title The title of the PDF.; /// \param[in] t The time variable.; /// \param[in] tau The average decay time parameter.; /// \param[in] dgamma The Delta Gamma parameter.; /// \param[in] f0 The Cosh Coefficient.; /// \param[in] f1 The Sinh Coefficient.; /// \param[in] f2 The Cos Coefficient.; /// \param[in] f3 The Sin Coefficient.; /// \param[in] dm The Delta Mass parameter.; /// \param[in] model The resolution model.; /// \param[in] type The decay type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBDecay.cxx:230,variab,variable,230,roofit/roofit/src/RooBDecay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBDecay.cxx,1,['variab'],['variable']
Modifiability,"/// \brief Constructor for RooBMixDecay.; ///; /// Creates an instance of RooBMixDecay with the specified parameters.; ///; /// \param[in] name The name of the PDF.; /// \param[in] title The title of the PDF.; /// \param[in] t The time variable.; /// \param[in] mixState The mixing state category.; /// \param[in] tagFlav The flavour of tagged B0 category.; /// \param[in] tau The mixing life time parameter.; /// \param[in] dm The mixing frequency parameter.; /// \param[in] mistag The mistag rate parameter.; /// \param[in] delMistag The delta mistag rate parameter.; /// \param[in] model The resolution model.; /// \param[in] type The decay type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx:236,variab,variable,236,roofit/roofit/src/RooBMixDecay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBMixDecay.cxx,1,['variab'],['variable']
Modifiability,"/// \brief Constructs an expression, which creates the object on the; /// free store and tells the interpreter to evaluate it.; ///; /// @param[in] ExprInfo Helper structure that keeps information about; /// the expression that is being replaced and the addresses of the; /// variables that the replaced expression contains.; /// @param[in] DC The declaration context, in which the expression will; /// be evaluated at runtime; /// @param[in] type The type of the object, which will help to delete; /// it, when the LifetimeHandler goes out of scope.; /// @param[in] Interp The current interpreter object, which evaluate will; /// be called upon.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLookupLifetimeHandler.h:276,variab,variables,276,interpreter/cling/include/cling/Interpreter/DynamicLookupLifetimeHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLookupLifetimeHandler.h,1,['variab'],['variables']
Modifiability,"/// \brief Creates unique name (eg. of a variable). Used internally for; /// AST node synthesis.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h:41,variab,variable,41,interpreter/cling/lib/Interpreter/DeclExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h,2,['variab'],['variable']
Modifiability,"/// \brief Defines various target-specific GPU grid values that must be; /// consistent between host RTL (plugin), device RTL, and clang.; /// We can change grid values for a ""fat"" binary so that different; /// passes get the correct values when generating code for a; /// multi-target binary. Both amdgcn and nvptx values are stored in; /// this file. In the future, should there be differences between GPUs; /// of the same architecture, then simply make a different array and; /// use the new array name.; ///; /// Example usage in clang:; /// const unsigned slot_size =; /// ctx.GetTargetInfo().getGridValue().GV_Warp_Size;; ///; /// Example usage in libomptarget/deviceRTLs:; /// #include ""llvm/Frontend/OpenMP/OMPGridValues.h""; /// #ifdef __AMDGPU__; /// #define GRIDVAL AMDGPUGridValues; /// #else; /// #define GRIDVAL NVPTXGridValues; /// #endif; /// ... Then use this reference for GV_Warp_Size in the deviceRTL source.; /// llvm::omp::GRIDVAL().GV_Warp_Size; ///; /// Example usage in libomptarget hsa plugin:; /// #include ""llvm/Frontend/OpenMP/OMPGridValues.h""; /// #define GRIDVAL AMDGPUGridValues; /// ... Then use this reference to access GV_Warp_Size in the hsa plugin.; /// llvm::omp::GRIDVAL().GV_Warp_Size; ///; /// Example usage in libomptarget cuda plugin:; /// #include ""llvm/Frontend/OpenMP/OMPGridValues.h""; /// #define GRIDVAL NVPTXGridValues; /// ... Then use this reference to access GV_Warp_Size in the cuda plugin.; /// llvm::omp::GRIDVAL().GV_Warp_Size; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPGridValues.h:106,plugin,plugin,106,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPGridValues.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPGridValues.h,5,['plugin'],['plugin']
Modifiability,/// \brief Disable the z/OS enhanced ASCII auto-conversion for the file; /// descriptor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AutoConvert.h:28,enhance,enhanced,28,interpreter/llvm-project/llvm/include/llvm/Support/AutoConvert.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AutoConvert.h,1,['enhance'],['enhanced']
Modifiability,"/// \brief EvaluateT is used to replace all invalid source code that; /// occurs, when cling's dynamic extensions are enabled.; ///; /// When the interpreter ""sees"" invalid code it marks it and skip all the; /// semantic checks (like with templates). Afterwords all these marked; /// nodes are replaced with a call to EvaluateT, which makes valid; /// C++ code. It is templated because it can be used in expressions and; /// T is the type of the evaluated expression.; ///; /// @tparam T The type of the evaluated expression.; /// @param[in] ExprInfo Helper structure that keeps information about the; /// expression that is being replaced and the addresses of the variables; /// that the replaced expression contains.; /// @param[in] DC The declaration context, in which the expression will be; /// evaluated at runtime.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLookupRuntimeUniverse.h:665,variab,variables,665,interpreter/cling/include/cling/Interpreter/DynamicLookupRuntimeUniverse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicLookupRuntimeUniverse.h,1,['variab'],['variables']
Modifiability,"/// \brief Helper function for the constructor.; ///; /// This is a separate function (instead of just in ctor) for historical reasons.; /// Its predecessor RooRealMPFE::initVars() was used from multiple ctors, but also; /// from RooRealMPFE::constOptimizeTestStatistic at the end, which makes sense,; /// because it might change the set of variables. We may at some point want to do; /// this here as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodSerial.cxx:341,variab,variables,341,roofit/roofitcore/src/TestStatistics/LikelihoodSerial.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodSerial.cxx,1,['variab'],['variables']
Modifiability,"/// \brief Import the given object, returns the result.; ///; /// \param To Import the object into this variable.; /// \param From Object to import.; /// \return Error information (success or error).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h:104,variab,variable,104,interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTImporter.h,1,['variab'],['variable']
Modifiability,"/// \brief In order to implement the runtime type binding and expression; /// evaluation we need to be able to compile code which contains unknown; /// symbols (undefined variables, types, functions, etc.). This cannot be done; /// by a compiler like clang, because it is not valid C++ code.; ///; /// DynamicExprTransformer transforms these unknown symbols into valid C++; /// code at AST (abstract syntax tree) level. Thus it provides an opportunity; /// their evaluation to happen at runtime. Several steps are performed:; ///; /// 1. Skip compiler's error diagnostics - if a compiler encounters unknown; /// symbol, by definition, it must output an error and it mustn't produce; /// machine code. Cling implements an extension to Clang semantic analyzer; /// that allows the compiler to recover even an unknown symbol is encountered.; /// For instance if the compiler sees a symbol it looks for its definition in; /// a internal structure (symbol table) and it is not found it asks whether; /// somebody else could provide the missing symbol. That is the place where; /// the DynamicIDHandler, which is controlled by DynamicExprTransformer comes; /// into play. It marks all unknown symbols as dependent as if they are; /// templates and are going to be resolved at first instantiation, with the; /// only difference that an instantiation never happens. The advantage is that; /// the unknown symbols are not diagnosed but the disadvantage is that; /// somebody needs to transform them into valid expressions with valid types.; ///; /// 2. Replace all dependent symbols - all artificially dependent symbols need; /// to be replaced with appropriate valid symbols in order the compiler to; /// produce executable machine code. The DynamicExprTransformer walks up all; /// statements and declarations that might be possibly marked earlier as; /// dependent and replaces them with valid expression, which preserves the; /// meant behavior. Main implementation goal is to replace the as little; /// as",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:171,variab,variables,171,interpreter/cling/lib/Interpreter/DynamicLookup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h,1,['variab'],['variables']
Modifiability,"/// \brief Interpreter configuration bits that can be changed at run-time; /// by the user, e.g. to enable/disable extensions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h:23,config,configuration,23,interpreter/cling/include/cling/Interpreter/RuntimeOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeOptions.h,1,['config'],['configuration']
Modifiability,/// \brief Matches a static variable with local scope.; ///; /// Example matches y (matcher = varDecl(isStaticLocal())); /// \code; /// void f() {; /// int x;; /// static int y;; /// }; /// static int z;; /// \endcode,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ASTMatchers/ASTMatchers.h:28,variab,variable,28,interpreter/llvm-project/clang/include/clang/ASTMatchers/ASTMatchers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ASTMatchers/ASTMatchers.h,1,['variab'],['variable']
Modifiability,"/// \brief Process a TTree dataset with a functor: version without entry list; /// \tparam F functor returning a pointer to TObject or inheriting classes and; /// taking a TTreeReader& (both enforced at compile-time); ///; /// Dataset definition:; /// \param[in] fileNames vector of strings with the paths of the files with the TTree to process; /// \param[in] fileName string with the path of the files with the TTree to process; /// \param[in] collection TFileCollection with the files with the TTree to process; /// \param[in] chain TChain with the files with the TTree to process; /// \param[in] tree TTree to process; ///; /// \param[in] treeName Name of the TTree to process; /// \param[in] nToProcess Number of entries to process (0 means all); /// \param[in] jFirst First entry to process (0 means the first of the first file); ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx:135,inherit,inheriting,135,tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx,1,['inherit'],['inheriting']
Modifiability,"/// \brief Process a TTree dataset with a functor; /// \tparam F functor returning a pointer to TObject or inheriting classes and; /// taking a TTreeReader& (both enforced at compile-time); ///; /// Dataset definition:; /// \param[in] fileNames vector of strings with the paths of the files with the TTree to process; /// \param[in] fileName string with the path of the files with the TTree to process; /// \param[in] collection TFileCollection with the files with the TTree to process; /// \param[in] chain TChain with the files with the TTree to process; /// \param[in] tree TTree to process; ///; /// \param[in] entries TEntryList to filter the dataset; /// \param[in] treeName Name of the TTree to process; /// \param[in] nToProcess Number of entries to process (0 means all); /// \param[in] jFirst First entry to process (0 means the first of the first file); ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx:107,inherit,inheriting,107,tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx,1,['inherit'],['inheriting']
Modifiability,/// \brief Query the z/OS enhanced ASCII auto-conversion status of a file; /// descriptor and force the conversion if the file is not tagged with a; /// codepage.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AutoConvert.h:26,enhance,enhanced,26,interpreter/llvm-project/llvm/include/llvm/Support/AutoConvert.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AutoConvert.h,1,['enhance'],['enhanced']
Modifiability,"/// \brief Register systematic variations for a single existing column using custom variation tags.; /// \param[in] colName name of the column for which varied values are provided.; /// \param[in] expression a callable that evaluates the varied values for the specified columns. The callable can; /// take any column values as input, similarly to what happens during Filter and Define calls. It must; /// return an RVec of varied values, one for each variation tag, in the same order as the tags.; /// \param[in] inputColumns the names of the columns to be passed to the callable.; /// \param[in] variationTags names for each of the varied values, e.g. `""up""` and `""down""`.; /// \param[in] variationName a generic name for this set of varied values, e.g. `""ptvariation""`.; ///; /// Vary provides a natural and flexible syntax to define systematic variations that automatically propagate to; /// Filters, Defines and results. RDataFrame usage of columns with attached variations does not change, but for; /// results that depend on any varied quantity, a map/dictionary of varied results can be produced with; /// ROOT::RDF::Experimental::VariationsFor (see the example below).; ///; /// The dictionary will contain a ""nominal"" value (accessed with the ""nominal"" key) for the unchanged result, and; /// values for each of the systematic variations that affected the result (via upstream Filters or via direct or; /// indirect dependencies of the column values on some registered variations). The keys will be a composition of; /// variation names and tags, e.g. ""pt:up"" and ""pt:down"" for the example below.; ///; /// In the following example we add up/down variations of pt and fill a histogram with a quantity that depends on pt.; /// We automatically obtain three histograms in output (""nominal"", ""pt:up"" and ""pt:down""):; /// ~~~{.cpp}; /// auto nominal_hx =; /// df.Vary(""pt"", [] (double pt) { return RVecD{pt*0.9, pt*1.1}; }, {""down"", ""up""}); /// .Filter(""pt > k""); /// .Define(""x"", someFunc, {""pt""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:810,flexible,flexible,810,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['flexible'],['flexible']
Modifiability,"/// \brief Retrieve the member variable template partial specialization from; /// which this particular variable template partial specialization was; /// instantiated.; ///; /// \code; /// template<typename T>; /// struct Outer {; /// template<typename U> U Inner;; /// template<typename U> U* Inner<U*> = (U*)(0); // #1; /// };; ///; /// template int* Outer<float>::Inner<int*>;; /// \endcode; ///; /// In this example, the instantiation of \c Outer<float>::Inner<int*> will; /// end up instantiating the partial specialization; /// \c Outer<float>::Inner<U*>, which itself was instantiated from the; /// variable template partial specialization \c Outer<T>::Inner<U*>. Given; /// \c Outer<float>::Inner<U*>, this function would return; /// \c Outer<T>::Inner<U*>.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h:31,variab,variable,31,interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h,3,['variab'],['variable']
Modifiability,"/// \brief Splits the given environment variable by the path separator.; /// Can be used to extract the paths from LD_LIBRARY_PATH.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:40,variab,variable,40,interpreter/cling/lib/Interpreter/CIFactory.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp,1,['variab'],['variable']
Modifiability,"/// \brief The variable is set if it is required to print out the result of; /// the dynamic expression after evaluation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h:15,variab,variable,15,interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h,1,['variab'],['variable']
Modifiability,"/// \brief The variable list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h:15,variab,variable,15,interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h,1,['variab'],['variable']
Modifiability,"/// \c CacheCost represents the estimated cost of a inner loop as the number of; /// cache lines used by the memory references it contains.; /// The 'cache cost' of a loop 'L' in a loop nest 'LN' is computed as the sum of; /// the cache costs of all of its reference groups when the loop is considered; /// to be in the innermost position in the nest.; /// A reference group represents memory references that fall into the same cache; /// line. Each reference group is analysed with respect to the innermost loop in; /// a loop nest. The cost of a reference is defined as follow:; /// - one if it is loop invariant w.r.t the innermost loop,; /// - equal to the loop trip count divided by the cache line times the; /// reference stride if the reference stride is less than the cache line; /// size (CLS), and the coefficient of this loop's index variable used in all; /// other subscripts is zero (e.g. RefCost = TripCount/(CLS/RefStride)); /// - equal to the innermost loop trip count if the reference stride is greater; /// or equal to the cache line size CLS.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopCacheAnalysis.h:845,variab,variable,845,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopCacheAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopCacheAnalysis.h,1,['variab'],['variable']
Modifiability,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGrid.cxx; \class RooGrid; \ingroup Roofitcore. Utility class for RooMCIntegrator which; implements an adaptive multi-dimensional Monte Carlo numerical; integration, following the VEGAS algorithm.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx:838,adapt,adaptive,838,roofit/roofitcore/src/RooGrid.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx,1,['adapt'],['adaptive']
Modifiability,"/// \file CladDerivator.h; ///; /// \brief The file is a bridge between ROOT and clad automatic differentiation; /// plugin.; ///; /// \author Vassil Vassilev <vvasilev@cern.ch>; ///; /// \date July, 2018; /*************************************************************************; * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/CladDerivator.h:117,plugin,plugin,117,math/mathcore/inc/Math/CladDerivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/CladDerivator.h,1,['plugin'],['plugin']
Modifiability,"/// \file LiveDebugValues.cpp; ///; /// The LiveDebugValues pass extends the range of variable locations; /// (specified by DBG_VALUE instructions) from single blocks to successors; /// and any other code locations where the variable location is valid.; /// There are currently two implementations: the ""VarLoc"" implementation; /// explicitly tracks the location of a variable, while the ""InstrRef""; /// implementation tracks the values defined by instructions through locations.; ///; /// This file implements neither; it merely registers the pass, allows the; /// user to pick which implementation will be used to propagate variable; /// locations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/LiveDebugValues.cpp:65,extend,extends,65,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/LiveDebugValues.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/LiveDebugValues.cpp,5,"['extend', 'variab']","['extends', 'variable']"
Modifiability,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro generates a small RH3D, fills it with random values and; /// draw it in RCanvas, using configured web browser; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2020-06-18; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3.cxx:149,config,configured,149,tutorials/rcanvas/rh3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3.cxx,1,['config'],['configured']
Modifiability,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro generates a small V7 TH2D, fills it with random values and; /// draw it in a V7 canvas, using configured web browser; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2020-03-04; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx:156,config,configured,156,tutorials/rcanvas/rh2_colz.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx,1,['config'],['configured']
Modifiability,"/// \file; /// \ingroup tutorial_webcanv; /// \notebook -js; /// Swap X/Y axes drawing and use to draw TH1 as bar and as markers.; ///; /// Option ""haxisg;y+"" draw histogram axis as for ""hbar"" plus allow to draw grids plus draw Y labels on other side; /// Option ""bar,base0,same"" draws histogram as bars with 0 as reference value; /// Option ""P,same"" draws histogram as markers; /// Macro also shows how frame margins can be configured and poly-line drawing like filled arrow can be; /// placed relative to frame.; ///; /// Functionality available only in web-based graphics; ///; /// \macro_image (tcanvas_js); /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/haxis.cxx:425,config,configured,425,tutorials/webcanv/haxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/haxis.cxx,1,['config'],['configured']
Modifiability,"/// \macro LLVM_PLUGIN_API_VERSION; /// Identifies the API version understood by this plugin.; ///; /// When a plugin is loaded, the driver will check it's supported plugin version; /// against that of the plugin. A mismatch is an error. The supported version; /// will be incremented for ABI-breaking changes to the \c PassPluginLibraryInfo; /// struct, i.e. when callbacks are added, removed, or reordered.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassPlugin.h:86,plugin,plugin,86,interpreter/llvm-project/llvm/include/llvm/Passes/PassPlugin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassPlugin.h,4,['plugin'],['plugin']
Modifiability,"/// \p EnvVar is split by system delimiter for environment variables.; /// If \p ArgName is ""-I"", ""-L"", or an empty string, each entry from \p EnvVar; /// is prefixed by \p ArgName then added to \p Args. Otherwise, for each; /// entry of \p EnvVar, \p ArgName is added to \p Args first, then the entry; /// itself is added.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/CommonArgs.h:59,variab,variables,59,interpreter/llvm-project/clang/lib/Driver/ToolChains/CommonArgs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/CommonArgs.h,1,['variab'],['variables']
Modifiability,"/// \param Consumer receives all rewrites and the associated metadata for a; /// single match, or an error. Will always be called for each match, even if; /// the rule generates no edits. Note that clients are responsible for; /// handling the case that independent \c AtomicChanges conflict with each; /// other.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/Transformer.h:33,rewrite,rewrites,33,interpreter/llvm-project/clang/include/clang/Tooling/Transformer/Transformer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/Transformer.h,1,['rewrite'],['rewrites']
Modifiability,"/// \param Consumer receives all rewrites for a single match, or an error.; /// Will not necessarily be called for each match; for example, if the rule; /// generates no edits but does not fail. Note that clients are responsible; /// for handling the case that independent \c AtomicChanges conflict with each; /// other.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/Transformer.h:33,rewrite,rewrites,33,interpreter/llvm-project/clang/include/clang/Tooling/Transformer/Transformer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/Transformer.h,1,['rewrite'],['rewrites']
Modifiability,"/// \param[in] extended Set extended term calculation on, off or use; /// RooAbsL::Extended::Auto to determine automatically based on the; /// pdf whether to activate or not.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:15,extend,extended,15,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,3,"['Extend', 'extend']","['Extended', 'extended']"
Modifiability,"/// \return The cost of Gather or Scatter operation; /// \p Opcode - is a type of memory access Load or Store; /// \p DataTy - a vector type of the data to be loaded or stored; /// \p Ptr - pointer [or vector of pointers] - address[es] in memory; /// \p VariableMask - true when the memory access is predicated with a mask; /// that is not a compile-time constant; /// \p Alignment - alignment of single element; /// \p I - the optional original context instruction, if one exists, e.g. the; /// load/store to transform or the call to the gather/scatter intrinsic",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h:254,Variab,VariableMask,254,interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,1,['Variab'],['VariableMask']
Modifiability,/// \return The expected cost of a sign- or zero-extended vector extract. Use; /// Index = -1 to indicate that there is no information about the index value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h:49,extend,extended,49,interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,1,['extend'],['extended']
Modifiability,"/// \return Whether the state was modified in the inlined function call in; /// between \p CallEnterN and \p CallExitEndN. Mind that the stack frame; /// retrieved from a CallEnterN and CallExitEndN is the *caller's* stack; /// frame! The inlined function's stack should be retrieved from either the; /// immediate successor to \p CallEnterN or immediate predecessor to; /// \p CallExitEndN.; /// Clients should override this function if a state changes local to the; /// inlined function are not interesting, only the change occuring as a; /// result of it.; /// Example: we want to leave a not about a leaked resource object not being; /// deallocated / its ownership changed inside a function, and we don't care; /// if it was assigned to a local variable (its change in ownership is; /// inconsequential).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugReporterVisitors.h:750,variab,variable,750,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugReporterVisitors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugReporterVisitors.h,1,['variab'],['variable']
Modifiability,"/// \return an ID for the concrete type of this object.; /// This is used to implement the classof checks. This should not be used; /// for any other purpose, as the values may change as LLVM evolves.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h:192,evolve,evolves,192,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,3,['evolve'],['evolves']
Modifiability,/// \return true if the target is capable of handling swifterror values that; /// have been promoted to a specified register. The extended versions of; /// lowerReturn and lowerCall should be implemented.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CallLowering.h:130,extend,extended,130,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CallLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CallLowering.h,1,['extend'],['extended']
Modifiability,/// \returns The minimum number of bits needed to store the value of \Op as a; /// signed integer. Truncating to this size and then sign-extending to the; /// original size will not change the value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.h:137,extend,extending,137,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.h,1,['extend'],['extending']
Modifiability,/// \returns The minimum number of bits needed to store the value of \Op as a; /// signed integer. Truncating to this size and then sign-extending to; /// the original size will not change the value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCodeGenPrepare.cpp:137,extend,extending,137,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCodeGenPrepare.cpp,1,['extend'],['extending']
Modifiability,/// \returns The minimum number of bits needed to store the value of \Op as an; /// unsigned integer. Truncating to this size and then zero-extending to the; /// original size will not change the value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.h:140,extend,extending,140,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.h,1,['extend'],['extending']
Modifiability,/// \returns The minimum number of bits needed to store the value of \Op as an; /// unsigned integer. Truncating to this size and then zero-extending to; /// the original will not change the value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCodeGenPrepare.cpp:140,extend,extending,140,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCodeGenPrepare.cpp,1,['extend'],['extending']
Modifiability,/// \returns Vector bonus in percent.; ///; /// Vector bonuses: We want to more aggressively inline vector-dense kernels; /// and apply this bonus based on the percentage of vector instructions. A; /// bonus is applied if the vector instructions exceed 50% and half that; /// amount is applied if it exceeds 10%. Note that these bonuses are some what; /// arbitrary and evolved over time by accident as much as because they are; /// principled bonuses.; /// FIXME: It would be nice to base the bonus values on something more; /// scientific. A target may has no bonus on vector instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h:370,evolve,evolved,370,interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,1,['evolve'],['evolved']
Modifiability,/// \returns implicit format of this numeric variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:45,variab,variable,45,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,2,['variab'],['variable']
Modifiability,/// \returns name of this numeric variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:34,variab,variable,34,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,1,['variab'],['variable']
Modifiability,"/// \returns the input buffer's string from which this variable's value was; /// parsed, or std::nullopt if the value is not yet defined or was not parsed; /// from the input buffer. For example, the value of @LINE is not parsed from; /// the input buffer, and some numeric variables are parsed from the command; /// line instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:55,variab,variable,55,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,2,['variab'],"['variable', 'variables']"
Modifiability,"/// \returns the line number where this variable is defined, if any, or; /// std::nullopt if defined before input is parsed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:40,variab,variable,40,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,1,['variab'],['variable']
Modifiability,/// \returns the scalar sign extended integral splat value defined by \p MI if; /// possible.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Utils.h:29,extend,extended,29,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Utils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Utils.h,1,['extend'],['extended']
Modifiability,/// \returns the scalar sign extended integral splat value of \p Reg if; /// possible.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Utils.h:29,extend,extended,29,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Utils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Utils.h,1,['extend'],['extended']
Modifiability,"/// \returns the text that the string variable in this substitution matched; /// when defined, or an error if the variable is undefined.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:38,variab,variable,38,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,2,['variab'],['variable']
Modifiability,/// \returns the value of string variable \p VarName or an error if no such; /// variable has been defined.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:33,variab,variable,33,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,2,['variab'],['variable']
Modifiability,/// \returns the value of the variable referenced by this instance.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:30,variab,variable,30,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,1,['variab'],['variable']
Modifiability,/// \returns this variable's value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:18,variab,variable,18,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,1,['variab'],['variable']
Modifiability,/// \returns true if \p RegNo is an apx extended register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h:40,extend,extended,40,interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h,1,['extend'],['extended']
Modifiability,"/// \returns true if the MachineOperand is a x86-64 extended (r8 or; /// higher) register, e.g. r8, xmm8, xmm13, etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h:52,extend,extended,52,interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h,1,['extend'],['extended']
Modifiability,"/// \returns true if the MemoryOperand is a 32 extended (zmm16 or higher); /// registers, e.g. zmm21, etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h:47,extend,extended,47,interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86BaseInfo.h,1,['extend'],['extended']
Modifiability,/// \returns whether \p C is a valid first character for a variable name.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:59,variab,variable,59,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,1,['variab'],['variable']
Modifiability,"/// \see Rewriter::getNextRewritableSource(); /// Here CopyLike has the following form:; /// dst = REG_SEQUENCE Src1.src1SubIdx, subIdx1, Src2.src2SubIdx, subIdx2.; /// Each call will return a different source, walking all the available; /// source.; ///; /// The first call returns:; /// (SrcReg, SrcSubReg) = (Src1, src1SubIdx).; /// (DstReg, DstSubReg) = (dst, subIdx1).; ///; /// The second call returns:; /// (SrcReg, SrcSubReg) = (Src2, src2SubIdx).; /// (DstReg, DstSubReg) = (dst, subIdx2).; ///; /// And so on, until all the sources have been traversed, then; /// it returns false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp:9,Rewrite,Rewriter,9,interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,1,['Rewrite'],['Rewriter']
Modifiability,"/// \see Rewriter::getNextRewritableSource(); /// Here CopyLike has the following form:; /// dst.dstSubIdx = EXTRACT_SUBREG Src, subIdx.; /// There is only one rewritable source: Src.subIdx,; /// which defines dst.dstSubIdx.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp:9,Rewrite,Rewriter,9,interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,1,['Rewrite'],['Rewriter']
Modifiability,/// \see See Rewriter::getNextRewritableSource(); /// All such sources need to be considered rewritable in order to; /// rewrite a uncoalescable copy-like instruction. This method return; /// each definition that must be checked if rewritable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp:13,Rewrite,Rewriter,13,interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,2,"['Rewrite', 'rewrite']","['Rewriter', 'rewrite']"
Modifiability,"/// \see See Rewriter::getNextRewritableSource(); /// Here CopyLike has the following form:; /// dst = INSERT_SUBREG Src1, Src2.src2SubIdx, subIdx.; /// Src1 has the same register class has dst, hence, there is; /// nothing to rewrite.; /// Src2.src2SubIdx, may not be register coalescer friendly.; /// Therefore, the first call to this method returns:; /// (SrcReg, SrcSubReg) = (Src2, src2SubIdx).; /// (DstReg, DstSubReg) = (dst, subIdx).; ///; /// Subsequence calls will return false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp:13,Rewrite,Rewriter,13,interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,2,"['Rewrite', 'rewrite']","['Rewriter', 'rewrite']"
Modifiability,/// \}; /// Collect information used to emit debugging information of a variable in a; /// stack slot.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h:72,variab,variable,72,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,1,['variab'],['variable']
Modifiability,/// `LargestVar` is equal to the largest positive integer that represents a; /// variable in the formula.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp:81,variab,variable,81,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,1,['variab'],['variable']
Modifiability,"/// access to Maximum for signal and background for each variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h:57,variab,variable,57,tmva/tmva/inc/TMVA/BinarySearchTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h,1,['variab'],['variable']
Modifiability,"/// access to Minimum for signal and background for each variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h:57,variab,variable,57,tmva/tmva/inc/TMVA/BinarySearchTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h,1,['variab'],['variable']
Modifiability,"/// access to RMS for each variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h:27,variab,variable,27,tmva/tmva/inc/TMVA/BinarySearchTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h,1,['variab'],['variable']
Modifiability,"/// access to RMS for signal and background for each variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h:53,variab,variable,53,tmva/tmva/inc/TMVA/BinarySearchTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h,1,['variab'],['variable']
Modifiability,"/// access to mean for signal and background for each variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h:54,variab,variable,54,tmva/tmva/inc/TMVA/BinarySearchTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h,1,['variab'],['variable']
Modifiability,"/// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install fftw in /usr/local/bin,lib etc...; ///; /// 3) Start from a source installation of ROOT. ROOT should discover it. See https://root.cern/building-root; ///; ///; /// If you do not have root access and want to make a private installation of FFTW; ///; /// 2) Make a private install area for FFTW, e.g. /home/myself/fftw; ///; /// 3) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure --prefix=/home/myself/fftw' followed by 'make install'.; /// Substitute /home/myself/fftw with a directory of your choice. This; /// procedure will install FFTW in the location designated by you; ///; /// 4) Start from a source installation of ROOT.; /// Look up and set the proper paths for ROOT to discover FFTW. See https://root.cern/building-root; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:4876,config,configure,4876,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,2,['config'],['configure']
Modifiability,"/// adapter for packed arrays (to SMatrix indexing conventions)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/CholeskyDecomp.h:4,adapt,adapter,4,math/smatrix/inc/Math/CholeskyDecomp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/CholeskyDecomp.h,1,['adapt'],['adapter']
Modifiability,"/// adaptive sampling algorithm to speed up interval calculation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/NeymanConstruction.h:4,adapt,adaptive,4,roofit/roostats/inc/RooStats/NeymanConstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/NeymanConstruction.h,1,['adapt'],['adaptive']
Modifiability,"/// add a completely configured channel",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Measurement.h:21,config,configured,21,roofit/histfactory/inc/RooStats/HistFactory/Measurement.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Measurement.h,1,['config'],['configured']
Modifiability,"/// add variables . Return number of variables successfully added",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:8,variab,variables,8,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,2,['variab'],['variables']
Modifiability,/// addConstraints - Add constraints and biases. This method may be called; /// more than once to accumulate constraints.; /// @param LiveBlocks Constraints for blocks that have the variable live in or; /// live out.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h:182,variab,variable,182,interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h,1,['variab'],['variable']
Modifiability,"/// addGlobalMapping - Tell the execution engine that the specified global is; /// at the specified location. This is used internally as functions are JIT'd; /// and as global variables are laid out in memory. It can and should also be; /// used by clients of the EE that want to have an LLVM global overlay; /// existing data in memory. Values to be mapped should be named, and have; /// external or weak linkage. Mappings are automatically removed when their; /// GlobalValue is destroyed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h:176,variab,variables,176,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,1,['variab'],['variables']
Modifiability,/// addLocalScopeForVarDecl - Add LocalScope for variable declaration. It will; /// create add scope for automatic objects and temporary objects bound to; /// const reference. Will reuse Scope if not NULL.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:49,variab,variable,49,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['variab'],['variable']
Modifiability,/// addNewBlock - Add a new basic block BB as an empty succcessor to DomBB. All; /// variables that are live out of DomBB will be marked as passing live through; /// BB.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp:85,variab,variables,85,interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,1,['variab'],['variables']
Modifiability,/// addNewBlock - Add a new basic block BB as an empty succcessor to DomBB. All; /// variables that are live out of DomBB will be marked as passing live through; /// BB. LiveInSets[BB] is *not* updated (because it is not needed during; /// PHIElimination).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp:85,variab,variables,85,interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,1,['variab'],['variables']
Modifiability,/// addNewBlock - Add a new basic block BB between DomBB and SuccBB. All; /// variables that are live out of DomBB and live into SuccBB will be marked; /// as passing live through BB. This method assumes that the machine code is; /// still in SSA form.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h:78,variab,variables,78,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,1,['variab'],['variables']
Modifiability,"/// addScopeChangesHandling - appends information about destruction, lifetime; /// and cfgScopeEnd for variables in the scope that was left by the jump, and; /// appends cfgScopeBegin for all scopes that where entered.; /// We insert the cfgScopeBegin at the end of the jump node, as depending on; /// the sourceBlock, each goto, may enter different amount of scopes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:103,variab,variables,103,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['variab'],['variables']
Modifiability,/// adjust - Set forced language options.; /// Apply changes to the target information with respect to certain; /// language options which change the target configuration and adjust; /// the language based on the target options where applicable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/TargetInfo.cpp:157,config,configuration,157,interpreter/llvm-project/clang/lib/Basic/TargetInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/TargetInfo.cpp,1,['config'],['configuration']
Modifiability,"/// analyzePHINodes - Gather information about the PHI nodes in here. In; /// particular, we want to map the variable information of a virtual register; /// which is used in a PHI node. We map that to the BB the vreg is coming from.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp:109,variab,variable,109,interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,1,['variab'],['variable']
Modifiability,"/// analyzePHINodes - Gather information about the PHI nodes in here. In; /// particular, we want to map the variable information of a virtual; /// register which is used in a PHI node. We map that to the BB the vreg; /// is coming from.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h:109,variab,variable,109,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,1,['variab'],['variable']
Modifiability,/// arg_operands - iteration adapter for range-for loops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/InstrTypes.h:29,adapt,adapter,29,interpreter/llvm-project/llvm/include/llvm/IR/InstrTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/InstrTypes.h,2,['adapt'],['adapter']
Modifiability,"/// array_pod_sort - This sorts an array with the specified start and end; /// extent. This is just like std::sort, except that it calls qsort instead of; /// using an inlined template. qsort is slightly slower than std::sort, but; /// most sorts are not performance critical in LLVM and std::sort has to be; /// template instantiated for each type, leading to significant measured code; /// bloat. This function should generally be used instead of std::sort where; /// possible.; ///; /// This function assumes that you have simple POD-like types that can be; /// compared with std::less and can be moved with memcpy. If this isn't true,; /// you should use std::sort.; ///; /// NOTE: If qsort_r were portable, we could allow a custom comparator and; /// default to std::less.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/STLExtras.h:702,portab,portable,702,interpreter/llvm-project/llvm/include/llvm/ADT/STLExtras.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/STLExtras.h,1,['portab'],['portable']
Modifiability,/// buildBlockDescriptor - Build the block descriptor meta-data for a block.; /// buildBlockDescriptor is accessed from 5th field of the Block_literal; /// meta-data and contains stationary information about the block literal.; /// Its definition will have 4 (or optionally 6) words.; /// \code; /// struct Block_descriptor {; /// unsigned long reserved;; /// unsigned long size; // size of Block_literal metadata in bytes.; /// void *copy_func_helper_decl; // optional copy helper.; /// void *destroy_func_decl; // optional destructor helper.; /// void *block_method_encoding_address; // @encode for block literal signature.; /// void *block_layout_info; // encoding of captured block variables.; /// };; /// \endcode,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp:686,variab,variables,686,interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,1,['variab'],['variables']
Modifiability,/// clearKillFlags - Iterate over all the uses of the given register and; /// clear the kill flag from the MachineOperand. This function is used by; /// optimization passes which extend register lifetimes and need only; /// preserve conservative kill flag information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h:179,extend,extend,179,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineRegisterInfo.h,2,['extend'],['extend']
Modifiability,"/// collectUpperBound - All subscripts are the same type (on my machine,; /// an i64). The loop bound may be a smaller type. collectUpperBound; /// find the bound, if available, and zero extends it to the Type T.; /// (I zero extend since the bound should always be >= 0.); /// If no upper bound is available, return NULL.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:187,extend,extends,187,interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,2,['extend'],"['extend', 'extends']"
Modifiability,"/// configure TestStatSampler for the Alt run",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/FrequentistCalculator.h:4,config,configure,4,roofit/roostats/inc/RooStats/FrequentistCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/FrequentistCalculator.h,2,['config'],['configure']
Modifiability,"/// configure TestStatSampler for the Null run",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/FrequentistCalculator.h:4,config,configure,4,roofit/roostats/inc/RooStats/FrequentistCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/FrequentistCalculator.h,2,['config'],['configure']
Modifiability,"/// configure proof with number of experiments and host session; /// in case of Prooflite, it is better to define the number of workers as ""worker=n"" in the host string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProofConfig.h:4,config,configure,4,roofit/roostats/inc/RooStats/ProofConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProofConfig.h,1,['config'],['configure']
Modifiability,"/// constructor from data and model configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/CombinedCalculator.h:36,config,configuration,36,roofit/roostats/inc/RooStats/CombinedCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/CombinedCalculator.h,1,['config'],['configuration']
Modifiability,/// createDwarfEHPass - This pass mulches exception handling code into a form; /// adapted to code generation. Required if using dwarf exception handling.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h:83,adapt,adapted,83,interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,1,['adapt'],['adapted']
Modifiability,/// createPassConfig - Create a pass configuration object to be used by; /// addPassToEmitX methods for generating a pipeline of CodeGen passes.; ///; /// Targets may override this to extend TargetPassConfig.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:37,config,configuration,37,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,2,"['config', 'extend']","['configuration', 'extend']"
Modifiability,/// createSjLjEHPreparePass - This pass adapts exception handling code to use; /// the GCC-style builtin setjmp/longjmp (sjlj) to handling EH control flow.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h:40,adapt,adapts,40,interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,1,['adapt'],['adapts']
Modifiability,/// createWasmEHPass - This pass adapts exception handling code to use; /// WebAssembly's exception handling scheme.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h:33,adapt,adapts,33,interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,1,['adapt'],['adapts']
Modifiability,"/// emitNonZeroVLAInit - Emit the ""zero"" initialization of a; /// variable-length array whose elements have a non-zero bit-pattern.; ///; /// \param baseType the inner-most element type of the array; /// \param src - a char* pointing to the bit-pattern for a single; /// base element of the array; /// \param sizeInChars - the total size of the VLA, in chars",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp:66,variab,variable-length,66,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp,1,['variab'],['variable-length']
Modifiability,"/// emitPrologue - Push callee-saved registers onto the stack, which; /// automatically adjust the stack pointer. Adjust the stack pointer to allocate; /// space for local variables. Also emit labels used by the exception handler to; /// generate the exception handling frames.; /*; Here's a gist of what gets emitted:. ; Establish frame pointer, if needed; [if needs FP]; push %rbp; .cfi_def_cfa_offset 16; .cfi_offset %rbp, -16; .seh_pushreg %rpb; mov %rsp, %rbp; .cfi_def_cfa_register %rbp. ; Spill general-purpose registers; [for all callee-saved GPRs]; pushq %<reg>; [if not needs FP]; .cfi_def_cfa_offset (offset from RETADDR); .seh_pushreg %<reg>. ; If the required stack alignment > default stack alignment; ; rsp needs to be re-aligned. This creates a ""re-alignment gap""; ; of unknown size in the stack frame.; [if stack needs re-alignment]; and $MASK, %rsp. ; Allocate space for locals; [if target is Windows and allocated space > 4096 bytes]; ; Windows needs special care for allocations larger; ; than one page.; mov $NNN, %rax; call ___chkstk_ms/___chkstk; sub %rax, %rsp; [else]; sub $NNN, %rsp. [if needs FP]; .seh_stackalloc (size of XMM spill slots); .seh_setframe %rbp, SEHFrameOffset ; = size of all spill slots; [else]; .seh_stackalloc NNN. ; Spill XMMs; ; Note, that while only Windows 64 ABI specifies XMMs as callee-preserved,; ; they may get spilled on any platform, if the current function; ; calls @llvm.eh.unwind.init; [if needs FP]; [for all callee-saved XMM registers]; movaps %<xmm reg>, -MMM(%rbp); [for all callee-saved XMM registers]; .seh_savexmm %<xmm reg>, (-MMM + SEHFrameOffset); ; i.e. the offset relative to (%rbp - SEHFrameOffset); [else]; [for all callee-saved XMM registers]; movaps %<xmm reg>, KKK(%rsp); [for all callee-saved XMM registers]; .seh_savexmm %<xmm reg>, KKK. .seh_endprologue. [if needs base pointer]; mov %rsp, %rbx; [if needs to restore base pointer]; mov %rsp, -MMM(%rbp). ; Emit CFI info; [if needs FP]; [for all callee-saved registers]; .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:172,variab,variables,172,interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,1,['variab'],['variables']
Modifiability,"/// establishNestingLevels - Examines the loop nesting of the Src and Dst; /// instructions and establishes their shared loops. Sets the variables; /// CommonLevels, SrcLevels, and MaxLevels.; /// The source and destination instructions needn't be contained in the same; /// loop. The routine establishNestingLevels finds the level of most deeply; /// nested loop that contains them both, CommonLevels. An instruction that's; /// not contained in a loop is at level = 0. MaxLevels is equal to the level; /// of the source plus the level of the destination, minus CommonLevels.; /// This lets us allocate vectors MaxLevels in length, with room for every; /// distinct loop referenced in both the source and destination subscripts.; /// The variable SrcLevels is the nesting depth of the source instruction.; /// It's used to help calculate distinct loops referenced by the destination.; /// Here's the map from loops to levels:; /// 0 - unused; /// 1 - outermost common loop; /// ... - other common loops; /// CommonLevels - innermost common loop; /// ... - loops containing Src but not Dst; /// SrcLevels - innermost loop containing Src but not Dst; /// ... - loops containing Dst but not Src; /// MaxLevels - innermost loop containing Dst but not Src; /// Consider the follow code fragment:; /// for (a = ...) {; /// for (b = ...) {; /// for (c = ...) {; /// for (d = ...) {; /// A[] = ...;; /// }; /// }; /// for (e = ...) {; /// for (f = ...) {; /// for (g = ...) {; /// ... = A[];; /// }; /// }; /// }; /// }; /// }; /// If we're looking at the possibility of a dependence between the store; /// to A (the Src) and the load from A (the Dst), we'll note that they; /// have 2 loops in common, so CommonLevels will equal 2 and the direction; /// vector for Result will have 2 entries. SrcLevels = 4 and MaxLevels = 7.; /// A map from loop names to level indices would look like; /// a - 1; /// b - 2 = CommonLevels; /// c - 3; /// d - 4 = SrcLevels; /// e - 5; /// f - 6; /// g - 7 = MaxLevels",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:137,variab,variables,137,interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,2,['variab'],"['variable', 'variables']"
Modifiability,"/// exactRDIVtest - Tests the RDIV subscript pair for dependence.; /// Things of the form [c1 + a*i] and [c2 + b*j],; /// where i and j are induction variable, c1 and c2 are loop invariant,; /// and a and b are constants.; /// Returns true if any possible dependence is disproved.; /// Marks the result as inconsistent.; /// Works in some cases that symbolicRDIVtest doesn't,; /// and vice versa.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:150,variab,variable,150,interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,1,['variab'],['variable']
Modifiability,/// extendInsnRange - Extend the current instruction range covered by; /// this scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LexicalScopes.h:4,extend,extendInsnRange,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/LexicalScopes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LexicalScopes.h,2,"['Extend', 'extend']","['Extend', 'extendInsnRange']"
Modifiability,/// extendPHIKillRanges - Extend the ranges of all values killed by original; /// parent PHIDefs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h:4,extend,extendPHIKillRanges,4,interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h,2,"['Extend', 'extend']","['Extend', 'extendPHIKillRanges']"
Modifiability,"/// finish - Compute the optimal spill code placement given the; /// constraints. No MustSpill constraints will be violated, and the smallest; /// possible number of PrefX constraints will be violated, weighted by; /// expected execution frequencies.; /// The selected bundles are returned in the bitvector passed to prepare().; /// @return True if a perfect solution was found, allowing the variable to be; /// in a register through all relevant bundles.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h:392,variab,variable,392,interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h,1,['variab'],['variable']
Modifiability,"/// finish - after all the new live ranges have been created, compute the; /// remaining live range, and rewrite instructions to use the new registers.; /// @param LRMap When not null, this vector will map each live range in Edit; /// back to the indices returned by openIntv.; /// There may be extra indices created by dead code elimination.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h:105,rewrite,rewrite,105,interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h,1,['rewrite'],['rewrite']
Modifiability,"/// fix an existing variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h:20,variab,variable,20,math/mathcore/inc/Math/BasicMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h,4,['variab'],['variable']
Modifiability,"/// forceRecompute - Force the live range of ParentVNI in RegIdx to be; /// recomputed by LiveRangeCalc::extend regardless of the number of defs.; /// This is used for values whose live range doesn't match RegAssign exactly.; /// They could have rematerialized, or back-copies may have been moved.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h:105,extend,extend,105,interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h,1,['extend'],['extend']
Modifiability,/// function - descriptor rewrites a function,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SymbolRewriter.h:26,rewrite,rewrites,26,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SymbolRewriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SymbolRewriter.h,1,['rewrite'],['rewrites']
Modifiability,"/// get a clone of the NLL variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MarkovChain.h:27,variab,variable,27,roofit/roostats/inc/RooStats/MarkovChain.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MarkovChain.h,1,['variab'],['variable']
Modifiability,"/// get a clone of the weight variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MarkovChain.h:30,variab,variable,30,roofit/roostats/inc/RooStats/MarkovChain.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MarkovChain.h,1,['variab'],['variable']
Modifiability,"/// get index of variable given a variable given a name; /// return -1 if variable is not found",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h:17,variab,variable,17,math/mathcore/inc/Math/BasicMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h,9,['variab'],['variable']
Modifiability,"/// get index of variable given a variable given a name; /// return always -1 . (It is Not implemented)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h:17,variab,variable,17,math/minuit/inc/TMinuitMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h,2,['variab'],['variable']
Modifiability,"/// get name of variables (override if minimizer support storing of variable names)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h:16,variab,variables,16,math/mathcore/inc/Math/BasicMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h,4,['variab'],"['variable', 'variables']"
Modifiability,"/// get name of variables (override if minimizer support storing of variable names); /// return an empty string if variable is not found",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx:16,variab,variables,16,math/mathcore/src/Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx,3,['variab'],"['variable', 'variables']"
Modifiability,"/// get this MarkovChain as a RooDataHist whose entries contain the values; /// of whichVars. Call with whichVars = nullptr (default) to get values of; /// all variables (including NLL value and weight);; /// Note: caller owns the returned data hist",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MarkovChain.h:160,variab,variables,160,roofit/roostats/inc/RooStats/MarkovChain.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MarkovChain.h,1,['variab'],['variables']
Modifiability,"/// get variable settings in a variable object (like ROOT::Fit::ParamsSettings)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h:8,variab,variable,8,math/mathcore/inc/Math/BasicMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h,8,['variab'],['variable']
Modifiability,"/// getAdjustedAnalysisPointer - This method is used when a pass implements; /// an analysis interface through multiple inheritance. If needed, it should; /// override this to adjust the this pointer as needed for the specified pass; /// info.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Pass.h:120,inherit,inheritance,120,interpreter/llvm-project/llvm/include/llvm/Pass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Pass.h,1,['inherit'],['inheritance']
Modifiability,/// getAlignOfGlobalVar - Return the alignment in bits that should be given; /// to a global variable of the specified type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:93,variab,variable,93,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['variab'],['variable']
Modifiability,/// getAlignOfGlobalVarInChars - Return the alignment in characters that; /// should be given to a global variable of the specified type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:106,variab,variable,106,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['variab'],['variable']
Modifiability,/// getAnyExtendExpr - Return a SCEV for the given operand extended with; /// unspecified bits out to the given type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:59,extend,extended,59,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['extend'],['extended']
Modifiability,/// getArithExtendImm - Encode the extend type and shift amount for an; /// arithmetic instruction:; /// imm: 3-bit extend amount; /// {5-3} = shifter; /// {2-0} = imm3,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h:35,extend,extend,35,interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h,2,['extend'],['extend']
Modifiability,/// getBlockCaptureLifetime - This routine returns life time of the captured; /// block variable for the purpose of block layout meta-data generation. FQT is; /// the type of the variable captured in the block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:88,variab,variable,88,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,2,['variab'],['variable']
Modifiability,/// getCopyFromParts - Create a value that contains the specified legal parts; /// combined into the value they represent. If the parts combine to a type; /// larger than ValueVT then AssertOp can be used to specify whether the extra; /// bits are known to be zero (ISD::AssertZext) or sign extended from ValueVT; /// (ISD::AssertSext).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:291,extend,extended,291,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['extend'],['extended']
Modifiability,/// getCopyFromPartsVector - Create a value that contains the specified legal; /// parts combined into the value they represent. If the parts combine to a; /// type larger than ValueVT then AssertOp can be used to specify whether the; /// extra bits are known to be zero (ISD::AssertZext) or sign extended from; /// ValueVT (ISD::AssertSext).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:297,extend,extended,297,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['extend'],['extended']
Modifiability,"/// getCopyToParts - Create a series of nodes that contain the specified value; /// split into legal parts. If the parts contain more bits than Val, then, for; /// integers, ExtendKind can be used to specify how to generate the extra bits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:174,Extend,ExtendKind,174,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['Extend'],['ExtendKind']
Modifiability,/// getDefaultTargetTriple() - Return the default target triple the compiler; /// has been configured to produce code for.; ///; /// The target triple is a string in the format of:; /// CPU_TYPE-VENDOR-OPERATING_SYSTEM; /// or; /// CPU_TYPE-VENDOR-KERNEL-OPERATING_SYSTEM,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Host.h:91,config,configured,91,interpreter/llvm-project/llvm/include/llvm/TargetParser/Host.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Host.h,1,['config'],['configured']
Modifiability,"/// getDiagnosticLevel - Based on the way the client configured the; /// DiagnosticsEngine object, classify the specified diagnostic ID into a Level,; /// by consumable the DiagnosticClient.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp:53,config,configured,53,interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/DiagnosticIDs.cpp,1,['config'],['configured']
Modifiability,/// getEditBuffer - Get or create a RewriteBuffer for the specified FileID.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/Rewriter.cpp:36,Rewrite,RewriteBuffer,36,interpreter/llvm-project/clang/lib/Rewrite/Rewriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/Rewriter.cpp,1,['Rewrite'],['RewriteBuffer']
Modifiability,/// getExtVectorType - Return the unique reference to an extended vector type of; /// the specified element type and size. VectorType must be a built-in type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:57,extend,extended,57,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['extend'],['extended']
Modifiability,/// getExtendImm - Encode the extend type and amount for a load/store inst:; /// doshift: should the offset be scaled by the access size; /// shifter: 000 ==> uxtb; /// 001 ==> uxth; /// 010 ==> uxtw; /// 011 ==> uxtx; /// 100 ==> sxtb; /// 101 ==> sxth; /// 110 ==> sxtw; /// 111 ==> sxtx; /// {3-1} = shifter; /// {0} = doshift,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h:30,extend,extend,30,interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h,1,['extend'],['extend']
Modifiability,/// getExtendType - Extract the extend type for operands of arithmetic ops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h:32,extend,extend,32,interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h,1,['extend'],['extend']
Modifiability,/// getExtendType - Extract the extend type for the offset operand of; /// loads/stores.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h:32,extend,extend,32,interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h,1,['extend'],['extend']
Modifiability,/// getExtendTypeForNode - Translate an extend node to the corresponding; /// ExtendType value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:40,extend,extend,40,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,2,"['Extend', 'extend']","['ExtendType', 'extend']"
Modifiability,/// getGlobalsRegion - Retrieve the memory region associated with; /// global variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:78,variab,variables,78,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h,1,['variab'],['variables']
Modifiability,"/// getIVIncOperand returns an induction variable increment's induction; /// variable operand.; ///; /// If allowScale is set, any type of GEP is allowed as long as the nonIV; /// operands dominate InsertPos.; ///; /// If allowScale is not set, ensure that a GEP increment conforms to one of the; /// simple patterns generated by getAddRecExprPHILiterally and; /// expandAddtoGEP. If the pattern isn't recognized, return NULL.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp:41,variab,variable,41,interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,2,['variab'],['variable']
Modifiability,"/// getInitializer - Return the initializer for this global variable. It is; /// illegal to call this method if the global is external, because we cannot; /// tell what the value is initialized to!; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h:60,variab,variable,60,interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h,1,['variab'],['variable']
Modifiability,/// getIntersectionOfProtocols - This routine finds the intersection of set; /// of protocols inherited from two distinct objective-c pointer objects with; /// the given common base.; /// It is used to build composite qualifier list of the composite type of; /// the conditional expression involving two objective-c pointer objects.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:94,inherit,inherited,94,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['inherit'],['inherited']
Modifiability,"/// getKindForGlobal - This is a top-level target-independent classifier for; /// a global object. Given a global variable and information from the TM, this; /// function classifies the global in a target independent manner. This function; /// may be overridden by the target implementation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/TargetLoweringObjectFile.cpp:114,variab,variable,114,interpreter/llvm-project/llvm/lib/Target/TargetLoweringObjectFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/TargetLoweringObjectFile.cpp,1,['variab'],['variable']
Modifiability,"/// getMappedOffset - Given an offset into the original SourceBuffer that this; /// RewriteBuffer is based on, map it into the offset space of the; /// RewriteBuffer. If AfterInserts is true and if the OrigOffset indicates a; /// position where text is inserted, the location returned will be after any; /// inserted text at the position.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteBuffer.h:84,Rewrite,RewriteBuffer,84,interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteBuffer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteBuffer.h,2,['Rewrite'],['RewriteBuffer']
Modifiability,"/// getMemExtendOpValue - Return the encoded value for a reg-extend load/store; /// instruction: bit 0 is whether a shift is present, bit 1 is whether the; /// operation is a sign extend (as opposed to a zero extend).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64MCCodeEmitter.cpp:61,extend,extend,61,interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64MCCodeEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64MCCodeEmitter.cpp,3,['extend'],['extend']
Modifiability,/// getMemoryforGV - Allocate memory for a global variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h:50,variab,variable,50,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,1,['variab'],['variable']
Modifiability,"/// getMinGlobalAlign - Return the minimum alignment of a global variable,; /// unless its alignment is explicitly reduced via attributes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h:65,variab,variable,65,interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,1,['variab'],['variable']
Modifiability,"/// getObjCEncodingForMethodParameter - Return the encoded type for a single; /// method parameter or return type. If Extended, include class names and; /// block object types.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:118,Extend,Extended,118,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['Extend'],['Extended']
Modifiability,"/// getObjCEncodingForPropertyDecl - Return the encoded type for this; /// property declaration. If non-NULL, Container must be either an; /// ObjCCategoryImplDecl or ObjCImplementationDecl; it should only be; /// NULL when getting encodings for protocol properties.; /// Property attributes are stored as a comma-delimited C string. The simple; /// attributes readonly and bycopy are encoded as single characters. The; /// parametrized attributes, getter=name, setter=name, and ivar=name, are; /// encoded as single characters, followed by an identifier. Property types; /// are also encoded as a parametrized attribute. The characters used to encode; /// these attributes are defined by the following enumeration:; /// @code; /// enum PropertyAttributes {; /// kPropertyReadOnly = 'R', // property is read-only.; /// kPropertyBycopy = 'C', // property is a copy of the value last assigned; /// kPropertyByref = '&', // property is a reference to the value last assigned; /// kPropertyDynamic = 'D', // property is dynamic; /// kPropertyGetter = 'G', // followed by getter selector name; /// kPropertySetter = 'S', // followed by setter selector name; /// kPropertyInstanceVariable = 'V' // followed by instance variable name; /// kPropertyType = 'T' // followed by old-style type encoding.; /// kPropertyWeak = 'W' // 'weak' property; /// kPropertyStrong = 'P' // property GC'able; /// kPropertyNonAtomic = 'N' // property non-atomic; /// kPropertyOptional = '?' // property optional; /// };; /// @endcode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:1213,variab,variable,1213,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['variab'],['variable']
Modifiability,/// getObjCIvarRegion - Retrieve or create the memory region associated with; /// a specified Objective-c instance variable. 'superRegion' corresponds; /// to the containing region (which typically represents the Objective-C; /// object).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:115,variab,variable,115,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h,1,['variab'],['variable']
Modifiability,"/// getOperandLatency - Compute and return the use operand latency of a given; /// pair of def and use.; /// In most cases, the static scheduling itinerary was enough to determine the; /// operand latency. But it may not be possible for instructions with variable; /// number of defs / uses.; ///; /// This is a raw interface to the itinerary that may be directly overriden by; /// a target. Use computeOperandLatency to get the best estimate of latency.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp:255,variab,variable,255,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,2,['variab'],['variable']
Modifiability,"/// getOrEmitGlobalVariable - Return the address of the specified global; /// variable, possibly emitting it to memory if needed. This is used by the; /// Emitter.; ///; /// This function is deprecated for the MCJIT execution engine. Use; /// getGlobalValueAddress instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h:78,variab,variable,78,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,1,['variab'],['variable']
Modifiability,"/// getPreferredVectorAction - The code we generate when vector types are; /// legalized by promoting the integer element type is often much worse; /// than code we generate if we widen the type for applicable vector types.; /// The issue with promoting is that the vector is scalaraized, individual; /// elements promoted and then the vector is rebuilt. So say we load a pair; /// of v4i8's and shuffle them. This will turn into a mess of 8 extending; /// loads, moves back into VSR's (or memory ops if we don't have moves) and; /// then the VPERM for the shuffle. All in all a very slow sequence.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h:442,extend,extending,442,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,1,['extend'],['extending']
Modifiability,"/// getRegNumForOperand - some operands use different numbering schemes; /// for the same registers. For example, a VSX instruction may have any of; /// vs0-vs63 allocated whereas an Altivec instruction could only have; /// vs32-vs63 allocated (numbered as v0-v31). This function returns the actual; /// register number needed for the opcode/operand number combination.; /// The operand number argument will be useful when we need to extend this; /// to instructions that use both Altivec and VSX numbering (for different; /// operands).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp:434,extend,extend,434,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp,2,['extend'],['extend']
Modifiability,"/// getRewriteBufferFor - Return the rewrite buffer for the specified FileID.; /// If no modification has been made to it, return null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/Rewriter.h:37,rewrite,rewrite,37,interpreter/llvm-project/clang/include/clang/Rewrite/Core/Rewriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/Rewriter.h,1,['rewrite'],['rewrite']
Modifiability,/// getTTypeGlobalReference - Return an MCExpr to use for a; /// reference to the specified global variable from exception; /// handling information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/TargetLoweringObjectFile.cpp:99,variab,variable,99,interpreter/llvm-project/llvm/lib/Target/TargetLoweringObjectFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/TargetLoweringObjectFile.cpp,1,['variab'],['variable']
Modifiability,/// getTrackedGlobals - Get and return the set of inferred initializers for; /// global variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SCCPSolver.h:88,variab,variables,88,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SCCPSolver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SCCPSolver.h,1,['variab'],['variables']
Modifiability,"/// getVariableArrayDecayedType - Turns the given type, which may be; /// variably-modified, into the corresponding type with all the known; /// sizes replaced with [*].",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:74,variab,variably-modified,74,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['variab'],['variably-modified']
Modifiability,/// getVariableArrayType - Returns a non-unique reference to the type for a; /// variable array of the specified element type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:81,variab,variable,81,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['variab'],['variable']
Modifiability,/// getVariableValue - Get the value for variable symbols.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSymbol.h:41,variab,variable,41,interpreter/llvm-project/llvm/include/llvm/MC/MCSymbol.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSymbol.h,1,['variab'],['variable']
Modifiability,/// global variable - descriptor rewrites a global variable,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SymbolRewriter.h:11,variab,variable,11,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SymbolRewriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SymbolRewriter.h,3,"['rewrite', 'variab']","['rewrites', 'variable']"
Modifiability,/// guessInstructionProperties - Return true if it's OK to guess instruction; /// properties instead of raising an error.; ///; /// This is configurable as a temporary migration aid. It will eventually be; /// permanently false.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenTarget.cpp:140,config,configurable,140,interpreter/llvm-project/llvm/utils/TableGen/CodeGenTarget.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenTarget.cpp,1,['config'],['configurable']
Modifiability,/// handleTargetFeatures - Perform initialization based on the user; /// configured set of features.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/PPC.cpp:73,config,configured,73,interpreter/llvm-project/clang/lib/Basic/Targets/PPC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/PPC.cpp,2,['config'],['configured']
Modifiability,"/// hasAddressTaken - returns true if there are any uses of this function; /// other than direct calls or invokes to it, or blockaddress expressions.; /// Optionally passes back an offending user for diagnostic purposes,; /// ignores callback uses, assume like pointer annotation calls, references in; /// llvm.used and llvm.compiler.used variables, operand bundle; /// ""clang.arc.attachedcall"", and direct calls with a different call site; /// signature (the function is implicitly casted).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Function.h:339,variab,variables,339,interpreter/llvm-project/llvm/include/llvm/IR/Function.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Function.h,1,['variab'],['variables']
Modifiability,"/// hasAddressTaken - returns true if there are any uses of this function; /// other than direct calls or invokes to it. Optionally ignores callback; /// uses, assume like pointer annotation calls, and references in llvm.used; /// and llvm.compiler.used variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Function.cpp:254,variab,variables,254,interpreter/llvm-project/llvm/lib/IR/Function.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Function.cpp,1,['variab'],['variables']
Modifiability,"/// hasDefinitiveInitializer - Whether the global variable has an initializer,; /// and any other instances of the global (this can happen due to weak; /// linkage) are guaranteed to have the same initializer.; ///; /// Note that if you want to transform a global, you must use; /// hasUniqueInitializer() instead, because of the *_odr linkage type.; ///; /// Example:; ///; /// @a = global SomeType* null - Initializer is both definitive and unique.; ///; /// @b = global weak SomeType* null - Initializer is neither definitive nor; /// unique.; ///; /// @c = global weak_odr SomeType* null - Initializer is definitive, but not; /// unique.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h:50,variab,variable,50,interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h,1,['variab'],['variable']
Modifiability,/// hasFP - Return true if the specified function should have a dedicated frame; /// pointer register. This is true if the function has variable sized allocas; /// or if frame pointer elimination is disabled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp:136,variab,variable,136,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,2,['variab'],['variable']
Modifiability,/// hasFP - Return true if the specified function should have a dedicated; /// frame pointer register. For most targets this is true only if the function; /// has variable sized allocas or if frame pointer elimination is disabled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetFrameLowering.h:163,variab,variable,163,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetFrameLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetFrameLowering.h,1,['variab'],['variable']
Modifiability,"/// hasOwnVBPtr - Does this class provide its own virtual-base; /// table pointer, rather than inheriting one from a primary base; /// class?; ///; /// This implies that the ABI has no primary base class, meaning; /// that it has no base classes that are suitable under the conditions; /// of the ABI.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecordLayout.h:95,inherit,inheriting,95,interpreter/llvm-project/clang/include/clang/AST/RecordLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecordLayout.h,1,['inherit'],['inheriting']
Modifiability,"/// hasOwnVFPtr - Does this class provide its own virtual-function; /// table pointer, rather than inheriting one from a primary base; /// class? If so, it is at offset zero.; ///; /// This implies that the ABI has no primary base class, meaning; /// that it has no base classes that are suitable under the conditions; /// of the ABI.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecordLayout.h:99,inherit,inheriting,99,interpreter/llvm-project/clang/include/clang/AST/RecordLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecordLayout.h,1,['inherit'],['inheriting']
Modifiability,"/// hasUniqueInitializer - Whether the global variable has an initializer, and; /// any changes made to the initializer will turn up in the final executable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h:46,variab,variable,46,interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h,1,['variab'],['variable']
Modifiability,/// hasVFPtr - Does this class have a virtual function table pointer; /// that can be extended by a derived class? This is synonymous with; /// this class having a VFPtr at offset zero.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecordLayout.h:86,extend,extended,86,interpreter/llvm-project/clang/include/clang/AST/RecordLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecordLayout.h,1,['extend'],['extended']
Modifiability,/// if (cond) <then-statement> else <else-statement>; /// FIXME: add condition that models 'expression or variable declaration',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Syntax/Nodes.h:106,variab,variable,106,interpreter/llvm-project/clang/include/clang/Tooling/Syntax/Nodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Syntax/Nodes.h,1,['variab'],['variable']
Modifiability,/// immediateExtend - Changes the instruction in place to one using an immediate; /// extender.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp:86,extend,extender,86,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,1,['extend'],['extender']
Modifiability,"/// inherited methods from HypoTestCalculator interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestCalculatorGeneric.h:4,inherit,inherited,4,roofit/roostats/inc/RooStats/HypoTestCalculatorGeneric.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestCalculatorGeneric.h,1,['inherit'],['inherited']
Modifiability,"/// inheritsFrom - Indicates whether all instructions in one class also belong; /// to another class.; ///; /// @param child - The class that may be the subset; /// @param parent - The class that may be the superset; /// @return - True if child is a subset of parent, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86DisassemblerTables.cpp:4,inherit,inheritsFrom,4,interpreter/llvm-project/llvm/utils/TableGen/X86DisassemblerTables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86DisassemblerTables.cpp,1,['inherit'],['inheritsFrom']
Modifiability,/// initializeBuiltins - Mark the identifiers for all the builtins with their; /// appropriate builtin ID # and mark any non-portable builtin identifiers as; /// such.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Builtins.cpp:125,portab,portable,125,interpreter/llvm-project/clang/lib/Basic/Builtins.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Builtins.cpp,1,['portab'],['portable']
Modifiability,"/// is set to 'true', external paths will always be prepended with the overlay; /// directory, even if external paths are not relative paths. The; /// 'root-relative' option has no interaction with the 'overlay-relative'; /// option.; ///; /// Virtual directories that list their contents are represented as; /// \verbatim; /// {; /// 'type': 'directory',; /// 'name': <string>,; /// 'contents': [ <file or directory entries> ]; /// }; /// \endverbatim; ///; /// The default attributes for such virtual directories are:; /// \verbatim; /// MTime = now() when created; /// Perms = 0777; /// User = Group = 0; /// Size = 0; /// UniqueID = unspecified unique value; /// \endverbatim; ///; /// When a path prefix matches such a directory, the next component in the path; /// is matched against the entries in the 'contents' array.; ///; /// Re-mapped directories, on the other hand, are represented as; /// /// \verbatim; /// {; /// 'type': 'directory-remap',; /// 'name': <string>,; /// 'use-external-name': <boolean>, # Optional; /// 'external-contents': <path to external directory>; /// }; /// \endverbatim; ///; /// and inherit their attributes from the external directory. When a path; /// prefix matches such an entry, the unmatched components are appended to the; /// 'external-contents' path, and the resulting path is looked up in the; /// external file system instead.; ///; /// Re-mapped files are represented as; /// \verbatim; /// {; /// 'type': 'file',; /// 'name': <string>,; /// 'use-external-name': <boolean>, # Optional; /// 'external-contents': <path to external file>; /// }; /// \endverbatim; ///; /// Their attributes and file contents are determined by looking up the file at; /// their 'external-contents' path in the external file system.; ///; /// For 'file', 'directory' and 'directory-remap' entries the 'name' field may; /// contain multiple path components (e.g. /path/to/file). However, any; /// directory in such a path that contains more than one child must be uniquely;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/VirtualFileSystem.h:2701,inherit,inherit,2701,interpreter/llvm-project/llvm/include/llvm/Support/VirtualFileSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/VirtualFileSystem.h,1,['inherit'],['inherit']
Modifiability,"/// isConstantSizeType - Return true if this is not a variable sized type,; /// according to the rules of C99 6.7.5p3. It is not legal to call this on; /// incomplete types or dependent types.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp:54,variab,variable,54,interpreter/llvm-project/clang/lib/AST/Type.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp,1,['variab'],['variable']
Modifiability,"/// isDefinedOutsideFunctionOrMethod - This predicate returns true if this; /// scoped decl is defined outside the current function or method. This is; /// roughly global variables and functions, but also handles enums (which; /// could be defined inside or outside a function etc).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h:171,variab,variables,171,interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,1,['variab'],['variables']
Modifiability,"/// isEmptyRecord - Return true iff a structure contains only empty; /// fields. Note that a structure with a flexible array member is not; /// considered empty. If AsIfNoUniqueAddr is true, then C++ record fields are; /// considered empty if the [[no_unique_address]] attribute would have made; /// them empty.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ABIInfoImpl.h:110,flexible,flexible,110,interpreter/llvm-project/clang/lib/CodeGen/ABIInfoImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ABIInfoImpl.h,1,['flexible'],['flexible']
Modifiability,"/// isExtendedBUILD_VECTOR - Check if N is a constant BUILD_VECTOR where each; /// element has been zero/sign-extended, depending on the isSigned parameter,; /// from an integer type half its size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:110,extend,extended,110,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['extend'],['extended']
Modifiability,"/// isIsomorphicTo - Return true if this node is recursively; /// isomorphic to the specified node. For this comparison, the node's; /// entire state is considered. The assigned name is ignored, since; /// nodes with differing names are considered isomorphic. However, if; /// the assigned name is present in the dependent variable set, then; /// the assigned name is considered significant and the node is; /// isomorphic if the names match.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp:323,variab,variable,323,interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,1,['variab'],['variable']
Modifiability,"/// isOffsetOfLocal - Do we need to emit code to get the offset of the local; /// variable, rather than its value? Only valid when parsing MS-style inline; /// assembly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCParser/MCParsedAsmOperand.h:82,variab,variable,82,interpreter/llvm-project/llvm/include/llvm/MC/MCParser/MCParsedAsmOperand.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCParser/MCParsedAsmOperand.h,1,['variab'],['variable']
Modifiability,"/// isRedundantFlagInstr - check whether the first instruction, whose only; /// purpose is to update flags, can be made redundant.; /// CMPrr can be made redundant by SUBrr if the operands are the same.; /// CMPri can be made redundant by SUBri if the operands are the same.; /// CMPrr(r0, r1) can be made redundant by ADDr[ri](r0, r1, X).; /// This function can be extended later on.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:366,extend,extended,366,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,1,['extend'],['extended']
Modifiability,"/// isScalar - Returns true if a particular level is scalar; that is,; /// if no subscript in the source or destination mention the induction; /// variable associated with the loop at this level.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:147,variab,variable,147,interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,2,['variab'],['variable']
Modifiability,/// isSignExtended - Check if a node is a vector value that is sign-extended; /// or a constant BUILD_VECTOR with sign-extended elements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:68,extend,extended,68,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,2,['extend'],['extended']
Modifiability,"/// isSingleElementStruct - Determine if a structure is a ""single; /// element struct"", i.e. it has exactly one non-empty field or; /// exactly one field which is itself a single element; /// struct. Structures with flexible array members are never; /// considered single element structs.; ///; /// \return The field declaration for the single non-empty field, if; /// it exists.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ABIInfoImpl.h:216,flexible,flexible,216,interpreter/llvm-project/clang/lib/CodeGen/ABIInfoImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ABIInfoImpl.h,1,['flexible'],['flexible']
Modifiability,/// isStackSlot - Sometimes it is useful the be able to store a non-negative; /// frame index in a variable that normally holds a register. isStackSlot(); /// returns true if Reg is in the range used for stack slots.; ///; /// FIXME: remove in favor of member.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Register.h:99,variab,variable,99,interpreter/llvm-project/llvm/include/llvm/CodeGen/Register.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Register.h,1,['variab'],['variable']
Modifiability,/// isVarArg - Return true if this function takes a variable number of; /// arguments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Function.h:52,variab,variable,52,interpreter/llvm-project/llvm/include/llvm/IR/Function.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Function.h,1,['variab'],['variable']
Modifiability,"/// isZExtFree - Return true if any actual instruction that defines a value; /// of type Ty1 implicit zero-extends the value to Ty2 in the result; /// register. This does not necessarily include registers defined in unknown; /// ways, such as incoming arguments, or copies from unknown virtual; /// registers. Also, if isTruncateFree(Ty2, Ty1) is true, this does not; /// necessarily apply to truncate instructions. e.g. on msp430, all; /// instructions that define 8-bit values implicit zero-extend the result; /// out to 16 bits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430ISelLowering.h:107,extend,extends,107,interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430ISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430ISelLowering.h,2,['extend'],"['extend', 'extends']"
Modifiability,/// isZeroExtended - Check if a node is a vector value that is zero-extended (or; /// any-extended) or a constant BUILD_VECTOR with zero-extended elements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:68,extend,extended,68,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,3,['extend'],['extended']
Modifiability,/// iteration adapter for range-for loops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:14,adapt,adapter,14,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,2,['adapt'],['adapter']
Modifiability,"/// json::OStream allows writing well-formed JSON without materializing; /// all structures as json::Value ahead of time.; /// It's faster, lower-level, and less safe than OS << json::Value.; /// It also allows emitting more constructs, such as comments.; ///; /// Only one ""top-level"" object can be written to a stream.; /// Simplest usage involves passing lambdas (Blocks) to fill in containers:; ///; /// json::OStream J(OS);; /// J.array([&]{; /// for (const Event &E : Events); /// J.object([&] {; /// J.attribute(""timestamp"", int64_t(E.Time));; /// J.attributeArray(""participants"", [&] {; /// for (const Participant &P : E.Participants); /// J.value(P.toString());; /// });; /// });; /// });; ///; /// This would produce JSON like:; ///; /// [; /// {; /// ""timestamp"": 19287398741,; /// ""participants"": [; /// ""King Kong"",; /// ""Miley Cyrus"",; /// ""Cleopatra""; /// ]; /// },; /// ...; /// ]; ///; /// The lower level begin/end methods (arrayBegin()) are more flexible but; /// care must be taken to pair them correctly:; ///; /// json::OStream J(OS);; // J.arrayBegin();; /// for (const Event &E : Events) {; /// J.objectBegin();; /// J.attribute(""timestamp"", int64_t(E.Time));; /// J.attributeBegin(""participants"");; /// for (const Participant &P : E.Participants); /// J.value(P.toString());; /// J.attributeEnd();; /// J.objectEnd();; /// }; /// J.arrayEnd();; ///; /// If the call sequence isn't valid JSON, asserts will fire in debug mode.; /// This can be mismatched begin()/end() pairs, trying to emit attributes inside; /// an array, and so on.; /// With asserts disabled, this is undefined behavior.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/JSON.h:965,flexible,flexible,965,interpreter/llvm-project/llvm/include/llvm/Support/JSON.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/JSON.h,1,['flexible'],['flexible']
Modifiability,/// llvm_shutdown - Deallocate and destroy all ManagedStatic variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ManagedStatic.h:61,variab,variables,61,interpreter/llvm-project/llvm/include/llvm/Support/ManagedStatic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ManagedStatic.h,1,['variab'],['variables']
Modifiability,"/// llvm_shutdown - Deallocate and destroy all ManagedStatic variables.; /// IMPORTANT: it's only safe to call llvm_shutdown() in single thread,; /// without any other threads executing LLVM APIs.; /// llvm_shutdown() should be the last use of LLVM APIs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ManagedStatic.cpp:61,variab,variables,61,interpreter/llvm-project/llvm/lib/Support/ManagedStatic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ManagedStatic.cpp,1,['variab'],['variables']
Modifiability,/// lowerAcrossUnwindEdges - Find all variables which are alive across an unwind; /// edge and spill them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SjLjEHPrepare.cpp:38,variab,variables,38,interpreter/llvm-project/llvm/lib/CodeGen/SjLjEHPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SjLjEHPrepare.cpp,1,['variab'],['variables']
Modifiability,/// maps assembly-time variable names to variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp:23,variab,variable,23,interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"/// minimum no of toys in tails for adaptive sampling; /// (taking weights into account, therefore double); /// Default: 0.0 which means no adaptive sampling",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ToyMCSampler.h:36,adapt,adaptive,36,roofit/roostats/inc/RooStats/ToyMCSampler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ToyMCSampler.h,2,['adapt'],['adaptive']
Modifiability,"/// minos error for variable i, return false if Minos failed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h:20,variab,variable,20,math/minuit/inc/TMinuitMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h,1,['variab'],['variable']
Modifiability,/// named alias - descriptor rewrites a global alias,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SymbolRewriter.h:29,rewrite,rewrites,29,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SymbolRewriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SymbolRewriter.h,1,['rewrite'],['rewrites']
Modifiability,/// needAddressOf - Do we need to emit code to get the address of the; /// variable/label? Only valid when parsing MS-style inline assembly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCParser/MCParsedAsmOperand.h:75,variab,variable,75,interpreter/llvm-project/llvm/include/llvm/MC/MCParser/MCParsedAsmOperand.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCParser/MCParsedAsmOperand.h,1,['variab'],['variable']
Modifiability,"/// number of free variables (real dimension of the problem)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h:19,variab,variables,19,math/mathcore/inc/Math/BasicMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h,1,['variab'],['variables']
Modifiability,"/// number of free variables (real dimension of the problem); /// this is <= Function().NDim() which is the total",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h:19,variab,variables,19,math/fumili/inc/TFumiliMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h,4,['variab'],['variables']
Modifiability,"/// number of free variables (real dimension of the problem); /// this is <= Function().NDim() which is the total; // virtual unsigned int NFree() const { return fNFree; }; /// minimizer provides error and error matrix",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLNLSMinimizer.h:19,variab,variables,19,math/mathmore/inc/Math/GSLNLSMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLNLSMinimizer.h,1,['variab'],['variables']
Modifiability,"/// number of free variables (real dimension of the problem); /// this is <= Function().NDim() which is the total; /// (re-implement if minimizer supports bounded parameters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:19,variab,variables,19,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['variab'],['variables']
Modifiability,/// objc-class-instance-variables:; /// '{' objc-instance-variable-decl-list[opt] '}'; ///; /// objc-instance-variable-decl-list:; /// objc-visibility-spec; /// objc-instance-variable-decl ';'; /// ';'; /// objc-instance-variable-decl-list objc-visibility-spec; /// objc-instance-variable-decl-list objc-instance-variable-decl ';'; /// objc-instance-variable-decl-list static_assert-declaration; /// objc-instance-variable-decl-list ';'; ///; /// objc-visibility-spec:; /// @private; /// @protected; /// @public; /// @package [OBJC2]; ///; /// objc-instance-variable-decl:; /// struct-declaration; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:24,variab,variables,24,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,10,['variab'],"['variable-decl', 'variable-decl-list', 'variables']"
Modifiability,/// objc-implementation:; /// objc-class-implementation-prologue; /// objc-category-implementation-prologue; ///; /// objc-class-implementation-prologue:; /// @implementation identifier objc-superclass[opt]; /// objc-class-instance-variables[opt]; ///; /// objc-category-implementation-prologue:; /// @implementation identifier ( identifier ),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:232,variab,variables,232,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,1,['variab'],['variables']
Modifiability,"/// opcode for captured block variables layout 'instructions'.; /// In the following descriptions, 'I' is the value of the immediate field.; /// (field following the opcode).; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:30,variab,variables,30,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['variab'],['variables']
Modifiability,"/// parameter error by index; // (NOTE: this due to conflict with TObject::Error cannot used in derived class which; // inherits from TObject. Use instead ParError (or Errors()[i] )",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h:120,inherit,inherits,120,math/mathcore/inc/Fit/FitResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h,1,['inherit'],['inherits']
Modifiability,"/// parseDIModule:; /// ::= !DIModule(scope: !0, name: ""SomeModule"", configMacros:; /// ""-DNDEBUG"", includePath: ""/usr/include"", apinotes: ""module.apinotes"",; /// file: !1, line: 4, isDecl: false)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:69,config,configMacros,69,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['config'],['configMacros']
Modifiability,/// parseDirectiveElseIfdef; /// ::= elseifdef symbol; /// | elseifdef variable,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp:71,variab,variable,71,interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,1,['variab'],['variable']
Modifiability,/// parseDirectiveIfdef; /// ::= ifdef symbol; /// | ifdef variable,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp:59,variab,variable,59,interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/MasmParser.cpp,1,['variab'],['variable']
Modifiability,/// parseDirectiveTLSDescSeq; /// ::= .tlsdescseq tls-variable,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:54,variab,variable,54,interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,1,['variab'],['variable']
Modifiability,/// parseGNUAsmQualifierListOpt - Parse a GNU extended asm qualifier list.; /// asm-qualifier:; /// volatile; /// inline; /// goto; ///; /// asm-qualifier-list:; /// asm-qualifier; /// asm-qualifier-list asm-qualifier,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseStmtAsm.cpp:46,extend,extended,46,interpreter/llvm-project/clang/lib/Parse/ParseStmtAsm.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseStmtAsm.cpp,1,['extend'],['extended']
Modifiability,"/// parseGVEntry; /// ::= 'gv' ':' '(' ('name' ':' STRINGCONSTANT | 'guid' ':' UInt64); /// [',' 'summaries' ':' Summary[',' Summary]* ]? ')'; /// Summary ::= '(' (FunctionSummary | VariableSummary | AliasSummary) ')'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:182,Variab,VariableSummary,182,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['Variab'],['VariableSummary']
Modifiability,/// parseNamedGlobal:; /// GlobalVar '=' OptionalVisibility (ALIAS | IFUNC) ...; /// GlobalVar '=' OptionalLinkage OptionalPreemptionSpecifier; /// OptionalVisibility OptionalDLLStorageClass; /// ... -> global variable,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:210,variab,variable,210,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,1,['variab'],['variable']
Modifiability,/// parseUnnamedGlobal:; /// OptionalVisibility (ALIAS | IFUNC) ...; /// OptionalLinkage OptionalPreemptionSpecifier OptionalVisibility; /// OptionalDLLStorageClass; /// ... -> global variable; /// GlobalID '=' OptionalVisibility (ALIAS | IFUNC) ...; /// GlobalID '=' OptionalLinkage OptionalPreemptionSpecifier; /// OptionalVisibility; /// OptionalDLLStorageClass; /// ... -> global variable,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp:184,variab,variable,184,interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/AsmParser/LLParser.cpp,2,['variab'],['variable']
Modifiability,"/// pointers to master variables needed for updates",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/PdfProposal.h:23,variab,variables,23,roofit/roostats/inc/RooStats/PdfProposal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/PdfProposal.h,1,['variab'],['variables']
Modifiability,"/// prepare - Reset state and prepare for a new spill placement computation.; /// @param RegBundles Bit vector to receive the edge bundles where the; /// variable should be kept in a register. Each bit; /// corresponds to an edge bundle, a set bit means the; /// variable should be kept in a register through the; /// bundle. A clear bit means the variable should be; /// spilled. This vector is retained.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h:154,variab,variable,154,interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h,3,['variab'],['variable']
Modifiability,"/// query if an existing variable is fixed (i.e. considered constant in the minimization); /// note that by default all variables are not fixed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h:25,variab,variable,25,math/mathcore/inc/Math/BasicMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h,8,['variab'],"['variable', 'variables']"
Modifiability,/// range adapter for GC transition arguments,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h:10,adapt,adapter,10,interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,1,['adapt'],['adapter']
Modifiability,/// range adapter for actual call arguments,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h:10,adapt,adapter,10,interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,1,['adapt'],['adapter']
Modifiability,/// range adapter for gc arguments,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h:10,adapt,adapter,10,interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,1,['adapt'],['adapter']
Modifiability,/// range adapter for vm state arguments,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h:10,adapt,adapter,10,interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,1,['adapt'],['adapter']
Modifiability,/// raw_os_ostream - A raw_ostream that writes to an std::ostream. This is a; /// simple adaptor class. It does not check for output errors; clients should; /// use the underlying stream to detect errors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_os_ostream.h:89,adapt,adaptor,89,interpreter/llvm-project/llvm/include/llvm/Support/raw_os_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_os_ostream.h,1,['adapt'],['adaptor']
Modifiability,"/// relaxBranches - For Hexagon, if the jump target/loop label is too far from; /// the jump/loop instruction then, we need to make sure that we have constant; /// extenders set for jumps and loops.; /// There are six iterations in this phase. It's self explanatory below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBranchRelaxation.cpp:164,extend,extenders,164,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBranchRelaxation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBranchRelaxation.cpp,1,['extend'],['extenders']
Modifiability,"/// release an existing variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h:24,variab,variable,24,math/mathcore/inc/Math/BasicMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h,4,['variab'],['variable']
Modifiability,"/// removeMatchingExtensions - Examines a subscript pair.; /// If the source and destination are identically sign (or zero); /// extended, it strips off the extension in an effort to; /// simplify the actual analysis.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:129,extend,extended,129,interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,1,['extend'],['extended']
Modifiability,"/// removeVirtualRegisterDead - Remove the specified kill of the virtual; /// register from the live variable information. Returns true if the; /// variable was marked dead at the specified instruction, false; /// otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h:101,variab,variable,101,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,2,['variab'],['variable']
Modifiability,"/// removeVirtualRegisterKilled - Remove the specified kill of the virtual; /// register from the live variable information. Returns true if the; /// variable was marked as killed by the specified instruction,; /// false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h:103,variab,variable,103,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,2,['variab'],['variable']
Modifiability,"/// return index of variable used for discrimination at this node",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTreeNode.h:20,variab,variable,20,tmva/tmva/inc/TMVA/BinarySearchTreeNode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTreeNode.h,2,['variab'],['variable']
Modifiability,"/// return reference to the objective function; ///virtual const ROOT::Math::IGenFunction & Function() const;; /// get name of variables (override if minimizer support storing of variable names)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h:127,variab,variables,127,math/minuit/inc/TMinuitMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h,2,['variab'],"['variable', 'variables']"
Modifiability,"/// returns configured browser kind, see EBrowserKind for supported values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/inc/ROOT/RWebDisplayArgs.hxx:12,config,configured,12,gui/webdisplay/inc/ROOT/RWebDisplayArgs.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/inc/ROOT/RWebDisplayArgs.hxx,1,['config'],['configured']
Modifiability,"/// rewriteAArch64FrameIndex - Rewrite MI to access 'Offset' bytes from the; /// FP. Return false if the offset could not be handled directly in MI, and; /// return the left-over portion by reference.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.h:31,Rewrite,Rewrite,31,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.h,1,['Rewrite'],['Rewrite']
Modifiability,"/// rewriteARMFrameIndex / rewriteT2FrameIndex -; /// Rewrite MI to access 'Offset' bytes from the FP. Return false if the; /// offset could not be handled directly in MI, and return the left-over; /// portion by reference.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h:4,rewrite,rewriteARMFrameIndex,4,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h,2,"['Rewrite', 'rewrite']","['Rewrite', 'rewriteARMFrameIndex']"
Modifiability,/// rewriteAssigned - Rewrite all uses of Edit->getReg().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp:4,rewrite,rewriteAssigned,4,interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp,2,"['Rewrite', 'rewrite']","['Rewrite', 'rewriteAssigned']"
Modifiability,/// rewriteAssigned - Rewrite all uses of Edit.getReg() to assigned registers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h:4,rewrite,rewriteAssigned,4,interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.h,2,"['Rewrite', 'rewrite']","['Rewrite', 'rewriteAssigned']"
Modifiability,"/// rewritePHIOperands - When there are additional Tail predecessors, insert; /// select instructions in Head and rewrite PHI operands to use the selects.; /// Keep the PHI instructions in Tail to handle the other predecessors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp:4,rewrite,rewritePHIOperands,4,interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/EarlyIfConversion.cpp,2,['rewrite'],"['rewrite', 'rewritePHIOperands']"
Modifiability,/// run - The top level method that is invoked after all of the instance; /// variables are set up from command line arguments. The \p as_child argument; /// indicates whether the driver is to run in parent mode or child mode.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.h:78,variab,variables,78,interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.h,1,['variab'],['variables']
Modifiability,/// run - The top level method that is invoked after all of the instance; /// variables are set up from command line arguments.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.cpp:78,variab,variables,78,interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.cpp,1,['variab'],['variables']
Modifiability,"/// schedule - Called back from MachineScheduler::runOnMachineFunction; /// after setting up the current scheduling region. [RegionBegin, RegionEnd); /// only includes instructions that have DAG nodes, not scheduling boundaries.; ///; /// This is a skeletal driver, with all the functionality pushed into helpers,; /// so that it can be easily extended by experimental schedulers. Generally,; /// implementing MachineSchedStrategy should be sufficient to implement a new; /// scheduling algorithm. However, if a scheduler further subclasses; /// ScheduleDAGMILive then it will want to override this virtual method in order; /// to update any specialized state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:344,extend,extended,344,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['extend'],['extended']
Modifiability,"/// set a new fixed variable (override if minimizer supports them )",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx:20,variab,variable,20,math/mathcore/src/Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx,1,['variab'],['variable']
Modifiability,"/// set a new free variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:19,variab,variable,19,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['variab'],['variable']
Modifiability,"/// set a new lower limit variable (override if minimizer supports them )",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:26,variab,variable,26,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['variab'],['variable']
Modifiability,"/// set a new upper limit variable (override if minimizer supports them )",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:26,variab,variable,26,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['variab'],['variable']
Modifiability,"/// set a new upper/lower limited variable (override if minimizer supports them ) otherwise as default set an unlimited; /// variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx:34,variab,variable,34,math/mathcore/src/Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx,2,['variab'],['variable']
Modifiability,"/// set an object to trace operation for each iteration; /// The object must be a (or inherit from) ROOT::Minuit2::MnTraceObject and implement operator() (int, const; /// MinimumState & state)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h:86,inherit,inherit,86,math/minuit2/inc/Minuit2/Minuit2Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h,1,['inherit'],['inherit']
Modifiability,"/// set fixed variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/BasicMinimizer.cxx:14,variab,variable,14,math/mathcore/src/BasicMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/BasicMinimizer.cxx,1,['variab'],['variable']
Modifiability,"/// set fixed variable (override if minimizer supports them )",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h:14,variab,variable,14,math/fumili/inc/TFumiliMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h,5,['variab'],['variable']
Modifiability,"/// set free variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h:13,variab,variable,13,math/fumili/inc/TFumiliMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h,4,['variab'],['variable']
Modifiability,"/// set free variable (dummy impl. since there is no need to set variables in the Linear Fitter)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearMinimizer.h:13,variab,variable,13,math/minuit/inc/TLinearMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearMinimizer.h,2,['variab'],"['variable', 'variables']"
Modifiability,"/// set index of variable used for discrimination at this node",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTreeNode.h:17,variab,variable,17,tmva/tmva/inc/TMVA/BinarySearchTreeNode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTreeNode.h,2,['variab'],['variable']
Modifiability,"/// set lower limit variable (override if minimizer supports them )",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h:20,variab,variable,20,math/fumili/inc/TFumiliMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h,4,['variab'],['variable']
Modifiability,"/// set the initial range of an existing variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:41,variab,variable,41,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['variab'],['variable']
Modifiability,"/// set the limits of an already existing variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h:42,variab,variable,42,math/mathcore/inc/Math/BasicMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h,3,['variab'],['variable']
Modifiability,"/// set the limits of an existing variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h:34,variab,variable,34,math/minuit/inc/TMinuitMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h,1,['variab'],['variable']
Modifiability,"/// set the lower-limit of an already existing variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h:47,variab,variable,47,math/mathcore/inc/Math/BasicMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h,3,['variab'],['variable']
Modifiability,"/// set the lower-limit of an existing variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h:39,variab,variable,39,math/minuit/inc/TMinuitMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h,1,['variab'],['variable']
Modifiability,"/// set the step size of an already existing variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h:45,variab,variable,45,math/mathcore/inc/Math/BasicMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h,3,['variab'],['variable']
Modifiability,"/// set the step size of an existing variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h:37,variab,variable,37,math/minuit/inc/TMinuitMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h,1,['variab'],['variable']
Modifiability,"/// set the upper-limit of an already existing variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h:47,variab,variable,47,math/mathcore/inc/Math/BasicMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h,3,['variab'],['variable']
Modifiability,"/// set the upper-limit of an existing variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h:39,variab,variable,39,math/minuit/inc/TMinuitMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h,1,['variab'],['variable']
Modifiability,"/// set the value of an already existing variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx:41,variab,variable,41,math/mathcore/src/Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx,1,['variab'],['variable']
Modifiability,"/// set the value of an existing variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h:33,variab,variable,33,math/fumili/inc/TFumiliMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h,3,['variab'],['variable']
Modifiability,"/// set the values of all existing variables (array must be dimensioned to the size of existing parameters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h:35,variab,variables,35,math/mathcore/inc/Math/BasicMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h,1,['variab'],['variables']
Modifiability,"/// set the values of all existing variables (array must be dimensioned to the size of the existing parameters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:35,variab,variables,35,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['variab'],['variables']
Modifiability,"/// set true: if event variable > cutValue ==> signal , false otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTreeNode.h:23,variab,variable,23,tmva/tmva/inc/TMVA/DecisionTreeNode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTreeNode.h,1,['variab'],['variable']
Modifiability,"/// set upper limit variable (override if minimizer supports them )",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h:20,variab,variable,20,math/fumili/inc/TFumiliMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h,4,['variab'],['variable']
Modifiability,"/// set upper/lower limited variable (override if minimizer supports them )",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h:28,variab,variable,28,math/fumili/inc/TFumiliMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h,4,['variab'],['variable']
Modifiability,"/// set variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h:8,variab,variable,8,math/minuit2/inc/Minuit2/Minuit2Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h,1,['variab'],['variable']
Modifiability,"/// set what divisor we will use when dividing the range of a variable to; /// determine the width of the proposal function for each dimension; /// e.g. divisor = 6 for sigma = 1/6th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProposalHelper.h:62,variab,variable,62,roofit/roostats/inc/RooStats/ProposalHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProposalHelper.h,1,['variab'],['variable']
Modifiability,"/// set which variables to put on each axis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h:14,variab,variables,14,roofit/roostats/inc/RooStats/MCMCCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h,1,['variab'],['variables']
Modifiability,"/// setInitializer - Sets the initializer for this global variable, removing; /// any existing initializer if InitVal==NULL. If this GV has type T*, the; /// initializer must have type T.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h:58,variab,variable,58,interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h,1,['variab'],['variable']
Modifiability,"/// setMCJITMemoryManager - Sets the MCJIT memory manager to use. This allows; /// clients to customize their memory allocation policies for the MCJIT. This; /// is only appropriate for the MCJIT; setting this and configuring the builder; /// to create anything other than MCJIT will cause a runtime error. If create(); /// is called and is successful, the created engine takes ownership of the; /// memory manager. This option defaults to NULL.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h:214,config,configuring,214,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,1,['config'],['configuring']
Modifiability,"/// setTableFields - Uses the opcode type, instruction context, opcode, and a; /// ModRMFilter as criteria to set a particular set of entries in the; /// decode tables to point to a specific uid.; ///; /// @param type - The opcode type (ONEBYTE, TWOBYTE, etc.); /// @param insnContext - The context to use (IC, IC_64BIT, etc.); /// @param opcode - The last byte of the opcode (not counting any escape; /// or extended opcodes).; /// @param filter - The ModRMFilter that decides which ModR/M byte values; /// correspond to the desired instruction.; /// @param uid - The unique ID of the instruction.; /// @param is32bit - Instructon is only 32-bit; /// @param noPrefix - Instruction record has no prefix.; /// @param ignoresVEX_L - Instruction ignores VEX.L; /// @param ignoresVEX_W - Instruction ignores VEX.W; /// @param AddrSize - Instructions address size 16/32/64. 0 is unspecified",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86DisassemblerTables.h:409,extend,extended,409,interpreter/llvm-project/llvm/utils/TableGen/X86DisassemblerTables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86DisassemblerTables.h,1,['extend'],['extended']
Modifiability,"/// sext(add_nsw(x, C)) --> add(sext(x), C_sext); /// zext(add_nuw(x, C)) --> add(zext(x), C_zext); /// Promoting a sign/zero extension ahead of a no overflow 'add' exposes; /// opportunities to combine math ops, use an LEA, or use a complex addressing; /// mode. This can eliminate extend, add, and shift instructions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:283,extend,extend,283,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extend']
Modifiability,/// simplifyUsersOfIV - Simplify instructions that use this induction variable; /// by using ScalarEvolution to analyze the IV's recurrence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyIndVar.h:70,variab,variable,70,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyIndVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyIndVar.h,1,['variab'],['variable']
Modifiability,/// splitRegister - Move any user variables in OldReg to the live ranges in; /// NewRegs where they are live. Mark the values as unavailable where no new; /// register is live.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.h:34,variab,variables,34,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.h,1,['variab'],['variables']
Modifiability,"/// strongSIVtest - Tests the strong SIV subscript pair (Src and Dst); /// for dependence.; /// Things of the form [c1 + a*i] and [c2 + a*i],; /// where i is an induction variable, c1 and c2 are loop invariant,; /// and a is a constant; /// Returns true if any possible dependence is disproved.; /// If there might be a dependence, returns false.; /// Sets appropriate direction and distance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:171,variab,variable,171,interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,1,['variab'],['variable']
Modifiability,/// struct HandlerInfo and Handlers permit users or target extended; /// AsmPrinter to add their own handlers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h:59,extend,extended,59,interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,1,['extend'],['extended']
Modifiability,"/// symbolicRDIVtest - Tests the RDIV subscript pair for dependence.; /// Things of the form [c1 + a*i] and [c2 + b*j],; /// where i and j are induction variable, c1 and c2 are loop invariant,; /// and a and b are constants.; /// Returns true if any possible dependence is disproved.; /// Marks the result as inconsistent.; /// Works in some cases that exactRDIVtest doesn't,; /// and vice versa. Can also be used as a backup for; /// ordinary SIV tests.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:153,variab,variable,153,interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,1,['variab'],['variable']
Modifiability,"/// takeAttributes - Takes attributes from the given parsed-attributes; /// set and add them to this declarator.; ///; /// These examples both add 3 attributes to ""var"":; /// short int var __attribute__((aligned(16),common,deprecated));; /// short int x, __attribute__((aligned(16)) var; /// __attribute__((common,deprecated));; ///; /// Also extends the range of the declarator.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/DeclSpec.h:343,extend,extends,343,interpreter/llvm-project/clang/include/clang/Sema/DeclSpec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/DeclSpec.h,1,['extend'],['extends']
Modifiability,"/// testRDIV - Tests the RDIV subscript pair (Src and Dst) for dependence.; /// Things of the form [c1 + a1*i] and [c2 + a2*j]; /// where i and j are induction variables, c1 and c2 are loop invariant,; /// and a1 and a2 are constant.; /// With minor algebra, this test can also be used for things like; /// [c1 + a1*i + a2*j][c2].; /// Returns true if any possible dependence is disproved.; /// If there might be a dependence, returns false.; /// Marks the Result as inconsistent.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:160,variab,variables,160,interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,1,['variab'],['variables']
Modifiability,"/// testSIV - Tests the SIV subscript pair (Src and Dst) for dependence.; /// Things of the form [c1 + a1*i] and [c2 + a2*j], where; /// i and j are induction variables, c1 and c2 are loop invariant,; /// and a1 and a2 are constant.; /// Returns true if any possible dependence is disproved.; /// If there might be a dependence, returns false.; /// Sets appropriate direction vector entry and, when possible,; /// the distance vector entry.; /// If the dependence isn't proven to exist,; /// marks the Result as inconsistent.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:159,variab,variables,159,interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,1,['variab'],['variables']
Modifiability,"/// this is <= Function().NDim() which is the total; /// number of variables (free+ constrained ones)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h:67,variab,variables,67,math/fumili/inc/TFumiliMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h,5,['variab'],['variables']
Modifiability,/// thread_local variables defined or used in this TU.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h:17,variab,variables,17,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h,1,['variab'],['variables']
Modifiability,/// thread_local variables with initializers that need to run; /// before any thread_local variable in this TU is odr-used.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h:17,variab,variables,17,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.h,2,['variab'],"['variable', 'variables']"
Modifiability,/// trackValueOfGlobalVariable - Clients can use this method to; /// inform the SCCPSolver that it should track loads and stores to the; /// specified global variable if it can. This is only legal to call if; /// performing Interprocedural SCCP.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SCCPSolver.h:158,variab,variable,158,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SCCPSolver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SCCPSolver.h,1,['variab'],['variable']
Modifiability,"/// transferValues - Transfer all possible values to the new live ranges.; /// Values that were rematerialized are left alone, they need LICalc.extend().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp:144,extend,extend,144,interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp,1,['extend'],['extend']
Modifiability,/// true if all the variables in the target executable directives must be; /// captured by reference.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:20,variab,variables,20,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variables']
Modifiability,/// true if cast to/from UIntPtr is required for variables captured by; /// value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:49,variab,variables,49,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['variab'],['variables']
Modifiability,/// true if extended version of the clause for 'depobj' directive.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:12,extend,extended,12,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['extend'],['extended']
Modifiability,"/// true if the attribute is applied to the pointee, not the variable; /// itself.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:61,variab,variable,61,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,"/// true, if variables are captured, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:13,variab,variables,13,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variables']
Modifiability,/// tryShiftAmountMod - Take advantage of built-in mod of shift amount in; /// variable shift/rotate instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:79,variab,variable,79,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,1,['variab'],['variable']
Modifiability,"/// utility function to set all variable constant in a collection; /// (from G. Petrucciani)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/RooStatsUtils.h:32,variab,variable,32,roofit/roostats/inc/RooStats/RooStatsUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/RooStatsUtils.h,1,['variab'],['variable']
Modifiability,/// viewInheritance - Display the inheritance hierarchy of this C++; /// class using GraphViz.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/InheritViz.cpp:34,inherit,inheritance,34,interpreter/llvm-project/clang/lib/AST/InheritViz.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/InheritViz.cpp,1,['inherit'],['inheritance']
Modifiability,"/// weakCrossingSIVtest - Tests the weak-crossing SIV subscript pair; /// (Src and Dst) for dependence.; /// Things of the form [c1 + a*i] and [c2 - a*i],; /// where i is an induction variable, c1 and c2 are loop invariant,; /// and a is a constant.; /// Returns true if any possible dependence is disproved.; /// If there might be a dependence, returns false.; /// Sets appropriate direction entry.; /// Set consistent to false.; /// Marks the dependence as splitable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:184,variab,variable,184,interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,1,['variab'],['variable']
Modifiability,"/// weakZeroDstSIVtest - Tests the weak-zero SIV subscript pair; /// (Src and Dst) for dependence.; /// Things of the form [c1 + a*i] and [c2],; /// where i is an induction variable, c1 and c2 are loop invariant,; /// and a is a constant. See also weakZeroSrcSIVtest.; /// Returns true if any possible dependence is disproved.; /// If there might be a dependence, returns false.; /// Sets appropriate direction entry.; /// Set consistent to false.; /// If loop peeling will break the dependence, mark appropriately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:173,variab,variable,173,interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,1,['variab'],['variable']
Modifiability,"/// weakZeroSrcSIVtest - Tests the weak-zero SIV subscript pair; /// (Src and Dst) for dependence.; /// Things of the form [c1] and [c2 + a*i],; /// where i is an induction variable, c1 and c2 are loop invariant,; /// and a is a constant. See also weakZeroDstSIVtest.; /// Returns true if any possible dependence is disproved.; /// If there might be a dependence, returns false.; /// Sets appropriate direction entry.; /// Set consistent to false.; /// If loop peeling will break the dependence, mark appropriately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:173,variab,variable,173,interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,1,['variab'],['variable']
Modifiability,/// writeVarArgRegs - Write variable function arguments passed in registers; /// to the stack. Also create a stack frame object for the first variable; /// argument.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.h:28,variab,variable,28,interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelLowering.h,2,['variab'],['variable']
Modifiability,"///!< configured display",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx:6,config,configured,6,gui/canvaspainter/src/RCanvasPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/canvaspainter/src/RCanvasPainter.cxx,3,['config'],['configured']
Modifiability,//// temporary - rewrite interface to use type,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:17,rewrite,rewrite,17,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['rewrite'],['rewrite']
Modifiability,"////// static functions providing interface to raw WinNT ////////////////////; //---- RPC -------------------------------------------------------------------; //*-* Error codes set by the Windows Sockets implementation are not made available; //*-* via the errno variable. Additionally, for the getXbyY class of functions,; //*-* error codes are NOT made available via the h_errno variable. Instead, error; //*-* codes are accessed by using the WSAGetLastError . This function is provided; //*-* in Windows Sockets as a precursor (and eventually an alias) for the Win32; //*-* function GetLastError. This is intended to provide a reliable way for a thread; //*-* in a multithreaded process to obtain per-thread error information.; /////////////////////////////////////////////////////////////////////////////; /// Receive exactly length bytes into buffer. Returns number of bytes; /// received. Returns -1 in case of error, -2 in case of MSG_OOB; /// and errno == EWOULDBLOCK, -3 in case of MSG_OOB and errno == EINVAL; /// and -4 in case of kNonBlock and errno == EWOULDBLOCK.; /// Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:263,variab,variable,263,core/winnt/src/TWinNTSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx,2,['variab'],['variable']
Modifiability,"///////////////////////////////////////////////////////////////////////////////////////////////////////; /// Returns dialog type as string; /// String value used for configuring JS-side",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RFileDialog.cxx:166,config,configuring,166,gui/browserv7/src/RFileDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RFileDialog.cxx,1,['config'],['configuring']
Modifiability,"///////////////////////////////////////////////////////////////////////////////////////////////////; /// Checks if configured browser can be used for image production",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebDisplayHandle.cxx:115,config,configured,115,gui/webdisplay/src/RWebDisplayHandle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebDisplayHandle.cxx,1,['config'],['configured']
Modifiability,"///////////////////////////////////////////////////////////////////////////////////////////////////; /// Display provided url in configured web browser; /// \param url - specified URL address like https://root.cern; /// Browser can specified when starting `root --web=firefox`; /// Returns true when browser started; /// It is convenience method, equivalent to:; /// ~~~; /// RWebDisplayArgs args;; /// args.SetUrl(url);; /// args.SetStandalone(false);; /// auto handle = RWebDisplayHandle::Display(args);; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebDisplayHandle.cxx:129,config,configured,129,gui/webdisplay/src/RWebDisplayHandle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebDisplayHandle.cxx,1,['config'],['configured']
Modifiability,"///////////////////////////////////////////////////////////////////////////////////////////////////; /// Returns true if image production for specified browser kind is supported; /// If browser not specified - use currently configured browser or try to test existing web browsers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebDisplayHandle.cxx:224,config,configured,224,gui/webdisplay/src/RWebDisplayHandle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebDisplayHandle.cxx,1,['config'],['configured']
Modifiability,"///////////////////////////////////////////////////////////////////////////////////////////////////; /// Show web window in specified location.; ///; /// \param[inout] win web window by reference; /// \param user_args specifies where and how display web window; ///; /// As display args one can use string like ""firefox"" or ""chrome"" - these are two main supported web browsers.; /// See RWebDisplayArgs::SetBrowserKind() for all available options. Default value for the browser can be configured; /// when starting root with --web argument like: ""root --web=chrome"". When root started in web server mode ""root --web=server"",; /// no any web browser will be started - just URL will be printout, which can be entered in any running web browser; ///; /// If allowed, same window can be displayed several times (like for RCanvas or TCanvas); ///; /// Following parameters can be configured in rootrc file:; ///; /// WebGui.Display: kind of display like chrome or firefox or browser, can be overwritten by --web=value command line argument; /// WebGui.OnetimeKey: if configured requires unique key every time window is connected (default yes); /// WebGui.Chrome: full path to Google Chrome executable; /// WebGui.ChromeBatch: command to start chrome in batch, used for image production, like ""$prog --headless --disable-gpu $geometry $url""; /// WebGui.ChromeHeadless: command to start chrome in headless mode, like ""fork: --headless --disable-gpu $geometry $url""; /// WebGui.ChromeInteractive: command to start chrome in interactive mode, like ""$prog $geometry --app=\'$url\' &""; /// WebGui.Firefox: full path to Mozilla Firefox executable; /// WebGui.FirefoxHeadless: command to start Firefox in headless mode, like ""fork:--headless --private-window --no-remote $profile $url""; /// WebGui.FirefoxInteractive: command to start Firefox in interactive mode, like ""$prog --private-window \'$url\' &""; /// WebGui.FirefoxProfile: name of Firefox profile to use; /// WebGui.FirefoxProfilePath: file path to Firef",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx:485,config,configured,485,gui/webdisplay/src/RWebWindowsManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx,2,['config'],['configured']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////////////////////; /// Configure batch image mode for web graphics.; /// Allows to process many images with single headless browser invocation and increase performance of image production.; /// When many canvases are stored as image in difference places, they first collected in batch and then processed when at least `n`; /// images are prepared. Only then headless browser invoked and create all these images at once.; /// This allows to significantly increase performance of image production in web mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebCanvas.cxx:104,Config,Configure,104,gui/webgui6/src/TWebCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebCanvas.cxx,1,['Config'],['Configure']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////////////////////; /// Configures custom script for canvas.; /// If started with ""modules:"" prefix, module(s) will be imported with `loadModules` function of JSROOT.; /// If custom path was configured in RWebWindowsManager::AddServerLocation, it can be used in module paths.; /// If started with ""load:"" prefix, code will be loaded with `loadScript` function of JSROOT (old, deprecated way); /// Script also can be a plain JavaScript code which imports JSROOT and provides draw function for custom classes; /// See tutorials/webgui/custom/custom.mjs demonstrating such example",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebCanvas.cxx:104,Config,Configures,104,gui/webgui6/src/TWebCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebCanvas.cxx,2,"['Config', 'config']","['Configures', 'configured']"
Modifiability,"//////////////////////////////////////////////////////////////////////////////////////////////////; /// Returns configured custom script",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebCanvas.cxx:112,config,configured,112,gui/webgui6/src/TWebCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebCanvas.cxx,1,['config'],['configured']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////////////////////; /// Send initial message with buttons configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebControlBar.cxx:138,config,configuration,138,gui/webgui6/src/TWebControlBar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebControlBar.cxx,1,['config'],['configuration']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////////////////////; /// Static method to create TWebCanvas instance; /// Used by plugin manager",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebCanvas.cxx:161,plugin,plugin,161,gui/webgui6/src/TWebCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebCanvas.cxx,1,['plugin'],['plugin']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////////////////////; /// Static method to create TWebControlBar instance; /// Used by plugin manager",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebControlBar.cxx:165,plugin,plugin,165,gui/webgui6/src/TWebControlBar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/src/TWebControlBar.cxx,1,['plugin'],['plugin']
Modifiability,"///////////////////////////////////////////////////////////////////////////////////////////////; // Absolute Deviation loss function with boosted decision tree functionality; ///////////////////////////////////////////////////////////////////////////////////////////////; // The bdt loss function implements the LossFunctionBDT interface and inherits the AbsoluteDeviationLossFunction; // functionality.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LossFunction.h:342,inherit,inherits,342,tmva/tmva/inc/TMVA/LossFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LossFunction.h,1,['inherit'],['inherits']
Modifiability,"///////////////////////////////////////////////////////////////////////////////////////////////; // Huber loss function with boosted decision tree functionality; ///////////////////////////////////////////////////////////////////////////////////////////////; // The bdt loss function implements the LossFunctionBDT interface and inherits the HuberLossFunction; // functionality.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LossFunction.h:329,inherit,inherits,329,tmva/tmva/inc/TMVA/LossFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LossFunction.h,1,['inherit'],['inherits']
Modifiability,"///////////////////////////////////////////////////////////////////////////////////////////////; // Least Squares loss function with boosted decision tree functionality; ///////////////////////////////////////////////////////////////////////////////////////////////; // The bdt loss function implements the LossFunctionBDT interface and inherits the LeastSquaresLossFunction; // functionality.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LossFunction.h:337,inherit,inherits,337,tmva/tmva/inc/TMVA/LossFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LossFunction.h,1,['inherit'],['inherits']
Modifiability,"///////////////////////////////////////////////////////////////////////////////////////////////; // Loss Function interface for boosted decision trees. Inherits from LossFunction; ///////////////////////////////////////////////////////////////////////////////////////////////; /* Must inherit LossFunction with the virtual keyword so that we only have to implement; * the LossFunction interface once.; *; * LossFunction; * / \; *SomeLossFunction LossFunctionBDT; * \ /; * \ /; * SomeLossFunctionBDT; *; * Without the virtual keyword the two would point to their own LossFunction objects; * and SomeLossFunctionBDT would have to implement the virtual functions of LossFunction twice, once; * for each object. See diagram below.; *; * LossFunction LossFunction; * | |; *SomeLossFunction LossFunctionBDT; * \ /; * \ /; * SomeLossFunctionBDT; *; * Multiple inheritance is often frowned upon. To avoid this, We could make LossFunctionBDT separate; * from LossFunction but it really is a type of loss function.; * We could also put LossFunction into LossFunctionBDT. In either of these scenarios, if you are doing; * different regression methods and want to compare the Loss this makes it more convoluted.; * I think that multiple inheritance seems justified in this case, but we could change it if it's a problem.; * Usually it isn't a big deal with interfaces and this results in the simplest code in this case.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LossFunction.h:152,Inherit,Inherits,152,tmva/tmva/inc/TMVA/LossFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/LossFunction.h,4,"['Inherit', 'inherit']","['Inherits', 'inherit', 'inheritance']"
Modifiability,"//////////////////////////////////////////////////////////////////////////////////////////////; /// Add branches to config",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx:116,config,config,116,tree/webviewer/src/RTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx,1,['config'],['config']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////////////////; /// Configure selected filter; /// Has to be one of the string from NameFilters entry",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RFileDialog.cxx:100,Config,Configure,100,gui/browserv7/src/RFileDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RFileDialog.cxx,1,['Config'],['Configure']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////////////////; /// Configures draw option for geometry; /// Normally has effect before first drawing of the geometry; /// When geometry displayed, only ""axis"" and ""rotate"" options are updated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx:100,Config,Configures,100,geom/webviewer/src/RGeomViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx,1,['Config'],['Configures']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////////////////; /// Create new viewer; /// Method used for plugin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx:139,plugin,plugin,139,tree/webviewer/src/RTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx,1,['plugin'],['plugin']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////////////////; /// Save viewer configuration as macro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx:112,config,configuration,112,geom/webviewer/src/RGeomViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx,1,['config'],['configuration']
Modifiability,"///////////////////////////////////////////////////////////////////////////////////////////; /// Configure custom web browser.; /// Either just name of browser which can be used like ""opera""; /// or full execution string which must includes $url like ""/usr/bin/opera $url""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebDisplayArgs.cxx:97,Config,Configure,97,gui/webdisplay/src/RWebDisplayArgs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebDisplayArgs.cxx,1,['Config'],['Configure']
Modifiability,"///////////////////////////////////////////////////////////////////////////////////////////; /// Construct a new Hypatia2 PDF.; /// \param[in] name Name of this instance.; /// \param[in] title Title (for plotting); /// \param[in] x The variable of this distribution; /// \param[in] lambda Shape parameter. Note that \f$ \lambda < 0 \f$ is required if \f$ \zeta = 0 \f$.; /// \param[in] zeta Shape parameter (\f$ \zeta >= 0 \f$).; /// \param[in] beta Asymmetry parameter \f$ \beta \f$. Symmetric case is \f$ \beta = 0 \f$,; /// choose values close to zero.; /// \param[in] argSigma Width parameter. If \f$ \beta = 0, \ \sigma \f$ is the RMS width.; /// \param[in] mu Location parameter. Shifts the distribution left/right.; /// \param[in] a Start of the left tail (\f$ a \geq 0 \f$, to the left of the peak). Note that when setting \f$ a = \sigma = 1 \f$,; /// the tail region is to the left of \f$ x = \mu - 1 \f$, so a should be positive.; /// \param[in] n Shape parameter of left tail (\f$ n \ge 0 \f$). With \f$ n = 0 \f$, the function is constant.; /// \param[in] a2 Start of right tail.; /// \param[in] n2 Shape parameter of right tail (\f$ n2 \ge 0 \f$). With \f$ n2 = 0 \f$, the function is constant.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx:236,variab,variable,236,roofit/roofitmore/src/RooHypatia2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx,1,['variab'],['variable']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////////////; /// Clear all server locations; /// Does not change configuration of already running HTTP server",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx:144,config,configuration,144,gui/webdisplay/src/RWebWindowsManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx,1,['config'],['configuration']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////////////; /// Configure server location which can be used for loading of custom scripts or files; /// When THttpServer instance of RWebWindowsManager will be created,; /// THttpServer::AddLocation() method with correspondent arguments will be invoked.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx:96,Config,Configure,96,gui/webdisplay/src/RWebWindowsManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx,1,['Config'],['Configure']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////////////; /// Configure window to show some of existing JSROOT panels; /// It uses ""file:rootui5sys/panel/panel.html"" as default HTML page; /// At the moment only FitPanel is existing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx:96,Config,Configure,96,gui/webdisplay/src/RWebWindow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx,1,['Config'],['Configure']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////////////; /// Creates http server, if required - with real http engine (civetweb); /// One could configure concrete HTTP port, which should be used for the server,; /// provide following entry in rootrc file:; ///; /// WebGui.HttpPort: 8088; ///; /// or specify range of http ports, which can be used:; ///; /// WebGui.HttpPortMin: 8800; /// WebGui.HttpPortMax: 9800; ///; /// By default range [8800..9800] is used; ///; /// One also can bind HTTP server socket to loopback address,; /// In that case only connection from localhost will be available:; ///; /// WebGui.HttpLoopback: yes; ///; /// Or one could specify hostname which should be used for binding of server socket; ///; /// WebGui.HttpBind: hostname | ipaddress; ///; /// To use secured protocol, following parameter should be specified; ///; /// WebGui.UseHttps: yes; /// WebGui.ServerCert: sertificate_filename.pem; ///; /// Alternatively, one can specify unix socket to handle requests:; ///; /// WebGui.UnixSocket: /path/to/unix/socket; /// WebGui.UnixSocketMode: 0700; ///; /// Typically one used unix sockets together with server mode like `root --web=server:/tmp/root.socket` and; /// then redirect it via ssh tunnel (e.g. using `rootssh`) to client node; ///; /// All incoming requests processed in THttpServer in timer handler with 10 ms timeout.; /// One may decrease value to improve latency or increase value to minimize CPU load; ///; /// WebGui.HttpTimer: 10; ///; /// To processing incoming http requests and websockets, THttpServer allocate 10 threads; /// One have to increase this number if more simultaneous connections are expected:; ///; /// WebGui.HttpThrds: 10; ///; /// One also can configure usage of special thread of processing of http server requests; ///; /// WebGui.HttpThrd: no; ///; /// Extra threads can be used to send data to different clients via websocket (default no); ///; /// WebGui.SenderThrds: no; ///; /// If requi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx:179,config,configure,179,gui/webdisplay/src/RWebWindowsManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx,1,['config'],['configure']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////////////; /// If ROOT_LISTENER_SOCKET variable is configured,; /// message will be sent to that unix socket",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx:120,variab,variable,120,gui/webdisplay/src/RWebWindowsManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx,2,"['config', 'variab']","['configured', 'variable']"
Modifiability,"/////////////////////////////////////////////////////////////////////////////////////////; /// Determine final boundaries and number of bins for histograms created in power-of-2; /// autobin mode.; ///; /// Return kTRUE if compatible, updating fNewXaxis accordingly; return kFALSE if something; /// wrong.; ///; /// The histograms are not merge-compatible if; ///; /// 1. have different variable-size bins; /// 2. larger bin size is not an integer multiple of the smaller one; /// 3. the final estimated range is smalle then the bin size; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1Merger.cxx:387,variab,variable-size,387,hist/hist/src/TH1Merger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1Merger.cxx,1,['variab'],['variable-size']
Modifiability,"////////////////////////////////////////////////////////////////////////////////////////; /// Factory method to create RWebBrowserImp via plugin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RWebBrowserImp.cxx:138,plugin,plugin,138,gui/browserv7/src/RWebBrowserImp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RWebBrowserImp.cxx,2,['plugin'],['plugin']
Modifiability,"/////////////////////////////////////////////////////////////////////////////////////; /// Configure func which has to be used for starting dialog",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx:91,Config,Configure,91,gui/webdisplay/src/RWebWindow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx,1,['Config'],['Configure']
Modifiability,"///////////////////////////////////////////////////////////////////////////////////; /// Configures recording of communication data in protocol file; /// Provided filename will be used to store JSON array with names of written files - text or binary; /// If data was send from client, ""send"" entry will be placed. JSON file will look like:; ///; /// [""send"", ""msg0.txt"", ""send"", ""msg1.txt"", ""msg2.txt""]; ///; /// If empty file name is provided, data recording will be disabled; /// Recorded data can be used in JSROOT directly to test client code without running C++ server",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx:89,Config,Configures,89,gui/webdisplay/src/RWebWindow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx,1,['Config'],['Configures']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////; /// Calculate and return likelihood on subset of data from firstEvent to lastEvent; /// processed with a step size of 'stepSize'. If this an extended likelihood and; /// and the zero event is processed the extended term is added to the return; /// likelihood.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:225,extend,extended,225,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,2,['extend'],['extended']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////; /// Evaluate object. Returns either cached value or triggers a recalculation.; /// The recalculation happens by calling getValV(), which in the end calls the; /// virtual evaluate() functions of the respective PDFs.; /// \param[in] normalisationSet getValV() reacts differently depending on the value of the normalisation set.; /// If the set is `nullptr`, an unnormalised value is returned.; /// \note The normalisation is arbitrary, because it is up to the implementation; /// of the PDF to e.g. leave out normalisation constants for speed reasons. The range; /// of the variables is also ignored.; ///; /// To normalise the result properly, a RooArgSet has to be passed, which contains; /// the variables to normalise over.; /// These are integrated over their current ranges to compute the normalisation constant,; /// and the unnormalised result is divided by this value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsReal.h:657,variab,variables,657,roofit/roofitcore/inc/RooAbsReal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsReal.h,2,['variab'],['variables']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////; /// \brief Adds equivalent ROperator with respect to Keras model layer; /// into the referenced RModel object; ///; /// \param[in] rmodel RModel object; /// \param[in] fLayer Python Keras layer as a Dictionary object; /// \param[out] RModel object with the added ROperator; ///; /// Function adds equivalent ROperator into the referenced RModel object.; /// Keras models can have layers like Dense and Conv which have activation; /// function as an attribute. Function first searches if layer object is among; /// the ones which don't have activation attribute and then calls the respective; /// preparation function to get the ROperator object, which is then added; /// into the RModel object. If passed layer is among the ones which may have activation; /// attribute, then it checks for the activation attribute, if present then first adds; /// the primary operator into the RModel object, and then adds the operator for the; /// activation function with appropriate changes in the names of input and output; /// tensors for both of them.; /// Example of such layers is the Dense Layer. For a dense layer with input tensor name; /// dense2BiasAdd0 and output tensor name dense3Relu0 with relu as activation attribute; /// will be transformed into a ROperator_Gemm with input tensor name dense2BiasAdd0; /// & output tensor name dense3Dense (layerName+layerType), and a subsequent; /// ROperator_Relu with input tensor name as dense3Dense and output tensor name; /// as dense3Relu0.; ///; /// For developing new preparatory functions for supporting Keras layers in future,; /// all one needs is to extract the required properties and attributes from the fLayer; /// dictionary which contains all the information about any Keras layer and after; /// any required transformations, these are passed for instantiating the ROperator; /// object.; ///; /// The fLayer dictionary which holds all the information about a Ke",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx:464,layers,layers,464,tmva/pymva/src/RModelParser_Keras.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx,1,['layers'],['layers']
Modifiability,"//////////////////////////////////////////////////////////////////////////////////; /// \brief Prepares a ROperator object for Keras activation layer; ///; /// \param[in] fLayer Python Keras layer as a Dictionary object; /// \return Unique pointer to ROperator object; ///; /// For Keras's keras.layers.Activation layer, the activation attribute is; /// extracted and appropriate function for adding the function is called.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx:296,layers,layers,296,tmva/pymva/src/RModelParser_Keras.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx,1,['layers'],['layers']
Modifiability,"/////////////////////////////////////////////////////////////////////////////////; /// Change configuration by client; /// Returns true if any parameter was really changed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomData.cxx:94,config,configuration,94,geom/webviewer/src/RGeomData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomData.cxx,1,['config'],['configuration']
Modifiability,"/////////////////////////////////////////////////////////////////////////////////; /// Save geometry configuration as C++ macro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomData.cxx:101,config,configuration,101,geom/webviewer/src/RGeomData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomData.cxx,1,['config'],['configuration']
Modifiability,"/////////////////////////////////////////////////////////////////////////////////; /// Show or update RBrowser in web window; /// If web window already started - just refresh it like ""reload"" button does; /// If no web window exists or \param always_start_new_browser configured, starts new window; /// \param args display arguments",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RBrowser.cxx:268,config,configured,268,gui/browserv7/src/RBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/src/RBrowser.cxx,1,['config'],['configured']
Modifiability,"/////////////////////////////////////////////////////////////////////////////////; /// Show or update geometry in web window; /// If web browser already started - just refresh drawing like ""reload"" button does; /// If no web window exists or \param always_start_new_browser configured, starts new window; /// \param args arguments to display",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx:274,config,configured,274,geom/webviewer/src/RGeomViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomViewer.cxx,1,['config'],['configured']
Modifiability,"/////////////////////////////////////////////////////////////////////////////////; /// Show or update viewer in web window; /// If web browser already started - just refresh drawing like ""reload"" button does; /// If no web window exists or \param always_start_new_browser configured, starts new window; /// \param args arguments to display",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx:272,config,configured,272,tree/webviewer/src/RTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx,1,['config'],['configured']
Modifiability,"/////////////////////////////////////////////////////////////////////////////////; /// This function transforms the source spectrum. The calling program; /// should fill in input parameters. Then it multiplies transformed; /// coefficients in the given region (fXmin, fXmax) by the given; /// fEnhanceCoeff and transforms it back; /// Processed data are written into dest spectrum.; ///; /// Function parameters:; /// - source-pointer to the vector of source spectrum, its length should; /// be size except for inverse FOURIER, FOUR-WALSh, FOUR-HAAR; /// transform. These need 2*size length to supply real and; /// imaginary coefficients.; /// - destVector-pointer to the vector of dest data, its length should be; /// size except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Example - script Enhance.c:; ///; /// \image html spectrumtransform_enhance_image001.jpg Fig. 1 Original spectrum (black line) and enhanced spectrum (red line) using Cosine transform (channels 0-1024 were multiplied by 2); ///; /// #### Script:; ///; /// Example to illustrate Enhance function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Enhance.C`; ///; /// ~~~ {.cpp}; /// void Enhance() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Enhancement using Cosine transform"",nbins,xmin,xmax);; /// TH1F *d = new TH1F(""d"","""",nbins,xmin,xmax);; /// TFile *f = new TFile(""spectra/TSpectrum.root"");; /// h=(TH1F*) f->Get(""transform1;1"");; /// for (i = 0; i < nbins; i++) source[i]=h->GetBinContent(i + 1);; /// TCanvas *Transform1 = gROOT->GetListOfCanvases()->FindObject(""Transform1"");; /// if (!Transform1) Transform1 = new TCanvas(""Transform"",""Transform1"",10,10,1000,700);; /// h->SetAxisRange(700,1024);; /// h->Draw(""L"");; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:876,Enhance,Enhance,876,hist/spectrum/src/TSpectrumTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx,1,['Enhance'],['Enhance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /** \class TAxis; \ingroup Histograms; \brief Class to manage histogram axis. This class manages histogram axis. It is referenced by TH1 and TGraph.; To make a graphical representation of an histogram axis, this class; references the TGaxis class. TAxis supports axis with fixed or variable bin sizes.; Labels may be associated to individual bins.; See examples of various axis representations drawn by class TGaxis.; */; //////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx:364,variab,variable,364,hist/hist/src/TAxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /** \class TF1; \ingroup Functions; \brief 1-Dim function class. ## TF1: 1-Dim function class. A TF1 object is a 1-Dim function defined between a lower and upper limit.; The function may be a simple function based on a TFormula expression or a precompiled user function.; The function may have associated parameters.; TF1 graphics function is via the TH1 and TGraph drawing functions. The following types of functions can be created:. 1. [Expression using variable x and no parameters](\ref F1); 2. [Expression using variable x with parameters](\ref F2); 3. [Lambda Expression with variable x and parameters](\ref F3); 4. [A general C function with parameters](\ref F4); 5. [A general C++ function object (functor) with parameters](\ref F5); 6. [A member function with parameters of a general C++ class](\ref F6). \anchor F1; ### 1 - Expression using variable x and no parameters. #### Case 1: inline expression using standard C++ functions/operators. Begin_Macro(source); {; auto fa1 = new TF1(""fa1"",""sin(x)/x"",0,10);; fa1->Draw();; }; End_Macro. #### Case 2: inline expression using a ROOT function (e.g. from TMath) without parameters. Begin_Macro(source); {; auto fa2 = new TF1(""fa2"",""TMath::DiLog(x)"",0,10);; fa2->Draw();; }; End_Macro. #### Case 3: inline expression using a user defined CLING function by name. ~~~~{.cpp}; Double_t myFunc(double x) { return x+sin(x); }; ....; auto fa3 = new TF1(""fa3"",""myFunc(x)"",-3,5);; fa3->Draw();; ~~~~. \anchor F2; ### 2 - Expression using variable x with parameters. #### Case 1: inline expression using standard C++ functions/operators. * Example a:. ~~~~{.cpp}; auto fa = new TF1(""fa"",""[0]*x*sin([1]*x)"",-3,3);; ~~~~. This creates a function of variable x with 2 parameters. The parameters must be initialized via:. ~~~~{.cpp}; fa->SetParameter(0,value_first_parameter);; fa->SetParameter(1,value_second_parameter);; ~~~~. Parameters may be given a name:. ~~~~{.cpp}; fa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:538,variab,variable,538,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,4,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /** \class TScatter; \ingroup Graphs; A TScatter is able to draw four variables scatter plot on a single plot. The two first; variables are the x and y position of the markers, the third is mapped on the current; color map and the fourth on the marker size. The following example demonstrates how it works:. Begin_Macro(source); ../../../tutorials/graphs/scatter.C; End_Macro. ### TScatter's plotting options; TScatter can be drawn with the following options:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""A"" | Produce a new plot with Axis around the graph |. */; ////////////////////////////////////////////////////////////////////////////////; /// TScatter default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TScatter.cxx:152,variab,variables,152,hist/hist/src/TScatter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TScatter.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; // //; // From now on we have the methods concerning the unzipping part of the cache //; // //; ////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Read the logical record header from the buffer buf.; /// That must be the pointer tho the header part not the object by itself and; /// must contain data of at least maxbytes; /// Returns nread;; ///; /// In output arguments:; ///; /// - nbytes : number of bytes in record; /// if negative, this is a deleted record; /// if 0, cannot read record, wrong value of argument first; /// - objlen : uncompressed object size; /// - keylen : length of logical record header; ///; /// Note that the arguments objlen and keylen are returned only; /// if maxbytes >=16; /// Note: This was adapted from TFile... so some things dont apply",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:924,adapt,adapted,924,tree/tree/src/TTreeCacheUnzip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx,1,['adapt'],['adapted']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; // TClassEdit will call this routine as soon as any of its static variable (used; // for caching) is destroyed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:148,variab,variable,148,core/clingutils/src/TClingUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// - Return data member offset to the base class ""cl"".; /// - Returns -1 in case ""cl"" is not a base class.; /// Takes care of multiple inheritance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:218,inherit,inheritance,218,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// - num - parameter number; /// - def - default value of the parameter; /// returns the value of *num*-th parameter from the brackets in the variable expression; /// if the parameter of that number wasn't specified returns *def*.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:225,variab,variable,225,tree/treeplayer/src/TTreeDrawArgsParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// @param[in] numthreads Number of threads to use. If not specified or; /// set to zero, the number of threads is automatically; /// decided by the implementation. Any other value is; /// used as a hint.; ///; /// ROOT must be built with the compilation flag `imt=ON` for this feature to be available.; /// The following objects and methods automatically take advantage of; /// multi-threading if a call to `EnableImplicitMT` has been made before usage:; ///; /// - RDataFrame internally runs the event-loop by parallelizing over clusters of entries; /// - TTree::GetEntry reads multiple branches in parallel; /// - TTree::FlushBaskets writes multiple baskets to disk in parallel; /// - TTreeCacheUnzip decompresses the baskets contained in a TTreeCache in parallel; /// - THx::Fit performs in parallel the evaluation of the objective function over the data; /// - TMVA::DNN trains the deep neural networks in parallel; /// - TMVA::BDT trains the classifier in parallel and multiclass BDTs are evaluated in parallel; ///; /// EnableImplicitMT calls in turn EnableThreadSafety.; /// The 'numthreads' parameter allows to control the number of threads to; /// be used by the implicit multi-threading. However, this parameter is just; /// a hint for ROOT: it will try to satisfy the request if the execution; /// scenario allows it. For example, if ROOT is configured to use an external; /// scheduler, setting a value for 'numthreads' might not have any effect.; /// The maximum number of threads can be influenced by the environment; /// variable `ROOT_MAX_THREADS`: `export ROOT_MAX_THREADS=2` will try to set; /// the maximum number of active threads to 2, if the scheduling library; /// (such as tbb) ""permits"".; ///; /// \note Use `DisableImplicitMT()` to disable multi-threading (some locks will remain in place as; /// described in EnableThreadSafety()). `EnableImplicitMT(1)` creates a thread-pool of size 1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:1436,config,configured,1436,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,2,"['config', 'variab']","['configured', 'variable']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// A TClonesArray is always the owner of the object it contains.; /// However the collection its inherits from (TObjArray) does not.; /// Hence this member function needs to be a nop for TClonesArray.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:180,inherit,inherits,180,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['inherit'],['inherits']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// A faster version of RooDataHist::weight that assumes the passed arguments; /// are aligned with the histogram variables.; /// \param[in] bin Coordinates for which the weight should be calculated.; /// Has to be aligned with the internal histogram variables.; /// \param[in] intOrder Interpolation order, i.e. how many neighbouring bins are; /// used for the interpolation. If zero, the bare weight for; /// the bin enclosing the coordinatesis returned.; /// \param[in] correctForBinSize Enable the inverse bin volume correction factor.; /// \param[in] cdfBoundaries Enable the special boundary condition for a cdf:; /// underflow bins are assumed to have weight zero and; /// overflow bins have weight one. Otherwise, the; /// histogram is mirrored at the boundaries for the; /// interpolation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:196,variab,variables,196,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Activate call profile if flag is set to true. A 2-D histogram is kept that stores the required number; /// of function calls versus the value of x, the convolution variable; ///; /// All clones of RooNumConvolution objects will keep logging to the histogram of the original class; /// so that performance of temporary object clones, such as used in e.g. fitting, plotting and generating; /// are all logged in a single place.; ///; /// Function caller should take ownership of profiling histogram as it is not deleted at the RooNumConvolution dtor; ///; /// Calling this function with flag set to false will deactivate call profiling and delete the profiling histogram",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:250,variab,variable,250,roofit/roofitcore/src/RooNumConvolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Adaption of the AdaBoost to regression problems (see H.Drucker 1997).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:86,Adapt,Adaption,86,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['Adapt'],['Adaption']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a TFriendElement to the list of friends of this chain.; ///; /// A TChain has a list of friends similar to a tree (see TTree::AddFriend).; /// You can add a friend to a chain with the TChain::AddFriend method, and you; /// can retrieve the list of friends with TChain::GetListOfFriends.; /// This example has four chains each has 20 ROOT trees from 20 ROOT files.; /// ~~~ {.cpp}; /// TChain ch(""t""); // a chain with 20 trees from 20 files; /// TChain ch1(""t1"");; /// TChain ch2(""t2"");; /// TChain ch3(""t3"");; /// ~~~; /// Now we can add the friends to the first chain.; /// ~~~ {.cpp}; /// ch.AddFriend(""t1""); /// ch.AddFriend(""t2""); /// ch.AddFriend(""t3""); /// ~~~; /// \image html tchain_friend.png; ///; ///; /// The parameter is the name of friend chain (the name of a chain is always; /// the name of the tree from which it was created).; /// The original chain has access to all variable in its friends.; /// We can use the TChain::Draw method as if the values in the friends were; /// in the original chain.; /// To specify the chain to use in the Draw method, use the syntax:; /// ~~~ {.cpp}; /// <chainname>.<branchname>.<varname>; /// ~~~; /// If the variable name is enough to uniquely identify the variable, you can; /// leave out the chain and/or branch name.; /// For example, this generates a 3-d scatter plot of variable ""var"" in the; /// TChain ch versus variable v1 in TChain t1 versus variable v2 in TChain t2.; /// ~~~ {.cpp}; /// ch.Draw(""var:t1.v1:t2.v2"");; /// ~~~; /// When a TChain::Draw is executed, an automatic call to TTree::AddFriend; /// connects the trees in the chain. When a chain is deleted, its friend; /// elements are also deleted.; ///; /// The number of entries in the friend must be equal or greater to the number; /// of entries of the original chain. If the friend has fewer entries a warning; /// is given and the resulting histogram will have missing entries.; /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:976,variab,variable,976,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a TFriendElement to the list of friends.; ///; /// This function:; /// - opens a file if filename is specified; /// - reads a Tree with name treename from the file (current directory); /// - adds the Tree to the list of friends; /// see other AddFriend functions; ///; /// A TFriendElement TF describes a TTree object TF in a file.; /// When a TFriendElement TF is added to the list of friends of an; /// existing TTree T, any variable from TF can be referenced in a query; /// to T.; ///; /// A tree keeps a list of friends. In the context of a tree (or a chain),; /// friendship means unrestricted access to the friends data. In this way; /// it is much like adding another branch to the tree without taking the risk; /// of damaging it. To add a friend to the list, you can use the TTree::AddFriend; /// method. The tree in the diagram below has two friends (friend_tree1 and; /// friend_tree2) and now has access to the variables a,b,c,i,j,k,l and m.; ///; /// \image html ttree_friend1.png; ///; /// The AddFriend method has two parameters, the first is the tree name and the; /// second is the name of the ROOT file where the friend tree is saved.; /// AddFriend automatically opens the friend file. If no file name is given,; /// the tree called ft1 is assumed to be in the same file as the original tree.; ///; /// tree.AddFriend(""ft1"",""friendfile1.root"");; /// If the friend tree has the same name as the original tree, you can give it; /// an alias in the context of the friendship:; ///; /// tree.AddFriend(""tree1 = tree"",""friendfile1.root"");; /// Once the tree has friends, we can use TTree::Draw as if the friend's; /// variables were in the original tree. To specify which tree to use in; /// the Draw method, use the syntax:; /// ~~~ {.cpp}; /// <treeName>.<branchname>.<varname>; /// ~~~; /// If the variablename is enough to uniquely identify the variable, you can; /// leave out the tree and/o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:517,variab,variable,517,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a box with statistics information to the specified frame. By default a box with the; /// event count, mean and rms of the plotted variable is added.; ///; /// The following optional named arguments are accepted; /// <table>; /// <tr><td> `What(const char* whatstr)` <td> Controls what is printed: ""N"" = count, ""M"" is mean, ""R"" is RMS.; /// <tr><td> `Format(const char* optStr)` <td> \deprecated Classing parameter formatting options, provided for backward compatibility; ///; /// <tr><td> `Format(const char* what,...)` <td> Parameter formatting options.; /// <table>; /// <tr><td> const char* what <td> Controls what is shown:; /// - ""N"" adds name; /// - ""E"" adds error; /// - ""A"" shows asymmetric error; /// - ""U"" shows unit; /// - ""H"" hides the value; /// <tr><td> `FixedPrecision(int n)` <td> Controls precision, set fixed number of digits; /// <tr><td> `AutoPrecision(int n)` <td> Controls precision. Number of shown digits is calculated from error + n specified additional digits (1 is sensible default); /// <tr><td> `VerbatimName(bool flag)` <td> Put variable name in a \\verb+ + clause.; /// </table>; /// <tr><td> `Label(const chat* label)` <td> Add header label to parameter box; /// <tr><td> `Layout(double xmin, double xmax, double ymax)` <td> Specify relative position of left,right side of box and top of box. Position of; /// bottom of box is calculated automatically from number lines in box; /// <tr><td> `Cut(const char* expression)` <td> Apply given cut expression to data when calculating statistics; /// <tr><td> `CutRange(const char* rangeName)` <td> Only consider events within given range when calculating statistics. Multiple; /// CutRange() argument may be specified to combine ranges.; ///; /// </table>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:220,variab,variable,220,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a clone of the specified argument to list. Returns a pointer to; /// the clone if successful, or else zero if a variable of the same name; /// is already in the list or the list does *not* own its variables (in; /// this case, try add() instead.) Calling addClone() on an empty list; /// forces it to take ownership of all its subsequent variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:202,variab,variable,202,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,3,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a column with the values of the given (function) argument; /// to this dataset. The function value is calculated for each; /// event using the observable values of each event in case the; /// function depends on variables with names that are identical; /// to the observable names in the dataset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:302,variab,variables,302,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a column with the values of the given list of (function); /// argument to this dataset. Each function value is calculated for; /// each event using the observable values of the event in case the; /// function depends on variables with names that are identical to; /// the observable names in the dataset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:310,variab,variables,310,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a configuration section for a particular integrator. Integrator name and capabilities are; /// automatically determined from instance passed as 'proto'. The defaultConfig object is associated; /// as the default configuration for the integrator.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:92,config,configuration,92,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,4,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// Any variables present in 'data' but not in the dataset will be silently ignored.; /// \param[in] data Data point.; /// \param[in] wgt Event weight. Defaults to 1. The current value of the weight variable is; /// ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] wgtError Optional weight error.; /// \note This requires including the weight variable in the set of `StoreError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:183,variab,variables,183,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,5,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// Any variables present in 'data' but not in the dataset will be silently ignored.; /// \param[in] indata Data point.; /// \param[in] inweight Event weight. The current value of the weight variable is ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] weightErrorLo Asymmetric weight error.; /// \param[in] weightErrorHi Asymmetric weight error.; /// \note This requires including the weight variable in the set of `StoreAsymError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:183,variab,variables,183,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,5,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a data point, with its coordinates specified in the 'data' argset, to the data set.; /// \attention The order and type of the input variables are **assumed** to be the same as; /// for the RooArgSet returned by RooDataSet::get(). Input values will just be written; /// into the internal data columns by ordinal position.; /// \param[in] data Data point.; /// \param[in] wgt Event weight. Defaults to 1. The current value of the weight variable is; /// ignored.; /// \note To obtain weighted events, a variable must be designated `WeightVar` in the constructor.; /// \param[in] wgtError Optional weight error.; /// \note This requires including the weight variable in the set of `StoreError` variables when constructing; /// the dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:222,variab,variables,222,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,5,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a float variable or expression to the reader",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx:98,variab,variable,98,tmva/tmva/src/Reader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a message logging stream for message with given RooFit::MsgLevel or higher.; /// Higher means that messages with higher priority/severity are issued.; ///; /// This method accepts the following arguments to configure the stream:; /// <table>; /// <tr><th> Output Style options <th>; /// <tr><td> Prefix(bool flag=true) <td> Prefix all messages in this stream with Topic/Originator information; /// <tr><th> Filtering options <th>; /// <tr><td> Topic() <td> Restrict stream to messages on given topic; /// <tr><td> ObjectName(const char*) <td> Restrict stream to messages from object with given name; /// <tr><td> ClassName(const char*) <td> Restrict stream to messages from objects with given class name; /// <tr><td> BaseClassName(const char*)<td> Restrict stream to messages from objects with given base class name; /// <tr><td> LabelName(const chat*) <td> Restrict stream to messages from objects setAttribute(const char*) tag with given name; /// <tr><th> Output redirection options <th>; /// <tr><td> OutputFile(const char*) <td> Send output to file with given name. Multiple streams can write to same file.; /// <tr><td> OutputStream(ostream&) <td> Send output to given C++ stream. Multiple message streams can write to same c++ stream; /// </table>; /// The return value is the unique ID of the defined stream.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:297,config,configure,297,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,1,['config'],['configure']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a new column to the data set which holds the pre-calculated values; /// of 'newVar'. This operation is only meaningful if 'newVar' is a derived; /// value.; ///; /// The return value points to the added element holding 'newVar's value; /// in the data collection. The element is always the corresponding fundamental; /// type of 'newVar' (e.g. a RooRealVar if 'newVar' is a RooFormulaVar); ///; /// Note: This function is explicitly NOT intended as a speed optimization; /// opportunity for the user. Components of complex PDFs that can be; /// precalculated with the dataset are automatically identified as such; /// and will be precalculated when fitting to a dataset; ///; /// By forcibly precalculating functions with non-trivial Jacobians,; /// or functions of multiple variables occurring in the data set,; /// using addColumn(), you may alter the outcome of the fit.; ///; /// Only in cases where such a modification of fit behaviour is intentional,; /// this function should be used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:865,variab,variables,865,roofit/roofitcore/src/RooTreeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a new entry to this legend. ""name"" is the name of an object in the pad to; /// be represented label is the text you wish to associate with obj in the legend; /// if label is null or empty, the title of the object will be used.; ///; /// Options are:; ///; /// - L: draw line associated with TAttLine if obj inherits from TAttLine; /// - P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; /// - F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; /// - E: draw vertical error bar if option ""L"" is also specified",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLegend.cxx:397,inherit,inherits,397,graf2d/graf/src/TLegend.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLegend.cxx,3,['inherit'],['inherits']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a new entry to this legend. ""obj"" is the object to be represented.; /// ""label"" is the text you wish to associate with obj in the legend.; /// If ""label"" is null or empty, the title of the object will be used.; ///; /// Options are:; ///; /// - L: draw line associated with TAttLine if obj inherits from TAttLine; /// - P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; /// - F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; /// - E: draw vertical error bar if option ""L"" is also specified",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLegend.cxx:380,inherit,inherits,380,graf2d/graf/src/TLegend.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLegend.cxx,3,['inherit'],['inherits']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a row consisting of fNVariables independent variables, the; /// known, dependent quantity, and optionally, the square error in; /// the dependent quantity, to the test sample to be used for the; /// test of the parameterization.; /// This sample needn't be representative of the problem at hand.; /// Please note, that if no error is given Poisson statistics is; /// assumed and the square error is set to the value of dependent; /// quantity. See also the; /// <a href=""#TMultiDimFit:description"">class description</a>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:134,variab,variables,134,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,2,"['parameteriz', 'variab']","['parameterization', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a row consisting of fNVariables independent variables, the; /// known, dependent quantity, and optionally, the square error in; /// the dependent quantity, to the training sample to be used for the; /// parameterization.; /// The mean of the variables and quantity is calculated on the fly,; /// as outlined in TPrincipal::AddRow.; /// This sample should be representative of the problem at hand.; /// Please note, that if no error is given Poisson statistics is; /// assumed and the square error is set to the value of dependent; /// quantity. See also the; /// <a href=""#TMultiDimFit:description"">class description</a>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:134,variab,variables,134,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,3,"['parameteriz', 'variab']","['parameterization', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a variable dimension",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:92,variab,variable,92,tree/treeplayer/src/TTreeFormulaManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a variable from an expression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:92,variab,variable,92,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a variable to the plot from its expression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:92,variab,variable,92,tree/treeviewer/src/TSpider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add a variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:92,variab,variable,92,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add all data points contained in 'dset' to this data set with given weight.; /// Optional cut string expression selects the data points to be added and can; /// reference any variable contained in this data set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:261,variab,variable,261,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add an variable to the list of environment variables passed to proofserv; /// on the master and slaves",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:93,variab,variable,93,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add given binning under name 'name' with this variable. If name is null,; /// the binning is installed as the default binning.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:132,variab,variable,132,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add jet cone.; /// parameters are :; /// - (eta,phi) : of the center/leading particle; /// - (reta, rphi) : radius of cone in eta-phi space; /// - length : length of the cone; /// - if cylinder is set and length is adapted to cylinder.; /// - if length is given, it will be used as scalar factor; /// - if cylinder is not set, length is used as length of the cone; /// Returns 0 on success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveJetCone.cxx:301,adapt,adapted,301,graf3d/eve/src/TEveJetCone.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveJetCone.cxx,2,['adapt'],['adapted']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add jet cone.; /// parameters are :; /// - (eta,phi) : of the center/leading particle; /// - cone_r : cone radius in eta-phi space; /// - length : length of the cone; /// - if cylinder is set and length is adapted to cylinder.; /// - if length is given, it will be used as scalar factor; /// - if cylinder is not set, length is used as length of the cone; /// Return 0 on success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveJetCone.cxx:292,adapt,adapted,292,graf3d/eve/src/TEveJetCone.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveJetCone.cxx,2,['adapt'],['adapted']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add new slice to calo tower. Updates cached variables fMaxValE; /// and fMaxValEt; /// Return last index in the vector of slice infos.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCaloData.cxx:130,variab,variables,130,graf3d/eve/src/TEveCaloData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveCaloData.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add newly created session configuration in the list of sessions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:112,config,configuration,112,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add plugin handler to the list of handlers. If there is already a; /// handler defined for the same base and regexp it will be replaced.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:90,plugin,plugin,90,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add prototype p.d.f pdfName to build configuration with associated split rules 'sr'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:123,config,configuration,123,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add recursively stations and layers (and cells) in TGListTree.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/RootShower.cxx:115,layers,layers,115,test/RootShower/RootShower.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/RootShower.cxx,1,['layers'],['layers']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Add the specified argument to list. Returns true if successful, or; /// else false if a variable of the same name is already in the list; /// or the list owns its variables (in this case, try addClone() or addOwned() instead).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:174,variab,variable,174,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Adds multiple variables.; /// First argument is an array of pairs<TString,Double>, where; /// first argument is name of variable,; /// second argument represents value.; /// size - number of variables passed in first argument",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:100,variab,variables,100,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,3,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Adds variable to known variables, and reprocess formula.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:91,variab,variable,91,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Adjust binning specification on first and optionally second and third; /// observable to binning in given reference TH1. Used by constructors; /// that import data from an external TH1.; /// Both the variables in vars and in this RooDataHist are adjusted.; /// @param vars List with variables that are supposed to have their binning adjusted.; /// @param href Reference histogram that dictates the binning; /// @param offset If not nullptr, a possible bin count offset for the axes x,y,z is saved here as Int_t[3]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:286,variab,variables,286,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Advertise capability to perform (analytical) integrals; /// internally. For a given integration request over allVars while; /// normalized over normSet2 and in range 'rangeName', returns; /// largest subset that can be performed internally in analVars; /// Return code is unique integer code identifying integration scenario; /// to be passed to analyticalIntegralWN() to calculate requeste integral; ///; /// Class RooAbsAnaConv defers analytical integration request to; /// resolution model and/or coefficient implementations and; /// aggregates results into composite configuration with a unique; /// code assigned by RooAICRegistry",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:657,config,configuration,657,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Alternative starting point heuristic: sets the ""complementary"" variables to a large; /// positive value (based on the norm of the problem data) and the remaining variables; /// to zero .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpSolverBase.cxx:149,variab,variables,149,math/quadp/src/TQpSolverBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpSolverBase.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Analyse internal formula to find out which variables are actually in use.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:129,variab,variables,129,roofit/roofitcore/src/RooFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Analyse the PS file ""filename"" and return the number of character in the; /// meaningful part of the file. The variable part (date etc..) are not; /// counted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressGraphics.cxx:197,variab,variable,197,test/stressGraphics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressGraphics.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Analyze branch and add the variables found. The number of analyzed; /// sub-branches is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:113,variab,variables,113,tree/treeplayer/src/TTreeReaderGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Analyze the leaf and add the variables found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:115,variab,variables,115,tree/treeplayer/src/TTreeReaderGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Apply slot-method to the fReceiver object with variable; /// number of argument values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQConnection.cxx:133,variab,variable,133,core/base/src/TQConnection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQConnection.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Assign given value to linear transformation: sets input variable to (value-offset)/slope; /// If slope is zerom an error message is printed and no assignment is made",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:142,variab,variable,142,roofit/roofitcore/src/RooLinearVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Associate given PDF with index category state label 'catLabel'.; /// The name state must be already defined in the index category.; ///; /// RooSimultaneous can function without having a PDF associated; /// with every single state. The normalization in such cases is taken; /// from the number of registered PDFs, but getVal() will fail if; /// called for an unregistered index state.; ///; /// PDFs may not overlap (i.e. share any variables) with the index category (function).; /// \param[in] pdf PDF to be added.; /// \param[in] catLabel Name of the category state to be associated to the PDF.; /// \return `true` in case of failure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:518,variab,variables,518,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Attach given set of variables to internal p.d.f. clone",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddGenContext.cxx:106,variab,variables,106,roofit/roofitcore/src/RooAddGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddGenContext.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Attach to terminal, set the proper configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp:121,config,configuration,121,core/textinput/src/textinput/StreamReaderUnix.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Automatic pad generation by division.; ///; /// - The current canvas is divided in nx by ny equal divisions (pads).; /// - xmargin is the space along x between pads in percent of canvas.; /// - ymargin is the space along y between pads in percent of canvas.; /// - color is the color of the new pads. If 0, color is the canvas color.; ///; /// Pads are automatically named `canvasname_n` where `n` is the division number; /// starting from top left pad.; ///; /// Example if canvasname=c1 , nx=2, ny=3:; ///; /// \image html gpad_pad3.png; ///; /// Once a pad is divided into sub-pads, one can set the current pad; /// to a subpad with a given division number as illustrated above; /// with TPad::cd(subpad_number).; ///; /// For example, to set the current pad to c1_4, one can do:; /// ~~~ {.cpp}; /// c1->cd(4); /// ~~~; /// __Note1:__ c1.cd() is equivalent to c1.cd(0) and sets the current pad; /// to c1 itself.; ///; /// __Note2:__ after a statement like c1.cd(6), the global variable gPad; /// points to the current pad. One can use gPad to set attributes; /// of the current pad.; ///; /// __Note3:__ in case xmargin <=0 and ymargin <= 0, there is no space; /// between pads. The current pad margins are recomputed to; /// optimize the layout.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:1068,variab,variable,1068,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Auxiliary function. Returns kTRUE if list contains an object inherited; /// from TImage",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:147,inherit,inherited,147,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['inherit'],['inherited']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Axis constructor for variable bin size",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx:107,variab,variable,107,hist/hist/src/TAxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Basic initialization of FOAM invoked by the user.; /// IMPORTANT: Random number generator and the distribution object has to be; /// provided using SetPseRan and SetRho prior to invoking this initializator!; ///; /// After the foam is grown, space for 2 variables is reserved in; /// every cell. They are used for filling the foam cells.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx:340,variab,variables,340,tmva/tmva/src/PDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Books MVA method. The option configuration string is custom for each MVA; /// the TString field ""theNameAppendix"" serves to define (and distinguish); /// several instances of a given MVA, eg, when one wants to compare the; /// performance of various configurations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx:115,config,configuration,115,tmva/tmva/src/Factory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx,2,['config'],"['configuration', 'configurations']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Browse configuration files.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:93,config,configuration,93,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Browse external object inherited from TObject.; /// It passes through inheritance tree and calls TBrowser::Add; /// in appropriate cases. Static function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:109,inherit,inherited,109,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,2,['inherit'],"['inheritance', 'inherited']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Browse the tree to set the min, max and average value of each variable of fVar.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:148,variab,variable,148,tree/treeviewer/src/TSpider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Build a RooSimultaneous PDF with name simPdfName from cloning specializations of protytpe PDF protoPdfName.; /// Use the provided BuildConfig or MultiBuildConfig object to configure the build",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:258,config,configure,258,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['config'],['configure']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Build complete list of coefficient variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:121,variab,variables,121,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Build server configuration frame.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:99,config,configuration,99,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Build the class tree of inherited members for one class in GraphViz/Dot format; ///; /// Input: filename - output dot file incl. path",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:110,inherit,inherited,110,html/src/TClassDocOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx,1,['inherit'],['inherited']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Builds a hidden layer, updates the number of layers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:131,layers,layers,131,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['layers'],['layers']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Builds hidden layers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:100,layers,layers,100,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['layers'],['layers']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Caches calculated summary statistics of transformed variables.; ///; /// \param[in] k index of class; /// \param[in] ivar index of variable; /// \param[in] mean the mean value of the variable; /// \param[in] rms the root-mean-square value of the variable; /// \param[in] min the minimum value of the variable; /// \param[in] max the maximum value of the variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TransformationHandler.cxx:138,variab,variables,138,tmva/tmva/src/TransformationHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TransformationHandler.cxx,6,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate and return likelihood on subset of data.; /// \param[in] firstEvent First event to be processed.; /// \param[in] lastEvent First event not to be processed, any more.; /// \param[in] stepSize Steps between events.; /// \note For batch computations, the step size **must** be one.; ///; /// If this an extended likelihood, the extended term is added to the return likelihood; /// in the batch that encounters the event with index 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:396,extend,extended,396,roofit/roofitcore/src/RooNLLVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx,2,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate bin number of the given coordinates. If only a subset of the internal; /// coordinates are passed, the missing coordinates are taken at their current value.; /// \param[in] coord Variables that are representing the coordinates.; /// \param[in] fast If the variables in `coord` and the ones of the data hist have the; /// same size and layout, `fast` can be set to skip checking that all variables are; /// present in `coord`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:275,Variab,Variables,275,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,3,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate if the an object defined by world frame bounding box; /// is 'of interest' to the camera. This is defined as box:; ///; /// 1. intersecting completely or partially (kInside/kPartial) with; /// cameras interest box (fInterestBox); /// 2. having significant length OR volume ratio compared to this; /// interest box; ///; /// If a box is 'of interest' returns kTRUE, kFALSE otherwise. See; /// TGLCamera::UpdateInterest() for more details of camera interest; /// box.; ///; /// Note: Length/volume ratios NOT dependent on the projected size; /// of box at current camera configuration as we do not want; /// continual changes. This is used when (re) populating the scene; /// with objects from external client.; ///; /// TODO: Might be more logical to move this test out to client -; /// and have accessor for fInterestBox instead?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx:665,config,configuration,665,graf3d/gl/src/TGLCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate moment of requested order.; ///; /// \param[in] var Variable to be used for calculating the moment.; /// \param[in] order Order of the moment.; /// \param[in] cutSpec If specified, the moment is calculated on the subset of the data which pass the C++ cut specification expression 'cutSpec'; /// \param[in] cutRange If specified, calculate inside the range named 'cutRange' (also applies cut spec); /// \return \f$ \left< \left( X - \left< X \right> \right)^n \right> \f$ of order \f$n\f$.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:148,Variab,Variable,148,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['Variab'],['Variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate residuals, their norms, and duality complementarity gap,; /// given a problem and variable set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpResidual.cxx:178,variab,variable,178,math/quadp/src/TQpResidual.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpResidual.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate standardized moment.; ///; /// \param[in] var Variable to be used for calculating the moment.; /// \param[in] order Order of the moment.; /// \param[in] cutSpec If specified, the moment is calculated on the subset of the data which pass the C++ cut specification expression 'cutSpec'; /// \param[in] cutRange If specified, calculate inside the range named 'cutRange' (also applies cut spec); /// \return \f$ \frac{\left< \left( X - \left< X \right> \right)^n \right>}{\sigma^n} \f$, where n = order.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:142,Variab,Variable,142,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['Variab'],['Variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate the n-th stage of refinement of the Second Euler-Maclaurin; /// summation rule which has the useful property of not evaluating the; /// integrand at either of its endpoints but requires more function; /// evaluations than the trapezoidal rule. This rule can be used with; /// a suitable change of variables to estimate improper integrals.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:393,variab,variables,393,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Calculate the n-th stage of refinement of the extended trapezoidal; /// summation rule. This is the most efficient rule for a well behaved; /// integrands that can be evaluated over its entire range, including the; /// endpoints.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:132,extend,extended,132,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Calculates variable importance using eq (35) in RuleFit paper by Friedman et.al",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleEnsemble.cxx:97,variab,variable,97,tmva/tmva/src/RuleEnsemble.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleEnsemble.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Call constructor and add the variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:115,variab,variables,115,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Called by TDocParser::LocateMethods(), this hook writes out the class description; /// found by TDocParser. It's even called if none is found, i.e. if the first method; /// has occurred before a class description is found, so missing class descriptions; /// can be handled.; /// For HTML, its creates the description block, the list of functions and data; /// members, and the inheritance tree or, if Graphviz's dot is found, the class charts.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:463,inherit,inheritance,463,html/src/TClassDocOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Called in the entry loop for all entries accepted by Select.; /// Case where the only variable returns an object (or pointer to).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:172,variab,variable,172,tree/treeplayer/src/TSelectorDraw.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Change strategy to fill the overflow buffer on either side of the convolution observable range.; ///; /// - `Extend` means is that the input p.d.f convolution observable range is widened to include the buffer range; /// - `Flat` means that the buffer is filled with the p.d.f. value at the boundary of the observable range; /// - `Mirror` means that the buffer is filled with a mirror image of the p.d.f. around the convolution observable boundary; ///; /// The default strategy is extend. If one of the input p.d.f.s is a RooAddPdf, it is configured so that the interpretation; /// range of the fraction coefficients is kept at the nominal convolutions observable range (instead of interpreting coefficients; /// in the widened range including the buffer).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:195,Extend,Extend,195,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,3,"['Extend', 'config', 'extend']","['Extend', 'configured', 'extend']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Change used variables to those with the same name in given list.; /// \param[in] newDeps New dependents to replace the old ones.; /// \param[in] mustReplaceAll Will yield an error if one dependent does not have a replacement.; /// \param[in] nameChange Passed down to RooAbsArg::findNewServer(const RooAbsCollection&, bool) const.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:98,variab,variables,98,roofit/roofitcore/src/RooFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Check configuration options and running daemons to build a default list; /// of secure methods.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:92,config,configuration,92,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Check if TEveElement el is inherited from fChildClass.; /// Virtual from TEveElement.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx:113,inherit,inherited,113,graf3d/eve/src/TEveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx,1,['inherit'],['inherited']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Check if a file needs to be send to the slave. Use the following; /// algorithm:; /// - check if file appears in file map; /// - if yes, get file's modtime and check against time in map,; /// if modtime not same get md5 and compare against md5 in map,; /// if not same return kTRUE.; /// - if no, get file's md5 and modtime and store in file map, ask; /// slave if file exists with specific md5, if yes return kFALSE,; /// if no return kTRUE.; /// The options 'cpopt' define if to copy things from cache to sandbox and what.; /// To retrieve from the cache the binaries associated with the file TProof::kCpBin; /// must be set in cpopt; the default is copy everything.; /// Returns kTRUE in case file needs to be send, returns kFALSE in case; /// file is already on remote node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:593,sandbox,sandbox,593,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['sandbox'],['sandbox']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Check if el can be added to this element.; ///; /// Here we make sure the new child is not equal to this and, if fChildClass; /// is set, that it is inherited from it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveElement.cxx:235,inherit,inherited,235,graf3d/eve7/src/REveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveElement.cxx,1,['inherit'],['inherited']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Check if expression is in the list of defined variables.; ///; /// This member function can be overloaded in derived classes; ///; /// If you overload this member function, you also HAVE TO; /// never call the constructor:; ///; /// ~~~ {.cpp}; /// TFormula::TFormula(const char *name,const char *expression); /// ~~~; ///; /// and write your own constructor; ///; /// ~~~ {.cpp}; /// MyClass::MyClass(const char *name,const char *expression) : TFormula(); /// ~~~; ///; /// which has to call the TFormula default constructor and whose implementation; /// should be similar to the implementation of the normal TFormula constructor; ///; /// This is necessary because the normal TFormula constructor call indirectly; /// the virtual member functions Analyze, DefaultString, DefaultValue; /// and DefaultVariable.; ///; /// The expected returns values are; /// - -2 : the name has been recognized but won't be usable; /// - -1 : the name has not been recognized; /// - >=0 : the name has been recognized, return the action parameter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:132,variab,variables,132,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Check if name is in the list of Tree/Branch leaves.; ///; /// This member function redefines the function in ROOT::v5::TFormula; /// If a leaf has a name corresponding to the argument name, then; /// returns a new code.; ///; /// A TTreeFormula may contain more than one variable.; /// For each variable referenced, the pointers to the corresponding; /// branch and leaf is stored in the object arrays fBranches and fLeaves.; ///; /// name can be :; /// - Leaf_Name (simple variable or data member of a ClonesArray); /// - Branch_Name.Leaf_Name; /// - Branch_Name.Method_Name; /// - Leaf_Name[index]; /// - Branch_Name.Leaf_Name[index]; /// - Branch_Name.Leaf_Name[index1]; /// - Branch_Name.Leaf_Name[][index2]; /// - Branch_Name.Leaf_Name[index1][index2]; ///; /// New additions:; /// - Branch_Name.Leaf_Name[OtherLeaf_Name]; /// - Branch_Name.Datamember_Name; /// - '.' can be replaced by '->'; ///; /// and; /// - Branch_Name[index1].Leaf_Name[index2]; /// - Leaf_name[index].Action().OtherAction(param); /// - Leaf_name[index].Action()[val].OtherAction(param); ///; /// The expected returned values are; /// - -2 : the name has been recognized but won't be usable; /// - -1 : the name has not been recognized, or is too long, or tree does not exist.; /// - >=0 : the name has been recognized, return the internal code for this name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:357,variab,variable,357,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,3,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Check if object is able to configure with this editor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:113,config,configure,113,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,2,['config'],['configure']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Check if the limits are valid. For this integrator all limit configurations; /// are valid, but if the limits change between two calculate() calls it; /// may be necessary to reconfigure (e.g. if an open ended range becomes; /// a closed range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:147,config,configurations,147,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,1,['config'],['configurations']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Check if the plugin library for this handler exits. Returns 0; /// when it exists and -1 in case the plugin does not exist.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:99,plugin,plugin,99,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,2,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Check if this configuration was created before",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx:100,config,configuration,100,roofit/roofitcore/src/RooAddModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Check that the variables conform to the non-zero indices",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpVar.cxx:101,variab,variables,101,math/quadp/src/TQpVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpVar.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Check that two sub axis are the same.; /// The limits are defined by first bin and last bin; /// N.B. no check is done in this case for variable bins",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:222,variab,variable,222,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Checkis, if lock is free in configuration tables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:114,config,configuration,114,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Clean up condition variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx:105,variab,variable,105,core/thread/src/TCondition.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Clean up the plugin manager.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:99,plugin,plugin,99,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Clean up the selections from the ranges which could have been deleted; /// when a variable has been deleted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:168,variab,variable,168,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Clean up the variables combo box.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:99,variab,variables,99,tree/treeviewer/src/TParallelCoordEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Cleanup plugin handler object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:94,plugin,plugin,94,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Clear internal structures and variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:116,variab,variables,116,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Clear the clones array. Use this routine when your objects allocate; /// memory (e.g. objects inheriting from TNamed or containing TStrings; /// allocate memory). If not you better use Clear() since if is faster.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:180,inherit,inheriting,180,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['inherit'],['inheriting']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Clear the formula setting expression to empty and reset the variables and; /// parameters containers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:146,variab,variables,146,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Clear the list of environment variables passed to proofserv; /// on the master and slaves",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:116,variab,variables,116,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Clone constructor, must connect internal storage to given new external set of variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:164,variab,variables,164,roofit/roofitcore/src/RooVectorDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Clone the browser. A new Browser will be created, with the same; /// plugins executed in the current one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx:155,plugin,plugins,155,gui/gui/src/TRootBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx,1,['plugin'],['plugins']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Closes the file. For Worker ranks, this function will signal to the; /// Collector that the Worker has exited. It also closes the inherited TMemFile.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/mpi/src/TMPIFile.cxx:216,inherit,inherited,216,io/mpi/src/TMPIFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/mpi/src/TMPIFile.cxx,1,['inherit'],['inherited']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Compile input variables and selection expression.; ///; /// varexp is an expression of the general form e1:e2:e3; /// where e1,etc is a formula referencing a combination of the columns; ///; /// Example:; ///; /// varexp = x simplest case: draw a 1-Dim distribution of column named x; /// = sqrt(x) : draw distribution of sqrt(x); /// = x*y/z; /// = y:sqrt(x) 2-Dim distribution of y versus sqrt(x); ///; /// selection is an expression with a combination of the columns; ///; /// Example:; ///; /// selection = ""x<y && sqrt(z)>3.2""; ///; /// in a selection all the C++ operators are authorized; ///; /// Return false if any of the variable is not compilable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:100,variab,variables,100,tree/treeplayer/src/TSelectorDraw.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Compile the variables expression from the given string varexp.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:98,variab,variables,98,tree/treeviewer/src/TSpider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Compile the variables expression from the given varexp.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:98,variab,variables,98,tree/treeplayer/src/TTreeTableInterface.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Compiles each variable from fTreeDrawArgsParser for the tree fTree.; /// Return kFALSE if any of the variable is not compilable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:100,variab,variable,100,proof/proofplayer/src/TProofDraw.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Compress command. Compression is analogous to arithmetic ""addition operation"".; ///; /// Note:; /// - The compressed command will be deleted.; /// - Execution Compress method invokes Redo action with new redo arguments; /// inherited from compressed command.; ///; /// More complicated commands might want to override this function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQCommand.cxx:310,inherit,inherited,310,core/base/src/TQCommand.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQCommand.cxx,1,['inherit'],['inherited']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Computation of Voigt function (normalised).; /// Voigt is a convolution of the two functions:; /// \f[; /// gauss(xx) = \frac{1}{(\sqrt{2\pi} sigma)} e^{\frac{xx^{2}}{(2 sigma{^2})}}; /// \f]; /// and; /// \f[; /// lorentz(xx) = \frac{ \frac{1}{\pi} \frac{lg}{2} }{ (xx^{2} + \frac{lg^{2}}{4}) }; /// \f]; /// \.; ///; /// The Voigt function is known to be the real part of Faddeeva function also; /// called complex error function [2].; ///; /// The algorithm was developed by J. Humlicek [1].; /// This code is based on fortran code presented by R. J. Wells [2].; /// Translated and adapted by Miha D. Puc; ///; /// To calculate the Faddeeva function with relative error less than 10^(-r).; /// r can be set by the user subject to the constraints 2 <= r <= 5.; ///; /// - [1] J. Humlicek, JQSRT, 21, 437 (1982).; /// - [2] [R.J. Wells ""Rapid Approximation to the Voigt/Faddeeva Function and its Derivatives"" JQSRT 62 (1999), pp 29-48.](http://www-atm.physics.ox.ac.uk/user/wells/voigt.html)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:671,adapt,adapted,671,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['adapt'],['adapted']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Compute Correlation Ratio of 2D histogram to estimate functional dependency between two variables; /// Author: Moritz Backes, Geneva (2009)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx:174,variab,variables,174,tmva/tmva/src/Tools.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Compute Quantiles for density distribution of this function; ///; /// Quantile x_p of a probability distribution Function F is defined as; /// \f[; /// F(x_{p}) = \int_{xmin}^{x_{p}} f dx = p with 0 <= p <= 1.; /// \f]; /// For instance the median \f$ x_{\frac{1}{2}} \f$ of a distribution is defined as that value; /// of the random variable for which the distribution function equals 0.5:; /// \f[; /// F(x_{\frac{1}{2}}) = \prod(x < x_{\frac{1}{2}}) = \frac{1}{2}; /// \f]; ///; /// \param[in] n maximum size of array xp and size of array p; /// \param[out] xp array filled with n quantiles evaluated at p. Memory has to be preallocated by caller.; /// \param[in] p array of cumulative probabilities where quantiles should be evaluated.; /// It is assumed to contain at least n values.; /// \return n, the number of quantiles computed (same as input argument n); ///; /// Getting quantiles from two histograms and storing results in a TGraph,; /// a so-called QQ-plot; ///; /// TGraph *gr = new TGraph(nprob);; /// f1->GetQuantiles(nprob,gr->GetX(),p);; /// f2->GetQuantiles(nprob,gr->GetY(),p);; /// gr->Draw(""alp"");; ///; /// \author Eddy Offermann; /// \warning Function leads to undefined behavior if xp or p are null or; /// their size does not match with n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:420,variab,variable,420,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Compute Quantiles for this histogram; /// Quantile x_p := Q(p) is defined as the value x_p such that the cumulative; /// probability distribution Function F of variable X yields:; ///; /// ~~~ {.cpp}; /// F(x_p) = Pr(X <= x_p) = p with 0 <= p <= 1.; /// x_p = Q(p) = F_inv(p); /// ~~~; ///; /// For instance the median x_0.5 of a distribution is defined as that value; /// of the random variable X for which the distribution function equals 0.5:; ///; /// ~~~ {.cpp}; /// F(x_0.5) = Probability(X < x_0.5) = 0.5; /// x_0.5 = Q(0.5); /// ~~~; ///; /// \author Eddy Offermann; /// code from Eddy Offermann, Renaissance; ///; /// \param[in] n maximum size of array xp and size of array p (if given); /// \param[out] xp array to be filled with nq quantiles evaluated at (p). Memory has to be preallocated by caller.; /// If p is null (default value), then xp is actually set to the (first n) histogram bin edges; /// \param[in] p array of cumulative probabilities where quantiles should be evaluated.; /// - if p is null, the CDF of the histogram will be used instead as array, and will; /// have a size = number of bins + 1 in h. It will correspond to the; /// quantiles calculated at the lowest edge of the histogram (quantile=0) and; /// all the upper edges of the bins. (nbins might be > n).; /// - if p is not null, it is assumed to contain at least n values.; /// \return value nq (<=n) with the number of quantiles computed; ///; /// Note that the Integral of the histogram is automatically recomputed; /// if the number of entries is different of the number of entries when; /// the integral was computed last time. In case you do not use the Fill; /// functions to fill your histogram, but SetBinContent, you must call; /// TH1::ComputeIntegral before calling this function.; ///; /// Getting quantiles xp from two histograms and storing results in a TGraph,; /// a so-called QQ-plot; ///; /// ~~~ {.cpp}; /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:246,variab,variable,246,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Compute alignment variables. The alignment is done on the horizontal string; /// then the rotation is applied on the alignment variables.; /// SetRotation and LayoutGlyphs should have been called before.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:104,variab,variables,104,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,4,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Compute ranking of input variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:111,variab,variables,111,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Compute ranking of input variables from the number of cuts made; /// in each PDEFoam dimension. The PDEFoam dimension (the variable); /// for which the most cuts were done is ranked highest.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx:111,variab,variables,111,tmva/tmva/src/MethodPDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Compute the X distribution of quantiles in the other variable Y; /// name is the name of the returned histogram; /// prob is the probability content for the quantile (0.5 is the default for the median); /// An approximate error for the quantile is computed assuming that the distribution in; /// the other variable is normal. According to this approximate formula the error on the quantile is; /// estimated as sqrt( p (1-p) / ( n * f(q)^2) ), where p is the probability content of the quantile and; /// n is the number of events used to compute the quantile and f(q) is the probability distribution for the; /// other variable evaluated at the obtained quantile. In the error estimation the probability is then assumed to be; /// a normal distribution.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:139,variab,variable,139,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,3,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Compute the Y distribution of quantiles in the other variable X; /// name is the name of the returned histogram; /// prob is the probability content for the quantile (0.5 is the default for the median); /// An approximate error for the quantile is computed assuming that the distribution in; /// the other variable is normal.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:139,variab,variable,139,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Compute the logarithm of variables `gxwork` and `gywork`; /// according to the value of Options and put the results; /// in the variables `gxworkl` and `gyworkl`.; ///; /// npoints : Number of points in gxwork and in gywork.; ///; /// - opt = 1 ComputeLogs is called from PaintGrapHist; /// - opt = 0 ComputeLogs is called from PaintGraph",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx:111,variab,variables,111,hist/histpainter/src/TGraphPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TGraphPainter.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Computes density function for Student's t- distribution; /// (the probability function (integral of density) is computed in StudentI).; ///; /// First parameter stands for x - the actual variable of the; /// density function p(x) and the point at which the density is calculated.; /// Second parameter stands for number of degrees of freedom.; ///; /// About Student distribution:; /// Student's t-distribution is used for many significance tests, for example,; /// for the Student's t-tests for the statistical significance of difference; /// between two sample means and for confidence intervals for the difference; /// between two population means.; ///; /// Example: suppose we have a random sample of size n drawn from normal; /// distribution with mean Mu and st.deviation Sigma. Then the variable; ///; /// t = (sample_mean - Mu)/(sample_deviation / sqrt(n)); ///; /// has Student's t-distribution with n-1 degrees of freedom.; ///; /// NOTE that this function's second argument is number of degrees of freedom,; /// not the sample size.; ///; /// As the number of degrees of freedom grows, t-distribution approaches; /// Normal(0,1) distribution.; ///; /// \author Anna Kreshuk",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:273,variab,variable,273,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Computes maximum, minimum, mean, RMS and variance for all; /// variables and targets",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VarTransformHandler.cxx:149,variab,variables,149,tmva/tmva/src/VarTransformHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VarTransformHandler.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Computes the density function of F-distribution; /// (probability function, integral of density, is computed in FDistI).; ///; /// Parameters N and M stand for degrees of freedom of chi-squares; /// mentioned above parameter F is the actual variable x of the; /// density function p(x) and the point at which the density function; /// is calculated.; ///; /// ### About F distribution:; /// F-distribution arises in testing whether two random samples; /// have the same variance. It is the ratio of two chi-square; /// distributions, with N and M degrees of freedom respectively,; /// where each chi-square is first divided by it's number of degrees; /// of freedom.; ///; /// \author Anna Kreshuk",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:327,variab,variable,327,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Computes the density of LogNormal distribution at point x.; /// Variable X has lognormal distribution if Y=Ln(X) has normal distribution; ///; /// \param[in] x is the evaluation point; /// \param[in] sigma is the shape parameter; /// \param[in] theta is the location parameter; /// \param[in] m is the scale parameter; ///; /// The formula was taken from ""Engineering Statistics Handbook"" on site; /// http://www.itl.nist.gov/div898/handbook/eda/section3/eda3669.htm; /// Implementation using ROOT::Math::lognormal_pdf; ///; /// Begin_Macro; /// {; /// TCanvas *c1 = new TCanvas(""c1"", ""c1"", 700, 500);; ///; /// c1->SetLogy();; /// c1->SetGridx();; /// c1->SetGridy();; ///; /// TF1 *logn = new TF1(""logn"", ""TMath::LogNormal(x, [0], [1], [2])"", 0, 5);; /// logn->SetMinimum(1e-3);; ///; /// logn->SetParameters(0.5, 0., 1.);; /// logn->SetLineColor(2);; /// TF1 *logn1 = logn->DrawCopy(""L"");; /// logn->SetParameters(1.0, 0., 1.);; /// logn->SetLineColor(3);; /// TF1 *logn2 = logn->DrawCopy(""LSAME"");; /// logn->SetParameters(2.0, 0., 1.);; /// logn->SetLineColor(4);; /// TF1 *logn3 = logn->DrawCopy(""LSAME"");; /// logn->SetParameters(5.0, 0., 1.);; /// logn->SetLineColor(6);; /// TF1 *logn4 = logn->DrawCopy(""LSAME"");; ///; /// auto legend = new TLegend(0.15, 0.15, 0.5, 0.35);; /// legend->AddEntry(logn1, ""sigma = 0.5, theta = 0, m = 1"", ""L"");; /// legend->AddEntry(logn2, ""sigma = 1.0, theta = 0, m = 1"", ""L"");; /// legend->AddEntry(logn3, ""sigma = 2.0, theta = 0, m = 1"", ""L"");; /// legend->AddEntry(logn4, ""sigma = 5.0, theta = 0, m = 1"", ""L"");; /// legend->Draw();; /// }; /// End_Macro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:150,Variab,Variable,150,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['Variab'],['Variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Computes the diagonal matrices in the augmented system from the current set of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverBase.cxx:165,variab,variables,165,math/quadp/src/TQpLinSolverBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpLinSolverBase.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Computes variance of all the variables and; /// returns a new DataLoader with the selected variables whose variance is above a specific threshold.; /// Threshold can be provided by user otherwise default value is 0 i.e. remove the variables which have same value in all; /// the events.; ///; /// \param[in] threshold value (Double); ///; /// Transformation Definition String Format: ""VT(optional float value)""; ///; /// Usage examples:; ///; /// String | Description; /// ------- |----------------------------------------; /// ""VT"" | Select variables whose variance is above threshold value = 0 (Default); /// ""VT(1.5)"" | Select variables whose variance is above threshold value = 1.5",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VarTransformHandler.cxx:115,variab,variables,115,tmva/tmva/src/VarTransformHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VarTransformHandler.cxx,5,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/pythia8/src/TPythia8.cxx:86,Config,Configuration,86,montecarlo/pythia8/src/TPythia8.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/pythia8/src/TPythia8.cxx,2,['Config'],['Configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Configuration of guides GUI called from SetModel().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx:86,Config,Configuration,86,graf3d/gl/src/TGLViewerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx,1,['Config'],['Configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Configure default contents to be printed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:86,Config,Configure,86,roofit/roofitcore/src/RooFitResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx,1,['Config'],['Configure']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Configure mapping of Print() arguments to RooPrintable print styles",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:86,Config,Configure,86,roofit/roofitcore/src/RooFitResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx,1,['Config'],['Configure']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Configure the camera state.; /// - fov - set directly field-of-view in degrees (default = 30);; /// - dolly - additional move along the camera forward direction;; /// - center - new camera center (can be 0 for no change);; /// - hRotate - additional ""up/down"" rotation in radians;; /// - vRotate - additional ""left/right"" rotation in radians.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPerspectiveCamera.cxx:86,Config,Configure,86,graf3d/gl/src/TGLPerspectiveCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPerspectiveCamera.cxx,1,['Config'],['Configure']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Configure the camera state.; /// - zoom - set directly (default = 0.78);; /// - dolly - additional move along the camera forward direction;; /// - center - new camera center (can be 0 for no change);; /// - hRotate - additional ""up/down"" rotation in radians;; /// - vRotate - additional ""left/right"" rotation in radians.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLOrthoCamera.cxx:86,Config,Configure,86,graf3d/gl/src/TGLOrthoCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLOrthoCamera.cxx,1,['Config'],['Configure']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Configures _typename tag in JSON structures; /// By default ""_typename"" field in JSON structures used to store class information; /// One can specify alternative tag like ""$typename"" or ""xy"", but such JSON can not be correctly used in JSROOT; /// If empty string is provided, class information will not be stored",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx:86,Config,Configures,86,io/io/src/TBufferJSON.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx,1,['Config'],['Configures']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Configures _typeversion tag in JSON; /// One can specify name of the JSON tag like ""_typeversion"" or ""$tv"" which will be used to store class version; /// Such tag can be used to correctly recover objects from JSON; /// If empty string is provided (default), class version will not be stored",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx:86,Config,Configures,86,io/io/src/TBufferJSON.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx,1,['Config'],['Configures']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Connects the TTree to Neurons in input and output; /// layers. The formulas associated to each neuron are created; /// and reported to the network formula manager.; /// By default, the branch is not normalised since this would degrade; /// performance for classification jobs.; /// Normalisation can be requested by putting '@' in front of the formula.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:141,layers,layers,141,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['layers'],['layers']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct MINUIT interface to given function. Function can be anything,; /// but is typically a -log(likelihood) implemented by RooNLLVar or a chi^2; /// (implemented by RooChi2Var). Other frequent use cases are a RooAddition; /// of a RooNLLVar plus a penalty or constraint term. This class propagates; /// all RooFit information (floating parameters, their values and errors); /// to MINUIT before each MINUIT call and propagates all MINUIT information; /// back to the RooFit object at the end of each call (updated parameter; /// values, their (asymmetric errors) etc. The default MINUIT error level; /// for HESSE and MINOS error analysis is taken from the defaultErrorLevel(); /// value of the input function.; /// Constructor that accepts all configuration in struct with RooAbsReal likelihood",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:836,config,configuration,836,roofit/roofitcore/src/RooMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct MultiBuildConfig for build configuration with multiple prototype p.d.f.s; /// masterIndexCat is the name of the master index category that decides which; /// prototype is used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:123,config,configuration,123,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct N-dimensional kernel estimation p.d.f. in observables 'varList'; /// from dataset 'data'. Options can be; ///; /// - 'a' = Use adaptive kernels (width varies with local event density); /// - 'm' = Mirror data points over observable boundaries. Improves modeling; /// behavior at edges for distributions that are not close to zero; /// at edge; /// - 'd' = Debug flag; /// - 'v' = Verbose flag; ///; /// The parameter rho (default = 1) provides an overall scale factor that can; /// be applied to the bandwidth calculated for each kernel. The nSigma parameter; /// determines the size of the box that is used to search for contributing kernels; /// around a given point in observable space. The nSigma parameters is used; /// in case of non-adaptive bandwidths and for the 1st non-adaptive pass for; /// the calculation of adaptive keys p.d.f.s.; ///; /// The optional weight arguments allows to specify an observable or function; /// expression in observables that specifies the weight of each event.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:223,adapt,adaptive,223,roofit/roofit/src/RooNDKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx,4,['adapt'],['adaptive']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct a Bukin PDF.; /// \param name The name of the PDF for RooFit's bookkeeping.; /// \param title The title for e.g. plotting it.; /// \param _x The variable.; /// \param _Xp The peak position.; /// \param _sigp The peak width as FWHM divided by 2*sqrt(2*log(2))=2.35; /// \param _xi Peak asymmetry. Use values around 0.; /// \param _rho1 Left tail. Use slightly negative starting values.; /// \param _rho2 Right tail. Use slightly positive starting values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBukinPdf.cxx:241,variab,variable,241,roofit/roofit/src/RooBukinPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBukinPdf.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct a lightweight function binding of RooAbsReal func to; /// variables 'vars'. Use the provided nset as normalization set to; /// be passed to RooAbsReal::getVal() If rangeName is not null, use; /// the range of with that name as range associated with the; /// variables of this function binding. If clipInvalid is true,; /// values requested to the function binding that are outside the; /// defined range of the variables are clipped to fit in the defined; /// range.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:154,variab,variables,154,roofit/roofitcore/src/RooRealBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx,6,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct a new Johnson PDF.; ///; /// \param name Name that identifies the PDF in computations; /// \param title Title for plotting; /// \param mass The variable of the PDF. Often this is a mass.; /// \param mu Location parameter of the Gaussian component.; /// \param lambda Width parameter (>0) of the Gaussian component.; /// \param gamma Shape parameter that distorts distribution to left/right.; /// \param delta Shape parameter (>0) that determines strength of Gaussian-like component.; /// \param massThreshold Set PDF to zero below this threshold.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJohnson.cxx:240,variab,variable,240,roofit/roofit/src/RooJohnson.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJohnson.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct a new RooBinSamplingPdf.; /// \param[in] name A name to identify this object.; /// \param[in] title Title (for e.g. plotting); /// \param[in] observable Observable to integrate over (the one that is binned).; /// \param[in] inputPdf A PDF whose bins should be sampled with higher precision.; /// \param[in] epsilon Relative precision for the integrator, which is used to sample the bins.; /// Note that ROOT's default is to use an adaptive integrator, which in its first iteration usually reaches; /// relative precision of 1.E-4 or better. Therefore, asking for lower precision rarely has an effect.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:527,adapt,adaptive,527,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['adapt'],['adaptive']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct a new formula.; /// \param[in] name Name of the formula.; /// \param[in] formula Formula to be evaluated. Parameters/observables are identified by name; /// or ordinal position in `varList`.; /// \param[in] varList List of variables to be passed to the formula.; /// \param[in] checkVariables Unused parameter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:319,variab,variables,319,roofit/roofitcore/src/RooFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct a numeric integrator instance that operates on function 'func' and is configured; /// with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; /// of the integration, otherwise it is queried from 'func'. This function iterators over list; /// of available prototype integrators and returns an clone attached to the given function of; /// the first class that matches the specifications of the requested integration considering; /// the number of dimensions, the nature of the limits (open ended vs closed) and the user; /// preference stated in 'config'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:166,config,configured,166,roofit/roofitcore/src/RooNumGenFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx,6,['config'],"['config', 'configured']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct a two-dimensional RooPlot with ranges and properties taken; /// from variables var1 and var2 but with an overriding range definition; /// of [xmin,xmax] x [ymin,ymax]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:165,variab,variables,165,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct an integrator over 'function' where the configuration details; /// are taken from 'config'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:136,config,configuration,136,roofit/roofitcore/src/RooMCIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx,2,['config'],"['config', 'configuration']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct an lvalue variable representing the error of RooRealVar input",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx:106,variab,variable,106,roofit/roofitcore/src/RooErrorVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct binning with 'nBins' bins and with a range; /// parameterized by external RooAbsReals xloIn and xhiIn.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooParamBinning.cxx:144,parameteriz,parameterized,144,roofit/roofitcore/src/RooParamBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooParamBinning.cxx,1,['parameteriz'],['parameterized']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct build configuration from single prototype 'pdfName' and list of arguments; /// that can be passed to RooSimWSTool::build() method. This routine parses SplitParam(); /// SplitParamConstrained() and Restrict() arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:102,config,configuration,102,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct integral of 'function' over observables in 'depList'; /// in range 'rangeName' with normalization observables 'funcNormSet'; /// (for p.d.f.s). In the integral is performed to the maximum extent; /// possible the internal (analytical) integrals advertised by function.; /// The other integrations are performed numerically. The optional; /// config object prescribes how these numeric integrations are configured.; ///; /// \Note If pdf component selection was globally overridden to always include; /// all components (either with RooAbsReal::globalSelectComp(bool) or a; /// RooAbsReal::GlobalSelectComponentRAII), then any created integral will; /// ignore component selections during its lifetime. This is especially useful; /// when creating normalization or projection integrals.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:438,config,config,438,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,2,['config'],"['config', 'configured']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct integral on 'function' using given configuration object in the given range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx:131,config,configuration,131,roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct integral on 'function' using given configuration object. The integration; /// range is taken from the definition in the function binding",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx:131,config,configuration,131,roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooGaussKronrodIntegrator1D.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified; /// configuration object and integration range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:155,config,configuration,155,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct integrator on given function binding, using specified; /// configuration object. The integration limits are taken from the; /// function binding",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:155,config,configuration,155,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct string with unique suffix for cache objects based on; /// observable names that define cache configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedPdf.cxx:189,config,configuration,189,roofit/roofitcore/src/RooAbsCachedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedPdf.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Construct the pull of the RooRealVar 'meas'.; ///; /// \param[in] name Name of the pull variable.; /// \param[in] title The title (for plotting).; /// \param[in] meas The measurement. This variable needs to have an error, and therefore is a RooRealVar.; /// \param[in] truth The true value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx:174,variab,variable,174,roofit/roofitcore/src/RooPullVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPullVar.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor - cleans all the class variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:121,variab,variables,121,tree/treeplayer/src/TTreeDrawArgsParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for Double_t variable bin size (along Y axis) 2-D histograms.; ///; /// \param[in] name name of histogram (avoid blanks); /// \param[in] title histogram title.; /// If title is of the form `stringt;stringx;stringy;stringz`; /// the histogram title is set to `stringt`,; /// the x axis title to `stringx`, the y axis title to `stringy`, etc.; /// \param[in] nbinsx number of bins along the X axis; /// \param[in] xlow low edge of the X axis first bin; /// \param[in] xup upper edge of the X axis last bin (not included in last bin); /// \param[in] nbinsy number of bins; /// \param[in] ybins array of low-edges for each bin.; /// This is an array of type double and size nbinsy+1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:111,variab,variable,111,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for Double_t variable bin size 2-D histograms.; ///; /// \param[in] name name of histogram (avoid blanks); /// \param[in] title histogram title.; /// If title is of the form `stringt;stringx;stringy;stringz`; /// the histogram title is set to `stringt`,; /// the x axis title to `stringx`, the y axis title to `stringy`, etc.; /// \param[in] nbinsx number of bins; /// \param[in] xbins array of low-edges for each bin.; /// This is an array of type double and size nbinsx+1; /// \param[in] nbinsy number of bins; /// \param[in] ybins array of low-edges for each bin.; /// This is an array of type double and size nbinsy+1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:111,variab,variable,111,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for Profile histograms with variable bin size.; /// See TProfile::BuildOptions for more explanations on errors; ///; /// see also comments in the TH1 base class constructors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:126,variab,variable,126,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for Profile histograms with variable bin size.; ///; /// See TProfile::BuildOptions for more explanations on errors; /// see also comments in the TH1 base class constructors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:126,variab,variable,126,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for Profile histograms with variable bin size.; ///; /// See TProfile::BuildOptions() for more explanations on errors; /// see also comments in the TH1 base class constructors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:126,variab,variable,126,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for a PDF from a list of functions and coefficients.; /// It implements; /// \f[; /// \sum_i \mathrm{coef}_i \cdot \mathrm{func}_i,; /// \f]; /// if \f$ N_\mathrm{coef} = N_\mathrm{func} \f$. With `extended=true`, the coefficients can take any values. With `extended=false`,; /// there is the danger of getting a degenerate minimisation problem because a PDF has to be normalised, which needs one degree; /// of freedom less.; ///; /// A plain (normalised) PDF can therefore be implemented with one less coefficient. RooFit then computes; /// \f[; /// \sum_i^{N-1} \mathrm{coef}_i \cdot \mathrm{func}_i + (1 - \sum_i \mathrm{coef}_i ) \cdot \mathrm{func}_N,; /// \f]; /// if \f$ N_\mathrm{coef} = N_\mathrm{func} - 1 \f$.; ///; /// All coefficients and functions are allowed to be negative; /// but the sum (*i.e.* the PDF) is not, which is enforced at runtime.; ///; /// \param name Name of the PDF; /// \param title Title (for plotting); /// \param inFuncList List of functions to sum; /// \param inCoefList List of coefficients; /// \param extended Interpret as extended PDF (requires equal number of functions and coefficients)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx:296,extend,extended,296,roofit/roofitcore/src/RooRealSumPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumPdf.cxx,4,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for automatic configuration with basic settings. Uses a; /// UniformProposal, 10,000 iterations, 40 burn in steps, 50 bins for each; /// RooRealVar, determines interval by histogram. Finds a 95% confidence; /// interval.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCCalculator.cxx:112,config,configuration,112,roofit/roostats/src/MCMCCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCCalculator.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for variable bin size (along X and Y axis) 2-D histograms using input; /// arrays of type float.; ///; /// \param[in] name name of histogram (avoid blanks); /// \param[in] title histogram title.; /// If title is of the form `stringt;stringx;stringy;stringz`; /// the histogram title is set to `stringt`,; /// the x axis title to `stringx`, the y axis title to `stringy`, etc.; /// \param[in] nbinsx number of bins; /// \param[in] xbins array of low-edges for each bin.; /// This is an array of type float and size nbinsx+1; /// \param[in] nbinsy number of bins; /// \param[in] ybins array of low-edges for each bin.; /// This is an array of type float and size nbinsy+1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:102,variab,variable,102,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for variable bin size (along X axis) 2-D histograms using an input array; /// of type double.; ///; /// \param[in] name name of histogram (avoid blanks); /// \param[in] title histogram title.; /// If title is of the form `stringt;stringx;stringy;stringz`; /// the histogram title is set to `stringt`,; /// the x axis title to `stringx`, the y axis title to `stringy`, etc.; /// \param[in] nbinsx number of bins; /// \param[in] xbins array of low-edges for each bin.; /// This is an array of type double and size nbinsx+1; /// \param[in] nbinsy number of bins along the Y axis; /// \param[in] ylow low edge of the Y axis first bin; /// \param[in] yup upper edge of the Y axis last bin (not included in last bin)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:102,variab,variable,102,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for variable bin size (along X, Y and Z axis) 3-D histograms using input; /// arrays of type double.; ///; /// \param[in] name name of histogram (avoid blanks); /// \param[in] title histogram title.; /// If title is of the form `stringt;stringx;stringy;stringz`; /// the histogram title is set to `stringt`,; /// the x axis title to `stringx`, the y axis title to `stringy`, etc.; /// \param[in] nbinsx number of bins; /// \param[in] xbins array of low-edges for each bin.; /// This is an array of type double and size nbinsx+1; /// \param[in] nbinsy number of bins; /// \param[in] ybins array of low-edges for each bin.; /// This is an array of type double and size nbinsy+1; /// \param[in] nbinsz number of bins; /// \param[in] zbins array of low-edges for each bin.; /// This is an array of type double and size nbinsz+1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx:102,variab,variable,102,hist/hist/src/TH3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for variable bin size (along X, Y and Z axis) 3-D histograms using input; /// arrays of type float.; ///; /// \param[in] name name of histogram (avoid blanks); /// \param[in] title histogram title.; /// If title is of the form `stringt;stringx;stringy;stringz`; /// the histogram title is set to `stringt`,; /// the x axis title to `stringx`, the y axis title to `stringy`, etc.; /// \param[in] nbinsx number of bins; /// \param[in] xbins array of low-edges for each bin.; /// This is an array of type float and size nbinsx+1; /// \param[in] nbinsy number of bins; /// \param[in] ybins array of low-edges for each bin.; /// This is an array of type float and size nbinsy+1; /// \param[in] nbinsz number of bins; /// \param[in] zbins array of low-edges for each bin.; /// This is an array of type float and size nbinsz+1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx:102,variab,variable,102,hist/hist/src/TH3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for variable bin size 3-D histograms.; /// (see TH3::TH3 for explanation of parameters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx:102,variab,variable,102,hist/hist/src/TH3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx,4,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for variable bin size 3-D histograms; /// (see TH3::TH3 for explanation of parameters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx:102,variab,variable,102,hist/hist/src/TH3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx,8,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for variable bin size histograms using an input array of type double.; ///; /// \param[in] name name of histogram (avoid blanks); /// \param[in] title histogram title.; /// If title is of the form `stringt;stringx;stringy;stringz`; /// the histogram title is set to `stringt`,; /// the x axis title to `stringx`, the y axis title to `stringy`, etc.; /// \param[in] nbins number of bins; /// \param[in] xbins array of low-edges for each bin.; /// This is an array of type double and size nbins+1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:102,variab,variable,102,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for variable bin size histograms using an input array of type float.; /// Creates the main histogram structure.; ///; /// \param[in] name name of histogram (avoid blanks); /// \param[in] title histogram title.; /// If title is of the form `stringt;stringx;stringy;stringz`; /// the histogram title is set to `stringt`,; /// the x axis title to `stringx`, the y axis title to `stringy`, etc.; /// \param[in] nbins number of bins; /// \param[in] xbins array of low-edges for each bin.; /// This is an array of type float and size nbins+1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:102,variab,variable,102,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor from a HypoTestCalculatorGeneric; /// The HypoTest calculator must be a FrequentistCalculator or HybridCalculator type; /// Other type of calculators are not supported.; /// The calculator must be created before by using the S+B model for the null and; /// the B model for the alt; /// If no variable to scan are given they are assumed to be the first variable; /// from the parameter of interests of the null model",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx:390,variab,variable,390,roofit/roostats/src/HypoTestInverter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor from a RooDataHist. The first list of observables are the p.d.f.; /// observables, which may any RooAbsReal (function or variable). The second list; /// are the corresponding observables in the RooDataHist which must be of type; /// RooRealVar or RooCategory This constructor thus allows to apply a coordinate transformation; /// on the histogram data to be applied.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:219,variab,variable,219,roofit/roofitcore/src/RooHistPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor from a RooDataHist. The variable listed in 'vars' control the dimensionality of the; /// function. Any additional dimensions present in 'dhist' will be projected out. RooDataHist dimensions; /// can be either real or discrete. See RooDataHist::RooDataHist for details on the binning.; /// RooHistFunc neither owns or clone 'dhist' and the user must ensure the input histogram exists; /// for the entire life span of this function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:122,variab,variable,122,roofit/roofitcore/src/RooHistFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor from a model for B model and a model for S+B.; /// An HypoTestCalculator (Hybrid of Frequentis) will be created using the; /// S+B model as the null and the B model as the alternate; /// If no variable to scan are given they are assumed to be the first variable; /// from the parameter of interests of the null model",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx:291,variab,variable,291,roofit/roostats/src/HypoTestInverter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor from a reference to a AsymptoticCalculator; /// The calculator must be created before by using the S+B model for the null and; /// the B model for the alt; /// If no variable to scan are given they are assumed to be the first variable; /// from the parameter of interests of the null model",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx:264,variab,variable,264,roofit/roostats/src/HypoTestInverter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor from a reference to a FrequentistCalculator; /// The calculator must be created before by using the S+B model for the null and; /// the B model for the alt; /// If no variable to scan are given they are assumed to be the first variable; /// from the parameter of interests of the null model",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx:265,variab,variable,265,roofit/roostats/src/HypoTestInverter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor from a reference to a HybridCalculator; /// The calculator must be created before by using the S+B model for the null and; /// the B model for the alt; /// If no variable to scan are given they are assumed to be the first variable; /// from the parameter of interests of the null model",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx:260,variab,variable,260,roofit/roostats/src/HypoTestInverter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor from a root TCollection. Elements in the collection that; /// do not inherit from RooAbsArg will be skipped. A warning message; /// will be printed for every skipped item.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgList.cxx:167,inherit,inherit,167,roofit/roofitcore/src/RooArgList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgList.cxx,2,['inherit'],['inherit']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor from a set of variables. Only fundamental elements of vars; /// (RooRealVar,RooCategory etc) are stored as part of the dataset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:112,variab,variables,112,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor from index category and full list of PDFs.; /// In this constructor form, a PDF must be supplied for each indexCat state; /// to avoid ambiguities. The PDFs are associated with the states of the; /// index category as they appear when iterating through the category states; /// with RooAbsCategory::begin() and RooAbsCategory::end(). This usually means; /// they are associated by ascending index numbers.; ///; /// PDFs may not overlap (i.e. share any variables) with the index category (function)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:551,variab,variables,551,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of a data hist from an existing data collection (binned or unbinned); /// The RooArgSet 'vars' defines the dimensions of the histogram.; /// The range and number of bins in each dimensions are taken; /// from getMin(), getMax(), getBins() of each argument passed.; ///; /// For real dimensions, the fit range and number of bins can be set independently; /// of the plot range and number of bins, but it is advisable to keep the; /// ratio of the plot bin width and the fit bin width an integer value.; /// For category dimensions, the fit ranges always comprises all defined states; /// and each state is always has its individual bin; ///; /// To effectively bin real dimensions with variable bin sizes,; /// construct a RooThresholdCategory of the real dimension to be binned variably.; /// Set the thresholds at the desired bin boundaries, and construct the; /// data hist as a function of the threshold category instead of the real variable.; ///; /// If the constructed data hist has less dimensions that in source data collection,; /// all missing dimensions will be projected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:783,variab,variable,783,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,3,['variab'],"['variable', 'variably']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of a data set from (part of) an existing data; /// set. The dimensions of the data set are defined by the 'vars'; /// RooArgSet, which can be identical to 'dset' dimensions, or a; /// subset thereof. The 'cutVar' formula variable is used to select; /// the subset of data points to be copied. For subsets without; /// selection on the data points, or involving cuts operating; /// exclusively and directly on the data set dimensions, the; /// equivalent constructor with a string based cut expression is; /// recommended.; ///; /// For most uses the RooAbsData::reduce() wrapper function, which; /// uses this constructor, is the most convenient way to create a; /// subset of an existing data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:319,variab,variable,319,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of a data set from (part of) an existing data; /// set. The dimensions of the data set are defined by the 'vars'; /// RooArgSet, which can be identical to 'dset' dimensions, or a; /// subset thereof. The 'cuts' string is an optional RooFormula; /// expression and can be used to select the subset of the data; /// points in 'dset' to be copied. The cut expression can refer to; /// any variable in the source dataset. For cuts involving variables; /// other than those contained in the source data set, such as; /// intermediate formula objects, use the equivalent constructor; /// accepting RooFormulaVar reference as cut specification.; ///; /// For most uses the RooAbsData::reduce() wrapper function, which; /// uses this constructor, is the most convenient way to create a; /// subset of an existing data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:484,variab,variable,484,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of a data weighted average function binding with; /// variables 'vars' for function 'real' and dataset 'data' with; /// weights.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataProjBinding.cxx:152,variab,variables,152,roofit/roofitcore/src/RooDataProjBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataProjBinding.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of an empty data hist from a RooArgSet defining the dimensions; /// of the data space. The range and number of bins in each dimensions are taken; /// from getMin()getMax(),getBins() of each RooAbsArg representing that; /// dimension.; ///; /// For real dimensions, the fit range and number of bins can be set independently; /// of the plot range and number of bins, but it is advisable to keep the; /// ratio of the plot bin width and the fit bin width an integer value.; /// For category dimensions, the fit ranges always comprises all defined states; /// and each state is always has its individual bin; ///; /// To effectively bin real dimensions with variable bin sizes,; /// construct a RooThresholdCategory of the real dimension to be binned variably.; /// Set the thresholds at the desired bin boundaries, and construct the; /// data hist as a function of the threshold category instead of the real variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:753,variab,variable,753,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,3,['variab'],"['variable', 'variably']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of convolution operator PDF; ///; /// convVar : convolution variable (on which both pdf and resmodel should depend); /// pdf : input 'physics' pdf; /// resmodel : input 'resolution' pdf; ///; /// output is pdf(x) (X) resmodel(x) = Int [ pdf(x') resmodel (x-x') ] dx'; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:158,variab,variable,158,roofit/roofitcore/src/RooNumConvolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of integral on given function binding and with given configuration. The; /// integration limits are taken from the definition in the function binding; ///_func = function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx:151,config,configuration,151,roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of profile likelihood given input likelihood nll w.r.t; /// the given set of variables. The input log likelihood is minimized w.r.t; /// to all other variables of the likelihood at each evaluation and the; /// value of the global log likelihood minimum is always subtracted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProfileLL.cxx:175,variab,variables,175,roofit/roofitcore/src/RooProfileLL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProfileLL.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor taking a function binding and a configuration object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:130,config,configuration,130,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor taking a function binding, an integration range and a configuration object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:152,config,configuration,152,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor taking name, title and function to be cached and; /// fixed choice of variable to cache. To control granularity of the; /// binning of the cache histogram set the desired properties in the; /// binning named ""cache"" in the observables of the function.; /// If the fixed set of cache observables does not match the observables; /// defined in the use context of the p.d.f the cache is still filled; /// completely. Ee.g. when it is specified to cache x and p and only x; /// is a observable in the given use context the cache histogram will; /// store sampled values for all values of observable x and parameter p.; /// In such a mode of operation the cache will also not be recalculated; /// if the observable p changes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCachedPdf.cxx:168,variab,variable,168,roofit/roofitcore/src/RooCachedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCachedPdf.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor taking name, title and function to be cached. To control; /// granularity of the binning of the cache histogram set the desired properties; /// in the binning named ""cache"" in the observables of the function. The dimensions; /// of the cache are automatically matched to the number of observables used; /// in each use context. Multiple cache in different observable may exists; /// simultaneously if the cached p.d.f is used with multiple observable; /// configurations simultaneously",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCachedPdf.cxx:554,config,configurations,554,roofit/roofitcore/src/RooCachedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCachedPdf.cxx,1,['config'],['configurations']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor to make BuildConfig from legacy RooSimPdfBuilder configuration; /// Empty for now",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:147,config,configuration,147,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor used after having fit using directly ROOT::Fit::Fitter; /// will create a dummy fitter copying configuration and parameter settings",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx:193,config,configuration,193,hist/hist/src/TBackCompFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor using the Functor class.; ///; /// \param[in] name object name; /// \param f parameterized functor; /// \param xmin and; /// \param xmax define the plotting range of the function; /// \param[in] npar is the number of free parameters used by the function; /// \param[in] ndim number of dimensions; /// \param[in] addToGlobList boolean marking if it should be added to global list; ///; /// This constructor can be used only in compiled code; ///; /// WARNING! A function created with this constructor cannot be Cloned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:175,parameteriz,parameterized,175,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['parameteriz'],['parameterized']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with RooAbsRealLValue variable and RooAbsReal slope and offset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:120,variab,variable,120,roofit/roofitcore/src/RooLinearVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with a name, title, formula expression and a list of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx:151,variab,variables,151,roofit/roofitcore/src/RooGenericPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with convolution variable 'x'.; /// The convolution variable needs to be convertible to real values, and be able; /// to give information about its range. This is supported by e.g. RooRealVar or RooLinearVar, which; /// accepts offsetting and scaling an observable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:115,variab,variable,115,roofit/roofitcore/src/RooResolutionModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with formula expression and list of input variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx:140,variab,variables,140,roofit/roofitcore/src/RooGenericPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with formula expression and list of input variables.; /// \param[in] name Name of the formula.; /// \param[in] title Title of the formula.; /// \param[in] inFormula Expression to be evaluated.; /// \param[in] dependents Variables that should be passed to the formula.; /// \param[in] checkVariables Check that all variables from `dependents` are used in the expression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:140,variab,variables,140,roofit/roofitcore/src/RooFormulaVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx,3,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with formula expression, title and list of input variables.; /// \param[in] name Name of the formula.; /// \param[in] title Formula expression. Will also be used as the title.; /// \param[in] dependents Variables that should be passed to the formula.; /// \param[in] checkVariables Check that all variables from `dependents` are used in the expression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:147,variab,variables,147,roofit/roofitcore/src/RooFormulaVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx,3,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with function binding and configuration object. The integration range is taken; /// from the definition in the function binding",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:124,config,configuration,124,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with function binding, definition of integration range and configuration object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx:157,config,configuration,157,roofit/roofitcore/src/RooImproperIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with owner and proxied variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgProxy.cxx:121,variab,variable,121,roofit/roofitcore/src/RooArgProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgProxy.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with owner and proxied variable. The valueServer and shapeServer booleans; /// control if the inserted client-server link in the owner propagates value and/or; /// shape dirty flags. If proxyOwnsArg is true, the proxy takes ownership of its component",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgProxy.cxx:121,variab,variable,121,roofit/roofitcore/src/RooArgProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgProxy.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with set of constraint p.d.f.s. All elements in constraintSet must inherit from RooAbsPdf.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConstraintSum.cxx:165,inherit,inherit,165,roofit/roofitcore/src/RooConstraintSum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConstraintSum.cxx,1,['inherit'],['inherit']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with the name of the config file to interpret and the; /// verbosity flag. The extension for the config files is assumed to; /// be "".rs"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx:119,config,config,119,roofit/roostats/src/HLFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx,2,['config'],['config']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. An ExtendedTerm has no observables, it only introduces an extended; /// ML term with the given number of expected events when an extended ML is constructed; /// from this p.d.f.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx:102,Extend,ExtendedTerm,102,roofit/roofitcore/src/RooExtendedTerm.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx,3,"['Extend', 'extend']","['ExtendedTerm', 'extended']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. Argument is number of variables in the sample of data; /// Options are:; /// - N Normalize the covariance matrix (default); /// - D Store input data (default); ///; /// The created object is named ""principal"" by default.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:121,variab,variables,121,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. The supplied resolution model must be constructed with the same; /// convoluted variable as this physics model ('convVar')",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:179,variab,variable,179,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. Types must be defined using defineType() before variable can be used",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx:147,variab,variable,147,roofit/roofitcore/src/RooCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Constructor; ///; /// Parameters:; ///; /// - int populationSize : defines the number of ""Individuals"" which are created and tested; /// within one Generation (Iteration of the Evolution); /// - std::vector<TMVA::Interval*> ranges : Interval holds the information of an interval, where the GetMin; /// gets the low and GetMax gets the high constraint of the variable; /// the size of ""ranges"" is the number of coefficients which are optimised; /// Purpose:; ///; /// Creates a random population with individuals of the size ranges.size()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticAlgorithm.cxx:444,variab,variable,444,tmva/tmva/src/GeneticAlgorithm.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticAlgorithm.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Converts object, inherited from TObject class, to JSON string; /// Lower digit of compact parameter define formatting rules; /// - 0 - no any compression, human-readable form; /// - 1 - exclude spaces in the begin; /// - 2 - remove newlines; /// - 3 - exclude spaces as much as possible; ///; /// Second digit of compact parameter defines algorithm for arrays compression; /// - 0 - no compression, standard JSON array; /// - 1 - exclude leading and trailing zeros; /// - 2 - check values repetition and empty gaps; ///; /// Maximal compression achieved when compact parameter equal to 23; /// When member_name specified, converts only this data member",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx:103,inherit,inherited,103,io/io/src/TBufferJSON.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx,1,['inherit'],['inherited']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Converts object, inherited from TObject class, to XML string; /// GenericLayout defines layout choice for XML file; /// UseNamespaces allow XML namespaces.; /// See TXMLSetup class for details",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TBufferXML.cxx:103,inherit,inherited,103,io/xml/src/TBufferXML.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TBufferXML.cxx,1,['inherit'],['inherited']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Copy constructor (necessary to hold unique_ptr as member variable)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1NormSum.cxx:143,variab,variable,143,hist/hist/src/TF1NormSum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1NormSum.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Copy constructor (necessary to hold unique_ptr as member variable).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1Convolution.cxx:143,variab,variable,143,hist/hist/src/TF1Convolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1Convolution.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create / open a file; ///; /// The type of the file can be either a; /// TFile, TNetFile, TWebFile or any TFile derived class for which an; /// plugin library handler has been registered with the plugin manager; /// (for the plugin manager see the TPluginManager class). The returned; /// type of TFile depends on the file name specified by 'url'.; /// If 'url' is a '|'-separated list of file URLs, the 'URLs' are tried; /// sequentially in the specified order until a successful open.; /// If the file starts with ""root:"", ""roots:"" or ""rootk:"" a TNetFile object; /// will be returned, with ""http:"" a TWebFile, with ""file:"" a local TFile,; /// etc. (see the list of TFile plugin handlers in $ROOTSYS/etc/system.rootrc; /// for regular expressions that will be checked) and as last a local file will; /// be tried.; /// Before opening a file via TNetFile a check is made to see if the URL; /// specifies a local file. If that is the case the file will be opened; /// via a normal TFile. To force the opening of a local file via a; /// TNetFile use either TNetFile directly or specify as host ""localhost"".; /// The netopt argument is only used by TNetFile. For the meaning of the; /// options and other arguments see the constructors of the individual; /// file classes. In case of error, it returns a nullptr.; ///; /// For TFile implementations supporting asynchronous file open, see; /// TFile::AsyncOpen(...), it is possible to request a timeout with the; /// option <b>`TIMEOUT=<secs>`</b>: the timeout must be specified in seconds and; /// it will be internally checked with granularity of one millisec.; /// For remote files there is the option: <b>CACHEREAD</b> opens an existing; /// file for reading through the file cache. The file will be downloaded to; /// the cache and opened from there. If the download fails, it will be opened remotely.; /// The file will be downloaded to the directory specified by",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:230,plugin,plugin,230,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,4,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create 1-, 2- or 3-d ROOT histogram with labels taken; /// from the variables in 'vars' and the with range and binning; /// specified in xlo,xhi and nBins. The dimensions of the arrays xlo,xhi,; /// nBins should match the number of objects in vars.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx:154,variab,variables,154,roofit/roofitcore/src/RooAbsRealLValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create 1-dimensional TEfficiency object with variable bin size.; ///; /// Constructor creates two new and empty histograms with a given binning; ///; /// Input:; ///; /// - `name`: the common part of the name for both histograms (no blanks); /// fTotalHistogram has name: name + ""_total""; /// fPassedHistogram has name: name + ""_passed""; /// - `title`: the common part of the title for both histogram; /// fTotalHistogram has title: title + "" (total)""; /// fPassedHistogram has title: title + "" (passed)""; /// It is possible to label the axis by passing a title with; /// the following format: ""title;xlabel;ylabel"".; /// - `nbins`: number of bins on the x-axis; /// - `xbins`: array of length (nbins + 1) with low-edges for each bin; /// xbins[nbinsx] ... lower edge for overflow bin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:131,variab,variable,131,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create 2-dimensional TEfficiency object with variable bin size.; ///; /// Constructor creates two new and empty histograms with a given binning.; ///; /// Input:; ///; /// - `name`: the common part of the name for both histograms(no blanks); /// fTotalHistogram has name: name + ""_total""; /// fPassedHistogram has name: name + ""_passed""; /// - `title`: the common part of the title for both histogram; /// fTotalHistogram has title: title + "" (total)""; /// fPassedHistogram has title: title + "" (passed)""; /// It is possible to label the axis by passing a title with; /// the following format: ""title;xlabel;ylabel;zlabel"".; /// - `nbinsx`: number of bins on the x-axis; /// - `xbins`: array of length (nbins + 1) with low-edges for each bin; /// xbins[nbinsx] ... lower edge for overflow x-bin; /// - `nbinsy`: number of bins on the y-axis; /// - `ybins`: array of length (nbins + 1) with low-edges for each bin; /// ybins[nbinsy] ... lower edge for overflow y-bin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:131,variab,variable,131,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create 3-dimensional TEfficiency object with variable bin size.; ///; /// Constructor creates two new and empty histograms with a given binning.; ///; /// Input:; ///; /// - `name`: the common part of the name for both histograms(no blanks); /// fTotalHistogram has name: name + ""_total""; /// fPassedHistogram has name: name + ""_passed""; /// - `title`: the common part of the title for both histogram; /// fTotalHistogram has title: title + "" (total)""; /// fPassedHistogram has title: title + "" (passed)""; /// It is possible to label the axis by passing a title with; /// the following format: ""title;xlabel;ylabel;zlabel"".; /// - `nbinsx`: number of bins on the x-axis; /// - `xbins`: array of length (nbins + 1) with low-edges for each bin; /// xbins[nbinsx] ... lower edge for overflow x-bin; /// - `nbinsy`: number of bins on the y-axis; /// - `ybins`: array of length (nbins + 1) with low-edges for each bin; /// xbins[nbinsx] ... lower edge for overflow y-bin; /// - `nbinsz`: number of bins on the z-axis; /// - `zbins`: array of length (nbins + 1) with low-edges for each bin; /// xbins[nbinsx] ... lower edge for overflow z-bin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:131,variab,variable,131,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create Condition variable. Ctor must be given a pointer to an; /// existing mutex. The condition variable is then linked to the mutex,; /// so that there is an implicit unlock and lock around Wait() and; /// TimedWait().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx:103,variab,variable,103,core/thread/src/TPosixCondition.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx,4,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create PDFs of the MVA output variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:116,variab,variables,116,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a 1,2, or 3D-histogram with appropriate scale and labels.; /// Binning and ranges are taken from the variables themselves and can be changed by; /// calling their setPlotMin/Max() and setPlotBins() methods. A histogram can be filled; /// using RooAbsReal::fillHistogram() or RooTreeData::fillHistogram().; /// The caller takes ownership of the returned object and is responsible for deleting it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx:194,variab,variables,194,roofit/roofitcore/src/RooAbsRealLValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a 1-Dim histogram with variable bins of type char (one byte per channel); /// (see TH1::TH1 for explanation of parameters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:116,variab,variable,116,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a 1-Dim histogram with variable bins of type double; /// (see TH1::TH1 for explanation of parameters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:116,variab,variable,116,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a 1-Dim histogram with variable bins of type float; /// (see TH1::TH1 for explanation of parameters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:116,variab,variable,116,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a 1-Dim histogram with variable bins of type integer; /// (see TH1::TH1 for explanation of parameters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:116,variab,variable,116,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a 1-Dim histogram with variable bins of type long64; /// (see TH1::TH1 for explanation of parameters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:116,variab,variable,116,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a 1-Dim histogram with variable bins of type short; /// (see TH1::TH1 for explanation of parameters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:116,variab,variable,116,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a 2-D Profile with fix bins in X and variable bins in Y.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:130,variab,variable,130,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a 2-D Profile with variable bins in X and fix bins in Y.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:112,variab,variable,112,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a 2-D Profile with variable bins in X and variable bins in Y.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:112,variab,variable,112,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a 3-D Profile with variable bins in X , Y and Z.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx:112,variab,variable,112,hist/hist/src/TProfile3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a Branch as a child of a Tree; ///; /// * address is the address of the first item of a structure; /// or the address of a pointer to an object (see example in TTree.cxx).; /// * leaflist is the concatenation of all the variable names and types; /// separated by a colon character :; /// The variable name and the variable type are separated by a; /// slash (/). The variable type must be 1 character. (Characters; /// after the first are legal and will be appended to the visible; /// name of the leaf, but have no effect.) If no type is given, the; /// type of the variable is assumed to be the same as the previous; /// variable. If the first variable does not have a type, it is; /// assumed of type F by default. The list of currently supported; /// types is given below:; /// - `C` : a character string terminated by the 0 character; /// - `B` : an 8 bit signed integer (`Char_t`); Treated as a character when in an array.; /// - `b` : an 8 bit unsigned integer (`UChar_t`); /// - `S` : a 16 bit signed integer (`Short_t`); /// - `s` : a 16 bit unsigned integer (`UShort_t`); /// - `I` : a 32 bit signed integer (`Int_t`); /// - `i` : a 32 bit unsigned integer (`UInt_t`); /// - `F` : a 32 bit floating point (`Float_t`); /// - `f` : a 24 bit floating point with truncated mantissa (`Float16_t`); /// - `D` : a 64 bit floating point (`Double_t`); /// - `d` : a 24 bit truncated floating point (`Double32_t`); /// - `L` : a 64 bit signed integer (`Long64_t`); /// - `l` : a 64 bit unsigned integer (`ULong64_t`); /// - `G` : a long signed integer (`Long_t`, which `sizeof` is platform dependent), stored as a 64 bit integer but usually held in memory as a 64 bit integer on 64 bit machines and 32 bit on 32 bit machines. Due to this difference, this data type is **not cross-platform**.; /// - `g` : a long unsigned integer (`ULong_t`, which `sizeof` is platform dependent), stored as a 64 bit unsigned ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:313,variab,variable,313,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,7,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a JetEvent object.; /// When the constructor is invoked for the first time, the class static; /// variables fgxxx are 0 and the TClonesArray fgxxx are created.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/JetEvent.cxx:191,variab,variables,191,tutorials/tree/JetEvent.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/JetEvent.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a PROOF environment. Starting PROOF involves either connecting; /// to a master server, which in turn will start a set of slave servers, or; /// directly starting as master server (if master = """"). Masterurl is of; /// the form: [proof[s]://]host[:port]. Conffile is the name of the config; /// file describing the remote PROOF cluster (this argument alows you to; /// describe different cluster configurations).; /// The default is proof.conf. Confdir is the directory where the config; /// file and other PROOF related files are (like motd and noproof files).; /// Loglevel is the log level (default = 1). User specified custom config; /// files will be first looked for in $HOME/.conffile.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:376,config,config,376,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,4,['config'],"['config', 'configurations']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooAddPdf cache element for a given normalization set and; /// projection configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddHelpers.cxx:169,config,configuration,169,roofit/roofitcore/src/RooAddHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddHelpers.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooFit PDF that makes `ftor` usable as a PDF in RooFit.; /// \param name Name of the object.; /// \param title Title (e.g. for plotting); /// \param ftor Functor instance to be evaluated and normalised.; /// \param v RooFit variables to be passed to the function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:319,variab,variables,319,roofit/roofit/src/RooFunctorBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooFit function that makes `ftor` usable in RooFit.; /// \param name Name of the object.; /// \param title Title (e.g. for plotting); /// \param ftor Functor instance to be evaluated.; /// \param v RooFit variables to be passed to the function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:300,variab,variables,300,roofit/roofit/src/RooFunctorBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a RooFit object from the given expression.; ///; /// <table>; /// <tr><th> Creating variables <th>; /// <tr><td> `x[-10,10]` <td> Create variable x with given range and put it in workspace; /// <tr><td> `x[3,-10,10]` <td> Create variable x with given range and initial value and put it in workspace; /// <tr><td> `x[3]` <td> Create variable x with given constant value; /// <tr><td> `<numeric literal>` <td> Numeric literal expressions (0.5, -3 etc..) are converted to a RooConst(<numeric literal>); /// wherever a RooAbsReal or RooAbsArg argument is expected; /// <tr><th> Creating categories <th>; /// <tr><td> `c[lep,kao,nt1,nt2]` <td> Create category c with given state names; /// <tr><td> `tag[B0=1,B0bar=-1]` <td> Create category tag with given state names and index assignments; /// <tr><th> Creating functions and pdfs <th>; /// <tr><td> `MyPdf::g(x,m,s)` <td> Create pdf or function of type MyPdf with name g with argument x,m,s; /// Interpretation and number of arguments are mapped to the constructor arguments of the class; /// (after the name and title).; /// <tr><td> `MyPdf(x,m,s)` <td> As above, but with an implicitly defined (unique) object name; /// <tr><th> Creating sets and lists (to be used as inputs above) <th>; /// <tr><td> `{a,b,c}` <td> Create RooArgSet or RooArgList (as determined by context) from given contents; /// </table>; ///; ///; /// Objects that are not created, are assumed to exist in the workspace; /// Object creation expressions as shown above can be nested, e.g. one can do; /// ```; /// RooGaussian::g(x[-10,10],m[0],3); /// ```; /// to create a pdf and its variables in one go. This nesting can be applied recursively e.g.; /// ```; /// SUM::model( f[0.5,0,1] * RooGaussian::g( x[-10,10], m[0], 3] ),; /// RooChebychev::c( x, {a0[0.1],a1[0.2],a2[-0.3]} )); /// ```; /// creates the sum of a Gaussian and a Chebychev and all its variables.; ///; ///; /// A separ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:177,variab,variables,177,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,4,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a TH2F histogram of the distribution of the specified variable; /// using this dataset. Apply any cuts to select which events are used.; /// The variable being plotted can either be contained directly in this; /// dataset, or else be a function of the variables in this dataset.; /// The histogram will be created using RooAbsReal::createHistogram() with; /// the name provided (with our dataset name prepended).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:147,variab,variable,147,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,6,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a Web file object. A web file is the same as a read-only; /// TFile except that it is being read via a HTTP server. Make sure url; /// is a valid TUrl object.; /// The opt can be ""NOPROXY"", to bypass any set ""http_proxy"" shell; /// variable. The proxy can be specified as (in sh, or equivalent csh):; /// export http_proxy=http://pcsalo.cern.ch:3128; /// The proxy can also be specified via the static method TWebFile::SetProxy().; /// Basic authentication (AuthType Basic) is supported. The user name and; /// passwd can be specified in the url like this:; /// http://username:mypasswd@pcsalo.cern.ch/files/aap.root; /// If the file specified in the URL does not exist or is not accessible; /// the kZombie bit will be set in the TWebFile object. Use IsZombie(); /// to see if the file is accessible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:325,variab,variable,325,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a Web file object. A web file is the same as a read-only; /// TFile except that it is being read via a HTTP server. The url; /// argument must be of the form: http://host.dom.ain/file.root.; /// The opt can be ""NOPROXY"", to bypass any set ""http_proxy"" shell; /// variable. The proxy can be specified as (in sh, or equivalent csh):; /// export http_proxy=http://pcsalo.cern.ch:3128; /// The proxy can also be specified via the static method TWebFile::SetProxy().; /// Basic authentication (AuthType Basic) is supported. The user name and; /// passwd can be specified in the url like this:; /// http://username:mypasswd@pcsalo.cern.ch/files/aap.root; /// If the file specified in the URL does not exist or is not accessible; /// the kZombie bit will be set in the TWebFile object. Use IsZombie(); /// to see if the file is accessible. The preferred interface to this; /// constructor is via TFile::Open().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx:356,variab,variable,356,net/net/src/TWebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TWebFile.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a \f$ \chi^2 \f$ variable from a histogram and this function.; ///; /// \param arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8 ordered arguments; ///; /// The list of supported command arguments is given in the documentation for; /// RooChi2Var::RooChi2Var(const char *name, const char* title, RooAbsReal& func, RooDataHist& hdata, const RooCmdArg&,const RooCmdArg&,const RooCmdArg&, const RooCmdArg&,const RooCmdArg&,const RooCmdArg&, const RooCmdArg&,const RooCmdArg&,const RooCmdArg&).; ///; /// \param data Histogram with data; /// \return \f$ \chi^2 \f$ variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:110,variab,variable,110,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a chain.; ///; /// A TChain is a collection of TFile objects.; /// the first parameter ""name"" is the name of the TTree object; /// in the files added with Add.; /// Use TChain::Add to add a new element to this chain.; ///; /// In case the Tree is in a subdirectory, do, eg:; /// ~~~ {.cpp}; /// TChain ch(""subdir/treename"");; /// ~~~; /// Example:; /// Suppose we have 3 files f1.root, f2.root and f3.root. Each file; /// contains a TTree object named ""T"".; /// ~~~ {.cpp}; /// TChain ch(""T""); creates a chain to process a Tree called ""T""; /// ch.Add(""f1.root"");; /// ch.Add(""f2.root"");; /// ch.Add(""f3.root"");; /// ch.Draw(""x"");; /// ~~~; /// The Draw function above will process the variable ""x"" in Tree ""T""; /// reading sequentially the 3 files in the chain ch.; ///; /// The TChain data structure:; ///; /// Each TChainElement has a name equal to the tree name of this TChain; /// and a title equal to the file name. So, to loop over the; /// TFiles that have been added to this chain:; /// ~~~ {.cpp}; /// TObjArray *fileElements=chain->GetListOfFiles();; /// TIter next(fileElements);; /// TChainElement *chEl=0;; /// while (( chEl=(TChainElement*)next() )) {; /// TFile f(chEl->GetTitle());; /// ... do something with f ...; /// }; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:778,variab,variable,778,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a condition variable. The actual condition implementation; /// will be provided via the TThreadFactory. If no external mutex is; /// provided one will be created. Use GetMutex() to get this mutex; /// and use it before calling Signal() or Broadcast().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx:105,variab,variable,105,core/thread/src/TCondition.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a constant variable with a value and optional unit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:104,variab,variable,104,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a crystal ball shape with symmetric Gaussian core and asymmetric tails (just like `RooDSCBShape`).; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaLR Width parameter of the Gaussian component.; /// \param alphaL Location of transition to a power law on the left, in standard deviations away from the mean.; /// \param nL Exponent of power-law tail on the left.; /// \param alphaR Location of transition to a power law on the right, in standard deviations away from the mean.; /// \param nR Exponent of power-law tail on the right.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:316,variab,variable,316,roofit/roofit/src/RooCrystalBall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a crystal ball shape with symmetric Gaussian core and only a tail on; /// one side (just like `RooCBShape`) or two symmetric tails (like `RooSDSCBShape`).; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaLR Width parameter of the Gaussian component.; /// \param alpha Location of transition to a power law, in standard deviations away from the mean.; /// \param n Exponent of power-law tail.; /// \param doubleSided Whether the tail is only on one side or on both sides",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:372,variab,variable,372,roofit/roofit/src/RooCrystalBall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a histogram from the asymmetry between the specified TH1 objects; /// which may have fixed or variable bin widths, but which must both have; /// the same binning. The asymmetry is calculated as (1-2)/(1+2). Error bars are; /// calculated using Binomial statistics. Prints a warning and rounds; /// any bins with non-integer contents. Use the optional parameter to; /// specify the confidence level in units of sigma to use for; /// calculating error bars. The nominal bin width specifies the; /// default used by addAsymmetryBin(), and is used to set the relative; /// normalization of bins with different widths. If not set, the; /// nominal bin width is calculated as range/nbins.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:187,variab,variable,187,roofit/roofitcore/src/RooHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a histogram from the contents of the specified TH1 object; /// which may have fixed or variable bin widths. Error bars are; /// calculated using Poisson statistics. Prints a warning and rounds; /// any bins with non-integer contents. Use the optional parameter to; /// specify the confidence level in units of sigma to use for; /// calculating error bars. The nominal bin width specifies the; /// default used by addBin(), and is used to set the relative; /// normalization of bins with different widths. If not set, the; /// nominal bin width is calculated as range/nbins.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:180,variab,variable,180,roofit/roofitcore/src/RooHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a list of leaf nodes in the arg tree starting with; /// ourself as top node that don't match any of the names of the variable list; /// of the supplied data set (the dependents). The caller of this; /// function is responsible for deleting the returned argset.; /// The complement of this function is getObservables()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:210,variab,variable,210,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a list of leaf nodes in the arg tree starting with; /// ourself as top node that match any of the names of the variable list; /// of the supplied data set (the dependents). The caller of this; /// function is responsible for deleting the returned argset.; /// The complement of this function is getParameters().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:204,variab,variable,204,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a new RooDecay.; /// \param[in] name Name of this object.; /// \param[in] title Title (for *e.g.* plotting); /// \param[in] t Convolution variable (*e.g.* time).; /// \param[in] tau Decay constant.; /// \param[in] model Resolution model for the convolution.; /// \param[in] type One of the decays types `SingleSided, Flipped, DoubleSided`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooDecay.cxx:231,variab,variable,231,roofit/roofit/src/RooDecay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooDecay.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a new TTree Branch.; ///; /// This Branch constructor is provided to support non-objects in; /// a Tree. The variables described in leaflist may be simple; /// variables or structures. // See the two following; /// constructors for writing objects in a Tree.; ///; /// By default the branch buffers are stored in the same file as the Tree.; /// use TBranch::SetFile to specify a different file; ///; /// * address is the address of the first item of a structure.; /// * leaflist is the concatenation of all the variable names and types; /// separated by a colon character :; /// The variable name and the variable type are separated by a slash (/).; /// The variable type may be 0,1 or 2 characters. If no type is given,; /// the type of the variable is assumed to be the same as the previous; /// variable. If the first variable does not have a type, it is assumed; /// of type F by default. The list of currently supported types is given below:; /// - `C` : a character string terminated by the 0 character; /// - `B` : an 8 bit signed integer (`Char_t`); Treated as a character when in an array.; /// - `b` : an 8 bit unsigned integer (`UChar_t`); /// - `S` : a 16 bit signed integer (`Short_t`); /// - `s` : a 16 bit unsigned integer (`UShort_t`); /// - `I` : a 32 bit signed integer (`Int_t`); /// - `i` : a 32 bit unsigned integer (`UInt_t`); /// - `F` : a 32 bit floating point (`Float_t`); /// - `f` : a 24 bit floating point with truncated mantissa (`Float16_t`); /// - `D` : a 64 bit floating point (`Double_t`); /// - `d` : a 24 bit truncated floating point (`Double32_t`); /// - `L` : a 64 bit signed integer (`Long64_t`); /// - `l` : a 64 bit unsigned integer (`ULong64_t`); /// - `G` : a long signed integer, stored as 64 bit (`Long_t`); /// - `g` : a long unsigned integer, stored as 64 bit (`ULong_t`); /// - `O` : [the letter `o`, not a zero] a boolean (`bool`); ///; /// Arrays of values ar",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:202,variab,variables,202,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,9,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a new frame for a given variable in x, adding bin labels.; /// The binning will be extracted from the variable given. The bin; /// labels will be set as ""%g-%g"" for the left and right edges of each; /// bin of the given variable.; ///; /// More details.; /// \param[in] var The variable on the x-axis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:117,variab,variable,117,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,4,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a new frame for a given variable in x. This is just a; /// wrapper for the RooPlot constructor with the same interface.; ///; /// More details.; /// \param[in] var The variable on the x-axis; /// \param[in] xmin Left edge of the x-axis; /// \param[in] xmax Right edge of the x-axis; /// \param[in] nBins number of bins on the x-axis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:117,variab,variable,117,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a plugin handler. Called by TPluginManager.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:95,plugin,plugin,95,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a polynomial in the variable `x`.; /// \param[in] name Name of the PDF; /// \param[in] title Title for plotting the PDF; /// \param[in] x The variable of the polynomial; /// \param[in] coefList The coefficients \f$ a_i \f$; /// \param[in] lowestOrder [optional] Truncate the sum such that it skips the lower orders:; /// \f[; /// 1. + \sum_{i=0}^{\mathrm{coefList.size()}} a_{i} * x^{(i + \mathrm{lowestOrder})}; /// \f]; ///; /// This means that; /// \code{.cpp}; /// RooLegacyExpPoly pol(""pol"", ""pol"", x, RooArgList(a, b), lowestOrder = 2); /// \endcode; /// computes; /// \f[; /// \mathrm{pol}(x) = 1 * x^0 + (0 * x^{\ldots}) + a * x^2 + b * x^3.; /// \f]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLegacyExpPoly.cxx:113,variab,variable,113,roofit/roofit/src/RooLegacyExpPoly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLegacyExpPoly.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a polynomial in the variable `x`.; /// \param[in] name Name of the PDF; /// \param[in] title Title for plotting the PDF; /// \param[in] x The variable of the polynomial; /// \param[in] coefList The coefficients \f$ a_i \f$; /// \param[in] lowestOrder [optional] Truncate the sum such that it skips the lower orders:; /// \f[; /// 1. + \sum_{i=0}^{\mathrm{coefList.size()}} a_{i} * x^{(i + \mathrm{lowestOrder})}; /// \f]; ///; /// This means that; /// \code{.cpp}; /// RooPolynomial pol(""pol"", ""pol"", x, RooArgList(a, b), lowestOrder = 2); /// \endcode; /// computes; /// \f[; /// \mathrm{pol}(x) = 1 * x^0 + (0 * x^{\ldots}) + a * x^2 + b * x^3.; /// \f]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPolynomial.cxx:113,variab,variable,113,roofit/roofit/src/RooPolynomial.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPolynomial.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a power law in the variable `x`.; /// \param[in] name Name of the PDF; /// \param[in] title Title for plotting the PDF; /// \param[in] x The variable of the polynomial; /// \param[in] coefList The coefficients \f$ a_i \f$; /// \param[in] expList The exponentials \f$ b_i \f$; /// \f[; /// \sum_{i=0}^{n} a_{i} * x^{b_{i}}; /// \f]; ///; /// This means that; /// \code{.cpp}; /// RooPowerSum powl(""pow"", ""pow"", x, RooArgList(a1, a2), RooArgList(b1,b2)); /// \endcode; /// computes; /// \f[; /// \mathrm{pol}(x) = a1 * x^b1 + a2 * x^b2; /// \f]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx:112,variab,variable,112,roofit/roofit/src/RooPowerSum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a reduced copy of this dataset. The caller takes ownership of the returned dataset; ///; /// The following optional named arguments are accepted; /// <table>; /// <tr><td> `SelectVars(const RooArgSet& vars)` <td> Only retain the listed observables in the output dataset; /// <tr><td> `Cut(const char* expression)` <td> Only retain event surviving the given cut expression.; /// <tr><td> `Cut(const RooFormulaVar& expr)` <td> Only retain event surviving the given cut formula.; /// <tr><td> `CutRange(const char* name)` <td> Only retain events inside range with given name. Multiple CutRange; /// arguments may be given to select multiple ranges.; /// Note that this will also consider the variables that are not selected by SelectVars().; /// <tr><td> `EventRange(int lo, int hi)` <td> Only retain events with given sequential event numbers; /// <tr><td> `Name(const char* name)` <td> Give specified name to output dataset; /// <tr><td> `Title(const char* name)` <td> Give specified title to output dataset; /// </table>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:782,variab,variables,782,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a resource table and read the (possibly) three resource files,; /// i.e. `$ROOTSYS/etc/system<name>` (or `ROOTETCDIR/system<name>`), `$HOME/<name>`; /// and `$PWD/<name>`. ROOT always reads "".rootrc"" (in TROOT::InitSystem()). You; /// can read additional user defined resource files by creating additional TEnv; /// objects. By setting the shell variable ROOTENV_NO_HOME=1 the reading of; /// the `$HOME/<name>` resource file will be skipped. This might be useful in; /// case the home directory resides on an automounted remote file system; /// and one wants to avoid the file system from being mounted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:439,variab,variable,439,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a resource table and read the (possibly) three resource files,; /// i.e.\ `$ROOTSYS/etc/system<name>` (or `ROOTETCDIR/system<name>`),; /// `$HOME/<name>` and `$PWD/<name>`.; /// ROOT always reads "".rootrc"" (in TROOT::InitSystem()). You can; /// read additional user defined resource files by creating additional TEnv; /// objects. By setting the shell variable ROOTENV_NO_HOME=1 the reading of; /// the `$HOME/<name>` resource file will be skipped. This might be useful in; /// case the home directory resides on an auto-mounted remote file system; /// and one wants to avoid the file system from being mounted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TEnv.cxx:445,variab,variable,445,core/base/src/TEnv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TEnv.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a subset of the data set by applying the given cut on the data points.; /// The 'cutVar' formula variable is used to select the subset of data points to be; /// retained in the reduced data collection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:190,variab,variable,190,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a subset of the data set by applying the given cut on the data points.; /// The cut expression can refer to any variable in the data set. For cuts involving; /// other variables, such as intermediate formula objects, use the equivalent; /// reduce method specifying the as a RooFormulVar reference.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:205,variab,variable,205,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a subset of the data set by applying the given cut on the data points; /// and reducing the dimensions to the specified set.; ///; /// The 'cutVar' formula variable is used to select the subset of data points to be; /// retained in the reduced data collection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:249,variab,variable,249,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a subset of the data set by applying the given cut on the data points; /// and reducing the dimensions to the specified set.; ///; /// The cut expression can refer to any variable in the data set. For cuts involving; /// other variables, such as intermediate formula objects, use the equivalent; /// reduce method specifying the as a RooFormulVar reference.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:264,variab,variable,264,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a test statistic from the given function and the data.; /// \param[in] name Name of the test statistic; /// \param[in] title Title (for plotting); /// \param[in] real Function to be used for tests; /// \param[in] data Data to fit function to; /// \param[in] projDeps A set of projected observables; /// \param[in] cfg statistic configuration object; ///; /// cfg contains:; /// - rangeName Fit data only in range with given name; /// - addCoefRangeName If not null, all RooAddPdf components of `real` will be instructed to fix their fraction definitions to the given named range.; /// - nCPU If larger than one, the test statistic calculation will be parallelized over multiple processes.; /// By default the data is split with 'bulk' partitioning (each process calculates a contiguous block of fraction 1/nCPU; /// of the data). For binned data this approach may be suboptimal as the number of bins with >0 entries; /// in each processing block many vary greatly thereby distributing the workload rather unevenly.; /// - interleave is set to true, the interleave partitioning strategy is used where each partition; /// i takes all bins for which (ibin % ncpu == i) which is more likely to result in an even workload.; /// - verbose Be more verbose.; /// - splitCutRange If true, a different rangeName constructed as rangeName_{catName} will be used; /// as range definition for each index state of a RooSimultaneous. This means that a different range can be defined; /// for each category such as; /// ```; /// myVariable.setRange(""range_pi0"", 135, 210);; /// myVariable.setRange(""range_gamma"", 50, 210);; /// ```; /// if the categories are called ""pi0"" and ""gamma"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsTestStatistic.cxx:421,config,configuration,421,roofit/roofitcore/src/RooAbsTestStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsTestStatistic.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a test statistic, and optimise its calculation.; /// \param[in] name Name of the instance.; /// \param[in] title Title (for e.g. plotting).; /// \param[in] real Function to evaluate.; /// \param[in] indata Dataset for which to compute test statistic.; /// \param[in] projDeps A set of projected observables.; /// \param[in] cfg the statistic configuration; ///; /// cfg contains:; /// - rangeName If not null, only events in the dataset inside the range will be used in the test; /// statistic calculation.; /// - addCoefRangeName If not null, all RooAddPdf components of `real` will be; /// instructed to fix their fraction definitions to the given named range.; /// - nCPU If > 1, the test statistic calculation will be parallelised over multiple processes. By default, the data; /// is split with 'bulk' partitioning (each process calculates a contiguous block of fraction 1/nCPU; /// of the data). For binned data, this approach may be suboptimal as the number of bins with >0 entries; /// in each processing block may vary greatly; thereby distributing the workload rather unevenly.; /// - interleave Strategy how to distribute events among workers. If an interleave partitioning strategy is used where each partition; /// i takes all bins for which (ibin % ncpu == i), an even distribution of work is more likely.; /// - splitCutRange If true, a different rangeName constructed as `rangeName_{catName}` will be used; /// as range definition for each index state of a RooSimultaneous.; /// - cloneInputData Not used. Data is always cloned.; /// - integrateOverBinsPrecision If > 0, PDF in binned fits are integrated over the bins. This sets the precision. If = 0,; /// only unbinned PDFs fit to RooDataHist are integrated. If < 0, PDFs are never integrated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx:435,config,configuration,435,roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a uniform binning under name 'name' for this variable.; /// \param[in] nBins Number of bins. The limits are taken from the currently set limits.; /// \param[in] name Optional name. If name is null, install as default binning.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:138,variab,variable,138,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a variable allowed to float in the given range.; /// The initial value will be set to the center of the range.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:95,variab,variable,95,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create a variable with the given starting value. It is allowed to float; /// within the defined range. Optionally, a unit can be specified for axis labels.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:95,variab,variable,95,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an Event object.; /// When the constructor is invoked for the first time, the class static; /// variable fgTracks is 0 and the TClonesArray fgTracks is created.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/Event.cxx:189,variab,variable,189,test/Event.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/Event.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an Event object.; /// When the constructor is invoked for the first time, the; /// class static variables fgParticles and fgTracks is 0 and; /// the TClonesArray fgParticles is created.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/MyEvent.cxx:189,variab,variables,189,test/RootShower/MyEvent.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/MyEvent.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an Ntuple.; ///; /// The parameter varlist describes the list of the ntuple variables; /// separated by a colon:; ///; /// Example: `x:y:z:energy`; ///; /// For each variable in the list a separate branch is created.; ///; /// NOTE:; /// - Use TTree to create branches with variables of different data types.; /// - Use TTree when the number of branches is large (> 100).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtuple.cxx:169,variab,variables,169,tree/tree/src/TNtuple.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtuple.cxx,6,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an application environment. The TRint environment provides an; /// interface to the WM manager functionality and eventloop via inheritance; /// of TApplication and in addition provides interactive access to; /// the Cling C++ interpreter via the command line.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:220,inherit,inheritance,220,core/rint/src/TRint.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an array of clone objects of class cl. The class must inherit from; /// TObject.; /// The second argument s indicates an approximate number of objects; /// that will be entered in the array. If more than s objects are entered,; /// the array will be automatically expanded.; ///; /// NB: This function should not be called in the TClonesArray is already; /// initialized with a class.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:147,inherit,inherit,147,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['inherit'],['inherit']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an array of clone objects of class cl. The class must inherit from; /// TObject.; /// The second argument, s, indicates an approximate number of objects; /// that will be entered in the array. If more than s objects are entered,; /// the array will be automatically expanded.; ///; /// The third argument is not used anymore and only there for backward; /// compatibility reasons.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:147,inherit,inherit,147,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['inherit'],['inherit']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an array of clone objects of classname. The class must inherit from; /// TObject.; /// The second argument s indicates an approximate number of objects; /// that will be entered in the array. If more than s objects are entered,; /// the array will be automatically expanded.; ///; /// The third argument is not used anymore and only there for backward; /// compatibility reasons.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:148,inherit,inherit,148,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['inherit'],['inherit']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an empty 1D-histogram with appropriate scale and labels for this variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx:158,variab,variable,158,roofit/roofitcore/src/RooAbsRealLValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an empty 1D-histogram with appropriate scale and labels for this variable.; /// This method uses the default plot range which can be changed using the; /// setPlotMin(),setPlotMax() methods, and the default binning which can be; /// changed with setPlotBins(). The caller takes ownership of the returned; /// object and is responsible for deleting it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx:158,variab,variable,158,roofit/roofitcore/src/RooAbsRealLValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an empty 2D-histogram with appropriate scale and labels for this variable (x); /// and the specified y variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx:158,variab,variable,158,roofit/roofitcore/src/RooAbsRealLValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an empty 2D-histogram with appropriate scale and labels for this variable (x); /// and the specified y variable. This method uses the default plot ranges for x and y which; /// can be changed using the setPlotMin(),setPlotMax() methods, and the default binning which; /// can be changed with setPlotBins(). The caller takes ownership of the returned object; /// and is responsible for deleting it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx:158,variab,variable,158,roofit/roofitcore/src/RooAbsRealLValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an empty 3D-histogram with appropriate scale and labels for this variable (x); /// and the specified y,z variables. This method uses the default plot ranges for x,y,z which; /// can be changed using the setPlotMin(),setPlotMax() methods, and the default binning which; /// can be changed with setPlotBins(). The caller takes ownership of the returned object; /// and is responsible for deleting it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx:158,variab,variable,158,roofit/roofitcore/src/RooAbsRealLValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an interface adaptor f(vars) that binds us to the specified variables; /// (in arbitrary order). For example, calling bindVars({x1,x3}) on an object; /// F(x1,x2,x3,x4) returns an object f(x1,x3) that is evaluated using the; /// current values of x2 and x4. The caller takes ownership of the returned adaptor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:106,adapt,adaptor,106,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,3,"['adapt', 'variab']","['adaptor', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an object that represents the integral of the function over one or more observables listed in `iset`.; /// The actual integration calculation is only performed when the return object is evaluated. The name; /// of the integral object is automatically constructed from the name of the input function, the variables; /// it integrates and the range integrates over; ///; /// The following named arguments are accepted; /// | Type of CmdArg | Effect on CDF; /// | ---------------------|-------------------; /// | SupNormSet(const RooArgSet&) | Observables over which should be normalized _in addition_ to the integration observables; /// | ScanNumCdf() | Apply scanning technique if cdf integral involves numeric integration [ default ]; /// | ScanAllCdf() | Always apply scanning technique; /// | ScanNoCdf() | Never apply scanning technique; /// | ScanParameters(Int_t nbins, Int_t intOrder) | Parameters for scanning technique of making CDF: number of sampled bins and order of interpolation applied on numeric cdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:397,variab,variables,397,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an object that represents the integral of the function over one or more observables listed in `iset`.; /// The actual integration calculation is only performed when the returned object is evaluated. The name; /// of the integral object is automatically constructed from the name of the input function, the variables; /// it integrates and the range integrates over.; ///; /// \note The integral over a PDF is usually not normalised (*i.e.*, it is usually not; /// 1 when integrating the PDF over the full range). In fact, this integral is used *to compute*; /// the normalisation of each PDF. See the [rf110 tutorial](group__tutorial__roofit.html); /// for details on PDF normalisation.; ///; /// The following named arguments are accepted; /// | | Effect on integral creation; /// |--|-------------------------------; /// | `NormSet(const RooArgSet&)` | Specify normalization set, mostly useful when working with PDFs; /// | `NumIntConfig(const RooNumIntConfig&)` | Use given configuration for any numeric integration, if necessary; /// | `Range(const char* name)` | Integrate only over given range. Multiple ranges may be specified by passing multiple Range() arguments",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:399,variab,variables,399,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an object that represents the integral of the function over one or more observables listed in iset.; /// The actual integration calculation is only performed when the return object is evaluated. The name; /// of the integral object is automatically constructed from the name of the input function, the variables; /// it integrates and the range integrates over. If nset is specified the integrand is request; /// to be normalized over nset (only meaningful when the integrand is a pdf). If rangename is specified; /// the integral is performed over the named range, otherwise it is performed over the domain of each; /// integrated observable. If cfg is specified it will be used to configure any numeric integration; /// aspect of the integral. It will not force the integral to be performed numerically, which is; /// decided automatically by RooRealIntegral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:395,variab,variables,395,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,"['config', 'variab']","['configure', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an object that represents the running integral of the function over one or more observables listed in iset, i.e.; /// \f[; /// \int_{x_\mathrm{lo}}^x f(x') \, \mathrm{d}x'; /// \f]; ///; /// The actual integration calculation is only performed when the return object is evaluated. The name; /// of the integral object is automatically constructed from the name of the input function, the variables; /// it integrates and the range integrates over. The default strategy to calculate the running integrals is; ///; /// - If the integrand (this object) supports analytical integration, construct an integral object; /// that calculate the running integrals value by calculating the analytical integral each; /// time the running integral object is evaluated; ///; /// - If the integrand (this object) requires numeric integration to construct the running integral; /// create an object of class RooNumRunningInt which first samples the entire function and integrates; /// the sampled function numerically. This method has superior performance as there is no need to; /// perform a full (numeric) integration for each evaluation of the running integral object, but; /// only when one of its parameters has changed.; ///; /// The choice of strategy can be changed with the ScanAll() argument, which forces the use of the; /// scanning technique implemented in RooNumRunningInt for all use cases, and with the ScanNone(); /// argument which forces the 'integrate each evaluation' technique for all use cases. The sampling; /// granularity for the scanning technique can be controlled with the ScanParameters technique; /// which allows to specify the number of samples to be taken, and to which order the resulting; /// running integral should be interpolated. The default values are 1000 samples and 2nd order; /// interpolation.; ///; /// The following named arguments are accepted; /// | | Effect on integral cr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:481,variab,variables,481,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create an output file with a graphical representation of the class; /// inheritance. If force, replace existing output file.; /// This routine does nothing if fHtml->HaveDot() is true - use; /// ClassDotCharts() instead!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:158,inherit,inheritance,158,html/src/TClassDocOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create and fill a 1-dimensional table for given category column; /// This functions is the equivalent of plotOn() for category dimensions.; ///; /// The optional cut string expression can be used to select the events to be tabulated; /// The cut specification may refer to any variable contained in the data set; ///; /// The option string is currently not used",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:363,variab,variable,363,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create and fill a ROOT histogram TH1, TH2 or TH3 with the values of this function for the variables with given names.; /// \param[in] varNameList List of variables to use for x, y, z axis, separated by ':'; /// \param[in] xbins Number of bins for first variable; /// \param[in] ybins Number of bins for second variable; /// \param[in] zbins Number of bins for third variable; /// \return TH1*, which is one of TH[1-3]. The histogram is owned by the caller.; ///; /// For a greater degree of control use; /// RooAbsReal::createHistogram(const char *, const RooAbsRealLValue&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&) const; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:176,variab,variables,176,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,5,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create and fill a ROOT histogram TH1, TH2 or TH3 with the values of this function.; ///; /// \param[in] name Name of the ROOT histogram; /// \param[in] xvar Observable to be std::mapped on x axis of ROOT histogram; /// \param[in] arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8 Arguments according to list below; /// \return TH1 *, one of TH{1,2,3}. The caller takes ownership.; ///; /// <table>; /// <tr><th><th> Effect on histogram creation; /// <tr><td> `IntrinsicBinning()` <td> Apply binning defined by function or pdf (as advertised via binBoundaries() method); /// <tr><td> `Binning(const char* name)` <td> Apply binning with given name to x axis of histogram; /// <tr><td> `Binning(RooAbsBinning& binning)` <td> Apply specified binning to x axis of histogram; /// <tr><td> `Binning(int nbins, [double lo, double hi])` <td> Apply specified binning to x axis of histogram; /// <tr><td> `ConditionalObservables(Args_t &&... argsOrArgSet)` <td> Do not normalise PDF over following observables when projecting PDF into histogram.; // Arguments can either be multiple RooRealVar or a single RooArgSet containing them.; /// <tr><td> `Scaling(bool)` <td> Apply density-correction scaling (multiply by bin volume), default is true; /// <tr><td> `Extended(bool)` <td> Plot event yield instead of probability density (for extended pdfs only); ///; /// <tr><td> `YVar(const RooAbsRealLValue& var,...)` <td> Observable to be std::mapped on y axis of ROOT histogram.; /// The YVar() and ZVar() arguments can be supplied with optional Binning() arguments to control the binning of the Y and Z axes, e.g.; /// ```; /// createHistogram(""histo"",x,Binning(-1,1,20), YVar(y,Binning(-1,1,30)), ZVar(z,Binning(""zbinning""))); /// ```; /// <tr><td> `ZVar(const RooAbsRealLValue& var,...)` <td> Observable to be std::mapped on z axis of ROOT histogram; /// </table>; ///; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1323,Extend,Extended,1323,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,"['Extend', 'extend']","['Extended', 'extended']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create and fill a ROOT histogram TH1,TH2 or TH3 with the values of this; /// dataset for the variables with given names.; ///; /// \param[in] varNameList Comma-separated variable names.; /// \param[in] binArgX Control the binning for the `x` variable.; /// \param[in] binArgY Control the binning for the `y` variable.; /// \param[in] binArgZ Control the binning for the `z` variable.; /// \return Histogram now owned by user.; ///; /// The possible binning command arguments for each axis are:; ///; /// <table>; /// <tr><td> `AutoBinning(Int_t nbins, Double_y margin)` <td> Automatically calculate range with given added fractional margin, set binning to nbins; /// <tr><td> `AutoSymBinning(Int_t nbins, Double_y margin)` <td> Automatically calculate range with given added fractional margin,; /// with additional constraint that mean of data is in center of range, set binning to nbins; /// <tr><td> `Binning(const char* name)` <td> Apply binning with given name to x axis of histogram; /// <tr><td> `Binning(RooAbsBinning& binning)` <td> Apply specified binning to x axis of histogram; /// <tr><td> `Binning(int nbins, double lo, double hi)` <td> Apply specified binning to x axis of histogram; ///; /// <tr><td> `YVar(const RooAbsRealLValue& var,...)` <td> Observable to be mapped on y axis of ROOT histogram; /// <tr><td> `ZVar(const RooAbsRealLValue& var,...)` <td> Observable to be mapped on z axis of ROOT histogram; /// </table>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:179,variab,variables,179,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,5,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create and fill a histogram of the frame's variable and append it to the frame.; /// The frame variable must be one of the data sets dimensions.; ///; /// The plot range and the number of plot bins is determined by the parameters; /// of the plot variable of the frame (RooAbsReal::setPlotRange(), RooAbsReal::setPlotBins()).; ///; /// The optional cut string expression can be used to select the events to be plotted.; /// The cut specification may refer to any variable contained in the data set.; ///; /// The drawOptions are passed to the TH1::Draw() method.; /// \see RooAbsData::plotOn(RooPlot*,const RooLinkedList&) const",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:129,variab,variable,129,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,4,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create and fill a histogram with the asymmetry N[+] - N[-] / ( N[+] + N[-] ),; /// where N(+/-) is the number of data points with asymCat=+1 and asymCat=-1; /// as function of the frames variable. The asymmetry category 'asymCat' must; /// have exactly 2 (or 3) states defined with index values +1,-1 (and 0); ///; /// The plot range and the number of plot bins is determined by the parameters; /// of the plot variable of the frame (RooAbsReal::setPlotRange(), RooAbsReal::setPlotBins()); ///; /// The optional cut string expression can be used to select the events to be plotted.; /// The cut specification may refer to any variable contained in the data set; ///; /// The drawOptions are passed to the TH1::Draw() method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:273,variab,variable,273,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,3,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create and fill a histogram with the efficiency N[1] / ( N[1] + N[0] ),; /// where N(1/0) is the number of data points with effCat=1 and effCat=0; /// as function of the frames variable. The efficiency category 'effCat' must; /// have exactly 2 +1 and 0.; ///; /// The plot range and the number of plot bins is determined by the parameters; /// of the plot variable of the frame (RooAbsReal::setPlotRange(), RooAbsReal::setPlotBins()); ///; /// The optional cut string expression can be used to select the events to be plotted.; /// The cut specification may refer to any variable contained in the data set; ///; /// The drawOptions are passed to the TH1::Draw() method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:263,variab,variable,263,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,3,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create histogram from a pdf or function. Errors are computed based on the fit result provided.; ///; /// This signature is intended for unfolding/deconvolution scenarios,; /// where a pdf is constructed as ""data minus background"" and is thus; /// intended to be displayed as ""data"" (or at least data-like).; /// Usage of this signature is triggered by the draw style ""P"" in RooAbsReal::plotOn.; ///; /// More details.; /// \param[in] f The function to be plotted.; /// \param[in] x The variable on the x-axis; /// \param[in] xErrorFrac Size of the error in x as a fraction of the bin width; /// \param[in] scaleFactor arbitrary scaling of the y-values; /// \param[in] normVars variables over which to normalize; /// \param[in] fr fit result",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx:572,variab,variable,572,roofit/roofitcore/src/RooHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHist.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create or recreate the dataset lists for 'uri'.; /// The list are saved in text form in 'uri'/ls.txt for fast browsing and in; /// 'uri'/ls.root in form of TMacro for optimized and portable transfer.; /// Return 0 on success, 1 if the file was empty, -1 on error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:267,portab,portable,267,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,1,['portab'],['portable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create or simply read branches from filename.; ///; /// if branchDescriptor = """" (default), it is assumed that the Tree descriptor; /// is given in the first line of the file with a syntax like; /// ~~~ {.cpp}; /// A/D:Table[2]/F:Ntracks/I:astring/C; /// ~~~; /// otherwise branchDescriptor must be specified with the above syntax.; ///; /// - If the type of the first variable is not specified, it is assumed to be ""/F""; /// - If the type of any other variable is not specified, the type of the previous; /// variable is assumed. eg; /// - `x:y:z` (all variables are assumed of type ""F""); /// - `x/D:y:z` (all variables are of type ""D""); /// - `x:y/D:z` (x is type ""F"", y and z of type ""D""); ///; /// delimiter allows for the use of another delimiter besides whitespace.; /// This provides support for direct import of common data file formats; /// like csv. If delimiter != ' ' and branchDescriptor == """", then the; /// branch description is taken from the first line in the file, but; /// delimiter is used for the branch names tokenization rather than ':'.; /// Note however that if the values in the first line do not use the; /// /[type] syntax, all variables are assumed to be of type ""F"".; /// If the filename ends with extensions .csv or .CSV and a delimiter is; /// not specified (besides ' '), the delimiter is automatically set to ','.; ///; /// Lines in the input file starting with ""#"" are ignored. Leading whitespace; /// for each column data is skipped. Empty lines are skipped.; ///; /// A TBranch object is created for each variable in the expression.; /// The total number of rows read from the file is returned.; ///; /// ## FILLING a TTree WITH MULTIPLE INPUT TEXT FILES; ///; /// To fill a TTree with multiple input text files, proceed as indicated above; /// for the first input file and omit the second argument for subsequent calls; /// ~~~ {.cpp}; /// T.ReadFile(""file1.dat"",""branch descri",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:455,variab,variable,455,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,5,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create simple input dialog.; ///; /// It is important to know that the case where the constructor in; /// which all the variables are initialized to their default values is; /// only used for the TBrowser to inspect on the classes. For normal; /// use the only variable that should be free is options.; ///; /// Variables prompt, defval are the content of the input dialog while; /// retstr has to be initialized to a char[256]. In case these are not; /// initialized, they will show default values while retstr will be; /// automatically allocated by the dialog. However this will make; /// impossible to retrieve the value entered by the dialog.; ///; /// To see TGInputDialog in use see:; /// $ROOTSYS/tutorials/testInputDialog.cxx",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGInputDialog.cxx:206,variab,variables,206,gui/gui/src/TGInputDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGInputDialog.cxx,3,"['Variab', 'variab']","['Variables', 'variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create the inheritance hierarchy diagram for all classes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:97,inherit,inheritance,97,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create the sandbox for this session",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:97,sandbox,sandbox,97,proof/proof/src/TProofLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx,1,['sandbox'],['sandbox']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Create/obtain handle to 3D viewer. Valid types are:; /// - 'pad' - pad drawing via TViewer3DPad; /// any others registered with plugin manager supporting TVirtualViewer3D; /// If an invalid/null type is requested then the current viewer is returned; /// (if any), otherwise a default 'pad' type is returned",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:214,plugin,plugin,214,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Creates a SamplingDistribution from a RooDataSet for debugging; /// purposes; e.g. if you need a Gaussian type SamplingDistribution; /// you can generate it from a Gaussian pdf and use the resulting; /// RooDataSet with this constructor.; ///; /// The result is the projected distribution onto varName; /// marginalizing the other variables.; ///; /// If varName is not given, the first variable will be used.; /// This is useful mostly for RooDataSets with only one observable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SamplingDistribution.cxx:417,variab,variables,417,roofit/roostats/src/SamplingDistribution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SamplingDistribution.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Creates a TGraph object describing the n-sigma contour of a; /// TMinuit fit. The contour of the parameters pa1 and pa2 is calculated; /// using npoints (>=4) points. The TMinuit status will be; /// - 0 on success and; /// - -1 if errors in the calling sequence (pa1, pa2 not variable); /// - 1 if less than four points can be found; /// - 2 if npoints<4; /// - n>3 if only n points can be found (n < npoints); /// The status can be obtained via TMinuit::GetStatus().; ///; /// To get the n-sigma contour the ERRDEF parameter in Minuit has to set; /// to n^2. The fcn function has to be set before the routine is called.; ///; /// The TGraph object is created via the interpreter. The user must cast it; /// to a TGraph*. Note that the TGraph is created with npoints+1 in order to; /// close the contour (setting last point equal to first point).; ///; /// You can find an example in $ROOTSYS/tutorials/fit/fitcont.C",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:362,variab,variable,362,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Creates embedded civetweb server; ///; /// @param args string with civetweb server configuration; ///; /// As main argument, http port should be specified like ""8090"".; /// Or one can provide combination of ipaddress and portnumber like ""127.0.0.1:8090""; /// Or one can specify unix socket name like ""x/tmp/root.socket""; /// Extra parameters like in URL string could be specified after '?' mark:; ///; /// thrds=N - there N is number of threads used by the civetweb (default is 10); /// top=name - configure top name, visible in the web browser; /// ssl_certificate=filename - SSL certificate, see docs/OpenSSL.md from civetweb; /// auth_file=filename - authentication file name, created with htdigets utility; /// auth_domain=domain - authentication domain; /// websocket_timeout=tm - set web sockets timeout in seconds (default 300); /// websocket_disable - disable web sockets handling (default enabled); /// bind - ip address to bind server socket; /// loopback - bind specified port to loopback 127.0.0.1 address; /// debug - enable debug mode, server always returns html page with request info; /// log=filename - configure civetweb log file; /// max_age=value - configures ""Cache-Control: max_age=value"" http header for all file-related requests, default 3600; /// socket_mode=value - configures unix socket mode, default is 0700; /// nocache - try to fully disable cache control for file requests; /// winsymlinks=no - do not resolve symbolic links on file system (Windows only), default true; /// dirlisting=no - enable/disable directory listing for browsing filesystem (default no); ///; /// Examples of valid args values:; ///; /// serv->CreateEngine(""http:8080?websocket_disable"");; /// serv->CreateEngine(""http:7546?thrds=30&websocket_timeout=20"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TCivetweb.cxx:169,config,configuration,169,net/http/src/TCivetweb.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TCivetweb.cxx,5,['config'],"['configuration', 'configure', 'configures']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Creates initial tables in database; /// This is table with configurations and table with keys; /// Function called once when first object is stored to the file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:145,config,configurations,145,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['config'],['configurations']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Creates the Jupyter notebook configuration file that sets the; /// necessary environment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/src/nbmain.cxx:115,config,configuration,115,main/src/nbmain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/src/nbmain.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Creates the fully parametrized crystal ball shape with asymmetric Gaussian core and asymmetric tails.; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaL Width parameter of the left side of the Gaussian component.; /// \param sigmaR Width parameter of the right side of the Gaussian component.; /// \param alphaL Location of transition to a power law on the left, in standard deviations away from the mean.; /// \param nL Exponent of power-law tail on the left.; /// \param alphaR Location of transition to a power law on the right, in standard deviations away from the mean.; /// \param nR Exponent of power-law tail on the right.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:312,variab,variable,312,roofit/roofit/src/RooCrystalBall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Creates the initial set of nuisance parameter points. It also refills the; /// set with new parameter points if called repeatedly. This helps with; /// adaptive sampling as the required number of nuisance parameter points; /// might increase during the run.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCSampler.cxx:238,adapt,adaptive,238,roofit/roostats/src/ToyMCSampler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCSampler.cxx,1,['adapt'],['adaptive']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Declare a basis function for use in this physics model. The string expression; /// must be a valid RooFormulVar expression representing the basis function, referring; /// to the convolution variable as '@0', and any additional parameters (supplied in; /// 'params' as '@1','@2' etc.; ///; /// The return value is a unique identifier code, that will be passed to coefficient(); /// to identify the basis function for which the coefficient is requested. If the; /// resolution model used does not support the declared basis function, code -1 is; /// returned.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:276,variab,variable,276,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Decode the Zip64 extended extra field. If global is true, decode the; /// extra field coming from the central directory, if false decode the; /// extra field coming from the local file header. Returns -1 in case of; /// error, -2 in case Zip64 extra block was not found and 0 in case of; /// success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx:103,extend,extended,103,io/io/src/TZIPFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Define a user function. The input array must be of the form; /// (p11, ..., p1N, ... ,pL1, ..., pLN); /// Where N is the dimension of the data sample, L is the number of; /// terms (given in terms) and the first number, labels the term, the; /// second the variable. More information is given in the; /// <a href=""#TMultiDimFit:description"">class description</a>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:343,variab,variable,343,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Define relevant variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:102,variab,variables,102,proof/proofplayer/src/TProofDraw.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Define the options (their key words) that can be set in the option string.; ///; /// - UseRandomisedTrees choose at each node splitting a random set of variables; /// - UseNvars use UseNvars variables in randomised trees; /// - SeparationType the separation criterion applied in the node splitting.; /// known:; /// - GiniIndex; /// - MisClassificationError; /// - CrossEntropy; /// - SDivSqrtSPlusB; /// - nEventsMin: the minimum number of events in a node (leaf criteria, stop splitting); /// - nCuts: the number of steps in the optimisation of the cut for a node (if < 0, then; /// step size is determined by the events); /// - UseYesNoLeaf decide if the classification is done simply by the node type, or the S/B; /// (from the training) in the leaf node; /// - NodePurityLimit the minimum purity to classify a node as a signal node (used in pruning and boosting to determine; /// misclassification error rate); /// - PruneMethod The Pruning method:; /// known:; /// - NoPruning // switch off pruning completely; /// - ExpectedError; /// - CostComplexity; /// - PruneStrength a parameter to adjust the amount of pruning. Should be large enough such that overtraining is avoided"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx:238,variab,variables,238,tmva/tmva/src/MethodDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Define the options (their key words). That can be set in the option string.; ///; /// know options:; ///; /// - nTrees number of trees in the forest to be created; /// - BoostType the boosting type for the trees in the forest (AdaBoost e.t.c..).; /// Known:; /// - AdaBoost; /// - AdaBoostR2 (Adaboost for regression); /// - Bagging; /// - GradBoost; /// - AdaBoostBeta the boosting parameter, beta, for AdaBoost; /// - UseRandomisedTrees choose at each node splitting a random set of variables; /// - UseNvars use UseNvars variables in randomised trees; /// - UsePoisson Nvars use UseNvars not as fixed number but as mean of a poisson distribution; /// - SeparationType the separation criterion applied in the node splitting.; /// Known:; /// - GiniIndex; /// - MisClassificationError; /// - CrossEntropy; /// - SDivSqrtSPlusB; /// - MinNodeSize: minimum percentage of training events in a leaf node (leaf criteria, stop splitting); /// - nCuts: the number of steps in the optimisation of the cut for a node (if < 0, then; /// step size is determined by the events); /// - UseFisherCuts: use multivariate splits using the Fisher criterion; /// - UseYesNoLeaf decide if the classification is done simply by the node type, or the S/B; /// (from the training) in the leaf node; /// - NodePurityLimit the minimum purity to classify a node as a signal node (used in pruning and boosting to determine; /// misclassification error rate); /// - PruneMethod The Pruning method.; /// Known:; /// - NoPruning // switch off pruning completely; /// - ExpectedError; /// - CostComplexity; /// - PruneStrength a parameter to adjust the amount of pruning. Should be large enough such that overtraining is avoided.; /// - PruningValFraction number of events to use for optimizing pruning (only if PruneStrength < 0, i.e. automatic pruning); /// - NegWeightTreatment; /// - IgnoreNegWeightsInTraining Ignore negative weight events i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:571,variab,variables,571,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Define variables according to arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:93,variab,variables,93,proof/proofplayer/src/TProofDraw.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Define variables for 2D histogram.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:93,variab,variables,93,proof/proofplayer/src/TProofDraw.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Define variables for 3D histogram.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:93,variab,variables,93,proof/proofplayer/src/TProofDraw.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Defines parameters on which cache contents depends. Returns; /// subset of variables of self that is not contained in the; /// supplied nset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsSelfCachedReal.h:161,variab,variables,161,roofit/roofitcore/inc/RooAbsSelfCachedReal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsSelfCachedReal.h,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Delete a variable from its expression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:95,variab,variable,95,tree/treeviewer/src/TSpider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Delete a variable from the graph.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:95,variab,variable,95,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Delete selected session configuration (remove it from the list).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:110,config,configuration,110,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Delete the variable ""vartitle"" from the graph.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:97,variab,variable,97,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Delete variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:93,variab,variables,93,tree/treeviewer/src/TParallelCoordVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Demangle in a portable way the type id name.; /// IMPORTANT: The caller is responsible for freeing the returned const char*",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx:100,portab,portable,100,core/foundation/src/TClassEdit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TClassEdit.cxx,1,['portab'],['portable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Detach from terminal, set the old configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp:120,config,configuration,120,core/textinput/src/textinput/StreamReaderUnix.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/StreamReaderUnix.cpp,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Determine the number of characters from the string that will fit in the; /// given horizontal span. The measurement is done under the assumption that; /// DrawChars() will be used to actually display the characters.; ///; /// The return value is the number of characters from source that fit into; /// the span that extends from 0 to maxLength. *length is filled with the; /// x-coordinate of the right edge of the last character that did fit.; ///; /// source -- Characters to be displayed. Need not be '\0' terminated.; /// numChars -- Maximum number of characters to consider from source string.; /// maxLength -- If > 0, maxLength specifies the longest permissible line; /// length; don't consider any character that would cross this; /// x-position. If <= 0, then line length is unbounded and the; /// flags argument is ignored.; /// flags -- Various flag bits OR-ed together:; /// TEXT_PARTIAL_OK means include the last char which only; /// partially fit on this line.; /// TEXT_WHOLE_WORDS means stop on a word boundary, if possible.; /// TEXT_AT_LEAST_ONE means return at least one character even; /// if no characters fit.; /// *length -- Filled with x-location just after the terminating character.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx:402,extend,extends,402,gui/gui/src/TGFont.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx,1,['extend'],['extends']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code.; ///; /// RooProdPdf implements two strategies in implementing analytical integrals; ///; /// First, PDF components whose entire set of dependents are requested to be integrated; /// can be dropped from the product, as they will integrate out to 1 by construction; ///; /// Second, RooProdPdf queries each remaining component PDF for its analytical integration; /// capability of the requested set ('allVars'). It finds the largest common set of variables; /// that can be integrated by all remaining components. If such a set exists, it reconfirms that; /// each component is capable of analytically integrating the common set, and combines the components; /// individual integration codes into a single integration code valid for RooProdPdf.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:693,variab,variables,693,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Determine which part (if any) of given integral can be performed analytically.; /// If any analytical integration is possible, return integration scenario code; ///; /// RooAddPdf queries each component PDF for its analytical integration capability of the requested; /// set ('allVars'). It finds the largest common set of variables that can be integrated; /// by all components. If such a set exists, it reconfirms that each component is capable of; /// analytically integrating the common set, and combines the components individual integration; /// codes into a single integration code valid for RooAddPdf.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:409,variab,variables,409,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Directives has the same syntax as the argument of SetMakeSharedLib but is; /// used to create an executable. This creation is used as a means to output; /// a list of unresolved symbols, when loading a shared library has failed.; /// The required variable is $ExeName rather than $SharedLib, e.g.:; /// ~~~ {.cpp}; /// gSystem->SetMakeExe(; /// ""g++ -Wall -fPIC $IncludePath $SourceFiles; /// -o $ExeName $LinkedLibs -L/usr/X11R6/lib -lX11 -lm -ldl -rdynamic"");; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:333,variab,variable,333,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Directives should contain the description on how to compile and link a; /// shared lib. This description can be any valid shell command, including; /// the use of ';' to separate several instructions. However, shell specific; /// construct should be avoided. In particular this description can contain; /// environment variables, like $ROOTSYS (or %ROOTSYS% on windows).; /// ~~~ {.cpp}; /// Five special variables will be expanded before execution:; /// Variable name Expands to; /// ------------- ----------; /// $SourceFiles Name of source files to be compiled; /// $SharedLib Name of the shared library being created; /// $LibName Name of shared library without extension; /// $BuildDir Directory where the files will be created; /// $IncludePath value of fIncludePath; /// $LinkedLibs value of fLinkedLibs; /// $DepLibs libraries on which this library depends on; /// $ObjectFiles Name of source files to be compiler with; /// their extension changed to .o or .obj; /// $Opt location of the optimization/debug options; /// set fFlagsDebug and fFlagsOpt; /// ~~~; /// e.g.:; /// ~~~ {.cpp}; /// gSystem->SetMakeSharedLib(; /// ""KCC -n32 --strict $IncludePath -K0 \$Opt $SourceFile; /// --no_exceptions --signed_chars --display_error_number; /// --diag_suppress 68 -o $SharedLib"");; ///; /// gSystem->setMakeSharedLib(; /// ""Cxx $IncludePath -c $SourceFile;; /// ld -L/usr/lib/cmplrs/cxx -rpath /usr/lib/cmplrs/cxx -expect_unresolved; /// \$Opt -shared /usr/lib/cmplrs/cc/crt0.o /usr/lib/cmplrs/cxx/_main.o; /// -o $SharedLib $ObjectFile -lcxxstd -lcxx -lexc -lots -lc""; ///; /// gSystem->SetMakeSharedLib(; /// ""$HOME/mygcc/bin/g++ \$Opt -Wall -fPIC $IncludePath $SourceFile; /// -shared -o $SharedLib"");; ///; /// gSystem->SetMakeSharedLib(; /// ""cl -DWIN32 -D_WIN32 -D_MT -D_DLL -MD /O2 /G5 /MD -DWIN32; /// -D_WINDOWS $IncludePath $SourceFile; /// /link -PDB:NONE /NODEFAULTLIB /INCREMENTAL:NO /RELEASE /NOLO",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:405,variab,variables,405,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,3,"['Variab', 'variab']","['Variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Disable TObject streamers for those VSD structs that inherit from; /// TObject directly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveVSD.cxx:139,inherit,inherit,139,graf3d/eve/src/TEveVSD.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveVSD.cxx,2,['inherit'],['inherit']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Display the classification/regression coefficients for each variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLD.cxx:146,variab,variable,146,tmva/tmva/src/MethodLD.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLD.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Draw class inheritance tree of the class to which obj belongs.; ///; /// If a class B inherits from a class A, description of B is drawn; /// on the right side of description of A.; ///; /// Member functions overridden by B are shown in class A with a blue line; /// crossing-out the corresponding member function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:97,inherit,inheritance,97,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,2,['inherit'],"['inheritance', 'inherits']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Draw class inheritance tree of the class to which this object belongs.; /// If a class B inherits from a class A, description of B is drawn; /// on the right side of description of A.; /// Member functions overridden by B are shown in class A with a blue line; /// crossing-out the corresponding member function.; /// The following picture is the class inheritance tree of class TPaveLabel:; ///; /// \image html base_object.png",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:97,inherit,inheritance,97,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,3,['inherit'],"['inheritance', 'inherits']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Draw detailed class inheritance structure.; /// If a class B inherits from a class A, the description of B is drawn; /// on the right side of the description of A.; /// Member functions overridden by B are shown in class A with a blue line; /// erasing the corresponding member function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:106,inherit,inheritance,106,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,2,['inherit'],"['inheritance', 'inherits']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Draw stack of lego-plots in cylindrical coordinates; ///; /// \param[in] iordr order of variables (0 - Z,PHI; 1 - PHI,Z); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:174,variab,variables,174,hist/histpainter/src/TPainter3dAlgorithms.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx,3,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Draw stack of lego-plots in polar coordinates; ///; /// \param[in] iordr order of variables (0 - R,PHI; 1 - PHI,R); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:168,variab,variables,168,hist/histpainter/src/TPainter3dAlgorithms.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx,3,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Draw stack of lego-plots spheric coordinates; ///; /// \param[in] ipsdr pseudo-rapidity flag; /// \param[in] iordr order of variables (0 - THETA,PHI; 1 - PHI,THETA); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:210,variab,variables,210,hist/histpainter/src/TPainter3dAlgorithms.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx,3,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Draw surface in cylindrical coordinates; ///; /// \param[in] iordr order of variables (0 - Z,PHI; 1 - PHI,Z); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:162,variab,variables,162,hist/histpainter/src/TPainter3dAlgorithms.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx,3,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Draw surface in polar coordinates; ///; /// \param[in] iordr order of variables (0 - R,PHI, 1 - PHI,R); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:156,variab,variables,156,hist/histpainter/src/TPainter3dAlgorithms.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx,3,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Draw surface in spheric coordinates; ///; /// \param[in] ipsdr pseudo-rapidity flag; /// \param[in] iordr order of variables (0 - THETA,PHI; 1 - PHI,THETA); /// \param[in] na number of steps along 1st variable; /// \param[in] nb number of steps along 2nd variable; /// \param[in] chopt specific options; ///; /// - `chopt` = 'BF' from BACK to FRONT; /// - `chopt` = 'FB' from FRONT to BACK",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:201,variab,variables,201,hist/histpainter/src/TPainter3dAlgorithms.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx,3,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Draw the Multiple inheritance relationships",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:104,inherit,inheritance,104,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Draw the References relationships (other than inheritance or composition)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:132,inherit,inheritance,132,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Draw the inheritance tree and relations for the list of classes; /// see this class header for the syntax and examples",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:95,inherit,inheritance,95,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Draw the result of a C++ script.; ///; /// The macrofilename and optionally cutfilename are assumed to contain; /// at least a method with the same name as the file. The method; /// should return a value that can be automatically cast to; /// respectively a double and a boolean.; ///; /// Both methods will be executed in a context such that the; /// branch names can be used as C++ variables. This is; /// accomplished by generating a TTreeProxy (see MakeProxy); /// and including the files in the proper location.; ///; /// If the branch name can not be used a proper C++ symbol name,; /// it will be modified as follow:; /// - white spaces are removed; /// - if the leading character is not a letter, an underscore is inserted; /// - < and > are replace by underscores; /// - * is replaced by st; /// - & is replaced by rf; ///; /// If a cutfilename is specified, for each entry, we execute; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// If no cutfilename is specified, for each entry we execute; /// ~~~{.cpp}; /// htemp(macrofilename());; /// ~~~; /// The default for the histogram are the same as for; /// TTreePlayer::DrawSelect",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:470,variab,variables,470,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Draw this histogram with options.; ///; /// Histograms are drawn via the THistPainter class. Each histogram has; /// a pointer to its own painter (to be usable in a multithreaded program).; /// The same histogram can be drawn with different options in different pads.; /// When a histogram drawn in a pad is deleted, the histogram is; /// automatically removed from the pad or pads where it was drawn.; /// If a histogram is drawn in a pad, then filled again, the new status; /// of the histogram will be automatically shown in the pad next time; /// the pad is updated. One does not need to redraw the histogram.; /// To draw the current version of a histogram in a pad, one can use; /// `h->DrawCopy();`; /// This makes a clone of the histogram. Once the clone is drawn, the original; /// histogram may be modified or deleted without affecting the aspect of the; /// clone.; /// By default, TH1::Draw clears the current pad.; ///; /// One can use TH1::SetMaximum and TH1::SetMinimum to force a particular; /// value for the maximum or the minimum scale on the plot.; ///; /// TH1::UseCurrentStyle can be used to change all histogram graphics; /// attributes to correspond to the current selected style.; /// This function must be called for each histogram.; /// In case one reads and draws many histograms from a file, one can force; /// the histograms to inherit automatically the current graphics style; /// by calling before gROOT->ForceStyle();; ///; /// See the THistPainter class for a description of all the drawing options.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1444,inherit,inherit,1444,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['inherit'],['inherit']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Draws the distribution (on the test sample) of the; /// impact on the network output of a small variation of; /// each input.; /// DrawDInputs() draws something that approximates the distribution of the; /// derivative of the NN w.r.t. each input. That quantity is recognized as; /// one of the measures to determine key quantities in the network.; ///; /// What is done is to vary one input around its nominal value and to see; /// how the NN changes. This is done for each entry in the sample and produces; /// a distribution.; ///; /// What you can learn from that is:; /// - is variable a really useful, or is my network insensitive to it ?; /// - is there any risk of big systematic ? Is the network extremely sensitive; /// to small variations of any of my inputs ?; ///; /// As you might understand, this is to be considered with care and can serve; /// as input for an ""educated guess"" when optimizing the network.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMLPAnalyzer.cxx:668,variab,variable,668,math/mlp/src/TMLPAnalyzer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMLPAnalyzer.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Driver function to propagate constant term optimizations in test statistic.; /// If code Activate is sent, constant term optimization will be executed.; /// If code Deactivate is sent, any existing constant term optimizations will; /// be abandoned. If codes ConfigChange or ValueChange are sent, any existing; /// constant term optimizations will be redone.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx:345,Config,ConfigChange,345,roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,1,['Config'],['ConfigChange']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Dummy static function, used to load plugin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoManagerEditor.cxx:122,plugin,plugin,122,geom/geombuilder/src/TGeoManagerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoManagerEditor.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Enable internal likelihood offsetting for enhanced numeric precision",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:128,enhance,enhanced,128,roofit/roofitcore/src/RooMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx,1,['enhance'],['enhanced']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Enable specified package. Executes the PROOF-INF/BUILD.sh; /// script if it exists followed by the PROOF-INF/SETUP.C script.; /// In case notOnClient = true, don't enable the package on the client.; /// The default is to enable packages also on the client.; /// It is is possible to specify options for the loading step via 'loadopts';; /// the string will be passed passed as argument to SETUP.; /// Special option 'chkv=`<o>`' (or 'checkversion=`<o>`') can be used to control; /// plugin version checking during building: possible choices are:; /// off no check; failure may occur at loading; /// on check ROOT version [default]; /// svn check ROOT version and Git commit SHA1.; /// (Use ';', ' ' or '|' to separate 'chkv=`<o>`' from the rest.); /// If specified, enables packages only on the specified workers.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:569,plugin,plugin,569,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Enable the TTreeCache unless explicitly disabled for this TTree by; /// a prior call to `SetCacheSize(0)`.; /// If the environment variable `ROOT_TTREECACHE_SIZE` or the rootrc config; /// `TTreeCache.Size` has been set to zero, this call will over-ride them with; /// a value of 1.0 (i.e. use a cache size to hold 1 cluster); ///; /// Return true if there is a cache attached to the `TTree` (either pre-exisiting; /// or created as part of this call)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:217,variab,variable,217,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Environemnt variables rehashing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:98,variab,variables,98,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Equivalent of standard routine ""mktime"" but; /// using the assumption that tm struct is filled with UTC, not local, time.; ///; /// This version *ISN'T* configured to handle every possible; /// weirdness of out-of-range values in the case of normalizing; /// the tm struct.; ///; /// This version *DOESN'T* correctly handle values that can't be; /// fit into a time_t (i.e. beyond year 2038-01-18 19:14:07, or; /// before the start of Epoch).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:239,config,configured,239,core/base/src/TTimeStamp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx,1,['config'],['configured']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate Variable Importance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx:95,Variab,Variable,95,tmva/tmva/src/Factory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx,1,['Variab'],['Variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate formula.; /// If formula is not ready to execute(missing parameters/variables),; /// print these which are not known.; /// If parameter has default value, and has not been set, appropriate warning is shown.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:163,variab,variables,163,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate parameterization at point x. Optional argument coeff is; /// a vector of coefficients for the parameterisation, fNCoefficients; /// elements long.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:95,parameteriz,parameterization,95,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['parameteriz'],['parameterization']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate parameterization error at point x. Optional argument coeff is; /// a vector of coefficients for the parameterisation, fNCoefficients; /// elements long.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:95,parameteriz,parameterization,95,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['parameteriz'],['parameterization']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate the bound RooAbsReal at the variable values provided in xvector",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:123,variab,variable,123,roofit/roofitcore/src/RooRealBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate the internal TFormula.; ///; /// First, all variables serving this instance are evaluated given the normalisation set,; /// and then the formula is evaluated.; /// \param[in] nset Normalisation set passed to evaluation of arguments serving values.; /// \return The result of the evaluation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:139,variab,variables,139,roofit/roofitcore/src/RooFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate the minimisation function; /// Input parameters:; /// - npar: number of currently variable parameters; /// - par: array of (constant and variable) parameters; /// - flag: Indicates what is to be calculated (see example below); /// - grad: array of gradients; /// Output parameters:; /// - fval: The calculated function value.; /// - grad: The (optional) vector of first derivatives).; ///; /// The meaning of the parameters par is of course defined by the user,; /// who uses the values of those parameters to calculate their function value.; /// The starting values must be specified by the user.; /// Later values are determined by Minuit as it searches for the minimum; /// or performs whatever analysis is requested by the user.; ///; /// Note that this virtual function may be redefined in a class derived from TMinuit.; /// The default function calls the function specified in SetFCN; ///; /// Example of Minimisation function:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:177,variab,variable,177,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate the minimisation function; ///; /// Input parameters:; /// - npar: number of currently variable parameters; /// - par: array of (constant and variable) parameters; /// - flag: Indicates what is to be calculated; /// - grad: array of gradients; ///; /// Output parameters:; /// - fval: The calculated function value.; /// - grad: The vector of first derivatives.; ///; /// The meaning of the parameters par is of course defined by the user,; /// who uses the values of those parameters to calculate their function value.; /// The starting values must be specified by the user.; ///; /// Inside FCN user has to define Z-matrix by means TFumili::GetZ; /// and TFumili::Derivatives,; /// set theoretical function by means of TFumili::SetUserFunc,; /// but first - pass number of parameters by TFumili::SetParNumber; ///; /// Later values are determined by Fumili as it searches for the minimum; /// or performs whatever analysis is requested by the user.; ///; /// The default function calls the function specified in SetFCN",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:182,variab,variable,182,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate the minimisation function; ///; /// Input parameters:; /// - npars: number of currently variable parameters; /// CAUTION: this is not (necessarily) the dimension of the fitPars vector !; /// - fitPars: array of (constant and variable) parameters; /// - iflag: indicates what is to be calculated (see example below); /// - grad: array of gradients; ///; /// Output parameters:; /// - f: the calculated function value.; /// - grad: the (optional) vector of first derivatives).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx:183,variab,variable,183,tmva/tmva/src/MethodMLP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate this formula.; ///; /// The current value of variables x,y,z,t is passed through the pointer x.; /// The parameters used will be the ones in the array params if params is given; /// otherwise parameters will be taken from the stored data members fParams; ///; /// \image html TFormula_eval.png",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:140,variab,variables,140,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate this formula.; ///; /// The current value of variables x,y,z,t is passed through x, y, z and t.; /// The parameters used will be the ones in the array params if params is given; /// otherwise parameters will be taken from the stored data members fParams",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:140,variab,variables,140,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate this function.; ///; /// Computes the value of this function (general case for a 3-d function); /// at point x,y,z.; /// For a 1-d function give y=0 and z=0; /// The current value of variables x,y,z is passed through x, y and z.; /// The parameters used will be the ones in the array params if params is given; /// otherwise parameters will be taken from the stored data members fParams",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:278,variab,variables,278,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Evaluates the function being analysed by MNCROS; ///; /// Evaluates the function being analysed by MNCROS, which is; /// generally the minimum of FCN with respect to all remaining; /// variable parameters. The class data members contains the; /// data necessary to know the values of U(KE1CR) and U(KE2CR); /// to be used, namely U(KE1CR) = XMIDCR + ANEXT*XDIRCR; /// and (if KE2CR .NE. 0) U(KE2CR) = YMIDCR + ANEXT*YDIRCR",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:271,variab,variable,271,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Examine the pdf components and check if one of them can be extended or must be extended.; /// It is enough to have one component that can be extended or must be extended to return the flag in; /// the total simultaneous pdf.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:145,extend,extended,145,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,4,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Execute a global function with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:465,enhance,enhance,465,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['enhance'],['enhance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Execute a method from class cl with arguments params.; ///; /// FIXME: The cint-based version of this code does not check if the; /// SetFunc() call works, and does not do any real checking; /// for errors from the Exec() call. It did fetch the most; /// recent cint security error and return that in error, but; /// this does not really translate well to cling/clang. We; /// should enhance these interfaces so that we can report; /// compilation and runtime errors properly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:470,enhance,enhance,470,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['enhance'],['enhance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Execute all the TChain::Draw() as configured and stores the output histograms.; /// Returns true if the analysis succeeds.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:120,config,configured,120,tree/treeplayer/src/TSimpleAnalysis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx,1,['config'],['configured']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Executes a Python command within the current Python environment.; ///; /// This function initializes the Python environment if it is not already; /// initialized. It then executes the specified Python command string using the; /// Python C API.; ///; /// In the Python command, you can change the value of a special TPyResult; /// object returned by TPyBuffer(). If the optional result parameter is; /// non-zero, the result parameter will be swapped with a std::any variable on; /// the Python side. You need to define this variable yourself, and it needs to; /// be of type std::any and its name needs to be `""_anyresult""` by default.; /// Like this, you can pass information from Python back to C++.; ///; /// \param cmd The Python command to be executed as a string.; /// \param result Optional pointer to a std::any object that can be used to; /// transfer results from Python to C++.; /// \param resultName Name of the Python variable that is swapped over to the std::any result.; /// The default value is `""_anyresult""`.; /// \return bool Returns `true` if the command was successfully executed,; /// otherwise returns `false`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:553,variab,variable,553,bindings/tpython/src/TPython.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx,3,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Expand a pathname getting rid of special shell characters like ~.$, etc.; /// For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; /// environment variables in a pathname. If compatibility is not an issue; /// you can use on Unix directly $XXX.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:248,variab,variables,248,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Expand a pathname getting rid of special shell characters like ~.$, etc.; /// For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; /// environment variables in a pathname. If compatibility is not an issue; /// you can use on Unix directly $XXX. Returns kFALSE in case of success; /// or kTRUE in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:248,variab,variables,248,core/unix/src/TUnixSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Expand a pathname getting rid of special shell characters like ~.$, etc.; /// For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; /// environment variables in a pathname. If compatibility is not an issue; /// you can use on Unix directly $XXX. The user must delete returned string.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:248,variab,variables,248,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Export render-element to CINT with variable name var_name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx:121,variab,variable,121,graf3d/eve/src/TEveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Export source object to CINT with given name for the variable.; /// Throws an exception if it is not set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx:139,variab,variable,139,graf3d/eve/src/TEveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Extended interface to append to sampling distribution more samples",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCSampler.cxx:86,Extend,Extended,86,roofit/roostats/src/ToyMCSampler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCSampler.cxx,1,['Extend'],['Extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Extract the name of the tree from the first input file when the tree name; /// isn't in the configuration file. Returns the name of the tree.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:178,config,configuration,178,tree/treeplayer/src/TSimpleAnalysis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Extracts functors from formula, and put them in fFuncs.; /// Simple grammar:; /// - `<function>` := name(arg1,arg2...); /// - `<variable>` := name; /// - `<parameter>` := [number]; /// - `<name>` := String containing lower and upper letters, numbers, underscores; /// - `<number>` := Integer number; /// Operators are omitted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:214,variab,variable,214,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Fill a RooDataHist with values sampled from this function at the; /// bin centers. If extendedMode is true, the p.d.f. values is multiplied; /// by the number of expected events in each bin; ///; /// An optional scaling by a given scaleFactor can be performed.; /// Returns a pointer to the input RooDataHist, or zero; /// in case of an error.; ///; /// If correctForBinSize is true the RooDataHist; /// is filled with the functions density (function value times the; /// bin volume) rather than function value.; ///; /// If showProgress is true; /// a process indicator is printed on stdout in steps of one percent,; /// which is mostly useful for the sampling of expensive functions; /// such as likelihoods",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:172,extend,extendedMode,172,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['extend'],['extendedMode']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Fill structures with default variables, constants and function shortcuts",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:115,variab,variables,115,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Fill the ROOT histogram 'hist' with values sampled from this; /// function at the bin centers. Our value is calculated by first; /// integrating out any variables in projectedVars and then scaling; /// the result by scaleFactor. Returns a pointer to the input; /// histogram, or zero in case of an error. The input histogram can; /// be any TH1 subclass, and therefore of arbitrary; /// dimension. Variables are matched with the (x,y,...) dimensions of; /// the input histogram according to the order in which they appear; /// in the input plotVars list. If scaleForDensity is true the; /// histogram is filled with a the functions density rather than; /// the functions value (i.e. the value at the bin center is multiplied; /// with bin volume)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:239,variab,variables,239,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Fill the histograms of y variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:111,variab,variables,111,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Fills the histograms of pdf-s of y variables with binning nbins",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:121,variab,variables,121,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Fills the histograms of x variables (not weighted) with nbins",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:112,variab,variables,112,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Find all cells, that contain txvec. This function can be used,; /// when the dimension of the foam is greater than the dimension of; /// txvec. E.g. this is the case for multi-target regression.; ///; /// Parameters:; ///; /// - txvec - event vector of variables, transformed into foam; /// coordinates [0,1]. The size of txvec can be smaller than the; /// dimension of the foam.; ///; /// Return value:; ///; /// - vector of cells, that fit txvec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx:339,variab,variables,339,tmva/tmva/src/PDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Find all input arguments which are categories, and save this information in; /// with the names of the variables that are being used to evaluate it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:189,variab,variables,189,roofit/roofitcore/src/RooFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Find bin number corresponding to abscissa x. NOTE: this method does not work with alphanumeric bins !!!; ///; /// If x is underflow or overflow, attempt to extend the axis if TAxis::kCanExtend is true.; /// Otherwise, return 0 or fNbins+1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx:242,extend,extend,242,hist/hist/src/TAxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx,1,['extend'],['extend']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Find bin number corresponding to abscissa x; ///; /// Identical to TAxis::FindBin except that if x is an underflow/overflow; /// no attempt is made to extend the axis.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx:237,extend,extend,237,hist/hist/src/TAxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx,1,['extend'],['extend']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Find intersection of 3D space 'line' with this plane. If 'extend' is kTRUE; /// then line extents can be extended (infinite length) to find intersection.; /// If 'extend' is kFALSE the fixed extents of line is respected.; ///; /// The return a std::pair; ///; /// - first (Bool_t) second (TGLVertex3); /// - kTRUE - line/plane intersect intersection vertex on plane; /// - kFALSE - no line/plane intersect undefined; ///; /// If intersection is not found (first == kFALSE) & 'extend' was kTRUE (infinite line); /// this implies line and plane are parallel. If 'extend' was kFALSE, then; /// either line parallel or insufficient length.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:144,extend,extend,144,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,5,['extend'],"['extend', 'extended']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Find points along a contour where FCN is minimum; ///; /// Find NPTU points along a contour where the function; ///; /// FMIN (X(KE1),X(KE2)) = AMIN+UP; ///; /// where FMIN is the minimum of FCN with respect to all; /// the other NPAR-2 variable parameters (if any).; ///; /// IERRF on return will be equal to the number of points found:; /// - NPTU if normal termination with NPTU points found; /// - -1 if errors in the calling sequence (KE1, KE2 not variable); /// - 0 if less than four points can be found (using MNMNOT); /// - n>3 if only n points can be found (n < NPTU); ///; /// input arguments: parx, pary, devs, ngrid",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:323,variab,variable,323,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Find the intersection of projection of supplied viewport point (a 3D world; /// line - see ViewportToWorld) with supplied world plane. Returns std::pair; /// of Bool_t and TGLVertex3. If line intersects std::pair.first (Bool_t) is; /// kTRUE, and std::pair.second (TGLVertex) contains the intersection vertex.; /// If line does not intersect (line and plane parallel) std::pair.first; /// (Bool_t) if kFALSE, and std::pair.second (TGLVertex) is invalid.; ///; /// NOTE: The projection lines is extended for the plane intersection test; /// hence the intersection vertex can lie outside the near/far clip regions; /// (not visible); ///; /// Camera must have valid frustum cache - call Apply() after last modification, before using",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx:580,extend,extended,580,graf3d/gl/src/TGLCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Find the parameterization; ///; /// Options:; /// None so far; ///; /// For detailed description of what this entails, please refer to the; /// <a href=""#TMultiDimFit:description"">class description</a>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:95,parameteriz,parameterization,95,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['parameteriz'],['parameterization']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Find the server-specific readv config params. Returns kFALSE in case of; /// error, kTRUE otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx:117,config,config,117,net/netxng/src/TNetXNGFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx,1,['config'],['config']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Fisher = Sum { [coeff]*[variables] }; ///; /// let Xs be the array of the mean values of variables for signal evts; /// let Xb be the array of the mean values of variables for backgd evts; /// let InvWith be the inverse matrix of the 'within class' correlation matrix; ///; /// then the array of Fisher coefficients is; /// [coeff] =sqrt(fNsig*fNbgd)/fNevt*transpose{Xs-Xb}*InvWith",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx:110,variab,variables,110,tmva/tmva/src/MethodFisher.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx,3,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// For each variable in aset, prepend prefix to its name and add; /// to the internal store. Note this will not appear in the produced; /// dataset unless CommitSet is called.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/DetailedOutputAggregator.cxx:95,variab,variable,95,roofit/roostats/src/DetailedOutputAggregator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/DetailedOutputAggregator.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:691,variab,variable,691,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// For the case where the requestor class is emulated and this class is abstract,; /// returns a pointer to the TVirtualStreamerInfo object for version with an emulated; /// representation whether or not the class is loaded.; ///; /// If the object does not exist, it is created; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:498,variab,variable,498,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// For the current entry, and the value 'index' for the main array,; /// return the size of the secondary variable dimension of the 'array'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:189,variab,variable,189,tree/treeplayer/src/TFormLeafInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Force all variables to adopt the same max.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:96,variab,variables,96,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Force all variables to adopt the same min.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:96,variab,variables,96,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Force the line to be drawn horizontally.; /// Makes fY2 equal to fY1. The line length is kept.; /// TArrow and TGaxis also get this function by inheritance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLine.cxx:230,inherit,inheritance,230,graf2d/graf/src/TLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLine.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Force the line to be drawn vertically.; /// Makes fX2 equal to fX1. The line length is kept.; /// TArrow and TGaxis also get this function by inheritance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLine.cxx:228,inherit,inheritance,228,graf2d/graf/src/TLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLine.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Forget all environment variables seen so far.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:109,variab,variables,109,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Forget all global variables seen so far.; /// With teh new implamentation the list is gROOT->GetListOfGlobals(true).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:104,variab,variables,104,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Friedmanns super smoother (Friedman, 1984).; ///; /// version 10/10/84; /// coded and copyright (c) 1984 by:; ///; /// Jerome H. Friedman; /// department of statistics; /// and; /// stanford linear accelerator center; /// stanford university; ///; /// all rights reserved.; ///; /// \param[in] n number of observations (x,y - pairs).; /// \param[in] x ordered abscissa values.; /// \param[in] y corresponding ordinate (response) values.; /// \param[in] w weight for each (x,y) observation.; /// \param[in] iper periodic variable flag.; /// - iper=1 => x is ordered interval variable.; /// - iper=2 => x is a periodic variable with values; /// in the range (0.0,1.0) and period 1.0.; /// \param[in] span smoother span (fraction of observations in window).; /// - span=0.0 => automatic (variable) span selection.; /// \param[in] alpha controls high frequency (small span) penality; /// used with automatic span selection (bass tone control).; /// (alpha.le.0.0 or alpha.gt.10.0 => no effect.); /// \param[out] smo smoothed ordinate (response) values.; /// \param sc internal working storage.; ///; /// note:; ///; /// for small samples (n < 40) or if there are substantial serial; /// correlations between observations close in x - value, then; /// a prespecified fixed span smoother (span > 0) should be; /// used. reasonable span values are 0.2 to 0.4.; ///; /// current implementation:; ///; /// Based on R function supsmu: Translated to C++ by C. Stratowa; /// (R source file: ppr.f by B.D.Ripley Copyright (C) 1994-97)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphSmooth.cxx:606,variab,variable,606,hist/hist/src/TGraphSmooth.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphSmooth.cxx,4,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// From the internal representation, construct a formula by replacing all index place holders; /// with the names of the variables that are being used to evaluate it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:204,variab,variables,204,roofit/roofitcore/src/RooFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Function that allows to create the TSimpleAnalysis object and execute its; /// Configure and Analyze functions.; ///; /// param[in] configurationFile - name of the input file used to create the TSimpleAnalysis object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:165,Config,Configure,165,tree/treeplayer/src/TSimpleAnalysis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx,2,"['Config', 'config']","['Configure', 'configurationFile']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// General Sparse Matrix Multiplication (SpMM). This code is an adaptation of; /// Eigen SpMM implementation. This product is conservative, meaning that it; /// preserves the symbolic non zeros. Given lhs, rhs, it computes this = rhs * lhs.; /// Note, result matrix is only allocated when constr=1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx:147,adapt,adaptation,147,math/matrix/src/TMatrixTSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx,1,['adapt'],['adaptation']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Generate a new dataset containing the specified variables with events sampled from our distribution.; /// Generate the specified number of events or expectedEvents() if not specified.; /// \param[in] whatVars Choose variables in which to generate events. Variables not listed here will remain; /// constant and not be used for event generation.; /// \param[in] arg1,arg2,arg3,arg4,arg5,arg6 Optional RooCmdArg() to change behaviour of generate().; /// \return RooDataSet *, owned by caller.; ///; /// Any variables of this PDF that are not in whatVars will use their; /// current values and be treated as fixed parameters. Returns zero; /// in case of an error.; ///; /// <table>; /// <tr><th> Type of CmdArg <th> Effect on generate; /// <tr><td> `Name(const char* name)` <td> Name of the output dataset; /// <tr><td> `Verbose(bool flag)` <td> Print informational messages during event generation; /// <tr><td> `NumEvents(int nevt)` <td> Generate specified number of events; /// <tr><td> `Extended()` <td> If no number of events to be generated is given,; /// use expected number of events from extended likelihood term.; /// This evidently only works for extended PDFs.; /// <tr><td> `GenBinned(const char* tag)` <td> Use binned generation for all component pdfs that have 'setAttribute(tag)' set; /// <tr><td> `AutoBinned(bool flag)` <td> Automatically deploy binned generation for binned distributions (e.g. RooHistPdf, sums and products of; /// RooHistPdfs etc); /// \note Datasets that are generated in binned mode are returned as weighted unbinned datasets. This means that; /// for each bin, there will be one event in the dataset with a weight corresponding to the (possibly randomised) bin content.; ///; ///; /// <tr><td> `AllBinned()` <td> As above, but for all components.; /// \note The notion of components is only meaningful for simultaneous PDFs; /// as binned generation is always executed at the t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:134,variab,variables,134,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,6,"['Extend', 'Variab', 'extend', 'variab']","['Extended', 'Variables', 'extended', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Generate a new dataset containing the specified variables with events sampled from our distribution.; /// \param[in] whatVars Choose variables in which to generate events. Variables not listed here will remain; /// constant and not be used for event generation; /// \param[in] arg1,arg2,arg3,arg4,arg5,arg6 Optional RooCmdArg to change behaviour of generateBinned(); /// \return RooDataHist *, to be managed by caller.; ///; /// Generate the specified number of events or expectedEvents() if not specified.; ///; /// Any variables of this PDF that are not in whatVars will use their; /// current values and be treated as fixed parameters. Returns zero; /// in case of an error. The caller takes ownership of the returned; /// dataset.; ///; /// The following named arguments are supported; /// | Type of CmdArg | Effect on generation; /// |---------------------------|-----------------------; /// | `Name(const char* name)` | Name of the output dataset; /// | `Verbose(bool flag)` | Print informational messages during event generation; /// | `NumEvents(int nevt)` | Generate specified number of events; /// | `Extended()` | The actual number of events generated will be sampled from a Poisson distribution with mu=nevt. This can be *much* faster for peaked PDFs, but the number of events is not exactly what was requested.; /// | `ExpectedData()` | Return a binned dataset _without_ statistical fluctuations (also aliased as Asimov()); ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:134,variab,variables,134,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,5,"['Extend', 'Variab', 'variab']","['Extended', 'Variables', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Generate a new dataset containing the specified variables with; /// events sampled from our distribution.; ///; /// \param[in] whatVars Generate a dataset with the variables (and categories) in this set.; /// Any variables of this PDF that are not in `whatVars` will use their; /// current values and be treated as fixed parameters.; /// \param[in] nEvents Generate the specified number of events or else try to use; /// expectedEvents() if nEvents <= 0 (default).; /// \param[in] verbose Show which generator strategies are being used.; /// \param[in] autoBinned If original distribution is binned, return bin centers and randomise weights; /// instead of generating single events.; /// \param[in] binnedTag; /// \param[in] expectedData Call setExpectedData on the genContext.; /// \param[in] extended Randomise number of events generated according to Poisson(nEvents). Only useful; /// if PDF is extended.; /// \return New dataset. Returns zero in case of an error. The caller takes ownership of the returned; /// dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:134,variab,variables,134,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,5,"['extend', 'variab']","['extended', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Generate a new dataset containing the specified variables with; /// events sampled from our distribution.; ///; /// \param[in] whatVars Variables that values should be generated for.; /// \param[in] nEvents How many events to generate. If `nEvents <=0`, use the value returned by expectedEvents() as target.; /// \param[in] expectedData If set to true (false by default), the returned histogram returns the 'expected'; /// data sample, i.e. no statistical fluctuations are present.; /// \param[in] extended For each bin, generate Poisson(x, mu) events, where `mu` is chosen such that *on average*,; /// one would obtain `nEvents` events. This means that the true number of events will fluctuate around the desired value,; /// but the generation happens a lot faster.; /// Especially if the PDF is sharply peaked, the multinomial event generation necessary to generate *exactly* `nEvents` events can; /// be very slow.; ///; /// The binning used for generation of events is the currently set binning for the variables.; /// It can e.g. be changed using; /// ```; /// x.setBins(15);; /// x.setRange(-5., 5.);; /// pdf.generateBinned(RooArgSet(x), 1000);; /// ```; ///; /// Any variables of this PDF that are not in `whatVars` will use their; /// current values and be treated as fixed parameters.; /// \return RooDataHist* owned by the caller. Returns `nullptr` in case of an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:134,variab,variables,134,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,5,"['Variab', 'extend', 'variab']","['Variables', 'extended', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Generate a new dataset using a prototype dataset as a model,; /// with values of the variables in `whatVars` sampled from our distribution.; ///; /// \param[in] whatVars Generate for these variables.; /// \param[in] prototype Use this dataset; /// as a prototype: the new dataset will contain the same number of; /// events as the prototype (by default), and any prototype variables not in; /// whatVars will be copied into the new dataset for each generated; /// event and also used to set our PDF parameters. The user can specify a; /// number of events to generate that will override the default. The result is a; /// copy of the prototype dataset with only variables in whatVars; /// randomized. Variables in whatVars that are not in the prototype; /// will be added as new columns to the generated dataset.; /// \param[in] nEvents Number of events to generate. Defaults to 0, which means number; /// of event in prototype dataset.; /// \param[in] verbose Show which generator strategies are being used.; /// \param[in] randProtoOrder Randomise order of retrieval of events from proto dataset.; /// \param[in] resampleProto Resample from the proto dataset.; /// \return The new dataset. Returns zero in case of an error. The caller takes ownership of the; /// returned dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:171,variab,variables,171,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,5,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Generate a single event with configuration specified by 'code'; /// Defer internal generation to components as encoded in the _genCode; /// registry for given generator code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:115,config,configuration,115,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Generate a skeleton function for this tree.; ///; /// The function code is written on filename.; /// If filename is 0, filename will be called nameoftree.C; ///; /// The generated code includes the following:; /// - Identification of the original Tree and Input file name,; /// - Opening the Tree file,; /// - Declaration of Tree variables,; /// - Setting of branches addresses,; /// - A skeleton for the entry loop.; ///; /// To use this function:; ///; /// - Open your Tree file (eg: TFile f(""myfile.root"");); /// - T->MakeCode(""MyAnalysis.C"");; ///; /// where T is the name of the TTree in file myfile.root; /// and MyAnalysis.C the name of the file created by this function.; ///; /// NOTE: Since the implementation of this function, a new and better; /// function TTree::MakeClass() has been developed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:416,variab,variables,416,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Generate counting Asimov data for the case when the pdf cannot be extended.; /// This function assumes that the pdf is a RooPoisson or can be decomposed in a product of RooPoisson,; /// or is a RooGaussian. Otherwise, we cannot know how to make the Asimov data sets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/AsymptoticCalculator.cxx:152,extend,extended,152,roofit/roostats/src/AsymptoticCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/AsymptoticCalculator.cxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Generate skeleton function for this Tree; ///; /// The function code is written on filename.; /// If filename is 0, filename will be called nameoftree.C; ///; /// The generated code includes the following:; /// - Identification of the original Tree and Input file name; /// - Connection of the Tree file; /// - Declaration of Tree variables; /// - Setting of branches addresses; /// - A skeleton for the entry loop; ///; /// To use this function:; /// - connect your Tree file (eg: TFile f(""myfile.root"");); /// - T->MakeCode(""anal.C"");; /// where T is the name of the Tree in file myfile.root; /// and anal.C the name of the file created by this function.; ///; /// NOTE: Since the implementation of this function, a new and better; /// function TTree::MakeClass() has been developed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:417,variab,variables,417,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Generate the file `<classname>MDF.cxx` which contains the; /// implementation of the method:; ///; /// `Double_t <classname>::%MDF(Double_t *x)`; ///; /// which does the same as TMultiDimFit::Eval. Please refer to this; /// method.; ///; /// Further, the public static members:; /// \code{.cpp}; /// Int_t <classname>::fgNVariables; /// Int_t <classname>::fgNCoefficients; /// Double_t <classname>::fgDMean; /// Double_t <classname>::fgXMean[] //[fgNVariables]; /// Double_t <classname>::fgXMin[] //[fgNVariables]; /// Double_t <classname>::fgXMax[] //[fgNVariables]; /// Double_t <classname>::fgCoefficient[] //[fgNCoeffficents]; /// Int_t <classname>::fgPower[] //[fgNCoeffficents*fgNVariables]; /// \endcode; ///; /// are initialized, and assumed to exist. The class declaration is; /// assumed to be in `<classname>.h` and assumed to be provided by the; /// user.; ///; /// \see TMultiDimFit::MakeRealCode for a list of options; ///; /// The minimal class definition is:; /// \code{.cpp}; /// class <classname> {; /// public:; /// Int_t <classname>::fgNVariables; // Number of variables; /// Int_t <classname>::fgNCoefficients; // Number of terms; /// Double_t <classname>::fgDMean; // Mean from training sample; /// Double_t <classname>::fgXMean[]; // Mean from training sample; /// Double_t <classname>::fgXMin[]; // Min from training sample; /// Double_t <classname>::fgXMax[]; // Max from training sample; /// Double_t <classname>::fgCoefficient[]; // Coefficients; /// Int_t <classname>::fgPower[]; // Function powers; ///; /// Double_t Eval(Double_t *x);; /// };; /// \endcode; ///; /// Whether the method `<classname>::%Eval` should be static or not, is; /// up to the user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:1167,variab,variables,1167,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Generate the file `<filename>` with .C appended if argument doesn't; /// end in .cxx or .C. The contains the implementation of the; /// function:; ///; /// `Double_t <funcname>(Double_t *x)`; ///; /// which does the same as TMultiDimFit::Eval. Please refer to this; /// method.; ///; /// Further, the static variables:; ///; /// Int_t gNVariables; /// Int_t gNCoefficients; /// Double_t gDMean; /// Double_t gXMean[]; /// Double_t gXMin[]; /// Double_t gXMax[]; /// Double_t gCoefficient[]; /// Int_t gPower[]; ///; /// are initialized. The only ROOT header file needed is Rtypes.h; ///; /// See TMultiDimFit::MakeRealCode for a list of options",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:394,variab,variables,394,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Generate the specified number of events with nEvents>0 and; /// and return a dataset containing the generated events. With nEvents<=0,; /// generate the number of events in the prototype dataset, if available,; /// or else the expected number of events, if non-zero.; /// If extendedMode = true generate according to a Poisson(nEvents); /// The returned dataset belongs to the caller. Return zero in case of an error.; /// Generation of individual events is delegated to a virtual generateEvent(); /// method. A virtual initGenerator() method is also called just before the; /// first call to generateEvent().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsGenContext.cxx:361,extend,extendedMode,361,roofit/roofitcore/src/RooAbsGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsGenContext.cxx,1,['extend'],['extendedMode']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Generates the file `<filename>`, with `.C` appended if it does; /// argument doesn't end in .cxx or .C.; ///; /// The file contains the implementation of two functions; /// ~~~ {.cpp}; /// void X2P(Double_t *x, Double *p); /// void P2X(Double_t *p, Double *x, Int_t nTest); /// ~~~; /// which does the same as `TPrincipal::X2P` and `TPrincipal::P2X`; /// respectively. Please refer to these methods.; ///; /// Further, the static variables:; /// ~~~ {.cpp}; /// Int_t gNVariables; /// Double_t gEigenValues[]; /// Double_t gEigenVectors[]; /// Double_t gMeanValues[]; /// Double_t gSigmaValues[]; /// ~~~; /// are initialized. The only ROOT header file needed is Rtypes.h; ///; /// See TPrincipal::MakeRealCode for a list of options",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:516,variab,variables,516,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Generic constructor from list of PDFs and list of coefficients.; /// Each pdf list element (i) is paired with coefficient list element (i).; /// The number of coefficients must be either equal to the number of PDFs,; /// in which case extended MLL fitting is enabled, or be one less.; ///; /// All PDFs must inherit from RooAbsPdf. All coefficients must inherit from RooAbsReal.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx:321,extend,extended,321,roofit/roofitcore/src/RooAddModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx,3,"['extend', 'inherit']","['extended', 'inherit']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Generic constructor from list of PDFs and list of coefficients.; /// Each pdf list element (i) is paired with coefficient list element (i).; /// The number of coefficients must be either equal to the number of PDFs,; /// in which case extended MLL fitting is enabled, or be one less.; ///; /// All PDFs must inherit from RooAbsPdf. All coefficients must inherit from RooAbsReal; ///; /// If the recursiveFraction flag is true, the coefficients are interpreted as recursive; /// coefficients as explained in the class description.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:321,extend,extended,321,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,3,"['extend', 'inherit']","['extended', 'inherit']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Generic constructor from list of extended PDFs. There are no coefficients as the expected; /// number of events from each components determine the relative weight of the PDFs.; ///; /// All PDFs must inherit from RooAbsPdf.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:119,extend,extended,119,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,2,"['extend', 'inherit']","['extended', 'inherit']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get a TObject associated with this render-element.; /// Most cases uses double-inheritance from TEveElement and TObject; /// so we just do a dynamic cast here.; /// If some TEveElement descendant implements a different scheme,; /// this virtual method should be overriden accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx:165,inherit,inheritance,165,graf3d/eve/src/TEveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get a real array (with fixed or variable-length) embedded in a cell given by (row>=0, column>=0)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx:118,variab,variable-length,118,graf2d/fitsio/src/TFITS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx,1,['variab'],['variable-length']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get config-struct for float parameter 'name'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveParamList.cxx:90,config,config-struct,90,graf3d/eve/src/TEveParamList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveParamList.cxx,1,['config'],['config-struct']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get config-struct for int parameter 'name'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveParamList.cxx:90,config,config-struct,90,graf3d/eve/src/TEveParamList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveParamList.cxx,1,['config'],['config-struct']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get environemnt variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:102,variab,variables,102,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get environment variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:102,variab,variable,102,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get full type description of global variable, e,g.: ""class TDirectory*"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:122,variab,variable,122,core/meta/src/TGlobal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get into 'env' the value of double RC env variable 'rcenv' on node 'ord'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:128,variab,variable,128,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get into 'env' the value of integer RC env variable 'rcenv' on node 'ord'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:129,variab,variable,129,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get into 'env' the value of string RC env variable 'rcenv' on node 'ord'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:128,variab,variable,128,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get max number of queries whose full results are kept in the; /// remote sandbox",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:159,sandbox,sandbox,159,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['sandbox'],['sandbox']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get maximum step angle.; /// WARNING -- this method / variable was mis-named.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:140,variab,variable,140,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get mean, min and max of those variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:117,variab,variable,117,tree/treeviewer/src/TParallelCoordVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get normalisation term needed to normalise the raw values returned by; /// getVal(). Note that `getVal(normalisationVariables)` will automatically; /// apply the normalisation term returned here.; /// \param nset Set of variables to normalise over.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:306,variab,variables,306,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get the constructor hook fro TXProofMgr.; /// We do this without the plugin manager because it blocks the; /// CINT mutex breaking the parallel startup.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:155,plugin,plugin,155,proof/proof/src/TProofMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get the entry weight: The weight of an entry for a given variable; /// is the bin content of the histogram bin the entry is going through.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:143,variab,variable,143,tree/treeviewer/src/TParallelCoordVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get the label associated with the variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:120,variab,variable,120,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get the master node. Only return the master info if it was set; /// in the config file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:161,config,config,161,proof/proof/src/TProofResourcesStatic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx,1,['config'],['config']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get the numeric value (time format). In case of kNESMinSecCent, the first; /// variable (hour) will store instead the centiseconds.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx:165,variab,variable,165,gui/gui/src/TGNumberEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get the position of the variable on the graph for the n'th entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:110,variab,variable,110,tree/treeviewer/src/TParallelCoordVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get the variable-length array contained in a cell given by (row>=0, column name)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx:94,variab,variable-length,94,graf2d/fitsio/src/TFITS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx,2,['variab'],['variable-length']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get the variables values from its index.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:94,variab,variables,94,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get the variables values from its title.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:94,variab,variables,94,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get type of global variable, e,g.: ""class TDirectory*"" -> ""TDirectory"".; /// Result needs to be used or copied immediately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:105,variab,variable,105,core/meta/src/TGlobal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Get value of environment variable 'env' on node 'ord'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:111,variab,variable,111,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Glue function between high-level syntax and low-level factory call to createVariable:; /// Process a parsed call to create a variable named `func`; ///; /// If initial token is non-numeric, a RooCategory will be created, and the args are interpreted; /// as either state names or `name=id` assignments. Otherwise a RooRealvar is created and the; /// arg list is interpreted as follows:; /// - If list has two args, these are interpreted as `xmin,xmax`; /// - If list has three args, these are interpreted as `xinit,xmin,xmax`; /// - If list has one arg, this is interpreted as `xinit` and the variable is set as constant",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:211,variab,variable,211,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Handle configure (i.e. resize) event.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootCanvas.cxx:93,config,configure,93,gui/gui/src/TRootCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootCanvas.cxx,2,['config'],['configure']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Handle configure notify 'event' - a window resize/movement.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLEventHandler.cxx:93,config,configure,93,graf3d/gl/src/TGLEventHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLEventHandler.cxx,1,['config'],['configure']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Handle configure notify event.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMdiDecorFrame.cxx:93,config,configure,93,gui/gui/src/TGMdiDecorFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMdiDecorFrame.cxx,1,['config'],['configure']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Handle configure notify events for MDI container.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMdiMainFrame.cxx:93,config,configure,93,gui/gui/src/TGMdiMainFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGMdiMainFrame.cxx,1,['config'],['configure']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Handle feedback histograms configuration menu.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:113,config,configuration,113,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Handle old file formats.; ///; /// Files written with versions older than 3.00/06 had a non-portable; /// implementation of Long_t/ULong_t. These types should not have been; /// used at all. However, because some users had already written many; /// files with these types we provide this dirty patch for ""backward; /// compatibility""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:178,portab,portable,178,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['portab'],['portable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Handle the expression lines of the input file in order to pass the; /// elements to the members of the object.; ///; /// param[in] line - TTreeFormula expression, either read form the configuration; /// file or passed as expression to the constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:270,config,configuration,270,tree/treeplayer/src/TSimpleAnalysis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Handling parametrized functions; /// Function can be normalized, and have different variable then x.; /// Variables should be placed in brackets after function name.; /// No brackets are treated like [x].; /// Normalized function has char 'n' after name, eg.; /// gausn[var](0) will be replaced with [0]*exp(-0.5*((var-[1])/[2])^2)/(sqrt(2*pi)*[2]); ///; /// Adding function is easy, just follow these rules, and add to; /// `TFormula::FillParametrizedFunctions` defined further below:; ///; /// - Key for function map is pair of name and dimension of function; /// - value of key is a pair function body and normalized function body; /// - {Vn} is a place where variable appear, n represents n-th variable from variable list.; /// Count starts from 0.; /// - [num] stands for parameter number.; /// If user pass to function argument 5, num will stand for (5 + num) parameter.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:170,variab,variable,170,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,5,"['Variab', 'variab']","['Variables', 'variable']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Handling polN; /// If before 'pol' exist any name, this name will be treated as variable used in polynomial; /// eg.; /// varpol2(5) will be replaced with: [5] + [6]*var + [7]*var^2; /// Empty name is treated like variable x.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:166,variab,variable,166,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Handling user functions (and parametrized functions); /// to take variables and optionally parameters as arguments",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:152,variab,variables,152,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Histogram is resized along axis such that x is in the axis range.; /// The new axis limits are recomputed by doubling iteratively; /// the current axis range until the specified value x is within the limits.; /// The algorithm makes a copy of the histogram, then loops on all bins; /// of the old histogram to fill the extended histogram.; /// Takes into account errors (Sumw2) if any.; /// The algorithm works for 1-d, 2-D and 3-D histograms.; /// The axis must be extendable before invoking this function.; /// Ex:; ///; /// ~~~ {.cpp}; /// h->GetXaxis()->SetCanExtend(kTRUE);; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:405,extend,extended,405,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['extend'],"['extendable', 'extended']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// If this p.d.f is operated with a fixed set of observables, return; /// all variables of the external input p.d.f that are not one of; /// the cache observables. If this p.d.f is operated in automatic mode,; /// return the parameters of the external input p.d.f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCachedPdf.cxx:161,variab,variables,161,roofit/roofitcore/src/RooCachedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCachedPdf.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// If this product contains exactly one extendable p.d.f return the extension abilities of; /// that p.d.f, otherwise return CanNotBeExtended",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:123,extend,extendable,123,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['extend'],['extendable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Implementation to get information on point of graph at cursor position; /// Adapted from class TH1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:162,Adapt,Adapted,162,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['Adapt'],['Adapted']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Implements a version of Mehrotra starting point heuristic,; /// modified to ensure identical steps in the primal and dual variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpSolverBase.cxx:208,variab,variables,208,math/quadp/src/TQpSolverBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpSolverBase.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Import a RooAbsArg object, e.g. function, p.d.f or variable into the workspace. This import function clones the input argument and will; /// own the clone. If a composite object is offered for import, e.g. a p.d.f with parameters and observables, the; /// complete tree of objects is imported. If any of the _variables_ of a composite object (parameters/observables) are already; /// in the workspace the imported p.d.f. is connected to the already existing variables. If any of the _function_ objects (p.d.f, formulas); /// to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled.; /// Several optional arguments can be provided to modify the import procedure.; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `RenameConflictNodes(const char* suffix)` <td> Add suffix to branch node name if name conflicts with existing node in workspace; /// <tr><td> `RenameAllNodes(const char* suffix)` <td> Add suffix to all branch node names including top level node.; /// <tr><td> `RenameAllVariables(const char* suffix)` <td> Add suffix to all variables of objects being imported.; /// <tr><td> `RenameAllVariablesExcept(const char* suffix, const char* exceptionList)` <td> Add suffix to all variables names, except ones listed; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Rename a single variable as specified upon import.; /// <tr><td> `RecycleConflictNodes()` <td> If any of the function objects to be imported already exist in the name space, connect the; /// imported expression to the already existing nodes.; /// \attention Use with care! If function definitions do not match, this alters the definition of your function upon import; ///; /// <tr><td> `Silence()` <td> Do not issue any info message; /// </table>; ///; /// The RenameConflictNodes, RenameNodes and RecycleConflictNodes a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:137,variab,variable,137,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Import a dataset (RooDataSet or RooDataHist) into the workspace. The workspace will contain a copy of the data.; /// The dataset and its variables can be renamed upon insertion with the options below; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `Rename(const char* suffix)` <td> Rename dataset upon insertion; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Change names of observables in dataset upon insertion; /// <tr><td> `Silence` <td> Be quiet, except in case of errors; /// \note From python, use `Import()`, since `import` is a reserved keyword.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:223,variab,variables,223,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initialise the TParallelVar variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:114,variab,variables,114,tree/treeviewer/src/TParallelCoordVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize RooProdPdf configuration from given list of RooCmdArg configuration arguments; /// and set of 'regular' p.d.f.s in product",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:108,config,configuration,108,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,2,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize a new context for generating events with the specified; /// variables, using the specified PDF model. A prototype dataset (if provided); /// is not cloned and still belongs to the caller. The contents and shape; /// of this dataset can be changed between calls to generate() as long as the; /// expected columns to be copied to the generated dataset are present.; /// Any argument supplied in the forceDirect RooArgSet are always offered; /// for internal generation to the p.d.f., even if this is deemed unsafe by; /// the logic of RooGenContext.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:157,variab,variables,157,roofit/roofitcore/src/RooGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize an accept-reject generator for the specified distribution function,; /// which must be non-negative but does not need to be normalized over the; /// variables to be generated, genVars. The function and its dependents are; /// cloned and so will not be disturbed during the generation process.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsNumGenerator.cxx:246,variab,variables,246,roofit/roofitcore/src/RooAbsNumGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsNumGenerator.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize axis with variable bins",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx:107,variab,variable,107,hist/hist/src/TAxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize cache of dataset: attach variables of cache ArgSet; /// to the corresponding TTree branches",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCompositeDataStore.cxx:122,variab,variables,122,roofit/roofitcore/src/RooCompositeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCompositeDataStore.cxx,3,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize default plugins. Could be also of the form:; /// StartEmbedding(0);; /// TPluginHandler *ph;; /// ph = gROOT->GetPluginManager()->FindHandler(""TGClassBrowser"");; /// if (ph && ph->LoadPlugin() != -1) {; /// ph->ExecPlugin(3, gClient->GetRoot(), 200, 500);; /// }; /// StopEmbedding();",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx:105,plugin,plugins,105,gui/gui/src/TRootBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx,1,['plugin'],['plugins']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize global state and variables once.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:114,variab,variables,114,core/thread/src/TThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize list of variables of front-end argument 'arg'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:105,variab,variables,105,roofit/roofitcore/src/RooRealMPFE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize some gl state variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLBoxPainter.cxx:111,variab,variables,111,graf3d/gl/src/TGLBoxPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLBoxPainter.cxx,3,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize standard plugins.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveBrowser.cxx:106,plugin,plugins,106,graf3d/eve/src/TEveBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveBrowser.cxx,1,['plugin'],['plugins']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the PDF interface; ///; /// - fname : PDF file name; /// - wtype : PDF workstation type. Not used in the PDF driver. But as TPDF; /// inherits from TVirtualPS it should be kept. Anyway it is not; /// necessary to specify this parameter at creation time because it; /// has a default value (which is ignore in the PDF case).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPDF.cxx:231,inherit,inherits,231,graf2d/postscript/src/TPDF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPDF.cxx,1,['inherit'],['inherits']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the ROOT system. The creation of the TROOT object initializes; /// the ROOT system. It must be the first ROOT related action that is; /// performed by a program. The TROOT object must be created on the stack; /// (can not be called via new since ""operator new"" is protected). The; /// TROOT object is either created as a global object (outside the main(); /// program), or it is one of the first objects created in main().; /// Make sure that the TROOT object stays in scope for as long as ROOT; /// related actions are performed. TROOT is a so called singleton so; /// only one instance of it can be created. The single TROOT object can; /// always be accessed via the global pointer gROOT.; /// The name and title arguments can be used to identify the running; /// application. The initfunc argument can contain an array of; /// function pointers (last element must be 0). These functions are; /// executed at the end of the constructor. This way one can easily; /// extend the ROOT system without adding permanent dependencies; /// (e.g. the graphics system is initialized via such a function).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:1066,extend,extend,1066,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['extend'],['extend']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the SVG interface; ///; /// - fname : SVG file name; /// - wtype : SVG workstation type. Not used in the SVG driver. But as TSVG; /// inherits from TVirtualPS it should be kept. Anyway it is not; /// necessary to specify this parameter at creation time because it; /// has a default value (which is ignore in the SVG case).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TSVG.cxx:231,inherit,inherits,231,graf2d/postscript/src/TSVG.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TSVG.cxx,1,['inherit'],['inherits']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the TeX interface; ///; /// --fname : TeX file name; /// - wtype : TeX workstation type. Not used in the TeX driver. But as TTeXDump; /// inherits from TVirtualPS it should be kept. Anyway it is not; /// necessary to specify this parameter at creation time because it; /// has a default value (which is ignore in the TeX case).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TTeXDump.cxx:235,inherit,inherits,235,graf2d/postscript/src/TTeXDump.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TTeXDump.cxx,1,['inherit'],['inherits']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initializes all member variables with default values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleEnsemble.cxx:109,variab,variables,109,tmva/tmva/src/RuleEnsemble.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleEnsemble.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initializes object for use with a variable - you pass it via reference; /// so it will be modified by Toggle.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:120,variab,variable,120,core/gui/src/TToggle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Initializes parser variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx:105,variab,variables,105,io/xmlparser/src/TXMLParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLParser.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Install the given set of observables are reference normalization; /// variables for this frame. These observables are e.g. later used; /// to automatically project out observables when plotting functions; /// on this frame. This function is only effective when called the; /// first time on a frame",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:156,variab,variables,156,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Intercept calls to perform automatic optimization of cache mode operation.; /// Forward calls to existing cache elements and save configuration of; /// cache mode optimization so that it can be applied on new cache elements; /// upon insertion",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx:216,config,configuration,216,roofit/roofitcore/src/RooObjCacheManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooObjCacheManager.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function getAnalyticalIntergral advertises the; /// analytical integrals that are supported. 'integSet'; /// is the set of dependents for which integration is requested. The; /// function should copy the subset of dependents it can analytically; /// integrate to anaIntSet and return a unique identification code for; /// this integration configuration. If no integration can be; /// performed, zero should be returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:435,config,configuration,435,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Interface function to create an internal cache object that represent; /// each cached function configuration. This interface allows to create and; /// return a class derived from RooAbsCachedReal::FuncCacheElem so that; /// a derived class fillCacheObject implementation can utilize extra functionality; /// defined in such a derived cache class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedReal.cxx:181,config,configuration,181,roofit/roofitcore/src/RooAbsCachedReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedReal.cxx,2,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to the Principal Components Analysis class.; ///; /// Create an instance of TPrincipal; /// Fill it with the selected variables; ///; /// - if option ""n"" is specified, the TPrincipal object is filled with; /// normalized variables.; /// - If option ""p"" is specified, compute the principal components; /// - If option ""p"" and ""d"" print results of analysis; /// - If option ""p"" and ""h"" generate standard histograms; /// - If option ""p"" and ""c"" generate code of conversion functions; ///; /// return a pointer to the TPrincipal object. It is the user responsibility; /// to delete this object.; ///; /// The option default value is ""np""; ///; /// See TTreePlayer::DrawSelect for explanation of the other parameters.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:214,variab,variables,214,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Interface to the Principal Components Analysis class.; ///; /// Create an instance of TPrincipal; ///; /// Fill it with the selected variables; ///; /// - if option ""n"" is specified, the TPrincipal object is filled with; /// normalized variables.; /// - If option ""p"" is specified, compute the principal components; /// - If option ""p"" and ""d"" print results of analysis; /// - If option ""p"" and ""h"" generate standard histograms; /// - If option ""p"" and ""c"" generate code of conversion functions; /// - return a pointer to the TPrincipal object. It is the user responsibility; /// - to delete this object.; /// - The option default value is ""np""; ///; /// see TTree::Draw for explanation of the other parameters.; ///; /// The created object is named ""principal"" and a reference to it; /// is added to the list of specials Root objects.; /// you can retrieve a pointer to the created object via:; /// ~~~ {.cpp}; /// TPrincipal *principal =; /// (TPrincipal*)gROOT->GetListOfSpecials()->FindObject(""principal"");; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:219,variab,variables,219,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Internal routine to add prototype pdf 'pdfName' with list of associated master states 'miStateNameList; /// and split rules 'sr' to configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:218,config,configuration,218,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Inverts packed diagonal matrix Z by square-root method.; /// Matrix elements corresponding to; /// fix parameters are removed.; ///; /// - n: number of variable parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:238,variab,variable,238,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Iterates over all MVA input variables and evaluates them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx:114,variab,variables,114,tmva/tmva/src/Factory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Factory.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Iterates through functors in fFuncs and performs the appropriate action.; /// If functor has 0 arguments (has only name) can be:; /// - variable; /// * will be replaced with x[num], where x is an array containing value of this variable under num.; /// - pre-defined formula; /// * will be replaced with formulas body; /// - constant; /// * will be replaced with constant value; /// - parameter; /// * will be replaced with p[num], where p is an array containing value of this parameter under num.; /// If has arguments it can be :; /// - function shortcut, eg. sin; /// * will be replaced with fullname of function, eg. sin -> TMath::Sin; /// - function from cling environment, eg. TMath::BreitWigner(x,y,z); /// * first check if function exists, and has same number of arguments, then accept it and set as found.; /// If all functors after iteration are matched with corresponding action,; /// it inputs C++ code of formula into cling, and sets flag that formula is ready to evaluate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:222,variab,variable,222,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Iterator over all bins in input variable and define corresponding state labels",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinningCategory.cxx:118,variab,variable,118,roofit/roofitcore/src/RooBinningCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinningCategory.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// LinkedLibs should contain the library directory and list of libraries; /// needed to recreate the current executable. It is used to expand $LinkedLibs; /// in the directives given to SetMakeSharedLib() and SetMakeExe(); /// The default value on Unix is: `root-config --glibs`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:346,config,config,346,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['config'],['config']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// List contents of the data directory in the sandbox.; /// This is the place where files produced by the client queries are kept",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:129,sandbox,sandbox,129,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['sandbox'],['sandbox']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// List of variables (observables and parameters) of this node",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNode.cxx:94,variab,variables,94,roofit/xroofit/src/xRooNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNode.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Load all plugin macros from the specified path/base directory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:95,plugin,plugin,95,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Load plugin and create drag manager object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TVirtualDragManager.cxx:91,plugin,plugin,91,gui/gui/src/TVirtualDragManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TVirtualDragManager.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Load plugin handlers specified in config file, like:; /// ~~~ {.cpp}; /// Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""TMySQLServer(...)""; /// +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""TPgSQLServer(...)""; /// ~~~; /// The + allows the extension of an already defined resource (see TEnv).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:91,plugin,plugin,91,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,4,"['Plugin', 'config', 'plugin']","['Plugin', 'config', 'plugin']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Load plugin handlers specified via macros in a list of plugin; /// directories. The `$ROOTSYS/etc/plugins` is the default top plugin directory; /// specified in `$ROOTSYS/etc/system.rootrc`. The macros must have names; /// like `<BaseClass>/PX0_<PluginClass>.C`, e.g. //`TSQLServer/P20_TMySQLServer.C`,; /// to allow easy sorting and grouping. If the BaseClass is in a namespace; /// the directory must have the name NameSpace@@BaseClass as : is a reserved; /// pathname character on some operating systems. Macros not beginning with; /// 'P' and ending with "".C"" are ignored. If base is specified only plugin; /// macros for that base class are loaded. The macros typically; /// should look like:; /// ~~~ {.cpp}; /// void P10_TDCacheFile(); /// {; /// gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; /// ""DCache"", ""TDCacheFile(const char*,Option_t*,const char*,Int_t)"");; /// }; /// ~~~; /// In general these macros should not cause side effects, by changing global; /// ROOT state via, e.g. gSystem calls, etc. However, in specific cases; /// this might be useful, e.g. adding a library search path, adding a specific; /// dependency, check on some OS or ROOT capability or downloading; /// of the plugin.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:91,plugin,plugin,91,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,7,"['Plugin', 'plugin']","['PluginClass', 'plugin', 'plugins']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Load the n-th data point (n='index') into the variables of this dataset,; /// and return a pointer to the RooArgSet that holds them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:132,variab,variables,132,roofit/roofitcore/src/RooVectorDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Load the plugin library for this handler. Returns 0 on successful loading; /// and -1 in case the library does not exist or in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:95,plugin,plugin,95,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Load the plugin library for this handler. Sets status to 0 on successful loading; /// and -1 in case the library does not exist or in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:95,plugin,plugin,95,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Load the vector of variable values into the RooRealVars associated; /// as variables with the bound RooAbsReal function.; /// \warning This will load as many values as the dimensionality of the function; /// requires. The size of `xvector` is not checked.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:105,variab,variable,105,roofit/roofitcore/src/RooRealBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Looks up the string name of a color ""cname"" with respect to the screen; /// associated with the specified colormap. It returns the exact color value.; /// If the color name is not in the Host Portable Character Encoding,; /// the result is implementation dependent.; ///; /// \param [in] cmap the colormap; /// \param [in] cname the color name string; use of uppercase or lowercase; /// does not matter; /// \param [in] color returns the exact color value for later use; ///; /// The ColorStruct_t structure is set to default. Let system think we; /// could parse color.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:278,Portab,Portable,278,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['Portab'],['Portable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Loop over columns of our tree data and fill the input histogram. Returns a pointer to the; /// input histogram, or zero in case of an error. The input histogram can be any TH1 subclass, and; /// therefore of arbitrary dimension. Variables are matched with the (x,y,...) dimensions of the input; /// histogram according to the order in which they appear in the input plotVars list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:315,Variab,Variables,315,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['Variab'],['Variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Low-level factory interface for creating a RooAbsPdf of a given class with a given list of input variables; /// The variable list varList should be of the form ""a,b,c"" where the interpretation of the argument is; /// dependent on the pdf. Set and List arguments can be passed by substituting a single argument with; /// the form (a,b,c), i.e. one can set varList to ""x,(a0,a1,a2)"" to pass a RooAbsReal and a RooArgSet as arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:183,variab,variables,183,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// MI include; ///; /// Optimize formula; /// - Minimize the number of operands; /// 1. several operands are glued together; /// 2. some primitive functions glued together - exemp. (x+y) => PlusXY(x,y); /// 3. maximize number of standard calls minimizing number of jumps in Eval cases; /// 4. variables, parameters and constants are mapped - using fOperOfssets0; /// Eval procedure use direct acces to data (only one corresponding case statement in eval procedure); /// ~~~ {.cpp}; /// pdata[operand={Var,Par,Const}][offset]; /// pdata[fOperOffsets0[i]][fOperOffset1[i+1]]; /// ~~~; /// - The fastest evaluation function is chosen at the end; /// 1. fOptimal := pointer to the fastest function for given evaluation string; /// ~~~ {.cpp}; /// switch(GetActionOptimized(0)){; /// case kData : {fOptimal= (TFormulaPrimitive::TFuncG)&TFormula::EvalPrimitive0; break;}; /// case kUnary : {fOptimal= (TFormulaPrimitive::TFuncG)&TFormula::EvalPrimitive1; break;}; /// case kBinary : {fOptimal= (TFormulaPrimitive::TFuncG)&TFormula::EvalPrimitive2; break;}; /// case kThree : {fOptimal= (TFormulaPrimitive::TFuncG)&TFormula::EvalPrimitive3; break;}; /// case kFDM : {fOptimal= (TFormulaPrimitive::TFuncG)&TFormula::EvalPrimitive4; break;}; /// }; /// ~~~; /// 2. ex.; /// - fOptimal = TFormula::EvalPrimitive0 - if it return only variable, constant or parameter; /// - = TFormula::EvalPrimitive1 - if only one unary operation; /// - = TFormula::EvalPrimitive2 - if only one binary operation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:376,variab,variables,376,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Main constructor. Create an application environment. The TApplicationServer; /// environment provides an eventloop via inheritance of TApplication.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx:205,inherit,inheritance,205,net/net/src/TApplicationServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TApplicationServer.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Main constructor. Create an application environment. The TProofServ; /// environment provides an eventloop via inheritance of TApplication.; /// Actual server creation work is done in CreateServer() to allow; /// overloading.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:197,inherit,inheritance,197,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Make an inheritance tree; ///; ///; /// Input: className - name of the class to process; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:94,inherit,inheritance,94,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Make histograms of the result of the analysis. This message; /// should be sent after having read all data points, but before; /// finding the parameterization; ///; /// Options:; /// A All the below; /// X Original independent variables; /// D Original dependent variables; /// N Normalised independent variables; /// S Shifted dependent variables; /// R1 Residuals versus normalised independent variables; /// R2 Residuals versus dependent variable; /// R3 Residuals computed on training sample; /// R4 Residuals computed on test sample; ///; /// For a description of these quantities, refer to; /// <a href=""#TMultiDimFit:description"">class description</a>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:229,parameteriz,parameterization,229,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,7,"['parameteriz', 'variab']","['parameterization', 'variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Make histograms of the result of the analysis.; /// The option string say which histograms to create; /// - X Histogram original data; /// - P Histogram principal components corresponding to; /// original data; /// - D Histogram the difference between the original data; /// and the projection of principal unto a lower; /// dimensional subspace (2D histograms); /// - E Histogram the eigenvalues; /// - S Histogram the square of the residues; /// (see `TPrincipal::SumOfSquareResiduals`); /// The histograms will be named `<name>_<type><number>`, where `<name>`; /// is the first argument, `<type>` is one of X,P,D,E,S, and `<number>`; /// is the variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:734,variab,variable,734,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Make sure all objects in this collection inherit from class cl.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:127,inherit,inherit,127,core/cont/src/TCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx,1,['inherit'],['inherit']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Make sure that the needed files are available under the specified; /// tutorial directory, setting the relevant variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:198,variab,variables,198,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Make the ""variable"" tab.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:96,variab,variable,96,tree/treeviewer/src/TParallelCoordEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Make the Asimov data from the ModelConfig and list of poi; /// \param realData Real data; /// \param model Model config defining the pdf and the parameters; /// \param paramValues The snapshot of POI and parameters used for finding the best nuisance parameter values (conditioned at these values); /// \param[out] asimovGlobObs Global observables set to values satisfying the constraints; /// \param genPoiValues Optional. A different set of POI values used for generating. By default the same POI are used for generating and for finding the nuisance parameters; /// given an observed data set, a model and a snapshot of the poi.; /// \return The asimov data set. The user takes ownership.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/AsymptoticCalculator.cxx:199,config,config,199,roofit/roostats/src/AsymptoticCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/AsymptoticCalculator.cxx,1,['config'],['config']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Make the Z axis into a unit variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRotation.cxx:114,variab,variable,114,math/physics/src/TRotation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRotation.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Make the histogram axes extendable / not extendable according to the bit mask; /// returns the previous bit mask specifying which axes are extendable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:110,extend,extendable,110,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,3,['extend'],['extendable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Map ROOT and xrootd environment variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx:118,variab,variables,118,net/netxng/src/TNetXNGFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGFile.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Mark all requested variables as internally integrated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:105,variab,variables,105,roofit/roofitcore/src/RooProjectedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Merge SamplingDistributions (does nothing if nullptr is given).; /// If variable name was not set before, it is copied from the added; /// SamplingDistribution.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SamplingDistribution.cxx:158,variab,variable,158,roofit/roostats/src/SamplingDistribution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SamplingDistribution.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; /// default configuration options and an optional list of names of other numeric integrators; /// on which this integrator depends. Returns true if integrator was previously registered",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:193,config,configuration,193,roofit/roofitcore/src/RooNumGenFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx,2,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Method for multiple variable dimensions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:106,variab,variable,106,tree/treeplayer/src/TFormLeafInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Method indicates name and typename of class member,; /// which should be now streamed in custom streamer; /// Following combinations are supported:; /// 1. name = ""ClassName"", typeName = 0 or typename==ClassName; /// This is a case, when data of parent class ""ClassName"" should be streamed.; /// For instance, if class directly inherited from TObject, custom; /// streamer should include following code:; /// ~~~{.cpp}; /// b.ClassMember(""TObject"");; /// TObject::Streamer(b);; /// ~~~; /// 2. Basic data type; /// ~~~{.cpp}; /// b.ClassMember(""fInt"",""Int_t"");; /// b >> fInt;; /// ~~~; /// 3. Array of basic data types; /// ~~~{.cpp}; /// b.ClassMember(""fArr"",""Int_t"", 5);; /// b.ReadFastArray(fArr, 5);; /// ~~~; /// 4. Object as data member; /// ~~~{.cpp}; /// b.ClassMember(""fName"",""TString"");; /// fName.Streamer(b);; /// ~~~; /// 5. Pointer on object as data member; /// ~~~{.cpp}; /// b.ClassMember(""fObj"",""TObject*"");; /// b.StreamObject(fObj);; /// ~~~; ///; /// arrsize1 and arrsize2 arguments (when specified) indicate first and; /// second dimension of array. Can be used for array of basic types.; /// See ClassBegin() method for more details.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx:414,inherit,inherited,414,io/io/src/TBufferJSON.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx,1,['inherit'],['inherited']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Method indicates name and typename of class member,; /// which should be now streamed in custom streamer; ///; /// Following combinations are supported:; /// -# name = ""ClassName"", typeName = 0 or typename==ClassName.; /// This is a case, when data of parent class ""ClassName"" should be streamed.; /// For instance, if class directly inherited from TObject, custom streamer; /// should include following code:; /// ~~~{.cpp}; /// b.ClassMember(""TObject"");; /// TObject::Streamer(b);; /// ~~~; /// -# Basic data type; /// ~~~{.cpp}; /// b.ClassMember(""fInt"",""Int_t"");; /// b >> fInt;; /// ~~~; /// -# Array of basic data types; /// ~~~{.cpp}; /// b.ClassMember(""fArr"",""Int_t"", 5);; /// b.ReadFastArray(fArr, 5);; /// ~~~; /// -# Object as data member; /// ~~~{.cpp}; /// b.ClassMemeber(""fName"",""TString"");; /// fName.Streamer(b);; /// ~~~; /// -# Pointer on object as data member; /// ~~~{.cpp}; /// b.ClassMemeber(""fObj"",""TObject*"");; /// b.StreamObject(fObj);; /// ~~~; ///; /// Arrsize1 and arrsize2 arguments (when specified) indicate first and; /// second dimension of array. Can be used for array of basic types.; /// See ClassBegin() method for more details.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TBufferXML.cxx:420,inherit,inherited,420,io/xml/src/TBufferXML.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TBufferXML.cxx,1,['inherit'],['inherited']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Method which adds the sWeights to the dataset.; ///; /// The SPlot will contain two new variables for each yield parameter:; /// - `L_<varname>` is the likelihood for each event, i.e., the pdf evaluated for the a given value of the variable ""varname"".; /// - `<varname>_sw` is the value of the sWeight for the variable ""varname"" for each event.; ///; /// Find Parameters in the PDF to be considered fixed when calculating the SWeights; /// and be sure to NOT include the yields in that list.; ///; /// After fixing non-yield parameters, this function will start a fit by calling; /// ```; /// pdf->fitTo(*fSData, RooFit::Extended(true), RooFit::SumW2Error(true), RooFit::PrintLevel(-1), RooFit::PrintEvalErrors(-1)).; /// ```; /// One can pass additional arguments to `fitTo`, such as `RooFit::Range(""fitrange"")`, as `arg5`, `arg6`, `arg7`, `arg8`.; ///; /// \note A `RooFit::Range` may be necessary to get expected results if you initially fit in a range; /// and/or called `pdf->fixCoefRange(""fitrange"")` on `pdf`.; /// Pass `arg5`, `arg6`, `arg7`, `arg8` AT YOUR OWN RISK.; ///; /// \param[in] pdf PDF to fit to data to compute s weights.; /// \param[in] yieldsTmp Yields to use to compute s weights.; /// \param[in] projDeps These will not be normalized over when calculating the sWeights,; /// and will be considered parameters, not observables.; /// \param[in] includeWeights Include weights of the input data in calculation of s weights.; /// \param[in] arg5,arg6,arg7,arg8 Optional additional arguments for the fitting step.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SPlot.cxx:174,variab,variables,174,roofit/roostats/src/SPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SPlot.cxx,4,"['Extend', 'variab']","['Extended', 'variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// MethodKNN options; ///; /// - fnkNN = 20; // number of k-nearest neighbors; /// - fBalanceDepth = 6; // number of binary tree levels used for tree balancing; /// - fScaleFrac = 0.8; // fraction of events used to compute variable width; /// - fSigmaFact = 1.0; // scale factor for Gaussian sigma; /// - fKernel = use polynomial (1-x^3)^3 or Gaussian kernel; /// - fTrim = false; // use equal number of signal and background events; /// - fUseKernel = false; // use polynomial kernel weight function; /// - fUseWeight = true; // count events using weights; /// - fUseLDA = false",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodKNN.cxx:306,variab,variable,306,tmva/tmva/src/MethodKNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodKNN.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Minimizes a given NLL variable by finding the optimal parameters with the; /// RooMinimzer. The NLL variable can be created with RooAbsPdf::createNLL.; /// If you are looking for a function that combines likelihood creation with; /// fitting, see RooAbsPdf::fitTo.; /// \param[in] nll The negative log-likelihood variable to minimize.; /// \param[in] data The dataset that was also used for the NLL. It's a necessary; /// parameter because it is used in the asymptotic error correction.; /// \param[in] cfg Configuration struct with all the configuration options for; /// the RooMinimizer. These are a subset of the options that you can; /// also pass to RooAbsPdf::fitTo via the RooFit command arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx:108,variab,variable,108,roofit/roofitcore/src/FitHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx,5,"['Config', 'config', 'variab']","['Configuration', 'configuration', 'variable']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Missing primary vertex class.; ////////////////////////////////////////////////////////////////////////////////; /******************************************************************************/; /******************************************************************************/; // This whole construction is somewhat doubtable. It requires; // shameless copying of experiment data. What is good about this; // scheme:; //; // 1) Filters can be applied at copy time so that only part of the; // data is copied over.; //; // 2) Once the data is extracted it can be used without experiment; // software. Thus, external service can provide this data and local; // client can be really thin.; //; // 3) Some pretty advanced visualization schemes/selections can be; // implemented in a general framework by providing data extractors; // only. This is also good for PR or VIP displays.; //; // 4) These classes can be extended by particular implementations. The; // container classes will use TClonesArray with user-specified element; // class.; // The common behaviour could be implemented entirely without usage of; // a common base classes, by just specifying names of members that; // retrieve specific data. This is fine as long as one only uses tree; // selections but becomes painful for extraction of data into local; // structures (could a) use interpreter but this is an overkill and; // would cause serious trouble for multi-threaded environment; b) use; // member offsets and data-types from the dictionary).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveVSDStructs.hxx:996,extend,extended,996,graf3d/eve7/inc/ROOT/REveVSDStructs.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveVSDStructs.hxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Modify the ""complementarity"" component of the residuals, by adding the pairwise; /// products of the complementary variables plus a constant alpha to this term.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpResidual.cxx:201,variab,variables,201,math/quadp/src/TQpResidual.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpResidual.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Normal Constructor for Profile histograms.; ///; /// The first eight parameters are similar to TH2D::TH2D.; /// All values of z are accepted at filling time.; /// To fill a profile2D histogram, one must use TProfile2D::Fill function.; ///; /// Note that when filling the profile histogram the function Fill; /// checks if the variable z is between fZmin and fZmax.; /// If a minimum or maximum value is set for the Z scale before filling,; /// then all values below zmin or above zmax will be discarded.; /// Setting the minimum or maximum value for the Z scale before filling; /// has the same effect as calling the special TProfile2D constructor below; /// where zmin and zmax are specified.; ///; /// H(I,J) is printed as the cell contents. The errors computed are s(I,J) if CHOPT='S'; /// (spread option), or e(I,J) if CHOPT=' ' (error on mean).; ///; /// See TProfile2D::BuildOptions for explanation of parameters; ///; /// see other constructors below with all possible combinations of; /// fix and variable bin size like in TH2D.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:412,variab,variable,412,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Normal Constructor for Profile histograms.; ///; /// The first eleven parameters are similar to TH3D::TH3D.; /// All values of t are accepted at filling time.; /// To fill a profile3D histogram, one must use TProfile3D::Fill function.; ///; /// Note that when filling the profile histogram the function Fill; /// checks if the variable t is between fTmin and fTmax.; /// If a minimum or maximum value is set for the T scale before filling,; /// then all values below tmin or above tmax will be discarded.; /// Setting the minimum or maximum value for the T scale before filling; /// has the same effect as calling the special TProfile3D constructor below; /// where tmin and tmax are specified.; ///; /// H(I,J,K) is printed as the cell contents. The errors computed are s(I,J,K) if CHOPT='S'; /// (spread option), or e(I,J,K) if CHOPT=' ' (error on mean).; ///; /// See TProfile3D::BuildOptions for explanation of parameters; ///; /// see other constructors below with all possible combinations of; /// fix and variable bin size like in TH3D.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx:413,variab,variable,413,hist/hist/src/TProfile3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Normal Constructor for Profile histograms.; ///; /// The first five parameters are similar to TH1D::TH1D.; /// All values of y are accepted at filling time.; /// To fill a profile histogram, one must use TProfile::Fill function.; ///; /// Note that when filling the profile histogram the function Fill; /// checks if the variable y is between fYmin and fYmax.; /// If a minimum or maximum value is set for the Y scale before filling,; /// then all values below ymin or above ymax will be discarded.; /// Setting the minimum or maximum value for the Y scale before filling; /// has the same effect as calling the special TProfile constructor below; /// where ymin and ymax are specified.; ///; /// H(j) is printed as the channel contents. The errors displayed are s(j) if `option`='S'; /// (spread option), or e(j) if `CHOPT`='' (error on mean).; ///; /// See TProfile::BuildOptions() for explanation of parameters; ///; /// see also comments in the TH1 base class constructors",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:407,variab,variable,407,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Normal TSPlot constructor; /// - nx : number of control variables; /// - ny : number of discriminating variables; /// - ne : total number of events; /// - ns : number of species; /// - tree: input data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:142,variab,variables,142,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Notify the display that the text has been changed in range r.; /// Rewrite the display in range r and move back to the cursor.; ///; /// \param[in] r Range to write out the text for.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp:153,Rewrite,Rewrite,153,core/textinput/src/textinput/TerminalDisplay.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalDisplay.cpp,1,['Rewrite'],['Rewrite']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Ntuple drawing with alphanumeric variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressGraphics.cxx:119,variab,variables,119,test/stressGraphics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressGraphics.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// One-time initialization common to all constructor forms. Attach; /// variables of internal ArgSet to the corresponding TTree branches",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:155,variab,variables,155,roofit/roofitcore/src/RooTreeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Only handle case of maximum in all variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:121,variab,variables,121,roofit/roofitcore/src/RooHistFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Open a stager, after having loaded the relevant plug-in.; /// The format of 'stager' depends on the plug-in.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFileStager.cxx:134,plug-in,plug-in,134,net/net/src/TFileStager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFileStager.cxx,2,['plug-in'],['plug-in']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Opens or creates a local ROOT file.; ///; /// \param[in] fname1 The name of the file; /// \param[in] option Specifies the mode in which the file is opened; /// \param[in] ftitle The title of the file; /// \param[in] compress Specifies the compression algorithm and level; ///; /// It is recommended to specify fname1 as ""<file>.root"". The suffix "".root""; /// will be used by object browsers to automatically identify the file as; /// a ROOT file. If the constructor fails in any way IsZombie() will; /// return true. Use IsOpen() to check if the file is (still) open.; /// To open non-local files use the static TFile::Open() method, that; /// will take care of opening the files using the correct remote file; /// access plugin.; ///; /// Option | Description; /// -------|------------; /// NEW or CREATE | Create a new file and open it for writing, if the file already exists the file is not opened.; /// RECREATE | Create a new file, if the file already exists it will be overwritten.; /// UPDATE | Open an existing file for writing. If no file exists, it is created.; /// READ | Open an existing file for reading (default).; /// NET | Used by derived remote file access classes, not a user callable option.; /// WEB | Used by derived remote http access class, not a user callable option.; /// READ_WITHOUT_GLOBALREGISTRATION | Used by TTreeProcessorMT, not a user callable option.; ///; /// If option = """" (default), READ is assumed.; /// The file can be specified as a URL of the form:; ///; /// file:///user/rdm/bla.root or file:/user/rdm/bla.root; ///; /// The file can also be a member of an archive, in which case it is; /// specified as:; ///; /// multi.zip#file.root or multi.zip#0; ///; /// which will open file.root which is a member of the file multi.zip; /// archive or member 1 from the archive. For more on archive file; /// support see the TArchiveFile class.; /// TFile and its remote access plug",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:808,plugin,plugin,808,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Optimize() balances binary tree for first odepth levels; /// for each depth we split sorted depth % dimension variables; /// into \f$ 2^{odepth} \f$ parts",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ModulekNN.cxx:196,variab,variables,196,tmva/tmva/src/ModulekNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ModulekNN.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Output content of collection as LaTex table. By default a table with two columns is created: the left; /// column contains the name of each variable, the right column the value.; ///; /// The following optional named arguments can be used to modify the default behavior; /// <table>; /// <tr><th> Argument <th> Effect; /// <tr><td> `Columns(Int_t ncol)` <td> Fold table into multiple columns, i.e. ncol=3 will result in 3 x 2 = 6 total columns; /// <tr><td> `Sibling(const RooAbsCollection& other)` <td> Define sibling list.; /// The sibling list is assumed to have objects with the same; /// name in the same order. If this is not the case warnings will be printed. If a single; /// sibling list is specified, 3 columns will be output: the (common) name, the value of this; /// list and the value in the sibling list. Multiple sibling lists can be specified by; /// repeating the Sibling() command.; /// <tr><td> `Format(const char* str)` <td> Classic format string, provided for backward compatibility; /// <tr><td> `Format()` <td> Formatting arguments.; /// <table>; /// <tr><td> const char* what <td> Controls what is shown. ""N"" adds name, ""E"" adds error,; /// ""A"" shows asymmetric error, ""U"" shows unit, ""H"" hides the value; /// <tr><td> `FixedPrecision(int n)` <td> Controls precision, set fixed number of digits; /// <tr><td> `AutoPrecision(int n)` <td> Controls precision. Number of shown digits is calculated from error; /// and n specified additional digits (1 is sensible default); /// <tr><td> `VerbatimName(bool flag)` <td> Put variable name in a \\verb+ + clause.; /// </table>; /// <tr><td> `OutputFile(const char* fname)` <td> Send output to file with given name rather than standard output; ///; /// </table>; ///; /// Example use:; /// ```; /// list.printLatex(Columns(2), Format(""NEU"",AutoPrecision(1),VerbatimName()) );; /// ```",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:226,variab,variable,226,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Overloadable function in which derived classes can implement; /// consistency checks of the variables. If this function returns; /// true, indicating an error, the fitter or generator will abort.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:178,variab,variables,178,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Override TH1::Rebin as TH2::RebinX; /// Rebinning in variable binning as for TH1 is not allowed; /// If a non-null pointer is given an error is flagged; /// see RebinX and Rebin2D",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:139,variab,variable,139,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Override setFCN to use the Adapter to Minuit2 FCN interface; /// To set the address of the minimization function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx:113,Adapt,Adapter,113,hist/hist/src/TBackCompFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx,1,['Adapt'],['Adapter']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// PRIVATE METHOD:; /// Evaluate function with power p at variable value x",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:141,variab,variable,141,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// PRIVATE METHOD:; /// Find the parameterization over the training sample. A full account; /// of the algorithm is given in the; /// <a href=""#TMultiDimFit:description"">class description</a>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:116,parameteriz,parameterization,116,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['parameteriz'],['parameterization']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// PRIVATE METHOD:; /// This is the method that actually generates the code for the; /// evaluation the parameterization on some point.; /// It's called by TMultiDimFit::MakeCode and TMultiDimFit::MakeMethod.; ///; /// The options are: NONE so far",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:187,parameteriz,parameterization,187,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['parameteriz'],['parameterization']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Paint the Polygon representing the average value of the variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:142,variab,variables,142,tree/treeviewer/src/TSpider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Parse URI and set the member variables accordingly,; /// returns kTRUE if URI validates, and kFALSE otherwise:; /// ~~~ {.cpp}; /// URI = scheme "":"" hier-part [ ""?"" query ] [ ""#"" fragment ]; /// hier-part = ""//"" authority path-abempty; /// / path-absolute; /// / path-rootless; /// / path-empty; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx:115,variab,variables,115,core/base/src/TUri.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TUri.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Parse expression [var1 [:var2 [:var3] ...]],; /// number of variables cannot be greater than fgMaxDimension.; ///; /// A colon which is followed by (or that follows) another semicolon; /// is not regarded as a separator.; ///; /// If there are more separating : than fgMaxDimension - 1 then; /// all characters after (fgMaxDimension - 1)th colon is put into; /// the last variable.; ///; /// - `fDimension := <number of variables>`; /// - `fVarExp[0] := <first variable string>`; /// - `fVarExp[1] := <second variable string>`; /// ..; /// Returns false in case of an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:146,variab,variables,146,tree/treeplayer/src/TTreeDrawArgsParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx,5,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Parse the content of a line starting with "".R"" (already stripped-off); /// The format is; /// ~~~ {.cpp}; /// [user@]host[:dir] [-l user] [-d dbg] [script]; /// ~~~; /// The variable 'dir' is the remote directory to be used as working dir.; /// The username can be specified in two ways, ""-l"" having the priority; /// (as in ssh).; /// A 'dbg' value > 0 gives increasing verbosity.; /// The last argument 'script' allows to specify an alternative script to; /// be executed remotely to startup the session.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx:260,variab,variable,260,core/base/src/TApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Parses parameters from TTree::Draw().; /// - varexp - Variable expression; see TTree::Draw(); /// - selection - selection expression; see TTree::Draw(); /// - option - Drawing option; see TTree::Draw",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:140,Variab,Variable,140,tree/treeplayer/src/TTreeDrawArgsParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx,1,['Variab'],['Variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Parses the configuration file. The objects can be specified following; /// the rules of the RooFactoryWSTool, plus some more flexibility.; ///; /// The official format for the datacards is "".rs"".; ///; /// All the instructions end with a "";"" (like in C++).; ///; /// Carriage returns and white lines are irrelevant but advised since they; /// improve readability (like in C++).; ///; /// The `(Roo)ClassName::objname(description)` can be replaced with the more; /// ""pythonic"" `objname = (Roo)ClassName(description)`.; ///; /// The comments can be specified with a ""//"" if on a single line or with; /// ""multiple lines"" in C/C++ like comments.; ///; /// The `""#include path/to/file.rs""` statement triggers the inclusion of a; /// configuration fragment.; ///; /// The `""import myobject:myworkspace:myrootfile""` will add to the Workspace; /// the object myobject located in myworkspace recorded in myrootfile.; /// Alternatively, one could choose the `""import myobject:myrootfile""` in case; /// no Workspace is present.; ///; /// The `""echo""` statement prompts a message on screen.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx:97,config,configuration,97,roofit/roostats/src/HLFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx,2,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// PaveText normal constructor.; ///; /// A PaveText is a Pave with several lines of text; ///; /// - option = ""TR"" Top and Right shadows are drawn.; /// - option = ""TL"" Top and Left shadows are drawn.; /// - option = ""BR"" Bottom and Right shadows are drawn.; /// - option = ""BL"" Bottom and Left shadows are drawn.; ///; /// If none of these four above options is specified the default the; /// option ""BR"" will be used to draw the border. To produces a pave; /// without any border it is enough to specify the option ""NB"" (no border).; /// If you want to remove the border or shadow of an already existing TPaveText,; /// then use the function TPave::SetBorderSize.; ///; /// - option = ""NDC"" x1,y1,x2,y2 are given in NDC; /// - option = ""ARC"" corners are rounded; ///; /// In case of option ""ARC"", the corner radius is specified; /// via TPave::SetCornerRadius(rad) where rad is given in percent; /// of the pave height (default value is 0.2).; ///; /// The individual text items are entered via AddText; /// By default, text items inherits from the default pavetext AttText.; /// A title can be added later to this pavetext via TPaveText::SetLabel.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPaveText.cxx:1117,inherit,inherits,1117,graf2d/graf/src/TPaveText.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPaveText.cxx,1,['inherit'],['inherits']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Perform a \f$ \chi^2 \f$ fit to given histogram. By default the fit is executed through the MINUIT; /// commands MIGRAD, HESSE in succession; ///; /// The following named arguments are supported; ///; /// <table>; /// <tr><th> <th> Options to control construction of chi2; /// <tr><td> `Extended(bool flag)` <td> **Only applicable when fitting a RooAbsPdf**. Scale the normalized pdf by the number of events predicted by the model instead of scaling by the total data weight.; /// This imposes a constraint on the predicted number of events analogous to the extended term in a likelihood fit.; /// - If you don't pass this command, an extended fit will be done by default if the pdf makes a prediction on the number of events; /// (in RooFit jargon, ""if the pdf can be extended"").; /// - Passing `Extended(true)` when the the pdf makes no prediction on the expected number of events will result in error messages,; /// and the chi2 will fall back to the total data weight to scale the normalized pdf.; /// - There are cases where the fit **must** be done in extended mode. This happens for example when you have a RooAddPdf; /// where the coefficients represent component yields. If the fit is not extended, these coefficients will not be; /// well-defined, as the RooAddPdf always normalizes itself. If you pass `Extended(false)` in such a case, an error will be; /// printed and you'll most likely get garbage results.; /// <tr><td> `Range(const char* name)` <td> Fit only data inside range with given name; /// <tr><td> `Range(double lo, double hi)` <td> Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; /// Multiple comma separated range names can be specified.; /// <tr><td> `NumCPU(int num)` <td> Parallelize NLL calculation on num CPUs; /// <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization (on by default); /// <tr><td> `IntegrateBins()`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:373,Extend,Extended,373,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,5,"['Extend', 'extend']","['Extended', 'extended']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Performs the same function as StepBound, and supplies additional information about; /// which component of the nonnegative variables is responsible for restricting alpha.; /// In terms of the abstract formulation, the components have the following meanings :; ///; /// primalValue : the value of the blocking component of the primal variables (u,t,v,w).; /// primalStep : the corresponding value of the blocking component of the primal step; /// variables (b->u,b->t,b->v,b->w); /// dualValue : the value of the blocking component of the dual variables/; /// (lambda,pi,phi,gamma).; /// dualStep : the corresponding value of the blocking component of the dual step; /// variables (b->lambda,b->pi,b->phi,b->gamma); /// firstOrSecond : 1 if the primal step is blocking,; /// 2 if the dual step is block,; /// 0 if no step is blocking.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpVar.cxx:209,variab,variables,209,math/quadp/src/TQpVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpVar.cxx,5,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Plot (project) PDF on specified frame. If a PDF is plotted in an empty frame, it; /// will show a unit normalized curve in the frame variable, taken at the present value; /// of other observables defined for this PDF.; ///; /// \param[in] frame pointer to RooPlot; /// \param[in] arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10 Ordered arguments; ///; /// If a PDF is plotted in a frame in which a dataset has already been plotted, it will; /// show a projected curve integrated over all variables that were present in the shown; /// dataset except for the one on the x-axis. The normalization of the curve will also; /// be adjusted to the event count of the plotted dataset. An informational message; /// will be printed for each projection step that is performed.; ///; /// This function takes the following named arguments; /// <table>; /// <tr><th><th> Projection control; /// <tr><td> `Slice(const RooArgSet& set)` <td> Override default projection behaviour by omitting observables listed; /// in set from the projection, i.e. by not integrating over these.; /// Slicing is usually only sensible in discrete observables, by e.g. creating a slice; /// of the PDF at the current value of the category observable.; ///; /// <tr><td> `Slice(RooCategory& cat, const char* label)` <td> Override default projection behaviour by omitting the specified category; /// observable from the projection, i.e., by not integrating over all states of this category.; /// The slice is positioned at the given label value. To pass multiple Slice() commands, please use the; /// Slice(std::map<RooCategory*, std::string> const&) argument explained below.; ///; /// <tr><td> `Slice(std::map<RooCategory*, std::string> const&)` <td> Omits multiple categories from the projection, as explianed above.; /// Can be used with initializer lists for convenience, e.g.; /// ```{.cpp}; /// pdf.plotOn(frame, Slice({{&tagCategory, ""2tag""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:219,variab,variable,219,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Plot (project) PDF on specified frame.; /// - If a PDF is plotted in an empty frame, it; /// will show a unit-normalized curve in the frame variable. When projecting a multi-; /// dimensional PDF onto the frame axis, hidden parameters are taken are taken at; /// their current value.; /// - If a PDF is plotted in a frame in which a dataset has already been plotted, it will; /// show a projection integrated over all variables that were present in the shown; /// dataset (except for the one on the x-axis). The normalization of the curve will; /// be adjusted to the event count of the plotted dataset. An informational message; /// will be printed for each projection step that is performed.; /// - If a PDF is plotted in a frame showing a dataset *after* a fit, the above happens,; /// but the PDF will be drawn and normalised only in the fit range. If this is not desired,; /// plotting and normalisation range can be overridden using Range() and NormRange() as; /// documented in the table below.; ///; /// This function takes the following named arguments (for more arguments, see also; /// RooAbsReal::plotOn(RooPlot*,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,; /// const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,; /// const RooCmdArg&) const ); ///; ///; /// <table>; /// <tr><th> Type of argument <th> Controlling normalisation; /// <tr><td> `NormRange(const char* name)` <td> Calculate curve normalization w.r.t. specified range[s].; /// See the tutorial rf212_plottingInRanges_blinding.C; /// \note Setting a Range() by default also sets a NormRange() on the same range, meaning that the; /// PDF is plotted and normalised in the same range. Overriding this can be useful if the PDF was fit; /// in limited range[s] such as side bands, `NormRange(""sidebandLeft,sidebandRight"")`, but the PDF; /// should be drawn in the full range, `Range(""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:226,variab,variable,226,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Plots points in array xypt onto one page with labelled axes; ///; /// - NXYPT is the number of points to be plotted; /// - XPT(I) = x-coord. of ith point; /// - YPT(I) = y-coord. of ith point; /// - CHPT(I) = character to be plotted at this position; /// the input point arrays XPT, YPT, CHPT are destroyed.; ///; /// If fGraphicsmode is true (default), a TGraph object is produced; /// via the Plug-in handler. To get the plot, you can do:; /// ~~~ {.cpp}; /// TGraph *gr = (TGraph*)gMinuit->GetPlot();; /// gr->Draw(""al"");; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:481,Plug-in,Plug-in,481,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['Plug-in'],['Plug-in']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// PluginManager creation function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGSystem.cxx:86,Plugin,PluginManager,86,net/netxng/src/TNetXNGSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/netxng/src/TNetXNGSystem.cxx,1,['Plugin'],['PluginManager']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// PluginManager generator function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/pgsql/src/TPgSQLServer.cxx:86,Plugin,PluginManager,86,sql/pgsql/src/TPgSQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/pgsql/src/TPgSQLServer.cxx,1,['Plugin'],['PluginManager']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Pre-scale single variable with pre-scale entry dim.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjections.cxx:103,variab,variable,103,graf3d/eve/src/TEveProjections.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjections.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Print binning arguments (the RooAbsReal objects represening; /// the variable bin boundaries for parameterized binning implementations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsBinning.cxx:155,variab,variable,155,roofit/roofitcore/src/RooAbsBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsBinning.cxx,2,"['parameteriz', 'variab']","['parameterized', 'variable']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Print configuration of message service. If ""v"" option is given also; /// inactive streams are listed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:92,config,configuration,92,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Print configuration of parser",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCmdConfig.cxx:92,config,configuration,92,roofit/roofitcore/src/RooCmdConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCmdConfig.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Print customizer configuration details",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx:103,config,configuration,103,roofit/roofitcore/src/RooCustomizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Print details of a validated build configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:121,config,configuration,121,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Print extras of variable: (asymmetric) error, constant flag, limits and binning",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:102,variab,variable,102,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Print function contours in two variables, on line printer; ///; /// input arguments: parx, pary, devs, ngrid",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:117,variab,variables,117,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Print info about the plugin handler. If option is ""a"" print; /// also the ctor's that will be used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:107,plugin,plugin,107,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Print info about this dataset to the specified output stream.; ///; /// Standard: number of entries; /// Shape: list of variables we define & were generated with",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:206,variab,variables,206,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Print list of registered plugin handlers. If option is ""a"" print; /// also the ctor's that will be used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:111,plugin,plugin,111,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Print tree structure of expression tree on given ostream, only branch nodes are printed.; /// Lead nodes (variables) will not be shown; ///; /// If namePat is not ""*"", only nodes with names matching the pattern will be printed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:192,variab,variables,192,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Print value of variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:101,variab,variable,101,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Probably, TPadPainter must be placed in a separate ROOT module -; /// ""padpainter"" (the same as ""histpainter""). But now, it's directly in a; /// gpad dir, so, in case of default painter, no *.so should be loaded,; /// no need in plugin managers.; /// May change in future.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:315,plugin,plugin,315,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Process an additional configuration file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx:108,config,configuration,108,roofit/roostats/src/HLFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Process interpreter command directly via CINT interpreter.; /// Only executable statements are allowed (no variable declarations),; /// In all other cases use TROOT::ProcessLine().; /// The possible error codes are defined by TInterpreter::EErrorCode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:193,variab,variable,193,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Process the content of a line starting with "".R"" (already stripped-off); /// The format is; /// [user@]host[:dir] [-l user] [-d dbg] [script]; /// The variable 'dir' is the remote directory to be used as working dir.; /// The username can be specified in two ways, ""-l"" having the priority; /// (as in ssh).; /// A 'dbg' value > 0 gives increasing verbosity.; /// The last argument 'script' allows to specify an alternative script to; /// be executed remotely to startup the session.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:237,variab,variable,237,core/rint/src/TRint.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Process the content of a line starting with "".R"" (already stripped-off); /// The format is; /// ~~~ {.cpp}; /// [user@]host[:dir] [-l user] [-d dbg] [script] | [host] -close; /// ~~~; /// The variable 'dir' is the remote directory to be used as working dir.; /// The username can be specified in two ways, ""-l"" having the priority; /// (as in ssh).; /// A 'dbg' value > 0 gives increasing verbosity.; /// The last argument 'script' allows to specify an alternative script to; /// be executed remotely to startup the session.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx:278,variab,variable,278,core/base/src/TApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Processes a single variable from an entry.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx:105,variab,variable,105,proof/proofplayer/src/TProofDraw.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofDraw.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Profile histogram is resized along axis such that x is in the axis range.; ///; /// The new axis limits are recomputed by doubling iteratively; /// the current axis range until the specified value x is within the limits.; /// The algorithm makes a copy of the histogram, then loops on all bins; /// of the old histogram to fill the extended histogram.; /// Takes into account errors (Sumw2) if any.; /// The axis must be extendable before invoking this function.; ///; /// Ex: `h->GetXaxis()->SetCanExtend(kTRUE)`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:418,extend,extended,418,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,2,['extend'],"['extendable', 'extended']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Profile histogram is resized along x axis such that x is in the axis range.; /// The new axis limits are recomputed by doubling iteratively; /// the current axis range until the specified value x is within the limits.; /// The algorithm makes a copy of the histogram, then loops on all bins; /// of the old histogram to fill the extended histogram.; /// Takes into account errors (Sumw2) if any.; /// The axis must be extendable before invoking this function.; ///; /// Ex: `h->GetXaxis()->SetCanExtend(kTRUE)`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:415,extend,extended,415,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,2,['extend'],"['extendable', 'extended']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Project foam variable idim1 and variable idim2 to histogram.; /// The projection algorithm is modified such that the z axis range; /// of the returned histogram is [0, 1], as necessary for the; /// interpretation as a discriminator. This is done by weighting; /// the cell values (in case of cell_value = kValue) by the cell; /// volume in all dimensions, excluding 'idim1' and 'idim2'.; ///; /// Parameters:; ///; /// - idim1, idim2 - dimensions to project to; ///; /// - cell_value - the cell value to draw; ///; /// - kernel - a PDEFoam kernel (optional). If NULL is given, the; /// kernel is ignored and the pure cell values are; /// plotted.; ///; /// - nbin - number of bins in x and y direction of result histogram; /// (optional, default is 50).; ///; /// Returns:; /// a 2-dimensional histogram",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDiscriminant.cxx:99,variab,variable,99,tmva/tmva/src/PDEFoamDiscriminant.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamDiscriminant.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Project foam variable idim1 and variable idim2 to histogram.; ///; /// Parameters:; ///; /// - idim1, idim2 - dimensions to project to; ///; /// - cell_value - the cell value to draw; ///; /// - kernel - a PDEFoam kernel (optional). If NULL is given, the; /// kernel is ignored and the pure cell values are; /// plotted.; ///; /// - nbin - number of bins in x and y direction of result histogram; /// (optional, default is 50).; ///; /// Returns:; /// a 2-dimensional histogram",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx:99,variab,variable,99,tmva/tmva/src/PDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Provides the user with information concerning the current status; ///; /// of parameter number IUEXT. Namely, it returns:; /// - CHNAM: the name of the parameter; /// - VAL: the current (external) value of the parameter; /// - ERR: the current estimate of the parameter uncertainty; /// - XLOLIM: the lower bound (or zero if no limits); /// - XUPLIM: the upper bound (or zero if no limits); /// - IUINT: the internal parameter number (or zero if not variable,; /// or negative if undefined).; ///; /// Note also: If IUEXT is negative, then it is -internal parameter; /// number, and IUINT is returned as the EXTERNAL number.; /// Except for IUINT, this is exactly the inverse of MNPARM; /// User-called",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:536,variab,variable,536,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Query internal generation capabilities of component p.d.f.s and aggregate capabilities; /// into master configuration passed to the generator context",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:190,config,configuration,190,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// REveGeoManagerHolder; /// Exception-safe global variable holders; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveUtil.hxx:134,variab,variable,134,graf3d/eve7/inc/ROOT/REveUtil.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveUtil.hxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// REveVector2T; /// A two-vector template without TObject inheritance and virtual functions.; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveVector.hxx:142,inherit,inheritance,142,graf3d/eve7/inc/ROOT/REveVector.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveVector.hxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// REveVector4T; /// A four-vector template without TObject inheritance and virtual functions.; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveVector.hxx:143,inherit,inheritance,143,graf3d/eve7/inc/ROOT/REveVector.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveVector.hxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// REveVectorT; /// A three-vector template without TObject inheritance and virtual functions.; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveVector.hxx:143,inherit,inheritance,143,graf3d/eve7/inc/ROOT/REveVector.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REveVector.hxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Read TObject-based class from JSON, produced by ConvertToJSON() method.; /// If object does not inherit from TObject class, return 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx:182,inherit,inherit,182,io/io/src/TBufferJSON.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx,1,['inherit'],['inherit']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Read configuration file and populate list of sessions; /// list of queries and list of packages.; /// Read and set also global options as feedback histos.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:91,config,configuration,91,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Read from filename as many columns as variables in the ntuple; /// the function returns the number of rows found in the file; /// The second argument ""branchDescriptor"" is currently not used.; /// Lines in the input file starting with ""#"" are ignored.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtuple.cxx:124,variab,variables,124,tree/tree/src/TNtuple.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtuple.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Read group config file 'cf'.; /// If cf == 0 re-read, if changed, the file pointed by fGroupConfigFile .; ///; /// expects the following directives:; /// Group definition:; /// group `<groupname>` `<user>`+; /// disk quota; /// property `<groupname>` diskquota `<quota in GB>`; /// average filesize (to be used when the file size is not available); /// averagefilesize `<average size>`{G,g,M,m,K,k}",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:97,config,config,97,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,1,['config'],['config']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Read object from I/O buffer. clReq is NOT used.; ///; /// The value returned is the address of the actual start in memory of; /// the object. Note that if the actual class of the object does not; /// inherit first from TObject, the type of the pointer is NOT 'TObject*'.; /// [More accurately, the class needs to start with the TObject part, for; /// the pointer to be a real TObject*].; /// We recommend using ReadObjectAny instead of ReadObject",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:286,inherit,inherit,286,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['inherit'],['inherit']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Read object from I/O buffer.; ///; /// A typical use for this function is:; ///; /// MyClass *ptr = (MyClass*)b.ReadObjectAny(MyClass::Class());; ///; /// I.e. clCast should point to a TClass object describing the class pointed; /// to by your pointer.; /// In case of multiple inheritance, the return value might not be the; /// real beginning of the object in memory. You will need to use a; /// dynamic_cast later if you need to retrieve it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:364,inherit,inheritance,364,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Read object from XML, produced by ConvertToXML() method.; /// If object does not inherit from TObject class, return 0.; /// GenericLayout and UseNamespaces should be the same as in ConvertToXML()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TBufferXML.cxx:167,inherit,inherit,167,io/xml/src/TBufferXML.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TBufferXML.cxx,1,['inherit'],['inherit']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Read the PROOF config file and fill the master and worker list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:101,config,config,101,proof/proof/src/TProofResourcesStatic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx,1,['config'],['config']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Read the contents of the argset in ASCII form from given stream.; ///; /// The stream is read to end-of-file and each line is assumed to be; /// of the form; /// \code; /// <argName> = <argValue>; /// \endcode; /// Lines starting with argNames not matching any element in the list; /// will be ignored with a warning message. In addition limited C++ style; /// preprocessing and flow control is provided. The following constructions; /// are recognized:; /// \code; /// include ""include.file""; /// \endcode; /// Include given file, recursive inclusion OK; /// \code; /// if (<boolean_expression>); /// <name> = <value>; /// ....; /// else if (<boolean_expression>); /// ....; /// else; /// ....; /// endif; /// \endcode; ///; /// All expressions are evaluated by RooFormula, and may involve any of; /// the sets variables.; /// \code; /// echo <Message>; /// \endcode; /// Print console message while reading from stream; /// \code; /// abort; /// \endcode; /// Force termination of read sequence with error status; ///; /// The value of each argument is read by the arguments readFromStream; /// function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgSet.cxx:898,variab,variables,898,roofit/roofitcore/src/RooArgSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgSet.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Read the input variables from the XML node",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx:101,variab,variables,101,tmva/tmva/src/VariableTransformBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Read the variable ranges from an input stream",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableNormalizeTransform.cxx:95,variab,variable,95,tmva/tmva/src/VariableNormalizeTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableNormalizeTransform.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Read the variables (name, min, max) for a given data; /// transformation method from the stream. In the stream we only; /// expect the limits which will be set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:95,variab,variables,95,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Read version value from buffer; /// actually version is normally defined by table name; /// and kept in intermediate variable fReadVersionBuffer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TBufferSQL2.cxx:203,variab,variable,203,io/sql/src/TBufferSQL2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TBufferSQL2.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Reads out the value from histogram and calculates screen coordinates; ///; /// Parameters:; /// - it - node in x- direction; /// - jt - node in y- direction; /// - zmt - control variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx:264,variab,variable,264,hist/spectrumpainter/src/TSpectrum2Painter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/src/TSpectrum2Painter.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Rebin this profile grouping ngroup bins together.; ///; /// ## case 1 xbins=0; /// if newname is not blank a new temporary profile hnew is created.; /// else the current profile is modified (default); /// The parameter ngroup indicates how many bins of this have to me merged; /// into one bin of hnew; /// If the original profile has errors stored (via Sumw2), the resulting; /// profile has new errors correctly calculated.; ///; /// examples: if hp is an existing TProfile histogram with 100 bins; ///; /// ~~~ {.cpp}; /// hp->Rebin(); //merges two bins in one in hp: previous contents of hp are lost; /// hp->Rebin(5); //merges five bins in one in hp; /// TProfile *hnew = hp->Rebin(5,""hnew""); // creates a new profile hnew; /// //merging 5 bins of hp in one bin; /// ~~~; ///; /// NOTE: If ngroup is not an exact divider of the number of bins,; /// the top limit of the rebinned profile is changed; /// to the upper edge of the bin=newbins*ngroup and the corresponding; /// bins are added to the overflow bin.; /// Statistics will be recomputed from the new bin contents.; ///; /// ## case 2 xbins!=0; /// a new profile is created (you should specify newname).; /// The parameter ngroup is the number of variable size bins in the created profile; /// The array xbins must contain ngroup+1 elements that represent the low-edge; /// of the bins.; /// The data of the old bins are added to the new bin which contains the bin center; /// of the old bins. It is possible that information from the old binning are attached; /// to the under-/overflow bins of the new binning.; ///; /// examples: if hp is an existing TProfile with 100 bins; ///; /// ~~~ {.cpp}; /// Double_t xbins[25] = {...} array of low-edges (xbins[25] is the upper edge of last bin; /// hp->Rebin(24,""hpnew"",xbins); //creates a new variable bin size profile hpnew; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:1295,variab,variable,1295,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Reconstruct the formula expression from the internal TFormula member variables; ///; /// This function uses the internal member variables of TFormula to; /// construct the mathematical expression associated with the TFormula; /// instance. This function can be used to get an expanded version of the; /// expression originally assigned to the TFormula instance, i.e. that; /// the string returned by GetExpFormula() doesn't depend on other; /// TFormula object names.; ///; /// if option contains ""p"" the returned string will contain the formula; /// expression with symbolic parameters, eg [0] replaced by the actual value; /// of the parameter. Example:; /// if expression in formula is: ""[0]*(x>-[1])+[2]*exp(-[3]*x)""; /// and parameters are 3.25,-4.01,4.44,-0.04, GetExpFormula(""p"") will return:; /// ""(3.25*(x>+4.01))+(4.44*exp(+0.04*x))""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:155,variab,variables,155,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Redefine x and y axis parameters for variable bin sizes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:123,variab,variable,123,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Redefine x and y axis parameters with variable bin sizes.; ///; /// The X and Y axis parameters are modified.; /// The bins content array is resized; /// if errors (Sumw2) the errors array is resized; /// The previous bin contents are lost; /// To change only the axis limits, see TAxis::SetRange; /// xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:124,variab,variable,124,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Redefine x axis parameters with variable bin sizes.; ///; /// The X axis parameters are modified.; /// The bins content array is resized; /// if errors (Sumw2) the errors array is resized; /// The previous bin contents are lost; /// To change only the axis limits, see TAxis::SetRange; /// xBins is supposed to be of length nx+1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:118,variab,variable,118,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Redefine x, y and z axis parameters with variable bin sizes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx:127,variab,variable,127,hist/hist/src/TProfile3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Redefine x, y and z axis parameters with variable bin sizes.; ///; /// The X, Y and Z axis parameters are modified.; /// The bins content array is resized; /// if errors (Sumw2) the errors array is resized; /// The previous bin contents are lost; /// To change only the axis limits, see TAxis::SetRange; /// xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1,; /// zBins is supposed to be of length nz+1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:127,variab,variable,127,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Refine the grid using the values that have been accumulated so far.; /// The parameter alpha controls the stiffness of the rebinning and should; /// usually be between 1 (stiffer) and 2 (more flexible). A value of zero; /// prevents any rebinning.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx:278,flexible,flexible,278,roofit/roofitcore/src/RooGrid.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx,1,['flexible'],['flexible']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Register a dataset, perfoming quota checkings and verification, if required.; /// If a dataset with the same name already exists the action fails unless 'opts'; /// contains 'O', in which case the old dataset is overwritten, or contains 'U',; /// in which case 'newDataSet' is added to the existing dataset (duplications are; /// ignored, if any).; /// If 'opts' contains 'V' the dataset files are also verified (if the dataset manager; /// is configured to allow so). By default the dataset is not verified.; /// If 'opts' contains 'T' the in the dataset object (status bits, meta,...); /// is trusted, i.e. not reset (if the dataset manager is configured to allow so).; /// Returns 0 on success, -1 on failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx:530,config,configured,530,proof/proof/src/TDataSetManagerFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManagerFile.cxx,2,['config'],['configured']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Register query log using the information in the list which is in the form; /// TParameter(<par>,<value>) or TNamed(<name>,<string>). For bulk sending,; /// the first entry in the list is an TObjString defining the variable names; /// in the format; /// VARname1,VARname2,...; /// while the other entries are TObjStrings with the multiplets to be sent; /// VARvalue1,VARvalue2,...; ///; /// The string 'opt' allows the following additional control:; /// table=`[<db>.]<table>` allows to insert to a different table from the; /// one defined at construction (change is not; /// persistent); if `<db>` is not specified, the same; /// db defined at cinstruction is used.; /// bulk Do a bulk insert; /// More options can be given concurrently, comma-separated .; /// The specified table must already have been created in the DB.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLMonitoring.cxx:300,variab,variable,300,net/net/src/TSQLMonitoring.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLMonitoring.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Register the 'dataSet' on the cluster under the current; /// user, group and the given 'dataSetName'.; /// If a dataset with the same name already exists the action fails unless 'opts'; /// contains 'O', in which case the old dataset is overwritten, or contains 'U',; /// in which case 'newDataSet' is added to the existing dataset (duplications are; /// ignored, if any).; /// If 'opts' contains 'V' the dataset files are also verified (if the dataset manager; /// is configured to allow so). By default the dataset is not verified.; /// If 'opts' contains 'T' the in the dataset object (status bits, meta,...); /// is trusted, i.e. not reset (if the dataset manager is configured to allow so).; /// If 'opts' contains 'S' validation would be run serially (meaningful only if; /// validation is required).; /// Returns kTRUE on success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:555,config,configured,555,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['config'],['configured']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Register value as a temporary, extending its lifetime to that of the; /// interpreter. This is needed for TCling's compatibility interfaces; /// returning long - the address of the temporary objects.; /// As such, ""simple"" types don't need to be stored; they are returned by; /// value; only pointers / references / objects need to be stored.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:117,extend,extending,117,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['extend'],['extending']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Register version of plugin library.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:106,plugin,plugin,106,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Reminder of the meaning of fMultiplicity:; /// - -1: Only one or 0 element per entry but contains variable length array!; /// - 0: Only one element per entry, no variable length array; /// - 1: loop over the elements of a variable length array; /// - 2: loop over elements of fixed length array (nData is the same for all entry)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:184,variab,variable,184,tree/treeplayer/src/TFormLeafInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx,3,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Remove an variable from the list of environment variables passed to proofserv; /// on the master and slaves",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:96,variab,variable,96,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Remove the specialized numeric MC generator configuration associated; /// with this object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:130,config,configuration,130,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Remove the specialized numeric integration configuration associated; /// with this object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:129,config,configuration,129,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Replace all direct servers of this object with the new servers in `newServerList`.; /// This substitutes objects that we receive values from with new objects that have the same name.; /// \see recursiveRedirectServers() Use recursive version if servers that are only indirectly serving this object should be replaced as well.; /// \see redirectServers() If only the direct servers of an object need to be replaced.; ///; /// Note that changing the types of objects is generally allowed, but can be wrong if the interface of an object changes.; /// For example, one can reparametrise a model by substituting a variable with a function:; /// \f[; /// f(x\, |\, a) = a \cdot x \rightarrow f(x\, |\, b) = (2.1 \cdot b) \cdot x; /// \f]; /// If an object, however, expects a PDF, and this is substituted with a function that isn't normalised, wrong results might be obtained; /// or it might even crash the program. The types of the objects being substituted are not checked.; ///; /// \param[in] newSetOrig Set of new servers that should be used instead of the current servers.; /// \param[in] mustReplaceAll A warning is printed and error status is returned if not all servers could be; /// substituted successfully.; /// \param[in] nameChange If false, an object named ""x"" is only replaced with an object also named ""x"" in `newSetOrig`.; /// If the object in `newSet` is called differently, set `nameChange` to true and use setAttribute() on the x object:; /// ```; /// objectToReplaceX.setAttribute(""ORIGNAME:x""); /// ```; /// Now, the renamed object will be selected based on the attribute ""ORIGNAME:<name>"".; /// \param[in] isRecursionStep Internal switch used when called from recursiveRedirectServers().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:695,variab,variable,695,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Replace server nodes with names matching the dataset variable names; /// with those data set variables, making this PDF directly dependent on the dataset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:139,variab,variable,139,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Replace server nodes with names matching the dataset variable names; /// with those data set variables, making this PDF directly dependent on the dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:139,variab,variable,139,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Replace the variables in this RooConstraintSum with the global observables; /// in the dataset if they match by name. This function will do nothing if this; /// RooConstraintSum is configured to not use the global observables stored in; /// datasets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConstraintSum.cxx:98,variab,variables,98,roofit/roofitcore/src/RooConstraintSum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConstraintSum.cxx,2,"['config', 'variab']","['configured', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Replaces all references like ""jsrootsys/..."" or other pre-configured pathes; ///; /// Either using pre-configured JSROOT installation from web or; /// redirect to jsrootsys from the main server path to benefit from browser caching; /// Creates appropriate importmap instead of <!--jsroot_importmap--> placeholder",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx:144,config,configured,144,net/http/src/THttpServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx,2,['config'],['configured']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Reset all baskets' state arrays. This function is only called by main; /// thread and parallel processing from upper layers should be disabled such; /// as IMT in TTree::GetEntry(). Other threads should not call this function; /// since it is not thread-safe.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:203,layers,layers,203,tree/tree/src/TTreeCacheUnzip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx,1,['layers'],['layers']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Reset in Cling the list of global variables to the state saved by the last; /// call to TCling::SaveGlobalsContext().; ///; /// Note: Right now, all we do is run the global destructors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:120,variab,variables,120,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Reset server configuration fields.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:99,config,configuration,99,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Reset the Cling 'user' global objects/variables state to the state saved by the last; /// call to TCling::SaveGlobalsContext().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:124,variab,variables,124,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Resets all the variables of the class.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:101,variab,variables,101,tree/treeplayer/src/TTreeDrawArgsParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Restore value of all variables to previously; /// saved values by saveXVec()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:107,variab,variables,107,roofit/roofitcore/src/RooRealBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Restores one or more fixed parameter(s) to variable status; ///; /// Restores one or more fixed parameter(s) to variable status; /// by inserting it into the internal parameter list at the; /// appropriate place.; ///; /// - K = 0 means restore all parameters; /// - K = 1 means restore the last parameter fixed; /// - K = -I means restore external parameter I (if possible); /// - IQ = fix-location where internal parameters were stored; /// - IR = external number of parameter being restored; /// - IS = internal number of parameter being restored",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:129,variab,variable,129,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Restrict convolution integral to finite range [ x - C - S*W, x - C + S*W ]; /// where x is current value of convolution variablem, C = centerParam, W=widthParam and S = widthScaleFactor; /// Inputs centerParam and withParam can be function expressions (RooAbsReal, RooFormulaVar) etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:206,variab,variablem,206,roofit/roofitcore/src/RooNumConvolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx,1,['variab'],['variablem']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve binning of this linear transformation. A RooLinearVar does not have its own; /// binnings but uses linearly transformed binnings of the input variable. If a given; /// binning exists on the input variable, it will also exist on this linear transformation,; /// and a binning adaptor object is created on the fly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:237,variab,variable,237,roofit/roofitcore/src/RooLinearVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx,3,"['adapt', 'variab']","['adaptor', 'variable']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve cache element for the computation of the PDF normalisation.; /// \param[in] nset Current normalisation set (integration over these variables yields 1).; /// \param[in] iset Integration set. Variables to be integrated over (if integrations are performed).; ///; /// If a cache element does not exist, create and fill it on the fly. The cache also contains; /// - Supplemental normalization terms (in case not all added p.d.f.s have the same observables); /// - Projection integrals to calculate transformed fraction coefficients when a frozen reference frame is provided; /// - Projection integrals for similar transformations when a frozen reference range is provided.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:226,variab,variables,226,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,2,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve configuration information specific to integrator with given name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:95,config,configuration,95,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,2,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve discrete variable (RooCategory) with given name. A null pointer is returned if not found",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:104,variab,variable,104,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve generator config from cache",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx:105,config,config,105,roofit/roofitcore/src/RooMultiVarGaussian.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMultiVarGaussian.cxx,1,['config'],['config']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve object representing projection integral of input p.d.f; /// over observables iset, while normalizing over observables; /// nset. The code argument returned by reference is the unique code; /// defining this particular projection configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:324,config,configuration,324,roofit/roofitcore/src/RooProjectedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve real-valued variable (RooRealVar) with given name. A null pointer is returned if not found",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:107,variab,variable,107,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return Global bin number corresponding to x,y,z.; ///; /// 2-D and 3-D histograms are represented with a one dimensional; /// structure. This has the advantage that all existing functions, such as; /// GetBinContent, GetBinError, GetBinFunction work for all dimensions.; /// This function DOES NOT try to extend the axis if the given point belongs; /// to an under-/overflow bin.; ///; /// See also TH1::GetBin, TAxis::FindBin and TAxis::FindFixBin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:391,extend,extend,391,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['extend'],['extend']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return Global bin number corresponding to x,y,z; ///; /// 2-D and 3-D histograms are represented with a one dimensional; /// structure. This has the advantage that all existing functions, such as; /// GetBinContent, GetBinError, GetBinFunction work for all dimensions.; /// This function tries to extend the axis if the given point belongs to an; /// under-/overflow bin AND if CanExtendAllAxes() is true.; ///; /// See also TH1::GetBin, TAxis::FindBin and TAxis::FindFixBin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:383,extend,extend,383,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['extend'],['extend']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return Integral of function between a and b using the given parameter values and; /// relative and absolute tolerance.; ///; /// The default integrator defined in ROOT::Math::IntegratorOneDimOptions::DefaultIntegrator() is used; /// If ROOT contains the MathMore library the default integrator is set to be; /// the adaptive ROOT::Math::GSLIntegrator (based on QUADPACK) or otherwise the; /// ROOT::Math::GaussIntegrator is used; /// See the reference documentation of these classes for more information about the; /// integration algorithms; /// To change integration algorithm just do :; /// ROOT::Math::IntegratorOneDimOptions::SetDefaultIntegrator(IntegratorName);; /// Valid integrator names are:; /// - Gauss : for ROOT::Math::GaussIntegrator; /// - GaussLegendre : for ROOT::Math::GaussLegendreIntegrator; /// - Adaptive : for ROOT::Math::GSLIntegrator adaptive method (QAG); /// - AdaptiveSingular : for ROOT::Math::GSLIntegrator adaptive singular method (QAGS); /// - NonAdaptive : for ROOT::Math::GSLIntegrator non adaptive (QNG); ///; /// In order to use the GSL integrators one needs to have the MathMore library installed; ///; /// Note 1:; ///; /// Values of the function f(x) at the interval end-points A and B are not; /// required. The subprogram may therefore be used when these values are; /// undefined.; ///; /// Note 2:; ///; /// Instead of TF1::Integral, you may want to use the combination of; /// TF1::CalcGaussLegendreSamplingPoints and TF1::IntegralFast.; /// See an example with the following script:; ///; /// ~~~ {.cpp}; /// void gint() {; /// TF1 *g = new TF1(""g"",""gaus"",-5,5);; /// g->SetParameters(1,0,1);; /// //default gaus integration method uses 6 points; /// //not suitable to integrate on a large domain; /// double r1 = g->Integral(0,5);; /// double r2 = g->Integral(0,1000);; ///; /// //try with user directives computing more points; /// Int_t np = 1000;; /// double *x=new",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:402,adapt,adaptive,402,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,6,"['Adapt', 'adapt']","['Adaptive', 'AdaptiveSingular', 'adaptive']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return RooArgSet with all variables (tree leaf nodes of expression tree)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:112,variab,variables,112,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return a Gaussian random variable with mean 0 and variance 1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandom.cxx:111,variab,variable,111,roofit/roofitcore/src/RooRandom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandom.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return a Posix condition variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThreadFactory.cxx:111,variab,variable,111,core/thread/src/TPosixThreadFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixThreadFactory.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return a RooAbsRealLValue representing the error associated; /// with this variable. The callers takes ownership of the; /// return object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:161,variab,variable,161,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return a RooDataSet containing the post-fit parameters of each toy cycle.; /// This dataset also contains any additional output that was generated; /// by study modules that were added to this RooMCStudy.; /// By default, the two following variables are added (apart from fit parameters):; /// - NLL: The value of the negative log-likelihood for each run.; /// - ngen: Number of events generated for each run.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:326,variab,variables,326,roofit/roofitcore/src/RooMCStudy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return a RooHist (derives from TGraphAsymErrors) containing the residuals of a histogram.; /// The plotting range of the graph is adapted to the plotting range of the current plot.; ///; /// \param histname Name of the data histogram.; /// Passing an empty string or `nullptr` will create residuals of the last-plotted histogram.; /// \param curvename Name of the curve to compare to data.; /// Passing an empty string or `nullptr` will create residuals of the last-plotted curve.; /// \param normalize If true, the residuals are divided by the error; /// of the histogram, effectively returning a pull histogram.; /// \param useAverage If true, the histogram is compared with the curve averaged in each bin.; /// Otherwise, the curve is evaluated at the bin centres, which is not accurate for strongly curved distributions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:216,adapt,adapted,216,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,1,['adapt'],['adapted']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return a TMethodCall method responsible for getting the value; /// of data member. The cl argument specifies the class of the object; /// which will be used to call this method (in case of multiple; /// inheritance TMethodCall needs to know this to calculate the proper; /// offset).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:289,inherit,inheritance,289,core/meta/src/TDataMember.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return a TMethodCall method responsible for setting the value; /// of data member. The cl argument specifies the class of the object; /// which will be used to call this method (in case of multiple; /// inheritance TMethodCall needs to know this to calculate the proper; /// offset).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx:289,inherit,inheritance,289,core/meta/src/TDataMember.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDataMember.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return a Win32 condition variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32ThreadFactory.cxx:111,variab,variable,111,core/thread/src/TWin32ThreadFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32ThreadFactory.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return a histogram containing the asymmetry of this histogram with h2,; /// where the asymmetry is defined as:; ///; /// ~~~ {.cpp}; /// Asymmetry = (h1 - h2)/(h1 + h2) where h1 = this; /// ~~~; ///; /// works for 1D, 2D, etc. histograms; /// c2 is an optional argument that gives a relative weight between the two; /// histograms, and dc2 is the error on this weight. This is useful, for example,; /// when forming an asymmetry between two histograms from 2 different data sets that; /// need to be normalized to each other in some way. The function calculates; /// the errors assuming Poisson statistics on h1 and h2 (that is, dh = sqrt(h)).; ///; /// example: assuming 'h1' and 'h2' are already filled; ///; /// ~~~ {.cpp}; /// h3 = h1->GetAsymmetry(h2); /// ~~~; ///; /// then 'h3' is created and filled with the asymmetry between 'h1' and 'h2';; /// h1 and h2 are left intact.; ///; /// Note that it is the user's responsibility to manage the created histogram.; /// The name of the returned histogram will be `Asymmetry_nameOfh1-nameOfh2`; ///; /// code proposed by Jason Seely (seely@mit.edu) and adapted by R.Brun; ///; /// clone the histograms so top and bottom will have the; /// correct dimensions:; /// Sumw2 just makes sure the errors will be computed properly; /// when we form sums and ratios below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1190,adapt,adapted,1190,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['adapt'],['adapted']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to the convolution variable instance used in the resolution model",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:122,variab,variable,122,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return a user configured or systemwide directory to create; /// temporary files in.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:100,config,configured,100,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['config'],['configured']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return an empty clone of this dataset. If vars is not null, only the variables in vars; /// are added to the definition of the empty clone",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:155,variab,variables,155,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return back some gl state variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLVoxelPainter.cxx:112,variab,variables,112,graf3d/gl/src/TGLVoxelPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLVoxelPainter.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return bin error of a Profile histogram; ///; /// Computing errors: A moving field; ///; /// The computation of errors for a TProfile has evolved with the versions; /// of ROOT. The difficulty is in computing errors for bins with low statistics.; ///; /// - prior to version 3.00, we had no special treatment of low statistic bins.; /// As a result, these bins had huge errors. The reason is that the; /// expression eprim2 is very close to 0 (rounding problems) or 0.; /// - in version 3.00 (18 Dec 2000), the algorithm is protected for values of; /// eprim2 very small and the bin errors set to the average bin errors, following; /// recommendations from a group of users.; /// - in version 3.01 (19 Apr 2001), it is realized that the algorithm above; /// should be applied only to low statistic bins.; /// - in version 3.02 (26 Sep 2001), the same group of users recommend instead; /// to take two times the average error on all bins for these low; /// statistics bins giving a very small value for eprim2.; /// - in version 3.04 (Nov 2002), the algorithm is modified/protected for the case; /// when a TProfile is projected (ProjectionX). The previous algorithm; /// generated a N^2 problem when projecting a TProfile with a large number of; /// bins (eg 100000).; /// - in version 3.05/06, a new static function TProfile::Approximate; /// is introduced to enable or disable (default) the approximation.; ///; /// Ideas for improvements of this algorithm are welcome. No suggestions; /// received since our call for advice to roottalk in Jul 2002.; /// see for instance: http://root.cern/root/roottalk/roottalk02/2916.html",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:224,evolve,evolved,224,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['evolve'],['evolved']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return bin error of a Profile2D histogram.; ///; /// ### Computing errors: A moving field; ///; /// The computation of errors for a TProfile2D has evolved with the versions; /// of ROOT. The difficulty is in computing errors for bins with low statistics.; /// - prior to version 3.10, we had no special treatment of low statistic bins.; /// As a result, these bins had huge errors. The reason is that the; /// expression eprim2 is very close to 0 (rounding problems) or 0.; /// - The algorithm is modified/protected for the case; /// when a TProfile2D is projected (ProjectionX). The previous algorithm; /// generated a N^2 problem when projecting a TProfile2D with a large number of; /// bins (eg 100000).; /// - in version 3.10/02, a new static function TProfile::Approximate; /// is introduced to enable or disable (default) the approximation.; /// (see also comments in TProfile::GetBinError)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:233,evolve,evolved,233,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,1,['evolve'],['evolved']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return bin error of a Profile3D histogram.; ///; /// ### Computing errors: A moving field; ///; /// The computation of errors for a TProfile3D has evolved with the versions; /// of ROOT. The difficulty is in computing errors for bins with low statistics.; ///; /// - prior to version 3.10, we had no special treatment of low statistic bins.; /// As a result, these bins had huge errors. The reason is that the; /// expression eprim2 is very close to 0 (rounding problems) or 0.; /// - The algorithm is modified/protected for the case; /// when a TProfile3D is projected (ProjectionX). The previous algorithm; /// generated a N^2 problem when projecting a TProfile3D with a large number of; /// bins (eg 100000).; /// - in version 3.10/02, a new static function TProfile::Approximate; /// is introduced to enable or disable (default) the approximation.; /// (see also comments in TProfile::GetBinError)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx:233,evolve,evolved,233,hist/hist/src/TProfile3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile3D.cxx,1,['evolve'],['evolved']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return data member offset to the base class ""cl"".; /// - Returns -1 in case ""cl"" is not a base class.; /// - Returns -2 if cl is a base class, but we can't find the offset; /// because it's virtual.; /// Takes care of multiple inheritance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:313,inherit,inheritance,313,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return expected number of events from this p.d.f for use in extended; /// likelihood calculations. This default implementation returns zero",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:146,extend,extended,146,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return function value requested bu present configuration; ///; /// If integration is required, the function value integrated; /// over the bin volume divided by the bin volume is returned,; /// otherwise the value at the bin center is returned.; /// The bin volume is defined by the error on the 'X' coordinates; ///; /// If an extended p.d.f. is used as function, its value is; /// also multiplied by the expected number of events here",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:129,config,configuration,129,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,2,"['config', 'extend']","['configuration', 'extended']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return global fit parameters; /// - amin : chisquare; /// - edm : estimated distance to minimum; /// - errdef; /// - nvpar : number of variable parameters; /// - nparx : total number of parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:221,variab,variable,221,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return kTRUE if this class inherits from a class with name ""classname"".; /// note that the function returns kTRUE in case classname is the class itself",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:113,inherit,inherits,113,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['inherit'],['inherits']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return kTRUE if this class inherits from class cl.; /// note that the function returns KTRUE in case cl is the class itself",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:113,inherit,inherits,113,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['inherit'],['inherits']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return kTRUE is the class inherits from TObject.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:112,inherit,inherits,112,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['inherit'],['inherits']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return l-value pointer to contents. If the contents derive from RooAbsLValue or RooAbsCategoryLValue,; /// the conversion is safe, and the function directly returns the pointer using a static_cast.; /// If the template parameter of this proxy is not an LValue type, then; /// - in a debug build, a dynamic_cast with an assertion is used.; /// - in a release build, a static_cast is forced, irrespective of what the type of the object actually is. This; /// is dangerous, but equivalent to the behaviour before refactoring the RooFit proxies.; /// \deprecated This function is unnecessary if the template parameter is RooAbsRealLValue (+ derived types) or; /// RooAbsCategoryLValue (+derived types), as arg() will always return the correct type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTemplateProxy.h:596,refactor,refactoring,596,roofit/roofitcore/inc/RooTemplateProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTemplateProxy.h,1,['refactor'],['refactoring']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return lower limit on i-th variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:113,variab,variable,113,roofit/roofitcore/src/RooRealBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return number of bad slaves. This are slaves that we in the config; /// file, but refused to startup or that died during the PROOF session.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:146,config,config,146,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['config'],['config']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return number of expected events from associated event count variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx:147,variab,variable,147,roofit/roofitcore/src/RooExtendedTerm.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return number of slaves as described in the config file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:130,config,config,130,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['config'],['config']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to cling Decl of global/static variable that is located; /// at the address given by addr.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:132,variab,variable,132,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to global variable by name. If load is true force; /// reading of all currently defined globals from CINT (more expensive).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:111,variab,variable,111,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to global variable with address addr.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:111,variab,variable,111,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to object identified by namecycle if and only if the actual; /// object is a type suitable to be stored as a pointer to a ""expectedClass""; /// If expectedClass is null, no check is performed.; ///; /// - namecycle has the format name;cycle; /// - name = * is illegal, cycle = * is illegal; /// - cycle = """" or cycle = 9999 ==> apply to a memory object; ///; /// ### Very important note; /// The calling application must cast the returned pointer to; /// the type described by the 2 arguments (i.e. cl):; ///; /// auto objPtr = (MyClass*)directory->GetObjectChecked(""some object of MyClass"",""MyClass""));; ///; /// Note: We recommend using the method TDirectoryFile::Get<T>:; /// ~~~{.cpp}; /// auto objPtr = directory->Get<MyClass>(""some object inheriting from MyClass"");; /// if (objPtr) { ... we found what we are looking for ... }; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx:845,inherit,inheriting,845,io/io/src/TDirectoryFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx,1,['inherit'],['inheriting']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to object identified by namecycle if and only if the actual; /// object is a type suitable to be stored as a pointer to a ""expectedClass""; /// If expectedClass is null, no check is performed.; ///; /// namecycle has the format `name;cycle`; /// - name = * is illegal, cycle = * is illegal; /// - cycle = """" or cycle = 9999 ==> apply to a memory object; ///; /// VERY IMPORTANT NOTE:; ///; /// The calling application must cast the returned pointer to; /// the type described by the 2 arguments (i.e. cl):; /// ~~~ {.cpp}; /// MyClass *obj = (MyClass*)directory->GetObjectChecked(""some object of MyClass"",""MyClass""));; /// ~~~; /// Note: We recommend using the method TDirectory::GetObject:; /// ~~~ {.cpp}; /// MyClass *obj = nullptr;; /// directory->GetObject(""some object inheriting from MyClass"",obj);; /// if (obj) { ... we found what we are looking for ... }; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx:875,inherit,inheriting,875,core/base/src/TDirectory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx,1,['inherit'],['inheriting']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to object identified by namecycle.; ///; /// Properties:; /// - namecycle has the format name;cycle; /// - name = * is illegal, cycle = * is illegal; /// - cycle = """" or cycle = 9999 ==> apply to a memory object; ///; /// Examples:; /// | %Pattern | Explanation |; /// |----------|-------------|; /// | foo | get object named foo in memory if object is not in memory, try with highest cycle from file |; /// | foo;1 | get cycle 1 of foo on file |; ///; /// The retrieved object should in principle derive from TObject.; /// If not, the function TDirectoryFile::Get<T> should be called.; /// However, this function will still work for a non-TObject, provided that; /// the calling application cast the return type to the correct type (which; /// is the actual type of the object).; ///; /// ### The Get<T> Method; /// The method Get<T> offers better protection and avoids the need for any; /// cast:; /// ~~~{.cpp}; /// auto objPtr = directory->Get<MyClass>(""some object"");; /// if (objPtr) { ... the object exist and inherits from MyClass ... }; /// ~~~; ///; /// ### Very important note about inheritance; /// In case the class of this object derives from TObject but not; /// as a first inheritance, one must use dynamic_cast<>().; ///; /// #### Example 1 - Normal case:; ///; /// class MyClass : public TObject, public AnotherClass; ///; /// then on return, one can adopt a C style cast:; ///; /// auto objPtr = (MyClass*)directory->Get(""some object of MyClass"");; ///; /// #### Example 2 - Special case:; ///; /// class MyClass : public AnotherClass, public TObject; ///; /// then on return, one must do:; ///; /// auto objPtr = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));; ///; /// Of course, dynamic_cast<> can also be used in the example 1.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx:1118,inherit,inherits,1118,io/io/src/TDirectoryFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx,3,['inherit'],"['inheritance', 'inherits']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to object identified by namecycle.; ///; /// namecycle has the format name;cycle; /// - name = * is illegal, cycle = * is illegal; /// - cycle = """" or cycle = 9999 ==> apply to a memory object; ///; /// examples:; /// - foo : get object named foo in memory; /// if object is not in memory, try with highest cycle from file; /// - foo;1 : get cycle 1 of foo on file; ///; /// The retrieved object should in principle derive from TObject.; /// If not, the function TDirectory::GetObject should be called.; /// However, this function will still work for a non-TObject, providing that; /// the calling application cast the return type to the correct type (which; /// is the actual type of the object).; ///; /// NOTE:; ///; /// The method GetObject offer better protection and avoid the need; /// for any cast:; /// ~~~ {.cpp}; /// MyClass *obj;; /// directory->GetObject(""some object"",obj);; /// if (obj) { ... the object exist and inherits from MyClass ... }; /// ~~~; ///; /// VERY IMPORTANT NOTE:; ///; /// In case the class of this object derives from TObject but not; /// as a first inheritance, one must use dynamic_cast<>().; /// #### Example 1: Normal case:; /// ~~~ {.cpp}; /// class MyClass : public TObject, public AnotherClass; /// ~~~; /// then on return, one can do:; /// ~~~ {.cpp}; /// MyClass *obj = (MyClass*)directory->Get(""some object of MyClass"");; /// ~~~; /// #### Example 2: Special case:; /// ~~~ {.cpp}; /// class MyClass : public AnotherClass, public TObject; /// ~~~; /// then on return, one must do:; /// ~~~ {.cpp}; /// MyClass *obj = dynamic_cast<MyClass*>(directory->Get(""some object of MyClass""));; /// ~~~; /// Of course, dynamic_cast<> can also be used in the example 1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx:1030,inherit,inherits,1030,core/base/src/TDirectory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx,2,['inherit'],"['inheritance', 'inherits']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to the base class ""cl"". Returns 0 in case ""cl""; /// is not a base class. Takes care of multiple inheritance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:197,inherit,inheritance,197,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to the base class ""classname"". Returns 0 in case; /// ""classname"" is not a base class. Takes care of multiple inheritance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:211,inherit,inheritance,211,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return proper archive file handler depending on passed url.; ///; /// The handler is loaded via the plugin manager and is triggered by; /// the extension of the archive file. In case no handler is found 0; /// is returned. The file argument is used to access the archive.; /// The archive should be specified as url with the member name as the; /// anchor, e.g. ""root://pcsalo.cern.ch/alice/event_1.zip#tpc.root"",; /// where tpc.root is the file in the archive to be opened.; /// Alternatively the sub-file can be specified via its index number,; /// e.g. ""root://pcsalo.cern.ch/alice/event_1.zip#3"".; /// This function is normally only called via TFile::Open().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TArchiveFile.cxx:186,plugin,plugin,186,io/io/src/TArchiveFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TArchiveFile.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return reference to VarInfo struct with cached histogram variable; /// information that is frequently used for histogram weights retrieval.; ///; /// If the `_varInfo` struct was not initialized yet, it will be initialized in; /// this function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:143,variab,variable,143,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return reference to instance of default numeric integrator configuration object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:145,config,configuration,145,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,2,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return section with configuration parameters for integrator with given (class) name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:106,config,configuration,106,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,2,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return set with all variable objects",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:106,variab,variable,106,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return the RooArgSet containing a snapshot of variables contained in the workspace; ///; /// Note that the variables of the objects in the snapshots are **copies** of the; /// variables in the workspace. To load the values of a snapshot in the workspace; /// variables, use loadSnapshot() instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:132,variab,variables,132,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,4,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return the convolution variable of the selection basis function.; /// This is, by definition, the first parameter of the basis function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:109,variab,variable,109,roofit/roofitcore/src/RooResolutionModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return the current value: The value of the bin enclosing the current coordinates; /// of the dependents, normalized by the histograms contents. Interpolation; /// is applied if the RooHistFunc is configured to do that",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx:282,config,configured,282,roofit/roofitcore/src/RooHistFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistFunc.cxx,1,['config'],['configured']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return the current value: The value of the bin enclosing the current coordinates; /// of the observables, normalized by the histograms contents. Interpolation; /// is applied if the RooHistPdf is configured to do that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:282,config,configured,282,roofit/roofitcore/src/RooHistPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx,1,['config'],['configured']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return the desired prefill type from the environment or resource variable; /// - 0 - No prefill; /// - 1 - All branches",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:151,variab,variable,151,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return the expected number of events associated with the extendable input PDF; /// in the product. If there is no extendable term, abort.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:143,extend,extendable,143,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,2,['extend'],['extendable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return the extended likelihood term (\f$ N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \f$); /// of this PDF for the given number of observed events.; ///; /// For successful operation, the PDF implementation must indicate that; /// it is extendable by overloading `canBeExtended()`, and must; /// implement the `expectedEvents()` function.; ///; /// \param[in] sumEntries The number of observed events.; /// \param[in] nset The normalization set when asking the pdf for the expected; /// number of events.; /// \param[in] observedSumW2 The number of observed events when weighting with; /// squared weights. If non-zero, the weight-squared error; /// correction is applied to the extended term.; /// \param[in] doOffset Offset the extended term by a counterterm where the; /// expected number of events equals the observed number of events.; /// This constant shift results in a term closer to zero that is; /// approximately chi-square distributed. It is useful to do this; /// also when summing multiple NLL terms to avoid numeric precision; /// loss that happens if you sum multiple terms of different orders; /// of magnitude.; ///; /// The weight-squared error correction works as follows:; /// adjust poisson such that; /// estimate of \f$N_\mathrm{expect}\f$ stays at the same value, but has a different variance, rescale; /// both the observed and expected count of the Poisson with a factor \f$ \sum w_{i} / \sum w_{i}^2 \f$; /// (the effective weight of the Poisson term),; /// i.e., change \f$\mathrm{Poisson}(N_\mathrm{observed} = \sum w_{i} | N_\mathrm{expect} )\f$; /// to \f$ \mathrm{Poisson}(\sum w_{i} \cdot \sum w_{i} / \sum w_{i}^2 | N_\mathrm{expect} \cdot \sum w_{i} / \sum w_{i}^2 ) \f$,; /// weighted by the effective weight \f$ \sum w_{i}^2 / \sum w_{i} \f$ in the likelihood.; /// Since here we compute the likelihood with the weight square, we need to multiply by t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:97,extend,extended,97,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,4,['extend'],"['extendable', 'extended']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return the extended likelihood term (\f$ N_\mathrm{expect} - N_\mathrm{observed} \cdot \log(N_\mathrm{expect} \f$); /// of this PDF for the given number of observed events.; ///; /// This function is a wrapper around; /// RooAbsPdf::extendedTerm(double, RooArgSet const *, double, bool) const,; /// where the number of observed events and observables to be used as the; /// normalization set for the pdf is extracted from a RooAbsData.; ///; /// For successful operation, the PDF implementation must indicate that; /// it is extendable by overloading `canBeExtended()`, and must; /// implement the `expectedEvents()` function.; ///; /// \param[in] data The RooAbsData to retrieve the set of observables and; /// number of expected events.; /// \param[in] weightSquared If set to `true`, the extended term will be scaled by; /// the ratio of squared event weights over event weights:; /// \f$ \sum w_{i}^2 / \sum w_{i} \f$.; /// Intended to be used by fits with the `SumW2Error()` option that; /// can be passed to RooAbsPdf::fitTo(); /// (see the documentation of said function to learn more about the; /// interpretation of fits with squared weights).; /// \param[in] doOffset See RooAbsPdf::extendedTerm(double, RooArgSet const*, double, bool) const.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:97,extend,extended,97,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,5,['extend'],"['extendable', 'extended', 'extendedTerm']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return the number of expected events, which is either the sum of all coefficients; /// or the sum of the components extended terms",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx:202,extend,extended,202,roofit/roofitcore/src/RooAddModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return the number of expected events, which is either the sum of all coefficients; /// or the sum of the components extended terms, multiplied with the fraction that; /// is in the current range w.r.t the reference range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:202,extend,extended,202,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return the numeric MC generator configuration used for this object. If; /// a specialized configuration was associated with this object, that configuration; /// is returned, otherwise the default configuration for all RooAbsReals is returned",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:118,config,configuration,118,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,4,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return the numeric integration configuration used for this object. If; /// a specialized configuration was associated with this object, that configuration; /// is returned, otherwise the default configuration for all RooAbsReals is returned",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:117,config,configuration,117,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,8,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return the parameters of the cache created by RooAbsCachedPdf.; /// These are always the input functions parameter, but never the; /// integrated variable x.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx:232,variab,variable,232,roofit/roofitcore/src/RooNumRunningInt.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumRunningInt.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return the parameters on which the cache depends given normalization; /// set nset. For this p.d.f these are the parameters of the input p.d.f.; /// but never the convolution variable, in case it is not part of nset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:261,variab,variable,261,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return the relative variable importance, normalized to all; /// variables together having the importance 1. The importance in; /// evaluated as the total separation-gain that this variable had in; /// the decision trees (weighted by the number of events)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:106,variab,variable,106,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,6,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return the size in bytes of the key header structure.; ///; /// An explanation about the nbytes (Int_t nbytes) variable used in the; /// function. The size of fSeekKey and fSeekPdir is 8 instead of 4 if version is; /// greater than 1000.; /// | Component | Sizeof |; /// |-------------------|------------|; /// | fNbytes | 4 |; /// | sizeof(Version_t) | 2 |; /// | fObjlen | 4 |; /// | fDatime | 4 |; /// | fKeylen | 2 |; /// | fCycle | 2 |; /// | fSeekKey | 4 or 8 |; /// | fSeekPdir | 4 or 8 |; /// | **FIXED TOTAL** | 26 or 34 |; /// | fClassName | 1+ bytes |; /// | fName | 1+ bytes |; /// | fTitle | 1+ bytes |; /// | **TOTAL** | 29+ or 37+ |",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TKey.cxx:197,variab,variable,197,io/io/src/TKey.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TKey.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return the weight at given coordinates with interpolation.; /// \param[in] bin Coordinates for which the weight should be calculated.; /// Has to be aligned with the internal histogram variables.; /// \param[in] intOrder Interpolation order, i.e. how many neighbouring bins are; /// used for the interpolation.; /// \param[in] correctForBinSize Enable the inverse bin volume correction factor.; /// \param[in] cdfBoundaries Enable the special boundary condition for a cdf:; /// underflow bins are assumed to have weight zero and; /// overflow bins have weight one. Otherwise, the; /// histogram is mirrored at the boundaries for the; /// interpolation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:271,variab,variables,271,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return this variable's title string. If appendUnit is true and; /// this variable has units, also append a string "" (<unit>)"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:98,variab,variable,98,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return true if 'cl' inherits from 'base'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:106,inherit,inherits,106,core/cont/src/TCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx,1,['inherit'],['inherits']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return true if interval Q is contained within interval M for U1 variables.; /// It is assumed that all values are within the [-2pi, 2pi] interval and; /// minM <= maxM & minQ <= maxQ.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveUtil.cxx:150,variab,variables,150,graf3d/eve/src/TEveUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveUtil.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return true if interval Q is overlapping within interval M for U1 variables.; /// It is assumed that all values are within the [-2pi, 2pi] interval and; /// minM <= maxM & minQ <= maxQ.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveUtil.cxx:152,variab,variables,152,graf3d/eve/src/TEveUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveUtil.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return true if the header is found in the include paths; /// in this case also fill the full path variable with the full path.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx:184,variab,variable,184,core/dictgen/src/TModuleGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return upper limit on i-th variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:113,variab,variable,113,roofit/roofitcore/src/RooRealBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return value of variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:102,variab,variable,102,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return value of variable as a string; ///; /// - mode = -2 : Print line with ***; /// - mode = -1 : Print column names; /// - mode = 0 : Print column values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:102,variab,variable,102,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return value of variable as a string; ///; /// - mode = -2 : Print line with ***; /// - mode = -1 : Print column names; /// - mode = 0 : Print column values; ///; /// decform contains the requested format (with the same convention as printf).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:102,variab,variable,102,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return value, i.e. error on input variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx:120,variab,variable,120,roofit/roofitcore/src/RooErrorVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Return whether the TStreamerInfos will save the collections in; /// ""member-wise"" order whenever possible. The default is to store member-wise.; /// - kTRUE indicates member-wise storing; /// - kFALSE inddicates object-wise storing; ///; /// A collection can be saved member wise when it contain is guaranteed to be; /// homogeneous. For example std::vector<THit> can be stored member wise,; /// while std::vector<THit*> can not (possible use of polymorphism).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:532,polymorphi,polymorphism,532,core/meta/src/TVirtualStreamerInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx,1,['polymorphi'],['polymorphism']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns an array of all histograms of variables, weighted with sWeights.; /// If histograms have not been already filled, they are filled with default binning 50; /// The order of histograms in the array:; ///; /// x0_species0, x0_species1,..., x1_species0, x1_species1,..., y0_species0, y0_species1,...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:124,variab,variables,124,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns concerning the current status of the minimization; ///; /// User-called; /// Namely, it returns:; /// - FMIN: the best function value found so far; /// - FEDM: the estimated vertical distance remaining to minimum; /// - ERRDEF: the value of UP defining parameter uncertainties; /// - NPARI: the number of currently variable parameters; /// - NPARX: the highest (external) parameter number defined by user; /// - ISTAT: a status integer indicating how good is the covariance; /// matrix:; /// - 0= not calculated at all; /// - 1= approximation only, not accurate; /// - 2= full matrix, but forced positive-definite; /// - 3= full accurate covariance matrix",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:409,variab,variable,409,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns kTRUE if object inherits from TClass cl.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:110,inherit,inherits,110,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['inherit'],['inherits']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns kTRUE if object inherits from class ""classname"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:110,inherit,inherits,110,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['inherit'],['inherits']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns list of font names matching fontname regexp, like ""-*-times-*"".; /// The pattern string can contain any characters, but each asterisk (*); /// is a wildcard for any number of characters, and each question mark (?); /// is a wildcard for a single character. If the pattern string is not in; /// the Host Portable Character Encoding, the result is implementation; /// dependent. Use of uppercase or lowercase does not matter. Each returned; /// string is null-terminated.; ///; /// \param [in] fontname specifies the null-terminated pattern string that can; /// contain wildcard characters; /// \param [in] max specifies the maximum number of names to be returned; /// \param [in] count returns the actual number of font names",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:397,Portab,Portable,397,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['Portab'],['Portable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the *num*-th variable string; /// in case of an error prints an error message and returns an empty string.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:107,variab,variable,107,tree/treeplayer/src/TTreeDrawArgsParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the array of histograms of pdf's of y variables with binning nbins.; /// If histograms have not already; /// been filled, they are filled with default binning 100.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:132,variab,variables,132,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the array of histograms of x variables (not weighted).; /// If histograms have not already; /// been filled, they are filled with default binning 100.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:123,variab,variables,123,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the array of histograms of y variables. If histograms have not already; /// been filled, they are filled with default binning 100.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:123,variab,variables,123,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the ascent of the current font (in pixels).; /// The ascent of a font is the distance from the baseline; /// to the highest position characters extend to",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:238,extend,extend,238,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['extend'],['extend']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the atom identifier associated with the specified ""atom_name""; /// string. If ""only_if_exists"" is False, the atom is created if it does; /// not exist. If the atom name is not in the Host Portable Character; /// Encoding, the result is implementation dependent. Uppercase and; /// lowercase matter; the strings ""thing"", ""Thing"", and ""thinG"" all; /// designate different atoms.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:282,Portab,Portable,282,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['Portab'],['Portable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the default numeric MC generator configuration for all RooAbsReals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:127,config,configuration,127,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the default numeric integration configuration for all RooAbsReals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:126,config,configuration,126,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the descent of the current font (in pixels.; /// The descent is the distance from the base line; /// to the lowest point characters extend to.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:226,extend,extend,226,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['extend'],['extend']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the gauss weight between the 'cell' and a given coordinate 'txvec'.; ///; /// Parameters:; /// - cell - the cell; ///; /// - txvec - the transformed event variables (in [0,1]) (coordinates <0 are; /// set to 0, >1 are set to 1); ///; /// Returns:; ///; /// \f[; /// e^(\frac{-(\frac{d}{\sigma})^2}{2}); /// \f]; ///; /// where:; /// - d - is the euclidean distance between 'txvec' and the point of the 'cell'; /// which is most close to 'txvec' (in order to avoid artefacts because of the; /// form of the cells).; /// - \f$ sigma = \frac{1}{VolFrac} \f$",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelGauss.cxx:249,variab,variables,249,tmva/tmva/src/PDEFoamKernelGauss.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamKernelGauss.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the handler if there exists a handler for the specified URI.; /// The uri can be 0 in which case the first matching plugin handler; /// will be returned. Returns 0 in case handler is not found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:210,plugin,plugin,210,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the histogram of a variable, weighted with sWeights.; /// - If histograms have not been already filled, they are filled with default binning 50; /// - If parameter ixvar!=-1, the histogram of x-variable ixvar is returned for species ispecies; /// - If parameter ixvar==-1, the histogram of y-variable iyexcl is returned for species ispecies; /// - If the histogram has already been filled and the binning is different from the parameter nbins; /// all histograms with old binning will be deleted and refilled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:113,variab,variable,113,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,3,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the histogram of the pdf of variable iyvar for species `#ispecies`, binning nbins.; /// If histograms have not already; /// been filled, they are filled with default binning 100.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:122,variab,variable,122,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the histogram of variable iyvar.If histograms have not already; /// been filled, they are filled with default binning 100.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:111,variab,variable,111,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the measure for the variable importance of variable ""ivar""; /// which is later used in GetVariableImportance() to calculate the; /// relative variable importances.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:114,variab,variable,114,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,3,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the number of layers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMLPAnalyzer.cxx:108,layers,layers,108,math/mlp/src/TMLPAnalyzer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMLPAnalyzer.cxx,1,['layers'],['layers']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the properties of the TClass as a bit field stored as a `Long_t` value.; ///; /// The bit values used for the return value are defined in the enum EProperty (in TDictionary.h); ///; /// Also sets `TObject::fBits` and `fStreamerType` to cache information about the; /// class. The bits stored in `TObject::fBits` are; /// ~~~ {.cpp}; /// kIsTObject : the class inherits from TObject; /// kStartWithTObject: TObject is the left-most class in the inheritance tree; /// kIsForeign : the class doe not have a Streamer method; /// ~~~; /// The value of `fStreamerType` are; /// ~~~ {.cpp}; /// kTObject : the class inherits from TObject; /// kForeign : the class does not have a Streamer method; /// kInstrumented: the class does have a Streamer method; /// kExternal: the class has a free standing way of streaming itself; /// kEmulatedStreamer: the class is missing its shared library.; /// ~~~; ///; /// Implementation note: the data member fProperty has the value -1; /// until it is initialized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:454,inherit,inherits,454,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,3,['inherit'],"['inheritance', 'inherits']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the specialized integrator configuration for _this_ RooAbsReal.; /// If this object has no specialized configuration, a null pointer is returned",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:121,config,configuration,121,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the specialized integrator configuration for _this_ RooAbsReal.; /// If this object has no specialized configuration, a null pointer is returned,; /// unless createOnTheFly is true in which case a clone of the default integrator; /// configuration is created, installed as specialized configuration, and returned",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:121,config,configuration,121,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,8,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the specialized integrator configuration for _this_ RooAbsReal.; /// If this object has no specialized configuration, a null pointer is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:121,config,configuration,121,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns the variable string, i.e. [var1[:var2[:var2[:var4]]]].",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:98,variab,variable,98,tree/treeplayer/src/TTreeDrawArgsParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns this projected dynamic-casted to REveElement.; /// This is needed as class REveProjected is used as secondary; /// inheritance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveProjectionBases.cxx:209,inherit,inheritance,209,graf3d/eve7/src/REveProjectionBases.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveProjectionBases.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns this projected dynamic-casted to TEveElement.; /// This is needed as class TEveProjected is used as secondary; /// inheritance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionBases.cxx:209,inherit,inheritance,209,graf3d/eve/src/TEveProjectionBases.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveProjectionBases.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if all axes are extendable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:115,extend,extendable,115,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['extend'],['extendable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if binning with given name exists.If a given binning; /// exists on the input variable, it will also exists on this linear; /// transformation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:177,variab,variable,177,roofit/roofitcore/src/RooLinearVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if this class inherits from TObject and if the start of; /// the TObject parts is at the very beginning of the objects.; /// Concretely this means that the following code is proper for this class:; /// ~~~ {.cpp}; /// ThisClass *ptr;; /// void *void_ptr = (void)ptr;; /// TObject *obj = (TObject*)void_ptr;; /// ~~~; /// This code would be wrong if 'ThisClass' did not inherit 'first' from; /// TObject.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:113,inherit,inherits,113,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,2,['inherit'],"['inherit', 'inherits']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if variable has a binning named 'name'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:102,variab,variable,102,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns true iff a given module (and its submodules) contains all headers; /// needed by the given ModuleGenerator.; /// The names of all header files that are needed by the ModuleGenerator but are; /// not in the given module will be inserted into the MissingHeader variable.; /// Returns true iff the PCH was successfully generated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:353,variab,variable,353,core/dictgen/src/rootcling_impl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns variable name given its position in the array.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:94,variab,variable,94,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns variable number (positon in array) given its name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:94,variab,variable,94,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns variable value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:94,variab,variable,94,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Returns:; ///; /// * -1.0 : rules are NOT equal, i.e, variables and/or cut directions are wrong; /// * >=0: rules are equal apart from the cutvalue, returns \f$ d = \sqrt{\sum(c1-c2)^2} \f$; ///; /// If not useCutValue, the distance is exactly zero if they are equal",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Rule.cxx:140,variab,variables,140,tmva/tmva/src/Rule.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Rule.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Run a fixed scan or the automatic scan depending on the configuration.; /// Return if needed a copy of the result object which will be managed by the user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx:142,config,configuration,142,roofit/roostats/src/HypoTestInverter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Run the $ROOTSYS/test/Event program in several configurations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx:133,config,configurations,133,test/stress.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stress.cxx,1,['config'],['configurations']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Run the Hypothesis test at a previous configured point; /// (internal function called by RunOnePoint)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx:124,config,configured,124,roofit/roostats/src/HypoTestInverter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx,1,['config'],['configured']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Samples a random number from the standard Normal (Gaussian) Distribution; /// with the given mean and sigma.; /// Uses the Acceptance-complement ratio from W. Hoermann and G. Derflinger; /// This is one of the fastest existing method for generating normal random variables.; /// It is a factor 2/3 faster than the polar (Box-Muller) method used in the previous; /// version of TRandom::Gaus. The speed is comparable to the Ziggurat method (from Marsaglia); /// implemented for example in GSL and available in the MathMore library.; ///; /// REFERENCE: - W. Hoermann and G. Derflinger (1990):; /// The ACR Method for generating normal random variables,; /// OR Spektrum 12 (1990), 181-185.; ///; /// Implementation taken from; /// UNURAN (c) 2000 W. Hoermann & J. Leydold, Institut f. Statistik, WU Wien",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx:349,variab,variables,349,math/mathcore/src/TRandom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Save actual configuration in config file ""filename"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:98,config,configuration,98,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,2,['config'],"['config', 'configuration']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Save input data file from 'cachedir' into the sandbox or create a the file; /// with input data objects",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:132,sandbox,sandbox,132,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['sandbox'],['sandbox']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Save input variable mask; ///; /// If the lx vector size is not the same as inputVars,; /// resize it and fill it with 1; /// NOTE: Always set all to 1; /// if (fRFLx.size() != m_inputVars->size()) {",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx:97,variab,variable,97,tmva/tmva/src/RuleFitAPI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Save primitive as a C++ statement(s) on output stream out.; ///; /// Note the following restrictions in the code generated:; /// - variable bin size not implemented; /// - SetErrorOption not implemented",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx:217,variab,variable,217,hist/hist/src/TProfile2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile2D.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Save primitive as a C++ statement(s) on output stream out; /// Note the following restrictions in the code generated:; /// - variable bin size not implemented; /// - Objects in list of functions not saved (fits); /// - Contours not saved",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1K.cxx:211,variab,variable,211,hist/hist/src/TH1K.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1K.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Save primitives in this canvas as a C++ macro file.; /// This function loops on all the canvas primitives and for each primitive; /// calls the object SavePrimitive function.; /// When outputting floating point numbers, the default precision is 7 digits.; /// The precision can be changed (via system.rootrc) by changing the value; /// of the environment variable ""Canvas.SavePrecision""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:441,variab,variable,441,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Save value of all variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:104,variab,variables,104,roofit/roofitcore/src/RooRealBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Selection method. User can override this method for specialized; /// selection of acceptable functions in fit. Default is to select; /// all. This message is sent during the build-up of the function; /// candidates table once for each set of powers in; /// variables. Notice, that the argument array contains the powers; /// PLUS ONE. For example, to De select the function; /// f = x1^2 * x2^4 * x3^5,; /// this method should return kFALSE if given the argument; /// { 3, 4, 6 }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:343,variab,variables,343,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Send a file to master or slave servers. Returns number of slaves; /// the file was sent to, maybe 0 in case master and slaves have the same; /// file system image, -1 in case of error.; /// If defined, send to worker 'wrk' only.; /// If defined, the full path of the remote path will be rfile.; /// If rfile = ""cache"" the file is copied to the remote cache instead of the sandbox; /// (to copy to the cache on a different name use rfile = ""cache:newname"").; /// The mask 'opt' is an or of ESendFileOpt:; ///; /// kAscii (0x0) if set true ascii file transfer is used; /// kBinary (0x1) if set true binary file transfer is used; /// kForce (0x2) if not set an attempt is done to find out; /// whether the file really needs to be downloaded; /// (a valid copy may already exist in the cache; /// from a previous run); the bit is set by; /// UploadPackage, since the check is done elsewhere.; /// kForward (0x4) if set, ask server to forward the file to slave; /// or submaster (meaningless for slave servers).; /// kCpBin (0x8) Retrieve from the cache the binaries associated; /// with the file; /// kCp (0x10) Retrieve the files from the cache; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:458,sandbox,sandbox,458,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['sandbox'],['sandbox']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set Current pad.; ///; /// When a canvas/pad is divided via TPad::Divide, one can directly; /// set the current path to one of the subdivisions.; /// See TPad::Divide for the convention to number sub-pads.; ///; /// Returns the new current pad, or 0 in case of failure.; ///; /// For example:; /// ~~~ {.cpp}; /// c1.Divide(2,3); // create 6 pads (2 divisions along x, 3 along y).; /// ~~~; /// To set the current pad to the bottom right pad, do; /// ~~~ {.cpp}; /// c1.cd(6);; /// ~~~; /// Note1: c1.cd() is equivalent to c1.cd(0) and sets the current pad; /// to c1 itself.; ///; /// Note2: after a statement like c1.cd(6), the global variable gPad; /// points to the current pad. One can use gPad to set attributes; /// of the current pad.; ///; /// Note3: One can get a pointer to one of the sub-pads of pad with:; /// TPad *subpad = (TPad*)pad->GetPad(subpadnumber);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:723,variab,variable,723,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set DISPLAY environment variable based on utmp entry. Only for UNIX.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:110,variab,variable,110,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set X variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCutG.cxx:92,variab,variable,92,graf2d/graf/src/TCutG.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCutG.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set Y variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCutG.cxx:92,variab,variable,92,graf2d/graf/src/TCutG.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCutG.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set a fit or plotting range.; /// Ranges can be selected for e.g. fitting, plotting or integration. Note that multiple; /// variables can have ranges with the same name, so multi-dimensional PDFs can be sliced.; /// See also the tutorial rf203_ranges.C; /// \param[in] name Name this range (so it can be selected later for fitting or; /// plotting). If the name is `nullptr`, the function sets the limits of the default range.; /// \param[in] min Miniminum of the range.; /// \param[in] max Maximum of the range.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:210,variab,variables,210,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set a perspective camera to supplied configuration - note this; /// does not need to be the current camera - though you will not see; /// the effect if it is not.; ///; /// - 'camera' defines the persp camera - one of kCameraPerspXOZ, kCameraPerspYOZ, kCameraPerspXOY; /// - 'fov' - field of view (lens angle) in degrees (clamped to 0.1 - 170.0); /// - 'dolly' - distance from 'center'; /// - 'center' - world position from which dolly/hRotate/vRotate are measured; /// camera rotates round this, always facing in (in center of viewport); /// - 'hRotate' - horizontal rotation from initial configuration in radians; /// - 'vRotate' - vertical rotation from initial configuration in radians",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx:123,config,configuration,123,graf3d/gl/src/TGLViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx,3,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set a plugin.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNode.cxx:92,plugin,plugin,92,geom/geom/src/TGeoNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoNode.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set a tree variable alias.; ///; /// Set an alias for an expression/formula based on the tree 'variables'.; ///; /// The content of 'aliasName' can be used in TTreeFormula (i.e. TTree::Draw,; /// TTree::Scan, TTreeViewer) and will be evaluated as the content of; /// 'aliasFormula'.; ///; /// If the content of 'aliasFormula' only contains symbol names, periods and; /// array index specification (for example event.fTracks[3]), then; /// the content of 'aliasName' can be used as the start of symbol.; ///; /// If the alias 'aliasName' already existed, it is replaced by the new; /// value.; ///; /// When being used, the alias can be preceded by an eventual 'Friend Alias'; /// (see TTree::GetFriendAlias); ///; /// Return true if it was added properly.; ///; /// For example:; /// ~~~ {.cpp}; /// tree->SetAlias(""x1"",""(tdc1[1]-tdc1[0])/49"");; /// tree->SetAlias(""y1"",""(tdc1[3]-tdc1[2])/47"");; /// tree->SetAlias(""x2"",""(tdc2[1]-tdc2[0])/49"");; /// tree->SetAlias(""y2"",""(tdc2[3]-tdc2[2])/47"");; /// tree->Draw(""y2-y1:x2-x1"");; ///; /// tree->SetAlias(""theGoodTrack"",""event.fTracks[3]"");; /// tree->Draw(""theGoodTrack.fPx""); // same as ""event.fTracks[3].fPx""; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:97,variab,variable,97,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set all the branches in this TTree to be in decomposed object mode; /// (also known as MakeClass mode).; ///; /// For MakeClass mode 0, the TTree expects the address where the data is stored; /// to be set by either the user or the TTree to the address of a full object; /// through the top level branch.; /// For MakeClass mode 1, this address is expected to point to a numerical type; /// or C-style array (variable or not) of numerical type, representing the; /// primitive data members.; /// The function's primary purpose is to allow the user to access the data; /// directly with numerical type variable rather than having to have the original; /// set of classes (or a reproduction thereof).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:495,variab,variable,495,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set an orthographic camera to supplied configuration - note this; /// does not need to be the current camera - though you will not see; /// the effect if it is not.; ///; /// 'camera' defines the ortho camera - one of kCameraOrthoXOY / XOZ / ZOY; /// 'left' / 'right' / 'top' / 'bottom' define the WORLD coordinates which; /// correspond with the left/right/top/bottom positions on the GL viewer viewport; /// E.g. for kCameraOrthoXOY camera left/right are X world coords,; /// top/bottom are Y world coords; /// As this is an orthographic camera the other axis (in eye direction) is; /// no relevant. The near/far clip planes are set automatically based in scene; /// contents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx:125,config,configuration,125,graf3d/gl/src/TGLViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set branch status to Process or DoNotProcess.; ///; /// When reading a Tree, by default, all branches are read.; /// One can speed up considerably the analysis phase by activating; /// only the branches that hold variables involved in a query.; ///; /// bname is the name of a branch.; ///; /// - if bname=""*"", apply to all branches.; /// - if bname=""xxx*"", apply to all branches with name starting with xxx; ///; /// see TRegexp for wildcarding options; ///; /// - status = 1 branch will be processed; /// - = 0 branch will not be processed; ///; /// Example:; ///; /// Assume a tree T with sub-branches a,b,c,d,e,f,g,etc..; /// when doing T.GetEntry(i) all branches are read for entry i.; /// to read only the branches c and e, one can do; /// ~~~ {.cpp}; /// T.SetBranchStatus(""*"",0); //disable all branches; /// T.SetBranchStatus(""c"",1);; /// T.setBranchStatus(""e"",1);; /// T.GetEntry(i);; /// ~~~; /// bname is interpreted as a wild-carded TRegexp (see TRegexp::MakeWildcard).; /// Thus, ""a*b"" or ""a.*b"" matches branches starting with ""a"" and ending with; /// ""b"", but not any other branch with an ""a"" followed at some point by a; /// ""b"". For this second behavior, use ""*a*b*"". Note that TRegExp does not; /// support '|', and so you cannot select, e.g. track and shower branches; /// with ""track|shower"".; ///; /// __WARNING! WARNING! WARNING!__; ///; /// SetBranchStatus is matching the branch based on match of the branch; /// 'name' and not on the branch hierarchy! In order to be able to; /// selectively enable a top level object that is 'split' you need to make; /// sure the name of the top level branch is prefixed to the sub-branches'; /// name (by adding a dot ('.') at the end of the Branch creation and use the; /// corresponding bname.; ///; /// I.e If your Tree has been created in split mode with a parent branch ""parent.""; /// (note the trailing dot).; /// ~~~ {.cpp}; /// T.SetBranchStatus(""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:299,variab,variables,299,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set depth of all children inheriting from REveTrackProjected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveTrackProjected.cxx:112,inherit,inheriting,112,graf3d/eve7/src/REveTrackProjected.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveTrackProjected.cxx,1,['inherit'],['inheriting']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set depth of all children inheriting from TEveTrackProjected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackProjected.cxx:112,inherit,inheriting,112,graf3d/eve/src/TEveTrackProjected.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackProjected.cxx,1,['inherit'],['inheriting']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set depth of all children of el inheriting from REveTrackProjected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveTrackProjected.cxx:118,inherit,inheriting,118,graf3d/eve7/src/REveTrackProjected.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveTrackProjected.cxx,1,['inherit'],['inheriting']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set depth of all children of el inheriting from TEveTrackProjected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackProjected.cxx:118,inherit,inheriting,118,graf3d/eve/src/TEveTrackProjected.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackProjected.cxx,1,['inherit'],['inheriting']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set first 1, 2, 3 or 4 variables (e.g. x, y, z and t); /// and evaluate formula.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TFormula.h:109,variab,variables,109,hist/hist/inc/TFormula.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TFormula.h,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set label for bin.; /// If no label list exists, it is created. If all the bins have labels, the; /// axis becomes alphanumeric and extendable.; /// New labels will not be added with the Fill method but will end-up in the; /// underflow bin. See documentation of TAxis::FindBin(const char*)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx:218,extend,extendable,218,hist/hist/src/TAxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx,1,['extend'],['extendable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set link options in the ClassTree object.; ///; /// - ""C"" show References from code; /// - ""H"" show ""Has a"" relations; /// - ""M"" show Multiple Inheritance; /// - ""R"" show References from data members",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPaveClass.cxx:229,Inherit,Inheritance,229,graf2d/gpad/src/TPaveClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPaveClass.cxx,1,['Inherit'],['Inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set link options in the ClassTree object; ///; /// - ""C"" show References from code; /// - ""H"" show Has a relations; /// - ""M"" show Multiple Inheritance; /// - ""R"" show References from data members",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:226,Inherit,Inheritance,226,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,1,['Inherit'],['Inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set main-transparency via float alpha variable.; /// Value of alpha is clamped t0 [0, 1].",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx:124,variab,variable,124,graf3d/eve/src/TEveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set maximum step angle and rebuild tracks.; /// WARNING -- this method / variable was mis-named.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:159,variab,variable,159,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set number of entries to estimate variable limits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:120,variab,variable,120,tree/treeplayer/src/TSelectorDraw.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set number of entries to estimate variable limits.; /// If n is -1, the estimate is set to be the current maximum; /// for the tree (i.e. GetEntries() + 1); /// If n is less than -1, the behavior is undefined.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:120,variab,variable,120,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set or extend the macro search path. Static utility function.; /// If newpath=0 or """" reset to value specified in the rootrc file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:93,extend,extend,93,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,1,['extend'],['extend']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set point number n to (x, y); /// If n is greater than the current size, the arrays are automatically; /// extended.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPolyLine.cxx:193,extend,extended,193,graf2d/graf/src/TPolyLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPolyLine.cxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set point number n.; /// if n is greater than the current size, the arrays are automatically; /// extended",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPolyMarker.cxx:184,extend,extended,184,hist/hist/src/TPolyMarker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPolyMarker.cxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set relevant environment variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx:111,variab,variables,111,net/rpdutils/src/DaemonUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set the ""complementarity"" component of the residuals to the pairwise products of; /// the complementary variables plus a constant alpha .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpResidual.cxx:190,variab,variables,190,math/quadp/src/TQpResidual.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpResidual.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set the actual range used for the convolution.; /// In case a or b are -inf or +inf and FFT convolution is used, then the; /// range of the first function will be used and extended by the default extra range fraction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1Convolution.cxx:258,extend,extended,258,hist/hist/src/TF1Convolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1Convolution.cxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set the current directory to null.; /// This is called from the TContext destructor. Since the destructor is; /// inline, we do not want to have it directly use a global variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx:256,variab,variable,256,core/base/src/TDirectory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDirectory.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set the given configuration as default numeric MC generator; /// configuration for this object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:100,config,configuration,100,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set the given integrator configuration as default numeric integration; /// configuration for this object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:111,config,configuration,111,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set the kMoreLogLabels bit flag. When this option is selected more labels are; /// drawn when in logarithmic scale and there is a small number of decades (less than 3).; /// Note that this option is automatically inherited from TAxis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx:299,inherit,inherited,299,graf2d/graf/src/TGaxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx,1,['inherit'],['inherited']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set the label associated with this variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:121,variab,variable,121,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set the manager as handling a formula with multiple variable dimensions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:138,variab,variable,138,tree/treeplayer/src/TTreeFormulaManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set the maximum power to be considered in the fit for each; /// variable. See also; /// <a href=""#TMultiDimFit:description"">class description</a>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:150,variab,variable,150,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set the numeric value (time format). In case of kNESMinSecCent, pass the; /// centiseconds in the hour variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx:189,variab,variable,189,gui/gui/src/TGNumberEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set the offset at the top of the picture; /// The default offset is computed automatically taking into account; /// classes not inheriting from TObject.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:214,inherit,inheriting,214,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,1,['inherit'],['inheriting']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set the prefetching mode of this file.; ///; /// If 'setPrefetching', enable the asynchronous prefetching; /// (using TFilePrefetch) and if the gEnv and rootrc; /// variable Cache.Directory is set, also enable the local; /// caching of the prefetched blocks.; /// if 'setPrefetching', the old prefetcher is enabled is; /// the gEnv and rootrc variable is TFile.AsyncReading",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheRead.cxx:251,variab,variable,251,io/io/src/TFileCacheRead.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheRead.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set the sandbox path from ' Proof.Sandbox' or the alternative var 'rc'.; /// Use the existing setting or the default if nothing is found.; /// If 'assert' is kTRUE, make also sure that the path exists.; /// Return 0 on success, -1 on failure",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:94,sandbox,sandbox,94,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,"['Sandbox', 'sandbox']","['Sandbox', 'sandbox']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set the user parameter for the function selection. The bigger the; /// limit, the more functions are used. The meaning of this variable; /// is defined in the; /// <a href=""#TMultiDimFit:description"">class description</a>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:213,variab,variable,213,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set the variable values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:94,variab,variable,94,tree/treeviewer/src/TParallelCoordVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set up the static configuration variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSSLSocket.cxx:104,config,configuration,104,net/net/src/TSSLSocket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSSLSocket.cxx,2,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set value of variable to 'value'. If 'value' is outside; /// range of object, clip value into range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:99,variab,variable,99,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set value of variable to `value`. If `value` is outside of the; /// range named `rangeName`, clip value into that range.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:99,variab,variable,99,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Set whether the learning period is started with a prefilling of the; /// cache and which type of prefilling is used.; /// The two value currently supported are:; /// - TTreeCache::kNoPrefill disable the prefilling; /// - TTreeCache::kAllBranches fill the cache with baskets from all branches.; /// The default prefilling behavior can be controlled by setting; /// TTreeCache.Prefill or the environment variable ROOT_TTREECACHE_PREFILL.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:488,variab,variable,488,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Sets point number n.; /// If n is greater than the current size, the arrays are automatically; /// extended.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx:185,extend,extended,185,hist/hist/src/TGraph2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the access and secret keys from the environmental variables, if; /// they are both set. Sets the security session token if it is given.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:141,variab,variables,141,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the normalization variables.; /// Any input neuron will return (branch-mean)/RMS.; /// When UseBranch is called, mean and RMS are automatically set; /// to the actual branch mean and RMS.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TNeuron.cxx:109,variab,variables,109,math/mlp/src/TNeuron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TNeuron.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Sets the prefix for the special variables of this NLL, like weights or bin; /// volumes.; /// \param[in] prefix The prefix to add to the observables and weight names.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx:118,variab,variables,118,roofit/roofitcore/src/RooNLLVarNew.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Sets variable value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:91,variab,variable,91,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Setup Include and Macro paths.; /// Since inclusion into ROOT this does nothing but could; /// potentially be reactivated if some common macros are established; /// and shipped with binary ROOT (in macros/eve). For example, these; /// might be used to spawn specific GUI / GL configurations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveUtil.cxx:362,config,configurations,362,graf3d/eve/src/TEveUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveUtil.cxx,1,['config'],['configurations']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Setup Pivoting variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompSparse.cxx:101,variab,variables,101,math/matrix/src/TDecompSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompSparse.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Setup the variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpProbDens.cxx:96,variab,variables,96,math/quadp/src/TQpProbDens.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpProbDens.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Simple recursive algorithm to find the permutations of; /// n natural numbers, not necessarily all distinct; /// adapted from CERNLIB routine PERMU.; /// The input array has to be initialised with a non descending; /// sequence. The method returns kFALSE when; /// all combinations are exhausted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:199,adapt,adapted,199,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['adapt'],['adapted']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Slot connected to the OffSetSlider that; /// changes the origin of the histogram inbetween a binwidth;; /// rebin the histogram with the new Offset given by the slider.; /// problem: histogram with variable binwidth??",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx:284,variab,variable,284,gui/ged/src/TH2Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Slot connected to the OffSetSlider.; /// It changes the origin of the histogram inbetween a binwidth;; /// rebin the histogram with the new offset given by the slider.; /// problem: histogram with variable binwidth??",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx:283,variab,variable,283,gui/ged/src/TH2Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH2Editor.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Slot to add a variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:100,variab,variable,100,tree/treeviewer/src/TParallelCoordEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Slot to delete a variable().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:103,variab,variable,103,tree/treeviewer/src/TParallelCoordEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Slot to delete a variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpiderEditor.cxx:103,variab,variable,103,tree/treeviewer/src/TSpiderEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpiderEditor.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Slot to select a variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:103,variab,variable,103,tree/treeviewer/src/TParallelCoordEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Smooth bin contents of this 2-d histogram using kernel algorithms; /// similar to the ones used in the raster graphics community.; /// Bin contents in the active range are replaced by their smooth values.; /// The algorithm retains the input dimension by using Kernel Crop at the input boundaries.; /// Kernel Crop sets any pixel in the kernel that extends past the input to zero and adjusts the; /// normalization accordingly.; /// If Errors are defined via Sumw2, they are also scaled and computed.; /// However, note the resulting errors will be correlated between different-bins, so; /// the errors should not be used blindly to perform any calculation involving several bins,; /// like fitting the histogram. One would need to compute also the bin by bin correlation matrix.; ///; /// 3 kernels are proposed k5a, k5b and k3a.; /// k5a and k5b act on 5x5 cells (i-2,i-1,i,i+1,i+2, and same for j); /// k5b is a bit more stronger in smoothing; /// k3a acts only on 3x3 cells (i-1,i,i+1, and same for j).; /// By default the kernel ""k5a"" is used. You can select the kernels ""k5b"" or ""k3a""; /// via the option argument.; /// If TAxis::SetRange has been called on the x or/and y axis, only the bins; /// in the specified range are smoothed.; /// In the current implementation if the first argument is not used (default value=1).; ///; /// implementation by David McKee (dmckee@bama.ua.edu). Extended by Rene Brun",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:435,extend,extends,435,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,2,"['Extend', 'extend']","['Extended', 'extends']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Smooth data with Super smoother.; /// Smooth the (x, y) values by Friedman's ``super smoother''.; ///; /// \param[in] grin graph for smoothing; /// \param[in] option specific options; /// \param[in] span the fraction of the observations in the span of the running lines; /// smoother, or 0 to choose this by leave-one-out cross-validation.; /// \param[in] bass controls the smoothness of the fitted curve.; /// Values of up to 10 indicate increasing smoothness.; /// \param[in] isPeriodic if TRUE, the x values are assumed to be in [0, 1]; /// and of period 1.; /// \param[in] w case weights; ///; /// Details:; ///; /// supsmu is a running lines smoother which chooses between three spans for; /// the lines. The running lines smoothers are symmetric, with k/2 data points; /// each side of the predicted point, and values of k as 0.5 * n, 0.2 * n and; /// 0.05 * n, where n is the number of data points. If span is specified,; /// a single smoother with span span * n is used.; ///; /// The best of the three smoothers is chosen by cross-validation for each; /// prediction. The best spans are then smoothed by a running lines smoother; /// and the final prediction chosen by linear interpolation.; ///; /// The FORTRAN code says: ``For small samples (n < 40) or if there are; /// substantial serial correlations between observations close in x - value,; /// then a prespecified fixed span smoother (span > 0) should be used.; /// Reasonable span values are 0.2 to 0.4.''; ///; /// References:; /// - Friedman, J. H. (1984) SMART User's Guide.; /// Laboratory for Computational Statistics,; /// Stanford University Technical Report No. 1.; /// - Friedman, J. H. (1984) A variable span scatterplot smoother.; /// Laboratory for Computational Statistics,; /// Stanford University Technical Report No. 5.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphSmooth.cxx:1759,variab,variable,1759,hist/hist/src/TGraphSmooth.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphSmooth.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Special plot method for 'X-Y' datasets used in \f$ \chi^2 \f$ fitting.; /// For general plotting, see RooAbsData::plotOn().; ///; /// These datasets; /// have one observable (X) and have weights (Y) and associated errors.; /// <table>; /// <tr><th> Contents options <th> Effect; /// <tr><td> YVar(RooRealVar& var) <td> Designate specified observable as 'y' variable; /// If not specified, the event weight will be the y variable; /// <tr><th> Histogram drawing options <th> Effect; /// <tr><td> DrawOption(const char* opt) <td> Select ROOT draw option for resulting TGraph object; /// <tr><td> LineStyle(Int_t style) <td> Select line style by ROOT line style code, default is solid; /// <tr><td> LineColor(Int_t color) <td> Select line color by ROOT color code, default is black; /// <tr><td> LineWidth(Int_t width) <td> Select line with in pixels, default is 3; /// <tr><td> MarkerStyle(Int_t style) <td> Select the ROOT marker style, default is 21; /// <tr><td> MarkerColor(Int_t color) <td> Select the ROOT marker color, default is black; /// <tr><td> MarkerSize(double size) <td> Select the ROOT marker size; /// <tr><td> Rescale(double factor) <td> Apply global rescaling factor to histogram; /// <tr><th> Misc. other options <th> Effect; /// <tr><td> Name(const chat* name) <td> Give curve specified name in frame. Useful if curve is to be referenced later; /// <tr><td> Invisible(bool flag) <td> Add curve to frame, but do not display. Useful in combination AddTo(); /// </table>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:443,variab,variable,443,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Special version of RooAbsReal::createProjection that deals with; /// projections of projections. Instead of integrating twice, a new; /// RooProjectedPdf is returned that is configured to perform the; /// complete integration in one step",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx:260,config,configured,260,roofit/roofitcore/src/RooProjectedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProjectedPdf.cxx,1,['config'],['configured']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Specify class which typename will not be stored in JSON; /// Several classes can be configured; /// To exclude typeinfo for all classes, call TBufferJSON::SetTypenameTag("""")",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx:170,config,configured,170,io/io/src/TBufferJSON.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx,1,['config'],['configured']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Split variables and parse name and parameters in brackets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:92,variab,variables,92,tree/treeplayer/src/TTreeDrawArgsParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Splits the entry in fDataSet to get the selected variables and cuts; /// from the text.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx:135,variab,variables,135,gui/fitpanel/src/TFitEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TFitEditor.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Start a PROOF session on a specific cluster. If cluster is 0 (the; /// default) then the PROOF Session Viewer GUI pops up and 0 is returned.; /// If cluster is ""lite://"" we start a PROOF-lite session.; /// If cluster is """" (empty string) then we connect to the cluster specified; /// by 'Proof.LocalDefault', defaulting to ""lite://"".; /// If cluster is ""pod://"" (case insensitive), then we connect to a PROOF cluster; /// managed by PROOF on Demand (PoD, http://pod.gsi.de ).; /// Via conffile a specific PROOF config file in the confir directory can be specified.; /// Use loglevel to set the default loging level for debugging.; /// The appropriate instance of TProofMgr is created, if not; /// yet existing. The instantiated TProof object is returned.; /// Use TProof::cd() to switch between PROOF sessions.; /// For more info on PROOF see the TProof ctor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:597,config,config,597,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['config'],['config']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Start the log viewer window usign the plugin manager",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:124,plugin,plugin,124,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Starts new block of tests; /// In web mode configure number of batch images",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressGraphics.cxx:129,config,configure,129,test/stressGraphics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressGraphics.cxx,1,['config'],['configure']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Static function returning a pointer to a new TVirtualStreamerInfo object.; /// If the Info factory does not exist, it is created via the plugin manager.; /// In reality the factory is an empty TStreamerInfo object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:223,plugin,plugin,223,core/meta/src/TVirtualStreamerInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Static function; /// based on R function rPsort: adapted to C++ by Christian Stratowa; /// (R source file: R_sort.c by R Development Core Team (C) 1999-2001)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphSmooth.cxx:135,adapt,adapted,135,hist/hist/src/TGraphSmooth.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphSmooth.cxx,1,['adapt'],['adapted']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Static method returning the appropriate TProofMgr object using; /// the plugin manager.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:158,plugin,plugin,158,proof/proof/src/TProofMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Statistical test of compatibility in shape between; /// THIS histogram and h2, using Kolmogorov test.; /// Default: Ignore under- and overflow bins in comparison; ///; /// option is a character string to specify options; /// - ""U"" include Underflows in test; /// - ""O"" include Overflows; /// - ""N"" include comparison of normalizations; /// - ""D"" Put out a line of ""Debug"" printout; /// - ""M"" Return the Maximum Kolmogorov distance instead of prob; ///; /// The returned function value is the probability of test; /// (much less than one means NOT compatible); ///; /// The KS test uses the distance between the pseudo-CDF's obtained; /// from the histogram. Since in 2D the order for generating the pseudo-CDF is; /// arbitrary, two pairs of pseudo-CDF are used, one starting from the x axis the; /// other from the y axis and the maximum distance is the average of the two maximum; /// distances obtained.; ///; /// Code adapted by Rene Brun from original HBOOK routine HDIFF",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:1008,adapt,adapted,1008,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['adapt'],['adapted']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Store given arrays of integer codes, and up to four RooArgSets in; /// the registry (each setX pointer may be null). The registry; /// clones all RooArgSets internally so the RooArgSets passed as; /// arguments do not need to live beyond the store() call. The return; /// value is a unique master code for the given configuration of; /// integers and RooArgSets. If an identical combination is; /// previously stored in the registry no objects are stored and the; /// unique code of the existing entry is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAICRegistry.cxx:402,config,configuration,402,roofit/roofitcore/src/RooAICRegistry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAICRegistry.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Store given binning with this variable under the given name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx:116,variab,variable,116,roofit/roofitcore/src/RooErrorVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooErrorVar.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Store provided object as JSON structure; /// Allows to configure different TBufferJSON properties before converting object into JSON; /// Actual object class must be specified here; /// Method can be safely called once - after that TBufferJSON instance must be destroyed; /// Code should look like:; ///; /// auto obj = new UserClass();; /// TBufferJSON buf;; /// buf.SetCompact(TBufferJSON::kNoSpaces); // change any other settings in TBufferJSON; /// auto json = buf.StoreObject(obj, TClass::GetClass<UserClass>());; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx:141,config,configure,141,io/io/src/TBufferJSON.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferJSON.cxx,1,['config'],['configure']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Stream an object inheriting from TObject using its streamer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:103,inherit,inheriting,103,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['inherit'],['inheriting']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Stream an object of TBaseClass. Triggers the calculation of the; /// cache variables to store them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx:161,variab,variables,161,core/meta/src/TBaseClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Submits query to SQL server.; ///; /// | Flag Value | Effect|; /// |------------|-------|; /// | 0 | result is not interesting and will be deleted|; /// | 1 | return result of submitted query; /// | 2 | results is may be necessary for long time Oracle plugin do not support working with several TSQLResult; /// objects, therefore explicit deep copy will be produced|; ///; /// If ok!=0, it will contains kTRUE is Query was successful, otherwise kFALSE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:338,plugin,plugin,338,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// THREE-DIMENSIONAL CLASSICAL PEAK SEARCH FUNCTION; /// This function searches for peaks in source spectrum using; /// the algorithm based on smoothed second differences.; ///; /// Function parameters:; /// - source-pointer to the matrix of source spectrum; /// - ssizex-x length of source spectrum; /// - ssizey-y length of source spectrum; /// - ssizez-z length of source spectrum; /// - sigma-sigma of searched peaks, for details we refer to manual; /// - threshold-threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:708,variab,variable,708,hist/spectrum/src/TSpectrum3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// TLegendEntry normal constructor for one entry in a TLegend.; ///; /// obj is the object this entry will represent. If obj has; /// line/fill/marker attributes, then the TLegendEntry will display; /// these attributes.; ///; /// label is the text that will describe the entry, it is displayed using; /// TLatex, so may have a complex format.; ///; /// option may have values; /// - L draw line associated w/ TAttLine if obj inherits from TAttLine; /// - P draw polymarker assoc. w/ TAttMarker if obj inherits from TAttMarker; /// - F draw a box with fill associated w/ TAttFill if obj inherits TAttFill; /// default is object = ""LPF""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLegendEntry.cxx:509,inherit,inherits,509,graf2d/graf/src/TLegendEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLegendEntry.cxx,3,['inherit'],['inherits']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// TODO --> adapt to variable,target,spectator selection; /// default transformation output; /// --> only indicate that transformation occurred",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx:95,adapt,adapt,95,tmva/tmva/src/VariableTransformBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx,2,"['adapt', 'variab']","['adapt', 'variable']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// TODO --> adapt to variable,target,spectator selection; /// method to calculate minimum, maximum, mean, and RMS for all; /// variables used in the MVA",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx:95,adapt,adapt,95,tmva/tmva/src/VariableTransformBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx,3,"['adapt', 'variab']","['adapt', 'variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// TODO --> adapt to variable,target,spectator selection; /// update min and max of a given variable (target) and a given transformation method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx:95,adapt,adapt,95,tmva/tmva/src/VariableTransformBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx,3,"['adapt', 'variab']","['adapt', 'variable']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// TObject constructor. It sets the two data words of TObject to their; /// initial values. The unique ID is set to 0 and the status word is; /// set depending if the object is created on the stack or allocated; /// on the heap. Depending on the ROOT environment variable ""Root.ObjStat""; /// (see TEnv) the object is added to the global TObjectTable for; /// bookkeeping.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TObject.h:346,variab,variable,346,core/base/inc/TObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TObject.h,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// TXMLDocument destructor.; /// Free the global variables that may; /// have been allocated by the parser.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLDocument.cxx:132,variab,variables,132,io/xmlparser/src/TXMLDocument.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLDocument.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Take a snap shot of current collection contents.; /// An owning collection is returned containing clones of; /// - Elements in this collection; /// - External dependents of all elements and recursively any dependents of those dependents; /// (if deepCopy flag is set); ///; /// This is useful to save the values of variables or parameters. It doesn't require; /// deep copying if the parameters are direct members of the collection.; ///; /// If deepCopy is specified, the client-server links between the cloned; /// list elements and the cloned external dependents are reconnected to; /// each other, making the snapshot a completely self-contained entity.; ///; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:401,variab,variables,401,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Takes as input a string of values for multigaussian gammas and splits it, filling the; /// gamma vector required by the SVKernelFunction. Example: ""GammaList=0.1,0.2,0.3"" would; /// make a vector with Gammas of 0.1,0.2 & 0.3 corresponding to input variables 1,2 & 3; /// respectively.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodSVM.cxx:334,variab,variables,334,tmva/tmva/src/MethodSVM.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodSVM.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Terminate Session : save configuration, clean temporary files and close; /// Proof connections.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx:111,config,configuration,111,gui/sessionviewer/src/TSessionViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TSessionViewer.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Terminate the application. Reset the terminal to sane mode and call; /// the logoff macro defined via Rint.Logoff environment variable.; /// @note The function does not return, unless the class has; /// been told to return from Run(), by a call to SetReturnFromRun().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx:212,variab,variable,212,core/rint/src/TRint.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TRint.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Test method for TSpline5; ///; /// ~~~ {.cpp}; /// n number of data points.; /// m 2*m-1 is order of spline.; /// m = 2 always for third spline.; /// nn,nm1,mm,; /// mm1,i,k,; /// j,jj temporary integer variables.; /// z,p temporary double precision variables.; /// x[n] the sequence of knots.; /// y[n] the prescribed function values at the knots.; /// a[200][4] two dimensional array whose columns are; /// the computed spline coefficients; /// diff[3] maximum values of differences of values and; /// derivatives to right and left of knots.; /// com[3] maximum values of coefficients.; /// ~~~; ///; /// test of TSpline3 with non equidistant knots and; /// equidistant knots follows.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx:289,variab,variables,289,hist/hist/src/TSpline.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Test method for TSpline5; ///; /// ~~~ {.cpp}; /// n number of data points.; /// m 2*m-1 is order of spline.; /// m = 3 always for quintic spline.; /// nn,nm1,mm,; /// mm1,i,k,; /// j,jj temporary integer variables.; /// z,p temporary double precision variables.; /// x[n] the sequence of knots.; /// y[n] the prescribed function values at the knots.; /// a[200][6] two dimensional array whose columns are; /// the computed spline coefficients; /// diff[5] maximum values of differences of values and; /// derivatives to right and left of knots.; /// com[5] maximum values of coefficients.; /// ~~~; ///; /// test of TSpline5 with non equidistant knots and; /// equidistant knots follows.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx:291,variab,variables,291,hist/hist/src/TSpline.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Test the different configurations/states of a split button.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressGUI.cxx:105,config,configurations,105,test/stressGUI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressGUI.cxx,1,['config'],['configurations']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// The Fill...Hist() methods fill the histograms with the real limits on the variables; /// This method allows to refill the specified histogram with user-set boundaries min and max; ///; ///Parameters:; ///; /// - type = 1 - histogram of x variable `#%nvar`; /// - type = 2 - histogram of y variable `#%nvar`; /// - type = 3 - histogram of y_pdf for y `#%nvar` and species #%nspecies`; /// - type = 4 - histogram of x variable `#%nvar`, species `#%nspecies`, WITH sWeights; /// - type = 5 - histogram of y variable `#%nvar`, species `#%nspecies`, WITH sWeights",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:160,variab,variables,160,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,5,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// The Init() function is called when the selector needs to initialize; /// a new tree or chain. Typically here the branch addresses and branch; /// pointers of the tree will be set.; /// It is normally not necessary to make changes to the generated; /// code, but the routine can be extended by the user if needed.; /// Init() will be called many times when running on PROOF; /// (once per file to be processed).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx:367,extend,extended,367,tree/treeplayer/src/TSelectorEntries.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// The LANDAU function.; ///; /// mu is a location parameter and correspond approximately to the most probable value; /// and sigma is a scale parameter (not the sigma of the full distribution which is not defined); /// Note that for mu=0 and sigma=1 (default values) the exact location of the maximum of the distribution; /// (most proper value) is at x = -0.22278; /// This function has been adapted from the CERNLIB routine G110 denlan.; /// If norm=kTRUE (default is kFALSE) the result is divided by sigma",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:477,adapt,adapted,477,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['adapt'],['adapted']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// The amount by which the current variables violate the non-negativity constraints.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpVar.cxx:118,variab,variables,118,math/quadp/src/TQpVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpVar.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// The config file field may contain special instructions which need to be; /// parsed at the beginning, e.g. for debug runs with valgrind.; /// Several options can be given separated by a ','",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:90,config,config,90,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['config'],['config']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// The db should be of the form: `<dbms>://<host>[:<port>][/<database>]`,; /// e.g.: `mysql://pcroot.cern.ch:3456/test`, `oracle://srv1.cern.ch/main`,; /// `pgsql://...` or `sqlite://<database>...`; /// The uid is the username and pw the password that should be used for; /// the connection. Depending on the `<dbms>` the shared library (plugin); /// for the selected system will be loaded. When the connection could not; /// be opened 0 is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx:421,plugin,plugin,421,net/net/src/TSQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// The grid should be of the form: `<grid>://<host>[:<port>]`,; /// e.g.: alien://alice.cern.ch; /// The uid is the username and pw the password that should be used for; /// the connection. Depending on the `<grid>` the shared library (plugin); /// for the selected system will be loaded. When the connection could not; /// be opened 0 is returned. For AliEn the supported options are:; /// -domain=`<domain name>`; /// -debug=`<debug level from 1 to 10>`; /// Example: ""-domain=cern.ch -debug=5""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TGrid.cxx:319,plugin,plugin,319,net/net/src/TGrid.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TGrid.cxx,1,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// The network is described by a simple string:; /// The input/output layers are defined by giving; /// the branch names separated by comas.; /// Hidden layers are just described by the number of neurons.; /// The layers are separated by colons.; ///; /// Ex: ""x,y:10:5:f""; ///; /// The output can be prepended by '@' if the variable has to be; /// normalized.; /// The output can be followed by '!' to use Softmax neurons for the; /// output layer only.; ///; /// Ex: ""x,y:10:5:c1,c2,c3!""; ///; /// Input and outputs are taken from the TTree given as second argument.; /// training and test are the two TEventLists defining events; /// to be used during the neural net training.; /// Both the TTree and the TEventLists can be defined in the constructor,; /// or later with the suited setter method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:153,layers,layers,153,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,8,"['layers', 'variab']","['layers', 'variable']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// The network is described by a simple string:; /// The input/output layers are defined by giving; /// the branch names separated by comas.; /// Hidden layers are just described by the number of neurons.; /// The layers are separated by colons.; ///; /// Ex: ""x,y:10:5:f""; ///; /// The output can be prepended by '@' if the variable has to be; /// normalized.; /// The output can be followed by '!' to use Softmax neurons for the; /// output layer only.; ///; /// Ex: ""x,y:10:5:c1,c2,c3!""; ///; /// Input and outputs are taken from the TTree given as second argument.; /// training and test are two cuts (see TTreeFormula) defining events; /// to be used during the neural net training and testing.; ///; /// Example: ""Entry$%2"", ""(Entry$+1)%2"".; ///; /// Both the TTree and the cut can be defined in the constructor,; /// or later with the suited setter method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:153,layers,layers,153,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,8,"['layers', 'variab']","['layers', 'variable']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This ctor is used in TProofServ::Setup() in combination with GetWorkDir(); /// for a quick scan of the config file to retrieve the work directory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:189,config,config,189,proof/proof/src/TProofResourcesStatic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx,1,['config'],['config']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This delete is to test the relocation of variable length array",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/Event.cxx:127,variab,variable,127,test/Event.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/Event.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This function builds the class charts for one class in GraphViz/Dot format,; /// i.e. the inheritance diagram, the include dependencies, and the library; /// dependency.; ///; /// Input: out - output file stream",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:176,inherit,inheritance,176,html/src/TClassDocOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This function builds the class tree for one class in HTML; /// (inherited and succeeding classes, called recursively); ///; ///; /// Input: out - output file stream; /// classPtr - pointer to the class; /// dir - direction to traverse tree: up, down or both; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx:150,inherit,inherited,150,html/src/TClassDocOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TClassDocOutput.cxx,1,['inherit'],['inherited']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This function calculates smoothed spectrum from source spectrum; /// based on Markov chain method.; /// The result is placed in the array pointed by source pointer.; ///; /// Function parameters:; /// - source-pointer to the array of source spectrum; /// - ssizex-x length of source; /// - ssizey-y length of source; /// - averWindow-width of averaging smoothing window; ///; /// ### Smoothing; ///; /// Goal: Suppression of statistical fluctuations the algorithm is based on discrete; /// Markov chain, which has very simple invariant distribution; /// \f[; /// U_2 = \frac{p_{1.2}}{p_{2,1}}U_1, U_3 = \frac{p_{2,3}}{p_{3,2}}U_2 U_1, ... , U_n = \frac{p_{n-1,n}}{p_{n,n-1}}U_{n-1} ... U_2 U_1; /// \f]; /// \f$U_1\f$ being defined from the normalization condition \f$ \sum_{i=1}^{n} U_i = 1\f$; /// n is the length of the smoothed spectrum and; /// \f[; /// p_{i,i\pm1} = A_i \sum_{k=1}^{m} exp\left[\frac{y(i\pm k)-y(i)}{y(i\pm k)+y(i)}\right]; /// \f]; /// is the probability of the change of the peak position from channel i to the channel i+1.; /// \f$A_i\f$ is the normalization constant so that\f$ p_{i,i-1}+p_{i,i+1}=1\f$ and m is a width; /// of smoothing window. We have extended this algorithm to two dimensions.; ///; /// #### Reference:; ///; /// [1] Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM A 376 (1996), 451.; ///; /// ### Example 4 - Smooth.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Smooth.C; /// End_Macro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:1267,extend,extended,1267,hist/spectrum/src/TSpectrum2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This function can be used in classes that should override a certain; /// function, but in the inherited class the function makes no sense.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx:180,inherit,inherited,180,core/foundation/src/TError.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/src/TError.cxx,1,['inherit'],['inherited']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This function finds the cell, which corresponds to the given; /// untransformed event vector 'xvec' and return its value, which is; /// given by the parameter 'cv'. If kernel != NULL, then; /// PDEFoamKernelBase::Estimate() is called on the transformed event; /// variables.; ///; /// Parameters:; ///; /// - xvec - event vector (untransformed, [fXmin,fXmax]); ///; /// - cv - the cell value to return; ///; /// - kernel - PDEFoam kernel estimator. If NULL is given, than the; /// pure cell value is returned; ///; /// Return:; ///; /// The cell value, corresponding to 'xvec', estimated by the given; /// kernel.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx:350,variab,variables,350,tmva/tmva/src/PDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This function is called from the first entry in TTreePlayer::InitLoop; /// It analyzes the list of variables involved in the current query; /// and pre-process the internal Hbook tables to speed-up the search; /// at the next entries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/src/THbookFile.cxx:185,variab,variables,185,hist/hbook/src/THbookFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/src/THbookFile.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This function is overridden from PDFEFoam. It returns all; /// regression targets (in order), given an untransformed event; /// vector 'xvec'. The key of 'xvec' is the dimension and the value; /// (Float_t) is the coordinate.; ///; /// Note: number of foam dimensions = number of variables + number; /// of targets; ///; /// Parameters:; /// - xvec - map of event variables (no targets!); /// - cv - cell value to return (ignored!); ///; /// Return:; /// Targets, ordered by missing dimensions in 'xvec'.; /// The size of the returned vector = foam dimension - size of xvec.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamMultiTarget.cxx:366,variab,variables,366,tmva/tmva/src/PDEFoamMultiTarget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamMultiTarget.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This function searches for peaks in source spectrum; /// It is based on deconvolution method. First the background is; /// removed (if desired), then Markov spectrum is calculated; /// (if desired), then the response function is generated; /// according to given sigma and deconvolution is carried out.; /// It returns number of found peaks.; ///; /// Function parameters:; /// - source-pointer to the matrix of source spectrum; /// - dest-pointer to the matrix of resulting deconvolved spectrum; /// - ssizex-x length of source spectrum; /// - ssizey-y length of source spectrum; /// - ssizez-z length of source spectrum; /// - sigma-sigma of searched peaks, for details we refer to manual; /// - threshold-threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual; /// - backgroundRemove-logical variable, set if the removal of; /// background before deconvolution is desired; /// - deconIterations-number of iterations in deconvolution operation; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method); ///; /// ### Peaks searching; ///; /// Goal: to identify automatically the peaks in spectrum with the presence of; /// the continuous background, one- and two-fold coincidences (ridges) and statistical; /// fluctuations - noise.; ///; /// The common problems connected; /// with correct peak identification in three-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e.,; /// only statistically relevant peaks should be identified; /// - non-sensitivity of the; /// algorithm to continuous background; /// - non-sensitivity to one-fold coincidences; /// (coincidences peak - peak - background",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:959,variab,variable,959,hist/spectrum/src/TSpectrum3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This function searches for peaks in source spectrum; /// It is based on deconvolution method. First the background is; /// removed (if desired), then Markov spectrum is calculated; /// (if desired), then the response function is generated; /// according to given sigma and deconvolution is carried out.; ///; /// Function parameters:; /// - source-pointer to the matrix of source spectrum; /// - dest-pointer to the matrix of resulting deconvolved spectrum; /// - ssizex-x length of source spectrum; /// - ssizey-y length of source spectrum; /// - sigma-sigma of searched peaks, for details we refer to manual; /// - threshold-threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual; /// - backgroundRemove-logical variable, set if the removal of; /// background before deconvolution is desired; /// - deconIterations-number of iterations in deconvolution operation; /// - markov-logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow-averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method); ///; /// ### Peaks searching; ///; /// Goal: to identify automatically the peaks in spectrum with the presence of the; /// continuous background, one-fold coincidences (ridges) and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification in two-dimensional coincidence spectra are; ///; /// - non-sensitivity to noise, i.e., only statistically relevant peaks should be identified; /// - non-sensitivity of the algorithm to continuous background; /// - non-sensitivity to one-fold coincidences (coincidences peak - background in both dimensions) and their crossings; /// - ability to identify peaks close to the edges of the spectrum region. Us",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:878,variab,variable,878,hist/spectrum/src/TSpectrum2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the enhancement coefficient:; /// - enhanceCoeff - after the transform the enhanced region (xmin, xmax) is multiplied by this coefficient. Applies only for enhancement operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:109,enhance,enhancement,109,hist/spectrum/src/TSpectrumTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx,4,['enhance'],"['enhanceCoeff', 'enhanced', 'enhancement']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the enhancement coefficient:; /// - enhanceCoeff - after the transform the enhanced region (xmin, xmax, ymin, ymax) is multiplied by this coefficient. Applies only for enhancement operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:109,enhance,enhancement,109,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,4,['enhance'],"['enhanceCoeff', 'enhanced', 'enhancement']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the filtering or enhancement region:; /// - xmin, xmax",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:122,enhance,enhancement,122,hist/spectrum/src/TSpectrumTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx,1,['enhance'],['enhancement']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the filtering or enhancement region:; /// - xmin, xmax, ymin, ymax",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:122,enhance,enhancement,122,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,1,['enhance'],['enhancement']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This function transforms the source spectrum. The calling program; /// should fill in input parameters. Then it multiplies transformed; /// coefficients in the given region by the given; /// enhance_coeff and transforms it back; ///; /// Function parameters:; /// - fSource-pointer to the matrix of source spectrum, its size should; /// be fSizeX*fSizeY; /// - fDest-pointer to the matrix of destination data, its size should be; /// fSizeX*fSizeY; ///; /// ### Example of enhancement; ///; /// This function transforms the; /// source spectrum (for details see Transform function). Before the Enhance; /// function is called the class must be created by constructor and the type of the; /// transform as well as some other parameters must be set using a set of setter; /// functions. The Enhance function multiplies transformed coefficients in the given; /// region (fXmin, fXmax, fYmin, fYmax) by the given fEnhancCoeff and transforms it; /// back. Enhanced data are written into dest spectrum.; ///; /// ### Example - script Enhance2.c:; ///; /// \image html spectrum2transform_enhance_image001.jpg Fig. 1 Original two-dimensional noisy spectrum; /// \image html spectrum2transform_enhance_image002.jpg Fig. 2 Enhanced spectrum of the data from Fig. 1 using Cosine transform (channels in region (0-63)x(0-63) were multiplied by 5); ///; /// #### Script:; ///; /// Example to illustrate enhancement (class TSpectrumTransform2). To execute this example, do; ///; /// `root > .x Enhance2.C`; ///; /// ~~~ {.cpp}; /// void Enhance2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** source = new Double_t *[nbinsx];; /// Double_t ** dest = new Double_t *[nbinsx];; /// for (i=0;i<nbinsx;i++); /// source[i]= new Double_t[nbinsy];; /// for (i=0;i<nbinsx;i++); /// dest[i]= new Double_t[",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:559,enhance,enhancement,559,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,3,"['Enhance', 'enhance']","['Enhance', 'enhancement']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This function transforms the source spectrum. The calling program; /// should fill in input parameters.; /// Transformed data are written into dest spectrum.; ///; /// Function parameters:; /// - fSource-pointer to the matrix of source spectrum, its size should; /// be fSizex*fSizey except for inverse FOURIER, FOUR-WALSH, FOUR-HAAR; /// transform. These need fSizex*2*fSizey length to supply real and; /// imaginary coefficients.; /// - fDest-pointer to the matrix of destination data, its size should be; /// fSizex*fSizey except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; /// need fSizex*2*fSizey length to store real and imaginary coefficients; /// - fSizex,fSizey-basic dimensions of source and dest spectra; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1144,enhance,enhance,1144,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,1,['enhance'],['enhance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This function transforms the source spectrum. The calling program; /// should fill in input parameters.; /// Transformed data are written into dest spectrum.; ///; /// Function parameters:; /// - source-pointer to the vector of source spectrum, its length should; /// be size except for inverse FOURIER, FOUR-WALSH, FOUR-HAAR; /// transform. These need 2*size length to supply real and; /// imaginary coefficients.; /// - destVector-pointer to the vector of dest data, its length should be; /// size except for direct FOURIER, FOUR-WALSH, FOUR-HAAR. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1044,enhance,enhance,1044,hist/spectrum/src/TSpectrumTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx,1,['enhance'],['enhance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This function was adapted from the TGraphAsymmErrors class.; /// See TGraphAsymmErrors::Divide for the documentation; ///; /// Only the first error dimension is affected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:104,adapt,adapted,104,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['adapt'],['adapted']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This inflates a basket in the cache.. passing the data to a new; /// buffer that will only wait there to be read...; /// This function is responsible to update corresponding elements in; /// fUnzipStatus, fUnzipChunks and fUnzipLen. Since we use atomic variables; /// in fUnzipStatus to exclusively unzip the basket, we must update; /// fUnzipStatus after fUnzipChunks and fUnzipLen and make sure fUnzipChunks; /// and fUnzipLen are ready before main thread fetch the data.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:339,variab,variables,339,tree/tree/src/TTreeCacheUnzip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This is Node member function that adds a new node to a binary tree.; /// each node contains maximum and minimum values of splitting variable; /// left or right nodes are added based on value of splitting variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NodekNN.h:218,variab,variable,218,tmva/tmva/inc/TMVA/NodekNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NodekNN.h,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This is a global templated function that searches for k-nearest neighbors.; /// list contains all nodes that are closest to event; /// and have sum of event weights >= nfind.; /// Only nodes with positive weights are added to list.; /// Requirement for used classes:; /// - each node contains maximum and minimum values of splitting variable; /// for all its children; /// - min and max range is checked to avoid descending into; /// nodes that are definitely outside current minimum neighbourhood.; ///; /// This function should be modified with care.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NodekNN.h:419,variab,variable,419,tmva/tmva/inc/TMVA/NodekNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NodekNN.h,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This is a global templated function that searches for k-nearest neighbors.; /// list contains k or less nodes that are closest to event.; /// only nodes with positive weights are added to list.; /// each node contains maximum and minimum values of splitting variable; /// for all its children - this range is checked to avoid descending into; /// nodes that are definitely outside current minimum neighbourhood.; ///; /// This function should be modified with care.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NodekNN.h:344,variab,variable,344,tmva/tmva/inc/TMVA/NodekNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NodekNN.h,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This is a super-portable random number generator; ///; /// It should not overflow on any 32-bit machine.; /// The cycle is only ~10**9, so use with care!; /// Note especially that VAL must not be undefined on input.; ///; /// Set Default Starting Seed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:102,portab,portable,102,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['portab'],['portable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This method generates a toy data set for importance sampling for the given parameter point taking; /// global observables into account.; /// The values of the generated global observables remain in the pdf's variables.; /// They have to have those values for the subsequent evaluation of the; /// test statistics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCImportanceSampler.cxx:294,variab,variables,294,roofit/roostats/src/ToyMCImportanceSampler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCImportanceSampler.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This method generates a toy data set for the given parameter point taking; /// global observables into account.; /// The values of the generated global observables remain in the pdf's variables.; /// They have to have those values for the subsequent evaluation of the; /// test statistics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCSampler.cxx:270,variab,variables,270,roofit/roostats/src/ToyMCSampler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCSampler.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This method is used internally to decode the dimensions of the variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:149,variab,variables,149,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,5,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This method produces a PDF for N channels with uncorrelated background; /// uncertainty. It relates the signal in each channel to a master signal strength times the; /// expected signal in each channel.; ///; /// For the future, perhaps this method should be extended to include the efficiency terms automatically.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NumberCountingPdfFactory.cxx:345,extend,extended,345,roofit/roostats/src/NumberCountingPdfFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NumberCountingPdfFactory.cxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This should be called before Initialize, after setting kDim; /// It predefines values of the cell division for certain variable iDim.; /// For example setting 3 predefined division lines using:; ///; /// ~~~ {.cpp}; /// xDiv[0]=0.30; xDiv[1]=0.40; xDiv[2]=0.65;; /// FoamX->SetXdivPRD(0,3,xDiv);; /// ~~~; ///; /// results in the following 2-dim. pattern of the cells:; ///; /// \image html foam_Map3.png width=400",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:205,variab,variable,205,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// This virtual method is called from TPointSet3DGL when a point is; /// selected.; ///; /// At this point it just prints out n and id of the point (if it exists).; /// To make something useful out of this do:; ///; /// 1. subclass and re-implement this method;; /// 2. extend this class to include TExec or some other kind of callback.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPointSet3D.cxx:353,extend,extend,353,graf3d/g3d/src/TPointSet3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPointSet3D.cxx,1,['extend'],['extend']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// To read a TObject* from the file.; ///; /// The object associated to this key is read from the file into memory; /// Once the key structure is read (via Streamer) the class identifier; /// of the object is known.; /// Using the class identifier we find the TClass object for this class.; /// A TClass object contains a full description (i.e. dictionary) of the; /// associated class. In particular the TClass object can create a new; /// object of the class type it describes. This new object now calls its; /// Streamer function to rebuilt itself.; ///; /// Use TKey::ReadObjectAny to read any object non-derived from TObject; ///; /// ### Note; /// A C style cast can only be used in the case where the final class; /// of this object derives from TObject as a first inheritance, otherwise; /// one must use a dynamic_cast.; ///; /// #### Example1: simplified case; /// ~~~{.cpp}; /// class MyClass : public TObject, public AnotherClass; /// ~~~; /// then on return, one get away with using:; /// ~~~{.cpp}; /// MyClass *obj = (MyClass*)key->ReadObj();; /// ~~~; ///; /// #### Example2: Usual case (recommended unless performance is critical); /// ~~~{.cpp}; /// MyClass *obj = dynamic_cast<MyClass*>(key->ReadObj());; /// ~~~; /// which support also the more complex inheritance like:; /// ~~~{.cpp}; /// class MyClass : public AnotherClass, public TObject; /// ~~~; ///; /// Of course, `dynamic_cast<>` can also be used in the example 1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TKey.cxx:855,inherit,inheritance,855,io/io/src/TKey.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TKey.cxx,2,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// To read an object (non deriving from TObject) from the file.; ///; /// If expectedClass is not null, we checked that that actual class of the; /// object stored is suitable to be stored in a pointer pointing to an object; /// of class 'expectedClass'. We also adjust the value of the returned address; /// so that it is suitable to be cast (C-Style); /// a pointer pointing to an object of class 'expectedClass'.; ///; /// So for example if the class Bottom inherits from Top and the object; /// stored is of type Bottom you can safely do:; /// ~~~{.cpp}; /// auto TopClass = TClass::GetClass(""Top"");; /// auto ptr = (Top*) key->ReadObjectAny( TopClass );; /// if (ptr==0) printError(""the object stored in the key is not of the expected type\n"");; /// ~~~; /// The object associated to this key is read from the file into memory.; /// Once the key structure is read (via Streamer) the class identifier; /// of the object is known.; /// Using the class identifier we find the TClass object for this class.; /// A TClass object contains a full description (i.e. dictionary) of the; /// associated class. In particular the TClass object can create a new; /// object of the class type it describes. This new object now calls its; /// Streamer function to rebuilt itself.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TKey.cxx:544,inherit,inherits,544,io/io/src/TKey.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TKey.cxx,1,['inherit'],['inherits']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Total all the elements that are available for the current entry; /// for the secondary variable dimension.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:173,variab,variable,173,tree/treeplayer/src/TFormLeafInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Training one (mono target regression) foam, whose cells contain; /// the average 0th target. The dimension of the foam = number of; /// non-targets (= number of variables).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx:247,variab,variables,247,tmva/tmva/src/MethodPDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Transforms the variables and return a new DataLoader with the transformed; /// variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx:101,variab,variables,101,tmva/tmva/src/DataLoader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Translate Perl modifier flags into pcre flags.; /// The supported modStr characters are: g, i, m, o, s, x, and the; /// special d for debug. The meaning of the letters is:; /// - m; /// Treat string as multiple lines. That is, change ""^"" and ""$"" from; /// matching the start or end of the string to matching the start or; /// end of any line anywhere within the string.; /// - s; /// Treat string as single line. That is, change ""."" to match any; /// character whatsoever, even a newline, which normally it would not match.; /// Used together, as /ms, they let the ""."" match any character whatsoever,; /// while still allowing ""^"" and ""$"" to match, respectively, just after and; /// just before newlines within the string.; /// - i; /// Do case-insensitive pattern matching.; /// - x; /// Extend your pattern's legibility by permitting whitespace and comments.; /// - p; /// Preserve the string matched such that ${^PREMATCH}, ${^MATCH},; /// and ${^POSTMATCH} are available for use after matching.; /// - g and c; /// Global matching, and keep the Current position after failed matching.; /// Unlike i, m, s and x, these two flags affect the way the regex is used; /// rather than the regex itself. See Using regular expressions in Perl in; /// perlretut for further explanation of the g and c modifiers.; /// For more detail see: http://perldoc.perl.org/perlre.html#Modifiers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx:875,Extend,Extend,875,core/base/src/TPRegexp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPRegexp.cxx,1,['Extend'],['Extend']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Unbinned fit of one or more variable(s) from a Tree.; ///; /// funcname is a TF1 function.; ///; /// See TTree::Draw for explanations of the other parameters.; ///; /// Fit the variable varexp using the function funcname using the; /// selection cuts given by selection.; ///; /// The list of fit options is given in parameter option.; ///; /// - option = ""Q"" Quiet mode (minimum printing); /// - option = ""V"" Verbose mode (default is between Q and V); /// - option = ""E"" Perform better Errors estimation using Minos technique; /// - option = ""M"" More. Improve fit results; /// - option = ""D"" Draw the projected histogram with the fitted function; /// normalized to the number of selected rows; /// and multiplied by the bin width; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~{.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~{.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup, parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~{.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:114,variab,variable,114,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Unbinned fit of one or more variable(s) from a tree.; ///; /// funcname is a TF1 function.; ///; /// \see TTree::Draw for explanations of the other parameters.; ///; /// Fit the variable varexp using the function funcname using the; /// selection cuts given by selection.; ///; /// The list of fit options is given in parameter option.; ///; /// - option = ""Q"" Quiet mode (minimum printing); /// - option = ""V"" Verbose mode (default is between Q and V); /// - option = ""E"" Perform better Errors estimation using Minos technique; /// - option = ""M"" More. Improve fit results; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~ {.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~ {.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup:; ///; /// - Parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~ {.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""f1"", ""jpsimass"", ""jpsipt>3.0"");; /// ~~~; /// 1, 2 and 3 Dimensional fits are supported. See also TTree::Fit; ///; /// Return status:; ///; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:114,variab,variable,114,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Unset environment variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:104,variab,variable,104,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Unzoom all variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:97,variab,variables,97,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Update our plot normalization over our plot variable's fit range,; /// which will be determined by the first suitable object added to our plot.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:130,variab,variable,130,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Update rotator related variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx:109,variab,variables,109,graf3d/gl/src/TGLViewerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Update stereo related variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx:108,variab,variables,108,graf3d/gl/src/TGLViewerEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerEditor.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Update the RooAddPdf coefficients for a given normalization set and; /// projection configuration. The `coefCache` argument should have the same; /// size as `pdfList`. It needs to be initialized with the raw values of the; /// coefficients, as obtained from the `_coefList` proxy in the RooAddPdf. If; /// the last coefficient is not given, the initial value of the last element of; /// `_coefCache` does not matter. After this function, the `_coefCache` will be; /// filled with the correctly scaled coefficients for each pdf.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddHelpers.cxx:170,config,configuration,170,roofit/roofitcore/src/RooAddHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddHelpers.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Update the coefficient values in the given cache element: calculate new remainder; /// fraction, normalize fractions obtained from extended ML terms to unity, and; /// multiply the various range and dimensional corrections needed in the; /// current use context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx:217,extend,extended,217,roofit/roofitcore/src/RooAddModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Update the coefficient values in the given cache element: calculate new remainder; /// fraction, normalize fractions obtained from extended ML terms to unity, and; /// multiply the various range and dimensional corrections needed in the; /// current use context.; ///; /// param[in] cache The cache element for the given normalization set that; /// stores the supplementary normalization values and; /// projection-related objects.; /// param[in] nset The set of variables to normalize over.; /// param[in] syncCoefValues If the initial values of the coefficients still; /// need to be copied from the `_coefList` elements to; /// the `_coefCache`. True by default.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:217,extend,extended,217,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,2,"['extend', 'variab']","['extended', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Update value of modify counter in config table; /// Modify counter used to indicate that something was changed in database.; /// It will be used when multiple instances of TSQLFile for the same data base; /// will be connected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:120,config,config,120,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['config'],['config']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Upload a PROOF archive (PAR file). A PAR file is a compressed; /// tar file with one special additional directory, PROOF-INF; /// (blatantly copied from Java's jar format). It must have the extension; /// .par. A PAR file can be directly a binary or a source with a build; /// procedure. In the PROOF-INF directory there can be a build script:; /// BUILD.sh to be called to build the package, in case of a binary PAR; /// file don't specify a build script or make it a no-op. Then there is; /// SETUP.C which sets the right environment variables to use the package,; /// like LD_LIBRARY_PATH, etc.; /// The 'opt' allows to specify whether the .PAR should be just unpacked; /// in the existing dir (opt = kUntar, default) or a remove of the existing; /// directory should be executed (opt = kRemoveOld), so triggering a full; /// re-build. The option if effective only for PROOF protocol > 8 .; /// The lab 'dirlab' (e.g. 'G0') indicates that the package is to uploaded to; /// an alternative global directory for global usage. This may require special; /// privileges.; /// If download is kTRUE and the package is not found locally, then it is downloaded; /// from the master repository.; /// Returns 0 in case of success and -1 in case of error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:622,variab,variables,622,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Use the information in the TGTextLayout token to return the bounding box; /// for the character specified by index.; ///; /// The width of the bounding box is the advance width of the character, and; /// does not include and left- or right-bearing. Any character that extends; /// partially outside of the text layout is considered to be truncated at the; /// edge. Any character which is located completely outside of the text; /// layout is considered to be zero-width and pegged against the edge.; ///; /// The height of the bounding box is the line height for this font,; /// extending from the top of the ascent to the bottom of the descent.; /// Information about the actual height of the individual letter is not; /// available.; ///; /// A text layout that contains no characters is considered to contain a; /// single zero-width placeholder character.; ///; /// The return value is 0 if the index did not specify a character in the; /// text layout, or non-zero otherwise. In that case, *bbox is filled with; /// the bounding box of the character.; ///; /// layout -- Layout information, from a previous call to ComputeTextLayout().; /// index -- The index of the character whose bbox is desired.; /// x, y -- Filled with the upper-left hand corner, in pixels, of the; /// bounding box for the character specified by index, if non-NULL.; /// w, h -- Filled with the width and height of the bounding box for the; /// character specified by index, if non-NULL.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx:354,extend,extends,354,gui/gui/src/TGFont.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx,2,['extend'],"['extending', 'extends']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Used for automatic sizing of the cache.; ///; /// Estimates a suitable size for the tree cache based on AutoFlush.; /// A cache sizing factor is taken from the configuration. If this yields zero; /// and withDefault is true the historical algorithm for default size is used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:246,config,configuration,246,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// User constructor; ///; /// Parameters:; ///; /// - name - name of PDEFoam object; ///; /// - ts - target selection method used in; /// GetCellValue(const std::map<Int_t, Float_t>& xvec, ECellValue); /// Candidates are: TMVA::kMean, TMVA::kMpv; ///; /// - TMVA::kMean - The function GetCellValue() finds all cells; /// which contain a given event vector 'xvec' and returns the; /// mean target (for every target variable in the foam).; ///; /// - TMVA::kMpv - The function GetCellValue() finds all cells; /// which contain a given event vector 'xvec' and returns the; /// most probable target (for every target variable in the; /// foam), that is the target value which corresponds to the; /// cell with the largest event density.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamMultiTarget.cxx:497,variab,variable,497,tmva/tmva/src/PDEFoamMultiTarget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamMultiTarget.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// User method.; /// It returns NORMALIZATION integral to be combined with the average weights; /// and content of the histograms in order to get proper absolute normalization; /// of the integrand and distributions.; /// It can be called after initialization, before or during the MC run.; /// \param IntNorm variable where the integral will be stored; /// \param ErrInt variable where the absolute error of the integral will be stored if internal rejection is active, otherwise set to 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:393,variab,variable,393,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Uses ""env"" (Unix) or ""set"" (Windows) to get list of environment variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:150,variab,variables,150,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Using this ctor will retrieve all information in the config file; /// and store it in fMaster, fSubmasterList and fWorkerList,; /// condorworkers will be stored in the fWorkerList.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:139,config,config,139,proof/proof/src/TProofResourcesStatic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx,1,['config'],['config']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function for constructors; /// Return RooArgSet that is copy of allVars minus variable matching wgtName if specified",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:172,variab,variable,172,roofit/roofitcore/src/RooTreeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function for constructors; /// Return pointer to weight variable if it is defined",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:150,variab,variable,150,roofit/roofitcore/src/RooTreeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function for createIntObj() that aids in the construct of recursive integrals; /// over functions with multiple observables with parameterized ranges. This function; /// finds in a given set allObs over which integration is requested the largeset subset; /// of observables that can be integrated simultaneously. This subset consists of; /// observables with fixed ranges and observables with parameterized ranges whose; /// parameterization does not depend on any observable that is also integrated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:223,parameteriz,parameterized,223,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,3,['parameteriz'],"['parameterization', 'parameterized']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function for plotOn() that constructs the set of; /// observables to project when plotting ourselves as function of; /// 'plotVar'. 'allVars' is the list of variables that must be; /// projected, but may contain variables that we do not depend on. If; /// 'silent' is cleared, warnings about inconsistent input parameters; /// will be printed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:251,variab,variables,251,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Utility function for plotOn() that creates a projection of a function or p.d.f; /// to be plotted on a RooPlot.; /// \anchor createPlotProjAnchor; ///; /// Create a new object \f$ G \f$ that represents the normalized projection:; /// \f[; /// G[x,p] = \frac{\int F[x,y,p] \; \mathrm{d}\{y\}}; /// {\int F[x,y,p] \; \mathrm{d}\{x\} \, \mathrm{d}\{y\}}; /// \f]; /// where \f$ F[x,y,p] \f$ is the function we represent, and; /// \f$ \{ p \} \f$ are the remaining variables (""parameters"").; ///; /// \param[in] dependentVars Dependent variables over which to normalise, \f$ \{x\} \f$.; /// \param[in] projectedVars Variables to project out, \f$ \{ y \} \f$.; /// \param[out] cloneSet Will be set to a RooArgSet*, which will contain a clone of *this plus its projection integral object.; /// The latter will also be returned. The caller takes ownership of this set.; /// \param[in] rangeName Optional range for projection integrals; /// \param[in] condObs Conditional observables, which are not integrated for normalisation, even if they; /// are in `dependentVars` or `projectedVars`.; /// \return A pointer to the newly created object, or zero in case of an; /// error. The caller is responsible for deleting the `cloneSet` (which includes the returned projection object).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:547,variab,variables,547,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,3,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Validate build configuration. If not syntax errors or missing objects are found,; /// return an ObjBuildConfig in which all names are replaced with object pointers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:101,config,configuration,101,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Variable can handle classification with 2 classes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBayesClassifier.cxx:86,Variab,Variable,86,tmva/tmva/src/MethodBayesClassifier.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBayesClassifier.cxx,1,['Variab'],['Variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Wait for the condition variable to be signalled. The mutex is; /// implicitely released before waiting and locked again after waking up.; /// If Wait() is called by multiple threads, a signal may wake up more; /// than one thread. See POSIX threads documentation for details.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx:109,variab,variable,109,core/thread/src/TPosixCondition.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// We can not split STL's which are inside a variable size array.; /// At least for now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:128,variab,variable,128,core/meta/src/TStreamerElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// When clicking in the browser, the following action is performed; /// on this macro, depending the content of the variable TMacro.Browse.; /// TMacro.Browse can be set in the system.rootrc or .rootrc file like:; /// ~~~ {.cpp}; /// TMacro.Browse : Action; /// ~~~; /// or set via gEnv->SetValue, eg; /// ~~~ {.cpp}; /// gEnv->SetValue(""TMacro.Browse"",""Print"");; /// ~~~; /// By default TMacro.Browse=""""; /// -if TMacro.Browse ="""" the macro is executed; /// -if TMacro.Browse =""Print"" the macro is printed in stdout; /// -if TMacro.Browse is of the form ""mymacro.C""; /// the macro void mymacro.C(TMacro *m) is called where m=this macro; /// An example of macro.C saving the macro into a file and viewing it; /// with emacs is shown below:; /// ~~~ {.cpp}; /// void mymacro(TMacro *m) {; /// m->SaveSource(""xx.log"");; /// gSystem->Exec(""emacs xx.log&"");; /// }; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMacro.cxx:199,variab,variable,199,core/base/src/TMacro.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMacro.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// When using the 'divide' process in the geometry this function; /// sets the variable 'axis' depending on what is specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:162,variab,variable,162,geom/gdml/src/TGDMLParse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Write a header file describing the content of this module; /// through a series of variables inside the namespace; /// ROOT::Dict::[DictionaryName]. Each variable is an array of string; /// literals, with a const char* of 0 being the last element, e.g.; /// ROOT::Dict::_DictName::arrIncludes[] = { ""A.h"", ""B.h"", 0 };",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx:169,variab,variables,169,core/dictgen/src/TModuleGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/TModuleGenerator.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Write code for a RooAbsReal implementation with class name 'name',; /// taking RooAbsReal arguments with names listed in argNames and; /// RooAbsCategory arguments with names listed in catArgNames as; /// constructor arguments (use a comma separated list for multiple; /// arguments). The initial value expression is taken to be; /// 'expression' which can be any one-line C++ expression in terms of; /// variables that occur in 'vars'. Skeleton code for handling of; /// analytical integrals is added if hasAnaInt is true. You can add; /// optional expressions for analytical integrals to be advertised by; /// your class in the syntax; /// ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; /// where ""<intObsName>"" a name of the observable integrated over and; /// ""<CPPAnaIntExpression>"" is the C++ expression that calculates that; /// integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:491,variab,variables,491,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Write file info like configurations, title, UUID and other",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:107,config,configurations,107,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['config'],['configurations']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Write in the specified directory the plugin macros. If plugin is specified; /// and if it is a base class all macros for that base will be written. If it; /// is a plugin class name, only that one macro will be written. If plugin; /// is 0 all macros are written. Returns -1 if dir does not exist, 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:123,plugin,plugin,123,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,4,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Write in the specified environment config file the plugin records. If; /// plugin is specified and if it is a base class all records for that; /// base will be written. If it is a plugin class name, only that one; /// record will be written. If plugin is 0 all macros are written.; /// If envFile is 0 or """" the records are written to stdout.; /// Returns -1 if envFile cannot be created or opened, 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:121,config,config,121,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,5,"['config', 'plugin']","['config', 'plugin']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Write information to retrieve data columns into `evalData.spans`.; /// All spans belonging to variables of this dataset are overwritten. Spans to other; /// variables remain intact.; /// \param begin Index of first event that ends up in the batch.; /// \param len Number of events in each batch.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:180,variab,variables,180,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Write object from pointer of class classname in this directory.; ///; /// obj may not derive from TObject. See TDirectoryFile::WriteTObject for comments; ///; /// ## Very important note; /// The value passed as 'obj' needs to be from a pointer to the type described by classname.; /// For example:; /// ~~~{.cpp}; /// TopClass *top;; /// BottomClass *bottom;; /// top = bottom;; /// ~~~; /// you can do:; /// ~~~{.cpp}; /// directory->WriteObjectAny(top,""top"",""name of object"");; /// directory->WriteObjectAny(bottom,""bottom"",""name of object"");; /// ~~~; /// <b>BUT YOU CAN NOT DO</b> the following since it will fail with multiple inheritance:; /// ~~~{.cpp}; /// directory->WriteObjectAny(top,""bottom"",""name of object"");; /// ~~~; /// We <b>STRONGLY</b> recommend to use; /// ~~~{.cpp}; /// TopClass *top = ....;; /// directory->WriteObject(top,""name of object""); /// ~~~; /// See also remarks in TDirectoryFile::WriteTObject",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx:718,inherit,inheritance,718,io/io/src/TDirectoryFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Write the contents of the argset in ASCII form to given stream.; ///; /// A line is written for each element contained in the form; /// `<argName> = <argValue>`; ///; /// The `<argValue>` part of each element is written by the arguments'; /// writeToStream() function.; /// \param os The stream to write to.; /// \param compact Write only the bare values, separated by ' '.; /// \note In compact mode, the stream cannot be read back into a RooArgSet,; /// but only into a RooArgList, because the variable names are lost.; /// \param section If non-null, add a section header like `[<section>]`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgSet.cxx:582,variab,variable,582,roofit/roofitcore/src/RooArgSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgSet.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Write, compile and load code and instantiate object for a; /// RooAbsPdf implementation with class name 'name', taking all; /// elements of 'vars' as constructor arguments. The initial value; /// expression is taken to be 'expression' which can be any one-line; /// C++ expression in terms of variables that occur in 'vars'.; ///; /// The returned object is an instance of the object you just defined; /// connected to the variables listed in 'vars'. The name of the; /// object is 'name', its class name Roo<name>Class.; ///; /// This function is an effective compiled replacement of RooGenericPdf; ///; /// You can add optional expressions for analytical integrals to be; /// advertised by your class in the syntax; /// ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; /// where ""<intObsName>"" a name of the observable integrated over and; /// ""<CPPAnaIntExpression>"" is the C++ expression that calculates that; /// integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:379,variab,variables,379,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Write, compile and load code and instantiate object for a; /// RooAbsReal implementation with class name 'name', taking all; /// elements of 'vars' as constructor arguments. The initial value; /// expression is taken to be 'expression' which can be any one-line; /// C++ expression in terms of variables that occur in 'vars'.; ///; /// The returned object is an instance of the object you just defined; /// connected to the variables listed in 'vars'. The name of the; /// object is 'name', its class name Roo<name>Class.; ///; /// This function is an effective compiled replacement of RooFormulaVar; ///; /// You can add optional expressions for analytical integrals to be; /// advertised by your class in the syntax; /// ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; /// where ""<intObsName>"" a name of the observable integrated over and; /// ""<CPPAnaIntExpression>"" is the C++ expression that calculates that; /// integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:380,variab,variables,380,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,4,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// Write, compile and load code for a RooAbsReal implementation with; /// class name 'name', taking all elements of 'vars' as constructor; /// arguments. The initial value expression is taken to be; /// 'expression' which can be any one-line C++ expression in terms of; /// variables that occur in 'vars'. You can add optional expressions; /// for analytical integrals to be advertised by your class in the; /// syntax; /// ""<intObsName>:<CPPAnaIntExpression>;<intObsName,intObsName>:<CPPAnaIntExpression>""; /// where ""<intObsName>"" a name of the observable integrated over and; /// ""<CPPAnaIntExpression>"" is the C++ expression that calculates that; /// integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:357,variab,variables,357,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// [private]; /// (does some specific error handling that makes the function unsuitable for general use.); /// returns a new'd TClass given the name of a variable.; /// user must delete.; /// returns 0 in case of error.; /// if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf.; /// context sensitive behavior.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:237,variab,variable,237,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// \brief Add a sub entry list to the current list.; /// \param[in] elist an entry list that should be added as a sub list of this list.; ///; /// This function is specifically targeted at situations where there is a global; /// TEntryList that should hold one or more sub TEntryList objects. For example,; /// if one wants to create a one to one mapping between the sub entry lists and; /// the trees in the files that make a TChain. Note that in such cases this; /// configuration of the entry list should be used in pair with the option \p ""sync""; /// of the function TChain::SetEntryList; ///; /// ~~~{.cpp}; /// // Create a TChain with two files. Each contains a tree with 20 entries; /// TChain chain{""entries""};; /// chain.Add(""file_20entries_1.root"");; /// chain.Add(""file_20entries_2.root"");; ///; /// // Create a global, empty TEntryList.; /// TEntryList elists;; /// // Create two entry lists. Each one will be referring to a different tree in the chain; /// TEntryList elist1{"""","""",""entries"",""file_20entries_1.root""};; /// TEntryList elist2{"""","""",""entries"",""file_20entries_2.root""};; ///; /// // Select the first ten entries from the first tree and all entries from the second; /// for(auto entry = 0; entry < 10; entry++){; /// elist1.Enter(entry);; /// }; /// for(auto entry = 0; entry < 20; entry++){; /// elist2.Enter(entry);; /// }; ///; /// // Add sub entry lists to the global list; /// elists.AddSubList(&elist1);; /// elists.AddSubList(&elist2);; ///; /// // Set the entry list in the chain. Note the usage of option ""sync""; /// chain.SetEntryList(&elists, ""sync"");; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TEntryList.cxx:552,config,configuration,552,tree/tree/src/TEntryList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TEntryList.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// \class TCollectionMethodBrowsable; /// \ingroup tree; ///; /// TCollectionMethodBrowsable extends TCollectionPropertyBrowsable by showing; /// all methods of the collection itself. If none are available - e.g. for STL; /// classes like std::list, a TVirtualBranchBrowsable object is created instead.; /// The methods' names will have a ""@"" prepended, to distinguish them from the; /// contained elements' methods.; ///; /// This browser helper object is not part of the default list of registered; /// generators (see TVirtualBranchBrowsable::RegisterDefaultGenerators()).; /// If you want to use it, you should call; /// TCollectionMethodBrowsable::Register();; /// As it extends the functionality of TVirtualBranchBrowsable, one might want; /// to unregister the generator of the ""@size()"" method by calling; /// TCollectionPropertyBrowsable::Unregister();; ////////////////////////////////////////////////////////////////////////////////; /// Constructor, see TMethodBrowsable's constructor.; /// Prepends ""@"" to the name to make this method work on the container.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchBrowsable.cxx:176,extend,extends,176,tree/tree/src/TBranchBrowsable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchBrowsable.cxx,2,['extend'],['extends']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// \class TFormLeafInfoMultiVarDim; /// A helper class to implement reading a; /// data member on a variable size array inside a TClonesArray object stored in; /// a TTree. This is the version used when the data member is inside a; /// non-split object.; ////////////////////////////////////////////////////////////////////////////////; /// Constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:183,variab,variable,183,tree/treeplayer/src/TFormLeafInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// \class TFormLeafInfoMultiVarDimClones; /// A small helper class to implement reading; /// a data member on a variable size array inside a TClonesArray object stored; /// in a TTree. This is the version used for split access; ////////////////////////////////////////////////////////////////////////////////; /// Constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:195,variab,variable,195,tree/treeplayer/src/TFormLeafInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// \class TFormLeafInfoMultiVarDimCollection; /// A small helper class to implement reading; /// a data member on a variable size array inside a TClonesArray object stored; /// in a TTree. This is the version used for split access; ////////////////////////////////////////////////////////////////////////////////; /// Constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:199,variab,variable,199,tree/treeplayer/src/TFormLeafInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// \class TFormLeafInfoMultiVarDimDirect; /// A small helper class to implement reading; /// a data member on a variable size array inside a TClonesArray object stored; /// in a TTree. This is the version used for split access; ////////////////////////////////////////////////////////////////////////////////; /// Copy the object and all its content.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:195,variab,variable,195,tree/treeplayer/src/TFormLeafInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// \class TLinearMinimizer; /// \see Minuit2 for a newer version of this class; ///; /// TLinearMinimizer, simple class implementing the ROOT::Math::Minimizer; /// interface usingTLinearFitter. This class uses TLinearFitter to find directly; /// (by solving a system of linear equations) the minimum of a least-square; /// function which has a linear dependence in the fit parameters. This class is; /// not used directly, but via the ROOT::Fitter class, when calling the; /// LinearFit method. It is instantiates using the plug-in manager; /// (plug-in name is ""Linear"").; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearMinimizer.cxx:607,plug-in,plug-in,607,math/minuit/src/TLinearMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearMinimizer.cxx,2,['plug-in'],['plug-in']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// \class TMinuitMinimizer; /// \see Minuit2 for a newer version of this class; /// TMinuitMinimizer class implementing the ROOT::Math::Minimizer interface; /// using TMinuit. This class is normally instantiated using the plug-in manager; /// (plug-in with name Minuit or TMinuit).; /// In addition the user can choose the minimizer algorithm:; /// Migrad (the default one), Simplex, or Minimize (combined Migrad + Simplex); ////////////////////////////////////////////////////////////////////////////////; // initialize the static instances; // Implement a thread local static member",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuitMinimizer.cxx:305,plug-in,plug-in,305,math/minuit/src/TMinuitMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuitMinimizer.cxx,2,['plug-in'],['plug-in']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// \copydoc RooFFTConvPdf(const char*, const char*, RooRealVar&, RooAbsPdf&, RooAbsPdf&, Int_t); /// \param[in] pdfConvVar If the variable used for convolution is a PDF, itself, pass the PDF here, and pass the convolution variable to; /// `convVar`. See also rf210_angularconv.C in the <a href=""https://root.cern/root/html/tutorials/roofit/index.html."">roofit tutorials</a>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:213,variab,variable,213,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// \fn Cppyy::TCppIndex_t Cppyy::GetNumBasesLongestBranch(TCppType_t klass); /// \brief Retrieve number of base classes in the longest branch of the; /// inheritance tree.; /// \param[in] klass The class to start the retrieval process from.; ///; /// The function converts the input class to a `TClass *` and calls; /// GetLongestInheritancePath.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:237,inherit,inheritance,237,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// \fn Cppyy::TCppIndex_t GetLongestInheritancePath(TClass *klass); /// \brief Retrieve number of base classes in the longest branch of the; /// inheritance tree of the input class.; /// \param[in] klass The class to start the retrieval process from.; ///; /// This is a helper function for Cppyy::GetNumBasesLongestBranch.; /// Given an inheritance tree, the function assigns weight 1 to each class that; /// has at least one base. Starting from the input class, the function is; /// called recursively on all the bases. For each base the return value is one; /// (the weight of the base itself) plus the maximum value retrieved for their; /// bases in turn. For example, given the following inheritance tree:; ///; /// ~~~{.cpp}; /// class A {}; class B: public A {};; /// class X {}; class Y: public X {}; class Z: public Y {};; /// class C: public B, Z {};; /// ~~~; ///; /// calling this function on an instance of `C` will return 3, the steps; /// required to go from C to X.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:228,inherit,inheritance,228,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,3,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// access the number of variables through the datasetinfo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSet.cxx:107,variab,variables,107,tmva/tmva/src/DataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSet.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// accessor to the number of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Event.cxx:112,variab,variables,112,tmva/tmva/src/Event.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Event.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// add a spectator (can be a complex expression) to the set of spectator variables used in; /// the MV analysis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx:156,variab,variables,156,tmva/tmva/src/DataSetInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// add a variable (can be a complex expression) to the set of; /// variables used in the MV analysis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx:92,variab,variable,92,tmva/tmva/src/DataSetInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx,4,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// add an array of variables identified by an expression corresponding to an array entry in the tree",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx:102,variab,variables,102,tmva/tmva/src/DataSetInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// add an individual (a set of variables) to the population; /// if there is a set of variables which is known to perform good, they can be given as a hint to the population",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticPopulation.cxx:114,variab,variables,114,tmva/tmva/src/GeneticPopulation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticPopulation.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// add event; /// vector event : the order of values is: variables + targets + spectators",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx:140,variab,variables,140,tmva/tmva/src/DataLoader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// add spectator with given VariableInfo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx:111,Variab,VariableInfo,111,tmva/tmva/src/DataSetInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx,1,['Variab'],['VariableInfo']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// add target with given VariableInfo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx:108,Variab,VariableInfo,108,tmva/tmva/src/DataSetInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx,1,['Variab'],['VariableInfo']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// add variable with given VariableInfo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx:90,variab,variable,90,tmva/tmva/src/DataSetInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx,2,"['Variab', 'variab']","['VariableInfo', 'variable']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// algorithm adapted from code example in:; /// Marsaglia, G. and Tsang, W. W.; /// A Simple Method for Generating Gamma Variables; /// ACM Transactions on Mathematical Software, Vol. 26, No. 3, September 2000; ///; /// The speed of this algorithm depends on the speed of generating normal variates.; /// The algorithm is limited to \f$ \gamma \geq 0 \f$ !",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx:96,adapt,adapted,96,roofit/roofit/src/RooGamma.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx,2,"['Variab', 'adapt']","['Variables', 'adapted']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// build a vertex map based on vertices and couplings appearing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:127,coupling,couplings,127,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['coupling'],['couplings']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// build the network layers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodANNBase.cxx:104,layers,layers,104,tmva/tmva/src/MethodANNBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodANNBase.cxx,1,['layers'],['layers']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// calculate basic statistics (mean, rms for each variable)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTree.cxx:133,variab,variable,133,tmva/tmva/src/BinarySearchTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTree.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// calculate the average response - TODO : rewrite bad dependancy on EvaluateAverage() !; ///; /// note that 0 offset is used",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:126,rewrite,rewrite,126,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['rewrite'],['rewrite']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// calculate the background efficiency for a given signal efficiency; ///; /// adapted by marc-olivier.bettler@cern.ch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx:162,adapt,adapted,162,tmva/tmva/src/OptimizeConfigParameters.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx,1,['adapt'],['adapted']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// calculate the background rejection for a given signal efficiency; ///; /// adapted by marc-olivier.bettler@cern.ch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx:161,adapt,adapted,161,tmva/tmva/src/OptimizeConfigParameters.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx,1,['adapt'],['adapted']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// calculate the fisher coefficients for the event sample and the variables used",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:149,variab,variables,149,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// calculate the largest alpha in (0,1] such that the/ nonnegative variables stay; /// nonnegative in the given search direction. In the general QP problem formulation; /// this is the largest value of alpha such that; /// (t,u,v,w,lambda,pi,phi,gamma) + alpha * (b->t,b->u,b->v,b->w,b->lambda,b->pi,; /// b->phi,b->gamma) >= 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpVar.cxx:150,variab,variables,150,math/quadp/src/TQpVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpVar.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// calculates rms,mean, xmin, xmax of the event variable; /// this can be either done for the variables as they are or for; /// normalised variables (in the range of 0-1) if ""norm"" is set to kTRUE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:131,variab,variable,131,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,3,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// check for ""silence"" option in configuration option string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx:116,config,configuration,116,tmva/tmva/src/Tools.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// check if there is any morphing power provided for the given coupling; /// morphing power is provided as soon as any two samples provide; /// different, non-zero values for this coupling",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:146,coupling,coupling,146,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,2,['coupling'],['coupling']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// check if variable in node",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Rule.cxx:95,variab,variable,95,tmva/tmva/src/Rule.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Rule.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// computation of discrimination power indicator for each variable; /// small values of ""fWith"" indicates little compactness of sig & of backgd; /// big values of ""fBetw"" indicates large separation between sig & backgd; ///; /// we want signal & backgd classes as compact and separated as possible; /// the discriminating power is then defined as the ration ""fBetw/fWith""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx:141,variab,variable,141,tmva/tmva/src/MethodFisher.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// compute also average RMS values required for adaptive Gaussian",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx:131,adapt,adaptive,131,tmva/tmva/src/MethodPDERS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx,1,['adapt'],['adaptive']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// compute mean values of variables in each sample, and the overall means",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx:109,variab,variables,109,tmva/tmva/src/MethodFisher.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// compute ranking of input variables by summing function of weights",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodANNBase.cxx:111,variab,variables,111,tmva/tmva/src/MethodANNBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodANNBase.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// compute scale factor for each variable (dimension) so that; /// distance is computed uniformly along each dimension; /// compute width of interval that includes (100 - 2*ifrac)% of events; /// below, assume that in fVar each vector of values is sorted",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ModulekNN.cxx:116,variab,variable,116,tmva/tmva/src/ModulekNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ModulekNN.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// computes correlation matrix for variables ""theVars"" in tree;; /// ""theType"" defines the required event ""type""; /// (""type"" variable must be present in tree)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx:118,variab,variables,118,tmva/tmva/src/DataSetFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// computes ranking of input variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx:112,variab,variables,112,tmva/tmva/src/MethodFisher.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx,4,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// constructor from a Model Config with a basic settings package configured; /// by SetupBasicUsage()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCCalculator.cxx:111,Config,Config,111,roofit/roostats/src/MCMCCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCCalculator.cxx,2,"['Config', 'config']","['Config', 'configured']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// constructor; ///; /// As argument, one specifies engine kind which should be; /// created like ""http:8080"". One could specify several engines; /// at once, separating them with semicolon ("";""). Following engines are supported:; ///; /// http - TCivetweb, civetweb-based implementation of http protocol; /// fastcgi - TFastCgi, special protocol for communicating with web servers; ///; /// For each created engine one should provide socket port number like ""http:8080"" or ""fastcgi:9000"".; /// Additional engine-specific options can be supplied with URL syntax like ""http:8080?thrds=10"".; /// Full list of supported options should be checked in engines docu.; ///; /// One also can configure following options, separated by semicolon:; ///; /// readonly, ro - set read-only mode (default); /// readwrite, rw - allows methods execution of registered objects; /// global - scans global ROOT lists for existing objects (default); /// noglobal - disable scan of global lists; /// cors - enable CORS header with origin=""*""; /// cors=domain - enable CORS header with origin=""domain""; /// basic_sniffer - use basic sniffer without support of hist, gpad, graph classes; ///; /// For example, create http server, which allows cors headers and disable scan of global lists,; /// one should provide ""http:8080;cors;noglobal"" as parameter; ///; /// THttpServer uses JavaScript ROOT (https://root.cern/js) to implement web clients UI.; /// Normally JSROOT sources are used from $ROOTSYS/js directory,; /// but one could set JSROOTSYS shell variable to specify alternative location",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx:766,config,configure,766,net/http/src/THttpServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx,2,"['config', 'variab']","['configure', 'variable']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// constructor; ///dynamic_cast because of multiple inheritance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPolyLine.cxx:135,inherit,inheritance,135,graf3d/gl/src/TGLPolyLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPolyLine.cxx,1,['inherit'],['inheritance']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// convert float to string with configured format",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferText.cxx:115,config,configured,115,io/io/src/TBufferText.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferText.cxx,2,['config'],['configured']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// copies only the variable values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Event.cxx:102,variab,variable,102,tmva/tmva/src/Event.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Event.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// copy the dataset and calculate some useful variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:129,variab,variables,129,roofit/roofit/src/RooNDKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// count variables, targets and spectators",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx:92,variab,variables,92,tmva/tmva/src/VariableTransformBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// create XML description the transformation (write out info of selected variables)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx:156,variab,variables,156,tmva/tmva/src/VariableTransformBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// create XML output of PDEFoam method variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx:122,variab,variables,122,tmva/tmva/src/MethodPDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// create engine data; ///; /// initializes fastcgi variables and start thread; /// which will process incoming http requests",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TFastCgi.cxx:135,variab,variables,135,net/http/src/TFastCgi.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TFastCgi.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// create histograms from the input variables; /// - histograms for all input variables; /// - scatter plots for all pairs of input variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TransformationHandler.cxx:119,variab,variables,119,tmva/tmva/src/TransformationHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TransformationHandler.cxx,3,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// create the search tree from the event collection; /// using ONLY the variables specified in ""theVars""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTree.cxx:155,variab,variables,155,tmva/tmva/src/BinarySearchTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTree.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// create the search tree from the events in a TTree; /// using ALL the variables specified included in the Event",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTree.cxx:155,variab,variables,155,tmva/tmva/src/BinarySearchTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTree.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// create the test/trainings tree with all the variables, the weights, the; /// classes, the targets, the spectators, the MVA outputs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSet.cxx:130,variab,variables,130,tmva/tmva/src/DataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSet.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// create variable transformations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransform.cxx:93,variab,variable,93,tmva/tmva/src/VariableTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransform.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// creates char* variable with copy of len symbols from provided string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx:100,variab,variable,100,io/xml/src/TXMLEngine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// creates char* variable with copy of provided string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx:100,variab,variable,100,io/xml/src/TXMLEngine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// creates string with variable transformations applied",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableDecorrTransform.cxx:106,variab,variable,106,tmva/tmva/src/VariableDecorrTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableDecorrTransform.cxx,3,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// declaration of configuration options",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx:101,config,configuration,101,tmva/tmva/src/Reader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// declare SA options.; ///; /// - MaxCalls `<int>` maximum number of calls for simulated annealing; /// - TemperatureGradient `<float>` temperature gradient for simulated annealing; /// - UseAdaptiveTemperature `<bool>` use of adaptive temperature for simulated annealing; /// - InitialTemperature `<float>` initial temperature for simulated annealing; /// - MinTemperature `<float>` minimum temperature for simulated annealing; /// - Eps `<int>` number of epochs for simulated annealing; /// - NFunLoops `<int>` number of loops for simulated annealing; /// - NEps `<int>` number of epochs for simulated annealing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SimulatedAnnealingFitter.cxx:311,adapt,adaptive,311,tmva/tmva/src/SimulatedAnnealingFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SimulatedAnnealingFitter.cxx,1,['adapt'],['adaptive']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// default initialisation (no member variables)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx:120,variab,variables,120,tmva/tmva/src/Reader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// define the options (their key words) that can be set in the option string.; ///; /// know options:; /// - Method `<string>` Minimisation method. Available values are:; /// - MC Monte Carlo `<default>`; /// - GA Genetic Algorithm; /// - SA Simulated annealing; ///; /// - EffMethod `<string>` Efficiency selection method. Available values are:; /// - EffSel `<default>`; /// - EffPDF; ///; /// - VarProp `<string>` Property of variable 1 for the MC method (taking precedence over the; /// globale setting. The same values as for the global option are available. Variables 1..10 can be; /// set this way; ///; /// - CutRangeMin/Max `<float>` user-defined ranges in which cuts are varied",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx:512,variab,variable,512,tmva/tmva/src/MethodCuts.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx,2,"['Variab', 'variab']","['Variables', 'variable']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// define the options (their key words) that can be set in the option string.; ///; /// know options:; /// - VolumeRangeMode `<string>` Method to determine volume range; /// available values are:; /// - MinMax; /// - Unscaled; /// - RMS; /// - kNN; /// - Adaptive `<default>`; ///; /// - KernelEstimator `<string>` Kernel estimation function; /// available values are:; /// - Box `<default>`; /// - Sphere; /// - Teepee; /// - Gauss; /// - Sinc3; /// - Sinc5; /// - Sinc7; /// - Sinc9; /// - Sinc11; /// - Lanczos2; /// - Lanczos3; /// - Lanczos5; /// - Lanczos8; /// - Trim; ///; /// - DeltaFrac `<float>` Ratio of #%EventsMin/#%EventsMax for MinMax and RMS volume range; /// - NEventsMin `<int>` Minimum number of events for adaptive volume range; /// - NEventsMax `<int>` Maximum number of events for adaptive volume range; /// - MaxVIterations `<int>` Maximum number of iterations for adaptive volume range; /// - InitialScale `<float>` Initial scale for adaptive volume range; /// - GaussSigma `<float>` Width with respect to the volume size of Gaussian kernel estimator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx:338,Adapt,Adaptive,338,tmva/tmva/src/MethodPDERS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx,5,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// define the options (their key words) that can be set in the option string; /// here the options valid for ALL MVA methods are declared.; ///; /// know options:; ///; /// - NCycles=xx :the number of training cycles; /// - Normalize=kTRUE,kFALSe :if normalised in put variables should be used; /// - HiddenLayser=""N-1,N-2"" :the specification of the hidden layers; /// - NeuronType=sigmoid,tanh,radial,linar : the type of activation function; /// used at the neuron",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodANNBase.cxx:352,variab,variables,352,tmva/tmva/src/MethodANNBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodANNBase.cxx,2,"['layers', 'variab']","['layers', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// define the options (their key words) that can be set in the option string; /// here the options valid for ALL MVA methods are declared.; ///; /// know options:; ///; /// - VariableTransform=None,Decorrelated,PCA to use transformed variables; /// instead of the original ones; /// - VariableTransformType=Signal,Background which decorrelation matrix to use; /// in the method. Only the Likelihood; /// Method can make proper use of independent; /// transformations of signal and background; /// - fNbinsMVAPdf = 50 Number of bins used to create a PDF of MVA; /// - fNsmoothMVAPdf = 2 Number of times a histogram is smoothed before creating the PDF; /// - fHasMVAPdfs create PDFs for the MVA outputs; /// - V for Verbose output (!V) for non verbos; /// - H for Help message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:258,Variab,VariableTransform,258,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,3,"['Variab', 'variab']","['VariableTransform', 'VariableTransformType', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// define the options (their key words) that can be set in the option string; /// know options.; ///; /// #### general; ///; /// - RuleFitModule `<string>`; /// available values are:; /// - RFTMVA - use TMVA implementation; /// - RFFriedman - use Friedmans original implementation; ///; /// #### Path search (fitting); ///; /// - GDTau `<float>` gradient-directed path: fit threshold, default; /// - GDTauPrec `<float>` gradient-directed path: precision of estimated tau; /// - GDStep `<float>` gradient-directed path: step size; /// - GDNSteps `<float>` gradient-directed path: number of steps; /// - GDErrScale `<float>` stop scan when error>scale*errmin; ///; /// #### Tree generation; ///; /// - fEventsMin `<float>` minimum fraction of events in a splittable node; /// - fEventsMax `<float>` maximum fraction of events in a splittable node; /// - nTrees `<float>` number of trees in forest.; /// - ForestType `<string>`; /// available values are:; /// - Random - create forest using random subsample and only random variables subset at each node; /// - AdaBoost - create forest with boosted events; ///; /// #### Model creation; ///; /// - RuleMinDist `<float>` min distance allowed between rules; /// - MinImp `<float>` minimum rule importance accepted; /// - Model `<string>` model to be used; /// available values are:; /// - ModRuleLinear `<default>`; /// - ModRule; /// - ModLinear; ///; /// #### Friedmans module; ///; /// - RFWorkDir `<string>` directory where Friedmans module (rf_go.exe) is installed; /// - RFNrules `<int>` maximum number of rules allowed; /// - RFNendnodes `<int>` average number of end nodes in the forest of trees",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodRuleFit.cxx:1104,variab,variables,1104,tmva/tmva/src/MethodRuleFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodRuleFit.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// define the options (their key words) that can be set in the option string; /// know options: NCycles=xx :the number of training cycles; /// HiddenLayser=""N-1,N-2"" :the specification of the hidden layers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx:282,layers,layers,282,tmva/tmva/src/MethodCFMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx,1,['layers'],['layers']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// define the options (their key words) that can be set in the option string; ///; /// format of function string:; ///; /// ""x0*(0)+((1)/x1)**(2)...""; ///; /// where ""[i]"" are the parameters, and ""xi"" the input variables; ///; /// format of parameter string:; ///; /// ""(-1.2,3.4);(-2.3,4.55);...""; ///; /// where the numbers in ""(a,b)"" correspond to the a=min, b=max parameter ranges;; /// each parameter defined in the function string must have a corresponding range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFDA.cxx:294,variab,variables,294,tmva/tmva/src/MethodFDA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFDA.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// define the options (their key words) that can be set in the option string; ///; /// know options:; ///; /// - NCycles `<integer>` Number of training cycles (too many cycles could overtrain the network); /// - HiddenLayers `<string>` Layout of the hidden layers (nodes per layer); /// * specifications for each hidden layer are separated by comma; /// * for each layer the number of nodes can be either absolut (simply a number); /// or relative to the number of input nodes to the neural net (N); /// * there is always a single node in the output layer; ///; /// example: a net with 6 input nodes and ""Hiddenlayers=N-1,N-2"" has 6,5,4,1 nodes in the; /// layers 1,2,3,4, respectively",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodTMlpANN.cxx:340,layers,layers,340,tmva/tmva/src/MethodTMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodTMlpANN.cxx,2,['layers'],['layers']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// define the options (their key words) that can be set in the option string; ///; /// know options:; ///; /// PDFInterpol[ivar] `<string>` Spline0, Spline1, Spline2 `<default>`, Spline3, Spline5, KDE used to interpolate reference histograms; /// if no variable index is given, it is valid for ALL the variables; ///; /// - NSmooth `<int>` how often the input histos are smoothed; /// - MinNSmooth `<int>` min number of smoothing iterations, for bins with most data; /// - MaxNSmooth `<int>` max number of smoothing iterations, for bins with least data; /// - NAvEvtPerBin `<int>` minimum average number of events per PDF bin; /// - TransformOutput `<bool>` transform (often strongly peaked) likelihood output through sigmoid inversion; /// - fKDEtype `<KernelType>` type of the Kernel to use (1 is Gaussian); /// - fKDEiter `<KerneIter>` number of iterations (1 --> ""static KDE"", 2 --> ""adaptive KDE""); /// - fBorderMethod `<KernelBorder>` the method to take care about ""border"" effects (1=no treatment , 2=kernel renormalization, 3=sample mirroring)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDF.cxx:336,variab,variable,336,tmva/tmva/src/PDF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDF.cxx,3,"['adapt', 'variab']","['adaptive', 'variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// determine mirror dataset.; /// mirror points are added around the physical boundaries of the dataset; /// Two steps:; /// 1. For each entry, determine if it should be mirrored (the mirror configuration).; /// 2. For each mirror configuration, make the mirror points.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:274,config,configuration,274,roofit/roofit/src/RooNDKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx,2,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// determine points in +/- nSigma shell around the box determined by the variable; /// ranges. These points are needed in the normalization, to determine probability; /// leakage in and out of the box.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:156,variab,variable,156,roofit/roofit/src/RooNDKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// display Fisher coefficients and discriminating power for each variable; /// check maximum length of variable name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx:148,variab,variable,148,tmva/tmva/src/MethodFisher.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// display fit parameters; /// check maximum length of variable name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFDA.cxx:138,variab,variable,138,tmva/tmva/src/MethodFDA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFDA.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// evaluate the average of each variable and f(x) in the given range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:115,variab,variable,115,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// evaluates MVA for given set of input variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx:123,variab,variables,123,tmva/tmva/src/Reader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx,3,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// evaluates NN value as function of input variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx:126,variab,variables,126,tmva/tmva/src/MethodCFMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// evaluates probability of MVA for given set of input variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx:138,variab,variables,138,tmva/tmva/src/Reader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// fIter == 1 ---> nonadaptive KDE; /// fIter == 2 ---> adaptive KDE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/KDEKernel.cxx:139,adapt,adaptive,139,tmva/tmva/src/KDEKernel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/KDEKernel.cxx,1,['adapt'],['adaptive']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// fill derived with all classes inheriting from cl and their inheritance; /// distance to cl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:116,inherit,inheriting,116,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,2,['inherit'],"['inheritance', 'inheriting']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// fill input variables in data set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx:97,variab,variables,97,tmva/tmva/src/DataLoader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// find in tree; /// if tree has been filled then search for nfind closest events; /// if metic (fVarScale map) is computed then rescale event variables; /// using previously computed width of variable distribution",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ModulekNN.cxx:226,variab,variables,226,tmva/tmva/src/ModulekNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ModulekNN.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// find variable by name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx:91,variab,variable,91,tmva/tmva/src/DataSetInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// finds new limits for the axis so that *point* is within the range and; /// the limits are compatible with the previous ones (see TH1::Merge).; /// new limits are put into *newMin* and *newMax* variables.; /// axis - axis whose limits are to be recomputed; /// point - point that should fit within the new axis limits; /// newMin - new minimum will be stored here; /// newMax - new maximum will be stored here.; /// false if failed (e.g. if the initial axis limits are wrong; /// or the new range is more than \f$ 2^{64} \f$ times the old one).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:279,variab,variables,279,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// general method used in writing the header of the weight files where; /// the used variables, variable transformation type etc. is specified",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:168,variab,variables,168,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,4,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// get first and second variables from title",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFit.cxx:107,variab,variables,107,tmva/tmva/src/RuleFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFit.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// get maximum length of variable names",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Ranking.cxx:108,variab,variable,108,tmva/tmva/src/Ranking.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Ranking.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// get the set of couplings",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:101,coupling,couplings,101,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['coupling'],['couplings']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// get the variable to scan; /// try first with null model if not go to alternate model",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx:94,variab,variable,94,roofit/roostats/src/HypoTestInverter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverter.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// help routine to MakeVisHists() - fills for all variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFit.cxx:133,variab,variables,133,tmva/tmva/src/RuleFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFit.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// if no entries, than create a DataSet with one Event which uses; /// dynamic variables (pointers to variables)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx:162,variab,variables,162,tmva/tmva/src/DataSetFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// initialize the neuron, most variables still need to be set via setters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx:114,variab,variables,114,tmva/tmva/src/TNeuron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TNeuron.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// ln(k)<1 would correspond to sigma < 0 in the parameterization; /// resulting by transforming a normal random variable in its; /// standard parameterization to a lognormal random variable; /// => treat ln(k) as -ln(k) for k<1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx:131,parameteriz,parameterization,131,roofit/roofit/src/RooLognormal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx,4,"['parameteriz', 'variab']","['parameterization', 'variable']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// method to calculate minimum, maximum, mean, and RMS for all; /// variables used in the MVA",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TransformationHandler.cxx:151,variab,variables,151,tmva/tmva/src/TransformationHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TransformationHandler.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// numberPeaks: number of fitted peaks (must be greater than zero); /// the constructor allocates arrays for all fitted parameters (peak positions,; /// amplitudes etc) and sets the member variables to their default values. One; /// can change these variables by member functions (setters) of TSpectrumFit class.; ///; /// Shape function of the fitted; /// peaks contains the two-dimensional symmetrical Gaussian two one-dimensional; /// symmetrical Gaussian ridges as well as non-symmetrical terms and background.; ///; /// \image html spectrum2fit_constructor_image001.gif",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:272,variab,variables,272,hist/spectrum/src/TSpectrum2Fit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// numberPeaks: number of fitted peaks (must be greater than zero); ///; /// the constructor allocates arrays for all fitted parameters (peak positions, amplitudes etc) and sets the member; /// variables to their default values. One can change these variables by member functions (setters) of TSpectrumFit class.; ///; /// Shape function of the fitted peaks is; ///; /// \image html spectrumfit_constructor_image001.gif; ///; /// where a represents vector of; /// fitted parameters (positions p(j), amplitudes A(j), sigma, relative amplitudes; /// T, S and slope B).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:277,variab,variables,277,hist/spectrum/src/TSpectrumFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// parse option string for ANN methods; /// default settings (should be defined in theOption string); ///; /// format and syntax of option string: ""3000:N:N+2:N-3:6""; ///; /// where:; /// - 3000 - number of training cycles (epochs); /// - N - number of nodes in first hidden layer, where N is the number; /// of discriminating variables used (note that the first ANN; /// layer necessarily has N nodes, and hence is not given).; /// - N+2 - number of nodes in 2nd hidden layer (2 nodes more than; /// number of variables); /// - N-3 - number of nodes in 3rd hidden layer (3 nodes less than; /// number of variables); /// - 6 - 6 nodes in last (4th) hidden layer (note that the last ANN; /// layer in MVA has 2 nodes, each one for signal and background; /// classes)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx:410,variab,variables,410,tmva/tmva/src/Tools.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx,3,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// prepare tree branch with the method's discriminating variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:139,variab,variable,139,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,4,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// print a set of couplings",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:101,coupling,couplings,101,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['coupling'],['couplings']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// prints ranking of input variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TransformationHandler.cxx:110,variab,variables,110,tmva/tmva/src/TransformationHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/TransformationHandler.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// process user options.; ///; /// sanity check, do not allow the input variables to be normalised, because this; /// only creates problems when interpreting the cuts",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx:155,variab,variables,155,tmva/tmva/src/MethodCuts.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// projects variable from tree into normalised histogram",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx:95,variab,variable,95,tmva/tmva/src/Tools.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Tools.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// prune (get rid of internal nodes) the Decision tree to avoid overtraining; /// several different pruning methods can be applied as selected by the; /// variable ""fPruneMethod"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:238,variab,variable,238,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// read PDEFoam variables from xml weight file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx:99,variab,variables,99,tmva/tmva/src/MethodPDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// read VariableInfo from stream",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableInfo.cxx:91,Variab,VariableInfo,91,tmva/tmva/src/VariableInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableInfo.cxx,2,['Variab'],['VariableInfo']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// read table configurations as special table",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx:97,config,configurations,97,io/sql/src/TSQLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/src/TSQLFile.cxx,1,['config'],['configurations']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// read variable importance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx:91,variab,variable,91,tmva/tmva/src/RuleFitAPI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// read variable info from XML",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:91,variab,variable,91,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// read variable names and min/max; /// NOTE: the latter values are mandatory for the normalisation; /// in the reader application !!!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodHMatrix.cxx:91,variab,variable,91,tmva/tmva/src/MethodHMatrix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodHMatrix.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// retrieve a set of couplings (-?-)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:104,coupling,couplings,104,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,2,['coupling'],['couplings']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// return expected number of events for extended likelihood calculation,; /// this is the sum of all coefficients",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:123,extend,extended,123,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,2,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// return extended mored capabilities",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:93,extend,extended,93,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// return global fit parameters; /// - amin : chisquare; /// - edm : estimated distance to minimum; /// - errdef; /// - nvpar : number of variable parameters; /// - nparx : total number of parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MinuitWrapper.cxx:221,variab,variable,221,tmva/tmva/src/MinuitWrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MinuitWrapper.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// return global fit parameters; ///; /// - amin : chisquare; /// - edm : estimated distance to minimum; /// - errdef; /// - nvpar : number of variable parameters; /// - nparx : total number of parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TFitter.cxx:226,variab,variable,226,math/minuit/src/TFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TFitter.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// return name of configured autoload scripts (or 0)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TRootSniffer.cxx:101,config,configured,101,net/http/src/TRootSniffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TRootSniffer.cxx,1,['config'],['configured']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// return the maximum of variable ivar from the training sample; /// that pass/end up in this node, if traininfo defined, otherwise Log Fatal and ; /// return 9999",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTreeNode.cxx:108,variab,variable,108,tmva/tmva/src/DecisionTreeNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTreeNode.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// return the minimum of variable ivar from the training sample; /// that pass/end up in this node, if traininfo defined, otherwise Log Fatal; /// and return -9999",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTreeNode.cxx:108,variab,variable,108,tmva/tmva/src/DecisionTreeNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTreeNode.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// return the misclassification rate of a pruned tree; /// a ""pruned tree"" may have set the variable ""IsTerminal"" to ""arbitrary"" at; /// any node, hence this tree quality testing will stop there, hence test; /// the pruned tree (while the full tree is still in place for normal/later use)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:175,variab,variable,175,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// return value of i'th variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Event.cxx:107,variab,variable,107,tmva/tmva/src/Event.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Event.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// returns a pointer to the TVirtualStreamerInfo object for version; /// If the object does not exist, it is created; ///; /// Note: There are two special version numbers:; ///; /// - 0: Use the class version from the currently loaded class library.; /// - -1: Assume no class library loaded (emulated class).; ///; /// Warning: If we create a new streamer info, whether or not the build; /// optimizes is controlled externally to us by a global variable!; /// Don't call us unless you have set that variable properly; /// with TStreamer::Optimize()!; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:529,variab,variable,529,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// returns list of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx:102,variab,variables,102,tmva/tmva/src/DataSetInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetInfo.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// returns the event collection (i.e. the dataset) TRANSFORMED using the; /// classifiers specific Variable Transformation (e.g. Decorr or Decorr:Gauss:Decorr)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:182,Variab,Variable,182,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,1,['Variab'],['Variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// returns the relative importance of variable ivar",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:121,variab,variable,121,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// run the validation sample through the (pruned) tree and fill in the nodes; /// the variables NSValidation and NBValidadtion (i.e. how many of the Signal; /// and Background events from the validation sample. This is then later used; /// when asking for the ""tree quality"" ..",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:169,variab,variables,169,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// save current configuration in a Root file; /// if filename is blank, the name of the file will be the current objectname.root; /// all the current settings are preserved; /// the Root file produced can be looked at by a another Root session; /// with no access to the original classes.; /// By default a message is printed. Specify option ""Q"" to remove the message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:99,config,configuration,99,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// scale each event variable so that rms of variables is approximately 1.0; /// this allows comparisons of variables with distinct scales and units",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ModulekNN.cxx:103,variab,variable,103,tmva/tmva/src/ModulekNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ModulekNN.cxx,3,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// scan complete ROOT objects hierarchy; /// For the moment it includes objects in gROOT directory; /// and list of canvases and files; /// Also all registered objects are included.; /// One could re-implement this method to provide alternative; /// scan methods or to extend some collection kinds",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TRootSniffer.cxx:352,extend,extend,352,net/http/src/TRootSniffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TRootSniffer.cxx,1,['extend'],['extend']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// select the variables/targets/spectators which serve as input to the transformation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx:97,variab,variables,97,tmva/tmva/src/VariableTransformBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// set GA configuration parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticFitter.cxx:93,config,configuration,93,tmva/tmva/src/GeneticFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticFitter.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// set MC fitter configuration parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MCFitter.cxx:100,config,configuration,100,tmva/tmva/src/MCFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MCFitter.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// set SA configuration parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SimulatedAnnealingFitter.cxx:93,config,configuration,93,tmva/tmva/src/SimulatedAnnealingFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SimulatedAnnealingFitter.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// set observed value to the expected one; /// works for Gaussian, Poisson or LogNormal; /// assumes mean parameter value is the argument not constant and not depending on observables; /// (if more than two arguments are not constant will use first one but print a warning !); /// need to iterate on the components of the Poisson to get n and nu (nu can be a RooAbsReal); /// (code from G. Petrucciani and extended by L.M.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/AsymptoticCalculator.cxx:489,extend,extended,489,roofit/roostats/src/AsymptoticCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/AsymptoticCalculator.cxx,1,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// set the configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:94,config,configuration,94,roofit/roofit/src/RooNDKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// set the integration type (possible type are) :; ///; /// - 1D integration ( used when only one nuisance and when the posterior is scanned):; /// adaptive , gauss, nonadaptive; /// - multidim:; /// - ADAPTIVE, adaptive numerical integration; /// The parameter numIters (settable with SetNumIters) is the max number of function calls.; /// It can be reduced to make the integration faster but it will be difficult to reach the required tolerance; /// - VEGAS MC integration method based on importance sampling - numIters is number of function calls; /// Extra Vegas parameter can be set using IntegratorMultiDimOptions class; /// - MISER MC integration method based on stratified sampling; /// See also http://en.wikipedia.org/wiki/Monte_Carlo_integration for VEGAS and MISER description; /// - PLAIN simple MC integration method, where the max number of calls can be specified using SetNumIters(numIters); ///; /// Extra integration types are:; ///; /// - TOYMC:; /// evaluate posterior by generating toy MC for the nuisance parameters. It is a MC; /// integration, where the function is sampled according to the nuisance. It is convenient to use when all; /// the nuisance are uncorrelated and it is efficient to generate them; /// The toy are generated by default for each poi values; /// (this method has been proposed and provided by J.P Chou); /// - 1-TOYMC : same method as before but in this case the toys are generated only one time and then used for; /// each poi value. It can be convenient when the generation time is much larger than the evaluation time,; /// otherwise it is recommended to re-generate the toy for each poi scanned point of the posterior function; /// - ROOFIT:; /// use roofit default integration methods which will produce a nested integral (not recommended for more; /// than 1 nuisance parameters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:231,adapt,adaptive,231,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,3,"['ADAPT', 'adapt']","['ADAPTIVE', 'adaptive']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// set the maximum of variable ivar from the training sample; /// that pass/end up in this node, if traininfo defined",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTreeNode.cxx:105,variab,variable,105,tmva/tmva/src/DecisionTreeNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTreeNode.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// set the minimum of variable ivar from the training sample; /// that pass/end up in this node, if traininfo defined",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTreeNode.cxx:105,variab,variable,105,tmva/tmva/src/DecisionTreeNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTreeNode.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// set the variable arrangement",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Event.cxx:94,variab,variable,94,tmva/tmva/src/Event.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Event.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// set variable ivar to val",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Event.cxx:90,variab,variable,90,tmva/tmva/src/Event.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Event.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// standard constructor; ///; /// option string: ""n_training_cycles:n_hidden_layers""; ///; /// default is: n_training_cycles = 5000, n_layers = 4; ///; /// * note that the number of hidden layers in the NN is:; /// n_hidden_layers = n_layers - 2; ///; /// * since there is one input and one output layer. The number of; /// nodes (neurons) is predefined to be:; ///; /// n_nodes[i] = nvars + 1 - i (where i=1..n_layers); ///; /// with nvars being the number of variables used in the NN.; ///; /// Hence, the default case is:; ///; /// n_neurons(layer 1 (input)) : nvars; /// n_neurons(layer 2 (hidden)): nvars-1; /// n_neurons(layer 3 (hidden)): nvars-1; /// n_neurons(layer 4 (out)) : 2; ///; /// This artificial neural network usually needs a relatively large; /// number of cycles to converge (8000 and more). Overtraining can; /// be efficiently tested by comparing the signal and background; /// output of the NN for the events that were used for training and; /// an independent data sample (with equal properties). If the separation; /// performance is significantly better for the training sample, the; /// NN interprets statistical effects, and is hence overtrained. In; /// this case, the number of cycles should be reduced, or the size; /// of the training sample increased.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx:272,layers,layers,272,tmva/tmva/src/MethodCFMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx,2,"['layers', 'variab']","['layers', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// static constructor returning TBrowserImp,; /// as needed by the plugin mechanism.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx:150,plugin,plugin,150,gui/gui/src/TRootBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx,2,['plugin'],['plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// static function to translate the given fit result to a RooArgSet in a generic way.; /// Prefix is prepended to all variable names.; /// LM: caller is responsible to delete the returned list and eventually also the content of the list; /// Note that the returned list is not owning the returned content",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/DetailedOutputAggregator.cxx:201,variab,variable,201,roofit/roostats/src/DetailedOutputAggregator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/DetailedOutputAggregator.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// store the variable names in all foams",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx:96,variab,variable,96,tmva/tmva/src/MethodPDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDEFoam.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// this function provides the ability to change the learning rate according to; /// the success of the last generations.; ///; /// Parameters:; ///; /// - int ofSteps : = if OF the number of STEPS given in this variable (ofSteps) the; /// rate of improvement has to be calculated; ///; /// using this function one can increase the stepSize of the mutation when we have; /// good success (to pass fast through the easy phase-space) and reduce the learning rate; /// if we are in a difficult ""territory"" of the phase-space.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ConvergenceTest.cxx:294,variab,variable,294,tmva/tmva/src/ConvergenceTest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ConvergenceTest.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// this function provides the ability to change the stepSize of a mutation according to; /// the success of the last generations.; ///; /// Parameters:; ///; /// - int ofSteps : = if OF the number of STEPS given in this variable (ofSteps); /// - int successSteps : >sucessSteps Generations could improve the result; /// - double factor : than multiply the stepSize ( spread ) by this factor; ///; /// (if ofSteps == successSteps nothing is changed, if ofSteps < successSteps, the spread; /// is divided by the factor); ///; /// using this function one can increase the stepSize of the mutation when we have; /// good success (to pass fast through the easy phase-space) and reduce the stepSize; /// if we are in a difficult ""territory"" of the phase-space.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticAlgorithm.cxx:303,variab,variable,303,tmva/tmva/src/GeneticAlgorithm.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticAlgorithm.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// train a node by finding the single optimal cut for a single variable; /// that best separates signal and background (maximizes the separation gain)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:146,variab,variable,146,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// user inserts discriminating array of variables in data set info; /// in case input tree provides an array of values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx:123,variab,variables,123,tmva/tmva/src/DataLoader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// user inserts discriminating variable in data set info",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx:114,variab,variable,114,tmva/tmva/src/DataLoader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// write VariableInfo to stream",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableInfo.cxx:92,Variab,VariableInfo,92,tmva/tmva/src/VariableInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableInfo.cxx,1,['Variab'],['VariableInfo']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// write configuration to xml file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodSVM.cxx:92,config,configuration,92,tmva/tmva/src/MethodSVM.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodSVM.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// write options and weights to file; /// note that each one text file for the main configuration information; /// and one ROOT file for ROOT objects are created",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:167,config,configuration,167,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,1,['config'],['configuration']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// write the list of variables (name, min, max) for a given data; /// transformation method to the stream",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:104,variab,variables,104,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// write variable info to XML",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:92,variab,variable,92,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; /// write variable names, ascii",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx:92,variab,variable,92,tmva/tmva/src/RuleFitAPI.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitAPI.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///; /// F(\vec{x}) = \sum_{i=1}^n ( E_i - \sum_{j=1}^n (A_{ij} \sin x_j + B_{ij} \cos x_j) )^2; ///; /// where E_i = \sum_{j=1}^n ( A_{ij} \sin x_{0j} + B_{ij} \cos x_{0j} ); ///; /// B_{ij} and A_{ij} are random matrices composed of integers between -100 and 100;; /// for j = 1,...,n: x_{0j} are any random numbers, -\pi < x_{0j} < \pi;; ///; /// start point : x_j = x_{0j} + 0.1 \delta_j, -\pi < \delta_j < \pi; /// minimum : F(\vec{x} = \vec{x}_0) = 0; ///; /// This is a set of functions of any number of variables n, where the minimum is always; /// known in advance, but where the problem can be changed by choosing different; /// (random) values of the constants A_{ij}, B_{ij}, and x_{0j} . The difficulty can be; /// varied by choosing larger starting deviations \delta_j . In practice, most methods; /// find the ""right"" minimum, corresponding to \vec{x} = \vec{x}_0, but there are usually; /// many subsidiary minima.; /// [Reference: Comput. J. 6 163 (1963).]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressFit.cxx:593,variab,variables,593,test/stressFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressFit.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///; /// F(w,x,y,z) = 100 (y-w^2)^2 + (w-1)^2 + 90 (z-y^2)^2; /// + (1-y)^2 + 10.1 [(x-1)^2 + (z-1)^2]; /// + 19.8 (x-1)(z-1); ///; /// start point: F(-3,-1,-3,-1) = 19192; /// minimum : F(1,1,1,1) = 0.; ///; /// This is a fourth-degree polynomial which is reasonably well-behaved near the minimum,; /// but in order to get there one must cross a rather flat, four-dimensional ""plateau""; /// which often causes minimization algorithm to get ""stuck"" far from the minimum. As; /// such it is a particularly good test of convergence criteria and simulates quite well a; /// feature of many physical problems in many variables where no good starting; /// approximation is known .; /// [Reference: Unpublished. See IBM Technical Report No. 320-2949.]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressFit.cxx:695,variab,variables,695,test/stressFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressFit.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///; /// F(x,y) = (1 + (x+y+1)^2 * (19-14x+3x^2-14y+6xy+3y^2)); /// * (30 + (2x-3y)^2 * (18-32x+12x^2+48y-36xy+27y^2)); ///; /// start point : F(-0.4,-0,6) = 35; /// local minima : F(1.2,0.8) = 840; /// F(1.8,0.2) = 84; /// F(-0.6,-0.4) = 30; /// global minimum : F(0.0,-1.0) = 3; ///; /// This is an eighth-order polynomial in two variables which is well behaved near each; /// minimum, but has four local minima and is of course non-positive-definite in many; /// regions. The saddle point between the two lowest minima occurs at F(-0.4,-0.6)=35; /// making this an interesting start point .; /// [Reference: Math. Comp. 25, 571 (1971).]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressFit.cxx:414,variab,variables,414,test/stressFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressFit.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///; /// Note: This file assumes a certain structure on the input file. The structure; /// is as follows:; ///; /// - dataset (TDirectory); /// - ... some variables, plots ...; /// - Method_XXX (TDirectory); /// + XXX (TDirectory); /// * ... some plots ...; /// * MVA_Method_XXX_Test_#classname#; /// * MVA_Method_XXX_Train_#classname#; /// * ... some plots ...; /// - Method_YYY (TDirectory); /// + YYY (TDirectory); /// * ... some plots ...; /// * MVA_Method_YYY_Test_#classname#; /// * MVA_Method_YYY_Train_#classname#; /// * ... some plots ...; /// - TestTree (TTree); /// + ... data...; /// - TrainTree (TTree); /// + ... data...; ///; /// Keeping this in mind makes the main loop in getRocCurves easier to follow :); ///; ////////////////////////////////////////////////////////////////////////////////; /// Private class that simplify drawing plots combining information from; /// several methods.; ///; /// Each wrapper will manage a canvas and a legend and provide convenience; /// functions to add data to these. It also provides a save function for; /// saving an image representation to disk.; ///; /// Feel free to extend this class as you see fit. It is intended as a; /// convenience when showing multiclass roccurves, not a fully general tool.; ///; /// Usage:; /// auto p = new EfficiencyPlotWrapper(name, title, dataset, i):; /// for (TGraph * g : listOfGraphs) {; /// p->AddGraph(g);; /// p->AddLegendEntry(methodName);; /// }; /// p->save();; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/efficienciesMulticlass.cxx:237,variab,variables,237,tmva/tmvagui/src/efficienciesMulticlass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/efficienciesMulticlass.cxx,2,"['extend', 'variab']","['extend', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset.; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where given yvar is interpreted; /// as the Y value. The Y variable must have a non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:201,extend,extendable,201,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,2,"['extend', 'variab']","['extendable', 'variable']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///; /// RooXYChi2Var constructor with function and X-Y values dataset; ///; /// If the function is a pdf, it must be extendable. in this case, hhe value of; /// the function that defines the chi^2 in this form is takes as the p.d.f.; /// times the expected number of events; ///; /// An X-Y dataset is a weighted dataset with one or more observables X where the weight is interpreted; /// as the Y value and the weight error is interpreted as the Y value error. The weight must have an; /// non-zero error defined at each point for the chi^2 calculation to be meaningful.; ///; /// To store errors associated with the x and y values in a RooDataSet, call RooRealVar::setAttribute(""StoreError""); /// on each X-type observable for which the error should be stored and add datapoints to the dataset as follows; ///; /// RooDataSet::add(xset,yval,yerr) where xset is the RooArgSet of x observables (with or without errors) and yval and yerr; /// are the double values that correspond to the Y and its error; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:200,extend,extendable,200,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,1,['extend'],['extendable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///; /// Sets multiple variables.; /// First argument is an array of pairs<TString,Double>, where; /// first argument is name of variable,; /// second argument represents value.; /// size - number of variables passed in first argument",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:105,variab,variables,105,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,3,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///Computes point-by-point confidence intervals for the fitted function; ///Parameters:; ///n - number of points; ///ndim - dimensions of points; ///x - points, at which to compute the intervals, for ndim > 1; /// should be in order: (x0,y0, x1, y1, ... xn, yn); ///ci - computed intervals are returned in this array; ///cl - confidence level, default=0.95; ///; ///NOTE, that this method can only be used when the fitting function inherits from a TF1,; ///so it's not possible when the fitting function was set as a string or as a pure TFormula",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:514,inherit,inherits,514,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,1,['inherit'],['inherits']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///Constructor from a RooDataSet; ///No sWeighted variables are present",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SPlot.cxx:132,variab,variables,132,roofit/roostats/src/SPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SPlot.cxx,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///Draw credits. If draw is true draw credits,; ///otherwise just return size of all credit text.; ///If extended is true draw or returns size for extended full; ///credits list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx:187,extend,extended,187,rootx/src/rootxx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx,2,['extend'],['extended']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///Initialize OpenGL state variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGL5DPainter.cxx:109,variab,variables,109,graf3d/gl/src/TGL5DPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGL5DPainter.cxx,5,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///Initialize some OpenGL state variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSurfacePainter.cxx:114,variab,variables,114,graf3d/gl/src/TGLSurfacePainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSurfacePainter.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///Initialize some gl state variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLH2PolyPainter.cxx:110,variab,variables,110,graf3d/gl/src/TGLH2PolyPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLH2PolyPainter.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///Return back some gl state variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLBoxPainter.cxx:111,variab,variables,111,graf3d/gl/src/TGLBoxPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLBoxPainter.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///Returns a pointer to a sine or cosine transform of requested size and kind; ///; ///Parameters:; /// \param [in] ndim number of transform dimensions; /// \param [in] n sizes of each dimension (an array at least ndim long); /// \param [in] r2rkind transform kind for each dimension; /// 4 different kinds of sine and cosine transforms are available; /// - DCT-I - kind=0; /// - DCT-II - kind=1; /// - DCT-III - kind=2; /// - DCT-IV - kind=3; /// - DST-I - kind=4; /// - DST-II - kind=5; /// - DST-III - kind=6; /// - DST-IV - kind=7; /// \param [in] option : consists of 2 parts; /// - flag option and an option to create a new TVirtualFFT; /// - flag option: choosing how much time should be spent in planning the transform:; /// Possible options:; /// - ""ES"" (from ""estimate"") - no time in preparing the transform,; /// but probably sub-optimal performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way; /// to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way; /// to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; /// This option should be chosen depending on how many transforms of the; /// same size and type are going to be done.; /// Planning is only done once, for the first transform of this size and type.; /// - option allowing to choose between the global fgFFT and a new TVirtualFFT object; /// - """" - default, changes and returns the global fgFFT variable; /// - ""K"" (from ""keep"")- without touching the global fgFFT,; /// creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; /// Examples of valid options: ""ES K"", ""EX"", etc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:1548,variab,variable,1548,core/base/src/TVirtualFFT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///Returns a pointer to the FFT of requested size and type.; ///; /// \param[in] ndim number of transform dimensions; /// \param[in] n sizes of each dimension (an array at least ndim long); /// \param [in] option consists of 3 parts - flag option and an option to create a new TVirtualFFT; /// 1. transform type option:; /// Available transform types are:; /// C2CForward, C2CBackward, C2R, R2C, R2HC, HC2R, DHT; /// see class description for details; /// 2. flag option: choosing how much time should be spent in planning the transform:; /// Possible options:; /// - ""ES"" (from ""estimate"") - no time in preparing the transform,; /// but probably sub-optimal performance; /// - ""M"" (from ""measure"") - some time spend in finding the optimal way; /// to do the transform; /// - ""P"" (from ""patient"") - more time spend in finding the optimal way; /// to do the transform; /// - ""EX"" (from ""exhaustive"") - the most optimal way is found; /// This option should be chosen depending on how many transforms of the; /// same size and type are going to be done.; /// Planning is only done once, for the first transform of this size and type.; /// 3. option allowing to choose between the global fgFFT and a new TVirtualFFT object; /// """" - default, changes and returns the global fgFFT variable; /// ""K"" (from ""keep"")- without touching the global fgFFT,; /// creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; ///; /// Examples of valid options: ""R2C ES K"", ""C2CF M"", ""DHT P K"", etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx:1357,variab,variable,1357,core/base/src/TVirtualFFT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualFFT.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///Returns the histogram of variable ixvar.; /// If histograms have not already; /// been filled, they are filled with default binning 100.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:110,variab,variable,110,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///Specifies the variables from the tree to be used for splot; ///; ///Variables fNx, fNy, fNSpecies and fNEvents should already be set!; ///; ///In the 1st parameter it is assumed that first fNx variables are x(control variables),; ///then fNy y variables (discriminating variables),; ///then fNy*fNSpecies ypdf variables (probability distribution functions of discriminating; ///variables for different species). The order of pdfs should be: species0_y0, species0_y1,...; ///species1_y0, species1_y1,...species[fNSpecies-1]_y0...; ///The 2nd parameter allows to make a cut; ///TTree::Draw method description contains more details on specifying expression and selection",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:99,variab,variables,99,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,8,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///This function is to use when you already have all the data in arrays; ///and don't want to copy them into the fitter. In this function, the Use() method; ///of TVectorD and TMatrixD is used, so no bytes are physically moved around.; ///First parameter - number of points to fit; ///Second parameter - number of variables in the model; ///Third parameter - the variables of the model, stored in the following way:; ///(x0(0), x1(0), x2(0), x3(0), x0(1), x1(1), x2(1), x3(1),...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:396,variab,variables,396,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///[static utility function]/////////////////////////////; ///; /// true if ""fileName""; /// 1. is an absolute path (""/tmp/a""); /// 2. is a relative path (""../whatever"", ""./test""); /// 3. starts with user name (""~/mail""); /// 4. starts with an environment variable (""$ROOTSYS/bin""); ///; ///////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:337,variab,variable,337,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; ///adds a column to the data matrix; ///it is assumed that the column has size fN; ///variable fVarTemp keeps the number of columns l; ///already added",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx:168,variab,variable,168,math/physics/src/TRobustEstimator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////////; //; // In what follows, fCap is the length of the underlying representation; // vector. Hence, the capacity for a null terminated string held in this; // vector is fCap-1. The variable fSize is the length of the held; // string, excluding the terminating null.; //; // The algorithms make no assumptions about whether internal strings; // hold embedded nulls. However, they do assume that any string; // passed in as an argument that does not have a length count is null; // terminated and therefore has no embedded nulls.; //; // The internal string is always null terminated.; ////////////////////////////////////////////////////////////////////////////////; /// TString default ctor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TString.cxx:258,variab,variable,258,core/base/src/TString.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TString.cxx,1,['variab'],['variable']
Modifiability,"///////////////////////////////////////////////////////////////////////////////; // Global Variables:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx:91,Variab,Variables,91,core/winnt/src/Win32Splash.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/Win32Splash.cxx,1,['Variab'],['Variables']
Modifiability,"///////////////////////////////////////////////////////////////////////////////; /// Initialize Python interpreter; ///; /// NOTE: We introduce a shared global namespace `fGlobalNS`, but using; /// a private local namespace `fLocalNS`. This prohibits the interference; /// of instances of the same method with the same factory, e.g., by overriding; /// variables in the same local namespace.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/PyMethodBase.cxx:353,variab,variables,353,tmva/pymva/src/PyMethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/PyMethodBase.cxx,1,['variab'],['variables']
Modifiability,"///////////////////////////////////////////////////////////////////////////////; /// Internal function used in TH1::Fill to see which axis is full alphanumeric,; /// i.e. can be extended and is alphanumeric",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:178,extend,extended,178,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['extend'],['extended']
Modifiability,"///////////////////////////////////////////////////////////////////////////////; /// Retrieve the minimum and maximum values in the histogram; ///; /// This will not return a cached value and will always search the; /// histogram for the min and max values. The user can condition whether; /// or not to call this with the GetMinimumStored() and GetMaximumStored(); /// methods. If the cache is empty, then the value will be -1111. Users; /// can then use the SetMinimum() or SetMaximum() methods to cache the results.; /// For example, the following recipe will make efficient use of this method; /// and the cached minimum and maximum values.; //; /// \code{.cpp}; /// Double_t currentMin = pHist->GetMinimumStored();; /// Double_t currentMax = pHist->GetMaximumStored();; /// if ((currentMin == -1111) || (currentMax == -1111)) {; /// pHist->GetMinimumAndMaximum(currentMin, currentMax);; /// pHist->SetMinimum(currentMin);; /// pHist->SetMaximum(currentMax);; /// }; /// \endcode; ///; /// \param min reference to variable that will hold found minimum value; /// \param max reference to variable that will hold found maximum value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1018,variab,variable,1018,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['variab'],['variable']
Modifiability,"///////////////////////////////////////////////////////////////////////////////; /// Set `<NoValue>` for attribute. Ensure that value can not be configured via style - defaults will be used; /// Equivalent to css syntax { attrname:; }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/src/RAttrBase.cxx:145,config,configured,145,graf2d/gpadv7/src/RAttrBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/src/RAttrBase.cxx,1,['config'],['configured']
Modifiability,"///////////////////////////////////////////////////////////////////////////////; /// extract the couplings from a given set and copy them to a new one",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:97,coupling,couplings,97,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['coupling'],['couplings']
Modifiability,"///////////////////////////////////////////////////////////////////////////////; /// extract the operators from a list of couplings",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:122,coupling,couplings,122,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['coupling'],['couplings']
Modifiability,"///////////////////////////////////////////////////////////////////////////////; /// extract the operators from a single coupling",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:121,coupling,coupling,121,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['coupling'],['coupling']
Modifiability,"///////////////////////////////////////////////////////////////////////////////; ////////////////////////////// Utility methods ////////////////////////////////; ///////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Updates maximum and minimum value of a variable or target",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VarTransformHandler.cxx:368,variab,variable,368,tmva/tmva/src/VarTransformHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VarTransformHandler.cxx,1,['variab'],['variable']
Modifiability,"//////////////////////////////////////////////////////////////////////////////; // //; // DispatchPtr //; // //; // Smart pointer for reference management and C++ instance tracking when //; // cross-inheriting. The carried pointer is always expected to be derived //; // from CPPInstance, and the DispatchPtr to be embedded in the C++ instance //; // derived dispatcher to which it points (ownership is two-way; life-times //; // are equal). The C++ dispatcher then uses the DispatchPtr to call Python //; // functions for virtual methods. //; // //; //////////////////////////////////////////////////////////////////////////////; // Bindings",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/DispatchPtr.h:199,inherit,inheriting,199,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/DispatchPtr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/DispatchPtr.h,1,['inherit'],['inheriting']
Modifiability,"//////////////////////////////////////////////////////////////////////////////; // //; // PyException //; // //; // Purpose: A C++ exception class for throwing python exceptions //; // through C++ code. //; // Created: Apr, 2004, Scott Snyder, from the version in D0's python_util. //; // //; // The situation is: //; // - We're calling C++ code from python. //; // - The C++ code can call back to python. //; // - What to do then if the python callback throws an exception? //; // //; // We need to get the control flow back to where CPyCppyy calls C++. //; // To do that we throw a TPyException. //; // We can then catch this exception when we do the C++ call. //; // //; // Note that we don't need to save any state in the exception -- it's //; // already in the python error info variables. //; // (??? Actually, if the program is multithreaded, this is dangerous //; // if the code has released and reacquired the lock along the call chain. //; // Punt on this for now, though.) //; // //; //////////////////////////////////////////////////////////////////////////////; // Standard",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h:784,variab,variables,784,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h,1,['variab'],['variables']
Modifiability,"//////////////////////////////////////////////////////////////////////////////; /// Taylor expanding given function in terms of observables around; /// observableValues. Supports expansions upto order 2.; /// \param[in] func Function of variables that is taylor expanded.; /// \param[in] observables Set of variables to perform the expansion.; /// It's type is RooArgList to ensure that it is always ordered the; /// same as the observableValues vector. However, duplicate; /// observables are still not allowed.; /// \param[in] order Order of the expansion (0,1,2 supported).; /// \param[in] observableValues Coordinates around which expansion is; /// performed. If empty, the nominal observable values are taken, if; /// the size matches the size of the observables RooArgSet, the; /// values are mapped to the observables in matching order. If it; /// contains only one element, the same single value is used for all; /// observables.; /// \param[in] eps1 Precision for first derivative and second derivative.; /// \param[in] eps2 Precision for second partial derivative of cross-derivative.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx:237,variab,variables,237,roofit/roofitcore/src/RooPolyFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx,2,['variab'],['variables']
Modifiability,"////////////////////////////////////////////////////////////////////////////; // //; // TGeoIteratorPlugin - Plugin for a TGeoIterator providing the method //; // ProcessNode each time Next is called. //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNode.h:109,Plugin,Plugin,109,geom/geom/inc/TGeoNode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNode.h,1,['Plugin'],['Plugin']
Modifiability,"////////////////////////////////////////////////////////////////////////////; // //; // TTabCom //; // //; // This class performs basic tab completion. //; // You should be able to hit [TAB] to complete a partially typed: //; // //; // username //; // environment variable //; // preprocessor directive //; // pragma //; // filename (with a context-sensitive path) //; // public member function or data member //; // global variable, function, or class name //; // //; // Also, something like gWhatever->Func([TAB] will print the appropriate //; // list of prototypes. For a list of some limitations see the source. //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h:264,variab,variable,264,core/rint/inc/TTabCom.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/inc/TTabCom.h,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////; // TFeldmanCousins; //; // class to calculate the CL upper limit using; // the Feldman-Cousins method as described in PRD V57 #7, p3873-3889; //; // The default confidence interval calvculated using this method is 90%; // This is set either by having a default the constructor, or using the; // appropriate fraction when instantiating an object of this class (e.g. 0.9); //; // The simple extension to a gaussian resolution function bounded at zero; // has not been addressed as yet -> `time is of the essence' as they write; // on the wall of the maze in that classic game ...; //; // VARIABLES THAT CAN BE ALTERED; // -----------------------------; // => depending on your desired precision: The initial values of fMuMin,; // fMuMax, fMuStep and fNMax are those used in the PRD:; // fMuMin = 0.0; // fMuMax = 50.0; // fMuStep= 0.005; // but there is total flexibility in changing this should you desire.; //; // Author: Adrian Bevan, Liverpool University; //; // Copyright Liverpool University 2001 bevan@slac.stanford.edu; ///////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TFeldmanCousins.h:664,VARIAB,VARIABLES,664,math/physics/inc/TFeldmanCousins.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TFeldmanCousins.h,1,['VARIAB'],['VARIABLES']
Modifiability,"////////////////////////////////////////////////////////////////////////////; /// Holds the state of an open sqlite database. Objects of this struct are created in VfsRdOnlyOpen(); /// and then passed by sqlite to the file I/O callbacks (read, close, etc.). This uses C style inheritance; /// where the struct starts with a sqlite3_file member (base class) which is extended by members related to; /// this particular VFS module. Every callback here thus casts the sqlite3_file input parameter to its ""derived""; /// type VfsRootFile.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RSqliteDS.cxx:276,inherit,inheritance,276,tree/dataframe/src/RSqliteDS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RSqliteDS.cxx,2,"['extend', 'inherit']","['extended', 'inheritance']"
Modifiability,"////////////////////////////////////////////////////////////////////////////; /// Return ranges configured for the client",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/src/RFrame.cxx:96,config,configured,96,graf2d/gpadv7/src/RFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/src/RFrame.cxx,1,['config'],['configured']
Modifiability,"////////////////////////////////////////////////////////////////////////////; /// \brief Append a filter to the call graph.; /// \param[in] expression The filter expression in C++; /// \param[in] name Optional name of this filter. See `Report`.; /// \return the filter node of the computation graph.; ///; /// The expression is just-in-time compiled and used to filter entries. It must; /// be valid C++ syntax in which variable names are substituted with the names; /// of branches/columns.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// auto filtered_df = df.Filter(""myCollection.size() > 3"");; /// auto filtered_name_df = df.Filter(""myCollection.size() > 3"", ""Minumum collection size"");; /// ~~~; ///; /// \note If the body of the string expression contains an explicit `return` statement (even if it is in a nested; /// scope), RDataFrame _will not_ add another one in front of the expression. So this will not work:; /// ~~~{.cpp}; /// df.Filter(""Sum(Map(vec, [](float e) { return e*e > 0.5; }))""); /// ~~~; /// but instead this will:; /// ~~~{.cpp}; /// df.Filter(""return Sum(Map(vec, [](float e) { return e*e > 0.5; }))""); /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:420,variab,variable,420,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////; /// \brief Append a filter to the call graph.; /// \param[in] f Function, lambda expression, functor class or any other callable object. It must return a `bool`; /// signalling whether the event has passed the selection (true) or not (false).; /// \param[in] columns Names of the columns/branches in input to the filter function.; /// \param[in] name Optional name of this filter. See `Report`.; /// \return the filter node of the computation graph.; ///; /// Append a filter node at the point of the call graph corresponding to the; /// object this method is called on.; /// The callable `f` should not have side-effects (e.g. modification of an; /// external or static variable) to ensure correct results when implicit; /// multi-threading is active.; ///; /// RDataFrame only evaluates filters when necessary: if multiple filters; /// are chained one after another, they are executed in order and the first; /// one returning false causes the event to be discarded.; /// Even if multiple actions or transformations depend on the same filter,; /// it is executed once per entry. If its result is requested more than; /// once, the cached result is served.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // C++ callable (function, functor class, lambda...) that takes two parameters of the types of ""x"" and ""y""; /// auto filtered = df.Filter(myCut, {""x"", ""y""});; ///; /// // String: it must contain valid C++ except that column names can be used instead of variable names; /// auto filtered = df.Filter(""x*y > 0"");; /// ~~~; ///; /// \note If the body of the string expression contains an explicit `return` statement (even if it is in a nested; /// scope), RDataFrame _will not_ add another one in front of the expression. So this will not work:; /// ~~~{.cpp}; /// df.Filter(""Sum(Map(vec, [](float e) { return e*e > 0.5; }))""); /// ~~~; /// but instead this will:; /// ~~~{.cpp}; /// df.Filter(""return Sum(Map(vec, [](f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:749,variab,variable,749,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////; /// \brief Overwrite the value and/or type of an existing column.; /// \param[in] name The name of the column to redefine.; /// \param[in] expression An expression in C++ which represents the defined value; /// \return the first node of the computation graph for which the new quantity is defined.; ///; /// The expression is just-in-time compiled and used to produce the column entries.; /// It must be valid C++ syntax in which variable names are substituted with the names; /// of branches/columns.; ///; /// The old value of the column can be used as an input for the expression.; /// An exception is thrown in case the column to re-define does not already exist.; ///; /// Aliases cannot be overridden. See the corresponding Define() overload for more information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:508,variab,variable,508,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////////; /// \brief Return an object of type T on which `T::Fill` will be called once per event (*lazy action*).; ///; /// Type T must provide at least:; /// - a copy-constructor; /// - a `Fill` method that accepts as many arguments and with same types as the column names passed as columnList; /// (these types can also be passed as template parameters to this method); /// - a `Merge` method with signature `Merge(TCollection *)` or `Merge(const std::vector<T *>&)` that merges the; /// objects passed as argument into the object on which `Merge` was called (an analogous of TH1::Merge). Note that; /// if the signature that takes a `TCollection*` is used, then T must inherit from TObject (to allow insertion in; /// the TCollection*).; ///; /// \tparam FirstColumn The first type of the column the values of which are used to fill the object. Inferred together with OtherColumns if not present.; /// \tparam OtherColumns A list of the other types of the columns the values of which are used to fill the object.; /// \tparam T The type of the object to fill. Automatically deduced.; /// \param[in] model The model to be considered to build the new return value.; /// \param[in] columnList A list containing the names of the columns that will be passed when calling `Fill`; /// \return the filled object wrapped in a RResultPtr.; ///; /// The user gives up ownership of the model object.; /// The list of column names to be used for filling must always be specified.; /// This action is *lazy*: upon invocation of this method the calculation is booked but not executed.; /// Also see RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// MyClass obj;; /// // Deduce column types (this invocation needs jitting internally, and in this case; /// // MyClass needs to be known to the interpreter); /// auto myFilledObj = myDf.Fill(obj, {""col0"", ""col1""});; /// // explicit column types; /// auto myFilledObj = myDf.Fill<float, f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:740,inherit,inherit,740,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['inherit'],['inherit']
Modifiability,"////////////////////////////////////////////////////////////////////////////; /// \brief Save selected columns to disk, in a new TTree `treename` in file `filename`.; /// \tparam ColumnTypes variadic list of branch/column types.; /// \param[in] treename The name of the output TTree.; /// \param[in] filename The name of the output TFile.; /// \param[in] columnList The list of names of the columns/branches to be written.; /// \param[in] options RSnapshotOptions struct with extra options to pass to TFile and TTree.; /// \return a `RDataFrame` that wraps the snapshotted dataset.; ///; /// Support for writing of nested branches is limited (although RDataFrame is able to read them) and dot ('.'); /// characters in input column names will be replaced by underscores ('_') in the branches produced by Snapshot.; /// When writing a variable size array through Snapshot, it is required that the column indicating its size is also; /// written out and it appears before the array in the columnList.; ///; /// By default, in case of TTree or TChain inputs, Snapshot will try to write out all top-level branches. For other; /// types of inputs, all columns returned by GetColumnNames() will be written out. If friend trees or chains are; /// present, by default all friend top-level branches that have names that do not collide with; /// names of branches in the main TTree/TChain will be written out. Since v6.24, Snapshot will also write out; /// friend branches with the same names of branches in the main TTree/TChain with names of the form; /// `<friendname>_<branchname>` in order to differentiate them from the branches in the main tree/chain.; ///; /// ### Writing to a sub-directory; ///; /// Snapshot supports writing the TTree in a sub-directory inside the TFile. It is sufficient to specify the path to; /// the TTree as part of the TTree name, e.g. `df.Snapshot(""subdir/t"", ""f.root"")` write TTree `t` in the; /// sub-directory `subdir` of file `f.root` (creating file and sub-directory as ne",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:833,variab,variable,833,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['variab'],['variable']
Modifiability,"///////////////////////////////////////////////////////////////////////////; // //; // Class containing the variables for the general QP formulation //; // In terms of in our abstract problem formulation, these variables are //; // the vectors x, y, z and s. //; // //; ///////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/inc/TQpVar.h:108,variab,variables,108,math/quadp/inc/TQpVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/inc/TQpVar.h,2,['variab'],['variables']
Modifiability,"///////////////////////////////////////////////////////////////////////////; // //; // default general problem formulation: //; // //; // minimize c' x + ( 1/2 ) x' * Q x ; //; // subject to A x = b ; //; // clo <= C x <= cup ; //; // xlo <= x <= xup ; //; // //; // The general linear equality constraints must have either an upper //; // or lower bound, but need not have both bounds. The variables may have//; // no bounds; an upper bound; a lower bound or both an upper and lower //; // bound. //; // //; // However, for many (possibly most) QP's, the matrices in the //; // formulation have structure that may be exploited to solve the //; // problem more efficiently. This abstract problem formulation contains //; // a setup such that one can derive and add special formulations . //; // The optimality conditions of the simple QP defined above are //; // follows: //; // //; // rQ = c + Q * x - A' * y - C' * z = 0 //; // rA = A * x - b = 0 //; // rC = C * x - s - d = 0 //; // r3 = S * z = 0 //; // s, z >= 0 //; // //; // Where rQ, rA, rC and r3 newly defined quantities known as residual //; // vectors and x, y, z and s are variables of used in solution of the //; // QPs. //; // //; ///////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/inc/TQpProbBase.h:391,variab,variables,391,math/quadp/inc/TQpProbBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/inc/TQpProbBase.h,2,['variab'],['variables']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // //; // TUnfoldDensity, an extension of the class TUnfoldSys to correct for //; // migration effects. TUnfoldDensity provides methods to deal with //; // multidimensional complex binning schemes and variable bin widths //; // //; // Citation: S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201] //; // //; //////////////////////////////////////////////////////////////////////////; /*; This file is part of TUnfold. TUnfold is free software: you can redistribute it and/or modify; it under the terms of the GNU General Public License as published by; the Free Software Foundation, either version 3 of the License, or; (at your option) any later version. TUnfold is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU General Public License for more details. You should have received a copy of the GNU General Public License; along with TUnfold. If not, see <http://www.gnu.org/licenses/>.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h:284,variab,variable,284,hist/unfold/inc/TUnfoldDensity.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/inc/TUnfoldDensity.h,1,['variab'],['variable']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // Config //; // //; // Singleton class for global configuration settings used by TMVA //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Config.h:86,Config,Config,86,tmva/tmva/inc/TMVA/Config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Config.h,2,"['Config', 'config']","['Config', 'configuration']"
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // Configurable //; // //; // Base class for all classes with option parsing //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Configurable.h:86,Config,Configurable,86,tmva/tmva/inc/TMVA/Configurable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Configurable.h,1,['Config'],['Configurable']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // MethodCuts //; // //; // Multivariate optimisation of signal efficiency for given background //; // efficiency, using rectangular minimum and maximum requirements on //; // input variables //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h:265,variab,variables,265,tmva/tmva/inc/TMVA/MethodCuts.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h,1,['variab'],['variables']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // MethodFDA //; // //; // Function discriminant analysis (FDA). This simple classifier //; // fits any user-defined TFormula (via option configuration string) to //; // the training data by requiring a formula response of 1 (0) to signal //; // (background) events. The parameter fitting is done via the abstract //; // class FitterBase, featuring Monte Carlo sampling, Genetic //; // Algorithm, Simulated Annealing, MINUIT and combinations of these. //; // //; // Can compute one-dimensional regression //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFDA.h:221,config,configuration,221,tmva/tmva/inc/TMVA/MethodFDA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFDA.h,1,['config'],['configuration']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // MethodHMatrix //; // //; // H-Matrix method, which is implemented as a simple comparison of //; // chi-squared estimators for signal and background, taking into //; // account the linear correlations between the input variables //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodHMatrix.h:304,variab,variables,304,tmva/tmva/inc/TMVA/MethodHMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodHMatrix.h,1,['variab'],['variables']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // MethodLikelihood //; // //; // Likelihood analysis (""non-parametric approach"") //; // Also implemented is a ""diagonalized likelihood approach"", //; // which improves over the uncorrelated likelihood ansatz by //; // transforming linearly the input variables into a diagonal space, //; // using the square-root of the covariance matrix //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLikelihood.h:334,variab,variables,334,tmva/tmva/inc/TMVA/MethodLikelihood.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLikelihood.h,1,['variab'],['variables']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TBtree //; // //; // Btree class. TBtree inherits from the TSeqCollection ABC. //; // //; // For a more extensive algorithmic description see the TBtree source. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TBtree.h:127,inherit,inherits,127,core/cont/inc/TBtree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TBtree.h,1,['inherit'],['inherits']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TCollection //; // //; // Collection abstract base class. This class inherits from TObject //; // because we want to be able to have collections of collections. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h:155,inherit,inherits,155,core/cont/inc/TCollection.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TCollection.h,1,['inherit'],['inherits']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TColorGradient //; // //; // TColorGradient extends basic TColor. //; // Actually, this is not a simple color, but linear or radial gradient //; // for a filled area. By inheriting from TColor, gradients can be //; // placed inside gROOT's list of colors and use it in all TAttXXX //; // descendants without modifying any existing code. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TColorGradient.h:130,extend,extends,130,core/base/inc/TColorGradient.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TColorGradient.h,2,"['extend', 'inherit']","['extends', 'inheriting']"
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TCondition //; // //; // This class implements a condition variable. Use a condition variable //; // to signal threads. The actual work is done via the TConditionImp //; // class (either TPosixCondition or TWin32Condition). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TCondition.h:145,variab,variable,145,core/thread/inc/TCondition.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TCondition.h,2,['variab'],['variable']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TDatime //; // //; // This class stores the date and time with a precision of one second //; // in an unsigned 32 bit word (e.g. 950130 124559). The date is stored //; // with the origin being the 1st january 1995. //; // //; // This class has no support for time zones. The time is assumed //; // to be in the local time of the machine where the object was created. //; // As a result, TDatime objects are not portable between machines //; // operating in different time zones and unsuitable for storing the //; // date/time of data taking events and the like. If absolute time is //; // required, use TTimeStamp. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TDatime.h:497,portab,portable,497,core/base/inc/TDatime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TDatime.h,1,['portab'],['portable']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TDavixFile //; // //; // A TDavixFile is like a normal TFile except that it uses //; // libdavix to read/write remote files. //; // It supports HTTP and HTTPS in a number of dialects and options //; // e.g. S3 is one of them //; // Other caracteristics come from the full support of Davix, //; // e.g. full redirection support in any circumstance //; // //; // Authors: Adrien Devresse (CERN IT/SDC) //; // Tigran Mkrtchyan (DESY) //; // //; // Checks, refactoring and ROOT5 porting: //; // Fabrizio Furano (CERN IT/SDC) //; // //; // September 2013 //; // //; //////////////////////////////////////////////////////////////////////////; //; // Parameters that influence the behavior of TDavixFile/TDavixSystem. The names should be self-explanatory; //; //Davix.Debug; //Davix.GSI.UserProxy; //Davix.GSI.UserCert; //Davix.GSI.UserKey; //Davix.GSI.CAdir; //Davix.GSI.CACheck; //Davix.GSI.GridMode; //; //Davix.S3.AccessKey; //Davix.S3.SecretKey; //Davix.S3.Region; //Davix.S3.Token; //; // Environment variables:; // X509_USER_CERT, X509_USER_KEY, X509_USER_PROXY ... usual meaning for the X509 Grid things. gEnv vars have higher priority.; // S3_ACCESS_KEY, S3_SECRET_KEY, S3_REGION, S3_TOKEN. gEnv vars have higher priority.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/davix/inc/TDavixFile.h:539,refactor,refactoring,539,net/davix/inc/TDavixFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/davix/inc/TDavixFile.h,2,"['refactor', 'variab']","['refactoring', 'variables']"
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TDictionary //; // //; // This class defines an abstract interface that must be implemented //; // by all classes that contain dictionary information. //; // //; // The dictionary is defined by the followling classes: //; // TDataType (typedef definitions) //; // TGlobal (global variables) //; // TFunction (global functions) //; // TClass (classes) //; // TBaseClass (base classes) //; // TDataMember (class datamembers) //; // TMethod (class methods) //; // TMethodArg (method arguments) //; // //; // All the above classes implement the TDictionary abstract interface //; // (note: the indentation shows aggregation not inheritance). //; // The ROOT dictionary system provides a very extensive RTTI //; // environment that facilitates a.o. object inspectors, object I/O, //; // ROOT Trees, etc. Most of the type information is provided by the //; // CINT C++ interpreter. //; // //; // TMethodCall (method call environment) //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h:366,variab,variables,366,core/meta/inc/TDictionary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDictionary.h,2,"['inherit', 'variab']","['inheritance', 'variables']"
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TFileStager //; // //; // Abstract base class defining an interface to a stager. //; // //; // To open a connection to a stager use the static method //; // Open(""<stager>""), where <stager> contains a keyword allowing to load //; // the relevant plug-in, e.g. //; // TFileStager::Open(""root://lxb6064.cern.ch"") //; // will load TNetNXGFileStager and initialize it for the redirector at //; // lxb6046.cern.ch . //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TFileStager.h:332,plug-in,plug-in,332,net/net/inc/TFileStager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TFileStager.h,1,['plug-in'],['plug-in']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TFriendElement //; // //; // A TFriendElement TF describes a TTree object TF in a file. //; // When a TFriendElement TF is added to the list of friends of an //; // existing TTree T, any variable from TF can be referenced in a query //; // to T. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TFriendElement.h:273,variab,variable,273,tree/tree/inc/TFriendElement.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TFriendElement.h,1,['variab'],['variable']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TGlobal //; // //; // Global variables class (global variables are obtained from CINT). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TGlobal.h:115,variab,variables,115,core/meta/inc/TGlobal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TGlobal.h,2,['variab'],['variables']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // THashList //; // //; // THashList implements a hybrid collection class consisting of a //; // hash table and a list to store TObject's. The hash table is used for //; // quick access and lookup of objects while the list allows the objects //; // to be ordered. The hash value is calculated using the value returned //; // by the TObject's Hash() function. Each class inheriting from TObject //; // can override Hash() as it sees fit. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h:453,inherit,inheriting,453,core/cont/inc/THashList.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashList.h,1,['inherit'],['inheriting']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // THashTable //; // //; // THashTable implements a hash table to store TObject's. The hash //; // value is calculated using the value returned by the TObject's //; // Hash() function. Each class inheriting from TObject can override //; // Hash() as it sees fit. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h:279,inherit,inheriting,279,core/cont/inc/THashTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/THashTable.h,1,['inherit'],['inheriting']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TLeafC //; // //; // A TLeaf for a variable length string. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TLeafC.h:121,variab,variable,121,tree/tree/inc/TLeafC.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TLeafC.h,1,['variab'],['variable']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TMap //; // //; // TMap implements an associative array of (key,value) pairs using a //; // hash table for efficient retrieval (therefore TMap does not conserve //; // the order of the entries). The hash value is calculated //; // using the value returned by the keys Hash() function. Both key and //; // value need to inherit from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TMap.h:405,inherit,inherit,405,core/cont/inc/TMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TMap.h,1,['inherit'],['inherit']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TMath Base functions //; // //; // Define the functions Min, Max, Abs, Sign, Range for all types. //; // NB: These functions are unfortunately not available in a portable //; // way in std::. //; // //; // More functions are defined in TMath.h. TMathBase.h is designed to be //; // a stable file and used in place of TMath.h in the ROOT miniCore. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMathBase.h:248,portab,portable,248,core/base/inc/TMathBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TMathBase.h,1,['portab'],['portable']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TMatrixTBase //; // //; // Template of base class in the linear algebra package //; // //; // matrix properties are stored here, however the data storage is part //; // of the derived classes //; // //; //////////////////////////////////////////////////////////////////////////; //======================================================================//; // Summary of the streamer version history //; //======================================================================//; // 3.10/02 4.00/a 4.00/b 4.00/c 4.00-08 5.05-1 //; // TMatrixFBase - 2 2 2 4 5 //; // TMatrix 2 3 3 3 3 4 //; // TMatrixF - 3 3 3 3 4 //; // TMatrixFSym - 1 1 1 1 2 //; // TMatrixDSparse - - - - - 2 //; // //; // TMatrixDBase - 2 3 3 4 5 //; // TMatrixD 2 3 3 3 3 4 //; // TMatrixDSym - 1 1 1 1 2 //; // TMatrixDSparse - - 1 1 1 2 //; // //; // TVector 2 3 3 3 3 4 //; // TVectorF - 2 2 2 3 4 //; // //; // TVectorD 2 2 2 2 3 4 //; //======================================================================//; // //; // 4.00/a : (Jan 25 2004) introduced new classes/inheritance scheme, //; // TMatrix now inherits from TMatrixF //; // //; // TMatrixF::TMatrixFBase //; // TMatrixFSym::TMatrixFBase //; // TMatrixD::TMatrixDBase //; // TMatrixDSym::TMatrixDBase //; // //; // 4.00/b : (May 12 2004) introduced TMatrixDSparse and added new //; // element fNRowIndex to TMatrixFBase and TMatrixDBase //; // TMatrixDSparse::TMatrixDBase //; // //; // 4.00/c : (May 27 2004) Used the TObject::fBits to store validity //; // state for vectors and matrices //; // //; // 5.05-1 : templates TMatrixTBase,TMatrixT,TMatrixTSym and //; // TMatrixTSparse were introduced, all versions were //; // increased by 1 . //; // //; //======================================================================//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixTBase.h:1128,inherit,inheritance,1128,math/matrix/inc/TMatrixTBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixTBase.h,2,['inherit'],"['inheritance', 'inherits']"
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TMatrixTCramerInv //; // //; // Encapsulate templates of Cramer Inversion routines. //; // //; // The 4x4, 5x5 and 6x6 are adapted from routines written by //; // Mark Fischler and Steven Haywood as part of the CLHEP package //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixTCramerInv.h:209,adapt,adapted,209,math/matrix/inc/TMatrixTCramerInv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixTCramerInv.h,1,['adapt'],['adapted']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TMatrixTSymCramerInv //; // //; // Encapsulate templates of Cramer Inversion routines. //; // //; // The 4x4, 5x5 and 6x6 are adapted from routines written by //; // Mark Fischler and Steven Haywood as part of the CLHEP package //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixTSymCramerInv.h:212,adapt,adapted,212,math/matrix/inc/TMatrixTSymCramerInv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixTSymCramerInv.h,1,['adapt'],['adapted']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TMySQLServer //; // //; // MySQL server plugin implementing the TSQLServer interface. //; // //; // To open a connection to a server use the static method Connect(). //; // The db argument of Connect() is of the form: //; // mysql://<host>[:<port>][/<database>], e.g. //; // mysql://pcroot.cern.ch:3456/test //; // //; // As an example of connecting to mysql we assume that the server is //; // running on the local host and that you have access to a database //; // named ""test"" by connecting using an account that has a username and //; // password of ""tuser"" and ""tpass"". You can set up this account //; // by using the ""mysql"" program to connect to the server as the MySQL //; // root user and issuing the following statement: //; // //; // mysql> GRANT ALL ON test.* TO 'tuser'@'localhost' IDENTIFIED BY 'tpass';; // //; // If the test database does not exist, create it with this statement: //; // //; // mysql> CREATE DATABASE test; //; // //; // If you want to use a different server host, username, password, //; // or database name, just substitute the appropriate values. //; // To connect do: //; // //; // TSQLServer *db = TSQLServer::Connect(""mysql://localhost/test"", ""tuser"", ""tpass"");; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/inc/TMySQLServer.h:126,plugin,plugin,126,sql/mysql/inc/TMySQLServer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/inc/TMySQLServer.h,1,['plugin'],['plugin']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TPosixCondition //; // //; // This class provides an interface to the posix condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixCondition.h:172,variab,variable,172,core/thread/inc/TPosixCondition.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TPosixCondition.h,1,['variab'],['variable']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TProofList //; // //; // Derivation of TList with an overload of ls() and Print() allowing //; // to filter out some of the variables. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofOutputList.h:210,variab,variables,210,proof/proof/inc/TProofOutputList.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofOutputList.h,1,['variab'],['variables']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TProofQueryResult //; // //; // TQueryResult version adapted to PROOF neeeds. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofQueryResult.h:139,adapt,adapted,139,proof/proof/inc/TProofQueryResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofQueryResult.h,1,['adapt'],['adapted']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TProofResources //; // //; // Abstract base class for PROOF resources. //; // The class contains common method declarations for derived classes //; // such as TProofResourcesStatic which reads and interprets static //; // config files, and returns master, submaster and worker information //; // using TProofNodeInfo objects. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResources.h:308,config,config,308,proof/proof/inc/TProofResources.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResources.h,1,['config'],['config']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TProofResourcesStatic //; // //; // Implementation of PROOF static resources. //; // The purpose of this class is to provide a standard interface to //; // static config files. It interprets Proof config files (proof.conf) //; // and sorts the contents into TProofNodeInfo objects. Master info will //; // be placed in fMaster (of type TProofNodeInfo). Submaster info will //; // be put in fSubmasterList (a TList of TProofNodeInfo objects), while //; // workers (and condorworkers) will be placed in fWorkerList (a TList //; // of TProofNodeInfo objects). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h:249,config,config,249,proof/proof/inc/TProofResourcesStatic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h,2,['config'],['config']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TS3HTTPRequest //; // //; // An object of this class represents an HTTP request extended to be //; // compatible with Amazon's S3 protocol. //; // Specifically, such a request contains an 'Authorization' header with //; // information used by the S3 server for authenticating this request. //; // The authentication information is computed based on a pair of access //; // key and secret key which are both provided to the user by the S3 //; // service provider (e.g. Amazon, Google, etc.). //; // The secret key is used to compute a signature of selected fields in //; // the request. The algorithm for computing the signature is documented //; // in: //; // //; // Google storage: //; // http://code.google.com/apis/storage/docs/reference/v1/developer-guidev1.html#authentication; // //; // Amazon: //; // http://docs.aws.amazon.com/AmazonS3/latest/dev/S3_Authentication2.html; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TS3HTTPRequest.h:166,extend,extended,166,net/net/inc/TS3HTTPRequest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TS3HTTPRequest.h,1,['extend'],['extended']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TSQLServer //; // //; // Abstract base class defining interface to a SQL server. //; // //; // To open a connection to a server use the static method Connect(). //; // The db argument of Connect() is of the form: //; // <dbms>://<host>[:<port>][/<database>], e.g. //; // mysql://pcroot.cern.ch:3456/test, oracle://srv1.cern.ch/main, ... //; // Depending on the <dbms> specified an appropriate plugin library //; // will be loaded which will provide the real interface. //; // //; // Related classes are TSQLStatement, TSQLResult and TSQLRow. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TSQLServer.h:479,plugin,plugin,479,net/net/inc/TSQLServer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TSQLServer.h,1,['plugin'],['plugin']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TScatter //; // //; // A scatter plot able to draw four variables on a single plot //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TScatter.h:142,variab,variables,142,hist/hist/inc/TScatter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TScatter.h,1,['variab'],['variables']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TSimpleAnalysis //; // //; // A TSimpleAnalysis object creates histograms from a TChain. These //; // histograms are stored to an output file. The histogrammed //; // (TTreeFormula) expressions, their cuts, the input and output files //; // are configured through a simple config file that allows comments //; // starting with '#'. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h:331,config,configured,331,tree/treeplayer/inc/TSimpleAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h,2,['config'],"['config', 'configured']"
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TSortedList //; // //; // A sorted doubly linked list. All sortable classes inheriting from //; // TObject can be inserted in a TSortedList. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TSortedList.h:162,inherit,inheriting,162,core/cont/inc/TSortedList.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TSortedList.h,1,['inherit'],['inheriting']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TStatistic //; // //; // Statistical variable, defined by its mean, RMS and related errors. //; // Named, streamable, storable and mergeable. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TStatistic.h:123,variab,variable,123,math/mathcore/inc/TStatistic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TStatistic.h,1,['variab'],['variable']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TThreadPoolTaskImp //; // A base class for thread pool tasks. Users must inherit their //; // tasks classes from it. //; // Example: //; // class TTestTask: public TThreadPoolTaskImp<TTestTask, int> //; // //; // in this example, //; // TTestTask - is a user class, which implements //; // thread pool task object. //; // int - is a type of argument to TTestTask::run method. //; // //; // Please see the tutorial ""tutorials/thread/threadPool.C"" for //; // more details on how to use TThreadPool. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h:159,inherit,inherit,159,core/thread/inc/TThreadPool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TThreadPool.h,1,['inherit'],['inherit']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TToggle //; // //; // This class defines toggling facility for both - object's method or //; // variables. //; // Assume that user provides an object with a two-state field, and //; // methods to Get/Set value of this field. This object enables to switch//; // values via this method when the only thing you know about the field //; // is the name of the method (or method itself) which sets the field. //; // This facility is required in context popup menu, when the only //; // information about how to toggle a field is a name of method which //; // sets it. //; // This Object may be also used for toggling an integer variable, //; // which may be important while building universal objects... //; // When user provides a ""set-method"" of name SetXXX this object tries //; // automaticaly to find a matching ""get-method"" by looking for a method //; // with name GetXXX or IsXXX for given object. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h:182,variab,variables,182,core/gui/inc/TToggle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TToggle.h,2,['variab'],"['variable', 'variables']"
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // TWin32Condition //; // //; // This class provides an interface to the win32 condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h:172,variab,variable,172,core/thread/inc/TWin32Condition.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TWin32Condition.h,1,['variab'],['variable']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // VariableDecorrTransform //; // //; // Linear interpolation class //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableDecorrTransform.h:86,Variab,VariableDecorrTransform,86,tmva/tmva/inc/TMVA/VariableDecorrTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableDecorrTransform.h,1,['Variab'],['VariableDecorrTransform']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // VariableGaussTransform //; // //; // Gaussian transformation of input variables. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableGaussTransform.h:86,Variab,VariableGaussTransform,86,tmva/tmva/inc/TMVA/VariableGaussTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableGaussTransform.h,2,"['Variab', 'variab']","['VariableGaussTransform', 'variables']"
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // VariableIdentityTransform //; // //; // Linear interpolation class //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableIdentityTransform.h:86,Variab,VariableIdentityTransform,86,tmva/tmva/inc/TMVA/VariableIdentityTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableIdentityTransform.h,1,['Variab'],['VariableIdentityTransform']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // VariableInfo //; // //; // Class for type info of MVA input variable //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h:86,Variab,VariableInfo,86,tmva/tmva/inc/TMVA/VariableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h,2,"['Variab', 'variab']","['VariableInfo', 'variable']"
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // VariableNormalizeTransform //; // //; // Linear interpolation class //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableNormalizeTransform.h:86,Variab,VariableNormalizeTransform,86,tmva/tmva/inc/TMVA/VariableNormalizeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableNormalizeTransform.h,1,['Variab'],['VariableNormalizeTransform']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // VariablePCATransform //; // //; // Linear interpolation class //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariablePCATransform.h:86,Variab,VariablePCATransform,86,tmva/tmva/inc/TMVA/VariablePCATransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariablePCATransform.h,1,['Variab'],['VariablePCATransform']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // VariableRearrangeTransform //; // //; // rearrangement of input variables //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableRearrangeTransform.h:86,Variab,VariableRearrangeTransform,86,tmva/tmva/inc/TMVA/VariableRearrangeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableRearrangeTransform.h,2,"['Variab', 'variab']","['VariableRearrangeTransform', 'variables']"
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // VariableSelectionRule //; // //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/VariableSelectionRule.h:86,Variab,VariableSelectionRule,86,core/dictgen/res/VariableSelectionRule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/VariableSelectionRule.h,1,['Variab'],['VariableSelectionRule']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // VariableTransform //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransform.h:86,Variab,VariableTransform,86,tmva/tmva/inc/TMVA/VariableTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransform.h,1,['Variab'],['VariableTransform']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // VariableTransformBase //; // //; // Linear interpolation class //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h:86,Variab,VariableTransformBase,86,tmva/tmva/inc/TMVA/VariableTransformBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h,1,['Variab'],['VariableTransformBase']
Modifiability,"//////////////////////////////////////////////////////////////////////////; // //; // Volume //; // //; // Volume for BinarySearchTree //; // //; // volume element: cubic variable space beteen upper and lower bonds of //; // nvar-dimensional variable space //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Volume.h:171,variab,variable,171,tmva/tmva/inc/TMVA/Volume.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Volume.h,2,['variab'],['variable']
Modifiability,"//////////////////////////////////////////////////////////////////////////; /// Handle a message with an EMPCode.; /// This method is called upon receiving a message with a code >= 1000 (i.e.; /// EMPCode). It handles the most generic types of messages.\n; /// Classes inheriting from TMPWorker should implement their own HandleInput; /// function, that should be able to handle codes specific to that application.\n; /// The appropriate version of the HandleInput method (TMPWorker's or the; /// overriding version) is automatically called depending on the message code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:269,inherit,inheriting,269,core/multiproc/src/TMPWorker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx,1,['inherit'],['inheriting']
Modifiability,"//////////////////////////////////////////////////////////////////////////; /// Handle messages containing an EMPCode.; /// This method should be called upon receiving a message with a code >= 1000; /// (i.e. EMPCode). It handles the most generic types of messages.\n; /// Classes inheriting from TMPClient should implement a similar method; /// to handle message codes specific to the application they're part of.\n; /// \param msg the MPCodeBufPair returned by a MPRecv call; /// \param s; /// \parblock; /// a pointer to the socket from which the message has been received is passed.; /// This way HandleMPCode knows which socket to reply on.; /// \endparblock",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:281,inherit,inheriting,281,core/multiproc/src/TMPClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx,1,['inherit'],['inheriting']
Modifiability,"//////////////////////////////////////////////////////////////////////////; /// This method forks the ROOT session into fNWorkers children processes.; /// The ROOT sessions spawned in this way will not have graphical; /// capabilities and will not read from standard input, but will be; /// connected to the original (interactive) session through TSockets.; /// The children processes' PIDs are added to the fWorkerPids vector.; /// The parent session can then communicate with the children using the; /// Broadcast and MPSend methods, and receive messages through MPRecv.\n; /// \param server; /// \parblock; /// A pointer to an instance of the class that will take control; /// of the subprocesses after forking. Applications should implement their; /// own class inheriting from TMPWorker. Behaviour can be customized; /// overriding TMPWorker::HandleInput.; /// \endparblock; /// \return true if Fork succeeded, false otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:766,inherit,inheriting,766,core/multiproc/src/TMPClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx,1,['inherit'],['inheriting']
Modifiability,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the TObject-inheriting elements of a vector (Map) and merge the objects into a single one (Reduce).; ///; /// \param func Function to be executed on the elements of the vector passed as second parameter.; /// \param args Vector of elements passed as an argument to `func`.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx:123,inherit,inheriting,123,core/base/inc/ROOT/TExecutorCRTP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx,1,['inherit'],['inheriting']
Modifiability,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the TObject-inheriting elements of an immutable vector (Map) and merge the objects into a single one (Reduce).; ///; /// \param func Function to be executed on the elements of the vector passed as second parameter.; /// \param args Immutable vector of elements passed as an argument to `func`.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx:123,inherit,inheriting,123,core/base/inc/ROOT/TExecutorCRTP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx,1,['inherit'],['inheriting']
Modifiability,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TProcessExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel, possibly with different arguments every; /// time.; ///; /// ###ROOT::TProcessExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutor\n.; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// fNWorkers workers; the number of workers can be passed to the constructor; /// or set via SetNWorkers. It typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TProcessExecutor never; /// deletes what it returns, it simply forgets it.\n; /// **Note:** that the usage of ROOT::TProcessExecutor::Map is indicated only when the task to be; /// executed takes more than a few seconds, otherwise the overhead introduced; /// by Map will outrun the benefits of parallel execution on most machines.; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx:358,inherit,inherits,358,core/multiproc/src/TProcessExecutor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx,1,['inherit'],['inherits']
Modifiability,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:365,inherit,inherits,365,core/imt/src/TThreadExecutor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx,3,"['adapt', 'extend', 'inherit']","['adapting', 'extends', 'inherits']"
Modifiability,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPClient; ///; /// Base class for multiprocess applications' clients. It provides a; /// simple interface to fork a ROOT session into server/worker sessions; /// and exchange messages with them. Multiprocessing applications can build; /// on TMPClient and TMPWorker: the class providing multiprocess; /// functionalities to users should inherit (possibly privately) from; /// TMPClient, and the workers executing tasks should inherit from TMPWorker.; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// Class constructor.; /// \param nWorkers; /// \parblock; /// the number of children processes that will be created by; /// Fork, i.e. the number of workers that will be available after this call.; /// The default value (0) means that a number of workers equal to the number; /// of cores of the machine is going to be spawned. If that information is; /// not available, 2 workers are created instead.; /// \endparblock",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:430,inherit,inherit,430,core/multiproc/src/TMPClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx,2,['inherit'],['inherit']
Modifiability,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorker; ///; /// This class works in conjuction with TMPClient, reacting to messages; /// received from it as specified by the Notify and HandleInput methods.; /// When TMPClient::Fork is called, a TMPWorker instance is passed to it; /// which will take control of the ROOT session in the children processes.; ///; /// After forking, every time a message is sent or broadcast to the workers,; /// TMPWorker::Notify is called and the message is retrieved.; /// Messages exchanged between TMPClient and TMPWorker should be sent with; /// the MPSend() standalone function.\n; /// If the code of the message received is above 1000 (i.e. it is an MPCode); /// the qualified TMPWorker::HandleInput method is called, that takes care; /// of handling the most generic type of messages. Otherwise the unqualified; /// (possibly overridden) version of HandleInput is called, allowing classes; /// that inherit from TMPWorker to manage their own protocol.\n; /// An application's worker class should inherit from TMPWorker and implement; /// a HandleInput method that overrides TMPWorker's.\n; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// This method is called by children processes right after forking.; /// Initialization of worker properties that must be delayed until after; /// forking must be done here.\n; /// For example, Init saves the pid into fPid, and adds the TMPWorker to; /// the main eventloop (as a TFileHandler).\n; /// Make sure this operations are performed also by overriding implementations,; /// e.g. by calling TMPWorker::Init explicitly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx:987,inherit,inherit,987,core/multiproc/src/TMPWorker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPWorker.cxx,2,['inherit'],['inherit']
Modifiability,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorkerTree; ///; /// This class works in conjunction with TTreeProcessorMP, reacting to messages; /// received from it as specified by the Notify and HandleInput methods.; ///; /// \class TMPWorkerTreeFunc; ///; /// Templated derivation of TMPWorkerTree handlign generic function tree processing.; ///; /// \class TMPWorkerTreeSel; ///; /// Templated derivation of TMPWorkerTree handlign selector tree processing.; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// Class constructors.; /// Note that this does not set variables like fPid or fS (worker's socket).\n; /// These operations are handled by the Init method, which is called after; /// forking.\n; /// This separation is in place because the instantiation of a worker; /// must be done once _before_ forking, while the initialization of the; /// members must be done _after_ forking by each of the children processes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:724,variab,variables,724,tree/treeplayer/src/TMPWorkerTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx,1,['variab'],['variables']
Modifiability,"/////////////////////////////////////////////////////////////////////////; /// Configure maximal number of allowed connections - 0 is unlimited; /// Will not affect already existing connections; /// Default is 1 - the only client is allowed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx:79,Config,Configure,79,gui/webdisplay/src/RWebWindow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx,1,['Config'],['Configure']
Modifiability,"/////////////////////////////////////////////////////////////////////////; /// Configures connection token (default none); /// When specified, in URL of webpage such token should be provided as &token=value parameter,; /// otherwise web window will refuse connection",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx:79,Config,Configures,79,gui/webdisplay/src/RWebWindow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx,1,['Config'],['Configures']
Modifiability,"/////////////////////////////////////////////////////////////////////////; /// Returns configured connection token",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx:87,config,configured,87,gui/webdisplay/src/RWebWindow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx,1,['config'],['configured']
Modifiability,"/////////////////////////////////////////////////////////////////////////; /// Returns configured user arguments for web window; /// See \ref SetUserArgs method for more details",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx:87,config,configured,87,gui/webdisplay/src/RWebWindow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx,1,['config'],['configured']
Modifiability,"/////////////////////////////////////////////////////////////////////////; /// returns configured connections limit (0 - default)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx:87,config,configured,87,gui/webdisplay/src/RWebWindow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx,1,['config'],['configured']
Modifiability,"////////////////////////////////////////////////////////////////////////; /// calculate the function for ScanTau(); ///; /// \param[in] mode the variable to be calculated; /// \param[in] distribution distribution for which the variable; /// is to be calculated; /// \param[in] axisSteering detailed steering for selecting bins on; /// the axes of the distribution (see method GetRhoItotal()); ///; /// return value: the scan result for the given choice of tau (for; /// which the unfolding was performed prior to calling this method); /// <br/>; /// In ScanTau() the unfolding is repeated for various choices of tau.; /// For each tau, after unfolding, GetScanVariable() is called to; /// determine the scan result for this choice of tau.; /// <br/>; /// the following modes are implemented; /// <ul>; /// <li>kEScanTauRhoAvg : average (stat+bgr) global correlation</li>; /// <li>kEScanTauRhoSquaredAvg : average (stat+bgr) global correlation squared</li>; /// <li>kEScanTauRhoMax : maximum (stat+bgr) global correlation</li>; /// <li>kEScanTauRhoAvgSys : average (stat+bgr+sys) global correlation</li>; /// <li>kEScanTauRhoAvgSquaredSys : average (stat+bgr+sys) global correlation squared</li>; /// <li>kEScanTauRhoMaxSys : maximum (stat+bgr+sys) global; /// correlation</li>; /// </ul>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:145,variab,variable,145,hist/unfold/src/TUnfoldDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////; /// return Stein's unbiased risk estimator; /// See e.g. arXiv:1612.09415; ///; /// A minimum in the SURE variable is a good choice of regularisation strength; ///; /// NOTE: the calculation of SURE depends on the calculation of DF.; /// See the method GetDF() for caveats with Poisson-distributed data.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:180,variab,variable,180,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////////////////////; /// scan a function wrt tau and determine the minimum; ///; /// \param[in] nPoint number of points to be scanned; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study; /// \param[out] scanResult the scanned function wrt log(tau); /// \param[in] mode 1st parameter for the scan function; /// \param[in] distribution 2nd parameter for the scan function; /// \param[in] projectionMode 3rd parameter for the scan function; /// \param[out] lCurvePlot for monitoring, shows the L-curve; /// \param[out] logTauXPlot for monitoring, L-curve(X) as a function of log(tau); /// \param[out] logTauYPlot for monitoring, L-curve(Y) as a function of log(tau); ///; /// Return value: the coordinate number on the curve <b>scanResult</b>; /// which corresponds to the minimum; /// <br/>; /// The function is scanned by repeating the following steps <b>nPoint</b>; /// times; /// <ol>; /// <li>Choose a value of tau</li>; /// <li>Perform the unfolding for this choice of tau, DoUnfold(tau)</li>; /// <li>Determinethe scan variable GetScanVariable()</li>; /// </ol>; /// The method GetScanVariable() defines scans of correlation; /// coefficients, where <b>mode</b> is chosen from the enum; /// EScanTauMode. In addition one may set <b>distribution</b>; /// and/or <b>projectionMode</b> to refine the calculation of; /// correlations (e.g. restrict the calcuation to the signal; /// distribution and/or exclude underflow and overflow bins).; /// See the documentation of GetScanVariable() for details.; /// Alternative scan variables may be defined by overriding the; /// GetScanVariable() method.; /// <br>; /// Automatic choice of scan range: if (tauMin,tauMax) do not; /// correspond to a valid tau range (e.g. tauMin=tauMax=0.0) then; /// the tau range is determined automatically. Use with care!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:1125,variab,variable,1125,hist/unfold/src/TUnfoldDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////////////////////////////////////////////; /// scan the L curve, determine tau and unfold at the final value of; /// tau; ///; /// \param[in] nPoint number of points used for the scan; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study. If tauMin=tauMax=nullptr,; /// a scan interval is determined automatically.; /// \param[out] lCurve if nonzero, a new TGraph is returned,; /// containing the L-curve; /// \param[out] logTauX if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's x-coordinates as a function of log10(tau); /// \param[out] logTauY if nonzero, a new TSpline is returned, to; /// parameterize the L-curve's y-coordinates as a function of log10(tau); /// \param[out] logTauCurvature if nonzero, a new TSpline is returned; /// of the L-curve curvature as a function of log10(tau); ///; /// return value: the coordinate number in the logTauX,logTauY graphs; /// corresponding to the ""final"" choice of tau; ///; /// Recommendation: always check <b>logTauCurvature</b>, it; /// should be a peaked function (similar to a Gaussian), the maximum; /// corresponding to the final choice of tau. Also, check the <b>lCurve</b>; /// it should be approximately L-shaped. If in doubt, adjust tauMin; /// and tauMax until the results are satisfactory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:555,parameteriz,parameterize,555,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,2,['parameteriz'],['parameterize']
Modifiability,"/////////////////////////////////////////////////////////////////////; // (Explicit) TFM Font Parameters; // Following variables are derived from MathTime Professional II's; // mt2syt.tfm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/mathtext/src/table/mathfontparam.h:119,variab,variables,119,graf2d/mathtext/src/table/mathfontparam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/mathtext/src/table/mathfontparam.h,1,['variab'],['variables']
Modifiability,"/////////////////////////////////////////////////////////////////////; /// Extend progress handle",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RProvider.cxx:75,Extend,Extend,75,gui/browsable/src/RProvider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RProvider.cxx,1,['Extend'],['Extend']
Modifiability,"/////////////////////////////////////////////////////////////////////; /// Extend progress handle - to be able react on sub item",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RProvider.cxx:75,Extend,Extend,75,gui/browsable/src/RProvider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RProvider.cxx,1,['Extend'],['Extend']
Modifiability,"/////////////////////////////////////////////////////////////////////; /// Get volume for specified nodeid; /// If specific volume was configured, it will be returned for nodeid==0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomData.cxx:135,config,configured,135,geom/webviewer/src/RGeomData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomData.cxx,1,['config'],['configured']
Modifiability,"/////////////////////////////////////////////////////////////////////; /// Produce JSON string which can be directly used with `build`; /// function from JSROOT to create three.js model of configured geometry; ///; /// Collect all information required to draw geometry on the client; /// This includes list of each visible nodes, meshes and matrixes; /// If @param all_nodes is true, all existing nodes will be provided,; /// which allows to create complete nodes hierarchy on client side; ///; /// Example of usage:; ///; /// void geom() {; /// auto f = TFile::Open(""file_name.root"");; /// auto vol = f->Get<TGeoVolume>(""object_name"");; /// ROOT::RGeomDescription desc;; /// desc.Build(vol);; /// std::ofstream fout(""geom.json"");; /// fout << desc.ProduceJson();; /// }; ///; /// In JSROOT one loads data from JSON file and call `build` function to; /// produce three.js model. Also see example in tutorials/webgui/geom/ folder",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomData.cxx:189,config,configured,189,geom/webviewer/src/RGeomData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/src/RGeomData.cxx,1,['config'],['configured']
Modifiability,"/////////////////////////////////////////////////////////////////////; /// Return configured draw option for the class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RProvider.cxx:82,config,configured,82,gui/browsable/src/RProvider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/src/RProvider.cxx,1,['config'],['configured']
Modifiability,"/////////////////////////////////////////////////////////////////////; /// Returns configured browser name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebDisplayArgs.cxx:83,config,configured,83,gui/webdisplay/src/RWebDisplayArgs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebDisplayArgs.cxx,1,['config'],['configured']
Modifiability,"//////////////////////////////////////////////////////////////////; /// Show eve manager in specified browser.; /// If rootrc variable WebEve.DisableShow is set, HTTP server will be; /// started and access URL printed on stdout.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveManager.cxx:126,variab,variable,126,graf3d/eve7/src/REveManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveManager.cxx,1,['variab'],['variable']
Modifiability,"///////////////////////////////////////////////////////////////; /// Parse boolean gEnv variable which should be ""yes"" or ""no""; /// \return 1 for true or 0 for false; /// Returns \param dflt if result is not defined; /// \param name name of the env variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx:88,variab,variable,88,gui/webdisplay/src/RWebWindowsManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx,2,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////////////; /// @param nclients - number of clients; /// @param test_mode; /// 0 - default config, no special threads; /// 1 - reduce http server timer; /// 2 - create special thread in THttpServer and use it; /// 3 - also create special thread for RWebWindow; /// 4 - directly use civetweb threads (only for experts); /// 10 - force longpoll socket with default config",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:137,config,config,137,tutorials/webgui/ping/ping.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx,2,['config'],['config']
Modifiability,"///////////////////////////////////////////////////////; /// \brief Execute a user-defined accumulation operation on the processed column values in each processing slot.; /// \tparam F The type of the aggregator callable. Automatically deduced.; /// \tparam U The type of the aggregator variable. Must be default-constructible, copy-constructible and copy-assignable. Automatically deduced.; /// \tparam T The type of the column to apply the reduction to. Automatically deduced.; /// \param[in] aggregator A callable with signature `U(U,T)` or `void(U&,T)`, where T is the type of the column, U is the type of the aggregator variable; /// \param[in] merger A callable with signature `U(U,U)` or `void(std::vector<U>&)` used to merge the results of the accumulations of each thread; /// \param[in] columnName The column to be aggregated. If omitted, the first default column is used instead.; /// \param[in] aggIdentity The aggregator variable of each thread is initialized to this value (or is default-constructed if the parameter is omitted); /// \return the result of the aggregation wrapped in a RResultPtr.; ///; /// An aggregator callable takes two values, an aggregator variable and a column value. The aggregator variable is; /// initialized to aggIdentity or default-constructed if aggIdentity is omitted.; /// This action calls the aggregator callable for each processed entry, passing in the aggregator variable and; /// the value of the column columnName.; /// If the signature is `U(U,T)` the aggregator variable is then copy-assigned the result of the execution of the callable.; /// Otherwise the signature of aggregator must be `void(U&,T)`.; ///; /// The merger callable is used to merge the partial accumulation results of each processing thread. It is only called in multi-thread executions.; /// If its signature is `U(U,U)` the aggregator variables of each thread are merged two by two.; /// If its signature is `void(std::vector<U>& a)` it is assumed that it merges all aggregato",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:976,variab,variable,976,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['variab'],['variable']
Modifiability,"////////////////////////////////////////////////; // calculate the upper limit given Nobserved //; // and Nbackground events //; // the variables fUpperLimit and fLowerLimit //; // are set before returning the upper limit //; ////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TFeldmanCousins.h:136,variab,variables,136,math/physics/inc/TFeldmanCousins.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TFeldmanCousins.h,1,['variab'],['variables']
Modifiability,"////////////////////////////////////////; /// This function computes, to an attempted specified accuracy, the value of; /// the integral; ///; /// \param[in] n Number of dimensions [2,15]; /// \param[in] a,b One-dimensional arrays of length >= N . On entry A[i], and B[i],; /// contain the lower and upper limits of integration, respectively.; /// \param[in] maxpts Maximum number of function evaluations to be allowed.; /// maxpts >= 2^n +2*n*(n+1) +1; /// if maxpts<minpts, maxpts is set to 10*minpts; /// \param[in] epsrel Specified relative accuracy.; /// \param[in] epsabs Specified absolute accuracy.; /// The integration algorithm will attempt to reach either the relative or the absolute accuracy.; /// In case the maximum function called is reached the algorithm will stop earlier without having reached; /// the desired accuracy; ///; /// \param[out] relerr Contains, on exit, an estimation of the relative accuracy of the result.; /// \param[out] nfnevl number of function evaluations performed.; /// \param[out] ifail; /// \parblock; /// 0 Normal exit. At least minpts and at most maxpts calls to the function were performed.; ///; /// 1 maxpts is too small for the specified accuracy eps. The result and relerr contain the values obtainable for the; /// specified value of maxpts.; ///; /// 3 n<2 or n>15; /// \endparblock; ///; /// Method:; ///; /// The default method used is the Genz-Mallik adaptive multidimensional algorithm; /// using the class ROOT::Math::AdaptiveIntegratorMultiDim (see the reference documentation of the class); ///; /// Other methods can be used by setting ROOT::Math::IntegratorMultiDimOptions::SetDefaultIntegrator(); /// to different integrators.; /// Other possible integrators are MC integrators based on the ROOT::Math::GSLMCIntegrator class; /// Possible methods are : Vegas, Miser or Plain; /// IN case of MC integration the accuracy is determined by the number of function calls, one should be; /// careful not to use a too large value of maxpts; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:1447,adapt,adaptive,1447,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,2,"['Adapt', 'adapt']","['AdaptiveIntegratorMultiDim', 'adaptive']"
Modifiability,"//////////////////////////////////////; /// Default constructor of TMVA Executor class; /// if ROOT::EnableImplicitMT has not been called then by default a serial executor will be created; /// A user can create a thread pool and enable multi-thread excution by calling; /// ; /// ~~~{.cpp}; /// TMVA::Config::Instance()::%EnableMT(int nthreads);; /// ~~~; ///; /// For releasing the thread pool used by TMVA one can do it by calling; ///; /// TMVA::Config::Instance()::%DisableMT();; ////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Executor.h:301,Config,Config,301,tmva/tmva/inc/TMVA/Executor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Executor.h,2,['Config'],['Config']
Modifiability,"////////////////////////////////; /// Create or simply read branches from filename.; ///; /// if branchDescriptor = """" (default), it is assumed that the Tree descriptor; /// is given in the first line of the file with a syntax like; /// ~~~ {.cpp}; /// A/D:Table[2]/F:Ntracks/I:astring/C; /// ~~~; /// otherwise branchDescriptor must be specified with the above syntax.; ///; /// - If the type of the first variable is not specified, it is assumed to be ""/F""; /// - If the type of any other variable is not specified, the type of the previous; /// variable is assumed. eg; /// - `x:y:z` (all variables are assumed of type ""F""); /// - `x/D:y:z` (all variables are of type ""D""); /// - `x:y/D:z` (x is type ""F"", y and z of type ""D""); ///; /// delimiter allows for the use of another delimiter besides whitespace.; /// This provides support for direct import of common data file formats; /// like csv. If delimiter != ' ' and branchDescriptor == """", then the; /// branch description is taken from the first line in the file, but; /// delimiter is used for the branch names tokenization rather than ':'.; /// Note however that if the values in the first line do not use the; /// /[type] syntax, all variables are assumed to be of type ""F"".; /// If the filename ends with extensions .csv or .CSV and a delimiter is; /// not specified (besides ' '), the delimiter is automatically set to ','.; ///; /// Lines in the input file starting with ""#"" are ignored. Leading whitespace; /// for each column data is skipped. Empty lines are skipped.; ///; /// A TBranch object is created for each variable in the expression.; /// The total number of rows read from the file is returned.; ///; /// ## FILLING a TTree WITH MULTIPLE INPUT TEXT FILES; ///; /// To fill a TTree with multiple input text files, proceed as indicated above; /// for the first input file and omit the second argument for subsequent calls; /// ~~~ {.cpp}; /// T.ReadFile(""file1.dat"",""branch descriptor"");; /// T.ReadFile(""file2.dat"");; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1242,variab,variables,1242,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"////////////////////////////////; /// \brief Append a filter to the call graph.; /// \param[in] f Function, lambda expression, functor class or any other callable object. It must return a `bool`; /// signalling whether the event has passed the selection (true) or not (false).; /// \param[in] columns Names of the columns/branches in input to the filter function.; /// \param[in] name Optional name of this filter. See `Report`.; /// \return the filter node of the computation graph.; ///; /// Append a filter node at the point of the call graph corresponding to the; /// object this method is called on.; /// The callable `f` should not have side-effects (e.g. modification of an; /// external or static variable) to ensure correct results when implicit; /// multi-threading is active.; ///; /// RDataFrame only evaluates filters when necessary: if multiple filters; /// are chained one after another, they are executed in order and the first; /// one returning false causes the event to be discarded.; /// Even if multiple actions or transformations depend on the same filter,; /// it is executed once per entry. If its result is requested more than; /// once, the cached result is served.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // C++ callable (function, functor class, lambda...) that takes two parameters of the types of ""x"" and ""y""; /// auto filtered = df.Filter(myCut, {""x"", ""y""});; ///; /// // String: it must contain valid C++ except that column names can be used instead of variable names; /// auto filtered = df.Filter(""x*y > 0"");; /// ~~~; ///; /// \note If the body of the string expression contains an explicit `return` statement (even if it is in a nested; /// scope), RDataFrame _will not_ add another one in front of the expression. So this will not work:; /// ~~~{.cpp}; /// df.Filter(""Sum(Map(vec, [](float e) { return e*e > 0.5; }))""); /// ~~~; /// but instead this will:; /// ~~~{.cpp}; /// df.Filter(""return Sum(Map(vec, [](float e) { return e*e > 0.5; }))""); /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1538,variab,variable,1538,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['variab'],['variable']
Modifiability,"//////////////////////////////; /// Add a TFriendElement to the list of friends of this chain.; ///; /// A TChain has a list of friends similar to a tree (see TTree::AddFriend).; /// You can add a friend to a chain with the TChain::AddFriend method, and you; /// can retrieve the list of friends with TChain::GetListOfFriends.; /// This example has four chains each has 20 ROOT trees from 20 ROOT files.; /// ~~~ {.cpp}; /// TChain ch(""t""); // a chain with 20 trees from 20 files; /// TChain ch1(""t1"");; /// TChain ch2(""t2"");; /// TChain ch3(""t3"");; /// ~~~; /// Now we can add the friends to the first chain.; /// ~~~ {.cpp}; /// ch.AddFriend(""t1""); /// ch.AddFriend(""t2""); /// ch.AddFriend(""t3""); /// ~~~; /// \image html tchain_friend.png; ///; ///; /// The parameter is the name of friend chain (the name of a chain is always; /// the name of the tree from which it was created).; /// The original chain has access to all variable in its friends.; /// We can use the TChain::Draw method as if the values in the friends were; /// in the original chain.; /// To specify the chain to use in the Draw method, use the syntax:; /// ~~~ {.cpp}; /// <chainname>.<branchname>.<varname>; /// ~~~; /// If the variable name is enough to uniquely identify the variable, you can; /// leave out the chain and/or branch name.; /// For example, this generates a 3-d scatter plot of variable ""var"" in the; /// TChain ch versus variable v1 in TChain t1 versus variable v2 in TChain t2.; /// ~~~ {.cpp}; /// ch.Draw(""var:t1.v1:t2.v2"");; /// ~~~; /// When a TChain::Draw is executed, an automatic call to TTree::AddFriend; /// connects the trees in the chain. When a chain is deleted, its friend; /// elements are also deleted.; ///; /// The number of entries in the friend must be equal or greater to the number; /// of entries of the original chain. If the friend has fewer entries a warning; /// is given and the resulting histogram will have missing entries.; /// For additional information see TTree::AddFriend.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:1252,variab,variable,1252,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,5,['variab'],['variable']
Modifiability,"/////////////////////////////; /// Normal constructor for TTreeIndex; ///; /// Build an index table using the leaves of Tree T with major & minor names; /// The index is built with the expressions given in ""majorname"" and ""minorname"".; ///; /// a Long64_t array fIndexValues is built with:; ///; /// - major = the value of majorname converted to an integer; /// - minor = the value of minorname converted to an integer; /// - fIndexValues[i] = major<<31 + minor; ///; /// This array is sorted. The sorted fIndex[i] contains the serial number; /// in the Tree corresponding to the pair ""major,minor"" in fIndexvalues[i].; ///; /// Once the index is computed, one can retrieve one entry via; /// ~~~{.cpp}; /// T->GetEntryWithIndex(majornumber, minornumber); /// ~~~; /// Example:; /// ~~~{.cpp}; /// tree.BuildIndex(""Run"",""Event""); //creates an index using leaves Run and Event; /// tree.GetEntryWithIndex(1234,56789); // reads entry corresponding to; /// // Run=1234 and Event=56789; /// ~~~; /// Note that majorname and minorname may be expressions using original; /// Tree variables eg: ""run-90000"", ""event +3*xx"". However the result; /// must be integer.; ///; /// In case an expression is specified, the equivalent expression must be computed; /// when calling GetEntryWithIndex.; ///; /// To build an index with only majorname, specify minorname=""0"" (default); ///; /// ## TreeIndex and Friend Trees; ///; /// Assuming a parent Tree T and a friend Tree TF, the following cases are supported:; /// - CASE 1: T->GetEntry(entry) is called; /// In this case, the serial number entry is used to retrieve; /// the data in both Trees.; /// - CASE 2: T->GetEntry(entry) is called, TF has a TreeIndex; /// the expressions given in major/minorname of TF are used; /// to compute the value pair major,minor with the data in T.; /// TF->GetEntryWithIndex(major,minor) is then called (tricky case!); /// - CASE 3: T->GetEntryWithIndex(major,minor) is called.; /// It is assumed that both T and TF have a TreeIn",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:1125,variab,variables,1125,tree/treeplayer/src/TTreeIndex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx,1,['variab'],['variables']
Modifiability,"/////////////////////; // M E T H O D 1 //; /////////////////////; // C o n s t r u c t e x t e n d e d c o m p o s i t e m o d e l; // -------------------------------------------------------------------; // Sum the composite signal and background into an extended pdf nsig*sig+nbkg*bkg",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:256,extend,extended,256,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['extend'],['extended']
Modifiability,"/////////////////////; /// This function transforms the source spectrum. The calling program; /// should fill in input parameters. Then it multiplies transformed; /// coefficients in the given region by the given; /// enhance_coeff and transforms it back; ///; /// Function parameters:; /// - fSource-pointer to the matrix of source spectrum, its size should; /// be fSizeX*fSizeY; /// - fDest-pointer to the matrix of destination data, its size should be; /// fSizeX*fSizeY; ///; /// ### Example of enhancement; ///; /// This function transforms the; /// source spectrum (for details see Transform function). Before the Enhance; /// function is called the class must be created by constructor and the type of the; /// transform as well as some other parameters must be set using a set of setter; /// functions. The Enhance function multiplies transformed coefficients in the given; /// region (fXmin, fXmax, fYmin, fYmax) by the given fEnhancCoeff and transforms it; /// back. Enhanced data are written into dest spectrum.; ///; /// ### Example - script Enhance2.c:; ///; /// \image html spectrum2transform_enhance_image001.jpg Fig. 1 Original two-dimensional noisy spectrum; /// \image html spectrum2transform_enhance_image002.jpg Fig. 2 Enhanced spectrum of the data from Fig. 1 using Cosine transform (channels in region (0-63)x(0-63) were multiplied by 5); ///; /// #### Script:; ///; /// Example to illustrate enhancement (class TSpectrumTransform2). To execute this example, do; ///; /// `root > .x Enhance2.C`; ///; /// ~~~ {.cpp}; /// void Enhance2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** source = new Double_t *[nbinsx];; /// Double_t ** dest = new Double_t *[nbinsx];; /// for (i=0;i<nbinsx;i++); /// source[i]= new Double_t[nbinsy];; /// for (i=0;i<nbinsx;i++); /// dest[i]= new Double_t[nbinsy];; /// TH2F *trans = new TH2F(""trans"",""Background e",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1037,Enhance,Enhanced,1037,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,1,['Enhance'],['Enhanced']
Modifiability,"///////////////; /// This function transforms the source spectrum. The calling program; /// should fill in input parameters. Then it multiplies transformed; /// coefficients in the given region (fXmin, fXmax) by the given; /// fEnhanceCoeff and transforms it back; /// Processed data are written into dest spectrum.; ///; /// Function parameters:; /// - source-pointer to the vector of source spectrum, its length should; /// be size except for inverse FOURIER, FOUR-WALSh, FOUR-HAAR; /// transform. These need 2*size length to supply real and; /// imaginary coefficients.; /// - destVector-pointer to the vector of dest data, its length should be; /// size except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Example - script Enhance.c:; ///; /// \image html spectrumtransform_enhance_image001.jpg Fig. 1 Original spectrum (black line) and enhanced spectrum (red line) using Cosine transform (channels 0-1024 were multiplied by 2); ///; /// #### Script:; ///; /// Example to illustrate Enhance function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Enhance.C`; ///; /// ~~~ {.cpp}; /// void Enhance() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Enhancement using Cosine transform"",nbins,xmin,xmax);; /// TH1F *d = new TH1F(""d"","""",nbins,xmin,xmax);; /// TFile *f = new TFile(""spectra/TSpectrum.root"");; /// h=(TH1F*) f->Get(""transform1;1"");; /// for (i = 0; i < nbins; i++) source[i]=h->GetBinContent(i + 1);; /// TCanvas *Transform1 = gROOT->GetListOfCanvases()->FindObject(""Transform1"");; /// if (!Transform1) Transform1 = new TCanvas(""Transform"",""Transform1"",10,10,1000,700);; /// h->SetAxisRange(700,1024);; /// h->Draw(""L"");; /// TSpectrum *s = new TSpectrum();; /// TSpectrumTransform *t = new",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:990,enhance,enhanced,990,hist/spectrum/src/TSpectrumTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx,2,"['Enhance', 'enhance']","['Enhance', 'enhanced']"
Modifiability,"///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bounds errors; /// * ability to use the branch data as an object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~ {.cpp}; /// Double_t somePx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somePx will updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~ {.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~ {.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; ///; /// if (cutfilename()) htemp->Fill(macrofilename());; ///; /// These two functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example:; /// ~~~ {.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - No",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2645,variab,variables,2645,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variables']
Modifiability,"///; /// Function parameters:; /// - source-pointer to the vector of source spectrum, its length should; /// be size except for inverse FOURIER, FOUR-WALSH, FOUR-HAAR; /// transform. These need 2*size length to supply real and; /// imaginary coefficients.; /// - destVector-pointer to the vector of dest data, its length should be; /// size except for direct FOURIER, FOUR-WALSH, FOUR-HAAR. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example - script Transform.c:; ///; /// \image html spectrumtransform_transform_image002.jpg Fig. 1 Original gamma-ray spectrum; /// \image html spectrumtransform_transform_image003.jpg Fig. 2 Transfo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1289,enhance,enhancement,1289,hist/spectrum/src/TSpectrumTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx,1,['enhance'],['enhancement']
Modifiability,"///; /// One or multiple CapturedStmt/CapturedDecl pairs may be inserted by some; /// directives such as OMPParallelForDirective, but others do not need them; /// (such as OMPTileDirective). In The OMPCanonicalLoop and; /// ForStmt/CXXForRangeStmt pair is repeated for loop associated with the; /// directive. A OMPCanonicalLoop must not appear in the AST unless associated; /// with a OMPLoopBasedDirective. In an imperfectly nested loop nest, the; /// OMPCanonicalLoop may also be wrapped in a CompoundStmt:; ///; /// [...]; /// ` OMPCanonicalLoop; /// `- ForStmt/CXXForRangeStmt; /// `- CompoundStmt; /// |- Leading in-between code (if any); /// |- OMPCanonicalLoop; /// | `- ForStmt/CXXForRangeStmt; /// | `- ...; /// `- Trailing in-between code (if any); ///; /// The leading/trailing in-between code must not itself be a OMPCanonicalLoop; /// to avoid confusion which loop belongs to the nesting.; ///; /// There are three different kinds of iteration variables for different; /// purposes:; /// * Loop user variable: The user-accessible variable with different value for; /// each iteration.; /// * Loop iteration variable: The variable used to identify a loop iteration;; /// for range-based for-statement, this is the hidden iterator '__begin'. For; /// other loops, it is identical to the loop user variable. Must be a; /// random-access iterator, pointer or integer type.; /// * Logical iteration counter: Normalized loop counter starting at 0 and; /// incrementing by one at each iteration. Allows abstracting over the type; /// of the loop iteration variable and is always an unsigned integer type; /// appropriate to represent the range of the loop iteration variable. Its; /// value corresponds to the logical iteration number in the OpenMP; /// specification.; ///; /// This AST node provides two captured statements:; /// * The distance function which computes the number of iterations.; /// * The loop user variable function that computes the loop user variable when; /// given a lo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:2301,variab,variables,2301,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,3,['variab'],"['variable', 'variables']"
Modifiability,"///; /// These captured statements provide the link between C/C++ semantics and the; /// logical iteration counters used by the OpenMPIRBuilder which is; /// language-agnostic and therefore does not know e.g. how to advance a; /// random-access iterator. The OpenMPIRBuilder will use this information to; /// apply simd, workshare-loop, distribute, taskloop and loop directives to the; /// loop. For compatibility with the non-OpenMPIRBuilder codegen path, an; /// OMPCanonicalLoop can itself also be wrapped into the CapturedStmts of an; /// OMPLoopDirective and skipped when searching for the associated syntactical; /// loop.; ///; /// Example:; /// <code>; /// std::vector<std::string> Container{1,2,3};; /// for (std::string Str : Container); /// Body(Str);; /// </code>; /// which is syntactic sugar for approximately:; /// <code>; /// auto &&__range = Container;; /// auto __begin = std::begin(__range);; /// auto __end = std::end(__range);; /// for (; __begin != __end; ++__begin) {; /// std::String Str = *__begin;; /// Body(Str);; /// }; /// </code>; /// In this example, the loop user variable is `Str`, the loop iteration; /// variable is `__begin` of type `std::vector<std::string>::iterator` and the; /// logical iteration number type is `size_t` (unsigned version of; /// `std::vector<std::string>::iterator::difference_type` aka `ptrdiff_t`).; /// Therefore, the distance function will be; /// <code>; /// [&](size_t &Result) { Result = __end - __begin; }; /// </code>; /// and the loop variable function is; /// <code>; /// [&,__begin](std::vector<std::string>::iterator &Result, size_t Logical) {; /// Result = __begin + Logical;; /// }; /// </code>; /// The variable `__begin`, aka the loop iteration variable, is captured by; /// value because it is modified in the loop body, but both functions require; /// the initial value. The OpenMP specification explicitly leaves unspecified; /// when the loop expressions are evaluated such that a capture by reference is; /// sufficient.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:4871,variab,variable,4871,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,3,['variab'],['variable']
Modifiability,"///; /// objc-interface:; /// objc-class-interface-attributes[opt] objc-class-interface; /// objc-category-interface; ///; /// objc-class-interface:; /// '@' 'interface' identifier objc-type-parameter-list[opt]; /// objc-superclass[opt] objc-protocol-refs[opt]; /// objc-class-instance-variables[opt]; /// objc-interface-decl-list; /// @end; ///; /// objc-category-interface:; /// '@' 'interface' identifier objc-type-parameter-list[opt]; /// '(' identifier[opt] ')' objc-protocol-refs[opt]; /// objc-interface-decl-list; /// @end; ///; /// objc-superclass:; /// ':' identifier objc-type-arguments[opt]; ///; /// objc-class-interface-attributes:; /// __attribute__((visibility(""default""))); /// __attribute__((visibility(""hidden""))); /// __attribute__((deprecated)); /// __attribute__((unavailable)); /// __attribute__((objc_exception)) - used by NSException on 64-bit; /// __attribute__((objc_root_class)); ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:286,variab,variables,286,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,1,['variab'],['variables']
Modifiability,"///< ""visiting"" variables not used in MVAs ; mutable, to be able to copy the dynamic values in there",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Event.h:16,variab,variables,16,tmva/tmva/inc/TMVA/Event.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Event.h,1,['variab'],['variables']
Modifiability,"///< # of micro-ops, -1 means it's variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h:35,variab,variable,35,interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,1,['variab'],['variable']
Modifiability,"///< 'L' modifier; // Relative Positional Argument (for insert/move). This variable holds; // the name of the archive member to which the 'a', 'b' or 'i' modifier; // refers. Only one of 'a', 'b' or 'i' can be specified so we only need; // one variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-ar/llvm-ar.cpp:75,variab,variable,75,interpreter/llvm-project/llvm/tools/llvm-ar/llvm-ar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-ar/llvm-ar.cpp,2,['variab'],['variable']
Modifiability,"///< A class that holds configuration information for a model using a workspace as a store",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFit/ModelConfig.h:24,config,configuration,24,roofit/roofitcore/inc/RooFit/ModelConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFit/ModelConfig.h,1,['config'],['configuration']
Modifiability,"///< A register is impossible, variable must be spilled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h:31,variab,variable,31,interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h,1,['variab'],['variable']
Modifiability,"///< Accumulated sizes of lower dimensions for each leaf after variable dimensions has been calculated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:63,variab,variable,63,tree/treeplayer/inc/TTreeFormula.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h,1,['variab'],['variable']
Modifiability,"///< Adapt to the global flag",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TH1.h:5,Adapt,Adapt,5,hist/hist/inc/TH1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TH1.h,1,['Adapt'],['Adapt']
Modifiability,"///< Add variable field.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpiderEditor.h:9,variab,variable,9,tree/treeviewer/inc/TSpiderEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpiderEditor.h,1,['variab'],['variable']
Modifiability,"///< All pdf variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooSimGenContext.h:13,variab,variables,13,roofit/roofitcore/inc/RooSimGenContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooSimGenContext.h,2,['variab'],['variables']
Modifiability,"///< Allow use as extended p.d.f.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealSumPdf.h:18,extend,extended,18,roofit/roofitcore/inc/RooRealSumPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealSumPdf.h,1,['extend'],['extended']
Modifiability,"///< Array of pointers to variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvIntegrandBinding.h:26,variab,variables,26,roofit/roofitcore/src/RooConvIntegrandBinding.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvIntegrandBinding.h,1,['variab'],['variables']
Modifiability,///< Automatic storage duration (most local variables).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Specifiers.h:44,variab,variables,44,interpreter/llvm-project/clang/include/clang/Basic/Specifiers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Specifiers.h,1,['variab'],['variables']
Modifiability,"///< Axis can be extended",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TAxis.h:17,extend,extended,17,hist/hist/inc/TAxis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TAxis.h,1,['extend'],['extended']
Modifiability,"///< BACKWARDS COMPATIBILITY: number of variables in every cell",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h:40,variab,variables,40,tmva/tmva/inc/TMVA/PDEFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h,1,['variab'],['variables']
Modifiability,///< Block doesn't care / variable not live.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h:26,variab,variable,26,interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h,1,['variab'],['variable']
Modifiability,///< Capturing variable-length array type,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Lambda.h:15,variab,variable-length,15,interpreter/llvm-project/clang/include/clang/Basic/Lambda.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Lambda.h,1,['variab'],['variable-length']
Modifiability,"///< Complete variable expression",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeDrawArgsParser.h:14,variab,variable,14,tree/treeplayer/inc/TTreeDrawArgsParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeDrawArgsParser.h,1,['variab'],['variable']
Modifiability,"///< Configuration object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:5,Config,Configuration,5,roofit/roofitcore/src/RooImproperIntegrator1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h,1,['Config'],['Configuration']
Modifiability,"///< Configuration of limits",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h:5,Config,Configuration,5,roofit/roofitcore/src/RooImproperIntegrator1D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooImproperIntegrator1D.h,1,['Config'],['Configuration']
Modifiability,"///< Configuration of numeric convolution integral ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumConvolution.h:5,Config,Configuration,5,roofit/roofitcore/inc/RooNumConvolution.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumConvolution.h,1,['Config'],['Configuration']
Modifiability,"///< Container variable for NLL result on null hypothesis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDLLSignificanceMCSModule.h:15,variab,variable,15,roofit/roofitcore/inc/RooDLLSignificanceMCSModule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDLLSignificanceMCSModule.h,1,['variab'],['variable']
Modifiability,"///< Container variable for NLL result with signal",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDLLSignificanceMCSModule.h:15,variab,variable,15,roofit/roofitcore/inc/RooDLLSignificanceMCSModule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDLLSignificanceMCSModule.h,1,['variab'],['variable']
Modifiability,"///< Container variable for delta NLL",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDLLSignificanceMCSModule.h:15,variab,variable,15,roofit/roofitcore/inc/RooDLLSignificanceMCSModule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDLLSignificanceMCSModule.h,1,['variab'],['variable']
Modifiability,"///< Convolution variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h:17,variab,variable,17,roofit/roofitcore/inc/RooAbsAnaConvPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsAnaConvPdf.h,1,['variab'],['variable']
Modifiability,"///< Convolution variable in PDFxTruth event",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooConvGenContext.h:17,variab,variable,17,roofit/roofitcore/inc/RooConvGenContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooConvGenContext.h,1,['variab'],['variable']
Modifiability,"///< Convolution variable in output event",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooConvGenContext.h:17,variab,variable,17,roofit/roofitcore/inc/RooConvGenContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooConvGenContext.h,1,['variab'],['variable']
Modifiability,"///< Convolution variable in resModel event",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooConvGenContext.h:17,variab,variable,17,roofit/roofitcore/inc/RooConvGenContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooConvGenContext.h,1,['variab'],['variable']
Modifiability,"///< Copy of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h:13,variab,variables,13,roofit/roofitcore/src/RooRealMPFE.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h,2,['variab'],['variables']
Modifiability,"///< Defines if whats currently running is the; // (first) hidden iteration when doing adaptive KDE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/KDEKernel.h:87,adapt,adaptive,87,tmva/tmva/inc/TMVA/KDEKernel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/KDEKernel.h,1,['adapt'],['adaptive']
Modifiability,"///< Delete variable field.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpiderEditor.h:12,variab,variable,12,tree/treeviewer/inc/TSpiderEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpiderEditor.h,1,['variab'],['variable']
Modifiability,"///< Dependent/convolution variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooResolutionModel.h:27,variab,variable,27,roofit/roofitcore/inc/RooResolutionModel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooResolutionModel.h,1,['variab'],['variable']
Modifiability,///< Description of this time variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Timer.h:30,variab,variable,30,interpreter/llvm-project/llvm/include/llvm/Support/Timer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Timer.h,1,['variab'],['variable']
Modifiability,"///< Every variable in log scale.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:11,variab,variable,11,tree/treeviewer/inc/TParallelCoord.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h,1,['variab'],['variable']
Modifiability,"///< Every variable is on the same scale.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:11,variab,variable,11,tree/treeviewer/inc/TParallelCoord.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h,1,['variab'],['variable']
Modifiability,///< Extended Operation (Pseudo Machine Instruction),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h:5,Extend,Extended,5,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,1,['Extend'],['Extended']
Modifiability,"///< Extended mode capabilities of p.d.f.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsGenContext.h:5,Extend,Extended,5,roofit/roofitcore/inc/RooAbsGenContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsGenContext.h,1,['Extend'],['Extended']
Modifiability,"///< Flag indicating if all PDF components are extendable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAddModel.h:47,extend,extendable,47,roofit/roofitcore/inc/RooAddModel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAddModel.h,2,['extend'],['extendable']
Modifiability,///< Floating point induction variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IVDescriptors.h:30,variab,variable,30,interpreter/llvm-project/llvm/include/llvm/Analysis/IVDescriptors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IVDescriptors.h,1,['variab'],['variable']
Modifiability,"///< Function, P.d.f. or extended p.d.f?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChi2Var.h:25,extend,extended,25,roofit/roofitcore/src/RooChi2Var.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChi2Var.h,1,['extend'],['extended']
Modifiability,"///< Geometric mean of the kernel density estimation from the data for adaptive iteration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TKDE.h:71,adapt,adaptive,71,hist/hist/inc/TKDE.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TKDE.h,1,['adapt'],['adaptive']
Modifiability,"///< Global variable saving the current label's text angle. Used by TGaxis::ChangeLabelAttributes.; ////////////////////////////////////////////////////////////////////////////////; /// Helper method used by TGaxis::ChangeLabel.; /// Change the label attributes of label number i. If needed.; ///; /// \param[in] i Current label number to be changed if needed; /// \param[in] nlabels Totals number of labels for this axis (useful when i is counted from the end); /// \param[in] t Original TLatex string holding the label to be changed; /// \param[in] c Text string to be drawn; /// \param[in] value Axis value which should be changed; /// \param[in] eps Epsilon parameter for axis value, -1 means ignore axis value at all",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx:12,variab,variable,12,graf2d/graf/src/TGaxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx,1,['variab'],['variable']
Modifiability,"///< Id identifying the variable for the editor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h:24,variab,variable,24,tree/treeviewer/inc/TParallelCoordVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h,1,['variab'],['variable']
Modifiability,"///< If this is a bundle of memberwise streaming action, this configures the looping",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TStreamerInfoActions.h:62,config,configures,62,io/io/inc/TStreamerInfoActions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TStreamerInfoActions.h,1,['config'],['configures']
Modifiability,"///< If true limits of function binding are used; // Integrator configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h:64,config,configuration,64,roofit/roofitcore/src/RooRombergIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.h,1,['config'],['configuration']
Modifiability,"///< Index of extended PDF (if any)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooProdPdf.h:14,extend,extended,14,roofit/roofitcore/inc/RooProdPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooProdPdf.h,1,['extend'],['extended']
Modifiability,"///< Indicator of the variability of the formula",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:22,variab,variability,22,tree/treeplayer/inc/TTreeFormula.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h,2,['variab'],['variability']
Modifiability,"///< Indicator of the variability of the size of entries",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h:22,variab,variability,22,tree/treeplayer/inc/TSelectorDraw.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h,1,['variab'],['variability']
Modifiability,///< Initialized thread-local variable,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h:30,variab,variable,30,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,1,['variab'],['variable']
Modifiability,"///< Input variable that is mapped",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinningCategory.h:11,variab,variable,11,roofit/roofitcore/inc/RooBinningCategory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooBinningCategory.h,1,['variab'],['variable']
Modifiability,"///< Instance which our data belongs to. This is the variable in the dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooVectorDataStore.h:53,variab,variable,53,roofit/roofitcore/inc/RooVectorDataStore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooVectorDataStore.h,1,['variab'],['variable']
Modifiability,///< Integer induction variable. Step = C.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IVDescriptors.h:23,variab,variable,23,interpreter/llvm-project/llvm/include/llvm/Analysis/IVDescriptors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IVDescriptors.h,1,['variab'],['variable']
Modifiability,///< Integer type with the size of a ptr in default AS.; // XxxTLS variables represent the per-thread state in MSan and per-task state; // in KMSAN.; // For the userspace these point to thread-local globals. In the kernel land; // they point to the members of a per-task struct obtained via a call to; // __msan_get_context_state().; /// Thread-local shadow storage for function parameters.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp:67,variab,variables,67,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,1,['variab'],['variables']
Modifiability,"///< Is configuration valid",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.h:8,config,configuration,8,roofit/roofitcore/src/RooGrid.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.h,1,['config'],['configuration']
Modifiability,"///< Is the input function and extended p.d.f.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:31,extend,extended,31,roofit/roofitcore/src/RooXYChi2Var.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h,1,['extend'],['extended']
Modifiability,"///< Keeps track of plugin library handlers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TROOT.h:20,plugin,plugin,20,core/base/inc/TROOT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TROOT.h,1,['plugin'],['plugin']
Modifiability,"///< Layers in the network.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Net.h:5,Layers,Layers,5,tmva/tmva/inc/TMVA/DNN/Net.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Net.h,1,['Layers'],['Layers']
Modifiability,"///< List of configuration sets for individual integration methods",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h:13,config,configuration,13,roofit/roofitcore/inc/RooNumGenConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumGenConfig.h,2,['config'],['configuration']
Modifiability,"///< List of global variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TROOT.h:20,variab,variables,20,core/base/inc/TROOT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TROOT.h,1,['variab'],['variables']
Modifiability,"///< List of properties shared among clones of a variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealVar.h:49,variab,variable,49,roofit/roofitcore/inc/RooRealVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealVar.h,1,['variab'],['variable']
Modifiability,"///< List of selections over the variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:33,variab,variables,33,tree/treeviewer/inc/TParallelCoord.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h,1,['variab'],['variables']
Modifiability,"///< List of the global variables selection rules",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/SelectionRules.h:24,variab,variables,24,core/dictgen/res/SelectionRules.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/SelectionRules.h,1,['variab'],['variables']
Modifiability,"///< List of the variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:17,variab,variables,17,tree/treeviewer/inc/TParallelCoord.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h,1,['variab'],['variables']
Modifiability,"///< List of variable sizes dimensions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h:13,variab,variable,13,tree/treeplayer/inc/TTreeFormulaManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h,1,['variab'],['variable']
Modifiability,"///< Max variable-width field length",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TZIPFile.h:9,variab,variable-width,9,io/io/inc/TZIPFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TZIPFile.h,1,['variab'],['variable-width']
Modifiability,"///< Maximum entries for a TClonesArray or variable array",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TBranchElement.h:43,variab,variable,43,tree/tree/inc/TBranchElement.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TBranchElement.h,1,['variab'],['variable']
Modifiability,"///< Name of convolution variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooConvGenContext.h:25,variab,variable,25,roofit/roofitcore/inc/RooConvGenContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooConvGenContext.h,1,['variab'],['variable']
Modifiability,"///< Name of the configuration file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h:17,config,configuration,17,tree/treeplayer/inc/TSimpleAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h,1,['config'],['configuration']
Modifiability,///< No complex type; simple scalar variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/COFF.h:36,variab,variable,36,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/COFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/COFF.h,1,['variab'],['variable']
Modifiability,"///< Non-owned pointers to variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealBinding.h:27,variab,variables,27,roofit/roofitcore/inc/RooRealBinding.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealBinding.h,1,['variab'],['variables']
Modifiability,///< Not an induction variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IVDescriptors.h:22,variab,variable,22,interpreter/llvm-project/llvm/include/llvm/Analysis/IVDescriptors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IVDescriptors.h,1,['variab'],['variable']
Modifiability,"///< Number of bin in dependent variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:32,variab,variables,32,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['variab'],['variables']
Modifiability,"///< Number of bin in independent variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:34,variab,variables,34,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['variab'],['variables']
Modifiability,"///< Number of blocks prefetched.; //variables for the second block prefetched with the same semantics as for the first one",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TFileCacheRead.h:37,variab,variables,37,io/io/inc/TFileCacheRead.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TFileCacheRead.h,1,['variab'],['variables']
Modifiability,"///< Number of expected events from extended p.d.f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsGenContext.h:36,extend,extended,36,roofit/roofitcore/inc/RooAbsGenContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsGenContext.h,1,['extend'],['extended']
Modifiability,"///< Number of independent variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:27,variab,variables,27,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['variab'],['variables']
Modifiability,"///< Number of iterations (adaptive or not)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h:27,adapt,adaptive,27,tmva/tmva/inc/TMVA/PDF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h,1,['adapt'],['adaptive']
Modifiability,"///< Number of the hidden layers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/ROperator_GRU.hxx:26,layers,layers,26,tmva/sofie/inc/TMVA/ROperator_GRU.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/ROperator_GRU.hxx,3,['layers'],['layers']
Modifiability,"///< Number of thread slots used by this node, inherited from parent node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RRangeBase.hxx:47,inherit,inherited,47,tree/dataframe/inc/ROOT/RDF/RRangeBase.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RRangeBase.hxx,1,['inherit'],['inherited']
Modifiability,"///< Number of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TPrincipal.h:15,variab,variables,15,hist/hist/inc/TPrincipal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TPrincipal.h,1,['variab'],['variables']
Modifiability,"///< Number of variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:15,variab,variables,15,tree/treeviewer/inc/TParallelCoord.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h,2,['variab'],['variables']
Modifiability,"///< Numeric integrator configuration for integration of function over bin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:24,config,configuration,24,roofit/roofitcore/src/RooXYChi2Var.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h,1,['config'],['configuration']
Modifiability,"///< Original convolution variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumConvolution.h:26,variab,variable,26,roofit/roofitcore/inc/RooNumConvolution.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumConvolution.h,2,['variab'],['variable']
Modifiability,"///< Pointer to Leaf count if variable length (we do not own the counter)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TLeaf.h:30,variab,variable,30,tree/tree/inc/TLeaf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TLeaf.h,1,['variab'],['variable']
Modifiability,"///< Pointer to a variable index.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:18,variab,variable,18,tree/treeplayer/inc/TTreeFormula.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h,1,['variab'],['variable']
Modifiability,"///< Pointer to cloned convolution variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumConvolution.h:35,variab,variable,35,roofit/roofitcore/inc/RooNumConvolution.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooNumConvolution.h,1,['variab'],['variable']
Modifiability,"///< Pointer to weight variable (if set)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDataSet.h:23,variab,variable,23,roofit/roofitcore/inc/RooDataSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDataSet.h,2,['variab'],['variable']
Modifiability,"///< Polygon representing the average variables value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h:38,variab,variables,38,tree/treeviewer/inc/TSpider.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h,1,['variab'],['variables']
Modifiability,"///< Polygons representing the variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h:31,variab,variables,31,tree/treeviewer/inc/TSpider.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h,1,['variab'],['variables']
Modifiability,"///< RMS for signal and background for each variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h:44,variab,variable,44,tmva/tmva/inc/TMVA/BinarySearchTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h,3,['variab'],['variable']
Modifiability,"///< RMSs of variables (background)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h:13,variab,variables,13,tmva/tmva/inc/TMVA/MethodCuts.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h,1,['variab'],['variables']
Modifiability,"///< RMSs of variables (signal)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h:13,variab,variables,13,tmva/tmva/inc/TMVA/MethodCuts.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h,1,['variab'],['variables']
Modifiability,"///< ROOT ./configure detected build features",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TROOT.h:12,config,configure,12,core/base/inc/TROOT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TROOT.h,1,['config'],['configure']
Modifiability,"///< ROOT ./configure set build options",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TROOT.h:12,config,configure,12,core/base/inc/TROOT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TROOT.h,1,['config'],['configure']
Modifiability,///< Register variable,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/COFF.h:14,variab,variable,14,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/COFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/COFF.h,1,['variab'],['variable']
Modifiability,"///< Scratch variables preserved between calls to vegas1/2/2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.h:13,variab,variables,13,roofit/roofitcore/src/RooMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.h,2,['variab'],['variables']
Modifiability,"///< Show range of variables or not.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h:19,variab,variables,19,tree/treeviewer/inc/TSpider.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h,1,['variab'],['variables']
Modifiability,///< Sign extended,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetCallingConv.h:10,extend,extended,10,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetCallingConv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetCallingConv.h,1,['extend'],['extended']
Modifiability,"///< Squared Sum for signal and background for each variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h:52,variab,variable,52,tmva/tmva/inc/TMVA/BinarySearchTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h,1,['variab'],['variable']
Modifiability,///< Stack variable,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/COFF.h:11,variab,variable,11,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/COFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/COFF.h,1,['variab'],['variable']
Modifiability,"///< Stream for the input file; /// The map contains in the first part the names of the histograms written in the output file, in the; /// second part the pair of what is shown in the histograms and the cut applied on the variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h:222,variab,variables,222,tree/treeplayer/inc/TSimpleAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h,1,['variab'],['variables']
Modifiability,"///< Sum for signal and background for each variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h:44,variab,variable,44,tmva/tmva/inc/TMVA/BinarySearchTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h,1,['variab'],['variable']
Modifiability,"///< Supercategory constructed from _data's category variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDataProjBinding.h:53,variab,variables,53,roofit/roofitcore/inc/RooDataProjBinding.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDataProjBinding.h,1,['variab'],['variables']
Modifiability,"///< Support for polymorphism, when set classname is written with object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TLeafObject.h:17,polymorphi,polymorphism,17,tree/tree/inc/TLeafObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TLeafObject.h,1,['polymorphi'],['polymorphism']
Modifiability,"///< Test sample, independent variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:30,variab,variables,30,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['variab'],['variables']
Modifiability,///< The Global Variables in the module,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Module.h:16,Variab,Variables,16,interpreter/llvm-project/llvm/include/llvm/IR/Module.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Module.h,1,['Variab'],['Variables']
Modifiability,"///< The RooWorkspace containing the models and variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HLFactory.h:48,variab,variables,48,roofit/roostats/inc/RooStats/HLFactory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HLFactory.h,1,['variab'],['variables']
Modifiability,///< The debug info variable we are part of.; /// The part of the variable we describe.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:20,variab,variable,20,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,2,['variab'],['variable']
Modifiability,///< The debug location for the variable. This is; ///< used by dwarf writer to find lexical scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:32,variab,variable,32,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,1,['variab'],['variable']
Modifiability,"///< The independent variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooSpline.h:21,variab,variable,21,roofit/roofit/inc/RooSpline.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooSpline.h,1,['variab'],['variable']
Modifiability,"///< The kind of axis represented by this configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxisConfig.hxx:42,config,configuration,42,hist/histv7/inc/ROOT/RAxisConfig.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxisConfig.hxx,1,['config'],['configuration']
Modifiability,"///< The layers consisting the DeepNet",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h:9,layers,layers,9,tmva/tmva/inc/TMVA/DNN/DeepNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h,1,['layers'],['layers']
Modifiability,///< The name of this time variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Timer.h:27,variab,variable,27,interpreter/llvm-project/llvm/include/llvm/Support/Timer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Timer.h,1,['variab'],['variable']
Modifiability,"///< The number of zero layers added top and bottom of the input.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h:24,layers,layers,24,tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h,2,['layers'],['layers']
Modifiability,"///< The number of zero layers left and right of the input.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h:24,layers,layers,24,tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h,2,['layers'],['layers']
Modifiability,"///< The testing sample is sampled; // BFGS variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodMLP.h:44,variab,variables,44,tmva/tmva/inc/TMVA/MethodMLP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodMLP.h,1,['variab'],['variables']
Modifiability,///< The type to extend to,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:17,extend,extend,17,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,2,['extend'],['extend']
Modifiability,///< The type to sign extend to,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:22,extend,extend,22,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,2,['extend'],['extend']
Modifiability,///< The type to zero extend to,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:22,extend,extend,22,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,2,['extend'],['extend']
Modifiability,///< The value to be extended,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:21,extend,extended,21,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,2,['extend'],['extended']
Modifiability,///< The value to be sign extended,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:26,extend,extended,26,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,2,['extend'],['extended']
Modifiability,///< The value to be zero extended,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:26,extend,extended,26,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,2,['extend'],['extended']
Modifiability,"///< The variable we are plotting.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooPlot.h:9,variab,variable,9,roofit/roofitcore/inc/RooPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooPlot.h,1,['variab'],['variable']
Modifiability,"///< Training sample, independent variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:34,variab,variables,34,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['variab'],['variables']
Modifiability,"///< True if one of the variable has 2 variable size dimensions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h:24,variab,variable,24,tree/treeplayer/inc/TTreeFormulaManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h,2,['variab'],['variable']
Modifiability,"///< True if selection has a variable index",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h:29,variab,variable,29,tree/treeplayer/inc/TSelectorDraw.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h,2,['variab'],['variable']
Modifiability,"///< True if the corresponding variable is an array with more than one variable dimension.; //the next line should have a mutable in front. See GetNdata()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:31,variab,variable,31,tree/treeplayer/inc/TTreeFormula.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h,2,['variab'],['variable']
Modifiability,"///< Truth variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFitLegacy/RooTreeData.h:11,variab,variables,11,roofit/roofitcore/inc/RooFitLegacy/RooTreeData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFitLegacy/RooTreeData.h,1,['variab'],['variables']
Modifiability,///< Uninitialized thread-local variable,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h:32,variab,variable,32,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,1,['variab'],['variable']
Modifiability,"///< Used to define possible helpers for the layers (e.g. activations)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/ContextHandles.h:45,layers,layers,45,tmva/tmva/inc/TMVA/DNN/CNN/ContextHandles.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/ContextHandles.h,1,['layers'],['layers']
Modifiability,"///< Variable expression 0 - X, 1 - Y, 2 - Z, 3 - W; ///< If dimension < fgMaxDimension then some; ///< Expressions are empty",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeDrawArgsParser.h:5,Variab,Variable,5,tree/treeplayer/inc/TTreeDrawArgsParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeDrawArgsParser.h,1,['Variab'],['Variable']
Modifiability,"///< Variable holding maximum value of p.d.f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooGenContext.h:5,Variab,Variable,5,roofit/roofitcore/inc/RooGenContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooGenContext.h,1,['Variab'],['Variable']
Modifiability,"///< Variable owning the range.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordRange.h:5,Variab,Variable,5,tree/treeviewer/inc/TParallelCoordRange.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordRange.h,1,['Variab'],['Variable']
Modifiability,"///< Variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h:5,Variab,Variables,5,roofit/roofitcore/src/RooRealMPFE.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h,2,['Variab'],['Variables']
Modifiability,"///< Variables that PDF plots should be normalized over",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooPlot.h:5,Variab,Variables,5,roofit/roofitcore/inc/RooPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooPlot.h,1,['Variab'],['Variables']
Modifiability,"///< Variables to be cached",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCachedReal.h:5,Variab,Variables,5,roofit/roofitcore/inc/RooCachedReal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCachedReal.h,1,['Variab'],['Variables']
Modifiability,"///< Vars without weight variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDataSet.h:25,variab,variable,25,roofit/roofitcore/inc/RooDataSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDataSet.h,1,['variab'],['variable']
Modifiability,"///< Whether we should use vectorized or regular variables; // (we default to false since a lot of functions still cannot be expressed in vectorized form)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TFormula.h:49,variab,variables,49,hist/hist/inc/TFormula.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TFormula.h,1,['variab'],['variables']
Modifiability,"///< X variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TCutG.h:7,variab,variable,7,graf2d/graf/inc/TCutG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TCutG.h,1,['variab'],['variable']
Modifiability,"///< Y variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TCutG.h:7,variab,variable,7,graf2d/graf/inc/TCutG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TCutG.h,1,['variab'],['variable']
Modifiability,"///< Y variable if so designated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h:7,variab,variable,7,roofit/roofitcore/src/RooXYChi2Var.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.h,1,['variab'],['variable']
Modifiability,///< Zero extended,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetCallingConv.h:10,extend,extended,10,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetCallingConv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetCallingConv.h,1,['extend'],['extended']
Modifiability,"///< Zip64 Extended Information Extra Field",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TZIPFile.h:11,Extend,Extended,11,io/io/inc/TZIPFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TZIPFile.h,1,['Extend'],['Extended']
Modifiability,"///< [fDim] Internal parameters of the hyperrectangle; // --------- PDE-Foam specific variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h:86,variab,variables,86,tmva/tmva/inc/TMVA/PDEFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h,1,['variab'],['variables']
Modifiability,"///< [fDim] maximum for variable transform",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h:24,variab,variable,24,tmva/tmva/inc/TMVA/PDEFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h,1,['variab'],['variable']
Modifiability,"///< [fDim] minimum for variable transform",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h:24,variab,variable,24,tmva/tmva/inc/TMVA/PDEFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h,1,['variab'],['variable']
Modifiability,"///< adaptive multi-dimensional integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:5,adapt,adaptive,5,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,1,['adapt'],['adaptive']
Modifiability,"///< address to store variables string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TTreeInput.h:22,variab,variables,22,gui/fitpanel/inc/TTreeInput.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TTreeInput.h,1,['variab'],['variables']
Modifiability,"///< ancient variable, only needed for ""CompatibilityOptions""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDT.h:13,variab,variable,13,tmva/tmva/inc/TMVA/MethodDT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDT.h,1,['variab'],['variable']
Modifiability,"///< average of each variable over the range fPathIdx1,2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h:21,variab,variable,21,tmva/tmva/inc/TMVA/RuleFitParams.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h,1,['variab'],['variable']
Modifiability,"///< average of each variable over the range fPerfIdx1,2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h:21,variab,variable,21,tmva/tmva/inc/TMVA/RuleFitParams.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h,1,['variab'],['variable']
Modifiability,"///< checker for option string; // classes and method related to easy and flexible option parsing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Configurable.h:74,flexible,flexible,74,tmva/tmva/inc/TMVA/Configurable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Configurable.h,1,['flexible'],['flexible']
Modifiability,"///< choose a random subset of possible cut variables at each node during training",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h:44,variab,variables,44,tmva/tmva/inc/TMVA/MethodBDT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h,2,['variab'],['variables']
Modifiability,"///< choose at each node splitting a random set of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h:51,variab,variables,51,tmva/tmva/inc/TMVA/DecisionTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h,1,['variab'],['variables']
Modifiability,"///< collection of all variable names",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h:23,variab,variable,23,tmva/tmva/inc/TMVA/PDEFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h,1,['variab'],['variable']
Modifiability,"///< contains the Sigmas Widths for adaptive KDE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/KDEKernel.h:36,adapt,adaptive,36,tmva/tmva/inc/TMVA/KDEKernel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/KDEKernel.h,1,['adapt'],['adaptive']
Modifiability,"///< controls use of adaptive sampling algorithm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/FeldmanCousins.h:21,adapt,adaptive,21,roofit/roostats/inc/RooStats/FeldmanCousins.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/FeldmanCousins.h,2,['adapt'],['adaptive']
Modifiability,"///< coordinates (variables) for knn search",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ModulekNN.h:18,variab,variables,18,tmva/tmva/inc/TMVA/ModulekNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ModulekNN.h,1,['variab'],['variables']
Modifiability,"///< create and fill epoch-wise monitoring histograms (makes outputfile big!); // genetic algorithm variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodMLP.h:100,variab,variables,100,tmva/tmva/inc/TMVA/MethodMLP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodMLP.h,1,['variab'],['variables']
Modifiability,"///< current configurations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomData.hxx:13,config,configurations,13,geom/webviewer/inc/ROOT/RGeomData.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomData.hxx,1,['config'],['configurations']
Modifiability,"///< cutoff variable to use for integrating keys pdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCInterval.h:12,variab,variable,12,roofit/roostats/inc/RooStats/MCMCInterval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCInterval.h,1,['variab'],['variable']
Modifiability,"///< debug variable for cost complexity pruning ..",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTreeNode.h:11,variab,variable,11,tmva/tmva/inc/TMVA/DecisionTreeNode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTreeNode.h,1,['variab'],['variable']
Modifiability,"///< default adaptive integration type which can be used in the case of the presence of singularities.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:13,adapt,adaptive,13,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,1,['adapt'],['adaptive']
Modifiability,"///< description of this configurable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Configurable.h:25,config,configurable,25,tmva/tmva/inc/TMVA/Configurable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Configurable.h,1,['config'],['configurable']
Modifiability,"///< dummy variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h:11,variab,variable,11,tmva/tmva/inc/TMVA/VariableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h,1,['variab'],['variable']
Modifiability,"///< event variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataLoader.h:11,variab,variables,11,tmva/tmva/inc/TMVA/DataLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataLoader.h,1,['variab'],['variables']
Modifiability,"///< event variables [saved to weight file]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h:11,variab,variables,11,tmva/tmva/inc/TMVA/VariableTransformBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h,1,['variab'],['variables']
Modifiability,///< executable requests using variable size pages,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h:31,variab,variable,31,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,1,['variab'],['variable']
Modifiability,"///< fCumulUsedSizes(1) for multi variable dimensions case; //the next line should be: mutable Int_t fUsedSizes[kMAXFORMDIM+1]; See GetNdata()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h:34,variab,variable,34,tree/treeplayer/inc/TTreeFormulaManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h,1,['variab'],['variable']
Modifiability,"///< fine tuning factor for Adaptive KDE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLikelihood.h:28,Adapt,Adaptive,28,tmva/tmva/inc/TMVA/MethodLikelihood.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLikelihood.h,2,['Adapt'],['Adaptive']
Modifiability,"///< fine tuning factor for Adaptive KDE: factor to multiply the ""width"" of the Kernel function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/KDEKernel.h:28,Adapt,Adaptive,28,tmva/tmva/inc/TMVA/KDEKernel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/KDEKernel.h,1,['Adapt'],['Adaptive']
Modifiability,"///< first channel of filtered or enhanced region",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumTransform.h:34,enhance,enhanced,34,hist/spectrum/inc/TSpectrumTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumTransform.h,1,['enhance'],['enhanced']
Modifiability,"///< first channel x of filtered or enhanced region",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h:36,enhance,enhanced,36,hist/spectrum/inc/TSpectrum2Transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h,1,['enhance'],['enhanced']
Modifiability,"///< first channel y of filtered or enhanced region",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h:36,enhance,enhanced,36,hist/spectrum/inc/TSpectrum2Transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h,1,['enhance'],['enhanced']
Modifiability,"///< fitter configuration (options and parameter settings)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:12,config,configuration,12,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,2,['config'],['configuration']
Modifiability,"///< fix variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h:9,variab,variable,9,math/mathcore/inc/Math/MinimTransformVariable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h,1,['variab'],['variable']
Modifiability,"///< fixed variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h:11,variab,variable,11,math/mathcore/inc/Math/MinimTransformVariable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h,1,['variab'],['variable']
Modifiability,"///< flag for indicating if likelihood is extended",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/LogLikelihoodFCN.h:42,extend,extended,42,math/mathcore/inc/Fit/LogLikelihoodFCN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/LogLikelihoodFCN.h,1,['extend'],['extended']
Modifiability,"///< flag to indicate if is extended (when false is a Multinomial likelihood), default is true",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/PoissonLikelihoodFCN.h:28,extend,extended,28,math/mathcore/inc/Fit/PoissonLikelihoodFCN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/PoissonLikelihoodFCN.h,1,['extend'],['extended']
Modifiability,"///< fraction of events used to compute variable width",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodKNN.h:40,variab,variable,40,tmva/tmva/inc/TMVA/MethodKNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodKNN.h,1,['variab'],['variable']
Modifiability,"///< fraction of rules using a given variable - size of vector = n(variables)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h:37,variab,variable,37,tmva/tmva/inc/TMVA/RuleEnsemble.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h,2,['variab'],"['variable', 'variables']"
Modifiability,"///< free variable (unlimited)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h:10,variab,variable,10,math/mathcore/inc/Math/MinimTransformVariable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h,1,['variab'],['variable']
Modifiability,"///< function maximum; // ranges for plots, default is variable range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/LikelihoodIntervalPlot.h:55,variab,variable,55,roofit/roostats/inc/RooStats/LikelihoodIntervalPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/LikelihoodIntervalPlot.h,1,['variab'],['variable']
Modifiability,"///< get variables/targets/spectators",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h:9,variab,variables,9,tmva/tmva/inc/TMVA/VariableTransformBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h,1,['variab'],['variables']
Modifiability,"///< gradient vector - dimension = number of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h:45,variab,variables,45,tmva/tmva/inc/TMVA/RuleFitParams.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitParams.h,1,['variab'],['variables']
Modifiability,"///< historic variable, only needed for ""CompatibilityOptions""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h:14,variab,variable,14,tmva/tmva/inc/TMVA/MethodBoost.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h,2,['variab'],['variable']
Modifiability,"///< holds the current back-transformed event; // variable selection",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h:50,variab,variable,50,tmva/tmva/inc/TMVA/VariableTransformBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h,1,['variab'],['variable']
Modifiability,"///< how fast temperature change in adaptive (in adaptive two variables describe; /// the change of temperature, but fAdaptiveSpeed should be 1.0 and its not; /// recommended to change it)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealingFitter.h:36,adapt,adaptive,36,tmva/tmva/inc/TMVA/SimulatedAnnealingFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealingFitter.h,3,"['adapt', 'variab']","['adaptive', 'variables']"
Modifiability,"///< how fast temperature change in adaptive (in adaptive two variables describe; ///< the change of temperature, but fAdaptiveSpeed should be 1.0 and its not; ///< recommended to change it)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealing.h:36,adapt,adaptive,36,tmva/tmva/inc/TMVA/SimulatedAnnealing.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealing.h,3,"['adapt', 'variab']","['adaptive', 'variables']"
Modifiability,"///< if set true: Configurable objects write file with option reference",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Config.h:18,Config,Configurable,18,tmva/tmva/inc/TMVA/Config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Config.h,1,['Config'],['Configurable']
Modifiability,"///< if true, sort the variables into the order as defined by the user at the var definition; ///< if false, sort the variables according to the order given for the var transformation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h:23,variab,variables,23,tmva/tmva/inc/TMVA/VariableTransformBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h,2,['variab'],['variables']
Modifiability,"///< index of variable used in node selection (decision tree)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTreeNode.h:14,variab,variable,14,tmva/tmva/inc/TMVA/BinarySearchTreeNode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTreeNode.h,2,['variab'],['variable']
Modifiability,"///< individual variables already used in fisher criterium are not anymore analysed individually for node splitting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h:16,variab,variables,16,tmva/tmva/inc/TMVA/DecisionTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h,2,['variab'],['variables']
Modifiability,"///< initial scale for adaptive volume",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h:23,adapt,adaptive,23,tmva/tmva/inc/TMVA/MethodPDERS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h,1,['adapt'],['adaptive']
Modifiability,"///< input variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetFactory.h:11,variab,variables,11,tmva/tmva/inc/TMVA/DataSetFactory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetFactory.h,1,['variab'],['variables']
Modifiability,"///< internal variable name (needs to be regular expression)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h:14,variab,variable,14,tmva/tmva/inc/TMVA/VariableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h,1,['variab'],['variable']
Modifiability,"///< internal variable, counting the depth of the tree during insertion",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h:14,variab,variable,14,tmva/tmva/inc/TMVA/BinarySearchTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h,1,['variab'],['variable']
Modifiability,"///< labels variable transform method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBase.h:12,variab,variable,12,tmva/tmva/inc/TMVA/MethodBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBase.h,1,['variab'],['variable']
Modifiability,"///< last channel of filtered or enhanced region",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumTransform.h:33,enhance,enhanced,33,hist/spectrum/inc/TSpectrumTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrumTransform.h,1,['enhance'],['enhanced']
Modifiability,"///< last channel x of filtered or enhanced region",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h:35,enhance,enhanced,35,hist/spectrum/inc/TSpectrum2Transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h,1,['enhance'],['enhanced']
Modifiability,"///< last channel y of filtered or enhanced region",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h:35,enhance,enhanced,35,hist/spectrum/inc/TSpectrum2Transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h,1,['enhance'],['enhanced']
Modifiability,"///< line search variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodMLP.h:17,variab,variable,17,tmva/tmva/inc/TMVA/MethodMLP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodMLP.h,2,['variab'],['variable']
Modifiability,"///< linear coefficients, one per variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h:34,variab,variable,34,tmva/tmva/inc/TMVA/RuleEnsemble.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h,1,['variab'],['variable']
Modifiability,"///< list of PDFs (background); // default initialisation called by all constructors; // obsolete variables kept for backward compatibility",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLikelihood.h:98,variab,variables,98,tmva/tmva/inc/TMVA/MethodLikelihood.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLikelihood.h,1,['variab'],['variables']
Modifiability,"///< list of spectators expressions/internal names; // variable arrays",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetInfo.h:55,variab,variable,55,tmva/tmva/inc/TMVA/DataSetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetInfo.h,1,['variab'],['variable']
Modifiability,"///< list of variable expressions/internal names",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetInfo.h:13,variab,variable,13,tmva/tmva/inc/TMVA/DataSetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetInfo.h,1,['variab'],['variable']
Modifiability,"///< max value of independent variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:30,variab,variables,30,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['variab'],['variables']
Modifiability,"///< maximum (signal and background); // variable preprocessing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBase.h:41,variab,variable,41,tmva/tmva/inc/TMVA/MethodBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBase.h,1,['variab'],['variable']
Modifiability,"///< maximum number of events in adaptive volume",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h:33,adapt,adaptive,33,tmva/tmva/inc/TMVA/MethodPDERS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h,1,['adapt'],['adaptive']
Modifiability,"///< maximum number of iterations to adapt volume size",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h:37,adapt,adapt,37,tmva/tmva/inc/TMVA/MethodPDERS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h,1,['adapt'],['adapt']
Modifiability,"///< maximum value for correlated/decorrelated/PCA variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h:51,variab,variable,51,tmva/tmva/inc/TMVA/VariableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h,1,['variab'],['variable']
Modifiability,"///< mean for signal and background for each variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h:45,variab,variable,45,tmva/tmva/inc/TMVA/BinarySearchTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h,1,['variab'],['variable']
Modifiability,"///< mean value for correlated/decorrelated/PCA variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h:48,variab,variable,48,tmva/tmva/inc/TMVA/VariableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h,1,['variab'],['variable']
Modifiability,"///< mean value of independent variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:31,variab,variables,31,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['variab'],['variables']
Modifiability,"///< means of variables (background)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h:14,variab,variables,14,tmva/tmva/inc/TMVA/MethodCuts.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h,1,['variab'],['variables']
Modifiability,"///< means of variables (signal)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h:14,variab,variables,14,tmva/tmva/inc/TMVA/MethodCuts.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h,1,['variab'],['variables']
Modifiability,"///< min value of independent variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:30,variab,variables,30,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['variab'],['variables']
Modifiability,"///< minimum number of events in adaptive volume",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h:33,adapt,adaptive,33,tmva/tmva/inc/TMVA/MethodPDERS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h,1,['adapt'],['adaptive']
Modifiability,"///< minimum value for correlated/decorrelated/PCA variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h:51,variab,variable,51,tmva/tmva/inc/TMVA/VariableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h,1,['variab'],['variable']
Modifiability,"///< multiplication coefficient applied in enhanced region;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h:43,enhance,enhanced,43,hist/spectrum/inc/TSpectrum2Transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/inc/TSpectrum2Transform.h,2,['enhance'],['enhanced']
Modifiability,"///< needed for MethodCategories, where we can train on other than the main variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Event.h:76,variab,variables,76,tmva/tmva/inc/TMVA/Event.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Event.h,1,['variab'],['variables']
Modifiability,"///< normalise input variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h:21,variab,variables,21,tmva/tmva/inc/TMVA/VariableTransformBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h,1,['variab'],['variables']
Modifiability,"///< number of grid point in variable cut scans",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h:29,variab,variable,29,tmva/tmva/inc/TMVA/DecisionTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h,1,['variab'],['variable']
Modifiability,"///< number of input variables for multi-gaussian",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodSVM.h:21,variab,variables,21,tmva/tmva/inc/TMVA/MethodSVM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodSVM.h,1,['variab'],['variables']
Modifiability,"///< number of samples per variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/FeldmanCousins.h:27,variab,variable,27,roofit/roostats/inc/RooStats/FeldmanCousins.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/FeldmanCousins.h,1,['variab'],['variable']
Modifiability,"///< number of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCInterval.h:15,variab,variables,15,roofit/roostats/inc/RooStats/MCMCInterval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCInterval.h,3,['variab'],['variables']
Modifiability,"///< number of variables to be transformed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h:15,variab,variables,15,tmva/tmva/inc/TMVA/VariableTransformBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h,1,['variab'],['variables']
Modifiability,"///< number of variables used to separate S and B",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h:15,variab,variables,15,tmva/tmva/inc/TMVA/DecisionTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h,1,['variab'],['variables']
Modifiability,"///< one importance per input variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h:30,variab,variable,30,tmva/tmva/inc/TMVA/RuleEnsemble.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h,1,['variab'],['variable']
Modifiability,"///< original variable expression (can be a formula)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h:14,variab,variable,14,tmva/tmva/inc/TMVA/VariableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h,1,['variab'],['variable']
Modifiability,///< output size of the DNN; /*! \brief set the drop out configuration; *; *; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:57,config,configuration,57,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['config'],['configuration']
Modifiability,"///< pdfs for each variable, background",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h:19,variab,variable,19,tmva/tmva/inc/TMVA/RuleEnsemble.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h,1,['variab'],['variable']
Modifiability,"///< pdfs for each variable, signal",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h:19,variab,variable,19,tmva/tmva/inc/TMVA/RuleEnsemble.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleEnsemble.h,1,['variab'],['variable']
Modifiability,"///< periode (number of event variables)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h:30,variab,variables,30,tmva/tmva/inc/TMVA/BinarySearchTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h,1,['variab'],['variables']
Modifiability,"///< pointer to the constrained variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestInverter.h:32,variab,variable,32,roofit/roostats/inc/RooStats/HypoTestInverter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestInverter.h,1,['variab'],['variable']
Modifiability,"///< put variables/targets/spectators",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h:9,variab,variables,9,tmva/tmva/inc/TMVA/VariableTransformBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h,1,['variab'],['variables']
Modifiability,"///< range divisor to get sigma for each variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProposalHelper.h:41,variab,variable,41,roofit/roostats/inc/RooStats/ProposalHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProposalHelper.h,1,['variab'],['variable']
Modifiability,"///< reference bin volume - used to normalize the bins in case of variable bins data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:66,variab,variable,66,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,1,['variab'],['variable']
Modifiability,"///< reset time (how often we clear hessian matrix); // back propagation variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodMLP.h:73,variab,variable,73,tmva/tmva/inc/TMVA/MethodMLP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodMLP.h,1,['variab'],['variable']
Modifiability,"///< returns the layers (structure)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:17,layers,layers,17,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,2,['layers'],['layers']
Modifiability,"///< rms value for correlated/decorrelated/PCA variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h:47,variab,variable,47,tmva/tmva/inc/TMVA/VariableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h,1,['variab'],['variable']
Modifiability,"///< size of Gauss in adaptive volume",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h:22,adapt,adaptive,22,tmva/tmva/inc/TMVA/MethodPDERS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h,1,['adapt'],['adaptive']
Modifiability,"///< size of Gauss in adaptive volume (normalised to dimensions)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h:22,adapt,adaptive,22,tmva/tmva/inc/TMVA/MethodPDERS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h,1,['adapt'],['adaptive']
Modifiability,"///< static variable to flag training phase in which we need fTrainInfo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTreeNode.h:12,variab,variable,12,tmva/tmva/inc/TMVA/DecisionTreeNode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTreeNode.h,1,['variab'],['variable']
Modifiability,"///< text entry widget for variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TTreeInput.h:27,variab,variables,27,gui/fitpanel/inc/TTreeInput.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/inc/TTreeInput.h,1,['variab'],['variables']
Modifiability,"///< the minimum linear correlation between two variables demanded for use in fisher criterium in node splitting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h:48,variab,variables,48,tmva/tmva/inc/TMVA/DecisionTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h,2,['variab'],['variables']
Modifiability,"///< the number of variables used in randomised trees;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h:19,variab,variables,19,tmva/tmva/inc/TMVA/DecisionTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h,1,['variab'],['variables']
Modifiability,"///< the number of variables used in the randomised tree splitting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h:19,variab,variables,19,tmva/tmva/inc/TMVA/MethodBDT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h,2,['variab'],['variables']
Modifiability,"///< the relative importance of the different variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h:46,variab,variables,46,tmva/tmva/inc/TMVA/DecisionTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h,3,['variab'],['variables']
Modifiability,"///< the variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooLognormal.h:9,variab,variable,9,roofit/roofit/inc/RooLognormal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/inc/RooLognormal.h,1,['variab'],['variable']
Modifiability,"///< the variable type to be used internally ('F'-default or 'I')",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h:9,variab,variable,9,tmva/tmva/inc/TMVA/VariableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h,1,['variab'],['variable']
Modifiability,"///< true if variable types have been counted already",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h:13,variab,variable,13,tmva/tmva/inc/TMVA/VariableTransformBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h,1,['variab'],['variable']
Modifiability,"///< true: if event variable > cutValue ==> signal , false otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTreeNode.h:20,variab,variable,20,tmva/tmva/inc/TMVA/DecisionTreeNode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTreeNode.h,1,['variab'],['variable']
Modifiability,"///< type of external variable (int, long, double, float) - to be done JS",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h:22,variab,variable,22,tmva/tmva/inc/TMVA/VariableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h,1,['variab'],['variable']
Modifiability,"///< type of the spectator variable (typically F or I). Used ony for dynamic events",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Event.h:27,variab,variable,27,tmva/tmva/inc/TMVA/Event.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Event.h,1,['variab'],['variable']
Modifiability,"///< update the configuration after a fit using the result",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:16,config,configuration,16,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,1,['config'],['configuration']
Modifiability,"///< variable gets normalized",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h:5,variab,variable,5,tmva/tmva/inc/TMVA/VariableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h,1,['variab'],['variable']
Modifiability,"///< variable has a lower bound",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h:5,variab,variable,5,math/mathcore/inc/Math/MinimTransformVariable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h,1,['variab'],['variable']
Modifiability,"///< variable has an upper bounds",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h:5,variab,variable,5,math/mathcore/inc/Math/MinimTransformVariable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h,1,['variab'],['variable']
Modifiability,"///< variable has two bounds",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h:5,variab,variable,5,math/mathcore/inc/Math/MinimTransformVariable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h,1,['variab'],['variable']
Modifiability,"///< variable importances",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitAPI.h:5,variab,variable,5,tmva/tmva/inc/TMVA/RuleFitAPI.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitAPI.h,1,['variab'],['variable']
Modifiability,"///< variable index",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitAPI.h:5,variab,variable,5,tmva/tmva/inc/TMVA/RuleFitAPI.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitAPI.h,1,['variab'],['variable']
Modifiability,"///< variable label, set by ""mylabel := var1 + var2"", this is a shortcut; //TString fTitle; ///<! title for axis labels in plots; set by second string in AddVariable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h:5,variab,variable,5,tmva/tmva/inc/TMVA/VariableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h,1,['variab'],['variable']
Modifiability,"///< variable selector",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitAPI.h:5,variab,variable,5,tmva/tmva/inc/TMVA/RuleFitAPI.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/RuleFitAPI.h,1,['variab'],['variable']
Modifiability,"///< variable that holds the option of how to treat negative event weights in training",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h:5,variab,variable,5,tmva/tmva/inc/TMVA/MethodBDT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h,1,['variab'],['variable']
Modifiability,"///< variables don't need caches",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealVar.h:5,variab,variables,5,roofit/roofitcore/inc/RooRealVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealVar.h,1,['variab'],['variables']
Modifiability,"///< variance value for correlated/decorrelated/PCA variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h:52,variab,variable,52,tmva/tmva/inc/TMVA/VariableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h,1,['variab'],['variable']
Modifiability,"///< vector of variable settings and transformation function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformFunction.h:15,variab,variable,15,math/mathcore/inc/Math/MinimTransformFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformFunction.h,1,['variab'],['variable']
Modifiability,"///< vector specifying the type of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h:35,variab,variables,35,math/mathcore/inc/Math/BasicMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/BasicMinimizer.h,1,['variab'],['variables']
Modifiability,"///< vector with external indices for internal variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformFunction.h:47,variab,variables,47,math/mathcore/inc/Math/MinimTransformFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformFunction.h,1,['variab'],['variables']
Modifiability,"///< what to do with variables; // relevant for all methods",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h:21,variab,variables,21,tmva/tmva/inc/TMVA/MethodCuts.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h,1,['variab'],['variables']
Modifiability,"///< which interpolation method used for reference histograms (individual for each variable)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLikelihood.h:83,variab,variable,83,tmva/tmva/inc/TMVA/MethodLikelihood.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLikelihood.h,1,['variab'],['variable']
Modifiability,"///< which variables to put on each axis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h:11,variab,variables,11,roofit/roostats/inc/RooStats/MCMCCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MCMCCalculator.h,1,['variab'],['variables']
Modifiability,"///<! Address of 1st leaf (variable or object)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TBranch.h:27,variab,variable,27,tree/tree/inc/TBranch.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TBranch.h,1,['variab'],['variable']
Modifiability,"///<! Cached variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TFormula.h:13,variab,variables,13,hist/hist/inc/TFormula.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TFormula.h,1,['variab'],['variables']
Modifiability,"///<! External variables cached with this data set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsData.h:15,variab,variables,15,roofit/roofitcore/inc/RooAbsData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsData.h,1,['variab'],['variables']
Modifiability,"///<! Flags if variable needs update on server-side",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h:15,variab,variable,15,roofit/roofitcore/src/RooRealMPFE.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.h,2,['variab'],['variable']
Modifiability,"///<! Histogram holding the variable distribution.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h:28,variab,variable,28,tree/treeviewer/inc/TParallelCoordVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h,1,['variab'],['variable']
Modifiability,"///<! How many times the value of this variable was reset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealVar.h:39,variab,variable,39,roofit/roofitcore/inc/RooRealVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooRealVar.h,1,['variab'],['variable']
Modifiability,"///<! List of variable names",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TFormula.h:14,variab,variable,14,hist/hist/inc/TFormula.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TFormula.h,1,['variab'],['variable']
Modifiability,"///<! MC generator configuration specific for this object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsPdf.h:19,config,configuration,19,roofit/roofitcore/inc/RooAbsPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsPdf.h,1,['config'],['configuration']
Modifiability,"///<! Number of designated set to calculated extended term; // Simultaneous mode data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsTestStatistic.h:45,extend,extended,45,roofit/roofitcore/src/RooAbsTestStatistic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsTestStatistic.h,1,['extend'],['extended']
Modifiability,"///<! RWlock internal condition variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TRWSpinLock.hxx:32,variab,variable,32,core/thread/inc/ROOT/TRWSpinLock.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/ROOT/TRWSpinLock.hxx,2,['variab'],['variable']
Modifiability,"///<! Sandbox for incoming objects in a transaction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooWorkspace.h:6,Sandbox,Sandbox,6,roofit/roofitcore/inc/RooWorkspace.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooWorkspace.h,1,['Sandbox'],['Sandbox']
Modifiability,"///<! [fNvar] Array of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TNtuple.h:23,variab,variables,23,tree/tree/inc/TNtuple.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TNtuple.h,2,['variab'],['variables']
Modifiability,"///<! cached variable for optimisation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGPack.h:13,variab,variable,13,gui/gui/inc/TGPack.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGPack.h,1,['variab'],['variable']
Modifiability,"///<! configuration parameter editable from GUI",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomData.hxx:6,config,configuration,6,geom/webviewer/inc/ROOT/RGeomData.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomData.hxx,1,['config'],['configuration']
Modifiability,"///<! configuration, exchanged between client and server",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/inc/ROOT/RTreeViewer.hxx:6,config,configuration,6,tree/webviewer/inc/ROOT/RTreeViewer.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/inc/ROOT/RTreeViewer.hxx,1,['config'],['configuration']
Modifiability,"///<! configured batch size",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/inc/TWebCanvas.h:6,config,configured,6,gui/webgui6/inc/TWebCanvas.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webgui6/inc/TWebCanvas.h,1,['config'],['configured']
Modifiability,"///<! configured display",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/inc/ROOT/RFitPanel.hxx:6,config,configured,6,gui/fitpanelv7/inc/ROOT/RFitPanel.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanelv7/inc/ROOT/RFitPanel.hxx,1,['config'],['configured']
Modifiability,"///<! hash table containing loaded plugins",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/inc/TASImage.h:35,plugin,plugins,35,graf2d/asimage/inc/TASImage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/inc/TASImage.h,1,['plugin'],['plugins']
Modifiability,"///<! if the variable content is linked to an external pointer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h:13,variab,variable,13,tmva/tmva/inc/TMVA/VariableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h,1,['variab'],['variable']
Modifiability,"///<! input variables expression for arrays",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetFactory.h:12,variab,variables,12,tmva/tmva/inc/TMVA/DataSetFactory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetFactory.h,1,['variab'],['variables']
Modifiability,"///<! internal variable, used during painting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TClassTree.h:15,variab,variable,15,graf2d/gpad/inc/TClassTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TClassTree.h,2,['variab'],['variable']
Modifiability,"///<! message logger; // variables for JsMVA",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVWorkingSet.h:25,variab,variables,25,tmva/tmva/inc/TMVA/SVWorkingSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SVWorkingSet.h,1,['variab'],['variables']
Modifiability,"///<! number of configured threads",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TCivetweb.h:16,config,configured,16,net/http/src/TCivetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TCivetweb.h,1,['config'],['configured']
Modifiability,"///<! variable indicates can be basic configuration changed or not",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/inc/TSQLFile.h:6,variab,variable,6,io/sql/inc/TSQLFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/inc/TSQLFile.h,2,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"///<! version of SQL I/O which is stored in configurations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/sql/inc/TSQLFile.h:44,config,configurations,44,io/sql/inc/TSQLFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/sql/inc/TSQLFile.h,1,['config'],['configurations']
Modifiability,"///<![fDimension] Array of pointers to variables formula",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h:39,variab,variables,39,tree/treeplayer/inc/TSelectorDraw.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h,1,['variab'],['variables']
Modifiability,"///<![fDimension] True if fVar[i] has a variable index",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h:40,variab,variable,40,tree/treeplayer/inc/TSelectorDraw.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h,1,['variab'],['variable']
Modifiability,"///<![fNentries] Entries values for the variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h:40,variab,variable,40,tree/treeviewer/inc/TParallelCoordVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h,1,['variab'],['variable']
Modifiability,"///<![fSelectedRows][fDimension] Local buffer for the variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h:54,variab,variables,54,tree/treeplayer/inc/TSelectorDraw.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h,1,['variab'],['variables']
Modifiability,"///<; ///< An array of optional paths. Should have a size of zero or three.; ///< If the array is empty, no redirections are performed.; ///< Otherwise, the inferior process's stdin(0), stdout(1), and stderr(2); ///< will be redirected to the corresponding paths, if the optional path; ///< is present (not \c std::nullopt).; ///< When an empty path is passed in, the corresponding file descriptor; ///< will be disconnected (ie, /dev/null'd) in a portable way.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Program.h:448,portab,portable,448,interpreter/llvm-project/llvm/include/llvm/Support/Program.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Program.h,1,['portab'],['portable']
Modifiability,"///<[fNcols] Average value of each variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h:35,variab,variable,35,tree/treeviewer/inc/TSpider.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h,1,['variab'],['variable']
Modifiability,"///<[fNcols] Maximum value of the variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h:34,variab,variables,34,tree/treeviewer/inc/TSpider.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h,1,['variab'],['variables']
Modifiability,"///<[fNcols] Minimum value of the variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h:34,variab,variables,34,tree/treeviewer/inc/TSpider.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h,1,['variab'],['variables']
Modifiability,"///<[fTreeOffsetLen] Array of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TChain.h:30,variab,variables,30,tree/tree/inc/TChain.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TChain.h,1,['variab'],['variables']
Modifiability,"///<if 1 show classes relationship other than inheritance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TClassTree.h:46,inherit,inheritance,46,graf2d/gpad/inc/TClassTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TClassTree.h,1,['inherit'],['inheritance']
Modifiability,"///<if 1 show multiple inheritance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TClassTree.h:23,inherit,inheritance,23,graf2d/gpad/inc/TClassTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TClassTree.h,1,['inherit'],['inheritance']
Modifiability,///@name iterators; ///@{; /// First single-location variable location definition.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AssignmentTrackingAnalysis.h:53,variab,variable,53,interpreter/llvm-project/llvm/include/llvm/CodeGen/AssignmentTrackingAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AssignmentTrackingAnalysis.h,1,['variab'],['variable']
Modifiability,"///@name joinMethods; /// Functions that implement `join` (the least upper bound) for the; /// join-semilattice types used in the dataflow. There is an explicit bottom; /// value (⊥) for some types and and explicit top value (⊤) for all types.; /// By definition:; ///; /// Join(A, B) >= A && Join(A, B) >= B; /// Join(A, ⊥) = A; /// Join(A, ⊤) = ⊤; ///; /// These invariants are important for monotonicity.; ///; /// For the map-type functions, all unmapped keys in an empty map are; /// associated with a bottom value (⊥). This represents their values being; /// unknown. Unmapped keys in non-empty maps (joining two maps with a key; /// only present in one) represents either a variable going out of scope or; /// dropped debug info. It is assumed the key is associated with a top value; /// (⊤) in this case (unknown location / assignment).; ///@{",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:681,variab,variable,681,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,1,['variab'],['variable']
Modifiability,"///@}; ////////////////////////////////////////////////////////////////////////////////////////////////////////////; /// Structure to cache information on the histogram variable that is; /// frequently used for histogram weights retrieval.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDataHist.h:169,variab,variable,169,roofit/roofitcore/inc/RooDataHist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooDataHist.h,1,['variab'],['variable']
Modifiability,"///@}; //____________________________________________________________________________; //; // Batch Normalization; //____________________________________________________________________________; /** @name Batch Normalization Layer Propagation; */; ///@{; /** The input from each batch are normalized during training to have zero mean and unit variance; * and they are then scaled by two parameter, different for each input variable:; * - a scale factor \gamma gamma; * - an offset \beta beta */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h:423,variab,variable,423,tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h,1,['variab'],['variable']
Modifiability,"///@}; //____________________________________________________________________________; //; // Batch Normalization; //____________________________________________________________________________; /** @name Batch Normalization Layer Propagation; */; ///@{; /** The input from each batch are normalized during training to have zero mean and unit variance; * and they are then scaled by two parameter, different for each input variable:; * - a scale factor `\gamma` gamma; * - an offset `\beta` beta */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h:423,variab,variable,423,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,2,['variab'],['variable']
Modifiability,"///Little adapter that gives a bracket operator to types that don't; ///have one. It completely ignores the index and returns a constant.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/BracketAdapters.h:10,adapt,adapter,10,roofit/roofitmore/src/BracketAdapters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/BracketAdapters.h,1,['adapt'],['adapter']
Modifiability,"///Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsPdf.h:19,config,configuration,19,roofit/roofitcore/inc/RooAbsPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsPdf.h,1,['config'],['configuration']
Modifiability,"///Update configuration after a fit using the FitResult",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:10,config,configuration,10,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,2,['config'],['configuration']
Modifiability,"///\brief Class containing the information on how to configure the; /// transformation; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h:53,config,configure,53,interpreter/cling/include/cling/Utils/AST.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h,1,['config'],['configure']
Modifiability,"///\brief Configuration bits that can be changed at runtime. This allows the; /// user to enable/disable specific interpreter extensions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:10,Config,Configuration,10,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['Config'],['Configuration']
Modifiability,"///\brief Constructor for child Interpreter.; /// If the parent Interpreter has a replacement DiagnosticConsumer, it is; /// inherited by the child (not owned).; ///\param[in] parentInterpreter - the parent interpreter of this interpreter; ///\param[in] argc - no. of args.; ///\param[in] argv - arguments passed when driver is invoked.; ///\param[in] llvmdir - ???; ///\param[in] extraLibHandle - resolve symbols also from this dylib; ///\param[in] noRuntime - flag to control the presence of runtime universe; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h:125,inherit,inherited,125,interpreter/cling/include/cling/Interpreter/Interpreter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Interpreter.h,1,['inherit'],['inherited']
Modifiability,"///\brief Constructs the callbacks with default callback adaptors.; ///; ///\param[in] interp - an interpreter.; ///\param[in] enableExternalSemaSourceCallbacks - creates a default; /// InterpreterExternalSemaSource and attaches it to Sema.; ///\param[in] enablePPCallbacks - creates a default InterpreterPPCallbacks; /// and attaches it to the Preprocessor.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:57,adapt,adaptors,57,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,1,['adapt'],['adaptors']
Modifiability,"///\brief Helper structure used to provide specific context of the evaluated; /// expression, when needed.; ///; /// Consider:; /// @code; /// int a = 5;; /// const char* b = dep->Symbol(a);; /// @endcode; /// In the particular case we need to pass a context to the evaluator of the; /// unknown symbol. The addresses of the items in the context are not known at; /// compile time, so they cannot be embedded directly. Instead of that we; /// need to create an array of addresses of those context items (mainly; /// variables) and insert them into the evaluated expression at runtime; /// This information is kept using the syntax: ""dep->Symbol(*(int*)@)"",; /// where @ denotes that the runtime address the variable ""a"" is needed.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h:516,variab,variables,516,interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/DynamicExprInfo.h,2,['variab'],"['variable', 'variables']"
Modifiability,"///\brief Inherit from that class if you want to change/analyse declarations; /// from the last input before code is generated.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ASTTransformer.h:10,Inherit,Inherit,10,interpreter/cling/lib/Interpreter/ASTTransformer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ASTTransformer.h,1,['Inherit'],['Inherit']
Modifiability,"///\brief Lex a tok::raw_ident token that extends until the next whitespace; /// character, i.e. ' ' or '\t'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:42,extend,extends,42,interpreter/cling/include/cling/MetaProcessor/MetaLexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h,1,['extend'],['extends']
Modifiability,"///\brief Parse argc, and argv into our variables.; ///; ///\param [in] argc - argument count; ///\param [in] argv - arguments; ///\param [out] Inputs - save all arguments that are inputs/files here; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InvocationOptions.h:40,variab,variables,40,interpreter/cling/include/cling/Interpreter/InvocationOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InvocationOptions.h,1,['variab'],['variables']
Modifiability,"///\brief Platform specific delimiter for splitting environment variables.; /// ':' on Unix, and ';' on Windows",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Paths.h:64,variab,variables,64,interpreter/cling/include/cling/Utils/Paths.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Paths.h,1,['variab'],['variables']
Modifiability,"///\brief Prints out information about global variables.; ///; ///\param[in] varName - The name of the global variable; // if empty prints them all.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h:46,variab,variables,46,interpreter/cling/include/cling/MetaProcessor/MetaSema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/MetaProcessor/MetaSema.h,2,['variab'],"['variable', 'variables']"
Modifiability,"///\brief Replace all $TOKENS in a string with environent variable values.; ///; /// \param [in,out] Str - String with tokens to replace (in place); /// \param [in] Path - Check if the result is a valid filesystem path.; ///; /// \returns When Path is true, return whether Str was expanded to an; /// existing file-system object.; /// Return value has no meaning when Path is false.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Paths.h:58,variab,variable,58,interpreter/cling/include/cling/Utils/Paths.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Paths.h,1,['variab'],['variable']
Modifiability,"///\brief Retrieves the last expression of a function body. If it was a; /// DeclStmt with a variable declaration, creates DeclRefExpr and adds it to; /// the function body.; ///; /// Useful for value printing (deciding where to attach the value printer); /// and value evaluation (deciding that is the type of a value); ///; ///\param[in] FD - The declaration being analyzed.; ///\param[in] FoundAt - The position of the expression to be returned; /// in function's body.; ///\param[in] omitDeclStmts - Whether or not to synthesize DeclRefExpr if; /// there is DeclStmt.; ///\param[in] S - The semantic analysis object used for; /// synthesis of the DeclRefExpr.; ///\returns 0 if the operation wasn't successful.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h:93,variab,variable,93,interpreter/cling/include/cling/Utils/AST.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/AST.h,1,['variab'],['variable']
Modifiability,"///\brief Temporarily override the DiagnosticConsumer in a DiagnosticsEngine; /// Inherits from ReplaceDiagnostics so that forwarding can be done easily; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h:82,Inherit,Inherits,82,interpreter/cling/include/cling/Utils/Diagnostics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Diagnostics.h,1,['Inherit'],['Inherits']
Modifiability,"///\brief The allocation starts with this layout; it is followed by the; /// value's object at m_Payload. This class does not inherit from; /// llvm::RefCountedBase because deallocation cannot use this type but must; /// free the character array.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:126,inherit,inherit,126,interpreter/cling/lib/Interpreter/Value.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp,1,['inherit'],['inherit']
Modifiability,"///\brief Validate a variable that is a CXXRecordDecl; ///; /// Currently only reports errors if the var is a lamda that captures by; /// copy.; ///; ///\returns whether an error was reported; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h:21,variab,variable,21,interpreter/cling/lib/Interpreter/DeclExtractor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclExtractor.h,1,['variab'],['variable']
Modifiability,"///\brief Whether or not to extend the static scope with new information; /// about the names available only at runtime; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h:28,extend,extend,28,interpreter/cling/include/cling/Interpreter/CompilationOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/CompilationOptions.h,1,['extend'],['extend']
Modifiability,"///\brief cling::runtime::gCling variable cache.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h:33,variab,variable,33,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.h,1,['variab'],['variable']
Modifiability,"///\returns substitution of all known linker variables in \c original",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:45,variab,variables,45,interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp,1,['variab'],['variables']
Modifiability,"///\returns the path separator for the PATH environment variable on the; /// platform.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx:56,variab,variable,56,core/foundation/res/ROOT/FoundationUtils.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/FoundationUtils.hxx,1,['variab'],['variable']
Modifiability,"///\}; /// Add two histograms.; ///; /// This operation may currently only be performed if the two histograms have; /// the same axis configuration, use the same precision, and if `from` records; /// at least the same statistics as `to` (recording more stats is fine).; ///; /// Adding histograms with incompatible axis binning will be reported at runtime; /// with an `std::runtime_error`. Insufficient statistics in the source; /// histogram will be detected at compile-time and result in a compiler error.; ///; /// In the future, we may either adopt a more relaxed definition of histogram; /// addition or provide a mechanism to convert from one histogram type to; /// another. We currently favor the latter path.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:134,config,configuration,134,hist/histv7/inc/ROOT/RHist.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx,1,['config'],['configuration']
Modifiability,"///global correlation coefficient for variable i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h:38,variab,variable,38,math/minuit/inc/TMinuitMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TMinuitMinimizer.h,1,['variab'],['variable']
Modifiability,///}; /// New PM variables; ///{,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h:17,variab,variables,17,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h,1,['variab'],['variables']
Modifiability,///}; /// Old PM variables; ///{,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h:17,variab,variables,17,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h,1,['variab'],['variables']
Modifiability,"//10 is the first valid font index.; //20 is FreeSerifBold, as in TTF.cxx and in TGLFontManager.cxx.; //shift - is the shift to access ""extended"" fonts.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPadPainter.cxx:136,extend,extended,136,graf3d/gl/src/TGLPadPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPadPainter.cxx,1,['extend'],['extended']
Modifiability,"//::Error(""AdaptiveIntegratorMultiDim::DoIntegral()"", ""Logic error: idvax0 < 1!"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:11,Adapt,AdaptiveIntegratorMultiDim,11,math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,1,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,"//; // At this point the dataset(s) to be processed, if any, are found in the; // ""datasets"" variable; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:93,variab,variable,93,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['variab'],['variable']
Modifiability,"//; // Below is the generic glue code for all plug-ins.; //; // You should not have to modify this code aside from changing; // names if you decide to change the names defined in the Info.plist; //; // -----------------------------------------------------------------------------; // typedefs; // -----------------------------------------------------------------------------; // The import function to be implemented in GetMetadataForFile.c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rootsl/main.c:46,plug-in,plug-ins,46,misc/rootsl/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rootsl/main.c,1,['plug-in'],['plug-ins']
Modifiability,"//; // Below is the generic glue code for all plug-ins.; //; // You should not have to modify this code aside from changing; // names if you decide to change the names defined in the Info.plist; //; // -----------------------------------------------------------------------------; // typedefs; // -----------------------------------------------------------------------------; // The thumbnail generation function to be implemented in GenerateThumbnailForURL.c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c:46,plug-in,plug-ins,46,misc/rootql/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c,1,['plug-in'],['plug-ins']
Modifiability,"//; // Compute RMS of variable differences for Gaussian sigma; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodKNN.cxx:22,variab,variable,22,tmva/tmva/src/MethodKNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodKNN.cxx,1,['variab'],['variable']
Modifiability,"//; // Create event and add classification variables, weight, type and regression variables; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodKNN.cxx:43,variab,variables,43,tmva/tmva/src/MethodKNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodKNN.cxx,2,['variab'],['variables']
Modifiability,"//; // Define local variables; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodKNN.cxx:20,variab,variables,20,tmva/tmva/src/MethodKNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodKNN.cxx,2,['variab'],['variables']
Modifiability,"//; // DeleteGlobalInitializer - ""Remove"" the global variable by deleting its; // initializer,; // making it external.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ExtractFunction.cpp:53,variab,variable,53,interpreter/llvm-project/llvm/tools/bugpoint/ExtractFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ExtractFunction.cpp,1,['variab'],['variable']
Modifiability,//; // Device global variable entries related.; //; /// Kind of the global variable entry..,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:21,variab,variable,21,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,2,['variab'],['variable']
Modifiability,"//; // Functions for conveniently building stencils.; //; /// Generates the source of the expression bound to \p Id, wrapping it in; /// parentheses if it may parse differently depending on context. For example, a; /// binary operation is always wrapped, while a variable reference is never; /// wrapped.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/Stencil.h:263,variab,variable,263,interpreter/llvm-project/clang/include/clang/Tooling/Transformer/Stencil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/Stencil.h,1,['variab'],['variable']
Modifiability,"//; // If the tree has a TRefTable, set the current branch if; // branch is not a basic type.; //; // FIXME: This test probably needs to be extended past 10.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:140,extend,extended,140,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['extend'],['extended']
Modifiability,"//; // MI change - extended space of functions; // not forward compatible change; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:19,extend,extended,19,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,1,['extend'],['extended']
Modifiability,"//; // Make variable importance relative the strongest variable; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleEnsemble.cxx:12,variab,variable,12,tmva/tmva/src/RuleEnsemble.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleEnsemble.cxx,2,['variab'],['variable']
Modifiability,"//; // Now for the data; //; // We make the Eigenvector matrix, Eigenvalue vector, Sigma vector,; // and Mean value vector static, since all are needed in both; // functions. Also ,the number of variables are stored in a static; // variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:195,variab,variables,195,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"//; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a pass that performs optimization on SIMD instructions; // with high latency by splitting them into more efficient series of; // instructions.; //; // 1. Rewrite certain SIMD instructions with vector element due to their; // inefficiency on some targets.; //; // For example:; // fmla v0.4s, v1.4s, v2.s[1]; //; // Is rewritten into:; // dup v3.4s, v2.s[1]; // fmla v0.4s, v1.4s, v3.4s; //; // 2. Rewrite interleaved memory access instructions due to their; // inefficiency on some targets.; //; // For example:; // st2 {v0.4s, v1.4s}, addr; //; // Is rewritten into:; // zip1 v2.4s, v0.4s, v1.4s; // zip2 v3.4s, v0.4s, v1.4s; // stp q2, q3, addr; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SIMDInstrOpt.cpp:474,Rewrite,Rewrite,474,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SIMDInstrOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SIMDInstrOpt.cpp,2,['Rewrite'],['Rewrite']
Modifiability,"//; // Reset timeout variables and start timer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:21,variab,variables,21,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['variab'],['variables']
Modifiability,"//; // Send ordinal (and config) info to slave (or master)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx:25,config,config,25,proof/proof/src/TSlave.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TSlave.cxx,1,['config'],['config']
Modifiability,"//; // Special case for floating-point representation.; //; // If expressions on both sides of comparison operator are of type float,; // then for some comparison operators no warning shall be; // reported even if the expressions are identical from a symbolic point of; // view. Comparison between expressions, declared variables and literals; // are treated differently.; //; // != and == between float literals that have the same value should NOT warn.; // < > between float literals that have the same value SHOULD warn.; //; // != and == between the same float declaration should NOT warn.; // < > between the same float declaration SHOULD warn.; //; // != and == between eq. expressions that evaluates into float; // should NOT warn.; // < > between eq. expressions that evaluates into float; // should NOT warn.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IdenticalExprChecker.cpp:320,variab,variables,320,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IdenticalExprChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IdenticalExprChecker.cpp,1,['variab'],['variables']
Modifiability,"//; // The Mips16 hard float is a crazy quilt inherited from gcc. I have a much; // cleaner way to do all of this but it will have to wait until the traditional; // gcc mechanism is completed.; //; // For Pic, in order for Mips16 code to call Mips32 code which according the abi; // have either arguments or returned values placed in floating point registers,; // we use a set of helper functions. (This includes functions which return type; // complex which on Mips are returned in a pair of floating point registers).; //; // This is an encoding that we inherited from gcc.; // In Mips traditional O32, N32 ABI, floating point numbers are passed in; // floating point argument registers 1,2 only when the first and optionally; // the second arguments are float (sf) or double (df).; // For Mips16 we are only concerned with the situations where floating point; // arguments are being passed in floating point registers by the ABI, because; // Mips16 mode code cannot execute floating point instructions to load those; // values and hence helper functions are needed.; // The possibilities are (), (sf), (sf, sf), (sf, df), (df), (df, sf), (df, df); // the helper function suffixs for these are:; // 0, 1, 5, 9, 2, 6, 10; // this suffix can then be calculated as follows:; // for a given argument Arg:; // Arg1x, Arg2x = 1 : Arg is sf; // 2 : Arg is df; // 0: Arg is neither sf or df; // So this stub is the string for number Arg1x + Arg2x*4.; // However not all numbers between 0 and 10 are possible, we check anyway and; // assert if the impossible exists.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/Mips16ISelLowering.cpp:46,inherit,inherited,46,interpreter/llvm-project/llvm/lib/Target/Mips/Mips16ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/Mips16ISelLowering.cpp,2,['inherit'],['inherited']
Modifiability,"//; // Then, we set any variables to constant; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx:24,variab,variables,24,roofit/histfactory/src/Asimov.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx,1,['variab'],['variables']
Modifiability,"//; // To calculate the remainder we use the following scheme.; //; // The remainder is defained as follows:; //; // remainder = numer - rquot * denom = x - r * p; //; // Where r is the result of: x/p, rounded toward the nearest integral value; // (with halfway cases rounded toward the even number).; //; // Currently, (after x mod 2p):; // r is the number of 2p's present inside x, which is inherently, an even; // number of p's.; //; // We may split the remaining calculation into 4 options:; // - if x < 0.5p then we round to the nearest number with is 0, and are done.; // - if x == 0.5p then we round to the nearest even number which is 0, and we; // are done as well.; // - if 0.5p < x < p then we round to nearest number which is 1, and we have; // to subtract 1p at least once.; // - if x >= p then we must subtract p at least once, as x must be a; // remainder.; //; // By now, we were done, or we added 1 to r, which in turn, now an odd number.; //; // We can now split the remaining calculation to the following 3 options:; // - if x < 0.5p then we round to the nearest number with is 0, and are done.; // - if x == 0.5p then we round to the nearest even number. As r is odd, we; // must round up to the next even number. so we must subtract p once more.; // - if x > 0.5p (and inherently x < p) then we must round r up to the next; // integral, and subtract p once more.; //; // Extend the semantics to prevent an overflow/underflow or inexact result.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp:1392,Extend,Extend,1392,interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,1,['Extend'],['Extend']
Modifiability,"//; // To make socklen_t portable use SOCKLEN_t; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx:25,portab,portable,25,net/rpdutils/src/rpdconn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdconn.cxx,1,['portab'],['portable']
Modifiability,"//; // compute mean values of variables in each sample, and the overall means; //; // initialize internal sum-of-weights variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:30,variab,variables,30,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,2,['variab'],['variables']
Modifiability,"//; // electromagnetic coupling = 1.43996e-12 MeV*mm/(eplus^2); //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4PhysicalConstants.h:23,coupling,coupling,23,geom/geom/inc/TGeant4PhysicalConstants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4PhysicalConstants.h,2,['coupling'],['coupling']
Modifiability,"//; // this stress test for TMVA is a shorter version of the extended TMVA testsuite; // generated by script tmvaValidation/testsuite/RootTest/buildRootTest.sh; //; // Eckhard von Toerne, Dec 2010; //; /* if working, it creates output like this:. ******************************************************************; * TMVA - S T R E S S and U N I T test suite (FAST); ******************************************************************; Event [107/107]..................................................OK; VariableInfo [31/31].............................................OK; DataSetInfo [20/20]..............................................OK; DataSet [15/15]..................................................OK; Factory [11/11]..................................................OK; Reader [2/2].....................................................OK; CutsGA [3/3].....................................................OK; LikelihoodD [4/4]................................................OK; PDERS [4/4]......................................................OK; PDEFoam [4/4]....................................................OK; KNN [4/4]........................................................OK; Fisher [4/4].....................................................OK; BoostedFisher [4/4]..............................................OK; LD [4/4].........................................................OK; MLP [4/4]........................................................OK; MLPBFGS [4/4]....................................................OK; SVM [4/4]........................................................OK; BDTG [4/4].......................................................OK; BDT [4/4]........................................................OK; Regression_LD [4/4]..............................................OK; Regression_MLPBFGSN [4/4]........................................OK; Regression_BDTG2 [4/4]...........................................OK; Event [107/107].................................",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx:61,extend,extended,61,tmva/tmva/test/stressTMVA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx,2,"['Variab', 'extend']","['VariableInfo', 'extended']"
Modifiability,"//; //---------------------------------------------------------------------; // Don't handle COPY instruction. If the src and dst of the COPY can be; // in the same config in below case, we just check the shape of t0.; // def row0; // def col0; // ldtilecfg; // t0 = tielzero(row0, col0); // t1 = copy t0; // ...; // If the src and dst of the COPY can NOT be in the same config in below; // case. Reload would be generated befor the copy instruction.; // def row0; // def col0; // t0 = tielzero(row0, col0); // spill t0; // ...; // def row1; // def col1; // ldtilecfg; // t1 = tilezero(row1, col1); // reload t0; // t1 = copy t0; //---------------------------------------------------------------------; //; // If MI dominate the last shape def instruction, we need insert; // ldtilecfg after LastShapeMI now. The config doesn't include; // current MI.; // def row0; // def col0; // tilezero(row0, col0) <- MI; // def row1; // def col1; // ldtilecfg <- insert; // tilezero(row1, col1)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp:165,config,config,165,interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp,3,['config'],['config']
Modifiability,"//; /// | String passed | What is used for each entry of the tree; /// |-----------------|--------------------------------------------------------|; /// | `fMatrix` | the 9 elements of fMatrix |; /// | `fMatrix[][]` | the 9 elements of fMatrix |; /// | `fMatrix[2][2]` | only the elements fMatrix[2][2] |; /// | `fMatrix[1]` | the 3 elements fMatrix[1][0], fMatrix[1][1] and fMatrix[1][2] |; /// | `fMatrix[1][]` | the 3 elements fMatrix[1][0], fMatrix[1][1] and fMatrix[1][2] |; /// | `fMatrix[][0]` | the 3 elements fMatrix[0][0], fMatrix[1][0] and fMatrix[2][0] |; ///; /// ""fEvent.fMatrix...."" same as ""fMatrix..."" (unless there is more than one leaf named fMatrix!).; ///; /// In summary, if a specific index is not specified for a dimension, TTree::Draw; /// will loop through all the indices along this dimension. Leaving off the; /// last (right most) dimension of specifying then with the two characters '[]'; /// is equivalent. For variable size arrays (and TClonesArray) the range; /// of the first dimension is recalculated for each entry of the tree.; /// You can also specify the index as an expression of any other variables from the; /// tree.; ///; /// TTree::Draw also now properly handling operations involving 2 or more arrays.; ///; /// Let assume a second matrix fResults[5][2], here are a sample of some; /// of the possible combinations, the number of elements they produce and; /// the loop used:; ///; /// | expression | element(s) | Loop |; /// |----------------------------------|------------|--------------------------|; /// | `fMatrix[2][1] - fResults[5][2]` | one | no loop |; /// | `fMatrix[2][] - fResults[5][2]` | three | on 2nd dim fMatrix |; /// | `fMatrix[2][] - fResults[5][]` | two | on both 2nd dimensions |; /// | `fMatrix[][2] - fResults[][1]` | three | on both 1st dimensions |; /// | `fMatrix[][2] - fResults[][]` | six | on both 1st and 2nd dimensions of fResults |; /// | `fMatrix[][2] - fResults[3][]` | two | on 1st dim of fMatrix and 2nd of fResults (",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:6030,variab,variable,6030,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variable']
Modifiability,"//; //Composition of TH3 objects. All TH3 must have the same axis range; //and the same number of bins. If this condition is violated,; //AddTH3 will throw.; //IMPORTANT: TGLTH3Composition does not own TH3 objects; //it contains.; //This class inherits TH3 - to re-use TH3 editor.; //I use TH3C to reduce memory usage.; //Slising is not implemeted yet.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLTH3Composition.h:244,inherit,inherits,244,graf3d/gl/inc/TGLTH3Composition.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLTH3Composition.h,1,['inherit'],['inherits']
Modifiability,"//; //Radial gradient. Can be either ""simple"": you specify a center; //and radius in NDC coordinates (see comments about linear gradient; //and coordinate modes above), or ""extended"": you have two centers; //(start,end) and two radiuses (R1, R2) and interpolation between them;; //still start/end and radiuses are in NDC.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TColorGradient.h:173,extend,extended,173,core/base/inc/TColorGradient.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TColorGradient.h,1,['extend'],['extended']
Modifiability,"//= global variables/pointers ===============================================",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/datatypes.cxx:11,variab,variables,11,bindings/pyroot/cppyy/cppyy/test/datatypes.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/datatypes.cxx,2,['variab'],['variables']
Modifiability,"//=- AArch64RedundantCopyElimination.cpp - Remove useless copy for AArch64 -=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; // This pass removes unnecessary copies/moves in BBs based on a dominating; // condition.; //; // We handle three cases:; // 1. For BBs that are targets of CBZ/CBNZ instructions, we know the value of; // the CBZ/CBNZ source register is zero on the taken/not-taken path. For; // instance, the copy instruction in the code below can be removed because; // the CBZW jumps to %bb.2 when w0 is zero.; //; // %bb.1:; // cbz w0, .LBB0_2; // .LBB0_2:; // mov w0, wzr ; <-- redundant; //; // 2. If the flag setting instruction defines a register other than WZR/XZR, we; // can remove a zero copy in some cases.; //; // %bb.0:; // subs w0, w1, w2; // str w0, [x1]; // b.ne .LBB0_2; // %bb.1:; // mov w0, wzr ; <-- redundant; // str w0, [x2]; // .LBB0_2; //; // 3. Finally, if the flag setting instruction is a comparison against a; // constant (i.e., ADDS[W|X]ri, SUBS[W|X]ri), we can remove a mov immediate; // in some cases.; //; // %bb.0:; // subs xzr, x0, #1; // b.eq .LBB0_1; // .LBB0_1:; // orr x0, xzr, #0x1 ; <-- redundant; //; // This pass should be run after register allocation.; //; // FIXME: This could also be extended to check the whole dominance subtree below; // the comparison if the compile time regression is acceptable.; //; // FIXME: Add support for handling CCMP instructions.; // FIXME: If the known register value is zero, we should be able to rewrite uses; // to use WZR/XZR directly in some cases.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RedundantCopyElimination.cpp:1407,extend,extended,1407,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RedundantCopyElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RedundantCopyElimination.cpp,2,"['extend', 'rewrite']","['extended', 'rewrite']"
Modifiability,"//=- LiveVariables.cpp - Live Variable Analysis for Source CFGs ----------*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements Live Variables analysis for source-level CFGs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/LiveVariables.cpp:30,Variab,Variable,30,interpreter/llvm-project/clang/lib/Analysis/LiveVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/LiveVariables.cpp,2,['Variab'],"['Variable', 'Variables']"
Modifiability,"//=- NSAutoreleasePoolChecker.cpp --------------------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a NSAutoreleasePoolChecker, a small checker that warns; // about subpar uses of NSAutoreleasePool. Note that while the check itself; // (in its current form) could be written as a flow-insensitive check, in; // can be potentially enhanced in the future with flow-sensitive information.; // It is also a good example of the CheckerVisitor interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NSAutoreleasePoolChecker.cpp:631,enhance,enhanced,631,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NSAutoreleasePoolChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NSAutoreleasePoolChecker.cpp,1,['enhance'],['enhanced']
Modifiability,"//=--- X86MCExpr.h - X86 specific MC expression classes ---*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file describes X86-specific MCExprs, i.e, registers used for; // extended variable assignments.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86MCExpr.h:445,extend,extended,445,interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86MCExpr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86MCExpr.h,2,"['extend', 'variab']","['extended', 'variable']"
Modifiability,"//== ----- llvm/CodeGen/GlobalISel/Combiner.h -------------------*- C++ -*-== //; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This contains the base class for all Combiners generated by TableGen.; /// Backends need to create class that inherits from ""Combiner"" and put all of; /// the TableGen-erated code in there, as it implements the virtual functions.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Combiner.h:501,inherit,inherits,501,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Combiner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/Combiner.h,1,['inherit'],['inherits']
Modifiability,"//== BoolAssignmentChecker.cpp - Boolean assignment checker -----*- C++ -*--==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This defines BoolAssignmentChecker, a builtin check in ExprEngine that; // performs checks for assignment of non-Boolean values to Boolean variables.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/BoolAssignmentChecker.cpp:522,variab,variables,522,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/BoolAssignmentChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/BoolAssignmentChecker.cpp,1,['variab'],['variables']
Modifiability,"//== ObjCSelfInitChecker.cpp - Checker for 'self' initialization -*- C++ -*--=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This defines ObjCSelfInitChecker, a builtin check that checks for uses of; // 'self' before proper initialization.; //; //===----------------------------------------------------------------------===//; // This checks initialization methods to verify that they assign 'self' to the; // result of an initialization call (e.g. [super init], or [self initWith..]); // before using 'self' or any instance variable.; //; // To perform the required checking, values are tagged with flags that indicate; // 1) if the object is the one pointed to by 'self', and 2) if the object; // is the result of an initializer (e.g. [super init]).; //; // Uses of an object that is true for 1) but not 2) trigger a diagnostic.; // The uses that are currently checked are:; // - Using instance variables.; // - Returning the object.; //; // Note that we don't check for an invalid 'self' that is the receiver of an; // obj-c message expression to cut down false positives where logging functions; // get information from self (like its class) or doing ""invalidation"" on self; // when the initialization fails.; //; // Because the object that 'self' points to gets invalidated when a call; // receives a reference to 'self', the checker keeps track and passes the flags; // for 1) and 2) to the new object that 'self' points to after the call.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCSelfInitChecker.cpp:783,variab,variable,783,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCSelfInitChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCSelfInitChecker.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"//== PutenvWithAutoChecker.cpp --------------------------------- -*- C++ -*--=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines PutenvWithAutoChecker which finds calls of ``putenv``; // function with automatic variable as the argument.; // https://wiki.sei.cmu.edu/confluence/x/6NYxBQ; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/cert/PutenvWithAutoChecker.cpp:483,variab,variable,483,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/cert/PutenvWithAutoChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/cert/PutenvWithAutoChecker.cpp,1,['variab'],['variable']
Modifiability,"//== SValExplainer.h - Symbolic value explainer -----------------*- C++ -*--==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines SValExplainer, a class for pretty-printing a; // human-readable description of a symbolic value. For example,; // ""reg_$0<x>"" is turned into ""initial value of variable 'x'"".; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Checkers/SValExplainer.h:560,variab,variable,560,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Checkers/SValExplainer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Checkers/SValExplainer.h,1,['variab'],['variable']
Modifiability,"//== Yaml.h ---------------------------------------------------- -*- C++ -*--=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines convenience functions for handling YAML configuration files; // for checkers/packages.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/Yaml.h:441,config,configuration,441,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/Yaml.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/Yaml.h,1,['config'],['configuration']
Modifiability,"//==- AArch64PromoteConstant.cpp - Promote constant to global for AArch64 --==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the AArch64PromoteConstant pass which promotes constants; // to global variables when this is likely to be more efficient. Currently only; // types related to constant vector (i.e., constant vector, array of constant; // vectors, constant structure with a constant vector field, etc.) are promoted; // to global variables. Constant vectors are likely to be lowered in target; // constant pool during instruction selection already; therefore, the access; // will remain the same (memory load), but the structure types are not split; // into different constant pool accesses for each field. A bonus side effect is; // that created globals may be merged by the global merge pass.; //; // FIXME: This pass may be useful for other targets too.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp:475,variab,variables,475,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp,2,['variab'],['variables']
Modifiability,"//==- CheckObjCDealloc.cpp - Check ObjC -dealloc implementation --*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This checker analyzes Objective-C -dealloc methods and their callees; // to warn about improper releasing of instance variables that back synthesized; // properties. It warns about missing releases in the following cases:; // - When a class has a synthesized instance variable for a 'retain' or 'copy'; // property and lacks a -dealloc method in its implementation.; // - When a class has a synthesized instance variable for a 'retain'/'copy'; // property but the ivar is not released in -dealloc by either -release; // or by nilling out the property.; //; // It warns about extra releases in -dealloc (but not in callees) when a; // synthesized instance variable is released in the following cases:; // - When the property is 'assign' and is not 'readonly'.; // - When the property is 'weak'.; //; // This checker only warns for instance variables synthesized to back; // properties. Handling the more general case would require inferring whether; // an instance variable is stored retained or not. For synthesized properties,; // this is specified in the property declaration itself.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:501,variab,variables,501,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,6,['variab'],"['variable', 'variables']"
Modifiability,"//==- DeadStoresChecker.cpp - Check for stores to dead variables -*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a DeadStores, a flow-sensitive checker that looks for; // stores to variables that are no longer live.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DeadStoresChecker.cpp:55,variab,variables,55,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DeadStoresChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DeadStoresChecker.cpp,2,['variab'],['variables']
Modifiability,"//==- llvm/ADT/IntrusiveRefCntPtr.h - Smart Refcounting Pointer --*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the RefCountedBase, ThreadSafeRefCountedBase, and; /// IntrusiveRefCntPtr classes.; ///; /// IntrusiveRefCntPtr is a smart pointer to an object which maintains a; /// reference count. (ThreadSafe)RefCountedBase is a mixin class that adds a; /// refcount member variable and methods for updating the refcount. An object; /// that inherits from (ThreadSafe)RefCountedBase deletes itself when its; /// refcount hits zero.; ///; /// For example:; ///; /// ```; /// class MyClass : public RefCountedBase<MyClass> {};; ///; /// void foo() {; /// // Constructing an IntrusiveRefCntPtr increases the pointee's refcount; /// // by 1 (from 0 in this case).; /// IntrusiveRefCntPtr<MyClass> Ptr1(new MyClass());; ///; /// // Copying an IntrusiveRefCntPtr increases the pointee's refcount by 1.; /// IntrusiveRefCntPtr<MyClass> Ptr2(Ptr1);; ///; /// // Constructing an IntrusiveRefCntPtr has no effect on the object's; /// // refcount. After a move, the moved-from pointer is null.; /// IntrusiveRefCntPtr<MyClass> Ptr3(std::move(Ptr1));; /// assert(Ptr1 == nullptr);; ///; /// // Clearing an IntrusiveRefCntPtr decreases the pointee's refcount by 1.; /// Ptr2.reset();; ///; /// // The object deletes itself when we return from the function, because; /// // Ptr3's destructor decrements its refcount to 0.; /// }; /// ```; ///; /// You can use IntrusiveRefCntPtr with isa<T>(), dyn_cast<T>(), etc.:; ///; /// ```; /// IntrusiveRefCntPtr<MyClass> Ptr(new MyClass());; /// OtherClass *Other = dyn_cast<OtherClass>(Ptr); // Ptr.get() not required; /// ```; ///; /// IntrusiveRefCntPtr works with any c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:675,variab,variable,675,interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h,2,"['inherit', 'variab']","['inherits', 'variable']"
Modifiability,"//==- llvm/CodeGen/SelectionDAGTargetInfo.h - SelectionDAG Info --*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the SelectionDAGTargetInfo class, which targets can; // subclass to parameterize the SelectionDAG lowering and instruction; // selection process.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGTargetInfo.h:470,parameteriz,parameterize,470,interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGTargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGTargetInfo.h,1,['parameteriz'],['parameterize']
Modifiability,"//==-- input_arrays.h - Helper function for LLVM fuzzer inputs -------------==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Define a few static variables used by the LLVM Proto Fuzzer; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-fuzzer/handle-llvm/input_arrays.h:403,variab,variables,403,interpreter/llvm-project/clang/tools/clang-fuzzer/handle-llvm/input_arrays.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-fuzzer/handle-llvm/input_arrays.h,1,['variab'],['variables']
Modifiability,"//==-- llvm/CodeGen/ExecutionDomainFix.h - Execution Domain Fix -*- C++ -*--==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Execution Domain Fix pass.; ///; /// Some X86 SSE instructions like mov, and, or, xor are available in different; /// variants for different operand types. These variant instructions are; /// equivalent, but on Nehalem and newer cpus there is extra latency; /// transferring data between integer and floating point domains. ARM cores; /// have similar issues when they are configured with both VFP and NEON; /// pipelines.; ///; /// This pass changes the variant instructions to minimize domain crossings.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h:763,config,configured,763,interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ExecutionDomainFix.h,1,['config'],['configured']
Modifiability,"//==------ llvm/CodeGen/LowerEmuTLS.h -------------------------*- C++ -*----==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Add Add __emutls_[vt].* variables.; ///; /// This file provide declaration of LowerEmuTLSPass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LowerEmuTLS.h:414,variab,variables,414,interpreter/llvm-project/llvm/include/llvm/CodeGen/LowerEmuTLS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LowerEmuTLS.h,1,['variab'],['variables']
Modifiability,"//==---------------------------------------------------------------------==//; // Generic Data Map methods.; //==---------------------------------------------------------------------==//; //; // ProgramStateManager and ProgramState support a ""generic data map"" that allows; // different clients of ProgramState objects to embed arbitrary data within a; // ProgramState object. The generic data map is essentially an immutable map; // from a ""tag"" (that acts as the ""key"" for a client) and opaque values.; // Tags/keys and values are simply void* values. The typical way that clients; // generate unique tags are by taking the address of a static variable.; // Clients are responsible for ensuring that data values referred to by a; // the data pointer are immutable (and thus are essentially purely functional; // data).; //; // The templated methods below use the ProgramStateTrait<T> class; // to resolve keys into the GDM and to return data values to clients.; //; // Trait based GDM dispatch.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ProgramState.h:646,variab,variable,646,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ProgramState.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/ProgramState.h,1,['variab'],['variable']
Modifiability,"//=== CXXDeleteChecker.cpp -------------------------------------*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the following new checkers for C++ delete expressions:; //; // * DeleteWithNonVirtualDtorChecker; // Defines a checker for the OOP52-CPP CERT rule: Do not delete a; // polymorphic object without a virtual destructor.; //; // Diagnostic flags -Wnon-virtual-dtor and -Wdelete-non-virtual-dtor; // report if an object with a virtual function but a non-virtual; // destructor exists or is deleted, respectively.; //; // This check exceeds them by comparing the dynamic and static types of; // the object at the point of destruction and only warns if it happens; // through a pointer to a base type without a virtual destructor. The; // check places a note at the last point where the conversion from; // derived to base happened.; //; // * CXXArrayDeleteChecker; // Defines a checker for the EXP51-CPP CERT rule: Do not delete an array; // through a pointer of the incorrect type.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CXXDeleteChecker.cpp:569,polymorphi,polymorphic,569,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CXXDeleteChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CXXDeleteChecker.cpp,1,['polymorphi'],['polymorphic']
Modifiability,"//=== ErrnoModeling.cpp -----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This defines a checker `ErrnoModeling`, which is used to make the system; // value 'errno' available to other checkers.; // The 'errno' value is stored at a special memory region that is accessible; // through the `errno_modeling` namespace. The memory region is either the; // region of `errno` itself if it is a variable, otherwise an artifically; // created region (in the system memory space). If `errno` is defined by using; // a function which returns the address of it (this is always the case if it is; // not a variable) this function is recognized and evaluated. In this way; // `errno` becomes visible to the analysis and checkers can change its value.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ErrnoModeling.cpp:697,variab,variable,697,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ErrnoModeling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ErrnoModeling.cpp,2,['variab'],['variable']
Modifiability,"//=== FuchsiaHandleChecker.cpp - Find handle leaks/double closes -*- C++ -*--=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This checker checks if the handle of Fuchsia is properly used according to; // following rules.; // - If a handle is acquired, it should be released before execution; // ends.; // - If a handle is released, it should not be released again.; // - If a handle is released, it should not be used for other purposes; // such as I/O.; //; // In this checker, each tracked handle is associated with a state. When the; // handle variable is passed to different function calls or syscalls, its state; // changes. The state changes can be generally represented by following ASCII; // Art:; //; //; // +-------------+ +------------+; // acquire_func succeeded | | Escape | |; // +-----------------> Allocated +---------> Escaped <--+; // | | | | | |; // | +-----+------++ +------------+ |; // | | | |; // acquire_func | release_func | +--+ |; // failed | | | handle +--------+ |; // +---------+ | | | dies | | |; // | | | +----v-----+ +---------> Leaked | |; // | | | | | |(REPORT)| |; // | +----------+--+ | Released | Escape +--------+ |; // | | | | +---------------------------+; // +--> Not tracked | +----+---+-+; // | | | | As argument by value; // +----------+--+ release_func | +------+ in function call; // | | | or by reference in; // | | | use_func call; // unowned | +----v-----+ | +-----------+; // acquire_func | | Double | +-----> Use after |; // succeeded | | released | | released |; // | | (REPORT) | | (REPORT) |; // +---------------+ +----------+ +-----------+; // | Allocated |; // | Unowned | release_func; // | +---------+; // +---------------+ |; // |; // +-----v----------+; // | Release of |; // | unow",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/FuchsiaHandleChecker.cpp:805,variab,variable,805,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/FuchsiaHandleChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/FuchsiaHandleChecker.cpp,1,['variab'],['variable']
Modifiability,"//=== Registry.h - Linker-supported plugin registries -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Defines a registry template for discovering pluggable modules.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Registry.h:36,plugin,plugin,36,interpreter/llvm-project/llvm/include/llvm/Support/Registry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Registry.h,1,['plugin'],['plugin']
Modifiability,"//=== SourceMgrAdapter.cpp - SourceMgr to SourceManager Adapter -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the adapter that maps diagnostics from llvm::SourceMgr; // to Clang's SourceManager.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceMgrAdapter.cpp:56,Adapt,Adapter,56,interpreter/llvm-project/clang/lib/Basic/SourceMgrAdapter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceMgrAdapter.cpp,2,"['Adapt', 'adapt']","['Adapter', 'adapter']"
Modifiability,"//=== SourceMgrAdapter.h - SourceMgr to SourceManager Adapter ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides an adapter that maps diagnostics from llvm::SourceMgr; // to Clang's SourceManager.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceMgrAdapter.h:54,Adapt,Adapter,54,interpreter/llvm-project/clang/include/clang/Basic/SourceMgrAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceMgrAdapter.h,2,"['Adapt', 'adapt']","['Adapter', 'adapter']"
Modifiability,"//===- AArch64LoopIdiomTransform.cpp - Loop idiom recognition -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass implements a pass that recognizes certain loop idioms and; // transforms them into more optimized versions of the same loop. In cases; // where this happens, it can be a significant performance win.; //; // We currently only recognize one loop that finds the first mismatched byte; // in an array and returns the index, i.e. something like:; //; // while (++i != n) {; // if (a[i] != b[i]); // break;; // }; //; // In this example we can actually vectorize the loop despite the early exit,; // although the loop vectorizer does not support it. It requires some extra; // checks to deal with the possibility of faulting loads when crossing page; // boundaries. However, even with these checks it is still profitable to do the; // transformation.; //; //===----------------------------------------------------------------------===//; //; // TODO List:; //; // * Add support for the inverse case where we scan for a matching element.; // * Permit 64-bit induction variable types.; // * Recognize loops that increment the IV *after* comparing bytes.; // * Allow 32-bit sign-extends of the IV used by the GEP.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp:1354,variab,variable,1354,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp,2,"['extend', 'variab']","['extends', 'variable']"
Modifiability,"//===- AMDGPUOpenCLEnqueuedBlockLowering.cpp - Lower enqueued block -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // \file; // This post-linking pass replaces the function pointer of enqueued; // block kernel with a global variable (runtime handle) and adds; // ""runtime-handle"" attribute to the enqueued block kernel.; //; // In LLVM CodeGen the runtime-handle metadata will be translated to; // RuntimeHandle metadata in code object. Runtime allocates a global buffer; // for each kernel with RuntimeHandle metadata and saves the kernel address; // required for the AQL packet into the buffer. __enqueue_kernel function; // in device library knows that the invoke function pointer in the block; // literal is actually runtime handle and loads the kernel address from it; // and put it into AQL packet for dispatching.; //; // This cannot be done in FE since FE cannot create a unique global variable; // with external linkage across LLVM modules. The global variable with internal; // linkage does not work since optimization passes will try to replace loads; // of the global variable with its initialization value.; //; // It also identifies the kernels directly or indirectly enqueues kernels; // and adds ""calls-enqueue-kernel"" function attribute to them, which will; // be used to determine whether to emit runtime metadata for the kernel; // enqueue related hidden kernel arguments.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUOpenCLEnqueuedBlockLowering.cpp:489,variab,variable,489,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUOpenCLEnqueuedBlockLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUOpenCLEnqueuedBlockLowering.cpp,4,['variab'],['variable']
Modifiability,"//===- AMDGPURewriteOutArgumentsPass.cpp - Create struct returns ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This pass attempts to replace out argument usage with a return of a; /// struct.; ///; /// We can support returning a lot of values directly in registers, but; /// idiomatic C code frequently uses a pointer argument to return a second value; /// rather than returning a struct by value. GPU stack access is also quite; /// painful, so we want to avoid that if possible. Passing a stack object; /// pointer to a function also requires an additional address expansion code; /// sequence to convert the pointer to be relative to the kernel's scratch wave; /// offset register since the callee doesn't know what stack frame the incoming; /// pointer is relative to.; ///; /// The goal is to try rewriting code that looks like this:; ///; /// int foo(int a, int b, int* out) {; /// *out = bar();; /// return a + b;; /// }; ///; /// into something like this:; ///; /// std::pair<int, int> foo(int a, int b) {; /// return std::pair(a + b, bar());; /// }; ///; /// Typically the incoming pointer is a simple alloca for a temporary variable; /// to use the API, which if replaced with a struct return will be easily SROA'd; /// out when the stub function we create is inlined; ///; /// This pass introduces the struct return, but leaves the unused pointer; /// arguments and introduces a new stub function calling the struct returning; /// body. DeadArgumentElimination should be run after this to clean these up.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURewriteOutArguments.cpp:1413,variab,variable,1413,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURewriteOutArguments.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURewriteOutArguments.cpp,1,['variab'],['variable']
Modifiability,"//===- AMDGPURewriteUndefForPHI.cpp ---------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // This file implements the idea to rewrite undef incoming operand for certain; // PHIs in structurized CFG. This pass only works on IR that has gone through; // StructurizedCFG pass, and this pass has some additional limitation that make; // it can only run after SIAnnotateControlFlow.; //; // To achieve optimal code generation for AMDGPU, we assume that uniformity; // analysis reports the PHI in join block of divergent branch as uniform if; // it has one unique uniform value plus additional undefined/poisoned incoming; // value. That is to say the later compiler pipeline will ensure such PHI always; // return uniform value and ensure it work correctly. Let's take a look at two; // typical patterns in structured CFG that need to be taken care: (In both; // patterns, block %if terminate with divergent branch.); //; // Pattern A: Block with undefined incoming value dominates defined predecessor; // %if; // | \; // | %then; // | /; // %endif: %phi = phi [%undef, %if], [%uniform, %then]; //; // Pattern B: Block with defined incoming value dominates undefined predecessor; // %if; // | \; // | %then; // | /; // %endif: %phi = phi [%uniform, %if], [%undef, %then]; //; // For pattern A, by reporting %phi as uniform, the later pipeline need to make; // sure it be handled correctly. The backend usually allocates a scalar register; // and if any thread in a wave takes %then path, the scalar register will get; // the %uniform value.; //; // For pattern B, we will replace the undef operand with the other defined value; // in this pass. So the scalar register allocated for such PHI will get correct; // liveness",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURewriteUndefForPHI.cpp:412,rewrite,rewrite,412,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURewriteUndefForPHI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURewriteUndefForPHI.cpp,1,['rewrite'],['rewrite']
Modifiability,"//===- ASTVector.h - Vector that uses ASTContext for allocation ---*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides ASTVector, a vector ADT whose contents are; // allocated using the allocator associated with an ASTContext..; //; //===----------------------------------------------------------------------===//; // FIXME: Most of this is copy-and-paste from BumpVector.h and SmallVector.h.; // We can refactor this core logic into something common.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTVector.h:687,refactor,refactor,687,interpreter/llvm-project/clang/include/clang/AST/ASTVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTVector.h,1,['refactor'],['refactor']
Modifiability,"//===- AliasAnalysisEvaluator.h - Alias Analysis Accuracy Evaluator -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements a simple N^2 alias analysis accuracy evaluator. The; /// analysis result is a set of statistics of how many times the AA; /// infrastructure provides each kind of alias result and mod/ref result when; /// queried with all pairs of pointers in the function.; ///; /// It can be used to evaluate a change in an alias analysis implementation,; /// algorithm, or the AA pipeline infrastructure itself. It acts like a stable; /// and easily tested consumer of all AA information exposed.; ///; /// This is inspired and adapted from code by: Naveen Neelakantam, Francesco; /// Spadini, and Wojciech Stryjewski.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysisEvaluator.h:931,adapt,adapted,931,interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysisEvaluator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysisEvaluator.h,1,['adapt'],['adapted']
Modifiability,"//===- AnalysisOrderChecker - Print callbacks called ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This checker prints callbacks that are called during analysis.; // This is required to ensure that callbacks are fired in order; // and do not duplicate or get lost.; // Feel free to extend this checker with any callback you need to check.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/AnalysisOrderChecker.cpp:566,extend,extend,566,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/AnalysisOrderChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/AnalysisOrderChecker.cpp,1,['extend'],['extend']
Modifiability,"//===- AnalyzerOptions.cpp - Analysis Engine Options ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains special accessors for analyzer configuration options; // with string representations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/AnalyzerOptions.cpp:433,config,configuration,433,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/AnalyzerOptions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/AnalyzerOptions.cpp,1,['config'],['configuration']
Modifiability,"//===- AnnotateFunctions.cpp ----------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Attribute plugin to mark a virtual method as ``call_super``, subclasses must; // call it in the overridden method.; //; // This example shows that attribute plugins combined with ``PluginASTAction``; // in Clang can do some of the same things which Java Annotations do.; //; // Unlike the other attribute plugin examples, this one does not attach an; // attribute AST node to the declaration AST node. Instead, it keeps a separate; // list of attributed declarations, which may be faster than using; // ``Decl::getAttr<T>()`` in some cases. The disadvantage of this approach is; // that the attribute is not part of the AST, which means that dumping the AST; // will lose the attribute information, pretty printing the AST won't write the; // attribute back out to source, and AST matchers will not be able to match; // against the attribute on the declaration.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp:393,plugin,plugin,393,interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/CallSuperAttribute/CallSuperAttrInfo.cpp,4,"['Plugin', 'plugin']","['PluginASTAction', 'plugin', 'plugins']"
Modifiability,"//===- AnnotateFunctions.cpp ----------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Example clang plugin which adds an annotation to every function in; // translation units that start with #pragma enable_annotate.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/AnnotateFunctions/AnnotateFunctions.cpp:397,plugin,plugin,397,interpreter/llvm-project/clang/examples/AnnotateFunctions/AnnotateFunctions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/AnnotateFunctions/AnnotateFunctions.cpp,1,['plugin'],['plugin']
Modifiability,"//===- ArgumentPromotion.cpp - Promote by-reference arguments -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass promotes ""by reference"" arguments to be ""by value"" arguments. In; // practice, this means looking for internal functions that have pointer; // arguments. If it can prove, through the use of alias analysis, that an; // argument is *only* loaded, then it can pass the value into the function; // instead of the address of the value. This can cause recursive simplification; // of code and lead to the elimination of allocas (especially in C++ template; // code like the STL).; //; // This pass also handles aggregate arguments that are passed into a function,; // scalarizing them if the elements of the aggregate are only loaded. Note that; // by default it refuses to scalarize aggregates which would require passing in; // more than three operands to the function, because passing thousands of; // operands for a large array or structure is unprofitable! This limit can be; // configured or disabled, however.; //; // Note that this transformation could also be done for arguments that are only; // stored to (returning the value instead), but does not currently. This case; // would be best handled when and if LLVM begins supporting multiple return; // values from functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ArgumentPromotion.cpp:1271,config,configured,1271,interpreter/llvm-project/llvm/lib/Transforms/IPO/ArgumentPromotion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ArgumentPromotion.cpp,1,['config'],['configured']
Modifiability,"//===- Attribute.cpp ------------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Example clang plugin which adds an an annotation to file-scope declarations; // with the 'example' attribute.; //; // This plugin is used by clang/test/Frontend/plugin-attribute tests.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp:397,plugin,plugin,397,interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/Attribute/Attribute.cpp,3,['plugin'],"['plugin', 'plugin-attribute']"
Modifiability,"//===- BinaryStreamArray.h - Array backed by an arbitrary stream *- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Lightweight arrays that are backed by an arbitrary BinaryStream. This file; /// provides two different array implementations.; ///; /// VarStreamArray - Arrays of variable length records. The user specifies; /// an Extractor type that can extract a record from a given offset and; /// return the number of bytes consumed by the record.; ///; /// FixedStreamArray - Arrays of fixed length records. This is similar in; /// spirit to ArrayRef<T>, but since it is backed by a BinaryStream, the; /// elements of the array need not be laid out in contiguous memory.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamArray.h:559,variab,variable,559,interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamArray.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BinaryStreamArray.h,1,['variab'],['variable']
Modifiability,"//===- BugReporterVisitors.cpp - Helpers for reporting bugs ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a set of BugReporter ""visitors"" which can be used to; // enhance the diagnostics reported for a bug.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporterVisitors.cpp:458,enhance,enhance,458,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporterVisitors.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporterVisitors.cpp,1,['enhance'],['enhance']
Modifiability,"//===- BugReporterVisitors.h - Generate PathDiagnostics ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares BugReporterVisitors, which are used to generate enhanced; // diagnostic traces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugReporterVisitors.h:450,enhance,enhanced,450,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugReporterVisitors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/BugReporter/BugReporterVisitors.h,1,['enhance'],['enhanced']
Modifiability,"//===- BumpVector.h - Vector-like ADT that uses bump allocation -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides BumpVector, a vector-like ADT whose contents are; // allocated from a BumpPtrAllocator.; //; //===----------------------------------------------------------------------===//; // FIXME: Most of this is copy-and-paste from SmallVector.h. We can; // refactor this core logic into something common that is shared between; // the two. The main thing that is different is the allocation strategy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Support/BumpVector.h:649,refactor,refactor,649,interpreter/llvm-project/clang/include/clang/Analysis/Support/BumpVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Support/BumpVector.h,1,['refactor'],['refactor']
Modifiability,"//===- CXXInheritance.cpp - C++ Inheritance -------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides routines that help analyzing C++ inheritance hierarchies.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/CXXInheritance.cpp:32,Inherit,Inheritance,32,interpreter/llvm-project/clang/lib/AST/CXXInheritance.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/CXXInheritance.cpp,2,"['Inherit', 'inherit']","['Inheritance', 'inheritance']"
Modifiability,"//===- CXXInheritance.h - C++ Inheritance -----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides routines that help analyzing C++ inheritance hierarchies.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/CXXInheritance.h:30,Inherit,Inheritance,30,interpreter/llvm-project/clang/include/clang/AST/CXXInheritance.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/CXXInheritance.h,2,"['Inherit', 'inherit']","['Inheritance', 'inheritance']"
Modifiability,"//===- CodeExpander.cpp - Expand variables in a string --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Expand the variables in a string.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISel/CodeExpander.cpp:33,variab,variables,33,interpreter/llvm-project/llvm/utils/TableGen/GlobalISel/CodeExpander.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISel/CodeExpander.cpp,2,['variab'],['variables']
Modifiability,"//===- CodeExpander.h - Expand variables in a string ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Expand the variables in a string.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISel/CodeExpander.h:31,variab,variables,31,interpreter/llvm-project/llvm/utils/TableGen/GlobalISel/CodeExpander.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISel/CodeExpander.h,2,['variab'],['variables']
Modifiability,"//===- CodeLayout.cpp - Implementation of code layout algorithms ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The file implements ""cache-aware"" layout algorithms of basic blocks and; // functions in a binary.; //; // The algorithm tries to find a layout of nodes (basic blocks) of a given CFG; // optimizing jump locality and thus processor I-cache utilization. This is; // achieved via increasing the number of fall-through jumps and co-locating; // frequently executed nodes together. The name follows the underlying; // optimization problem, Extended-TSP, which is a generalization of classical; // (maximum) Traveling Salesmen Problem.; //; // The algorithm is a greedy heuristic that works with chains (ordered lists); // of basic blocks. Initially all chains are isolated basic blocks. On every; // iteration, we pick a pair of chains whose merging yields the biggest increase; // in the ExtTSP score, which models how i-cache ""friendly"" a specific chain is.; // A pair of chains giving the maximum gain is merged into a new chain. The; // procedure stops when there is only one chain left, or when merging does not; // increase ExtTSP. In the latter case, the remaining chains are sorted by; // density in the decreasing order.; //; // An important aspect is the way two chains are merged. Unlike earlier; // algorithms (e.g., based on the approach of Pettis-Hansen), two; // chains, X and Y, are first split into three, X1, X2, and Y. Then we; // consider all possible ways of gluing the three chains (e.g., X1YX2, X1X2Y,; // X2X1Y, X2YX1, YX1X2, YX2X1) and choose the one producing the largest score.; // This improves the quality of the final result (the search space is larger); // while keeping the implementation su",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp:818,Extend,Extended-TSP,818,interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeLayout.cpp,1,['Extend'],['Extended-TSP']
Modifiability,"//===- CombineRuleBuilder -------------------------------------------------===//; /// Parses combine rule and builds a small intermediate representation to tie; /// patterns together and emit RuleMatchers to match them. This may emit more; /// than one RuleMatcher, e.g. for `wip_match_opcode`.; ///; /// Memory management for `Pattern` objects is done through `std::unique_ptr`.; /// In most cases, there are two stages to a pattern's lifetime:; /// - Creation in a `parse` function; /// - The unique_ptr is stored in a variable, and may be destroyed if the; /// pattern is found to be semantically invalid.; /// - Ownership transfer into a `PatternMap`; /// - Once a pattern is moved into either the map of Match or Apply; /// patterns, it is known to be valid and it never moves back.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp:521,variab,variable,521,interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp,1,['variab'],['variable']
Modifiability,"//===- CompilationDatabase.h ------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides an interface and multiple implementations for; // CompilationDatabases.; //; // While C++ refactoring and analysis tools are not compilers, and thus; // don't run as part of the build system, they need the exact information; // of a build in order to be able to correctly understand the C++ code of; // the project. This information is provided via the CompilationDatabase; // interface.; //; // To create a CompilationDatabase from a build directory one can call; // CompilationDatabase::loadFromDirectory(), which deduces the correct; // compilation database from the root of the build tree.; //; // See the concrete subclasses of CompilationDatabase for currently supported; // formats.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/CompilationDatabase.h:492,refactor,refactoring,492,interpreter/llvm-project/clang/include/clang/Tooling/CompilationDatabase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/CompilationDatabase.h,1,['refactor'],['refactoring']
Modifiability,"//===- ConfigManager.cpp --------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/ConfigManager.cpp:7,Config,ConfigManager,7,interpreter/llvm-project/llvm/lib/ObjCopy/ConfigManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/ConfigManager.cpp,1,['Config'],['ConfigManager']
Modifiability,"//===- ConfigManager.h ------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/ConfigManager.h:7,Config,ConfigManager,7,interpreter/llvm-project/llvm/include/llvm/ObjCopy/ConfigManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/ConfigManager.h,1,['Config'],['ConfigManager']
Modifiability,"//===- Construction of codegen pass pipelines ------------------*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// Interfaces for registering analysis passes, producing common pass manager; /// configurations, and parsing of pass pipelines.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:475,config,configurations,475,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,1,['config'],['configurations']
Modifiability,"//===- DIASupport.h - Common header includes for DIA ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // Common defines and header includes for all LLVMDebugInfoPDBDIA. The; // definitions here configure the necessary #defines and include system headers; // in the proper order for using DIA.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/DIA/DIASupport.h:468,config,configure,468,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/DIA/DIASupport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/DIA/DIASupport.h,1,['config'],['configure']
Modifiability,"//===- DataFlowSanitizer.cpp - dynamic data flow analysis -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file is a part of DataFlowSanitizer, a generalised dynamic data flow; /// analysis.; ///; /// Unlike other Sanitizer tools, this tool is not designed to detect a specific; /// class of bugs on its own. Instead, it provides a generic dynamic data flow; /// analysis framework to be used by clients to help detect application-specific; /// issues within their own code.; ///; /// The analysis is based on automatic propagation of data flow labels (also; /// known as taint labels) through a program as it performs computation.; ///; /// Argument and return value labels are passed through TLS variables; /// __dfsan_arg_tls and __dfsan_retval_tls.; ///; /// Each byte of application memory is backed by a shadow memory byte. The; /// shadow byte can represent up to 8 labels. On Linux/x86_64, memory is then; /// laid out as follows:; ///; /// +--------------------+ 0x800000000000 (top of memory); /// | application 3 |; /// +--------------------+ 0x700000000000; /// | invalid |; /// +--------------------+ 0x610000000000; /// | origin 1 |; /// +--------------------+ 0x600000000000; /// | application 2 |; /// +--------------------+ 0x510000000000; /// | shadow 1 |; /// +--------------------+ 0x500000000000; /// | invalid |; /// +--------------------+ 0x400000000000; /// | origin 3 |; /// +--------------------+ 0x300000000000; /// | shadow 3 |; /// +--------------------+ 0x200000000000; /// | origin 2 |; /// +--------------------+ 0x110000000000; /// | invalid |; /// +--------------------+ 0x100000000000; /// | shadow 2 |; /// +--------------------+ 0x010000000000; /// | application 1 |; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp:991,variab,variables,991,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,1,['variab'],['variables']
Modifiability,"//===- DeadStoreElimination.h - Fast Dead Store Elimination -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a trivial dead store elimination that only considers; // basic-block local redundant stores.; //; // FIXME: This should eventually be extended to be a post-dominator tree; // traversal. Doing so would be pretty trivial.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/DeadStoreElimination.h:538,extend,extended,538,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/DeadStoreElimination.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/DeadStoreElimination.h,1,['extend'],['extended']
Modifiability,"//===- DebugInfo.h - Debug Information Helpers ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a bunch of datatypes that are useful for creating and; // walking debug info in LLVM IR form. They essentially provide wrappers around; // the information in the global variables that's needed when constructing the; // DWARF information.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfo.h:570,variab,variables,570,interpreter/llvm-project/llvm/include/llvm/IR/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugInfo.h,1,['variab'],['variables']
Modifiability,"//===- DeltaTree.cpp - B-Tree for Rewrite Delta tracking ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the DeltaTree and related classes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/DeltaTree.cpp:34,Rewrite,Rewrite,34,interpreter/llvm-project/clang/lib/Rewrite/DeltaTree.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/DeltaTree.cpp,1,['Rewrite'],['Rewrite']
Modifiability,"//===- DeltaTree.h - B-Tree for Rewrite Delta tracking ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the DeltaTree class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/DeltaTree.h:32,Rewrite,Rewrite,32,interpreter/llvm-project/clang/include/clang/Rewrite/Core/DeltaTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/DeltaTree.h,1,['Rewrite'],['Rewrite']
Modifiability,"//===- DetailedRecordBackend.cpp - Detailed Records Report -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This Tablegen backend prints a report that includes all the global ; // variables, classes, and records in complete detail. It includes more; // detail than the default TableGen printer backend.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/DetailedRecordsBackend.cpp:450,variab,variables,450,interpreter/llvm-project/llvm/lib/TableGen/DetailedRecordsBackend.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/DetailedRecordsBackend.cpp,1,['variab'],['variables']
Modifiability,"//===- DwarfEHPrepare - Prepare exception handling for code generation ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass mulches exception handling code into a form adapted to code; // generation. Required if using dwarf exception handling.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DwarfEHPrepare.cpp:437,adapt,adapted,437,interpreter/llvm-project/llvm/lib/CodeGen/DwarfEHPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DwarfEHPrepare.cpp,1,['adapt'],['adapted']
Modifiability,"//===- ElimAvailExtern.h - Optimize Global Variables ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This transform is designed to eliminate available external global; // definitions from the program, turning them into declarations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/ElimAvailExtern.h:43,Variab,Variables,43,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/ElimAvailExtern.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/ElimAvailExtern.h,1,['Variab'],['Variables']
Modifiability,"//===- ErlangGCPrinter.cpp - Erlang/OTP frametable emitter ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the compiler plugin that is used in order to emit; // garbage collection information in a convenient layout for parsing and; // loading in the Erlang/OTP runtime.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/ErlangGCPrinter.cpp:417,plugin,plugin,417,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/ErlangGCPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/ErlangGCPrinter.cpp,1,['plugin'],['plugin']
Modifiability,"//===- FixItRewriter.cpp - Fix-It Rewriter Diagnostic Client --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a diagnostic client adaptor that performs rewrites as; // suggested by code modification hints attached to diagnostics. It; // then forwards any diagnostics to the adapted diagnostic client.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/FixItRewriter.cpp:34,Rewrite,Rewriter,34,interpreter/llvm-project/clang/lib/Frontend/Rewrite/FixItRewriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/FixItRewriter.cpp,4,"['Rewrite', 'adapt', 'rewrite']","['Rewriter', 'adapted', 'adaptor', 'rewrites']"
Modifiability,"//===- FixItRewriter.h - Fix-It Rewriter Diagnostic Client ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a diagnostic client adaptor that performs rewrites as; // suggested by code modification hints attached to diagnostics. It; // then forwards any diagnostics to the adapted diagnostic client.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Frontend/FixItRewriter.h:32,Rewrite,Rewriter,32,interpreter/llvm-project/clang/include/clang/Rewrite/Frontend/FixItRewriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Frontend/FixItRewriter.h,4,"['Rewrite', 'adapt', 'rewrite']","['Rewriter', 'adapted', 'adaptor', 'rewrites']"
Modifiability,"//===- GlobalDecl.h - Global declaration holder -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // A GlobalDecl can hold either a regular variable/function or a C++ ctor/dtor; // together with its type.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/GlobalDecl.h:422,variab,variable,422,interpreter/llvm-project/clang/include/clang/AST/GlobalDecl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/GlobalDecl.h,1,['variab'],['variable']
Modifiability,"//===- GlobalOpt.cpp - Optimize Global Variables --------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass transforms simple global variables that never have their address; // taken. If obviously true, it marks read/write globals as constant, deletes; // variables only stored to, etc.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp:39,Variab,Variables,39,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,3,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability,"//===- GlobalOpt.h - Optimize Global Variables ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass transforms simple global variables that never have their address; // taken. If obviously true, it marks read/write globals as constant, deletes; // variables only stored to, etc.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/GlobalOpt.h:37,Variab,Variables,37,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/GlobalOpt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/GlobalOpt.h,3,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability,"//===- GlobalSplit.cpp - global variable splitter -------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass uses inrange annotations on GEP indices to split globals where; // beneficial. Clang currently attaches these annotations to references to; // virtual table globals under the Itanium ABI for the benefit of the; // whole-program virtual call optimization and control flow integrity passes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalSplit.cpp:32,variab,variable,32,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalSplit.cpp,1,['variab'],['variable']
Modifiability,"//===- GlobalSplit.h - global variable splitter -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass uses inrange annotations on GEP indices to split globals where; // beneficial. Clang currently attaches these annotations to references to; // virtual table globals under the Itanium ABI for the benefit of the; // whole-program virtual call optimization and control flow integrity passes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/GlobalSplit.h:30,variab,variable,30,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/GlobalSplit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/GlobalSplit.h,1,['variab'],['variable']
Modifiability,"//===- HexagonHardwareLoops.cpp - Identify and generate hardware loops ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass identifies loops where we can generate the Hexagon hardware; // loop instruction. The hardware loop can perform loop branches with a; // zero-cycle overhead.; //; // The pattern that defines the induction variable can changed depending on; // prior optimizations. For example, the IndVarSimplify phase run by 'opt'; // normalizes induction variables, and the Loop Strength Reduction pass; // run by 'llc' may also make changes to the induction variable.; // The pattern detected by this phase is due to running Strength Reduction.; //; // Criteria for hardware loops:; // - Countable loops (w/ ind. var for a trip count); // - Assumes loops are normalized by IndVarSimplify; // - Try inner-most loops first; // - No function calls in loops.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHardwareLoops.cpp:598,variab,variable,598,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHardwareLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHardwareLoops.cpp,3,['variab'],"['variable', 'variables']"
Modifiability,"//===- HexagonMCInstrInfo.cpp - Hexagon sub-class of MCInst ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This class extends MCInstrInfo to allow Hexagon specific MCInstr queries; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCInstrInfo.cpp:394,extend,extends,394,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCInstrInfo.cpp,1,['extend'],['extends']
Modifiability,"//===- HexagonOptimizeSZextends.cpp - Remove unnecessary argument extends -===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Pass that removes sign extends for function parameters. These parameters; // are already sign extended by the caller per Hexagon's ABI; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonOptimizeSZextends.cpp:66,extend,extends,66,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonOptimizeSZextends.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonOptimizeSZextends.cpp,3,['extend'],"['extended', 'extends']"
Modifiability,"//===- IVUsers.cpp - Induction Variable Users -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements bookkeeping for ""interesting"" users of expressions; // computed from induction variables.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVUsers.cpp:31,Variab,Variable,31,interpreter/llvm-project/llvm/lib/Analysis/IVUsers.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVUsers.cpp,2,"['Variab', 'variab']","['Variable', 'variables']"
Modifiability,"//===- IVUsersPrinter.cpp - Induction Variable Users Printer ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IVUsersPrinter.cpp:38,Variab,Variable,38,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IVUsersPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IVUsersPrinter.cpp,1,['Variab'],['Variable']
Modifiability,"//===- IVUsersPrinter.h - Induction Variable Users Printing -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/IVUsersPrinter.h:36,Variab,Variable,36,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/IVUsersPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/IVUsersPrinter.h,1,['Variab'],['Variable']
Modifiability,"//===- IndVarSimplify.cpp - Induction Variable Elimination ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This transformation analyzes and transforms the induction variables (and; // computations derived from them) into simpler forms suitable for subsequent; // analysis and transformation.; //; // If the trip count of a loop is computable, this pass also makes the following; // changes:; // 1. The exit condition for the loop is canonicalized to compare the; // induction value against the exit value. This turns loops like:; // 'for (i = 7; i*i < 1000; ++i)' into 'for (i = 0; i != 25; ++i)'; // 2. Any use outside of the loop of an expression derived from the indvar; // is changed to compute the derived value outside of the loop, eliminating; // the dependence on the exit value of the induction variable. If the only; // purpose of the loop is to compute the exit value of some derived; // expression, this transformation will make the loop dead.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:38,Variab,Variable,38,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,3,"['Variab', 'variab']","['Variable', 'variable', 'variables']"
Modifiability,"//===- IndVarSimplify.h - Induction Variable Simplification -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides the interface for the Induction Variable; // Simplification pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/IndVarSimplify.h:36,Variab,Variable,36,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/IndVarSimplify.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/IndVarSimplify.h,2,['Variab'],['Variable']
Modifiability,"//===- InferAddressSpace.cpp - --------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // CUDA C/C++ includes memory space designation as variable type qualifers (such; // as __global__ and __shared__). Knowing the space of a memory access allows; // CUDA compilers to emit faster PTX loads and stores. For example, a load from; // shared memory can be translated to `ld.shared` which is roughly 10% faster; // than a generic `ld` on an NVIDIA Tesla K40c.; //; // Unfortunately, type qualifiers only apply to variable declarations, so CUDA; // compilers must infer the memory space of an address expression from; // type-qualified variables.; //; // LLVM IR uses non-zero (so-called) specific address spaces to represent memory; // spaces (e.g. addrspace(3) means shared memory). The Clang frontend; // places only type-qualified variables in specific address spaces, and then; // conservatively `addrspacecast`s each type-qualified variable to addrspace(0); // (so-called the generic address space) for other instructions to use.; //; // For example, the Clang translates the following CUDA code; // __shared__ float a[10];; // float v = a[i];; // to; // %0 = addrspacecast [10 x float] addrspace(3)* @a to [10 x float]*; // %1 = gep [10 x float], [10 x float]* %0, i64 0, i64 %i; // %v = load float, float* %1 ; emits ld.f32; // @a is in addrspace(3) since it's type-qualified, but its use from %1 is; // redirected to %0 (the generic version of @a).; //; // The optimization implemented in this file propagates specific address spaces; // from type-qualified variable declarations to its users. For example, it; // optimizes the above IR to; // %1 = gep [10 x float] addrspace(3)* @a, i64 0, i64 %i; // %v",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp:431,variab,variable,431,interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,3,['variab'],"['variable', 'variables']"
Modifiability,"//===- InheritViz.cpp - Graphviz visualization for inheritance --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements CXXRecordDecl::viewInheritance, which; // generates a GraphViz DOT file that depicts the class inheritance; // diagram and then calls Graphviz/dot+gv on it.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/InheritViz.cpp:7,Inherit,InheritViz,7,interpreter/llvm-project/clang/lib/AST/InheritViz.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/InheritViz.cpp,3,"['Inherit', 'inherit']","['InheritViz', 'inheritance']"
Modifiability,"//===- InstrRefBasedImpl.cpp - Tracking Debug Value MIs -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file InstrRefBasedImpl.cpp; ///; /// This is a separate implementation of LiveDebugValues, see; /// LiveDebugValues.cpp and VarLocBasedImpl.cpp for more information.; ///; /// This pass propagates variable locations between basic blocks, resolving; /// control flow conflicts between them. The problem is SSA construction, where; /// each debug instruction assigns the *value* that a variable has, and every; /// instruction where the variable is in scope uses that variable. The resulting; /// map of instruction-to-value is then translated into a register (or spill); /// location for each variable over each instruction.; ///; /// The primary difference from normal SSA construction is that we cannot; /// _create_ PHI values that contain variable values. CodeGen has already; /// completed, and we can't alter it just to make debug-info complete. Thus:; /// we can identify function positions where we would like a PHI value for a; /// variable, but must search the MachineFunction to see whether such a PHI is; /// available. If no such PHI exists, the variable location must be dropped.; ///; /// To achieve this, we perform two kinds of analysis. First, we identify; /// every value defined by every instruction (ignoring those that only move; /// another value), then re-compute an SSA-form representation of the; /// MachineFunction, using value propagation to eliminate any un-necessary; /// PHI values. This gives us a map of every value computed in the function,; /// and its location within the register file / stack.; ///; /// Secondly, for each variable we perform the same analysis, where each debug; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:578,variab,variable,578,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,5,['variab'],['variable']
Modifiability,"//===- Interpreter.cpp - Top-Level LLVM Interpreter Implementation --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the top-level functionality for the LLVM interpreter.; // This interpreter is designed to be a very simple, portable, inefficient; // interpreter.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Interpreter/Interpreter.cpp:512,portab,portable,512,interpreter/llvm-project/llvm/lib/ExecutionEngine/Interpreter/Interpreter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Interpreter/Interpreter.cpp,1,['portab'],['portable']
Modifiability,"//===- IteratedDominanceFrontier.h - Calculate IDF --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// Compute iterated dominance frontiers using a linear time algorithm.; ///; /// The algorithm used here is based on:; ///; /// Sreedhar and Gao. A linear time algorithm for placing phi-nodes.; /// In Proceedings of the 22nd ACM SIGPLAN-SIGACT Symposium on Principles of; /// Programming Languages; /// POPL '95. ACM, New York, NY, 62-73.; ///; /// It has been modified to not explicitly use the DJ graph data structure and; /// to directly compute pruned SSA using per-variable liveness information.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericIteratedDominanceFrontier.h:858,variab,variable,858,interpreter/llvm-project/llvm/include/llvm/Support/GenericIteratedDominanceFrontier.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericIteratedDominanceFrontier.h,1,['variab'],['variable']
Modifiability,"//===- IvarInvalidationChecker.cpp ------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This checker implements annotation driven invalidation checking. If a class; // contains a method annotated with 'objc_instance_variable_invalidator',; // - (void) foo; // __attribute__((annotate(""objc_instance_variable_invalidator"")));; // all the ""ivalidatable"" instance variables of this class should be; // invalidated. We call an instance variable ivalidatable if it is an object of; // a class which contains an invalidation method. There could be multiple; // methods annotated with such annotations per class, either one can be used; // to invalidate the ivar. An ivar or property are considered to be; // invalidated if they are being assigned 'nil' or an invalidation method has; // been called on them. An invalidation method should either invalidate all; // the ivars or call another invalidation method (on self).; //; // Partial invalidor annotation allows to address cases when ivars are; // invalidated by other methods, which might or might not be called from; // the invalidation method. The checker checks that each invalidation; // method and all the partial methods cumulatively invalidate all ivars.; // __attribute__((annotate(""objc_instance_variable_invalidator_partial"")));; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IvarInvalidationChecker.cpp:656,variab,variables,656,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IvarInvalidationChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IvarInvalidationChecker.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"//===- LICM.h - Loop Invariant Code Motion Pass -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass performs loop invariant code motion, attempting to remove as much; // code from the body of a loop as possible. It does this by either hoisting; // code into the preheader block, or by sinking code to the exit blocks if it is; // safe. This pass also promotes must-aliased memory locations in the loop to; // live in registers, thus hoisting and sinking ""invariant"" loads and stores.; //; // This pass uses alias analysis for two purposes:; //; // 1. Moving loop invariant loads and calls out of loops. If we can determine; // that a load or call inside of a loop never aliases anything stored to,; // we can hoist it or sink it like any other instruction.; // 2. Scalar Promotion of Memory - If there is a store instruction inside of; // the loop, we try to move the store to happen AFTER the loop instead of; // inside of the loop. This can only happen if a few conditions are true:; // A. The pointer stored through is loop invariant; // B. There are no stores or loads in the loop which _may_ alias the; // pointer. There are no calls in the loop which mod/ref the pointer.; // If these conditions are true, we can promote the loads and stores in the; // loop of the pointer to use a temporary alloca'd variable. We then use; // the SSAUpdater to construct the appropriate SSA form for the value.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LICM.h:1590,variab,variable,1590,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LICM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LICM.h,1,['variab'],['variable']
Modifiability,"//===- LLVMPrintFunctionNames.cpp; //---------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Example clang plugin which simply prints the names of all the functions; // within the generated LLVM code.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/LLVMPrintFunctionNames/LLVMPrintFunctionNames.cpp:404,plugin,plugin,404,interpreter/llvm-project/clang/examples/LLVMPrintFunctionNames/LLVMPrintFunctionNames.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/LLVMPrintFunctionNames/LLVMPrintFunctionNames.cpp,1,['plugin'],['plugin']
Modifiability,"//===- LiveDebugVariables.cpp - Tracking debug info variables -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the LiveDebugVariables analysis.; //; // Remove all DBG_VALUE instructions referencing virtual registers and replace; // them with a data structure tracking where live user variables are kept - in a; // virtual register or in a stack slot.; //; // Allow the data structure to be updated during register allocation when values; // are moved between registers and stack slots. Finally emit new DBG_VALUE; // instructions after register allocation is complete.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:52,variab,variables,52,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,2,['variab'],['variables']
Modifiability,"//===- LiveDebugVariables.h - Tracking debug info variables -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides the interface to the LiveDebugVariables analysis.; //; // The analysis removes DBG_VALUE instructions for virtual registers and tracks; // live user variables in a data structure that can be updated during register; // allocation.; //; // After register allocation new DBG_VALUE instructions are emitted to reflect; // the new locations of user variables.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.h:50,variab,variables,50,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.h,3,['variab'],['variables']
Modifiability,"//===- LiveRangeCalc.h - Calculate live ranges -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The LiveRangeCalc class can be used to implement the computation of; // live ranges from scratch.; // It caches information about values in the CFG to speed up repeated; // operations on the same live range. The cache can be shared by; // non-overlapping live ranges. SplitKit uses that when computing the live; // range of split products.; //; // A low-level interface is available to clients that know where a variable is; // live, but don't know which value it has as every point. LiveRangeCalc will; // propagate values down the dominator tree, and even insert PHI-defs where; // needed. SplitKit uses this faster interface when possible.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h:794,variab,variable,794,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,1,['variab'],['variable']
Modifiability,"//===- LiveVariables.h - Live Variable Analysis for Source CFGs -*- C++ --*-//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements Live Variables analysis for source-level CFGs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h:30,Variab,Variable,30,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/LiveVariables.h,2,['Variab'],"['Variable', 'Variables']"
Modifiability,"//===- LoopFlatten.cpp - Loop flattening pass------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass flattens pairs nested loops into a single loop.; //; // The intention is to optimise loop nests like this, which together access an; // array linearly:; //; // for (int i = 0; i < N; ++i); // for (int j = 0; j < M; ++j); // f(A[i*M+j]);; //; // into one loop:; //; // for (int i = 0; i < (N*M); ++i); // f(A[i]);; //; // It can also flatten loops where the induction variables are not used in the; // loop. This is only worth doing if the induction variables are only used in an; // expression like i*M+j. If they had any other uses, we would have to insert a; // div/mod to reconstruct the original values, so this wouldn't be profitable.; //; // We also need to prove that N*M will not overflow. The preferred solution is; // to widen the IV, which avoids overflow checks, so that is tried first. If; // the IV cannot be widened, then we try to determine that this new tripcount; // expression won't overflow.; //; // Q: Does LoopFlatten use SCEV?; // Short answer: Yes and no.; //; // Long answer:; // For this transformation to be valid, we require all uses of the induction; // variables to be linear expressions of the form i*M+j. The different Loop; // APIs are used to get some loop components like the induction variable,; // compare statement, etc. In addition, we do some pattern matching to find the; // linear expressions and other loop components like the loop increment. The; // latter are examples of expressions that do use the induction variable, but; // are safe to ignore when we check all uses to be of the form i*M+j. We keep; // track of all of this in bookkeeping struct FlattenInfo.;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp:760,variab,variables,760,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,2,['variab'],['variables']
Modifiability,"//===- LoopStrengthReduce.cpp - Strength Reduce IVs in Loops --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This transformation analyzes and transforms the induction variables (and; // computations derived from them) into forms suitable for efficient execution; // on the target.; //; // This pass performs a strength reduction on array references inside loops that; // have as one or more of their components the loop induction variable, it; // rewrites expressions to take advantage of scaled-index addressing modes; // available on the target, and it performs a variety of other optimizations; // related to loop induction variables.; //; // Terminology note: this code has a lot of handling for ""post-increment"" or; // ""post-inc"" users. This is not talking about post-increment addressing modes;; // it is instead talking about code like this:; //; // %i = phi [ 0, %entry ], [ %i.next, %latch ]; // ...; // %i.next = add %i, 1; // %c = icmp eq %i.next, %n; //; // The SCEV for %i is {0,+,1}<%L>. The SCEV for %i.next is {1,+,1}<%L>, however; // it's useful to think about these as the same register, with some uses using; // the value of the register before the add and some using it after. In this; // example, the icmp is a post-increment user, since it uses %i.next, which is; // the value of the induction variable after the increment. The other common; // case of post-increment users is users outside the loop.; //; // TODO: More sophistication in the way Formulae are generated and filtered.; //; // TODO: Handle multiple loops at a time.; //; // TODO: Should the addressing mode BaseGV be changed to a ConstantExpr instead; // of a GlobalValue?; //; // TODO: When truncation is free, truncate ICmp users' operands",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:441,variab,variables,441,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,4,"['rewrite', 'variab']","['rewrites', 'variable', 'variables']"
Modifiability,"//===- LoopStrengthReduce.h - Loop Strength Reduce Pass ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This transformation analyzes and transforms the induction variables (and; // computations derived from them) into forms suitable for efficient execution; // on the target.; //; // This pass performs a strength reduction on array references inside loops that; // have as one or more of their components the loop induction variable, it; // rewrites expressions to take advantage of scaled-index addressing modes; // available on the target, and it performs a variety of other optimizations; // related to loop induction variables.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopStrengthReduce.h:441,variab,variables,441,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopStrengthReduce.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopStrengthReduce.h,4,"['rewrite', 'variab']","['rewrites', 'variable', 'variables']"
Modifiability,"//===- LowerEmuTLS.cpp - Add __emutls_[vt].* variables --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This transformation is required for targets depending on libgcc style; // emulated thread local storage variables. For every defined TLS variable xyz,; // an __emutls_v.xyz is generated. If there is non-zero initialized value; // an __emutls_t.xyz is also generated.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LowerEmuTLS.cpp:45,variab,variables,45,interpreter/llvm-project/llvm/lib/CodeGen/LowerEmuTLS.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LowerEmuTLS.cpp,3,['variab'],"['variable', 'variables']"
Modifiability,"//===- LowerSwitch.cpp - Eliminate Switch instructions --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The LowerSwitch transformation rewrites switch instructions with a sequence; // of branches, which allows targets to get away with not implementing the; // switch instruction until it is convenient.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LowerSwitch.cpp:414,rewrite,rewrites,414,interpreter/llvm-project/llvm/lib/Transforms/Utils/LowerSwitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LowerSwitch.cpp,1,['rewrite'],['rewrites']
Modifiability,"//===- LowerSwitch.h - Eliminate Switch instructions ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The LowerSwitch transformation rewrites switch instructions with a sequence; // of branches, which allows targets to get away with not implementing the; // switch instruction until it is convenient.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LowerSwitch.h:414,rewrite,rewrites,414,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LowerSwitch.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LowerSwitch.h,1,['rewrite'],['rewrites']
Modifiability,"//===- MVELaneInterleaving.cpp - Inverleave for MVE instructions ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass interleaves around sext/zext/trunc instructions. MVE does not have; // a single sext/zext or trunc instruction that takes the bottom half of a; // vector and extends to a full width, like NEON has with MOVL. Instead it is; // expected that this happens through top/bottom instructions. So the MVE; // equivalent VMOVLT/B instructions take either the even or odd elements of the; // input and extend them to the larger type, producing a vector with half the; // number of elements each of double the bitwidth. As there is no simple; // instruction, we often have to turn sext/zext/trunc into a series of lane; // moves (or stack loads/stores, which we do not do yet).; //; // This pass takes vector code that starts at truncs, looks for interconnected; // blobs of operations that end with sext/zext (or constants/splats) of the; // form:; // %sa = sext v8i16 %a to v8i32; // %sb = sext v8i16 %b to v8i32; // %add = add v8i32 %sa, %sb; // %r = trunc %add to v8i16; // And adds shuffles to allow the use of VMOVL/VMOVN instrctions:; // %sha = shuffle v8i16 %a, undef, <0, 2, 4, 6, 1, 3, 5, 7>; // %sa = sext v8i16 %sha to v8i32; // %shb = shuffle v8i16 %b, undef, <0, 2, 4, 6, 1, 3, 5, 7>; // %sb = sext v8i16 %shb to v8i32; // %add = add v8i32 %sa, %sb; // %r = trunc %add to v8i16; // %shr = shuffle v8i16 %r, undef, <0, 4, 1, 5, 2, 6, 3, 7>; // Which can then be split and lowered to MVE instructions efficiently:; // %sa_b = VMOVLB.s16 %a; // %sa_t = VMOVLT.s16 %a; // %sb_b = VMOVLB.s16 %b; // %sb_t = VMOVLT.s16 %b; // %add_b = VADD.i32 %sa_b, %sb_b; // %add_t = VADD.i32 %sa_t, %sb_t; // %r = VMOVNT.i16",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVELaneInterleavingPass.cpp:551,extend,extends,551,interpreter/llvm-project/llvm/lib/Target/ARM/MVELaneInterleavingPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVELaneInterleavingPass.cpp,2,['extend'],"['extend', 'extends']"
Modifiability,"//===- MachinePipeliner.cpp - Machine Software Pipeliner Pass -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // An implementation of the Swing Modulo Scheduling (SMS) software pipeliner.; //; // This SMS implementation is a target-independent back-end pass. When enabled,; // the pass runs just prior to the register allocation pass, while the machine; // IR is in SSA form. If software pipelining is successful, then the original; // loop is replaced by the optimized loop. The optimized loop contains one or; // more prolog blocks, the pipelined kernel, and one or more epilog blocks. If; // the instructions cannot be scheduled in a given MII, we increase the MII by; // one and try again.; //; // The SMS implementation is an extension of the ScheduleDAGInstrs class. We; // represent loop carried dependences in the DAG as order edges to the Phi; // nodes. We also perform several passes over the DAG to eliminate unnecessary; // edges that inhibit the ability to pipeline. The implementation uses the; // DFAPacketizer class to compute the minimum initiation interval and the check; // where an instruction may be inserted in the pipelined schedule.; //; // In order for the SMS pass to work, several target specific hooks need to be; // implemented to get information about the loop structure and to rewrite; // instructions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:1578,rewrite,rewrite,1578,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['rewrite'],['rewrite']
Modifiability,"//===- MemoryLocation.h - Memory location descriptions ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file provides utility analysis objects describing memory locations.; /// These are used both by the Alias Analysis infrastructure and more; /// specialized memory analysis layers.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryLocation.h:568,layers,layers,568,interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryLocation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryLocation.h,1,['layers'],['layers']
Modifiability,"//===- MergeFunctions.h - Merge Identical Functions -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass transforms simple global variables that never have their address; // taken. If obviously true, it marks read/write globals as constant, deletes; // variables only stored to, etc.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/MergeFunctions.h:418,variab,variables,418,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/MergeFunctions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/MergeFunctions.h,2,['variab'],['variables']
Modifiability,"//===- MveEmitter.cpp - Generate arm_mve.h for use with clang -*- C++ -*-=====//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This set of linked tablegen backends is responsible for emitting the bits; // and pieces that implement <arm_mve.h>, which is defined by the ACLE standard; // and provides a set of types and functions for (more or less) direct access; // to the MVE instruction set, including the scalar shifts as well as the; // vector instructions.; //; // MVE's standard intrinsic functions are unusual in that they have a system of; // polymorphism. For example, the function vaddq() can behave like vaddq_u16(),; // vaddq_f32(), vaddq_s8(), etc., depending on the types of the vector; // arguments you give it.; //; // This constrains the implementation strategies. The usual approach to making; // the user-facing functions polymorphic would be to either use; // __attribute__((overloadable)) to make a set of vaddq() functions that are; // all inline wrappers on the underlying clang builtins, or to define a single; // vaddq() macro which expands to an instance of _Generic.; //; // The inline-wrappers approach would work fine for most intrinsics, except for; // the ones that take an argument required to be a compile-time constant,; // because if you wrap an inline function around a call to a builtin, the; // constant nature of the argument is not passed through.; //; // The _Generic approach can be made to work with enough effort, but it takes a; // lot of machinery, because of the design feature of _Generic that even the; // untaken branches are required to pass all front-end validity checks such as; // type-correctness. You can work around that by nesting further _Generics all; // over the place to coerce things",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:806,polymorphi,polymorphism,806,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,1,['polymorphi'],['polymorphism']
Modifiability,"//===- NumberObjectConversionChecker.cpp -------------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines NumberObjectConversionChecker, which checks for a; // particular common mistake when dealing with numbers represented as objects; // passed around by pointers. Namely, the language allows to reinterpret the; // pointer as a number directly, often without throwing any warnings,; // but in most cases the result of such conversion is clearly unexpected,; // as pointer value, rather than number value represented by the pointee object,; // becomes the result of such operation.; //; // Currently the checker supports the Objective-C NSNumber class,; // and the OSBoolean class found in macOS low-level code; the latter; // can only hold boolean values.; //; // This checker has an option ""Pedantic"" (boolean), which enables detection of; // more conversion patterns (which are most likely more harmless, and therefore; // are more likely to produce false positives) - disabled by default,; // enabled with `-analyzer-config osx.NumberObjectConversion:Pedantic=true'.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NumberObjectConversionChecker.cpp:1317,config,config,1317,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NumberObjectConversionChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NumberObjectConversionChecker.cpp,1,['config'],['config']
Modifiability,"//===- ObjCARCAliasAnalysis.cpp - ObjC ARC Optimization -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file defines a simple ARC-aware AliasAnalysis using special knowledge; /// of Objective C to enhance other optimization passes which rely on the Alias; /// Analysis infrastructure.; ///; /// WARNING: This file knows about certain library functions. It recognizes them; /// by name, and hardwires knowledge of their semantics.; ///; /// WARNING: This file knows about how certain Objective-C library functions are; /// used. Naive LLVM IR transformations which would otherwise be; /// behavior-preserving may break these assumptions.; ///; /// TODO: Theoretically we could check for dependencies between objc_* calls; /// and FMRB_OnlyAccessesArgumentPointees calls or other well-behaved calls.; ///; /// TODO: The calls here to AAResultBase member functions are all effectively; /// no-ops that just return a conservative result. The original intent was to; /// chain to another analysis for a recursive query, but this was lost in a; /// refactor. These should instead be rephrased in terms of queries to AAQI.AAR.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ObjCARCAliasAnalysis.cpp:489,enhance,enhance,489,interpreter/llvm-project/llvm/lib/Analysis/ObjCARCAliasAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ObjCARCAliasAnalysis.cpp,2,"['enhance', 'refactor']","['enhance', 'refactor']"
Modifiability,"//===- ObjCARCAliasAnalysis.h - ObjC ARC Alias Analysis ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file declares a simple ARC-aware AliasAnalysis using special knowledge; /// of Objective C to enhance other optimization passes which rely on the Alias; /// Analysis infrastructure.; ///; /// WARNING: This file knows about certain library functions. It recognizes them; /// by name, and hardwires knowledge of their semantics.; ///; /// WARNING: This file knows about how certain Objective-C library functions are; /// used. Naive LLVM IR transformations which would otherwise be; /// behavior-preserving may break these assumptions.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ObjCARCAliasAnalysis.h:490,enhance,enhance,490,interpreter/llvm-project/llvm/include/llvm/Analysis/ObjCARCAliasAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ObjCARCAliasAnalysis.h,1,['enhance'],['enhance']
Modifiability,"//===- ObjCRuntime.h - Objective-C Runtime Configuration --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Defines types useful for describing an Objective-C runtime.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h:43,Config,Configuration,43,interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ObjCRuntime.h,1,['Config'],['Configuration']
Modifiability,"//===- PDBSymbolCompilandEnv.cpp - compiland env variables ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/PDBSymbolCompilandEnv.cpp:49,variab,variables,49,interpreter/llvm-project/llvm/lib/DebugInfo/PDB/PDBSymbolCompilandEnv.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/PDBSymbolCompilandEnv.cpp,1,['variab'],['variables']
Modifiability,"//===- PDBSymbolCompilandEnv.h - compiland environment variables *- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/PDBSymbolCompilandEnv.h:55,variab,variables,55,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/PDBSymbolCompilandEnv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/PDBSymbolCompilandEnv.h,1,['variab'],['variables']
Modifiability,"//===- PDBSymbolData.cpp - PDB data (e.g. variable) accessors ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/PDBSymbolData.cpp:42,variab,variable,42,interpreter/llvm-project/llvm/lib/DebugInfo/PDB/PDBSymbolData.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/PDB/PDBSymbolData.cpp,1,['variab'],['variable']
Modifiability,"//===- PDBSymbolData.h - PDB data (e.g. variable) accessors -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/PDBSymbolData.h:40,variab,variable,40,interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/PDBSymbolData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/PDB/PDBSymbolData.h,1,['variab'],['variable']
Modifiability,"//===- ParsedAttrInfo.cpp - Registry for attribute plugins ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the Registry of attributes added by plugins which; // derive the ParsedAttrInfo class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/ParsedAttrInfo.cpp:51,plugin,plugins,51,interpreter/llvm-project/clang/lib/Basic/ParsedAttrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/ParsedAttrInfo.cpp,2,['plugin'],['plugins']
Modifiability,"//===- ParsedAttrInfo.h - Info needed to parse an attribute -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ParsedAttrInfo class, which dictates how to; // parse an attribute. This class is the one that plugins derive to; // define a new attribute.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ParsedAttrInfo.h:500,plugin,plugins,500,interpreter/llvm-project/clang/include/clang/Basic/ParsedAttrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/ParsedAttrInfo.h,1,['plugin'],['plugins']
Modifiability,"//===- Parsing, selection, and construction of pass pipelines --*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// Interfaces for registering analysis passes, producing common pass manager; /// configurations, and parsing of pass pipelines.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:475,config,configurations,475,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,1,['config'],['configurations']
Modifiability,"//===- PassManager.h - Pass management infrastructure -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This header defines various interfaces for pass management in LLVM. There; /// is no ""pass"" interface in LLVM per se. Instead, an instance of any class; /// which supports a method to 'run' it over a unit of IR can be used as; /// a pass. A pass manager is generally a tool to collect a sequence of passes; /// which run over a particular IR construct, and run each of them in sequence; /// over each such construct in the containing IR construct. As there is no; /// containing IR construct for a Module, a manager for passes over modules; /// forms the base case which runs its managed passes in sequence over the; /// single module provided.; ///; /// The core IR library provides managers for running passes over; /// modules and functions.; ///; /// * FunctionPassManager can run over a Module, runs each pass over; /// a Function.; /// * ModulePassManager must be directly run, runs each pass over the Module.; ///; /// Note that the implementations of the pass managers use concept-based; /// polymorphism as outlined in the ""Value Semantics and Concept-based; /// Polymorphism"" talk (or its abbreviated sibling ""Inheritance Is The Base; /// Class of Evil"") by Sean Parent:; /// * http://github.com/sean-parent/sean-parent.github.com/wiki/Papers-and-Presentations; /// * http://www.youtube.com/watch?v=_BpMYeUFXv8; /// * http://channel9.msdn.com/Events/GoingNative/2013/Inheritance-Is-The-Base-Class-of-Evil; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h:1396,polymorphi,polymorphism,1396,interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,4,"['Inherit', 'Polymorphi', 'polymorphi']","['Inheritance', 'Inheritance-Is-The-Base-Class-of-Evil', 'Polymorphism', 'polymorphism']"
Modifiability,"//===- PassManager.h --- Pass management for CodeGen ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header defines the pass manager interface for codegen. The codegen; // pipeline consists of only machine function passes. There is no container; // relationship between IR module/function and machine function in terms of pass; // manager organization. So there is no need for adaptor classes (for example; // ModuleToMachineFunctionAdaptor). Since invalidation could only happen among; // machine function passes, there is no proxy classes to handle cross-IR-unit; // invalidation. IR analysis results are provided for machine function passes by; // their respective analysis managers such as ModuleAnalysisManager and; // FunctionAnalysisManager.; //; // TODO: Add MachineFunctionProperties support.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassManager.h:664,adapt,adaptor,664,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassManager.h,1,['adapt'],['adaptor']
Modifiability,"//===- PatternMatch.h - Match on the LLVM IR --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides a simple and efficient mechanism for performing general; // tree-based pattern matches on the LLVM IR. The power of these routines is; // that it allows you to write concise patterns that are expressive and easy to; // understand. The other major advantage of this is that it allows you to; // trivially capture/bind elements in the pattern to variables. For example,; // you can do something like this:; //; // Value *Exp = ...; // Value *X, *Y; ConstantInt *C1, *C2; // (X & C1) | (Y & C2); // if (match(Exp, m_Or(m_And(m_Value(X), m_ConstantInt(C1)),; // m_And(m_Value(Y), m_ConstantInt(C2))))) {; // ... Pattern is matched and variables are bound ...; // }; //; // This is primarily useful to things like the instruction combiner, but can; // also be useful for static analysis tools or code generators.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PatternMatch.h:746,variab,variables,746,interpreter/llvm-project/llvm/include/llvm/IR/PatternMatch.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PatternMatch.h,2,['variab'],['variables']
Modifiability,"//===- PeepholeOptimizer.cpp - Peephole Optimizations ---------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Perform peephole optimizations on the machine code:; //; // - Optimize Extensions; //; // Optimization of sign / zero extension instructions. It may be extended to; // handle other instructions with similar properties.; //; // On some targets, some instructions, e.g. X86 sign / zero extension, may; // leave the source value in the lower part of the result. This optimization; // will replace some uses of the pre-extension value with uses of the; // sub-register of the results.; //; // - Optimize Comparisons; //; // Optimization of comparison instructions. For instance, in this code:; //; // sub r1, 1; // cmp r1, 0; // bz L1; //; // If the ""sub"" instruction all ready sets (or could be modified to set) the; // same flag that the ""cmp"" instruction sets and that ""bz"" uses, then we can; // eliminate the ""cmp"" instruction.; //; // Another instance, in this code:; //; // sub r1, r3 | sub r1, imm; // cmp r3, r1 or cmp r1, r3 | cmp r1, imm; // bge L1; //; // If the branch instruction can use flag from ""sub"", then we can replace; // ""sub"" with ""subs"" and eliminate the ""cmp"" instruction.; //; // - Optimize Loads:; //; // Loads that can be folded into a later instruction. A load is foldable; // if it loads to virtual registers and the virtual register defined has; // a single use.; //; // - Optimize Copies and Bitcast (more generally, target specific copies):; //; // Rewrite copies and bitcasts to avoid cross register bank copies; // when possible.; // E.g., Consider the following example, where capital and lower; // letters denote different register file:; // b = copy A <-- cross-bank copy; // C = copy ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp:535,extend,extended,535,interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,1,['extend'],['extended']
Modifiability,"//===- PlaceSafepoints.cpp - Place GC Safepoints --------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Place garbage collection safepoints at appropriate locations in the IR. This; // does not make relocation semantics or variable liveness explicit. That's; // done by RewriteStatepointsForGC.; //; // Terminology:; // - A call is said to be ""parseable"" if there is a stack map generated for the; // return PC of the call. A runtime can determine where values listed in the; // deopt arguments and (after RewriteStatepointsForGC) gc arguments are located; // on the stack when the code is suspended inside such a call. Every parse; // point is represented by a call wrapped in an gc.statepoint intrinsic.; // - A ""poll"" is an explicit check in the generated code to determine if the; // runtime needs the generated code to cooperate by calling a helper routine; // and thus suspending its execution at a known state. The call to the helper; // routine will be parseable. The (gc & runtime specific) logic of a poll is; // assumed to be provided in a function of the name ""gc.safepoint_poll"".; //; // We aim to insert polls such that running code can quickly be brought to a; // well defined state for inspection by the collector. In the current; // implementation, this is done via the insertion of poll sites at method entry; // and the backedge of most loops. We try to avoid inserting more polls than; // are necessary to ensure a finite period between poll sites. This is not; // because the poll itself is expensive in the generated code; it's not. Polls; // do tend to impact the optimizer itself in negative ways; we'd like to avoid; // perturbing the optimization of the method as much as we can.; //; // We also ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/PlaceSafepoints.cpp:502,variab,variable,502,interpreter/llvm-project/llvm/lib/Transforms/Scalar/PlaceSafepoints.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/PlaceSafepoints.cpp,3,"['Rewrite', 'variab']","['RewriteStatepointsForGC', 'variable']"
Modifiability,"//===- PlaceSafepoints.h - Place GC Safepoints ----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Place garbage collection safepoints at appropriate locations in the IR. This; // does not make relocation semantics or variable liveness explicit. That's; // done by RewriteStatepointsForGC.; //; // Terminology:; // - A call is said to be ""parseable"" if there is a stack map generated for the; // return PC of the call. A runtime can determine where values listed in the; // deopt arguments and (after RewriteStatepointsForGC) gc arguments are located; // on the stack when the code is suspended inside such a call. Every parse; // point is represented by a call wrapped in an gc.statepoint intrinsic.; // - A ""poll"" is an explicit check in the generated code to determine if the; // runtime needs the generated code to cooperate by calling a helper routine; // and thus suspending its execution at a known state. The call to the helper; // routine will be parseable. The (gc & runtime specific) logic of a poll is; // assumed to be provided in a function of the name ""gc.safepoint_poll"".; //; // We aim to insert polls such that running code can quickly be brought to a; // well defined state for inspection by the collector. In the current; // implementation, this is done via the insertion of poll sites at method entry; // and the backedge of most loops. We try to avoid inserting more polls than; // are necessary to ensure a finite period between poll sites. This is not; // because the poll itself is expensive in the generated code; it's not. Polls; // do tend to impact the optimizer itself in negative ways; we'd like to avoid; // perturbing the optimization of the method as much as we can.; //; // We also ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/PlaceSafepoints.h:502,variab,variable,502,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/PlaceSafepoints.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/PlaceSafepoints.h,3,"['Rewrite', 'variab']","['RewriteStatepointsForGC', 'variable']"
Modifiability,"//===- PluginsOrder.cpp ---------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/PluginsOrder/PluginsOrder.cpp:7,Plugin,PluginsOrder,7,interpreter/llvm-project/clang/examples/PluginsOrder/PluginsOrder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/PluginsOrder/PluginsOrder.cpp,1,['Plugin'],['PluginsOrder']
Modifiability,"//===- PredicateInfo.h - Build PredicateInfo ----------------------*-C++-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements the PredicateInfo analysis, which creates an Extended; /// SSA form for operations used in branch comparisons and llvm.assume; /// comparisons.; ///; /// Copies of these operations are inserted into the true/false edge (and after; /// assumes), and information attached to the copies. All uses of the original; /// operation in blocks dominated by the true/false edge (and assume), are; /// replaced with uses of the copies. This enables passes to easily and sparsely; /// propagate condition based info into the operations that may be affected.; ///; /// Example:; /// %cmp = icmp eq i32 %x, 50; /// br i1 %cmp, label %true, label %false; /// true:; /// ret i32 %x; /// false:; /// ret i32 1; ///; /// will become; ///; /// %cmp = icmp eq i32, %x, 50; /// br i1 %cmp, label %true, label %false; /// true:; /// %x.0 = call \@llvm.ssa_copy.i32(i32 %x); /// ret i32 %x.0; /// false:; /// ret i32 1; ///; /// Using getPredicateInfoFor on x.0 will give you the comparison it is; /// dominated by (the icmp), and that you are located in the true edge of that; /// comparison, which tells you x.0 is 50.; ///; /// In order to reduce the number of copies inserted, predicateinfo is only; /// inserted where it would actually be live. This means if there are no uses of; /// an operation dominated by the branch edges, or by an assume, the associated; /// predicate info is never inserted.; ///; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/PredicateInfo.h:462,Extend,Extended,462,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/PredicateInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/PredicateInfo.h,1,['Extend'],['Extended']
Modifiability,"//===- PrettyVariableDumper.h - PDBSymDumper variable dumper ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-pdbutil/PrettyVariableDumper.h:45,variab,variable,45,interpreter/llvm-project/llvm/tools/llvm-pdbutil/PrettyVariableDumper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-pdbutil/PrettyVariableDumper.h,1,['variab'],['variable']
Modifiability,"//===- PrintFunctionNames.cpp ---------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Example clang plugin which simply prints the names of all the top-level decls; // in the input file.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/PrintFunctionNames/PrintFunctionNames.cpp:397,plugin,plugin,397,interpreter/llvm-project/clang/examples/PrintFunctionNames/PrintFunctionNames.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/examples/PrintFunctionNames/PrintFunctionNames.cpp,1,['plugin'],['plugin']
Modifiability,"//===- PromoteMemoryToRegister.cpp - Convert allocas to registers ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file promotes memory references to be register references. It promotes; // alloca instructions which only have loads and stores as uses. An alloca is; // transformed by using iterated dominator frontiers to place PHI nodes, then; // traversing the function in depth-first order to rewrite loads and stores as; // appropriate.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp:669,rewrite,rewrite,669,interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,1,['rewrite'],['rewrite']
Modifiability,"//===- PtrUseVisitor.h - InstVisitors over a pointers uses ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file provides a collection of visitors which walk the (instruction); /// uses of a pointer. These visitors all provide the same essential behavior; /// as an InstVisitor with similar template-based flexibility and; /// implementation strategies.; ///; /// These can be used, for example, to quickly analyze the uses of an alloca,; /// global variable, or function argument.; ///; /// FIXME: Provide a variant which doesn't track offsets and is cheaper.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/PtrUseVisitor.h:742,variab,variable,742,interpreter/llvm-project/llvm/include/llvm/Analysis/PtrUseVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/PtrUseVisitor.h,1,['variab'],['variable']
Modifiability,"//===- RISCVDeadRegisterDefinitions.cpp - Replace dead defs w/ zero reg --===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===---------------------------------------------------------------------===//; //; // This pass rewrites Rd to x0 for instrs whose return values are unused.; //; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVDeadRegisterDefinitions.cpp:391,rewrite,rewrites,391,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVDeadRegisterDefinitions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVDeadRegisterDefinitions.cpp,1,['rewrite'],['rewrites']
Modifiability,"//===- RISCVOptWInstrs.cpp - MI W instruction optimizations ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===---------------------------------------------------------------------===//; //; // This pass does some optimizations for *W instructions at the MI level.; //; // First it removes unneeded sext.w instructions. Either because the sign; // extended bits aren't consumed or because the input was already sign extended; // by an earlier instruction.; //; // Then it removes the -w suffix from opw instructions whenever all users are; // dependent only on the lower word of the result of the instruction.; // The cases handled are:; // * addw because c.add has a larger register encoding than c.addw.; // * addiw because it helps reduce test differences between RV32 and RV64; // w/o being a pessimization.; // * mulw because c.mulw doesn't exist but c.mul does (w/ zcb); // * slliw because c.slliw doesn't exist and c.slli does; //; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVOptWInstrs.cpp:536,extend,extended,536,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVOptWInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVOptWInstrs.cpp,2,['extend'],['extended']
Modifiability,"//===- RISCVRVVInitUndef.cpp - Initialize undef vector value to pseudo ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function pass that initializes undef vector value to; // temporary pseudo instruction and remove it in expandpseudo pass to prevent; // register allocation resulting in a constraint violated result for vector; // instruction. It also rewrites the NoReg tied operand back to an; // IMPLICIT_DEF.; //; // RISC-V vector instruction has register overlapping constraint for certain; // instructions, and will cause illegal instruction trap if violated, we use; // early clobber to model this constraint, but it can't prevent register; // allocator allocated same or overlapped if the input register is undef value,; // so convert IMPLICIT_DEF to temporary pseudo instruction and remove it later; // could prevent that happen, it's not best way to resolve this, and it might; // change the order of program or increase the register pressure, so ideally we; // should model the constraint right, but before we model the constraint right,; // it's the only way to prevent that happen.; //; // When we enable the subregister liveness option, it will also trigger same; // issue due to the partial of register is undef. If we pseudoinit the whole; // register, then it will generate redundant COPY instruction. Currently, it; // will generate INSERT_SUBREG to make sure the whole register is occupied; // when program encounter operation that has early-clobber constraint.; //; //; // See also: https://github.com/llvm/llvm-project/issues/50157; //; // Additionally, this pass rewrites tied operands of vector instructions; // from NoReg to IMPLICIT_DEF. (Not that this is a non-overlapping set of; // ope",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVRVVInitUndef.cpp:640,rewrite,rewrites,640,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVRVVInitUndef.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVRVVInitUndef.cpp,1,['rewrite'],['rewrites']
Modifiability,"//===- ReduceDPValues.cpp - Specialized Delta Pass ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting DPValues from defined functions.; //; // DPValues store variable-location debug-info and are attached to instructions.; // This information used to be represented by intrinsics such as dbg.value, and; // would naturally get reduced by llvm-reduce like any other instruction. As; // DPValues get stored elsewhere, they need to be enumerated and eliminated like; // any other data structure in LLVM.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceDPValues.cpp:543,variab,variable-location,543,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceDPValues.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceDPValues.cpp,1,['variab'],['variable-location']
Modifiability,"//===- ReduceGlobalVarInitializers.h ----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce initializers of Global Variables in the provided Module.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVarInitializers.h:496,Variab,Variables,496,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVarInitializers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVarInitializers.h,1,['Variab'],['Variables']
Modifiability,"//===- ReduceGlobalVars.cpp - Specialized Delta Pass ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce Global Variables in the provided Module.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVars.cpp:480,Variab,Variables,480,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVars.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVars.cpp,1,['Variab'],['Variables']
Modifiability,"//===- ReduceGlobalVars.cpp - Specialized Delta Pass ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce initializers of Global Variables in the provided Module.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVarInitializers.cpp:496,Variab,Variables,496,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVarInitializers.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVarInitializers.cpp,1,['Variab'],['Variables']
Modifiability,"//===- ReduceGlobalVars.h - Specialized Delta Pass --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce Global Variables in the provided Module.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVars.h:480,Variab,Variables,480,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVars.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVars.h,1,['Variab'],['Variables']
Modifiability,"//===- ReduceSpecialGlobals.cpp - Specialized Delta Pass ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce special globals, like @llvm.used, in the provided Module.; //; // For more details about special globals, see; // https://llvm.org/docs/LangRef.html#intrinsic-global-variables; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceSpecialGlobals.cpp:639,variab,variables,639,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceSpecialGlobals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceSpecialGlobals.cpp,1,['variab'],['variables']
Modifiability,"//===- ReduceSpecialGlobals.h - Specialized Delta Pass ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce special globals, like @llvm.used, in the provided Module.; //; // For more details about special globals, see; // https://llvm.org/docs/LangRef.html#intrinsic-global-variables; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceSpecialGlobals.h:639,variab,variables,639,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceSpecialGlobals.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceSpecialGlobals.h,1,['variab'],['variables']
Modifiability,"//===- RegAllocBase.h - basic regalloc interface and driver -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the RegAllocBase class, which is the skeleton of a basic; // register allocation algorithm and interface for extending it. It provides the; // building blocks on which to construct other experimental allocators and test; // the validity of two principles:; //; // - If virtual and physical register liveness is modeled using intervals, then; // on-the-fly interference checking is cheap. Furthermore, interferences can be; // lazily cached and reused.; //; // - Register allocation complexity, and generated code performance is; // determined by the effectiveness of live range splitting rather than optimal; // coloring.; //; // Following the first principle, interfering checking revolves around the; // LiveIntervalUnion data structure.; //; // To fulfill the second principle, the basic allocator provides a driver for; // incremental splitting. It essentially punts on the problem of register; // coloring, instead driving the assignment of virtual to physical registers by; // the cost of splitting. The basic allocator allows for heuristic reassignment; // of registers, if a more sophisticated allocator chooses to do that.; //; // This framework provides a way to engineer the compile time vs. code; // quality trade-off without relying on a particular theoretical solver.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocBase.h:510,extend,extending,510,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocBase.h,1,['extend'],['extending']
Modifiability,"//===- RegAllocPBQP.cpp ---- PBQP Register Allocator ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a Partitioned Boolean Quadratic Programming (PBQP) based; // register allocator for LLVM. This allocator works by constructing a PBQP; // problem representing the register allocation problem under consideration,; // solving this using a PBQP solver, and mapping the solution back to a; // register assignment. If any variables are selected for spilling then spill; // code is inserted and the process repeated.; //; // The PBQP solver (pbqp.c) provided for this allocator uses a heuristic tuned; // for register allocation. For more information on PBQP for register; // allocation, see the following papers:; //; // (1) Hames, L. and Scholz, B. 2006. Nearly optimal register allocation with; // PBQP. In Proceedings of the 7th Joint Modular Languages Conference; // (JMLC'06). LNCS, vol. 4228. Springer, New York, NY, USA. 346-361.; //; // (2) Scholz, B., Eckstein, E. 2002. Register allocation for irregular; // architectures. In Proceedings of the Joint Conference on Languages,; // Compilers and Tools for Embedded Systems (LCTES'02), ACM Press, New York,; // NY, USA, 139-148.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocPBQP.cpp:719,variab,variables,719,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocPBQP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocPBQP.cpp,1,['variab'],['variables']
Modifiability,"//===- Replacement.cpp - Framework for clang refactoring tools ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implements classes to support/store refactorings.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Core/Replacement.cpp:45,refactor,refactoring,45,interpreter/llvm-project/clang/lib/Tooling/Core/Replacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Core/Replacement.cpp,2,['refactor'],"['refactoring', 'refactorings']"
Modifiability,"//===- Replacement.h - Framework for clang refactoring tools ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Classes supporting refactorings that span multiple translation units.; // While single translation unit refactorings are supported via the Rewriter,; // when refactoring multiple translation units changes must be stored in a; // SourceManager independent form, duplicate changes need to be removed, and; // all changes must be applied at once at the end of the refactoring so that; // the code is always parseable.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Core/Replacement.h:43,refactor,refactoring,43,interpreter/llvm-project/clang/include/clang/Tooling/Core/Replacement.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Core/Replacement.h,6,"['Rewrite', 'refactor']","['Rewriter', 'refactoring', 'refactorings']"
Modifiability,"//===- ResourcePriorityQueue.cpp - A DFA-oriented priority queue -*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the ResourcePriorityQueue class, which is a; // SchedulingPriorityQueue that prioritizes instructions using DFA state to; // reduce the length of the critical path through the basic block; // on VLIW platforms.; // The scheduler is basically a top-down adaptable list scheduler with DFA; // resource tracking added to the cost function.; // DFA is queried as a state machine to model ""packets/bundles"" during; // schedule. Currently packets/bundles are discarded at the end of; // scheduling, affecting only order of instructions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp:657,adapt,adaptable,657,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp,1,['adapt'],['adaptable']
Modifiability,"//===- Rewrite.cpp --------------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/Rewrite.cpp:7,Rewrite,Rewrite,7,interpreter/llvm-project/clang/tools/libclang/Rewrite.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/Rewrite.cpp,1,['Rewrite'],['Rewrite']
Modifiability,"//===- RewriteBuffer.h - Buffer rewriting interface -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteBuffer.h:7,Rewrite,RewriteBuffer,7,interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteBuffer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteBuffer.h,1,['Rewrite'],['RewriteBuffer']
Modifiability,"//===- RewriteRope.cpp - Rope specialized for rewriter --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the RewriteRope class, which is a powerful string.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp:7,Rewrite,RewriteRope,7,interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,3,"['Rewrite', 'rewrite']","['RewriteRope', 'rewriter']"
Modifiability,"//===- RewriteRope.h - Rope specialized for rewriter ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the RewriteRope class, which is a powerful string class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h:7,Rewrite,RewriteRope,7,interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h,3,"['Rewrite', 'rewrite']","['RewriteRope', 'rewriter']"
Modifiability,"//===- RewriteStatepointsForGC.cpp - Make GC relocations explicit ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Rewrite call/invoke instructions so as to make potential relocations; // performed by the garbage collector explicit in the IR.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp:7,Rewrite,RewriteStatepointsForGC,7,interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,2,['Rewrite'],"['Rewrite', 'RewriteStatepointsForGC']"
Modifiability,"//===- RewriteStatepointsForGC.h - ------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides interface to ""Rewrite Statepoints for GC"" pass.; //; // This passe rewrites call/invoke instructions so as to make potential; // relocations performed by the garbage collector explicit in the IR.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/RewriteStatepointsForGC.h:7,Rewrite,RewriteStatepointsForGC,7,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/RewriteStatepointsForGC.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/RewriteStatepointsForGC.h,3,"['Rewrite', 'rewrite']","['Rewrite', 'RewriteStatepointsForGC', 'rewrites']"
Modifiability,"//===- Rewriter.cpp - Code rewriting interface ----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the Rewriter class, which is used for code; // transformations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/Rewriter.cpp:7,Rewrite,Rewriter,7,interpreter/llvm-project/clang/lib/Rewrite/Rewriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/Rewriter.cpp,2,['Rewrite'],['Rewriter']
Modifiability,"//===- Rewriter.h - Code rewriting interface --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the Rewriter class, which is used for code; // transformations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/Rewriter.h:7,Rewrite,Rewriter,7,interpreter/llvm-project/clang/include/clang/Rewrite/Core/Rewriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/Rewriter.h,2,['Rewrite'],['Rewriter']
Modifiability,"//===- ScalarEvolution.cpp - Scalar Evolution Analysis --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the implementation of the scalar evolution analysis; // engine, which is used primarily to analyze expressions involving induction; // variables in loops.; //; // There are several aspects to this library. First is the representation of; // scalar expressions, which are represented as subclasses of the SCEV class.; // These classes are used to represent certain types of subexpressions that we; // can handle. We only create one SCEV of a particular shape, so; // pointer-comparisons for equality are legal.; //; // One important aspect of the SCEV objects is that they are never cyclic, even; // if there is a cycle in the dataflow for an expression (ie, a PHI node). If; // the PHI node is one of the idioms that we can represent (e.g., a polynomial; // recurrence) then we represent it directly as a recurrence node, otherwise we; // represent it as a SCEVUnknown node.; //; // In addition to being able to represent expressions of various types, we also; // have folders that are used to build the *canonical* representation for a; // particular expression. These folders are capable of using a variety of; // rewrite rules to simplify the expressions.; //; // Once the folders are defined, we can implement the more interesting; // higher-level code, such as the code that recognizes PHI nodes of various; // types, computes the execution count of a loop, etc.; //; // TODO: We should use these routines and value representations to implement; // dependence analysis!; //; //===----------------------------------------------------------------------===//; //; // There are several good referen",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:537,variab,variables,537,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['variab'],['variables']
Modifiability,"//===- SeparateConstOffsetFromGEP.cpp -------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Loop unrolling may create many similar GEPs for array accesses.; // e.g., a 2-level loop; //; // float a[32][32]; // global variable; //; // for (int i = 0; i < 2; ++i) {; // for (int j = 0; j < 2; ++j) {; // ...; // ... = a[x + i][y + j];; // ...; // }; // }; //; // will probably be unrolled to:; //; // gep %a, 0, %x, %y; load; // gep %a, 0, %x, %y + 1; load; // gep %a, 0, %x + 1, %y; load; // gep %a, 0, %x + 1, %y + 1; load; //; // LLVM's GVN does not use partial redundancy elimination yet, and is thus; // unable to reuse (gep %a, 0, %x, %y). As a result, this misoptimization incurs; // significant slowdown in targets with limited addressing modes. For instance,; // because the PTX target does not support the reg+reg addressing mode, the; // NVPTX backend emits PTX code that literally computes the pointer address of; // each GEP, wasting tons of registers. It emits the following PTX for the; // first load and similar PTX for other loads.; //; // mov.u32 %r1, %x;; // mov.u32 %r2, %y;; // mul.wide.u32 %rl2, %r1, 128;; // mov.u64 %rl3, a;; // add.s64 %rl4, %rl3, %rl2;; // mul.wide.u32 %rl5, %r2, 4;; // add.s64 %rl6, %rl4, %rl5;; // ld.global.f32 %f1, [%rl6];; //; // To reduce the register pressure, the optimization implemented in this file; // merges the common part of a group of GEPs, so we can compute each pointer; // address by adding a simple offset to the common part, saving many registers.; //; // It works by splitting each GEP into a variadic base and a constant offset.; // The variadic base can be computed once and reused by multiple GEPs, and the; // constant offsets can be nicely fo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp:507,variab,variable,507,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,1,['variab'],['variable']
Modifiability,"//===- SpillPlacement.cpp - Optimal Spill Code Placement ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the spill code placement analysis.; //; // Each edge bundle corresponds to a node in a Hopfield network. Constraints on; // basic blocks are weighted by the block frequency and added to become the node; // bias.; //; // Transparent basic blocks have the variable live through, but don't care if it; // is spilled or in a register. These blocks become connections in the Hopfield; // network, again weighted by block frequency.; //; // The Hopfield network minimizes (possibly locally) its energy function:; //; // E = -sum_n V_n * ( B_n + sum_{n, m linked by b} V_m * F_b ); //; // The energy function represents the expected spill code execution frequency,; // or the cost of spilling. This is a Lyapunov function which never increases; // when a node is updated. It is guaranteed to converge to a local minimum.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp:658,variab,variable,658,interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp,1,['variab'],['variable']
Modifiability,"//===- SpillPlacement.h - Optimal Spill Code Placement ---------*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This analysis computes the optimal spill code placement between basic blocks.; //; // The runOnMachineFunction() method only precomputes some profiling information; // about the CFG. The real work is done by prepare(), addConstraints(), and; // finish() which are called by the register allocator.; //; // Given a variable that is live across multiple basic blocks, and given; // constraints on the basic blocks where the variable is live, determine which; // edge bundles should have the variable in a register and which edge bundles; // should have the variable in a stack slot.; //; // The returned bit vector can be used to place optimal spill code at basic; // block entries and exits. Spill code placement inside a basic block is not; // considered.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h:697,variab,variable,697,interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.h,4,['variab'],['variable']
Modifiability,"//===- StackProtector.cpp - Stack Protector Insertion ---------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass inserts stack protectors into functions which need them. A variable; // with a random value in it is stored onto the stack before the local variables; // are allocated. Upon exiting the block, the stored value is checked. If it's; // changed, then there was some sort of violation and the program aborts.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackProtector.cpp:452,variab,variable,452,interpreter/llvm-project/llvm/lib/CodeGen/StackProtector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackProtector.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"//===- StackProtector.h - Stack Protector Insertion -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass inserts stack protectors into functions which need them. A variable; // with a random value in it is stored onto the stack before the local variables; // are allocated. Upon exiting the block, the stored value is checked. If it's; // changed, then there was some sort of violation and the program aborts.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackProtector.h:452,variab,variable,452,interpreter/llvm-project/llvm/include/llvm/CodeGen/StackProtector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackProtector.h,2,['variab'],"['variable', 'variables']"
Modifiability,"//===- StraightLineStrengthReduce.cpp - -----------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements straight-line strength reduction (SLSR). Unlike loop; // strength reduction, this algorithm is designed to reduce arithmetic; // redundancy in straight-line code instead of loops. It has proven to be; // effective in simplifying arithmetic statements derived from an unrolled loop.; // It can also simplify the logic of SeparateConstOffsetFromGEP.; //; // There are many optimizations we can perform in the domain of SLSR. This file; // for now contains only an initial step. Specifically, we look for strength; // reduction candidates in the following forms:; //; // Form 1: B + i * S; // Form 2: (B + i) * S; // Form 3: &B[i * S]; //; // where S is an integer variable, and i is a constant integer. If we found two; // candidates S1 and S2 in the same form and S1 dominates S2, we may rewrite S2; // in a simpler way with respect to S1. For example,; //; // S1: X = B + i * S; // S2: Y = B + i' * S => X + (i' - i) * S; //; // S1: X = (B + i) * S; // S2: Y = (B + i') * S => X + (i' - i) * S; //; // S1: X = &B[i * S]; // S2: Y = &B[i' * S] => &X[(i' - i) * S]; //; // Note: (i' - i) * S is folded to the extent possible.; //; // This rewriting is in general a good idea. The code patterns we focus on; // usually come from loop unrolling, so (i' - i) * S is likely the same; // across iterations and can be reused. When that happens, the optimized form; // takes only one add starting from the second iteration.; //; // When such rewriting is possible, we call S1 a ""basis"" of S2. When S2 has; // multiple bases, we choose to rewrite S2 with respect to its ""immediate""; // basis, the basis that",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp:1066,variab,variable,1066,interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp,1,['variab'],['variable']
Modifiability,"//===- StripGCRelocates.cpp - Remove gc.relocates inserted by RewriteStatePoints===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a little utility pass that removes the gc.relocates inserted by; // RewriteStatepointsForGC. Note that the generated IR is incorrect,; // but this is useful as a single pass in itself, for analysis of IR, without; // the GC.relocates. The statepoint and gc.result intrinsics would still be; // present.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/StripGCRelocates.cpp:62,Rewrite,RewriteStatePoints,62,interpreter/llvm-project/llvm/lib/Transforms/Utils/StripGCRelocates.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/StripGCRelocates.cpp,2,['Rewrite'],"['RewriteStatePoints', 'RewriteStatepointsForGC']"
Modifiability,"//===- SymbolRewriter.cpp - Symbol Rewriter -------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // SymbolRewriter is a LLVM pass which can rewrite symbols transparently within; // existing code. It is implemented as a compiler pass and is configured via a; // YAML configuration file.; //; // The YAML configuration file format is as follows:; //; // RewriteMapFile := RewriteDescriptors; // RewriteDescriptors := RewriteDescriptor | RewriteDescriptors; // RewriteDescriptor := RewriteDescriptorType ':' '{' RewriteDescriptorFields '}'; // RewriteDescriptorFields := RewriteDescriptorField | RewriteDescriptorFields; // RewriteDescriptorField := FieldIdentifier ':' FieldValue ','; // RewriteDescriptorType := Identifier; // FieldIdentifier := Identifier; // FieldValue := Identifier; // Identifier := [0-9a-zA-Z]+; //; // Currently, the following descriptor types are supported:; //; // - function: (function rewriting); // + Source (original name of the function); // + Target (explicit transformation); // + Transform (pattern transformation); // + Naked (boolean, whether the function is undecorated); // - global variable: (external linkage global variable rewriting); // + Source (original name of externally visible variable); // + Target (explicit transformation); // + Transform (pattern transformation); // - global alias: (global alias rewriting); // + Source (original name of the aliased name); // + Target (explicit transformation); // + Transform (pattern transformation); //; // Note that source and exactly one of [Target, Transform] must be provided; //; // New rewrite descriptors can be created. Addding a new rewrite descriptor; // involves:; //; // a) extended the rewrite descriptor kind enumer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SymbolRewriter.cpp:35,Rewrite,Rewriter,35,interpreter/llvm-project/llvm/lib/Transforms/Utils/SymbolRewriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SymbolRewriter.cpp,4,"['Rewrite', 'config', 'rewrite']","['Rewriter', 'configuration', 'configured', 'rewrite']"
Modifiability,"//===- SymbolRewriter.h - Symbol Rewriting Pass -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides the prototypes and definitions related to the Symbol; // Rewriter pass.; //; // The Symbol Rewriter pass takes a set of rewrite descriptors which define; // transformations for symbol names. These can be either single name to name; // trnsformation or more broad regular expression based transformations.; //; // All the functions are re-written at the IR level. The Symbol Rewriter itself; // is exposed as a module level pass. All symbols at the module level are; // iterated. For any matching symbol, the requested transformation is applied,; // updating references to it as well (a la RAUW). The resulting binary will; // only contain the rewritten symbols.; //; // By performing this operation in the compiler, we are able to catch symbols; // that would otherwise not be possible to catch (e.g. inlined symbols).; //; // This makes it possible to cleanly transform symbols without resorting to; // overly-complex macro tricks and the pre-processor. An example of where this; // is useful is the sanitizers where we would like to intercept a well-defined; // set of functions across the module.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SymbolRewriter.h:459,Rewrite,Rewriter,459,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SymbolRewriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SymbolRewriter.h,4,"['Rewrite', 'rewrite']","['Rewriter', 'rewrite']"
Modifiability,"//===- TailRecursionElimination.cpp - Eliminate Tail Calls ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file transforms calls of the current function (self recursion) followed; // by a return instruction with a branch to the entry of the function, creating; // a loop. This pass also implements the following extensions to the basic; // algorithm:; //; // 1. Trivial instructions between the call and return do not prevent the; // transformation from taking place, though currently the analysis cannot; // support moving any really useful instructions (only dead ones).; // 2. This pass transforms functions that are prevented from being tail; // recursive by an associative and commutative expression to use an; // accumulator variable, thus compiling the typical naive factorial or; // 'fib' implementation into efficient code.; // 3. TRE is performed if the function returns void, if the return; // returns the result returned by the call, or if the function returns a; // run-time constant on all exits from the function. It is possible, though; // unlikely, that the return returns something else (like constant 0), and; // can still be TRE'd. It can be TRE'd if ALL OTHER return instructions in; // the function return the exact same value.; // 4. If it can prove that callees do not access their caller stack frame,; // they are marked as eligible for tail call elimination (by the code; // generator).; //; // There are several improvements that could be made:; //; // 1. If the function has any alloca instructions, these instructions will be; // moved out of the entry block of the function, causing them to be; // evaluated each time through the tail recursion. Safely keeping allocas; // in the entry bloc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp:1012,variab,variable,1012,interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp,1,['variab'],['variable']
Modifiability,"//===- TargetPassConfig.h - Code Generation pass options --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// Target-Independent Code Generator Pass Configuration Options pass.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h:430,Config,Configuration,430,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,1,['Config'],['Configuration']
Modifiability,"//===- ThreadSafetyTIL.h ----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a simple Typed Intermediate Language, or TIL, that is used; // by the thread safety analysis (See ThreadSafety.cpp). The TIL is intended; // to be largely independent of clang, in the hope that the analysis can be; // reused for other non-C++ languages. All dependencies on clang/llvm should; // go in ThreadSafetyUtil.h.; //; // Thread safety analysis works by comparing mutex expressions, e.g.; //; // class A { Mutex mu; int dat GUARDED_BY(this->mu); }; // class B { A a; }; //; // void foo(B* b) {; // (*b).a.mu.lock(); // locks (*b).a.mu; // b->a.dat = 0; // substitute &b->a for 'this';; // // requires lock on (&b->a)->mu; // (b->a.mu).unlock(); // unlocks (b->a.mu); // }; //; // As illustrated by the above example, clang Exprs are not well-suited to; // represent mutex expressions directly, since there is no easy way to compare; // Exprs for equivalence. The thread safety analysis thus lowers clang Exprs; // into a simple intermediate language (IL). The IL supports:; //; // (1) comparisons for semantic equality of expressions; // (2) SSA renaming of variables; // (3) wildcards and pattern matching over expressions; // (4) hash-based expression lookup; //; // The TIL is currently very experimental, is intended only for use within; // the thread safety analysis, and is subject to change without notice.; // After the API stabilizes and matures, it may be appropriate to make this; // more generally available to other analyses.; //; // UNDER CONSTRUCTION. USE AT YOUR OWN RISK.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:1467,variab,variables,1467,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,1,['variab'],['variables']
Modifiability,"//===- TokenRewriter.h - Token-based Rewriter -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the TokenRewriter class, which is used for code; // transformations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/TokenRewriter.h:37,Rewrite,Rewriter,37,interpreter/llvm-project/clang/include/clang/Rewrite/Core/TokenRewriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/TokenRewriter.h,1,['Rewrite'],['Rewriter']
Modifiability,"//===- Tooling.cpp - Running clang standalone tools -----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements functions to run clang tools standalone instead; // of running them as a plugin.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Tooling.cpp:477,plugin,plugin,477,interpreter/llvm-project/clang/lib/Tooling/Tooling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Tooling.cpp,1,['plugin'],['plugin']
Modifiability,"//===- Tooling.h - Framework for standalone Clang tools ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements functions to run clang tools standalone instead; // of running them as a plugin.; //; // A ClangTool is initialized with a CompilationDatabase and a set of files; // to run over. The tool will then run a user-specified FrontendAction over; // all TUs in which the given files are compiled.; //; // It is also possible to run a FrontendAction over a snippet of code by; // calling runToolOnCode, which is useful for unit testing.; //; // Applications that need more fine grained control over how to run; // multiple FrontendActions over code can use ToolInvocation.; //; // Example tools:; // - running clang -fsyntax-only over source code from an editor to get; // fast syntax checks; // - running match/replace tools over C++ code; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Tooling.h:477,plugin,plugin,477,interpreter/llvm-project/clang/include/clang/Tooling/Tooling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Tooling.h,1,['plugin'],['plugin']
Modifiability,"//===- VPlan.h - Represent A Vectorizer Plan --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file contains the declarations of the Vectorization Plan base classes:; /// 1. VPBasicBlock and VPRegionBlock that inherit from a common pure virtual; /// VPBlockBase, together implementing a Hierarchical CFG;; /// 2. Pure virtual VPRecipeBase serving as the base class for recipes contained; /// within VPBasicBlocks;; /// 3. Pure virtual VPSingleDefRecipe serving as a base class for recipes that; /// also inherit from VPValue.; /// 4. VPInstruction, a concrete Recipe and VPUser modeling a single planned; /// instruction;; /// 5. The VPlan class holding a candidate for vectorization;; /// 6. The VPlanPrinter class providing a way to print a plan in dot format;; /// These are documented in docs/VectorizationPlan.rst.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h:515,inherit,inherit,515,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,2,['inherit'],['inherit']
Modifiability,"//===- ValueMap.h - Safe map from Values to data ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ValueMap class. ValueMap maps Value* or any subclass; // to an arbitrary other type. It provides the DenseMap interface but updates; // itself to remain safe when keys are RAUWed or deleted. By default, when a; // key is RAUWed from V1 to V2, the old mapping V1->target is removed, and a new; // mapping V2->target is added. If V2 already existed, its old target is; // overwritten. When a key is deleted, its mapping is removed.; //; // You can override a ValueMap's Config parameter to control exactly what; // happens on RAUW and destruction and to get called back on each event. It's; // legal to call back into the ValueMap from a Config's callbacks. Config; // parameters should inherit from ValueMapConfig<KeyT> to get default; // implementations of all the methods ValueMap uses. See ValueMapConfig for; // documentation of the functions you can override.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueMap.h:873,Config,Config,873,interpreter/llvm-project/llvm/include/llvm/IR/ValueMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueMap.h,4,"['Config', 'inherit']","['Config', 'inherit']"
Modifiability,"//===- VarLenCodeEmitterGen.cpp - CEG for variable-length insts -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The CodeEmitterGen component for variable-length instructions.; //; // The basic CodeEmitterGen is almost exclusively designed for fixed-; // length instructions. A good analogy for its encoding scheme is how printf; // works: The (immutable) formatting string represent the fixed values in the; // encoded instruction. Placeholders (i.e. %something), on the other hand,; // represent encoding for instruction operands.; // ```; // printf(""1101 %src 1001 %dst"", <encoded value for operand `src`>,; // <encoded value for operand `dst`>);; // ```; // VarLenCodeEmitterGen in this file provides an alternative encoding scheme; // that works more like a C++ stream operator:; // ```; // OS << 0b1101;; // if (Cond); // OS << OperandEncoding0;; // OS << 0b1001 << OperandEncoding1;; // ```; // You are free to concatenate arbitrary types (and sizes) of encoding; // fragments on any bit position, bringing more flexibilities on defining; // encoding for variable-length instructions.; //; // In a more specific way, instruction encoding is represented by a DAG type; // `Inst` field. Here is an example:; // ```; // dag Inst = (descend 0b1101, (operand ""$src"", 4), 0b1001,; // (operand ""$dst"", 4));; // ```; // It represents the following instruction encoding:; // ```; // MSB LSB; // 1101<encoding for operand src>1001<encoding for operand dst>; // ```; // For more details about DAG operators in the above snippet, please; // refer to \file include/llvm/Target/Target.td.; //; // VarLenCodeEmitter will convert the above DAG into the same helper function; // generated by CodeEmitter, `MCCodeEmitter::getBinaryCodeForInst",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/VarLenCodeEmitterGen.cpp:42,variab,variable-length,42,interpreter/llvm-project/llvm/utils/TableGen/VarLenCodeEmitterGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/VarLenCodeEmitterGen.cpp,2,['variab'],['variable-length']
Modifiability,"//===- VarLenCodeEmitterGen.h - CEG for variable-length insts ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declare the CodeEmitterGen component for variable-length; // instructions. See the .cpp file for more details.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/VarLenCodeEmitterGen.h:40,variab,variable-length,40,interpreter/llvm-project/llvm/utils/TableGen/VarLenCodeEmitterGen.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/VarLenCodeEmitterGen.h,2,['variab'],['variable-length']
Modifiability,"//===- VarLocBasedImpl.cpp - Tracking Debug Value MIs with VarLoc class----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file VarLocBasedImpl.cpp; ///; /// LiveDebugValues is an optimistic ""available expressions"" dataflow; /// algorithm. The set of expressions is the set of machine locations; /// (registers, spill slots, constants, and target indices) that a variable; /// fragment might be located, qualified by a DIExpression and indirect-ness; /// flag, while each variable is identified by a DebugVariable object. The; /// availability of an expression begins when a DBG_VALUE instruction specifies; /// the location of a DebugVariable, and continues until that location is; /// clobbered or re-specified by a different DBG_VALUE for the same; /// DebugVariable.; ///; /// The output of LiveDebugValues is additional DBG_VALUE instructions,; /// placed to extend variable locations as far they're available. This file; /// and the VarLocBasedLDV class is an implementation that explicitly tracks; /// locations, using the VarLoc class.; ///; /// The canonical ""available expressions"" problem doesn't have expression; /// clobbering, instead when a variable is re-assigned, any expressions using; /// that variable get invalidated. LiveDebugValues can map onto ""available; /// expressions"" by having every register represented by a variable, which is; /// used in an expression that becomes available at a DBG_VALUE instruction.; /// When the register is clobbered, its variable is effectively reassigned, and; /// expressions computed from it become unavailable. A similar construct is; /// needed when a DebugVariable has its location re-specified, to invalidate; /// all other locations for that DebugVariable.; ///; /// Using t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:626,variab,variable,626,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,2,['variab'],['variable']
Modifiability,"//===- VforkChecker.cpp -------- Vfork usage checks --------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines vfork checker which checks for dangerous uses of vfork.; // Vforked process shares memory (including stack) with parent so it's; // range of actions is significantly limited: can't write variables,; // can't call functions not in the allowed list, etc. For more details, see; // http://man7.org/linux/man-pages/man2/vfork.2.html; //; // This checker checks for prohibited constructs in vforked process.; // The state transition diagram:; // PARENT ---(vfork() == 0)--> CHILD; // |; // --(*p = ...)--> bug; // |; // --foo()--> bug; // |; // --return--> bug; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/VforkChecker.cpp:588,variab,variables,588,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/VforkChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/VforkChecker.cpp,1,['variab'],['variables']
Modifiability,"//===- WholeProgramDevirt.cpp - Whole program virtual call optimization ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass implements whole program optimization of virtual calls in cases; // where we know (via !type metadata) that the list of callees is fixed. This; // includes the following:; // - Single implementation devirtualization: if a virtual call has a single; // possible callee, replace all calls with a direct call to that callee.; // - Virtual constant propagation: if the virtual function's return type is an; // integer <=64 bits and all possible callees are readnone, for each class and; // each list of constant arguments: evaluate the function, store the return; // value alongside the virtual table, and rewrite each virtual call as a load; // from the virtual table.; // - Uniform return value optimization: if the conditions for virtual constant; // propagation hold and each function returns the same constant value, replace; // each virtual call with that constant.; // - Unique return value optimization for i1 return values: if the conditions; // for virtual constant propagation hold and a single vtable's function; // returns 0, or a single vtable's function returns 1, replace each virtual; // call with a comparison of the vptr against that vtable's address.; //; // This pass is intended to be used during the regular and thin LTO pipelines:; //; // During regular LTO, the pass determines the best optimization for each; // virtual call and applies the resolutions directly to virtual calls that are; // eligible for virtual call optimization (i.e. calls that use either of the; // llvm.assume(llvm.type.test) or llvm.type.checked.load intrinsics).; //; // During hybrid Regular/ThinLTO, the pass o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp:995,rewrite,rewrite,995,interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,1,['rewrite'],['rewrite']
Modifiability,"//===- WindowsSupport.h - Common Windows Include File -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines things specific to Windows implementations. In addition to; // providing some helpers for working with win32 APIs, this header wraps; // <windows.h> with some portability macros. Always include WindowsSupport.h; // instead of including <windows.h> directly.; //; //===----------------------------------------------------------------------===//; //===----------------------------------------------------------------------===//; //=== WARNING: Implementation here must contain only generic Win32 code that; //=== is guaranteed to work on *all* Win32 variants.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Windows/WindowsSupport.h:560,portab,portability,560,interpreter/llvm-project/llvm/include/llvm/Support/Windows/WindowsSupport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Windows/WindowsSupport.h,1,['portab'],['portability']
Modifiability,"//===- iterator_range.h - A range adaptor for iterators ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This provides a very simple, boring adaptor for a begin and end iterator; /// into a range type. This should be used to build range views that work well; /// with range based for loops and range based constructors.; ///; /// Note that code here follows more standards-based coding conventions as it; /// is mirroring proposed interfaces for standardization.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/iterator_range.h:34,adapt,adaptor,34,interpreter/llvm-project/llvm/include/llvm/ADT/iterator_range.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/iterator_range.h,2,['adapt'],['adaptor']
Modifiability,"//===- lib/Passes/PassPluginLoader.cpp - Load Plugins for New PM Passes ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassPlugin.cpp:46,Plugin,Plugins,46,interpreter/llvm-project/llvm/lib/Passes/PassPlugin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassPlugin.cpp,1,['Plugin'],['Plugins']
Modifiability,"//===- llvm/Analysis/IVDescriptors.cpp - IndVar Descriptors -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file ""describes"" induction and recurrence variables.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp:430,variab,variables,430,interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp,1,['variab'],['variables']
Modifiability,"//===- llvm/Analysis/IVDescriptors.h - IndVar Descriptors -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file ""describes"" induction and recurrence variables.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IVDescriptors.h:430,variab,variables,430,interpreter/llvm-project/llvm/include/llvm/Analysis/IVDescriptors.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IVDescriptors.h,1,['variab'],['variables']
Modifiability,"//===- llvm/Analysis/IVUsers.h - Induction Variable Users -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements bookkeeping for ""interesting"" users of expressions; // computed from induction variables.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IVUsers.h:43,Variab,Variable,43,interpreter/llvm-project/llvm/include/llvm/Analysis/IVUsers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IVUsers.h,2,"['Variab', 'variab']","['Variable', 'variables']"
Modifiability,"//===- llvm/Analysis/ScalarEvolution.h - Scalar Evolution -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The ScalarEvolution class is an LLVM pass which can be used to analyze and; // categorize scalar expressions in loops. It specializes in recognizing; // general induction variables, representing them with the abstract and opaque; // SCEV class. Given this analysis, trip counts of loops and other important; // properties can be obtained.; //; // This analysis is primarily useful for induction variable substitution and; // strength reduction.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolution.h:554,variab,variables,554,interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolution.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolution.h,2,['variab'],"['variable', 'variables']"
Modifiability,"//===- llvm/Analysis/ScalarEvolutionNormalization.h - See below -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines utilities for working with ""normalized"" ScalarEvolution; // expressions.; //; // The following example illustrates post-increment uses and how normalized; // expressions help.; //; // for (i=0; i!=n; ++i) {; // ...; // }; // use(i);; //; // While the expression for most uses of i inside the loop is {0,+,1}<%L>, the; // expression for the use of i outside the loop is {1,+,1}<%L>, since i is; // incremented at the end of the loop body. This is inconveient, since it; // suggests that we need two different induction variables, one that starts; // at 0 and one that starts at 1. We'd prefer to be able to think of these as; // the same induction variable, with uses inside the loop using the; // ""pre-incremented"" value, and uses after the loop using the; // ""post-incremented"" value.; //; // Expressions for post-incremented uses are represented as an expression; // paired with a set of loops for which the expression is in ""post-increment""; // mode (there may be multiple loops).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionNormalization.h:919,variab,variables,919,interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionNormalization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionNormalization.h,2,['variab'],"['variable', 'variables']"
Modifiability,"//===- llvm/CodeGen/GCMetadataPrinter.h - Prints asm GC tables --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The abstract base class GCMetadataPrinter supports writing GC metadata tables; // as assembly code. This is a separate class from GCStrategy in order to allow; // users of the LLVM JIT to avoid linking with the AsmWriter.; //; // Subclasses of GCMetadataPrinter must be registered using the; // GCMetadataPrinterRegistry. This is separate from the GCStrategy itself; // because these subclasses are logically plugins for the AsmWriter.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GCMetadataPrinter.h:792,plugin,plugins,792,interpreter/llvm-project/llvm/include/llvm/CodeGen/GCMetadataPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GCMetadataPrinter.h,1,['plugin'],['plugins']
Modifiability,"//===- llvm/CodeGen/TileShapeInfo.h - ---------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Shape utility for AMX.; /// AMX hardware requires to config the shape of tile data register before use.; /// The 2D shape includes row and column. In AMX intrinsics interface the shape; /// is passed as 1st and 2nd parameter and they are lowered as the 1st and 2nd; /// machine operand of AMX pseudo instructions. ShapeT class is to facilitate; /// tile config and register allocator. The row and column are machine operand; /// of AMX pseudo instructions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TileShapeInfo.h:443,config,config,443,interpreter/llvm-project/llvm/include/llvm/CodeGen/TileShapeInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TileShapeInfo.h,2,['config'],['config']
Modifiability,"//===- llvm/CodeGen/VirtRegMap.h - Virtual Register Map ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a virtual register map. This maps virtual registers to; // physical registers and virtual registers to stack slots. It is created and; // updated by a register allocator and then used by a machine code rewriter that; // adds spill code and rewrites virtual into physical register references.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/VirtRegMap.h:606,rewrite,rewriter,606,interpreter/llvm-project/llvm/include/llvm/CodeGen/VirtRegMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/VirtRegMap.h,2,['rewrite'],"['rewriter', 'rewrites']"
Modifiability,"//===- llvm/Pass.h - Base class for Passes ----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a base class that indicates that a specified class is a; // transformation pass implementation.; //; // Passes are designed this way so that it is possible to run passes in a cache; // and organizationally optimal order without having to specify it at the front; // end. This allows arbitrary passes to be strung together and have them; // executed as efficiently as possible.; //; // Passes should extend one of the classes below, depending on the guarantees; // that it can make about what will be modified as it is run. For example, most; // global optimizations should derive from FunctionPass, because they do not add; // or delete functions, they operate on the internals of the function.; //; // Note that this file #includes PassSupport.h and PassAnalysisSupport.h (at the; // bottom), so the APIs exposed by these files are also automatically available; // to all users of this file.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Pass.h:800,extend,extend,800,interpreter/llvm-project/llvm/include/llvm/Pass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Pass.h,1,['extend'],['extend']
Modifiability,"//===- llvm/Passes/PassPlugin.h - Public Plugin API -----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This defines the public entry point for new-PM pass plugins.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassPlugin.h:41,Plugin,Plugin,41,interpreter/llvm-project/llvm/include/llvm/Passes/PassPlugin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassPlugin.h,2,"['Plugin', 'plugin']","['Plugin', 'plugins']"
Modifiability,"//===- llvm/Support/Casting.h - Allow flexible, checked, casts --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the isa<X>(), cast<X>(), dyn_cast<X>(),; // cast_if_present<X>(), and dyn_cast_if_present<X>() templates.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h:38,flexible,flexible,38,interpreter/llvm-project/llvm/include/llvm/Support/Casting.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h,1,['flexible'],['flexible']
Modifiability,"//===- llvm/Support/Errno.h - Portable+convenient errno handling -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares some portable and convenient functions to deal with errno.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Errno.h:30,Portab,Portable,30,interpreter/llvm-project/llvm/include/llvm/Support/Errno.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Errno.h,2,"['Portab', 'portab']","['Portable', 'portable']"
Modifiability,"//===- llvm/Support/Valgrind.h - Communication with Valgrind ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Methods for communicating with a valgrind instance this program is running; // under. These are all no-ops unless LLVM was configured on a system with the; // valgrind headers installed and valgrind is controlling this process.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Valgrind.h:506,config,configured,506,interpreter/llvm-project/llvm/include/llvm/Support/Valgrind.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Valgrind.h,1,['config'],['configured']
Modifiability,"//===- llvm/SymbolTableListTraits.h - Traits for iplist ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a generic class that is used to implement the automatic; // symbol table manipulation that occurs when you put (for example) a named; // instruction into a basic block.; //; // The way that this is implemented is by using a special traits class with the; // intrusive list that makes up the list of instructions in a basic block. When; // a new element is added to the list of instructions, the traits class is; // notified, allowing the symbol table to be updated.; //; // This generic class implements the traits class. It must be generic so that; // it can work for all uses it, which include lists of instructions, basic; // blocks, arguments, functions, global variables, etc...; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/SymbolTableListTraits.h:1067,variab,variables,1067,interpreter/llvm-project/llvm/include/llvm/IR/SymbolTableListTraits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/SymbolTableListTraits.h,1,['variab'],['variables']
Modifiability,"//===- llvm/Target/CodeGenCWrappers.h - CodeGen C Wrappers ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines C bindings wrappers for enums in llvm/Support/CodeGen.h; // that need them. The wrappers are separated to avoid adding an indirect; // dependency on llvm/Config/Targets.def to CodeGen.h.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/CodeGenCWrappers.h:555,Config,Config,555,interpreter/llvm-project/llvm/include/llvm/Target/CodeGenCWrappers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/CodeGenCWrappers.h,1,['Config'],['Config']
Modifiability,"//===- llvm/Transforms/Vectorize/LoopVectorizationLegality.h ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file defines the LoopVectorizationLegality class. Original code; /// in Loop Vectorizer has been moved out to its own file for modularity; /// and reusability.; ///; /// Currently, it works for innermost loop vectorization. Extending this to; /// outer loop vectorization is a TODO item.; ///; /// Also provides:; /// 1) LoopVectorizeHints class which keeps a number of loop annotations; /// locally for easy look up. It has the ability to write them back as; /// loop metadata, upon request.; /// 2) LoopVectorizationRequirements class for lazy bail out for the purpose; /// of reporting useful failure to vectorize message.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h:624,Extend,Extending,624,interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,1,['Extend'],['Extending']
Modifiability,"//===- raw_os_ostream.h - std::ostream adaptor for raw_ostream --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the raw_os_ostream class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_os_ostream.h:39,adapt,adaptor,39,interpreter/llvm-project/llvm/include/llvm/Support/raw_os_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_os_ostream.h,1,['adapt'],['adaptor']
Modifiability,"//===-- AArch64CleanupLocalDynamicTLSPass.cpp ---------------------*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Local-dynamic access to thread-local variables proceeds in three stages.; //; // 1. The offset of this Module's thread-local area from TPIDR_EL0 is calculated; // in much the same way as a general-dynamic TLS-descriptor access against; // the special symbol _TLS_MODULE_BASE.; // 2. The variable's offset from _TLS_MODULE_BASE_ is calculated using; // instructions with ""dtprel"" modifiers.; // 3. These two are added, together with TPIDR_EL0, to obtain the variable's; // true address.; //; // This is only better than general-dynamic access to the variable if two or; // more of the first stage TLS-descriptor calculations can be combined. This; // pass looks through a function and performs such combinations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CleanupLocalDynamicTLSPass.cpp:420,variab,variables,420,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CleanupLocalDynamicTLSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CleanupLocalDynamicTLSPass.cpp,4,['variab'],"['variable', 'variables']"
Modifiability,"//===-- AArch64CondBrTuning.cpp --- Conditional branch tuning for AArch64 -===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file contains a pass that transforms CBZ/CBNZ/TBZ/TBNZ instructions; /// into a conditional branch (B.cond), when the NZCV flags can be set for; /// ""free"". This is preferred on targets that have more flexibility when; /// scheduling B.cond instructions as compared to CBZ/CBNZ/TBZ/TBNZ (assuming; /// all other variables are equal). This can also reduce register pressure.; ///; /// A few examples:; ///; /// 1) add w8, w0, w1 -> cmn w0, w1 ; CMN is an alias of ADDS.; /// cbz w8, .LBB_2 -> b.eq .LBB0_2; ///; /// 2) add w8, w0, w1 -> adds w8, w0, w1 ; w8 has multiple uses.; /// cbz w8, .LBB1_2 -> b.eq .LBB1_2; ///; /// 3) sub w8, w0, w1 -> subs w8, w0, w1 ; w8 has multiple uses.; /// tbz w8, #31, .LBB6_2 -> b.pl .LBB6_2; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CondBrTuning.cpp:708,variab,variables,708,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CondBrTuning.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CondBrTuning.cpp,1,['variab'],['variables']
Modifiability,"//===-- AMDGPULowerModuleLDSPass.cpp ------------------------------*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass eliminates local data store, LDS, uses from non-kernel functions.; // LDS is contiguous memory allocated per kernel execution.; //; // Background.; //; // The programming model is global variables, or equivalently function local; // static variables, accessible from kernels or other functions. For uses from; // kernels this is straightforward - assign an integer to the kernel for the; // memory required by all the variables combined, allocate them within that.; // For uses from functions there are performance tradeoffs to choose between.; //; // This model means the GPU runtime can specify the amount of memory allocated.; // If this is more than the kernel assumed, the excess can be made available; // using a language specific feature, which IR represents as a variable with; // no initializer. This feature is referred to here as ""Dynamic LDS"" and is; // lowered slightly differently to the normal case.; //; // Consequences of this GPU feature:; // - memory is limited and exceeding it halts compilation; // - a global accessed by one kernel exists independent of other kernels; // - a global exists independent of simultaneous execution of the same kernel; // - the address of the global may be different from different kernels as they; // do not alias, which permits only allocating variables they use; // - if the address is allowed to differ, functions need help to find it; //; // Uses from kernels are implemented here by grouping them in a per-kernel; // struct instance. This duplicates the variables, accurately modelling their; // aliasing properties relative to a single global represe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:580,variab,variables,580,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,3,['variab'],['variables']
Modifiability,"//===-- ARCMT.h - ARC Migration Rewriter ------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ARCMigrate/ARCMT.h:32,Rewrite,Rewriter,32,interpreter/llvm-project/clang/include/clang/ARCMigrate/ARCMT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ARCMigrate/ARCMT.h,1,['Rewrite'],['Rewriter']
Modifiability,"//===-- EmbedBitcodePass.h - Embeds bitcode into global ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file provides a pass which clones the current module and runs the; /// provided pass pipeline on the clone. The optimized module is stored into a; /// global variable in the `.llvm.lto` section. Primarily, this pass is used; /// to support the FatLTO pipeline, but could be used to generate a bitcode; /// section for any arbitrary pass pipeline without changing the current module.; ///; //===----------------------------------------------------------------------===//; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/EmbedBitcodePass.h:559,variab,variable,559,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/EmbedBitcodePass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/EmbedBitcodePass.h,1,['variab'],['variable']
Modifiability,"//===-- FrontendAction.h - Generic Frontend Action Interface ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the clang::FrontendAction interface and various convenience; /// abstract classes (clang::ASTFrontendAction, clang::PluginASTAction,; /// clang::PreprocessorFrontendAction, and clang::WrapperFrontendAction); /// derived from it.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/FrontendAction.h:520,Plugin,PluginASTAction,520,interpreter/llvm-project/clang/include/clang/Frontend/FrontendAction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/FrontendAction.h,1,['Plugin'],['PluginASTAction']
Modifiability,"//===-- GenericToNVVM.cpp - Convert generic module to NVVM module - C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Convert generic global variables into either .global or .const access based; // on the variable's ""constant"" qualifier.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXGenericToNVVM.cpp:406,variab,variables,406,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXGenericToNVVM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXGenericToNVVM.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"//===-- HexagonPeephole.cpp - Hexagon Peephole Optimiztions ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; // This peephole pass optimizes in the following cases.; // 1. Optimizes redundant sign extends for the following case; // Transform the following pattern; // %170 = SXTW %166; // ...; // %176 = COPY %170:isub_lo; //; // Into; // %176 = COPY %166; //; // 2. Optimizes redundant negation of predicates.; // %15 = CMPGTrr %6, %2; // ...; // %16 = NOT_p killed %15; // ...; // JMP_c killed %16, <%bb.1>, implicit dead %pc; //; // Into; // %15 = CMPGTrr %6, %2;; // ...; // JMP_cNot killed %15, <%bb.1>, implicit dead %pc;; //; // Note: The peephole pass makes the instrucstions like; // %170 = SXTW %166 or %16 = NOT_p killed %15; // redundant and relies on some form of dead removal instructions, like; // DCE or DIE to actually eliminate them.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonPeephole.cpp:382,extend,extends,382,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonPeephole.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonPeephole.cpp,1,['extend'],['extends']
Modifiability,"//===-- IRMutator.h - Mutation engine for fuzzing IR ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Provides the IRMutator class, which drives mutations on IR based on a; // configurable set of strategies. Some common strategies are also included; // here.; //; // Fuzzer-friendly (de)serialization functions are also provided, as these; // are usually needed when mutating IR.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/FuzzMutate/IRMutator.h:457,config,configurable,457,interpreter/llvm-project/llvm/include/llvm/FuzzMutate/IRMutator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/FuzzMutate/IRMutator.h,1,['config'],['configurable']
Modifiability,"//===-- Internalize.cpp - Mark functions internal -------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass loops over all of the functions and variables in the input module.; // If the function or variable does not need to be preserved according to the; // client supplied callback, it is marked as internal.; //; // This transformation would not be legal in a regular compilation, but it gets; // extra information from the linker about what is safe.; //; // For example: Internalizing a function with external linkage. Only if we are; // told it is only used from within this module, it is safe to do it.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Internalize.cpp:429,variab,variables,429,interpreter/llvm-project/llvm/lib/Transforms/IPO/Internalize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Internalize.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"//===-- LVLocation.h --------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the LVOperation and LVLocation classes, which are used; // to describe variable locations.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVLocation.h:472,variab,variable,472,interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVLocation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVLocation.h,1,['variab'],['variable']
Modifiability,"//===-- LiveVariables.cpp - Live Variable Analysis for Machine Code -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the LiveVariable analysis pass. For each machine; // instruction in the function, this pass calculates the set of registers that; // are immediately dead after the instruction (i.e., the instruction calculates; // the value, but it is never used) and the set of registers that are used by; // the instruction, but are never used after the instruction (i.e., they are; // killed).; //; // This class computes live variables using a sparse implementation based on; // the machine code SSA form. This class computes live variable information for; // each virtual and _register allocatable_ physical register in a function. It; // uses the dominance properties of SSA form to efficiently compute live; // variables for virtual registers, and assumes that physical registers are only; // live within a single basic block (allowing it to do a single local analysis; // to resolve physical register lifetimes in each basic block). If a physical; // register is not register allocatable, it is not tracked. This is useful for; // things like the stack pointer and condition codes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp:33,Variab,Variable,33,interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,4,"['Variab', 'variab']","['Variable', 'variable', 'variables']"
Modifiability,"//===-- MCInstrDescView.h ---------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Provide views around LLVM structures to represents an instruction instance,; /// as well as its implicit and explicit arguments in a uniform way.; /// Arguments that are explicit and independant (non tied) also have a Variable; /// associated to them so the instruction can be fully defined by reading its; /// Variables.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MCInstrDescView.h:614,Variab,Variable,614,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MCInstrDescView.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MCInstrDescView.h,2,['Variab'],"['Variable', 'Variables']"
Modifiability,"//===-- MipsNaClELFStreamer.cpp - ELF Object Output for Mips NaCl ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements MCELFStreamer for Mips NaCl. It emits .o object files; // as required by NaCl's SFI sandbox. It inserts address-masking instructions; // before dangerous control-flow and memory access instructions. It inserts; // address-masking instructions after instructions that change the stack; // pointer. It ensures that the mask and the dangerous instruction are always; // emitted in the same bundle. It aligns call + branch delay to the bundle end,; // so that return address is always aligned to the start of next bundle.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsNaClELFStreamer.cpp:488,sandbox,sandbox,488,interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsNaClELFStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MCTargetDesc/MipsNaClELFStreamer.cpp,1,['sandbox'],['sandbox']
Modifiability,"//===-- NVPTXAssignValidGlobalNames.cpp - Assign valid names to globals ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Clean up the names of global variables in the module to not contain symbols; // that are invalid in PTX.; //; // Currently NVPTX, like other backends, relies on generic symbol name; // sanitizing done by MC. However, the ptxas assembler is more stringent and; // disallows some additional characters in symbol names. This pass makes sure; // such names do not reach MC at all.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAssignValidGlobalNames.cpp:412,variab,variables,412,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAssignValidGlobalNames.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAssignValidGlobalNames.cpp,1,['variab'],['variables']
Modifiability,"//===-- PerfectShuffle.cpp - Perfect Shuffle Generator --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file computes an optimal sequence of instructions for doing all shuffles; // of two 4-element vectors. With a release build and when configured to emit; // an altivec instruction table, this takes about 30s to run on a 2.7Ghz; // PowerPC G5.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/PerfectShuffle/PerfectShuffle.cpp:521,config,configured,521,interpreter/llvm-project/llvm/utils/PerfectShuffle/PerfectShuffle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/PerfectShuffle/PerfectShuffle.cpp,1,['config'],['configured']
Modifiability,"//===-- PluginLoader.cpp - Implement -load command line option ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the -load <plugin> command line option handler.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/PluginLoader.cpp:8,Plugin,PluginLoader,8,interpreter/llvm-project/llvm/lib/Support/PluginLoader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/PluginLoader.cpp,2,"['Plugin', 'plugin']","['PluginLoader', 'plugin']"
Modifiability,"//===-- Regex.h - Regular Expression matcher implementation -*- C++ -*-----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a POSIX regular expression matcher. Both Basic and; // Extended POSIX regular expressions (ERE) are supported. EREs were extended; // to support backreferences in matches.; // This implementation also supports matching strings with embedded NUL chars.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Regex.h:459,Extend,Extended,459,interpreter/llvm-project/llvm/include/llvm/Support/Regex.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Regex.h,2,"['Extend', 'extend']","['Extended', 'extended']"
Modifiability,"//===-- RewriteModernObjC.cpp - Playground for the code rewriter ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Hacks and fun related to the code rewriter.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:8,Rewrite,RewriteModernObjC,8,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,3,"['Rewrite', 'rewrite']","['RewriteModernObjC', 'rewriter']"
Modifiability,"//===-- SIFormMemoryClauses.cpp -------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This pass extends the live ranges of registers used as pointers in; /// sequences of adjacent SMEM and VMEM instructions if XNACK is enabled. A; /// load that would overwrite a pointer would require breaking the soft clause.; /// Artificially extend the live ranges of the pointer operands by adding; /// implicit-def early-clobber operands throughout the soft clause.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFormMemoryClauses.cpp:400,extend,extends,400,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFormMemoryClauses.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFormMemoryClauses.cpp,2,['extend'],"['extend', 'extends']"
Modifiability,"//===-- SPIRVGlobalRegistry.cpp - SPIR-V Global Registry --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the implementation of the SPIRVGlobalRegistry class,; // which is used to maintain rich type information required for SPIR-V even; // after lowering from LLVM IR to GMIR. It can convert an llvm::Type into; // an OpTypeXXX instruction, and map it to a virtual register. Also it builds; // and supports consistency of constants and global variables.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVGlobalRegistry.cpp:739,variab,variables,739,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVGlobalRegistry.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVGlobalRegistry.cpp,1,['variab'],['variables']
Modifiability,"//===-- SPIRVGlobalRegistry.h - SPIR-V Global Registry ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // SPIRVGlobalRegistry is used to maintain rich type information required for; // SPIR-V even after lowering from LLVM IR to GMIR. It can convert an llvm::Type; // into an OpTypeXXX instruction, and map it to a virtual register. Also it; // builds and supports consistency of constants and global variables.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVGlobalRegistry.h:677,variab,variables,677,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVGlobalRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVGlobalRegistry.h,1,['variab'],['variables']
Modifiability,"//===-- SimplifyIndVar.cpp - Induction variable simplification ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements induction variable simplification. It does; // not define any actual pass or policy, but provides a single function to; // simplify a loop's induction variables based on ScalarEvolution.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp:39,variab,variable,39,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,3,['variab'],"['variable', 'variables']"
Modifiability,"//===-- SourcePrinter.cpp - source interleaving utilities ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the LiveVariablePrinter and SourcePrinter classes to; // keep track of DWARF info as the current address is updated, and print out the; // source file line and variable liveness as needed.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/SourcePrinter.cpp:563,variab,variable,563,interpreter/llvm-project/llvm/tools/llvm-objdump/SourcePrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/SourcePrinter.cpp,1,['variab'],['variable']
Modifiability,"//===-- SpecialCaseList.cpp - special case list for sanitizers ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a utility class for instrumentation passes (like AddressSanitizer; // or ThreadSanitizer) to avoid instrumenting some functions or global; // variables, or to instrument some functions or global variables in a specific; // way, based on a user-supplied list.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/SpecialCaseList.cpp:533,variab,variables,533,interpreter/llvm-project/llvm/lib/Support/SpecialCaseList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/SpecialCaseList.cpp,2,['variab'],['variables']
Modifiability,"//===-- StorageLocation.h ---------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines classes that represent elements of the local variable store; // and of the heap during dataflow analysis.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/StorageLocation.h:446,variab,variable,446,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/StorageLocation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/StorageLocation.h,1,['variab'],['variable']
Modifiability,"//===-- SystemZLDCleanup.cpp - Clean up local-dynamic TLS accesses --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass combines multiple accesses to local-dynamic TLS variables so that; // the TLS base address for the module is only fetched once per execution path; // through the function.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZLDCleanup.cpp:441,variab,variables,441,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZLDCleanup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZLDCleanup.cpp,1,['variab'],['variables']
Modifiability,"//===-- WebAssemblyFixFunctionBitcasts.cpp - Fix function bitcasts --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Fix bitcasted functions.; ///; /// WebAssembly requires caller and callee signatures to match, however in LLVM,; /// some amount of slop is vaguely permitted. Detect mismatch by looking for; /// bitcasts of functions and rewrite them to use wrapper functions instead.; ///; /// This doesn't catch all cases, such as when a function's address is taken in; /// one place and casted in another, but it works for many common cases.; ///; /// Note that LLVM already optimizes away function bitcasts in common cases by; /// dropping arguments as needed, so this pass only ends up getting used in less; /// common cases.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp:617,rewrite,rewrite,617,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixFunctionBitcasts.cpp,1,['rewrite'],['rewrite']
Modifiability,"//===-- X86FastPreTileConfig.cpp - Fast Tile Register Configure------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Pass to preconfig the shape of physical tile registers; /// It inserts ldtilecfg ahead of each group of tile registers. The algorithm; /// walk each instruction of basic block in reverse order. All the tile; /// registers that live out the basic block would be spilled and reloaded; /// before its user. It also check the depenedency of the shape to ensure; /// the shape is defined before ldtilecfg.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp:54,Config,Configure,54,interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp,1,['Config'],['Configure']
Modifiability,"//===-- X86FastTileConfig.cpp - Fast Tile Register Configure---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Pass to config the shape of AMX physical registers; /// AMX register need to be configured before use. Before FastRegAllocation pass; /// the ldtilecfg instruction is inserted, however at that time we don't; /// know the shape of each physical tile registers, because the register; /// allocation is not done yet. This pass runs after register allocation; /// pass. It collects the shape information of each physical tile register; /// and store the shape in the stack slot that is allocated for load config; /// to tile config register.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastTileConfig.cpp:51,Config,Configure,51,interpreter/llvm-project/llvm/lib/Target/X86/X86FastTileConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastTileConfig.cpp,5,"['Config', 'config']","['Configure', 'config', 'configured']"
Modifiability,"//===-- X86FloatingPoint.cpp - Floating point Reg -> Stack converter ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the pass which converts floating point instructions from; // pseudo registers into register stack instructions. This pass uses live; // variable information to indicate where the FPn registers are used and their; // lifetimes.; //; // The x87 hardware tracks liveness of the stack registers, so it is necessary; // to implement exact liveness tracking between basic blocks. The CFG edges are; // partitioned into bundles where the same FP registers must be live in; // identical stack positions. Instructions are inserted at the end of each basic; // block to rearrange the live registers to match the outgoing bundle.; //; // This approach avoids splitting critical edges at the potential cost of more; // live register shuffling instructions when critical edges are present.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FloatingPoint.cpp:537,variab,variable,537,interpreter/llvm-project/llvm/lib/Target/X86/X86FloatingPoint.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FloatingPoint.cpp,1,['variab'],['variable']
Modifiability,"//===-- X86PreTileConfig.cpp - Tile Register Pre-configure-----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Pass to pre-config the shapes of AMX registers; /// AMX register needs to be configured before use. The shapes of AMX register; /// are encoded in the 1st and 2nd machine operand of AMX pseudo instructions.; ///; /// The instruction ldtilecfg is used to config the shapes. It must be reachable; /// for all variable shapes. ldtilecfg will be inserted more than once if we; /// cannot find a dominating point for all AMX instructions.; ///; /// The configure register is caller saved according to ABI. We need to insert; /// ldtilecfg again after the call instruction if callee clobbers any AMX; /// registers.; ///; /// This pass calculates all points that ldtilecfg need to be inserted to and; /// insert them. It reports error if the reachability conditions aren't met.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86PreTileConfig.cpp:49,config,configure,49,interpreter/llvm-project/llvm/lib/Target/X86/X86PreTileConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86PreTileConfig.cpp,6,"['config', 'variab']","['config', 'configure', 'configured', 'variable']"
Modifiability,"//===-- X86TileConfig.cpp - Tile Register Configure----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Pass to config the shape of AMX physical registers; /// AMX register need to be configured before use. In X86PreTileConfig pass; /// the pldtilecfg instruction is inserted, however at that time we don't; /// know the shape of each physical tile registers, because the register; /// allocation is not done yet. This pass runs after egister allocation; /// pass. It collects the shape information of each physical tile register; /// and store the shape in the stack slot that is allocated for load config; /// to tile config register.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TileConfig.cpp:42,Config,Configure,42,interpreter/llvm-project/llvm/lib/Target/X86/X86TileConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TileConfig.cpp,5,"['Config', 'config']","['Configure', 'config', 'configured']"
Modifiability,"//===-- XCoreLowerThreadLocal - Lower thread local variables --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains a pass that lowers thread local variables on the; /// XCore.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/XCore/XCoreLowerThreadLocal.cpp:51,variab,variables,51,interpreter/llvm-project/llvm/lib/Target/XCore/XCoreLowerThreadLocal.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/XCore/XCoreLowerThreadLocal.cpp,2,['variab'],['variables']
Modifiability,"//===-- examples/ParallelJIT/ParallelJIT.cpp - Exercise threaded-safe JIT -===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Parallel JIT; //; // This test program creates two LLVM functions then calls them from three; // separate threads. It requires the pthreads library.; // The three threads are created and then block waiting on a condition variable.; // Once all threads are blocked on the conditional variable, the main thread; // wakes them up. This complicated work is performed so that all three threads; // call into the JIT at the same time (or the best possible approximation of the; // same time). This test had assertion errors until I got the locking right.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ParallelJIT/ParallelJIT.cpp:604,variab,variable,604,interpreter/llvm-project/llvm/examples/ParallelJIT/ParallelJIT.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/ParallelJIT/ParallelJIT.cpp,2,['variab'],['variable']
Modifiability,"//===-- gold-plugin.cpp - Plugin to gold for Link Time Optimization ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a gold plugin for LLVM. It provides an LLVM implementation of the; // interface described in http://gcc.gnu.org/wiki/whopr/driver .; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/gold/gold-plugin.cpp:13,plugin,plugin,13,interpreter/llvm-project/llvm/tools/gold/gold-plugin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/gold/gold-plugin.cpp,3,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,"//===-- llvm-config.cpp - LLVM project configuration utility --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This tool encapsulates information about an LLVM project configuration for; // use by other project's build environments (to determine installed path,; // available features, required libraries, etc.).; //; // Note that although this tool *may* be used by some parts of LLVM's build; // itself (i.e., the Makefiles use it to compute required libraries when linking; // tools), this tool is primarily designed to support external projects.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp:13,config,config,13,interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-config/llvm-config.cpp,3,['config'],"['config', 'configuration']"
Modifiability,"//===-- llvm-debuginfod-find.cpp - Simple CLI for libdebuginfod-client ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains the llvm-debuginfod-find tool. This tool; /// queries the debuginfod servers in the DEBUGINFOD_URLS environment; /// variable (delimited by space ("" "")) for the executable,; /// debuginfo, or specified source file of the binary matching the; /// given build-id.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-debuginfod-find/llvm-debuginfod-find.cpp:532,variab,variable,532,interpreter/llvm-project/llvm/tools/llvm-debuginfod-find/llvm-debuginfod-find.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-debuginfod-find/llvm-debuginfod-find.cpp,1,['variab'],['variable']
Modifiability,"//===-- llvm-debuginfod.cpp - federating debuginfod server ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains the llvm-debuginfod tool, which serves the debuginfod; /// protocol over HTTP. The tool periodically scans zero or more filesystem; /// directories for ELF binaries to serve, and federates requests for unknown; /// build IDs to the debuginfod servers set in the DEBUGINFOD_URLS environment; /// variable.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-debuginfod/llvm-debuginfod.cpp:710,variab,variable,710,interpreter/llvm-project/llvm/tools/llvm-debuginfod/llvm-debuginfod.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-debuginfod/llvm-debuginfod.cpp,1,['variab'],['variable']
Modifiability,"//===-- llvm/ADT/CombinationGenerator.h ------------------------*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Combination generator.; ///; /// Example: given input {{0, 1}, {2}, {3, 4}} it will produce the following; /// combinations: {0, 2, 3}, {0, 2, 4}, {1, 2, 3}, {1, 2, 4}.; ///; /// It is useful to think of input as vector-of-vectors, where the; /// outer vector is the variable space, and inner vector is choice space.; /// The number of choices for each variable can be different.; ///; /// As for implementation, it is useful to think of this as a weird number,; /// where each digit (==variable) may have different base (==number of choices).; /// Thus modelling of 'produce next combination' is exactly analogous to the; /// incrementing of an number - increment lowest digit (pick next choice for the; /// variable), and if it wrapped to the beginning then increment next digit.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/CombinationGenerator.h:663,variab,variable,663,interpreter/llvm-project/llvm/include/llvm/ADT/CombinationGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/CombinationGenerator.h,4,['variab'],['variable']
Modifiability,"//===-- llvm/ADT/Statistic.h - Easy way to expose stats ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the 'Statistic' class, which is designed to be an easy way; /// to expose various metrics from passes. These statistics are printed at the; /// end of a run (from llvm_shutdown), when the -stats command line option is; /// passed on the command line.; ///; /// This is useful for reporting information like the number of instructions; /// simplified, optimized or removed by various transformations, like this:; ///; /// static Statistic NumInstsKilled(""gcse"", ""Number of instructions killed"");; ///; /// Later, in the code: ++NumInstsKilled;; ///; /// NOTE: Statistics *must* be declared as global variables.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Statistic.h:1013,variab,variables,1013,interpreter/llvm-project/llvm/include/llvm/ADT/Statistic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Statistic.h,1,['variab'],['variables']
Modifiability,"//===-- llvm/BinaryFormat/COFF.h --------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains an definitions used in Windows COFF Files.; //; // Structures and enums defined within this file where created using; // information from Microsoft's publicly available PE/COFF format document:; //; // Microsoft Portable Executable and Common Object File Format Specification; // Revision 8.1 - February 15, 2008; //; // As of 5/2/2010, hosted by Microsoft at:; // http://www.microsoft.com/whdc/system/platform/firmware/pecoff.mspx; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/COFF.h:614,Portab,Portable,614,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/COFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/COFF.h,1,['Portab'],['Portable']
Modifiability,"//===-- llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h -----*- C++ -*-//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // This file contains some helper functions which try to cleanup artifacts; // such as G_TRUNCs/G_[ZSA]EXTENDS that were created during legalization to make; // the types match. This file also contains some combines of merges that happens; // at the end of the legalization.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h:479,EXTEND,EXTENDS,479,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizationArtifactCombiner.h,1,['EXTEND'],['EXTENDS']
Modifiability,"//===-- llvm/CodeGen/LiveVariables.h - Live Variable Analysis ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the LiveVariables analysis pass. For each machine; // instruction in the function, this pass calculates the set of registers that; // are immediately dead after the instruction (i.e., the instruction calculates; // the value, but it is never used) and the set of registers that are used by; // the instruction, but are never used after the instruction (i.e., they are; // killed).; //; // This class computes live variables using a sparse implementation based on; // the machine code SSA form. This class computes live variable information for; // each virtual and _register allocatable_ physical register in a function. It; // uses the dominance properties of SSA form to efficiently compute live; // variables for virtual registers, and assumes that physical registers are only; // live within a single basic block (allowing it to do a single local analysis; // to resolve physical register lifetimes in each basic block). If a physical; // register is not register allocatable, it is not tracked. This is useful for; // things like the stack pointer and condition codes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h:44,Variab,Variable,44,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,4,"['Variab', 'variab']","['Variable', 'variable', 'variables']"
Modifiability,"//===-- llvm/DebugProgramInstruction.h - Stream of debug info -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Data structures for storing variable assignment information in LLVM. In the; // dbg.value design, a dbg.value intrinsic specifies the position in a block; // a source variable take on an LLVM Value:; //; // %foo = add i32 1, %0; // dbg.value(metadata i32 %foo, ...); // %bar = void call @ext(%foo);; //; // and all information is stored in the Value / Metadata hierachy defined; // elsewhere in LLVM. In the ""DPValue"" design, each instruction /may/ have a; // connection with a DPMarker, which identifies a position immediately before the; // instruction, and each DPMarker /may/ then have connections to DPValues which; // record the variable assignment information. To illustrate:; //; // %foo = add i32 1, %0; // ; foo->DbgMarker == nullptr; // ;; There are no variable assignments / debug records ""in front"" of; // ;; the instruction for %foo, therefore it has no DbgMarker.; // %bar = void call @ext(%foo); // ; bar->DbgMarker = {; // ; StoredDPValues = {; // ; DPValue(metadata i32 %foo, ...); // ; }; // ; }; // ;; There is a debug-info record in front of the %bar instruction,; // ;; thus it points at a DPMarker object. That DPMarker contains a; // ;; DPValue in it's ilist, storing the equivalent information to the; // ;; dbg.value above: the Value, DILocalVariable, etc.; //; // This structure separates the two concerns of the position of the debug-info; // in the function, and the Value that it refers to. It also creates a new; // ""place"" in-between the Value / Metadata hierachy where we can customise; // storage and allocation techniques to better suite debug-info workloads.; // NB: as of the i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugProgramInstruction.h:415,variab,variable,415,interpreter/llvm-project/llvm/include/llvm/IR/DebugProgramInstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugProgramInstruction.h,3,['variab'],['variable']
Modifiability,"//===-- llvm/GlobalObject.h - Class to represent global objects -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This represents an independent object. That is, a function or a global; // variable, but not an alias.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalObject.h:458,variab,variable,458,interpreter/llvm-project/llvm/include/llvm/IR/GlobalObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalObject.h,1,['variab'],['variable']
Modifiability,"//===-- llvm/GlobalVariable.h - GlobalVariable class ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the declaration of the GlobalVariable class, which; // represents a single global variable (or constant) in the VM.; //; // Global variables are constant pointers that refer to hunks of space that are; // allocated by either the VM, or by the linker in a static compiler. A global; // variable may have an initial value, which is copied into the executables .data; // area. Global Constants are required to have initializers.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h:484,variab,variable,484,interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h,3,['variab'],"['variable', 'variables']"
Modifiability,"//===-- llvm/Support/DynamicLibrary.h - Portable Dynamic Library -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the sys::DynamicLibrary class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DynamicLibrary.h:40,Portab,Portable,40,interpreter/llvm-project/llvm/include/llvm/Support/DynamicLibrary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DynamicLibrary.h,1,['Portab'],['Portable']
Modifiability,"//===-- llvm/Support/PluginLoader.h - Plugin Loader for Tools ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // A tool can #include this file to get a -load option that allows the user to; // load arbitrary shared objects into the tool's address space. Note that this; // header can only be included by a program ONCE, so it should never to used by; // library authors.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/PluginLoader.h:21,Plugin,PluginLoader,21,interpreter/llvm-project/llvm/include/llvm/Support/PluginLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/PluginLoader.h,2,['Plugin'],"['Plugin', 'PluginLoader']"
Modifiability,"//===-- llvm/Transforms/Utils/SimplifyIndVar.h - Indvar Utils ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines in interface for induction variable simplification. It does; // not define any actual pass or policy, but provides a single function to; // simplify a loop's induction variables based on ScalarEvolution.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyIndVar.h:428,variab,variable,428,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyIndVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SimplifyIndVar.h,2,['variab'],"['variable', 'variables']"
Modifiability,"//===--- ASTNodeTraverser.h - Traversal of AST nodes ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the AST traversal facilities. Other users; // of this class may make use of the same traversal logic by inheriting it,; // similar to RecursiveASTVisitor.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTNodeTraverser.h:508,inherit,inheriting,508,interpreter/llvm-project/clang/include/clang/AST/ASTNodeTraverser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTNodeTraverser.h,1,['inherit'],['inheriting']
Modifiability,"//===--- ASTSelection.cpp - Clang refactoring library ---------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/ASTSelection.cpp:34,refactor,refactoring,34,interpreter/llvm-project/clang/lib/Tooling/Refactoring/ASTSelection.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/ASTSelection.cpp,1,['refactor'],['refactoring']
Modifiability,"//===--- ASTSelection.h - Clang refactoring library -----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/ASTSelection.h:32,refactor,refactoring,32,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/ASTSelection.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/ASTSelection.h,1,['refactor'],['refactoring']
Modifiability,"//===--- ASTSelectionRequirements.cpp - Clang refactoring library ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/ASTSelectionRequirements.cpp:46,refactor,refactoring,46,interpreter/llvm-project/clang/lib/Tooling/Refactoring/ASTSelectionRequirements.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/ASTSelectionRequirements.cpp,1,['refactor'],['refactoring']
Modifiability,"//===--- AlignOf.h - Portable calculation of type alignment -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the AlignedCharArrayUnion class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AlignOf.h:21,Portab,Portable,21,interpreter/llvm-project/llvm/include/llvm/Support/AlignOf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AlignOf.h,1,['Portab'],['Portable']
Modifiability,"//===--- COFFModuleDefinition.h ---------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Windows-specific.; // A parser for the module-definition file (.def file).; // Parsed results are directly written to Config global variable.; //; // The format of module-definition files are described in this document:; // https://msdn.microsoft.com/en-us/library/28d6s79h.aspx; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/COFFModuleDefinition.h:501,Config,Config,501,interpreter/llvm-project/llvm/include/llvm/Object/COFFModuleDefinition.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/COFFModuleDefinition.h,2,"['Config', 'variab']","['Config', 'variable']"
Modifiability,"//===--- ClangRefactor.cpp - Clang-based refactoring tool -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements a clang-refactor tool that performs various; /// source transformations.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-refactor/ClangRefactor.cpp:41,refactor,refactoring,41,interpreter/llvm-project/clang/tools/clang-refactor/ClangRefactor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-refactor/ClangRefactor.cpp,2,['refactor'],"['refactor', 'refactoring']"
Modifiability,"//===--- ConstantEmitter.h - IR constant emission ---------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // A helper class for emitting expressions and values as llvm::Constants; // and as initializers for global variables.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ConstantEmitter.h:488,variab,variables,488,interpreter/llvm-project/clang/lib/CodeGen/ConstantEmitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ConstantEmitter.h,1,['variab'],['variables']
Modifiability,"//===--- ConstantInitBuilder.cpp - Global initializer builder -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines out-of-line routines for building initializers for; // global variables, in particular the kind of globals that are implicitly; // introduced by various language ABIs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ConstantInitBuilder.cpp:463,variab,variables,463,interpreter/llvm-project/clang/lib/CodeGen/ConstantInitBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ConstantInitBuilder.cpp,1,['variab'],['variables']
Modifiability,"//===--- DAGDeltaAlgorithm.cpp - A DAG Minimization Algorithm --*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //===----------------------------------------------------------------------===//; //; // The algorithm we use attempts to exploit the dependency information by; // minimizing top-down. We start by constructing an initial root set R, and; // then iteratively:; //; // 1. Minimize the set R using the test predicate:; // P'(S) = P(S union pred*(S)); //; // 2. Extend R to R' = R union pred(R).; //; // until a fixed point is reached.; //; // The idea is that we want to quickly prune entire portions of the graph, so we; // try to find high-level nodes that can be eliminated with all of their; // dependents.; //; // FIXME: The current algorithm doesn't actually provide a strong guarantee; // about the minimality of the result. The problem is that after adding nodes to; // the required set, we no longer consider them for elimination. For strictly; // well formed predicates, this doesn't happen, but it commonly occurs in; // practice when there are unmodelled dependencies. I believe we can resolve; // this by allowing the required set to be minimized as well, but need more test; // cases first.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/DAGDeltaAlgorithm.cpp:648,Extend,Extend,648,interpreter/llvm-project/llvm/lib/Support/DAGDeltaAlgorithm.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/DAGDeltaAlgorithm.cpp,1,['Extend'],['Extend']
Modifiability,"//===--- Diagnostic.cpp - Framework for clang diagnostics tools ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implements classes to support/store diagnostics refactoring.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Core/Diagnostic.cpp:430,refactor,refactoring,430,interpreter/llvm-project/clang/lib/Tooling/Core/Diagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Core/Diagnostic.cpp,1,['refactor'],['refactoring']
Modifiability,"//===--- Diagnostic.h - Framework for clang diagnostics tools --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // \file; // Structures supporting diagnostics and refactorings that span multiple; // translation units. Indicate diagnostics reports and replacements; // suggestions for the analyzed sources.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Core/Diagnostic.h:430,refactor,refactorings,430,interpreter/llvm-project/clang/include/clang/Tooling/Core/Diagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Core/Diagnostic.h,1,['refactor'],['refactorings']
Modifiability,"//===--- Execution.h - Executing clang frontend actions -*- C++ ---------*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines framework for executing clang frontend actions.; //; // The framework can be extended to support different execution plans including; // standalone execution on the given TUs or parallel execution on all TUs in; // the codebase.; //; // In order to enable multiprocessing execution, tool actions are expected to; // output result into the ToolResults provided by the executor. The; // `ToolResults` is an interface that abstracts how results are stored e.g.; // in-memory for standalone execution or on-disk for large-scale execution.; //; // New executors can be registered as ToolExecutorPlugins via the; // `ToolExecutorPluginRegistry`. CLI tools can use; // `createExecutorFromCommandLineArgs` to create a specific registered executor; // according to the command-line arguments.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Execution.h:478,extend,extended,478,interpreter/llvm-project/clang/include/clang/Tooling/Execution.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Execution.h,1,['extend'],['extended']
Modifiability,"//===--- Extract.cpp - Clang refactoring library --------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Implements the ""extract"" refactoring that can pull code into; /// new functions, methods or declare new variables.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Extract/Extract.cpp:29,refactor,refactoring,29,interpreter/llvm-project/clang/lib/Tooling/Refactoring/Extract/Extract.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Extract/Extract.cpp,3,"['refactor', 'variab']","['refactoring', 'variables']"
Modifiability,"//===--- Extract.h - Clang refactoring library ----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Extract/Extract.h:27,refactor,refactoring,27,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Extract/Extract.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Extract/Extract.h,1,['refactor'],['refactoring']
Modifiability,"//===--- Format.h - Format C++ code -----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Various functions to configurably format source code.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h:417,config,configurably,417,interpreter/llvm-project/clang/include/clang/Format/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Format/Format.h,1,['config'],['configurably']
Modifiability,"//===--- Function.h - Bytecode function for the VM --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Defines the Function class which holds all bytecode function-specific data.; //; // The scope class which describes local variables is also defined here.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/Function.h:505,variab,variables,505,interpreter/llvm-project/clang/lib/AST/Interp/Function.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/Function.h,1,['variab'],['variables']
Modifiability,//===--- Global Variable Emission Directives --------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUMCAsmInfo.cpp:16,Variab,Variable,16,interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUMCAsmInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCTargetDesc/AMDGPUMCAsmInfo.cpp,1,['Variab'],['Variable']
Modifiability,"//===--- Global Variable Emission Directives --------------------------===//; /// This is the directive used to declare a global entity. Defaults to; /// "".globl"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h:16,Variab,Variable,16,interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h,1,['Variab'],['Variable']
Modifiability,"//===--- InclusionRewriter.cpp - Rewrite includes into their expansions ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This code rewrites include invocations into their expansions. This gives you; // a file with all included files merged into it.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/InclusionRewriter.cpp:33,Rewrite,Rewrite,33,interpreter/llvm-project/clang/lib/Frontend/Rewrite/InclusionRewriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/InclusionRewriter.cpp,2,"['Rewrite', 'rewrite']","['Rewrite', 'rewrites']"
Modifiability,"//===--- InfoByHwMode.cpp -------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // Classes that implement data parameterized by HW modes for instruction; // selection. Currently it is ValueTypeByHwMode (parameterized ValueType),; // and RegSizeInfoByHwMode (parameterized register/spill size and alignment; // data).; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/InfoByHwMode.cpp:407,parameteriz,parameterized,407,interpreter/llvm-project/llvm/utils/TableGen/InfoByHwMode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/InfoByHwMode.cpp,3,['parameteriz'],['parameterized']
Modifiability,"//===--- InfoByHwMode.h -----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // Classes that implement data parameterized by HW modes for instruction; // selection. Currently it is ValueTypeByHwMode (parameterized ValueType),; // and RegSizeInfoByHwMode (parameterized register/spill size and alignment; // data).; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/InfoByHwMode.h:407,parameteriz,parameterized,407,interpreter/llvm-project/llvm/utils/TableGen/InfoByHwMode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/InfoByHwMode.h,3,['parameteriz'],['parameterized']
Modifiability,"//===--- Lookup.cpp - Framework for clang refactoring tools ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines helper methods for clang tools performing name lookup.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Lookup.cpp:42,refactor,refactoring,42,interpreter/llvm-project/clang/lib/Tooling/Refactoring/Lookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Lookup.cpp,1,['refactor'],['refactoring']
Modifiability,"//===--- Lookup.h - Framework for clang refactoring tools --*- C++ -*------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines helper methods for clang tools performing name lookup.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Lookup.h:40,refactor,refactoring,40,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Lookup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Lookup.h,1,['refactor'],['refactoring']
Modifiability,"//===--- LoopUnrolling.h - Unroll loops -------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This header contains the declarations of functions which are used to decide; /// which loops should be completely unrolled and mark their corresponding; /// CFGBlocks. It is done by tracking a stack of loops in the ProgramState. This; /// way specific loops can be marked as completely unrolled. For considering a; /// loop to be completely unrolled it has to fulfill the following requirements:; /// - Currently only forStmts can be considered.; /// - The bound has to be known.; /// - The counter variable has not escaped before/in the body of the loop and; /// changed only in the increment statement corresponding to the loop. It also; /// has to be initialized by a literal in the corresponding initStmt.; /// - Does not contain goto, switch and returnStmt.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/LoopUnrolling.h:890,variab,variable,890,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/LoopUnrolling.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/LoopUnrolling.h,1,['variab'],['variable']
Modifiability,"//===--- MacroExpander.cpp - Format C++ code --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains the implementation of MacroExpander, which handles macro; /// configuration and expansion while formatting.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/MacroExpander.cpp:477,config,configuration,477,interpreter/llvm-project/clang/lib/Format/MacroExpander.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/MacroExpander.cpp,1,['config'],['configuration']
Modifiability,"//===--- Macros.h - Format C++ code -----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains the main building blocks of macro support in; /// clang-format.; ///; /// In order to not violate the requirement that clang-format can format files; /// in isolation, clang-format's macro support uses expansions users provide; /// as part of clang-format's style configuration.; ///; /// Macro definitions are of the form ""MACRO(p1, p2)=p1 + p2"", but only support; /// one level of expansion (\see MacroExpander for a full description of what; /// is supported).; ///; /// As part of parsing, clang-format uses the MacroExpander to expand the; /// spelled token streams into expanded token streams when it encounters a; /// macro call. The UnwrappedLineParser continues to parse UnwrappedLines; /// from the expanded token stream.; /// After the expanded unwrapped lines are parsed, the MacroCallReconstructor; /// matches the spelled token stream into unwrapped lines that best resemble the; /// structure of the expanded unwrapped lines. These reconstructed unwrapped; /// lines are aliasing the tokens in the expanded token stream, so that token; /// annotations will be reused when formatting the spelled macro calls.; ///; /// When formatting, clang-format annotates and formats the expanded unwrapped; /// lines first, determining the token types. Next, it formats the spelled; /// unwrapped lines, keeping the token types fixed, while allowing other; /// formatting decisions to change.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Macros.h:679,config,configuration,679,interpreter/llvm-project/clang/lib/Format/Macros.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Macros.h,1,['config'],['configuration']
Modifiability,"//===--- RecursiveSymbolVisitor.h - Clang refactoring library -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// A wrapper class around \c RecursiveASTVisitor that visits each; /// occurrences of a named symbol.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RecursiveSymbolVisitor.h:42,refactor,refactoring,42,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RecursiveSymbolVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RecursiveSymbolVisitor.h,1,['refactor'],['refactoring']
Modifiability,"//===--- Refactoring.cpp - Framework for clang refactoring tools ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implements tools to support refactorings.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring.cpp:9,Refactor,Refactoring,9,interpreter/llvm-project/clang/lib/Tooling/Refactoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring.cpp,3,"['Refactor', 'refactor']","['Refactoring', 'refactoring', 'refactorings']"
Modifiability,"//===--- Refactoring.h - Framework for clang refactoring tools --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Interfaces supporting refactorings that span multiple translation units.; // While single translation unit refactorings are supported via the Rewriter,; // when refactoring multiple translation units changes must be stored in a; // SourceManager independent form, duplicate changes need to be removed, and; // all changes must be applied at once at the end of the refactoring so that; // the code is always parseable.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring.h:9,Refactor,Refactoring,9,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring.h,7,"['Refactor', 'Rewrite', 'refactor']","['Refactoring', 'Rewriter', 'refactoring', 'refactorings']"
Modifiability,"//===--- RefactoringAction.h - Clang refactoring library ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringAction.h:9,Refactor,RefactoringAction,9,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringAction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringAction.h,2,"['Refactor', 'refactor']","['RefactoringAction', 'refactoring']"
Modifiability,"//===--- RefactoringActionRule.h - Clang refactoring library -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRule.h:9,Refactor,RefactoringActionRule,9,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRule.h,2,"['Refactor', 'refactor']","['RefactoringActionRule', 'refactoring']"
Modifiability,"//===--- RefactoringActionRuleRequirements.h - Clang refactoring library --===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRuleRequirements.h:9,Refactor,RefactoringActionRuleRequirements,9,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRuleRequirements.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRuleRequirements.h,2,"['Refactor', 'refactor']","['RefactoringActionRuleRequirements', 'refactoring']"
Modifiability,"//===--- RefactoringActionRules.h - Clang refactoring library -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRules.h:9,Refactor,RefactoringActionRules,9,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRules.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRules.h,2,"['Refactor', 'refactor']","['RefactoringActionRules', 'refactoring']"
Modifiability,"//===--- RefactoringActionRulesInternal.h - Clang refactoring library -----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRulesInternal.h:9,Refactor,RefactoringActionRulesInternal,9,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRulesInternal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRulesInternal.h,2,"['Refactor', 'refactor']","['RefactoringActionRulesInternal', 'refactoring']"
Modifiability,"//===--- RefactoringActions.cpp - Constructs refactoring actions ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/RefactoringActions.cpp:9,Refactor,RefactoringActions,9,interpreter/llvm-project/clang/lib/Tooling/Refactoring/RefactoringActions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/RefactoringActions.cpp,2,"['Refactor', 'refactor']","['RefactoringActions', 'refactoring']"
Modifiability,"//===--- RefactoringCallbacks.cpp - Structural query framework ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/RefactoringCallbacks.cpp:9,Refactor,RefactoringCallbacks,9,interpreter/llvm-project/clang/lib/Tooling/RefactoringCallbacks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/RefactoringCallbacks.cpp,1,['Refactor'],['RefactoringCallbacks']
Modifiability,"//===--- RefactoringCallbacks.h - Structural query framework ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Provides callbacks to make common kinds of refactorings easy.; //; // The general idea is to construct a matcher expression that describes a; // subtree match on the AST and then replace the corresponding source code; // either by some specific text or some other AST node.; //; // Example:; // int main(int argc, char **argv) {; // ClangTool Tool(argc, argv);; // MatchFinder Finder;; // ReplaceStmtWithText Callback(""integer"", ""42"");; // Finder.AddMatcher(id(""integer"", expression(integerLiteral())), Callback);; // return Tool.run(newFrontendActionFactory(&Finder));; // }; //; // This will replace all integer literals with ""42"".; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/RefactoringCallbacks.h:9,Refactor,RefactoringCallbacks,9,interpreter/llvm-project/clang/include/clang/Tooling/RefactoringCallbacks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/RefactoringCallbacks.h,2,"['Refactor', 'refactor']","['RefactoringCallbacks', 'refactorings']"
Modifiability,"//===--- RefactoringDiagnostic.h - ------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringDiagnostic.h:9,Refactor,RefactoringDiagnostic,9,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringDiagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringDiagnostic.h,1,['Refactor'],['RefactoringDiagnostic']
Modifiability,"//===--- RefactoringOption.h - Clang refactoring library ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringOption.h:9,Refactor,RefactoringOption,9,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringOption.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringOption.h,2,"['Refactor', 'refactor']","['RefactoringOption', 'refactoring']"
Modifiability,"//===--- RefactoringOptionVisitor.h - Clang refactoring library -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringOptionVisitor.h:9,Refactor,RefactoringOptionVisitor,9,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringOptionVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringOptionVisitor.h,2,"['Refactor', 'refactor']","['RefactoringOptionVisitor', 'refactoring']"
Modifiability,"//===--- RefactoringOptions.h - Clang refactoring library -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringOptions.h:9,Refactor,RefactoringOptions,9,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringOptions.h,2,"['Refactor', 'refactor']","['RefactoringOptions', 'refactoring']"
Modifiability,"//===--- RefactoringResultConsumer.h - Clang refactoring library ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringResultConsumer.h:9,Refactor,RefactoringResultConsumer,9,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringResultConsumer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringResultConsumer.h,2,"['Refactor', 'refactor']","['RefactoringResultConsumer', 'refactoring']"
Modifiability,"//===--- RefactoringRuleContext.h - Clang refactoring library -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringRuleContext.h:9,Refactor,RefactoringRuleContext,9,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringRuleContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringRuleContext.h,2,"['Refactor', 'refactor']","['RefactoringRuleContext', 'refactoring']"
Modifiability,"//===--- RenamingAction.cpp - Clang refactoring library -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Provides an action to rename every symbol at a point.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/RenamingAction.cpp:36,refactor,refactoring,36,interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/RenamingAction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/RenamingAction.cpp,1,['refactor'],['refactoring']
Modifiability,"//===--- RenamingAction.h - Clang refactoring library ---------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Provides an action to rename every symbol at a point.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/RenamingAction.h:34,refactor,refactoring,34,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/RenamingAction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/RenamingAction.h,1,['refactor'],['refactoring']
Modifiability,"//===--- RewriteMacros.cpp - Rewrite macros into their expansions ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This code rewrites macro invocations into their expansions. This gives you; // a macro expanded file that retains comments and #includes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteMacros.cpp:9,Rewrite,RewriteMacros,9,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteMacros.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteMacros.cpp,3,"['Rewrite', 'rewrite']","['Rewrite', 'RewriteMacros', 'rewrites']"
Modifiability,"//===--- RewriteObjC.cpp - Playground for the code rewriter ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Hacks and fun related to the code rewriter.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp:9,Rewrite,RewriteObjC,9,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,3,"['Rewrite', 'rewrite']","['RewriteObjC', 'rewriter']"
Modifiability,"//===--- RewriteObjCFoundationAPI.cpp - Foundation API Rewriter -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Rewrites legacy method calls to modern syntax.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp:9,Rewrite,RewriteObjCFoundationAPI,9,interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,3,['Rewrite'],"['RewriteObjCFoundationAPI', 'Rewriter', 'Rewrites']"
Modifiability,"//===--- RewriteRule.h - RewriteRule class ----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the RewriteRule class and related functions for creating,; /// modifying and interpreting RewriteRules.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/RewriteRule.h:9,Rewrite,RewriteRule,9,interpreter/llvm-project/clang/include/clang/Tooling/Transformer/RewriteRule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/RewriteRule.h,4,['Rewrite'],"['RewriteRule', 'RewriteRules']"
Modifiability,"//===--- RewriteTest.cpp - Rewriter playground ----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a testbed.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteTest.cpp:9,Rewrite,RewriteTest,9,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteTest.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteTest.cpp,2,['Rewrite'],"['RewriteTest', 'Rewriter']"
Modifiability,"//===--- Rewriters.h - Rewriter implementations -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header contains miscellaneous utilities for various front-end actions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Frontend/Rewriters.h:9,Rewrite,Rewriters,9,interpreter/llvm-project/clang/include/clang/Rewrite/Frontend/Rewriters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Frontend/Rewriters.h,2,['Rewrite'],"['Rewriter', 'Rewriters']"
Modifiability,"//===--- Rewriters.h - Rewritings ---------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Edit/Rewriters.h:9,Rewrite,Rewriters,9,interpreter/llvm-project/clang/include/clang/Edit/Rewriters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Edit/Rewriters.h,1,['Rewrite'],['Rewriters']
Modifiability,"//===--- SourceExtraction.cpp - Clang refactoring library -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Extract/SourceExtraction.h:38,refactor,refactoring,38,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Extract/SourceExtraction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Extract/SourceExtraction.h,2,['refactor'],['refactoring']
Modifiability,"//===--- Stencil.h - Stencil class ------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the *Stencil* abstraction: a code-generating object,; /// parameterized by named references to (bound) AST nodes. Given a match; /// result, a stencil can be evaluated to a string of source code.; ///; /// A stencil is similar in spirit to a format string: it is composed of a; /// series of raw text strings, references to nodes (the parameters) and helper; /// code-generation operations.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/Stencil.h:472,parameteriz,parameterized,472,interpreter/llvm-project/clang/include/clang/Tooling/Transformer/Stencil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/Stencil.h,1,['parameteriz'],['parameterized']
Modifiability,"//===--- SymbolName.h - Clang refactoring library -------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/SymbolName.h:30,refactor,refactoring,30,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/SymbolName.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/SymbolName.h,1,['refactor'],['refactoring']
Modifiability,"//===--- SymbolOccurrences.cpp - Clang refactoring library ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/SymbolOccurrences.cpp:39,refactor,refactoring,39,interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/SymbolOccurrences.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/SymbolOccurrences.cpp,1,['refactor'],['refactoring']
Modifiability,"//===--- SymbolOccurrences.h - Clang refactoring library ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/SymbolOccurrences.h:37,refactor,refactoring,37,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/SymbolOccurrences.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/SymbolOccurrences.h,1,['refactor'],['refactoring']
Modifiability,"//===--- TargetCXXABI.h - C++ ABI Target Configuration ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Defines the TargetCXXABI class, which abstracts details of the; /// C++ ABI that we're targeting.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetCXXABI.h:41,Config,Configuration,41,interpreter/llvm-project/clang/include/clang/Basic/TargetCXXABI.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetCXXABI.h,1,['Config'],['Configuration']
Modifiability,"//===--- TerminalConfigUnix.cpp - termios storage -------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // TerminalReader and TerminalDisplay need to reset the terminal configuration; // upon destruction, to leave the terminal as before. To avoid a possible; // misunderstanding of what ""before"" means, centralize their storage of the; // previous termios and have them share it.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp:396,config,configuration,396,core/textinput/src/textinput/TerminalConfigUnix.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.cpp,1,['config'],['configuration']
Modifiability,"//===--- TerminalConfigUnix.cpp - termios storage ---------------*- C++ -*-===//; //; // The LLVM Compiler Infrastructure; //; // This file is distributed under the University of Illinois Open Source; // License. See LICENSE.TXT for details.; //; //===----------------------------------------------------------------------===//; //; // TerminalReader and TerminalDisplay need to reset the terminal configuration; // upon destruction, to leave the terminal as before. To avoid a possible; // misunderstanding of what ""before"" means, centralize their storage of the; // previous termios and have them share it.; //; // Axel Naumann <axel@cern.ch>, 2011-05-12; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h:398,config,configuration,398,core/textinput/src/textinput/TerminalConfigUnix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/TerminalConfigUnix.h,1,['config'],['configuration']
Modifiability,"//===--- TestSupport.cpp - Clang-based refactoring tool -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements routines that provide refactoring testing; /// utilities.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-refactor/TestSupport.cpp:39,refactor,refactoring,39,interpreter/llvm-project/clang/tools/clang-refactor/TestSupport.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-refactor/TestSupport.cpp,2,['refactor'],['refactoring']
Modifiability,"//===--- TestSupport.h - Clang-based refactoring tool -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Declares datatypes and routines that are used by test-specific code; /// in clang-refactor.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-refactor/TestSupport.h:37,refactor,refactoring,37,interpreter/llvm-project/clang/tools/clang-refactor/TestSupport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-refactor/TestSupport.h,2,['refactor'],"['refactor', 'refactoring']"
Modifiability,"//===--- TokenAnalyzer.cpp - Analyze Token Streams --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements an abstract TokenAnalyzer and associated helper; /// classes. TokenAnalyzer can be extended to generate replacements based on; /// an annotated and pre-processed token stream.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnalyzer.cpp:500,extend,extended,500,interpreter/llvm-project/clang/lib/Format/TokenAnalyzer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnalyzer.cpp,1,['extend'],['extended']
Modifiability,"//===--- TokenAnalyzer.h - Analyze Token Streams ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file declares an abstract TokenAnalyzer, and associated helper; /// classes. TokenAnalyzer can be extended to generate replacements based on; /// an annotated and pre-processed token stream.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnalyzer.h:499,extend,extended,499,interpreter/llvm-project/clang/lib/Format/TokenAnalyzer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnalyzer.h,1,['extend'],['extended']
Modifiability,"//===--- TrailingObjects.h - Variable-length classes ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This header defines support for implementing classes that have; /// some trailing object (or arrays of objects) appended to them. The; /// main purpose is to make it obvious where this idiom is being used,; /// and to make the usage more idiomatic and more difficult to get; /// wrong.; ///; /// The TrailingObject template abstracts away the reinterpret_cast,; /// pointer arithmetic, and size calculations used for the allocation; /// and access of appended arrays of objects, and takes care that they; /// are all allocated at their required alignment. Additionally, it; /// ensures that the base type is final -- deriving from a class that; /// expects data appended immediately after it is typically not safe.; ///; /// Users are expected to derive from this template, and provide; /// numTrailingObjects implementations for each trailing type except; /// the last, e.g. like this sample:; ///; /// \code; /// class VarLengthObj : private TrailingObjects<VarLengthObj, int, double> {; /// friend TrailingObjects;; ///; /// unsigned NumInts, NumDoubles;; /// size_t numTrailingObjects(OverloadToken<int>) const { return NumInts; }; /// };; /// \endcode; ///; /// You can access the appended arrays via 'getTrailingObjects', and; /// determine the size needed for allocation via; /// 'additionalSizeToAlloc' and 'totalSizeToAlloc'.; ///; /// All the methods implemented by this class are intended for use; /// by the implementation of the class, not as part of its interface; /// (thus, private inheritance is suggested).; ///; //===---------------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h:29,Variab,Variable-length,29,interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h,1,['Variab'],['Variable-length']
Modifiability,"//===--- TransAutoreleasePool.cpp - Transformations to ARC mode -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // rewriteAutoreleasePool:; //; // Calls to NSAutoreleasePools will be rewritten as an @autorelease scope.; //; // NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];; // ...; // [pool release];; // ---->; // @autorelease {; // ...; // }; //; // An NSAutoreleasePool will not be touched if:; // - There is not a corresponding -release/-drain in the same scope; // - Not all references of the NSAutoreleasePool variable can be removed; // - There is a variable that is declared inside the intended @autorelease scope; // which is also used outside it.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp:383,rewrite,rewriteAutoreleasePool,383,interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp,3,"['rewrite', 'variab']","['rewriteAutoreleasePool', 'variable']"
Modifiability,"//===--- TransBlockObjCVariable.cpp - Transformations to ARC mode ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // rewriteBlockObjCVariable:; //; // Adding __block to an obj-c variable could be either because the variable; // is used for output storage or the user wanted to break a retain cycle.; // This transformation checks whether a reference of the variable for the block; // is actually needed (it is assigned to or its address is taken) or not.; // If the reference is not needed it will assume __block was added to break a; // cycle so it will remove '__block' and add __weak/__unsafe_unretained.; // e.g; //; // __block Foo *x;; // bar(^ { [x cake]; });; // ---->; // __weak Foo *x;; // bar(^ { [x cake]; });; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransBlockObjCVariable.cpp:383,rewrite,rewriteBlockObjCVariable,383,interpreter/llvm-project/clang/lib/ARCMigrate/TransBlockObjCVariable.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransBlockObjCVariable.cpp,4,"['rewrite', 'variab']","['rewriteBlockObjCVariable', 'variable']"
Modifiability,"//===--- TransProperties.cpp - Transformations to ARC mode ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // rewriteProperties:; //; // - Adds strong/weak/unsafe_unretained ownership specifier to properties that; // are missing one.; // - Migrates properties from (retain) to (strong) and (assign) to; // (unsafe_unretained/weak).; // - If a property is synthesized, adds the ownership specifier in the ivar; // backing the property.; //; // @interface Foo : NSObject {; // NSObject *x;; // }; // @property (assign) id x;; // @end; // ---->; // @interface Foo : NSObject {; // NSObject *__weak x;; // }; // @property (weak) id x;; // @end; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransProperties.cpp:383,rewrite,rewriteProperties,383,interpreter/llvm-project/clang/lib/ARCMigrate/TransProperties.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransProperties.cpp,1,['rewrite'],['rewriteProperties']
Modifiability,"//===--- TransProtectedScope.cpp - Transformations to ARC mode ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Adds brackets in case statements that ""contain"" initialization of retaining; // variable, thus emitting the ""switch case is in protected scope"" error.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransProtectedScope.cpp:463,variab,variable,463,interpreter/llvm-project/clang/lib/ARCMigrate/TransProtectedScope.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransProtectedScope.cpp,1,['variab'],['variable']
Modifiability,"//===--- TransUnbridgedCasts.cpp - Transformations to ARC mode ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // rewriteUnbridgedCasts:; //; // A cast of non-objc pointer to an objc one is checked. If the non-objc pointer; // is from a file-level variable, __bridge cast is used to convert it.; // For the result of a function call that we know is +1/+0,; // __bridge/CFBridgingRelease is used.; //; // NSString *str = (NSString *)kUTTypePlainText;; // str = b ? kUTTypeRTF : kUTTypePlainText;; // NSString *_uuidString = (NSString *)CFUUIDCreateString(kCFAllocatorDefault,; // _uuid);; // ---->; // NSString *str = (__bridge NSString *)kUTTypePlainText;; // str = (__bridge NSString *)(b ? kUTTypeRTF : kUTTypePlainText);; // NSString *_uuidString = (NSString *); // CFBridgingRelease(CFUUIDCreateString(kCFAllocatorDefault, _uuid));; //; // For a C pointer to ObjC, for casting 'self', __bridge is used.; //; // CFStringRef str = (CFStringRef)self;; // ---->; // CFStringRef str = (__bridge CFStringRef)self;; //; // Uses of Block_copy/Block_release macros are rewritten:; //; // c = Block_copy(b);; // Block_release(c);; // ---->; // c = [b copy];; // <removed>; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransUnbridgedCasts.cpp:383,rewrite,rewriteUnbridgedCasts,383,interpreter/llvm-project/clang/lib/ARCMigrate/TransUnbridgedCasts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransUnbridgedCasts.cpp,2,"['rewrite', 'variab']","['rewriteUnbridgedCasts', 'variable']"
Modifiability,"//===--- TransUnusedInitDelegate.cpp - Transformations to ARC mode --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // Transformations:; //===----------------------------------------------------------------------===//; //; // rewriteUnusedInitDelegate:; //; // Rewrites an unused result of calling a delegate initialization, to assigning; // the result to self.; // e.g; // [self init];; // ---->; // self = [self init];; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransUnusedInitDelegate.cpp:486,rewrite,rewriteUnusedInitDelegate,486,interpreter/llvm-project/clang/lib/ARCMigrate/TransUnusedInitDelegate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransUnusedInitDelegate.cpp,2,"['Rewrite', 'rewrite']","['Rewrites', 'rewriteUnusedInitDelegate']"
Modifiability,"//===--- USRFinder.cpp - Clang refactoring library ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file Implements a recursive AST visitor that finds the USR of a symbol at a; /// point.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/USRFinder.cpp:31,refactor,refactoring,31,interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/USRFinder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/USRFinder.cpp,1,['refactor'],['refactoring']
Modifiability,"//===--- USRFinder.h - Clang refactoring library --------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Methods for determining the USR of a symbol at a location in source; /// code.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/USRFinder.h:29,refactor,refactoring,29,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/USRFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/USRFinder.h,1,['refactor'],['refactoring']
Modifiability,"//===--- USRFindingAction.cpp - Clang refactoring library -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Provides an action to find USR for the symbol at <offset>, as well as; /// all additional USRs.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/USRFindingAction.cpp:38,refactor,refactoring,38,interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/USRFindingAction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/USRFindingAction.cpp,1,['refactor'],['refactoring']
Modifiability,"//===--- USRFindingAction.h - Clang refactoring library -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Provides an action to find all relevant USRs at a point.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/USRFindingAction.h:36,refactor,refactoring,36,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/USRFindingAction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/USRFindingAction.h,1,['refactor'],['refactoring']
Modifiability,"//===--- USRLocFinder.cpp - Clang refactoring library ---------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Methods for finding all instances of a USR. Our strategy is very; /// simple; we just compare the USR at every relevant AST node with the one; /// provided.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/USRLocFinder.cpp:34,refactor,refactoring,34,interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/USRLocFinder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Refactoring/Rename/USRLocFinder.cpp,1,['refactor'],['refactoring']
Modifiability,"//===--- USRLocFinder.h - Clang refactoring library -----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Provides functionality for finding all instances of a USR in a given; /// AST.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/USRLocFinder.h:32,refactor,refactoring,32,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/USRLocFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/Rename/USRLocFinder.h,1,['refactor'],['refactoring']
Modifiability,"//===--- VarBypassDetector.h - Bypass jumps detector --------------*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains VarBypassDetector class, which is used to detect; // local variable declarations which can be bypassed by jumps.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/VarBypassDetector.h:461,variab,variable,461,interpreter/llvm-project/clang/lib/CodeGen/VarBypassDetector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/VarBypassDetector.h,1,['variab'],['variable']
Modifiability,"//===--- VariantValue.cpp - Polymorphic value type --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Polymorphic value type.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/Dynamic/VariantValue.cpp:28,Polymorphi,Polymorphic,28,interpreter/llvm-project/clang/lib/ASTMatchers/Dynamic/VariantValue.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/Dynamic/VariantValue.cpp,2,['Polymorphi'],['Polymorphic']
Modifiability,"//===--- VariantValue.h - Polymorphic value type ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Polymorphic value type.; ///; /// Supports all the types required for dynamic Matcher construction.; /// Used by the registry to construct matchers in a generic way.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ASTMatchers/Dynamic/VariantValue.h:26,Polymorphi,Polymorphic,26,interpreter/llvm-project/clang/include/clang/ASTMatchers/Dynamic/VariantValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ASTMatchers/Dynamic/VariantValue.h,2,['Polymorphi'],['Polymorphic']
Modifiability,"//===--- raw_os_ostream.cpp - Implement the raw_os_ostream class ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements support adapting raw_ostream to std::ostream.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/raw_os_ostream.cpp:407,adapt,adapting,407,interpreter/llvm-project/llvm/lib/Support/raw_os_ostream.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/raw_os_ostream.cpp,1,['adapt'],['adapting']
Modifiability,"//===---- DebugObjectManagerPlugin.h - JITLink debug objects ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // ObjectLinkingLayer plugin for emitting debug objects.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/DebugObjectManagerPlugin.h:401,plugin,plugin,401,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/DebugObjectManagerPlugin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/DebugObjectManagerPlugin.h,1,['plugin'],['plugin']
Modifiability,"//===---- HexagonFixupHwLoops.cpp - Fixup HW loops too far from LOOPn. ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; // The loop start address in the LOOPn instruction is encoded as a distance; // from the LOOPn instruction itself. If the start address is too far from; // the LOOPn instruction, the instruction needs to use a constant extender.; // This pass will identify and convert such LOOPn instructions to a proper; // form.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFixupHwLoops.cpp:513,extend,extender,513,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFixupHwLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFixupHwLoops.cpp,1,['extend'],['extender']
Modifiability,"//===---- TailRecursionElimination.h ----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file transforms calls of the current function (self recursion) followed; // by a return instruction with a branch to the entry of the function, creating; // a loop. This pass also implements the following extensions to the basic; // algorithm:; //; // 1. Trivial instructions between the call and return do not prevent the; // transformation from taking place, though currently the analysis cannot; // support moving any really useful instructions (only dead ones).; // 2. This pass transforms functions that are prevented from being tail; // recursive by an associative and commutative expression to use an; // accumulator variable, thus compiling the typical naive factorial or; // 'fib' implementation into efficient code.; // 3. TRE is performed if the function returns void, if the return; // returns the result returned by the call, or if the function returns a; // run-time constant on all exits from the function. It is possible, though; // unlikely, that the return returns something else (like constant 0), and; // can still be TRE'd. It can be TRE'd if ALL OTHER return instructions in; // the function return the exact same value.; // 4. If it can prove that callees do not access their caller stack frame,; // they are marked as eligible for tail call elimination (by the code; // generator).; //; // There are several improvements that could be made:; //; // 1. If the function has any alloca instructions, these instructions will be; // moved out of the entry block of the function, causing them to be; // evaluated each time through the tail recursion. Safely keeping allocas; // in the entry bloc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/TailRecursionElimination.h:1012,variab,variable,1012,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/TailRecursionElimination.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/TailRecursionElimination.h,1,['variab'],['variable']
Modifiability,"//===----- UninitializedObject.h ---------------------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines helper classes for UninitializedObjectChecker and; // documentation about the logic of it.; //; // The checker reports uninitialized fields in objects created after a; // constructor call.; //; // This checker has several options:; // - ""Pedantic"" (boolean). If its not set or is set to false, the checker; // won't emit warnings for objects that don't have at least one initialized; // field. This may be set with; //; // `-analyzer-config optin.cplusplus.UninitializedObject:Pedantic=true`.; //; // - ""NotesAsWarnings"" (boolean). If set to true, the checker will emit a; // warning for each uninitialized field, as opposed to emitting one warning; // per constructor call, and listing the uninitialized fields that belongs; // to it in notes. Defaults to false.; //; // `-analyzer-config \; // optin.cplusplus.UninitializedObject:NotesAsWarnings=true`.; //; // - ""CheckPointeeInitialization"" (boolean). If set to false, the checker will; // not analyze the pointee of pointer/reference fields, and will only check; // whether the object itself is initialized. Defaults to false.; //; // `-analyzer-config \; // optin.cplusplus.UninitializedObject:CheckPointeeInitialization=true`.; //; // TODO: With some clever heuristics, some pointers should be dereferenced; // by default. For example, if the pointee is constructed within the; // constructor call, it's reasonable to say that no external object; // references it, and we wouldn't generate multiple report on the same; // pointee.; //; // - ""IgnoreRecordsWithField"" (string). If supplied, the checker will not; // analyze structures that have a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObject.h:835,config,config,835,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObject.h,1,['config'],['config']
Modifiability,"//===------ PPCLoopInstrFormPrep.cpp - Loop Instr Form Prep Pass ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a pass to prepare loops for ppc preferred addressing; // modes, leveraging different instruction form. (eg: DS/DQ form, D/DS form with; // update); // Additional PHIs are created for loop induction variables used by load/store; // instructions so that preferred addressing modes can be used.; //; // 1: DS/DQ form preparation, prepare the load/store instructions so that they; // can satisfy the DS/DQ form displacement requirements.; // Generically, this means transforming loops like this:; // for (int i = 0; i < n; ++i) {; // unsigned long x1 = *(unsigned long *)(p + i + 5);; // unsigned long x2 = *(unsigned long *)(p + i + 9);; // }; //; // to look like this:; //; // unsigned NewP = p + 5;; // for (int i = 0; i < n; ++i) {; // unsigned long x1 = *(unsigned long *)(i + NewP);; // unsigned long x2 = *(unsigned long *)(i + NewP + 4);; // }; //; // 2: D/DS form with update preparation, prepare the load/store instructions so; // that we can use update form to do pre-increment.; // Generically, this means transforming loops like this:; // for (int i = 0; i < n; ++i); // array[i] = c;; //; // to look like this:; //; // T *p = array[-1];; // for (int i = 0; i < n; ++i); // *++p = c;; //; // 3: common multiple chains for the load/stores with same offsets in the loop,; // so that we can reuse the offsets and reduce the register pressure in the; // loop. This transformation can also increase the loop ILP as now each chain; // uses its own loop induction add/addi. But this will increase the number of; // add/addi in the loop.; //; // Generically, this means transforming loops like th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp:602,variab,variables,602,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,1,['variab'],['variables']
Modifiability,"//===------- DebugObjectManagerPlugin.cpp - JITLink debug objects ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // FIXME: Update Plugin to poke the debug object into a new JITLink section,; // rather than creating a new allocation.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp:397,Plugin,Plugin,397,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/DebugObjectManagerPlugin.cpp,1,['Plugin'],['Plugin']
Modifiability,"//===-------- llvm/GlobalAlias.h - GlobalAlias class ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the declaration of the GlobalAlias class, which; // represents a single function or variable alias in the IR.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalAlias.h:486,variab,variable,486,interpreter/llvm-project/llvm/include/llvm/IR/GlobalAlias.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalAlias.h,1,['variab'],['variable']
Modifiability,"//===---------- PPCTLSDynamicCall.cpp - TLS Dynamic Call Fixup ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass expands ADDItls{ld,gd}LADDR[32] machine instructions into; // separate ADDItls[gd]L[32] and GETtlsADDR[32] instructions, both of; // which define GPR3. A copy is added from GPR3 to the target virtual; // register of the original instruction. The GETtlsADDR[32] is really; // a call instruction, so its target register is constrained to be GPR3.; // This is not true of ADDItls[gd]L[32], but there is a legacy linker; // optimization bug that requires the target register of the addi of; // a local- or general-dynamic TLS access sequence to be GPR3.; //; // This is done in a late pass so that TLS variable accesses can be; // fully commoned by MachineCSE.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTLSDynamicCall.cpp:991,variab,variable,991,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTLSDynamicCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTLSDynamicCall.cpp,1,['variab'],['variable']
Modifiability,"//===-------------- BPFMIPeephole.cpp - MI Peephole Cleanups -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass performs peephole optimizations to cleanup ugly code sequences at; // MachineInstruction layer.; //; // Currently, there are two optimizations implemented:; // - One pre-RA MachineSSA pass to eliminate type promotion sequences, those; // zero extend 32-bit subregisters to 64-bit registers, if the compiler; // could prove the subregisters is defined by 32-bit operations in which; // case the upper half of the underlying 64-bit registers were zeroed; // implicitly.; //; // - One post-RA PreEmit pass to do final cleanup on some redundant; // instructions generated due to bad RA on subregister.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIPeephole.cpp:635,extend,extend,635,interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIPeephole.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIPeephole.cpp,1,['extend'],['extend']
Modifiability,"//===-------------- GCNRewritePartialRegUses.cpp --------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// RenameIndependentSubregs pass leaves large partially used super registers,; /// for example:; /// undef %0.sub4:VReg_1024 = ...; /// %0.sub5:VReg_1024 = ...; /// %0.sub6:VReg_1024 = ...; /// %0.sub7:VReg_1024 = ...; /// use %0.sub4_sub5_sub6_sub7; /// use %0.sub6_sub7; ///; /// GCNRewritePartialRegUses goes right after RenameIndependentSubregs and; /// rewrites such partially used super registers with registers of minimal size:; /// undef %0.sub0:VReg_128 = ...; /// %0.sub1:VReg_128 = ...; /// %0.sub2:VReg_128 = ...; /// %0.sub3:VReg_128 = ...; /// use %0.sub0_sub1_sub2_sub3; /// use %0.sub2_sub3; ///; /// This allows to avoid subreg lanemasks tracking during register pressure; /// calculation and creates more possibilities for the code unaware of lanemasks; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNRewritePartialRegUses.cpp:746,rewrite,rewrites,746,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNRewritePartialRegUses.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNRewritePartialRegUses.cpp,1,['rewrite'],['rewrites']
Modifiability,"//===---------------- DecoderEmitter.cpp - Decoder Generator --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // It contains the tablegen backend that emits the decoder functions for; // targets with fixed/variable length instruction set.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DecoderEmitter.cpp:476,variab,variable,476,interpreter/llvm-project/llvm/utils/TableGen/DecoderEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DecoderEmitter.cpp,1,['variab'],['variable']
Modifiability,"//===------------------- AMDGPUCustomBehaviour.h ----------------*-C++ -* -===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the AMDGPUCustomBehaviour class which inherits from; /// CustomBehaviour. This class is used by the tool llvm-mca to enforce; /// target specific behaviour that is not expressed well enough in the; /// scheduling model for mca to enforce it automatically.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCA/AMDGPUCustomBehaviour.h:452,inherit,inherits,452,interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCA/AMDGPUCustomBehaviour.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCA/AMDGPUCustomBehaviour.h,1,['inherit'],['inherits']
Modifiability,"//===------------------- llvm/CodeGen/DwarfEHPrepare.h ----------*- C++-*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass mulches exception handling code into a form adapted to code; // generation. Required if using dwarf exception handling.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/DwarfEHPrepare.h:437,adapt,adapted,437,interpreter/llvm-project/llvm/include/llvm/CodeGen/DwarfEHPrepare.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/DwarfEHPrepare.h,1,['adapt'],['adapted']
Modifiability,"//===-------------------- RISCVCustomBehaviour.h -----------------*-C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the RISCVCustomBehaviour class which inherits from; /// CustomBehaviour. This class is used by the tool llvm-mca to enforce; /// target specific behaviour that is not expressed well enough in the; /// scheduling model for mca to enforce it automatically.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/MCA/RISCVCustomBehaviour.h:451,inherit,inherits,451,interpreter/llvm-project/llvm/lib/Target/RISCV/MCA/RISCVCustomBehaviour.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/MCA/RISCVCustomBehaviour.h,1,['inherit'],['inherits']
Modifiability,"//===-------------------- X86CustomBehaviour.h ------------------*-C++ -* -===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the X86CustomBehaviour class which inherits from; /// CustomBehaviour. This class is used by the tool llvm-mca to enforce; /// target specific behaviour that is not expressed well enough in the; /// scheduling model for mca to enforce it automatically.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCA/X86CustomBehaviour.h:449,inherit,inherits,449,interpreter/llvm-project/llvm/lib/Target/X86/MCA/X86CustomBehaviour.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCA/X86CustomBehaviour.h,1,['inherit'],['inherits']
Modifiability,"//===---------------------- CustomBehaviour.h -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the base class CustomBehaviour which can be inherited from; /// by specific targets (ex. llvm/tools/llvm-mca/lib/X86CustomBehaviour.h).; /// CustomBehaviour is designed to enforce custom behaviour and dependencies; /// within the llvm-mca pipeline simulation that llvm-mca isn't already capable; /// of extracting from the Scheduling Models.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h:458,inherit,inherited,458,interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,1,['inherit'],['inherited']
Modifiability,"//===------------------------ MapLattice.h ----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a parameterized lattice that maps keys to individual; // lattice elements (of the parameter lattice type). A typical usage is lifting; // a particular lattice to all variables in a lexical scope.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/MapLattice.h:403,parameteriz,parameterized,403,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/MapLattice.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/MapLattice.h,2,"['parameteriz', 'variab']","['parameterized', 'variables']"
Modifiability,"//===----------------------------------------------------------------------===//; // AArch64 Inline Assembly Support; //===----------------------------------------------------------------------===//; // Table of Constraints; // TODO: This is the current set of constraints supported by ARM for the; // compiler, not all of them may make sense.; //; // r - A general register; // w - An FP/SIMD register of some size in the range v0-v31; // x - An FP/SIMD register of some size in the range v0-v15; // I - Constant that can be used with an ADD instruction; // J - Constant that can be used with a SUB instruction; // K - Constant that can be used with a 32-bit logical instruction; // L - Constant that can be used with a 64-bit logical instruction; // M - Constant that can be used as a 32-bit MOV immediate; // N - Constant that can be used as a 64-bit MOV immediate; // Q - A memory reference with base register and no offset; // S - A symbolic address; // Y - Floating point constant zero; // Z - Integer constant zero; //; // Note that general register operands will be output using their 64-bit x; // register name, whatever the size of the variable, unless the asm operand; // is prefixed by the %w modifier. Floating-point and SIMD register operands; // will be output with the v prefix unless prefixed by the %b, %h, %s, %d or; // %q modifier.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:1146,variab,variable,1146,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['variab'],['variable']
Modifiability,//===----------------------------------------------------------------------===//; // Adapters for FoldingSet.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:85,Adapt,Adapters,85,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,1,['Adapt'],['Adapters']
Modifiability,//===----------------------------------------------------------------------===//; // Branch processing.; //===----------------------------------------------------------------------===//; /// RecoverCastedSymbol - A helper function for ProcessBranch that is used; /// to try to recover some path-sensitivity for casts of symbolic; /// integers that promote their values (which are currently not tracked well).; /// This function returns the SVal bound to Condition->IgnoreCasts if all the; // cast(s) did was sign-extend the original value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp:513,extend,extend,513,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp,1,['extend'],['extend']
Modifiability,"//===----------------------------------------------------------------------===//; // Cast traits; //===----------------------------------------------------------------------===//; /// All of these cast traits are meant to be implementations for useful casts; /// that users may want to use that are outside the standard behavior. An; /// example of how to use a special cast called `CastTrait` is:; ///; /// template<> struct CastInfo<foo, bar> : public CastTrait<foo, bar> {};; ///; /// Essentially, if your use case falls directly into one of the use cases; /// supported by a given cast trait, simply inherit your special CastInfo; /// directly from one of these to avoid having to reimplement the boilerplate; /// `isPossible/castFailed/doCast/doCastIfPossible`. A cast trait can also; /// provide a subset of those functions.; /// This cast trait just provides castFailed for the specified `To` type to make; /// CastInfo specializations more declarative. In order to use this, the target; /// result type must be `To` and `To` must be constructible from `nullptr`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h:604,inherit,inherit,604,interpreter/llvm-project/llvm/include/llvm/Support/Casting.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h,1,['inherit'],['inherit']
Modifiability,"//===----------------------------------------------------------------------===//; // CastInfo; //===----------------------------------------------------------------------===//; /// This struct provides a method for customizing the way a cast is performed.; /// It inherits from CastIsPossible, to support the case of declaring many; /// CastIsPossible specializations without having to specialize the full; /// CastInfo.; ///; /// In order to specialize different behaviors, specify different functions in; /// your CastInfo specialization.; /// For isa<> customization, provide:; ///; /// `static bool isPossible(const From &f)`; ///; /// For cast<> customization, provide:; ///; /// `static To doCast(const From &f)`; ///; /// For dyn_cast<> and the *_if_present<> variants' customization, provide:; ///; /// `static To castFailed()` and `static To doCastIfPossible(const From &f)`; ///; /// Your specialization might look something like this:; ///; /// template<> struct CastInfo<foo, bar> : public CastIsPossible<foo, bar> {; /// static inline foo doCast(const bar &b) {; /// return foo(const_cast<bar &>(b));; /// }; /// static inline foo castFailed() { return foo(); }; /// static inline foo doCastIfPossible(const bar &b) {; /// if (!CastInfo<foo, bar>::isPossible(b)); /// return castFailed();; /// return doCast(b);; /// }; /// };; // The default implementations of CastInfo don't use cast traits for now because; // we need to specify types all over the place due to the current expected; // casting behavior and the way cast_retty works. New use cases can and should; // take advantage of the cast traits whenever possible!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h:264,inherit,inherits,264,interpreter/llvm-project/llvm/include/llvm/Support/Casting.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Casting.h,1,['inherit'],['inherits']
Modifiability,"//===----------------------------------------------------------------------===//; // Check: floating point variable used as loop counter.; // Implements: CERT security coding advisory FLP-30.; //===----------------------------------------------------------------------===//; // Returns either 'x' or 'y', depending on which one of them is incremented; // in 'expr', or nullptr if none of them is incremented.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp:107,variab,variable,107,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,1,['variab'],['variable']
Modifiability,"//===----------------------------------------------------------------------===//; // Checker option resolving and validating.; //===----------------------------------------------------------------------===//; /// Insert the checker/package option to AnalyzerOptions' config table, and; /// validate it, if the user supplied it on the command line.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp:267,config,config,267,interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp,1,['config'],['config']
Modifiability,"//===----------------------------------------------------------------------===//; // Clang Extensions; //===----------------------------------------------------------------------===//; /// ExtVectorElementExpr - This represents access to specific elements of a; /// vector, and may occur on the left hand side or right hand side. For example; /// the following is legal: ""V.xy = V.zw"" if V is a 4 element extended vector.; ///; /// Note that the base may have either vector or pointer to vector type, just; /// like a struct field reference.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h:405,extend,extended,405,interpreter/llvm-project/clang/include/clang/AST/Expr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h,1,['extend'],['extended']
Modifiability,"//===----------------------------------------------------------------------===//; // Command line option processing entry point.; //; // Returns true on success. Otherwise, this will print the error message to; // stderr and exit if \p Errs is not set (nullptr by default), or print the; // error message to \p Errs and return false if \p Errs is provided.; //; // If EnvVar is not nullptr, command-line options are also parsed from the; // environment variable named by EnvVar. Precedence is given to occurrences; // from argv. This precedence is currently implemented by parsing argv after; // the environment variable, so it is only implemented correctly for options; // that give precedence to later occurrences. If your program supports options; // that give precedence to earlier occurrences, you will need to extend this; // function to support it correctly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:453,variab,variable,453,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,3,"['extend', 'variab']","['extend', 'variable']"
Modifiability,//===----------------------------------------------------------------------===//; // Config register definitions; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600Defines.h:85,Config,Config,85,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600Defines.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600Defines.h,1,['Config'],['Config']
Modifiability,//===----------------------------------------------------------------------===//; // ConfigDumper; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DebugCheckers.cpp:85,Config,ConfigDumper,85,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DebugCheckers.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DebugCheckers.cpp,1,['Config'],['ConfigDumper']
Modifiability,//===----------------------------------------------------------------------===//; // Default storage class definition: external storage. This implementation; // assumes the user will specify a variable to store the data into with the; // cl::location(x) modifier.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:193,variab,variable,193,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,3,['variab'],['variable']
Modifiability,//===----------------------------------------------------------------------===//; // Extend CXDiagnosticSetImpl which contains strings for diagnostics.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXLoadedDiagnostic.cpp:85,Extend,Extend,85,interpreter/llvm-project/clang/tools/libclang/CXLoadedDiagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CXLoadedDiagnostic.cpp,1,['Extend'],['Extend']
Modifiability,//===----------------------------------------------------------------------===//; // Extends; //; /// getArithShiftValue - get the arithmetic shift value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h:85,Extend,Extends,85,interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/MCTargetDesc/AArch64AddressingModes.h,1,['Extend'],['Extends']
Modifiability,//===----------------------------------------------------------------------===//; // IV Widening - Extend the width of an IV to cover its widest uses.; //===----------------------------------------------------------------------===//; /// Update information about the induction variable that is extended by this; /// sign or zero extend operation. This is used to determine the final width of; /// the IV before actually widening it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:99,Extend,Extend,99,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,4,"['Extend', 'extend', 'variab']","['Extend', 'extend', 'extended', 'variable']"
Modifiability,//===----------------------------------------------------------------------===//; // IntervalUpdate class.; //===----------------------------------------------------------------------===//; /// Toolkit used by handleMove to trim or extend live intervals.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp:232,extend,extend,232,interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,1,['extend'],['extend']
Modifiability,"//===----------------------------------------------------------------------===//; // Kinds of Template Parameters; //===----------------------------------------------------------------------===//; /// Defines the position of a template parameter within a template; /// parameter list.; ///; /// Because template parameter can be listed; /// sequentially for out-of-line template members, each template parameter is; /// given a Depth - the nesting of template parameter scopes - and a Position -; /// the occurrence within the parameter list.; /// This class is inheritedly privately by different kinds of template; /// parameters and is not part of the Decl hierarchy. Just a facility.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h:562,inherit,inheritedly,562,interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h,1,['inherit'],['inheritedly']
Modifiability,"//===----------------------------------------------------------------------===//; // LValue Evaluation; //; // This is used for evaluating lvalues (in C and C++), xvalues (in C++11),; // function designators (in C), decl references to void objects (in C), and; // temporaries (if building with -Wno-address-of-temporary).; //; // LValue evaluation produces values comprising a base expression of one of the; // following types:; // - Declarations; // * VarDecl; // * FunctionDecl; // - Literals; // * CompoundLiteralExpr in C (and in global scope in C++); // * StringLiteral; // * PredefinedExpr; // * ObjCStringLiteralExpr; // * ObjCEncodeExpr; // * AddrLabelExpr; // * BlockExpr; // * CallExpr for a MakeStringConstant builtin; // - typeid(T) expressions, as TypeInfoLValues; // - Locals and temporaries; // * MaterializeTemporaryExpr; // * Any Expr, with a CallIndex indicating the function in which the temporary; // was evaluated, for cases where the MaterializeTemporaryExpr is missing; // from the AST (FIXME).; // * A MaterializeTemporaryExpr that has static storage duration, with no; // CallIndex, for a lifetime-extended temporary.; // * The ConstantExpr that is currently being evaluated during evaluation of an; // immediate invocation.; // plus an offset in bytes.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:1123,extend,extended,1123,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['extend'],['extended']
Modifiability,//===----------------------------------------------------------------------===//; // Lazily generated map to query the external variables referenced by a Block.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/AnalysisDeclContext.cpp:128,variab,variables,128,interpreter/llvm-project/clang/lib/Analysis/AnalysisDeclContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/AnalysisDeclContext.cpp,1,['variab'],['variables']
Modifiability,//===----------------------------------------------------------------------===//; // Meta Data Emission; //===----------------------------------------------------------------------===//; /// RewriteImplementations - This routine rewrites all method implementations; /// and emits meta-data.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:191,Rewrite,RewriteImplementations,191,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,4,"['Rewrite', 'rewrite']","['RewriteImplementations', 'rewrites']"
Modifiability,"//===----------------------------------------------------------------------===//; // Methods for easy access to the global variables in the module.; //; // getNamedAlias - Look up the specified global in the module symbol table.; // If it does not exist, return null.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Module.cpp:123,variab,variables,123,interpreter/llvm-project/llvm/lib/IR/Module.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Module.cpp,1,['variab'],['variables']
Modifiability,"//===----------------------------------------------------------------------===//; // Methods for easy access to the global variables in the module.; //; /// getGlobalVariable - Look up the specified global variable in the module; /// symbol table. If it does not exist, return null. The type argument; /// should be the underlying type of the global, i.e., it should not have; /// the top-level PointerType, which represents the address of the global.; /// If AllowLocal is set to true, this function will return types that; /// have an local. By default, these types are not returned.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Module.cpp:123,variab,variables,123,interpreter/llvm-project/llvm/lib/IR/Module.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Module.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"//===----------------------------------------------------------------------===//; // Misc utilities; //===----------------------------------------------------------------------===//; /// Negate an APSInt in place, converting it to a signed form if necessary, and; /// preserving its value (by extending by up to one bit as needed).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:293,extend,extending,293,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['extend'],['extending']
Modifiability,//===----------------------------------------------------------------------===//; // Numeric substitution handling code.; //===----------------------------------------------------------------------===//; /// Type representing the format an expression value should be textualized into; /// for matching. Used to represent both explicit format specifiers as well as; /// implicit format from using numeric variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:404,variab,variables,404,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,1,['variab'],['variables']
Modifiability,//===----------------------------------------------------------------------===//; // ObjCQualifiedIdTypesAreCompatible - Compatibility testing for qualified id's.; //===----------------------------------------------------------------------===//; /// ProtocolCompatibleWithProtocol - return 'true' if 'lProto' is in the; /// inheritance hierarchy of 'rProto'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:324,inherit,inheritance,324,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['inherit'],['inheritance']
Modifiability,"//===----------------------------------------------------------------------===//; // Output Stream Adaptors; //===----------------------------------------------------------------------===//; /// A raw_ostream that writes to an std::string. This is a simple adaptor; /// class. This class does not encounter output errors.; /// raw_string_ostream operates without a buffer, delegating all memory; /// management to the std::string. Thus the std::string is always up-to-date,; /// may be used directly and there is no need to call flush().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h:99,Adapt,Adaptors,99,interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,2,"['Adapt', 'adapt']","['Adaptors', 'adaptor']"
Modifiability,"//===----------------------------------------------------------------------===//; // Overview:; // The Pass Manager Infrastructure manages passes. It's responsibilities are:; //; // o Manage optimization pass execution order; // o Make required Analysis information available before pass P is run; // o Release memory occupied by dead passes; // o If Analysis information is dirtied by a pass then regenerate Analysis; // information before it is consumed by another pass.; //; // Pass Manager Infrastructure uses multiple pass managers. They are; // PassManager, FunctionPassManager, MPPassManager, FPPassManager, BBPassManager.; // This class hierarchy uses multiple inheritance but pass managers do not; // derive from another pass manager.; //; // PassManager and FunctionPassManager are two top-level pass manager that; // represents the external interface of this entire pass manager infrastucture.; //; // Important classes :; //; // [o] class PMTopLevelManager;; //; // Two top level managers, PassManager and FunctionPassManager, derive from; // PMTopLevelManager. PMTopLevelManager manages information used by top level; // managers such as last user info.; //; // [o] class PMDataManager;; //; // PMDataManager manages information, e.g. list of available analysis info,; // used by a pass manager to manage execution order of passes. It also provides; // a place to implement common pass manager APIs. All pass managers derive from; // PMDataManager.; //; // [o] class FunctionPassManager;; //; // This is a external interface used to manage FunctionPasses. This; // interface relies on FunctionPassManagerImpl to do all the tasks.; //; // [o] class FunctionPassManagerImpl : public ModulePass, PMDataManager,; // public PMTopLevelManager;; //; // FunctionPassManagerImpl is a top level manager. It manages FPPassManagers; //; // [o] class FPPassManager : public ModulePass, public PMDataManager;; //; // FPPassManager manages FunctionPasses and BBPassManagers; //; // [o] class MPPassManag",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h:669,inherit,inheritance,669,interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,1,['inherit'],['inheritance']
Modifiability,"//===----------------------------------------------------------------------===//; // Parameterizable parser for different data types. By default, known data types; // (string, int, bool) have specialized parsers, that do what you would expect.; // The default parser, used for data types that are not built-in, uses a mapping; // table to map specific options to values, which is used, among other things,; // to handle enum types.; //--------------------------------------------------; // This class holds all the non-generic code that we do not need replicated for; // every instance of the generic parser. This also allows us to put stuff into; // CommandLine.cpp; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:85,Parameteriz,Parameterizable,85,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,1,['Parameteriz'],['Parameterizable']
Modifiability,//===----------------------------------------------------------------------===//; // Pass Pipeline Configuration; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRTargetMachine.cpp:99,Config,Configuration,99,interpreter/llvm-project/llvm/lib/Target/AVR/AVRTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRTargetMachine.cpp,4,['Config'],['Configuration']
Modifiability,"//===----------------------------------------------------------------------===//; // Pattern handling code.; //===----------------------------------------------------------------------===//; /// Class holding the Pattern global state, shared by all patterns: tables; /// holding values of variables and whether they are defined or not at any; /// given time in the matching process.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h:289,variab,variables,289,interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheckImpl.h,1,['variab'],['variables']
Modifiability,"//===----------------------------------------------------------------------===//; // Resolvers; //===----------------------------------------------------------------------===//; /// Interface for looking up the initializer for a variable name, used by; /// Init::resolveReferences.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h:229,variab,variable,229,interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h,1,['variab'],['variable']
Modifiability,"//===----------------------------------------------------------------------===//; // RewriteRope Implementation; //===----------------------------------------------------------------------===//; /// MakeRopeString - This copies the specified byte range into some instance of; /// RopeRefCountString, and return a RopePiece that represents it. This uses; /// the AllocBuffer object to aggregate requests for small strings into one; /// allocation instead of doing tons of tiny allocations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp:85,Rewrite,RewriteRope,85,interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,1,['Rewrite'],['RewriteRope']
Modifiability,"//===----------------------------------------------------------------------===//; // Rewriter class; //===----------------------------------------------------------------------===//; /// getRangeSize - Return the size in bytes of the specified range if they; /// are in the same file. If not, this returns -1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/Rewriter.cpp:85,Rewrite,Rewriter,85,interpreter/llvm-project/clang/lib/Rewrite/Rewriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/Rewriter.cpp,1,['Rewrite'],['Rewriter']
Modifiability,"//===----------------------------------------------------------------------===//; // RopePieceBTreeNode Class; //===----------------------------------------------------------------------===//; /// RopePieceBTreeNode - Common base class of RopePieceBTreeLeaf and; /// RopePieceBTreeInterior. This provides some 'virtual' dispatching methods; /// and a flag that determines which subclass the instance is. Also; /// important, this node knows the full extend of the node, including any; /// children that it has. This allows efficient skipping over entire subtrees; /// when looking for an offset in the BTree.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp:450,extend,extend,450,interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,1,['extend'],['extend']
Modifiability,"//===----------------------------------------------------------------------===//; // Stack Protector; //===----------------------------------------------------------------------===//; // For OpenBSD return its special guard variable. Otherwise return nullptr,; // so that SelectionDAG handle SSP.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringBase.cpp:224,variab,variable,224,interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringBase.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringBase.cpp,1,['variab'],['variable']
Modifiability,//===----------------------------------------------------------------------===//; // Stack of data-sharing attributes for variables; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:122,variab,variables,122,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variables']
Modifiability,"//===----------------------------------------------------------------------===//; // Trait classes that contain element comparison operators and type; // definitions used by ImutAVLTree, ImmutableSet, and ImmutableMap. These; // inherit from the profile traits (ImutProfileInfo) to include operations; // for element profiling.; //===----------------------------------------------------------------------===//; /// ImutContainerInfo - Generic definition of comparison operations for; /// elements of immutable containers that defaults to using; /// std::equal_to<> and std::less<> to perform comparison of elements.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h:229,inherit,inherit,229,interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,1,['inherit'],['inherit']
Modifiability,//===----------------------------------------------------------------------===//; // Variable; //===----------------------------------------------------------------------===//; /// A variable is a simple class that just has a type and a name.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/NeonEmitter.cpp:85,Variab,Variable,85,interpreter/llvm-project/clang/utils/TableGen/NeonEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/NeonEmitter.cpp,2,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,//===----------------------------------------------------------------------===//; // VirtRegRewriter; //===----------------------------------------------------------------------===//; //; // The VirtRegRewriter is the last of the register allocator passes.; // It rewrites virtual registers to physical registers as specified in the; // VirtRegMap analysis. It also updates live-in information on basic blocks; // according to LiveIntervals.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VirtRegMap.cpp:264,rewrite,rewrites,264,interpreter/llvm-project/llvm/lib/CodeGen/VirtRegMap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VirtRegMap.cpp,1,['rewrite'],['rewrites']
Modifiability,//===----------------------------------------------------------------------===//; // Widen Induction Variables - Extend the width of an IV to cover its; // widest uses.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp:101,Variab,Variables,101,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,2,"['Extend', 'Variab']","['Extend', 'Variables']"
Modifiability,"//===----------------------------------------------------------------------===//; // gcdMIVtest -; // Tests an MIV subscript pair for dependence.; // Returns true if any possible dependence is disproved.; // Marks the result as inconsistent.; // Can sometimes disprove the equal direction for 1 or more loops,; // as discussed in Michael Wolfe's book,; // High Performance Compilers for Parallel Computing, page 235.; //; // We spend some effort (code!) to handle cases like; // [10*i + 5*N*j + 15*M + 6], where i and j are induction variables,; // but M and N are just loop-invariant variables.; // This should help us handle linearized subscripts;; // also makes this test a useful backup to the various SIV tests.; //; // It occurs to me that the presence of loop-invariant variables; // changes the nature of the test from ""greatest common divisor""; // to ""a common divisor"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:534,variab,variables,534,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,3,['variab'],['variables']
Modifiability,"//===----------------------------------------------------------------------===//; // linearFunctionTestReplace and its kin. Rewrite the loop exit condition.; //===----------------------------------------------------------------------===//; /// Given an Value which is hoped to be part of an add recurance in the given; /// loop, return the associated Phi node if so. Otherwise, return null. Note; /// that this is less general than SCEVs AddRec checking.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:124,Rewrite,Rewrite,124,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['Rewrite'],['Rewrite']
Modifiability,"//===----------------------------------------------------------------------===//; // rewriteLoopExitValues - Optimize IV users outside the loop.; // As a side effect, reduces the amount of IV processing within the loop.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp:85,rewrite,rewriteLoopExitValues,85,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,1,['rewrite'],['rewriteLoopExitValues']
Modifiability,//===----------------------------------------------------------------------===//; // rewriteObjCRedundantCallWithLiteral.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp:85,rewrite,rewriteObjCRedundantCallWithLiteral,85,interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,1,['rewrite'],['rewriteObjCRedundantCallWithLiteral']
Modifiability,//===----------------------------------------------------------------------===//; // rewriteToArrayLiteral.; //===----------------------------------------------------------------------===//; /// Adds an explicit cast to 'id' if the type is not objc object.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp:85,rewrite,rewriteToArrayLiteral,85,interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,1,['rewrite'],['rewriteToArrayLiteral']
Modifiability,"//===----------------------------------------------------------------------===//; // rewriteToDictionaryLiteral.; //===----------------------------------------------------------------------===//; /// If \c Msg is an NSArray creation message or literal, this gets the; /// objects that were used to create it.; /// \returns true if it is an NSArray and we got objects, or false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp:85,rewrite,rewriteToDictionaryLiteral,85,interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,1,['rewrite'],['rewriteToDictionaryLiteral']
Modifiability,//===----------------------------------------------------------------------===//; // rewriteToNumberLiteral.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp:85,rewrite,rewriteToNumberLiteral,85,interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,1,['rewrite'],['rewriteToNumberLiteral']
Modifiability,//===----------------------------------------------------------------------===//; // rewriteToNumericBoxedExpression.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp:85,rewrite,rewriteToNumericBoxedExpression,85,interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,1,['rewrite'],['rewriteToNumericBoxedExpression']
Modifiability,//===----------------------------------------------------------------------===//; // rewriteToObjCLiteralSyntax.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp:85,rewrite,rewriteToObjCLiteralSyntax,85,interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,1,['rewrite'],['rewriteToObjCLiteralSyntax']
Modifiability,"//===----------------------------------------------------------------------===//; // rewriteToObjCSubscriptSyntax.; //===----------------------------------------------------------------------===//; /// Check for classes that accept 'objectForKey:' (or the other selectors; /// that the migrator handles) but return their instances as 'id', resulting; /// in the compiler resolving 'objectForKey:' as the method from NSDictionary.; ///; /// When checking if we can convert to subscripting syntax, check whether; /// the receiver is a result of a class method from a hardcoded list of; /// such classes. In such a case return the specific class as the interface; /// of the receiver.; ///; /// FIXME: Remove this when these classes start using 'instancetype'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp:85,rewrite,rewriteToObjCSubscriptSyntax,85,interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,1,['rewrite'],['rewriteToObjCSubscriptSyntax']
Modifiability,//===----------------------------------------------------------------------===//; // rewriteToStringBoxedExpression.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp:85,rewrite,rewriteToStringBoxedExpression,85,interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/RewriteObjCFoundationAPI.cpp,1,['rewrite'],['rewriteToStringBoxedExpression']
Modifiability,"//===----------------------------------------------------------------------===//; //--- IntervalMapImpl::NodeRef ---//; //===----------------------------------------------------------------------===//; //; // B+-tree nodes can be leaves or branches, so we need a polymorphic node; // pointer that can point to both kinds.; //; // All nodes are cache line aligned and the low 6 bits of a node pointer are; // always 0. These bits are used to store the number of elements in the; // referenced node. Besides saving space, placing node sizes in the parents; // allow tree balancing algorithms to run without faulting cache lines for nodes; // that may not need to be modified.; //; // A NodeRef doesn't know whether it references a leaf node or a branch node.; // It is the responsibility of the caller to use the correct types.; //; // Nodes are never supposed to be empty, and it is invalid to store a node size; // of 0 in a NodeRef. The valid range of sizes is 1-64.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h:263,polymorphi,polymorphic,263,interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,1,['polymorphi'],['polymorphic']
Modifiability,"//===----------------------------------------------------------------------===//; /// 'undef' values are things that do not have specified contents.; /// These are used for a variety of purposes, including global variable; /// initializers and operands to instructions. 'undef' values can occur with; /// any first-class type.; ///; /// Undef values aren't exactly constants; if they have multiple uses, they; /// can appear to have different bit patterns at each use. See; /// LangRef.html#undefvalues for details.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h:213,variab,variable,213,interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,1,['variab'],['variable']
Modifiability,"//===----------------------------------------------------------------------===//; /// A single entry single exit Region.; ///; /// A Region is a connected subgraph of a control flow graph that has exactly; /// two connections to the remaining graph. It can be used to analyze or; /// optimize parts of the control flow graph.; ///; /// A <em> simple Region </em> is connected to the remaining graph by just two; /// edges. One edge entering the Region and another one leaving the Region.; ///; /// An <em> extended Region </em> (or just Region) is a subgraph that can be; /// transform into a simple Region. The transformation is done by adding; /// BasicBlocks that merge several entry or exit edges so that after the merge; /// just one entry and one exit edge exists.; ///; /// The \e Entry of a Region is the first BasicBlock that is passed after; /// entering the Region. It is an element of the Region. The entry BasicBlock; /// dominates all BasicBlocks in the Region.; ///; /// The \e Exit of a Region is the first BasicBlock that is passed after; /// leaving the Region. It is not an element of the Region. The exit BasicBlock,; /// postdominates all BasicBlocks in the Region.; ///; /// A <em> canonical Region </em> cannot be constructed by combining smaller; /// Regions.; ///; /// Region A is the \e parent of Region B, if B is completely contained in A.; ///; /// Two canonical Regions either do not intersect at all or one is; /// the parent of the other.; ///; /// The <em> Program Structure Tree</em> is a graph (V, E) where V is the set of; /// Regions in the control flow graph and E is the \e parent relation of these; /// Regions.; ///; /// Example:; ///; /// \verbatim; /// A simple control flow graph, that contains two regions.; ///; /// 1; /// / |; /// 2 |; /// / \ 3; /// 4 5 |; /// | | |; /// 6 7 8; /// \ | /; /// \ |/ Region A: 1 -> 9 {1,2,3,4,5,6,7,8}; /// 9 Region B: 2 -> 9 {2,4,5,6,7}; /// \endverbatim; ///; /// You can obtain more examples by either calling; ///; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h:506,extend,extended,506,interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionInfo.h,1,['extend'],['extended']
Modifiability,//===----------------------------------------------------------------------===//; /// DbgVariableIntrinsic - This is the common base class for debug info; /// intrinsics for variables.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/IntrinsicInst.cpp:174,variab,variables,174,interpreter/llvm-project/llvm/lib/IR/IntrinsicInst.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/IntrinsicInst.cpp,1,['variab'],['variables']
Modifiability,//===----------------------------------------------------------------------===//; /// SelectionDAGBuilder - This is the common target-independent lowering; /// implementation that is parameterized by a TargetLowering object.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h:183,parameteriz,parameterized,183,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,1,['parameteriz'],['parameterized']
Modifiability,//===----------------------------------------------------------------------===//; /// Targets can subclass this to parameterize the; /// SelectionDAG lowering and instruction selection process.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGTargetInfo.h:115,parameteriz,parameterize,115,interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGTargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGTargetInfo.h,1,['parameteriz'],['parameterize']
Modifiability,//===----------------------------------------------------------------------===//; /// This class is defined as the common parent of DbgVariable and DbgLabel; /// such that it could levarage polymorphism to extract common code for; /// DbgVariable and DbgLabel.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.h:190,polymorphi,polymorphism,190,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.h,1,['polymorphi'],['polymorphism']
Modifiability,//===----------------------------------------------------------------------===//; //; // LoopStrengthReduce - This pass is strength reduces GEP instructions that use; // a loop's canonical induction variable as one of their indices.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h:199,variab,variable,199,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h,1,['variab'],['variable']
Modifiability,"//===----------------------------------------------------------------------===//; //; /// A wrapper around an intrusive list with callbacks and non-intrusive; /// ownership.; ///; /// This wraps a purely intrusive list (like simple_ilist) with a configurable; /// traits class. The traits can implement callbacks and customize the; /// ownership semantics.; ///; /// This is a subset of ilist functionality that can safely be used on nodes of; /// polymorphic types, i.e. a heterogeneous list with a common base class that; /// holds the next/prev pointers. The only state of the list itself is an; /// ilist_sentinel, which holds pointers to the first and last nodes in the; /// list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ilist.h:246,config,configurable,246,interpreter/llvm-project/llvm/include/llvm/ADT/ilist.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ilist.h,2,"['config', 'polymorphi']","['configurable', 'polymorphic']"
Modifiability,"//===---------------------------------------------------------------------===//; // rewriteFirstIterationLoopExitValues: Rewrite loop exit values if we know; // they will exit at the first iteration.; //===---------------------------------------------------------------------===//; /// Check to see if this loop has loop invariant conditions which lead to loop; /// exits. If so, we know that if the exit path is taken, it is at the first; /// loop iteration. This lets us predict exit values of PHI nodes that live in; /// loop header.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:84,rewrite,rewriteFirstIterationLoopExitValues,84,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,2,"['Rewrite', 'rewrite']","['Rewrite', 'rewriteFirstIterationLoopExitValues']"
Modifiability,//===---------------------------------------------------------------------===//; /// GlobalISel Configuration; //===---------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:96,Config,Configuration,96,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,1,['Config'],['Configuration']
Modifiability,//===---------------------------------------------------------------------===//; /// Post RegAlloc Pass Configuration; //===---------------------------------------------------------------------===//; /// Add passes that optimize machine instructions after register allocation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:104,Config,Configuration,104,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,2,['Config'],['Configuration']
Modifiability,//===---------------------------------------------------------------------===//; /// Register Allocation Pass Configuration; //===---------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp:110,Config,Configuration,110,interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetPassConfig.cpp,1,['Config'],['Configuration']
Modifiability,//===---------------------------------------------------------------------===//; /// Register Allocation Pass Configuration; //===---------------------------------------------------------------------===//; /// Instantiate the default register allocator pass for this target for either; /// the optimized or unoptimized allocation path. This will be added to the pass; /// manager by addFastRegAlloc in the unoptimized case or addOptimizedRegAlloc; /// in the optimized case.; ///; /// A target that uses the standard regalloc pass order for fast or optimized; /// allocation may still override this for per-target regalloc; /// selection. But -regalloc=... always takes precedence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:110,Config,Configuration,110,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,1,['Config'],['Configuration']
Modifiability,//===--------------------------------------------------------------------===//; // API to update live variable information; /// Recompute liveness from scratch for a virtual register \p Reg that is; /// known to have a single def that dominates all uses. This can be useful; /// after removing some uses of \p Reg. It is not necessary for the whole; /// machine function to be in SSA form.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h:102,variab,variable,102,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,1,['variab'],['variable']
Modifiability,"//===--------------------------------------------------------------------===//; // APIs for simple analysis of the loop.; //; // Note that all of these methods can fail on general loops (ie, there may not; // be a preheader, etc). For best success, the loop simplification and; // induction variable canonicalization pass should be used to normalize loops; // for easy analysis. These methods assume canonical loops.; /// Return all blocks inside the loop that have successors outside of the; /// loop. These are the blocks _inside of the current loop_ which branch out.; /// The returned list is always unique.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfo.h:291,variab,variable,291,interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericLoopInfo.h,1,['variab'],['variable']
Modifiability,"//===--------------------------------------------------------------------===//; // Addressing Mode #3; //===--------------------------------------------------------------------===//; //; // This is used for sign-extending loads, and load/store-pair instructions.; //; // addrmode3 := reg +/- reg; // addrmode3 := reg +/- imm8; //; // The first operand is always a Reg. The second operand is a reg if in; // reg/reg form, otherwise it's reg#0. The third field encodes the operation; // in bit 8, the immediate in bits 0-7. The fourth operand 9-10 encodes the; // index mode.; /// getAM3Opc - This function encodes the addrmode3 opc field.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h:212,extend,extending,212,interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMAddressingModes.h,1,['extend'],['extending']
Modifiability,"//===--------------------------------------------------------------------===//; // Block Bits; //===--------------------------------------------------------------------===//; /// Emit block literal.; /// \return an LLVM value which is a pointer to a struct which contains; /// information about the block, including the block invoke function, the; /// captured variables, etc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h:361,variab,variables,361,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,1,['variab'],['variables']
Modifiability,//===--------------------------------------------------------------------===//; // Builder configuration methods; //===--------------------------------------------------------------------===//; /// Clear the insertion point: created instructions will not be; /// inserted into a block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IRBuilder.h:91,config,configuration,91,interpreter/llvm-project/llvm/include/llvm/IR/IRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IRBuilder.h,1,['config'],['configuration']
Modifiability,"//===--------------------------------------------------------------------===//; // Configuration Interface; //===--------------------------------------------------------------------===//; /// If possible, pre-allocate \p ExtraSize bytes for stream data.; /// i.e. it extends internal buffers to keep additional ExtraSize bytes.; /// So that the stream could keep at least tell() + ExtraSize bytes; /// without re-allocations. reserveExtraSpace() does not change; /// the size/data of the stream.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h:83,Config,Configuration,83,interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,2,"['Config', 'extend']","['Configuration', 'extends']"
Modifiability,//===--------------------------------------------------------------------===//; // Constant configuration values for this lexer.; // Start of the buffer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h:92,config,configuration,92,interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,1,['config'],['configuration']
Modifiability,"//===--------------------------------------------------------------------===//; // Context-specific lexing flags set by the preprocessor.; //; /// ExtendedTokenMode - The lexer can optionally keep comments and whitespace; /// and return them as tokens. This is used for -C and -CC modes, and; /// whitespace preservation can be useful for some clients that want to lex; /// the file in raw mode and get every character from the file.; ///; /// When this is set to 2 it returns comments and whitespace. When set to 1; /// it returns comments, when it is set to 0 it returns normal tokens only.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h:147,Extend,ExtendedTokenMode,147,interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,1,['Extend'],['ExtendedTokenMode']
Modifiability,"//===--------------------------------------------------------------------===//; // High-level helper methods, useful for tablegen backends.; /// Get all the concrete records that inherit from the one specified; /// class. The class must be defined.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h:179,inherit,inherit,179,interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h,1,['inherit'],['inherit']
Modifiability,"//===--------------------------------------------------------------------===//; // Integer Promotion Support: LegalizeIntegerTypes.cpp; //===--------------------------------------------------------------------===//; /// Given a processed operand Op which was promoted to a larger integer type,; /// this returns the promoted value. The low bits of the promoted value; /// corresponding to the original type are exactly equal to Op.; /// The extra bits contain rubbish, so the promoted value may need to be zero-; /// or sign-extended from the original type before it is usable (the helpers; /// SExtPromotedInteger and ZExtPromotedInteger can do this for you).; /// For example, if Op is an i16 and was promoted to an i32, then this method; /// returns an i32, the lower 16 bits of which coincide with Op, and the upper; /// 16 bits of which contain rubbish.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.h:525,extend,extended,525,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeTypes.h,1,['extend'],['extended']
Modifiability,"//===--------------------------------------------------------------------===//; // Mid-level interface.; //===--------------------------------------------------------------------===//; //; // Modify existing live ranges.; //; /// Extend the live range of @p LR to reach @p Use.; ///; /// The existing values in @p LR must be live so they jointly dominate @p Use.; /// If @p Use is not dominated by a single existing value, PHI-defs are; /// inserted as required to preserve SSA form.; ///; /// PhysReg, when set, is used to verify live-in lists on basic blocks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h:230,Extend,Extend,230,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeCalc.h,1,['Extend'],['Extend']
Modifiability,"//===--------------------------------------------------------------------===//; // Miscellaneous creation methods.; //===--------------------------------------------------------------------===//; /// Make a new global variable with initializer type i8*; ///; /// Make a new global variable with an initializer that has array of i8 type; /// filled in with the null terminated string value specified. The new global; /// variable will be marked mergable with any others of the same contents. If; /// Name is specified, it is the name of the global variable created.; ///; /// If no module is given via \p M, it is take from the insertion point basic; /// block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IRBuilder.h:218,variab,variable,218,interpreter/llvm-project/llvm/include/llvm/IR/IRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/IRBuilder.h,4,['variab'],['variable']
Modifiability,"//===--------------------------------------------------------------------===//; // Portable bit mask operations.; //===--------------------------------------------------------------------===//; //; // These methods all operate on arrays of uint32_t, each holding 32 bits. The; // fixed word size makes it easier to work with literal bit vector constants; // in portable code.; //; // The LSB in each word is the lowest numbered bit. The size of a portable; // bit mask is always a whole multiple of 32 bits. If no bit mask size is; // given, the bit mask is assumed to cover the entire BitVector.; /// setBitsInMask - Add '1' bits from Mask to this vector. Don't resize.; /// This computes ""*this |= Mask"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/BitVector.h:83,Portab,Portable,83,interpreter/llvm-project/llvm/include/llvm/ADT/BitVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/BitVector.h,3,"['Portab', 'portab']","['Portable', 'portable']"
Modifiability,"//===--------------------------------------------------------------------===//; // RewriteRope Class; //===--------------------------------------------------------------------===//; /// RewriteRope - A powerful string class. This class supports extremely; /// efficient insertions and deletions into the middle of it, even for; /// ridiculously long strings.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h:83,Rewrite,RewriteRope,83,interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h,2,['Rewrite'],['RewriteRope']
Modifiability,//===--------------------------------------------------------------------===//; // TargetLowering Configuration Methods - These methods should be invoked by; // the derived class constructor to configure this object for the target.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:98,Config,Configuration,98,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,2,"['Config', 'config']","['Configuration', 'configure']"
Modifiability,//===--------------------------------------------------------------------===//; /// LoadExtType enum - This enum defines the three variants of LOADEXT; /// (load with extension).; ///; /// SEXTLOAD loads the integer operand and sign extends it to a larger; /// integer result type.; /// ZEXTLOAD loads the integer operand and zero extends it to a larger; /// integer result type.; /// EXTLOAD is used for two things: floating point extending loads and; /// integer extending loads [the top bits are undefined].,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h:233,extend,extends,233,interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ISDOpcodes.h,4,['extend'],"['extending', 'extends']"
Modifiability,"//===------------------------------------------------------------------===//; // Inline Asm Support; //===------------------------------------------------------------------===//; // These are hooks that targets can override to implement inline asm; // support. These should probably be moved out of AsmPrinter someday.; /// Print information related to the specified machine instr that is; /// independent of the operand, and may be independent of the instr itself.; /// This can be useful for portably encoding the comment character or other; /// bits of target-specific knowledge into the asmstrings. The syntax used is; /// ${:comment}. Targets can override this to add support for their own; /// strange codes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h:494,portab,portably,494,interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AsmPrinter.h,1,['portab'],['portably']
Modifiability,"//===------------------------------------------------------------------===//; // Properties to be set by the target writer, used to configure asm printer.; //; /// Code pointer size in bytes. Default is 4.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h:132,config,configure,132,interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h,1,['config'],['configure']
Modifiability,"//===-Config.h - LLVM Link Time Optimizer Configuration ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the lto::Config data structure, which allows clients to; // configure LTO.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/Config.h:6,Config,Config,6,interpreter/llvm-project/llvm/include/llvm/LTO/Config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/Config.h,4,"['Config', 'config']","['Config', 'Configuration', 'configure']"
Modifiability,"//===-LTO.h - LLVM Link Time Optimizer ------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares functions and classes used to support LTO. It is intended; // to be used both by LTO classes as well as by clients (gold-plugin) that; // don't utilize the LTO code generator interfaces.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h:523,plugin,plugin,523,interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/LTO.h,1,['plugin'],['plugin']
Modifiability,"//===-ThinLTOCodeGenerator.h - LLVM Link Time Optimizer -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the ThinLTOCodeGenerator class, similar to the; // LTOCodeGenerator but for the ThinLTO scheme. It provides an interface for; // linker plugin.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h:538,plugin,plugin,538,interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,1,['plugin'],['plugin']
Modifiability,"//====- Internalize.h - Internalization API ---------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass loops over all of the functions and variables in the input module.; // If the function or variable does not need to be preserved according to the; // client supplied callback, it is marked as internal.; //; // This transformation would not be legal in a regular compilation, but it gets; // extra information from the linker about what is safe.; //; // For example: Internalizing a function with external linkage. Only if we are; // told it is only used from within this module, it is safe to do it.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Internalize.h:429,variab,variables,429,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Internalize.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Internalize.h,2,['variab'],"['variable', 'variables']"
Modifiability,"//===========================================================================; // Done with TrainNodeInfo declaration; //===========================================================================; ////////////////////////////////////////////////////////////////////////////////; /// Decide how to split a node using one of the variables that gives; /// the best separation of signal/background. In order to do this, for each; /// variable a scan of the different cut values in a grid (grid = fNCuts) is; /// performed and the resulting separation gains are compared.; /// in addition to the individual variables, one can also ask for a fisher; /// discriminant being built out of (some) of the variables and used as a; /// possible multivariate split.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:328,variab,variables,328,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,4,['variab'],"['variable', 'variables']"
Modifiability,"//==============================================================================; /** \class TEvePointSetArray; \ingroup TEve; An array of point-sets with each point-set playing a role of a bin; in a histogram. When a new point is added to a TEvePointSetArray,; an additional separating quantity needs to be specified: it; determines into which TEvePointSet (bin) the point will actually be; stored. Underflow and overflow bins are automatically created but; they are not drawn by default. By using the TEvePointSelector the points and the separating; quantities can be filled directly from a TTree holding the source; data.; Setting of per-point TRef's is not supported. After the filling, the range of separating variable can be; controlled with a slider to choose a sub-set of PointSets that are; actually shown.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEvePointSet.cxx:715,variab,variable,715,graf3d/eve/src/TEvePointSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEvePointSet.cxx,1,['variab'],['variable']
Modifiability,"//==============================================================================; // REvePointSetArray; //==============================================================================; /** \class REvePointSetArray; \ingroup REve; An array of point-sets with each point-set playing a role of a bin; in a histogram. When a new point is added to a REvePointSetArray,; an additional separating quantity needs to be specified: it; determines into which REvePointSet (bin) the point will actually be; stored. Underflow and overflow bins are automatically created but; they are not drawn by default. By using the REvePointSelector the points and the separating; quantities can be filled directly from a TTree holding the source; data.; Setting of per-point TRef's is not supported. After the filling, the range of separating variable can be; controlled with a slider to choose a sub-set of PointSets that are; actually shown.; */; ////////////////////////////////////////////////////////////////////////////////; /// Constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REvePointSet.cxx:819,variab,variable,819,graf3d/eve7/src/REvePointSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REvePointSet.cxx,1,['variab'],['variable']
Modifiability,"//==============================================================================; // TGLScene::TSceneInfo; //==============================================================================; //______________________________________________________________________; //; // Extend TGLSceneInfo for needs of TGLScene:; //; // 1. DrawElement vectors for opaque/transparent shapes which cache; // physicals that pass the clip tests (frustum and additional; // clip-object);; //; // 2. Statistics / debug information; //; ////////////////////////////////////////////////////////////////////////////////; /// Constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx:270,Extend,Extend,270,graf3d/gl/src/TGLScene.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScene.cxx,1,['Extend'],['Extend']
Modifiability,"//@brief: geometric predicates using arbitrary precision arithmetic ; //@note : these are provided primarily for illustrative purposes and adaptive routines should be preferred",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h:139,adapt,adaptive,139,math/mathcore/src/CDT/predicates.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h,1,['adapt'],['adaptive']
Modifiability,"//@}; /// Get the inheriting constructor declaration for the direct base; /// class from which this using shadow declaration was inherited, if there is; /// one. This can be different for each redeclaration of the same shadow decl.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h:18,inherit,inheriting,18,interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h,2,['inherit'],"['inherited', 'inheriting']"
Modifiability,"//@}; /// \name DiagnosticsEngine-relevant special data; /// Fields containing data that is used for generating diagnostics; //@{; /// A snapshot of Sema's unused file-scoped variable tracking, for; /// generating warnings.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h:175,variab,variable,175,interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTReader.h,1,['variab'],['variable']
Modifiability,"//A TLeaf for a variable length string.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TLeafC.h:16,variab,variable,16,tree/tree/inc/TLeafC.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TLeafC.h,1,['variab'],['variable']
Modifiability,"//A logical vector indicating the variables to be scaled. If; //‘scale’ is of length 1, the value is recycled as many times; //as needed. Per default, data are scaled internally (both ‘x’; //and ‘y’ variables) to zero mean and unit variance. The center; //and scale values are returned and used for later predictions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h:34,variab,variables,34,tmva/rmva/inc/TMVA/MethodRSVM.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/rmva/inc/TMVA/MethodRSVM.h,2,['variab'],['variables']
Modifiability,"//An empty methodTitle is a Problem for the PluginHandler, so we need to fiddle it out of the weightsfilename",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPlugins.cxx:44,Plugin,PluginHandler,44,tmva/tmva/src/MethodPlugins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPlugins.cxx,1,['Plugin'],['PluginHandler']
Modifiability,"//At the moment radial gradient is derived from linear - it was convenient; //at some point, but in fact it was a bad idea. And now I have to; //first check radial gradient.; //TODO: TRadialGradient must inherit TColorGradient directly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPadPainter.cxx:204,inherit,inherit,204,graf3d/gl/src/TGLPadPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPadPainter.cxx,1,['inherit'],['inherit']
Modifiability,"//Bool_t haveArrayVariable = kFALSE;; //Bool_t *varIsArray = new Bool_t[nvars];; // If there are NaNs in the tree:; // => warn if used variables/cuts/weights contain nan (no problem if event is cut out); // => fatal if cut value is nan or (event not cut out and nans somewhere); // Count & collect all these warnings/errors and output them at the end.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx:135,variab,variables,135,tmva/tmva/src/DataSetFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx,1,['variab'],['variables']
Modifiability,"//ConfigParser",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:2,Config,ConfigParser,2,roofit/histfactory/src/ConfigParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx,1,['Config'],['ConfigParser']
Modifiability,"//Data adapter for TTree.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGL5DDataSetEditor.h:7,adapt,adapter,7,graf3d/gl/inc/TGL5DDataSetEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGL5DDataSetEditor.h,1,['adapt'],['adapter']
Modifiability,"//Dynamic type is THistPainter, no problems with simultaneous inheritance and membership; //TGLHistPainter delegates unsupported options/calls to this object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLHistPainter.h:62,inherit,inheritance,62,graf3d/gl/inc/TGLHistPainter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLHistPainter.h,1,['inherit'],['inheritance']
Modifiability,"//EVT workaround end; // get the variable vector of the current event",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableGaussTransform.cxx:33,variab,variable,33,tmva/tmva/src/VariableGaussTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableGaussTransform.cxx,2,['variab'],['variable']
Modifiability,//Expose the hasHotfix check so plugins can also check them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:32,plugin,plugins,32,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['plugin'],['plugins']
Modifiability,"//Extended gradient.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TColorGradient.h:2,Extend,Extended,2,core/base/inc/TColorGradient.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TColorGradient.h,1,['Extend'],['Extended']
Modifiability,"//FFFFFF BoX-FORMATs for nice and flexible outputs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:34,flexible,flexible,34,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,1,['flexible'],['flexible']
Modifiability,"//Fill histograms of x-variables weighted with sWeights",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:23,variab,variables,23,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variables']
Modifiability,"//Fill histograms of y-variables (excluded from the fit), weighted with sWeights",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:23,variab,variables,23,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variables']
Modifiability,"//For layers like Dense & Conv which has additional activation attribute",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx:6,layers,layers,6,tmva/pymva/src/RModelParser_Keras.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx,1,['layers'],['layers']
Modifiability,"//For layers without additional activation attribute",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx:6,layers,layers,6,tmva/pymva/src/RModelParser_Keras.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx,1,['layers'],['layers']
Modifiability,"//GetNdata should probably be const. However it need to cache some information about the actual dimension; //of arrays, so if GetNdata is const, the variables fUsedSizes and fCumulUsedSizes need to be declared; //mutable. We will be able to do that only when all the compilers supported for ROOT actually implemented; //the mutable keyword.; //NOTE: Also modify the code in PrintValue which current goes around this limitation :(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:149,variab,variables,149,tree/treeplayer/inc/TTreeFormula.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h,1,['variab'],['variables']
Modifiability,"//GetTime returns centisec in the hour variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx:39,variab,variable,39,gui/gui/src/TGNumberEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx,1,['variab'],['variable']
Modifiability,"//GetTime returns the centisecs in the hour variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx:44,variab,variable,44,gui/gui/src/TGNumberEntry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGNumberEntry.cxx,1,['variab'],['variable']
Modifiability,"//Getters for internal variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TKDTree.h:23,variab,variables,23,math/mathcore/inc/TKDTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TKDTree.h,1,['variab'],['variables']
Modifiability,"//Global variable class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TGlobal.h:9,variab,variable,9,core/meta/inc/TGlobal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TGlobal.h,1,['variab'],['variable']
Modifiability,"//INTERNAL; //////////////////////////////////////////////////////////////////////////////////; /// \param[in] filename file location of Keras .h5; /// \return Parsed RModel object; ///; /// The `Parse()` function defined in `TMVA::Experimental::SOFIE::PyKeras` will; /// parse a trained Keras .h5 model into a RModel Object. After loading the model; /// in a Python Session, the included layers are extracted with properties; /// like Layer type, Attributes, Input tensor names, Output tensor names, data-type; /// and names of the weight/initialized tensors.; /// The extracted layers from the model are then passed into `AddKerasLayer()`; /// which prepares the specific ROperator and adds them into the RModel object.; /// The layers are also checked for adding any required routines for executing; /// the generated Inference code.; ///; /// For adding the Initialized tensors into the RModel object, the weights are; /// extracted from the Keras model in the form of NumPy arrays, which are then; /// passed into `AddInitializedTensor()` after appropriate casting.; ///; /// Input tensor infos are required to be added which will contain their names,; /// shapes and data-types. For keras models with single input tensors, the tensor; /// shape is returned as a Tuple object, whereas for multi-input models,; /// the tensor shape is returned as a List of Tuple object containing the shape; /// of the individual input tensors. SOFIE's RModel also requires that the Keras; /// models are initialized with Batch Size. The `GetDataFromTuple()` are called; /// on the Tuple objects, which then returns the shape vector required to call; /// the `AddInputTensorInfo()`.; ///; /// For adding the Output Tensor infos, only the names of the model's output; /// tensors are extracted and are then passed into `AddOutputTensorNameList()`.; ///; /// Provide optionally a batch size that can be used to overwrite the one given by the; /// model. If a batch size is not given 1 is used if the model does not ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx:389,layers,layers,389,tmva/pymva/src/RModelParser_Keras.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx,3,['layers'],['layers']
Modifiability,"//Idea: can we factor out the addition of fOffset; // iter = (char*)iter + config->fOffset;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:75,config,config,75,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['config'],['config']
Modifiability,"//It does nothing! As there is no variable if it has no limits!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genetic/src/GeneticMinimizer.cxx:34,variab,variable,34,math/genetic/src/GeneticMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genetic/src/GeneticMinimizer.cxx,1,['variab'],['variable']
Modifiability,"//KDE adapter is a ""data source"" adapter for; //Marching cubes alhorithm. It produces scalar; //values in regular grid's nodes, using TKDEFGT class; //to estimate a density.; //IMPORTANT: This class is not intended for end-user's code,; //it's used and _must_ be used only as an argument while; //instantiating mesh builder's class template.; //That's why all members are protected; //or private - end user cannot create object's of this class.; //But mesh builder, derived from this class,; //knows exactly how to use this class correctly.; //SetDimenions and SetE/GetE are public members, it will be derived by mesh; //builder's instantiation and used inside TGL5DPainter class.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TKDEAdapter.h:6,adapt,adapter,6,graf3d/gl/inc/TKDEAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TKDEAdapter.h,2,['adapt'],['adapter']
Modifiability,"//Lines with AA can be quite different; //from what we always had with X11.; //Now this is a switch in our configuration file (system.rootrc),; //so it can be disabled. This flag affects _only_ pad's graphics,; //GUI graphics is special and different. AA for fill area has a special; // switch because it is better to have it off by default.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/TGQuartz.h:107,config,configuration,107,graf2d/cocoa/inc/TGQuartz.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/TGQuartz.h,1,['config'],['configuration']
Modifiability,"//Make any variables that were forced to constant no longer constant",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SPlot.cxx:11,variab,variables,11,roofit/roostats/src/SPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SPlot.cxx,1,['variab'],['variables']
Modifiability,"//Manager class to draw classes inheritance tree and relations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TClassTree.h:32,inherit,inheritance,32,graf2d/gpad/inc/TClassTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/inc/TClassTree.h,1,['inherit'],['inheritance']
Modifiability,"//Member functions Plus() and Minus() return the positive and negative; //light-cone components:; //; // Double_t pcone = v.Plus();; // Double_t mcone = v.Minus();; //; //CAVEAT: The values returned are T{+,-}Z. It is known that some authors; //find it easier to define these components as (T{+,-}Z)/sqrt(2). Thus; //check what definition is used in the physics you're working in and adapt; //your code accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TLorentzVector.h:384,adapt,adapt,384,math/physics/inc/TLorentzVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TLorentzVector.h,1,['adapt'],['adapt']
Modifiability,"//Not yet in the list. Can we extend the axis ?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx:30,extend,extend,30,hist/hist/src/TAxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TAxis.cxx,1,['extend'],['extend']
Modifiability,"//Note the following restrictions in the code generated:; // - variable bin size not implemented; // - SetErrorOption not implemented",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:63,variab,variable,63,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,1,['variab'],['variable']
Modifiability,"//Number of control variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/inc/TSPlot.h:20,variab,variables,20,math/splot/inc/TSPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/inc/TSPlot.h,1,['variab'],['variables']
Modifiability,"//Number of different variables in expression",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/v5/TFormula.h:22,variab,variables,22,hist/hist/inc/v5/TFormula.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/v5/TFormula.h,1,['variab'],['variables']
Modifiability,"//Number of discriminating variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/inc/TSPlot.h:27,variab,variables,27,math/splot/inc/TSPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/inc/TSPlot.h,1,['variab'],['variables']
Modifiability,"//Overlapping ranges, extend left one",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:22,extend,extend,22,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['extend'],['extend']
Modifiability,"//Portable signed long integer 8 bytes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/RtypesCore.h:2,Portab,Portable,2,core/foundation/inc/RtypesCore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/RtypesCore.h,1,['Portab'],['Portable']
Modifiability,"//Portable unsigned long integer 8 bytes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/RtypesCore.h:2,Portab,Portable,2,core/foundation/inc/RtypesCore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/RtypesCore.h,1,['Portab'],['Portable']
Modifiability,"//Predictions for 5-th variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGL5DPainter.h:23,variab,variable,23,graf3d/gl/inc/TGL5DPainter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGL5DPainter.h,1,['variab'],['variable']
Modifiability,"//Predictions for the 5-th variable.; //Not-implemented yet.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGL5DPainter.cxx:27,variab,variable,27,graf3d/gl/src/TGL5DPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGL5DPainter.cxx,1,['variab'],['variable']
Modifiability,"//Readline variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/src/TRCompletion.h:11,variab,variables,11,bindings/r/src/TRCompletion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/src/TRCompletion.h,1,['variab'],['variables']
Modifiability,"//Simple radial gradient: the same as extended with; //start == end, r1 = 0, r2 = radius.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TColorGradient.h:38,extend,extended,38,core/base/inc/TColorGradient.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TColorGradient.h,1,['extend'],['extended']
Modifiability,"//String representation of the index variable name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h:37,variab,variable,37,core/meta/inc/TDataMember.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TDataMember.h,1,['variab'],['variable']
Modifiability,"//TODO: Check whether we can implement this without loading the data in; // a temporary variable and whether this is noticeably faster.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:88,variab,variable,88,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['variab'],['variable']
Modifiability,//TODO:AZ: remove explicit insertion after refactoring is done.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngineC.cpp:43,refactor,refactoring,43,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngineC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngineC.cpp,1,['refactor'],['refactoring']
Modifiability,"//This file extends ROOT's GuiTypes.h with additional types I need - Point/Rectangle which can use integers (not short integers).; //To be used in copy:xxxxx methods of X11Drawables and somewhere else.; //It's a shame I have to write such ""classes"" :))",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/CocoaGuiTypes.h:12,extend,extends,12,graf2d/cocoa/inc/CocoaGuiTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/cocoa/inc/CocoaGuiTypes.h,1,['extend'],['extends']
Modifiability,"//Variable Importance type",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Types.h:2,Variab,Variable,2,tmva/tmva/inc/TMVA/Types.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Types.h,1,['Variab'],['Variable']
Modifiability,//Variable length arrays are encoded as a regular array with 0 elements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:2,Variab,Variable,2,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['Variab'],['Variable']
Modifiability,"//Variables used for splot",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/inc/TSPlot.h:2,Variab,Variables,2,math/splot/inc/TSPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/inc/TSPlot.h,1,['Variab'],['Variables']
Modifiability,"//Visitor for every VarDecl i.e. variable node in the AST",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/Scanner.h:33,variab,variable,33,core/dictgen/res/Scanner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/Scanner.h,1,['variab'],['variable']
Modifiability,"//With C++11 we'll use inherited constructors!!!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TColorGradient.h:23,inherit,inherited,23,core/base/inc/TColorGradient.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TColorGradient.h,2,['inherit'],['inherited']
Modifiability,"//__________________________3D scatter plot (3rd variable = col)__",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:49,variab,variable,49,tree/treeplayer/src/TSelectorDraw.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx,1,['variab'],['variable']
Modifiability,"//___________________________________________________________; //; // Adapt the interface used in TMinuit (and the TVirtualFitter) for; // passing the objective function in a IFunction interface; // (ROOT::Math::IMultiGenFunction); //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FcnAdapter.h:70,Adapt,Adapt,70,math/mathcore/inc/Fit/FcnAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FcnAdapter.h,1,['Adapt'],['Adapt']
Modifiability,"//______________________________________________________________; /**. Instantiates the seed generator and Minimum builder for the; Fumili minimization method. Produces the Minimum via the; Minimize methods inherited from ModularFunctionMinimizer. @author Andras Zsenei and Lorenzo Moneta, Creation date: 28 Sep 2004. @ingroup Minuit. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliMinimizer.h:207,inherit,inherited,207,math/minuit2/inc/Minuit2/FumiliMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliMinimizer.h,1,['inherit'],['inherited']
Modifiability,//___________________________________________________________________; /**; Abstract class for all numerical integration methods (1D and multi-dim); Interface defining the common methods for the; numerical integrator classes of one and multi dimensions; The derived class VirtualIntegratorOneDim defines the methods; for one-dimensional integration.; The derived class VirtualIntegratorMultiDim defines the method for; multi-dimensional integration.; The concrete classes for one dimension (e.g. GSLIntegrator) or; multi-dimension (e.g. GSLMCIntegrator) can be created using the; plug-in manager.; Users should not use directly this class but the concrete classes ROOT::Math::IntegratorOneDim or; ROOT::Math::IntegratorMultiDim. @ingroup Integration. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h:580,plug-in,plug-in,580,math/mathcore/inc/Math/VirtualIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h,1,['plug-in'],['plug-in']
Modifiability,//___________________________________________________________________; /**; Interface (abstract) class for 1D numerical integration; It must be implemented by the concrete Integrator classes like; ROOT::Math::GSLIntegrator.; Plug-in's exist in ROOT to be able to instantiate the derived classes via the; plug-in manager.; Users should not use directly this class but the concrete classes ROOT::Math::IntegratorOneDim. @ingroup Integration. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h:225,Plug-in,Plug-in,225,math/mathcore/inc/Math/VirtualIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h,2,"['Plug-in', 'plug-in']","['Plug-in', 'plug-in']"
Modifiability,//___________________________________________________________________; /**; Interface (abstract) class for multi numerical integration; It must be implemented by the concrete Integrator classes like; ROOT::Math::GSLMCIntegrator.; Plug-in's exist in ROOT to be able to instantiate the derived classes via the; plug-in manager.; Users should not use directly this class but the concrete classes ROOT::Math::IntegratorMultiDim. @ingroup Integration. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h:230,Plug-in,Plug-in,230,math/mathcore/inc/Math/VirtualIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/VirtualIntegrator.h,2,"['Plug-in', 'plug-in']","['Plug-in', 'plug-in']"
Modifiability,"//_____________________________________________________________________; /**. Class from which all the other classes, representing functions,; inherit. That is why it defines only one method, the operator(),; which allows to call the function. @author Andras Zsenei and Lorenzo Moneta, Creation date: 23 Sep 2004. @ingroup Minuit. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/GenericFunction.h:143,inherit,inherit,143,math/minuit2/inc/Minuit2/GenericFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/GenericFunction.h,1,['inherit'],['inherit']
Modifiability,"//______________________________________________________________________; /*; kNN::Event describes point in input variable vector-space, with; additional functionality like distance between points; */; //______________________________________________________________________; // C++",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ModulekNN.h:114,variab,variable,114,tmva/tmva/inc/TMVA/ModulekNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/ModulekNN.h,1,['variab'],['variable']
Modifiability,"//________________________________________________________________________; //////////////////////////////////////////////////////////////////////////; //; // TStructViewer viewer represents class, struct or other type as an object in 3D space.; // At the top of the scene we can see objects which is our pointer. Under it we see; // pointers and collection elements. Collection must inherit from TCollection; // or be STL collecion.; //; // We can change the number of visible levels or objects on the scene with the GUI or; // methods. The size of geometry objects is proportional to the memory taken by this object; // or to the number of members inside this object.; //; // An easy way to find some class in the viewer is to change the color of the type.; // We can connect for example a TF2 class with red color or connect all classes; // inheriting from TF2 by adding plus to name. For example typename ""TF2+"" tells us; // that all classes inheriting from TF2 will be red.; //; // Navigation in viewer is very simple like in usual GLViewer. When you put the mouse over; // some object you can see some information about it (e.g. name, size, actual level).; // When you double click this object, it becames top object on scene.; // Undo and redo operation are supported.; //; // Begin_Html; // <p> In this picture we can see TStructViewer with pointer to TList which contains; // other collections and objects of various classes</p>; // <img src=""gif/TStructViewer1.jpg"">; // End_Html; //; // Begin_Html; // <p> Other screenshot presents opened TStructNodeEditor</p>; // <img src=""gif/TStructViewer2.jpg"">; // End_Html; //; //; //////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor. An argument ""ptr"" is a main pointer of type ""clname"", which should be shown in the viewer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewer.cxx:384,inherit,inherit,384,graf3d/gviz3d/src/TStructViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewer.cxx,3,['inherit'],"['inherit', 'inheriting']"
Modifiability,"//_________________________________________________________________________; /**. Class for performing numerical integration of a function in one dimension.; It uses the numerical integration algorithms of GSL, which reimplements the; algorithms used in the QUADPACK, a numerical integration package written in Fortran. Various types of adaptive and non-adaptive integration are supported. These include; integration over infinite and semi-infinite ranges and singular integrals. The integration type is selected using the Integration::type enumeration; in the class constructor.; The default type is adaptive integration with singularity; (ADAPTIVESINGULAR or QAGS in the QUADPACK convention) applying a Gauss-Kronrod 21-point integration rule.; In the case of ADAPTIVE type, the integration rule can also be specified via the; Integration::GKRule. The default rule is 31 points. In the case of integration over infinite and semi-infinite ranges, the type used is always; ADAPTIVESINGULAR applying a transformation from the original interval into (0,1). The ADAPTIVESINGULAR type is the most sophicticated type. When performances are; important, it is then recommended to use the NONADAPTIVE type in case of smooth functions or; ADAPTIVE with a lower Gauss-Kronrod rule. For detailed description on GSL integration algorithms see the; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Numerical-Integration.html"">GSL Manual</A>. @ingroup Integration; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:337,adapt,adaptive,337,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,8,"['ADAPT', 'adapt']","['ADAPTIVE', 'ADAPTIVESINGULAR', 'adaptive']"
Modifiability,//___________________________________________________________________________; /**; Factory class holding static functions to create the interfaces like ROOT::Math::Minimizer; via the Plugin Manager; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Factory.h:184,Plugin,Plugin,184,math/mathcore/inc/Math/Factory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Factory.h,1,['Plugin'],['Plugin']
Modifiability,//____________________________________________________________________________; //; // Cuda Tensor; //____________________________________________________________________________; /** TCudaTensor Class; *; * The TCudaTensor class extends the TCudaMatrix class for dimensions > 2.; *; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaTensor.h:230,extend,extends,230,tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaTensor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaTensor.h,1,['extend'],['extends']
Modifiability,"//_____________________________________________________________________________; /**; API class for minimization using Variable Metric technology (""MIGRAD"");; allows for user interaction: set/change parameters, do minimization,; change parameters, re-do minimization etc.;; also used by MnMinos and MnContours;; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnMigrad.h:119,Variab,Variable,119,math/minuit2/inc/Minuit2/MnMigrad.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnMigrad.h,1,['Variab'],['Variable']
Modifiability,//______________________________________________________________________________; /**; Instantiates the SeedGenerator and MinimumBuilder for; Variable Metric Minimization method.; API is provided in the upper ROOT::Minuit2::ModularFunctionMinimizer class. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/VariableMetricMinimizer.h:142,Variab,Variable,142,math/minuit2/inc/Minuit2/VariableMetricMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/VariableMetricMinimizer.h,1,['Variab'],['Variable']
Modifiability,"//______________________________________________________________________________; // CPyCppyy API: Interpreter and Proxy Access; // ==========================================; //; // Access to cppyy Python objects from Cling and C++: allows conversion for; // instances and type checking for scopes, instances, etc.; // Adds a few convenience functions to call Python from Cling and expose Python; // classes to Cling for use in inheritance etc.; //- data ---------------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:429,inherit,inheritance,429,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,1,['inherit'],['inheritance']
Modifiability,"//______________________________________________________________________________; // Return (in the argument 'output') a mangled version of the C++ symbol/type (pass as 'input'); // that can be used in C++ as a variable name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h:211,variab,variable,211,core/clingutils/res/TClingUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/res/TClingUtils.h,1,['variab'],['variable']
Modifiability,"//______________________________________________________________________________; //////////////////////////////////////////////////////////////////////////; // //; // TStreamerObject implements streaming of embedded objects whose type //; // inherits from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:243,inherit,inherits,243,core/meta/src/TStreamerElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx,1,['inherit'],['inherits']
Modifiability,"//______________________________________________________________________________; //////////////////////////////////////////////////////////////////////////; // //; // TStreamerObjectAny implement streaming of embedded object not //; // inheriting from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:237,inherit,inheriting,237,core/meta/src/TStreamerElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx,1,['inherit'],['inheriting']
Modifiability,"//______________________________________________________________________________; //////////////////////////////////////////////////////////////////////////; // //; // TStreamerObjectPointer implements streaming of pointer to object //; // inheriting from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:240,inherit,inheriting,240,core/meta/src/TStreamerElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx,1,['inherit'],['inheriting']
Modifiability,"//______________________________________________________________________________; //////////////////////////////////////////////////////////////////////////; // //; // TStreamerObjectPointerAny implements streaming of pointer to object //; // not inheriting from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx:247,inherit,inheriting,247,core/meta/src/TStreamerElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TStreamerElement.cxx,1,['inherit'],['inheriting']
Modifiability,"//______________________________________________________________________________; //; // TFumiliMinimizer class implementing the ROOT::Math::Minimizer interface using; // TFumili.; // This class is normally instantiates using the plug-in manager; // (plug-in with name Fumili or TFumili); // In addition the user can choose the minimizer algorithm: Migrad (the default one), Simplex, or Minimize (combined Migrad + Simplex); //; //__________________________________________________________________________________________; // initialize the static instances",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumiliMinimizer.cxx:230,plug-in,plug-in,230,math/fumili/src/TFumiliMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumiliMinimizer.cxx,2,['plug-in'],['plug-in']
Modifiability,"//______________________________________________________________________________; //; // THtml generated documentation is written to file by TDocOutput. So far only; // output of HTML is implemented. Customization of the output should be done; // with THtml's interfaces - TDocOutput should not be used nor re-implemented; // directly.; //; // TDocOutput generates the index tables:; // * classes (THtml invokes TClassDocOutput for each),; // * inheritance hierarchy,; // * types and typedefs,; // * libraries,; // * the product index, and; // * the module index (including the links to per-module documentation).; // It invokes AT&T's GraphViz tool (dot) if available; charts benefit a lot; // from it.; //; // TDocOutput also writes all pages' header and footer, which can be customized; // by calling THtml::SetHeader(), THtml::SetFooter().; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx:445,inherit,inheritance,445,html/src/TDocOutput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocOutput.cxx,1,['inherit'],['inheritance']
Modifiability,"//______________________________________________________________________________; //; // The Shared Layer Class; //______________________________________________________________________________; /** \class TSharedLayer. Layer class width shared weight and bias layers. Like the Layer class only that weight matrices are shared between; different instances of the net, which can be used to implement; multithreading 'Hogwild' style.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Layer.h:261,layers,layers,261,tmva/tmva/inc/TMVA/DNN/Layer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Layer.h,1,['layers'],['layers']
Modifiability,//_______________________________________________________________________________; /**; Generic interface for defining configuration options of a numerical algorithm. @ingroup NumAlgo; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IOptions.h:119,config,configuration,119,math/mathcore/inc/Math/IOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IOptions.h,1,['config'],['configuration']
Modifiability,"//_______________________________________________________________________________; /**; Interface (abstract class) for parametric gradient multi-dimensional functions providing; in addition to function evaluation with respect to the coordinates; also the gradient with respect to the parameters, via the method ParameterGradient. It is a derived class from ROOT::Math::IParametricFunctionMultiDim. The pure private virtual method DoParameterGradient must be implemented by the derived classes; in addition to those inherited by the base abstract classes. @ingroup ParamFunc; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h:515,inherit,inherited,515,math/mathcore/inc/Math/IParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h,1,['inherit'],['inherited']
Modifiability,"//_______________________________________________________________________________; /**; Interface (abstract class) for parametric one-dimensional gradient functions providing; in addition to function evaluation with respect the coordinates; also the gradient with respect to the parameters, via the method ParameterGradient. It is a derived class from ROOT::Math::IParametricFunctionOneDim. The pure private virtual method DoParameterGradient must be implemented by the derived classes; in addition to those inherited by the base abstract classes. @ingroup ParamFunc; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h:508,inherit,inherited,508,math/mathcore/inc/Math/IParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IParamFunction.h,1,['inherit'],['inherited']
Modifiability,"//___________________________________________________________________________________; /**; Class describing the configuration of the fit, options and parameter settings; using the ROOT::Fit::ParameterSettings class. @ingroup FitMain; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:113,config,configuration,113,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,1,['config'],['configuration']
Modifiability,"//_____________________________________________________________________________________; /**; GSLMinimizer class.; Implementation of the ROOT::Math::Minimizer interface using the GSL multi-dimensional; minimization algorithms. See <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Multidimensional-Minimization.html"">GSL doc</A>; from more info on the GSL minimization algorithms. The class implements the ROOT::Math::Minimizer interface and can be instantiated using the; ROOT plugin manager (plugin name is ""GSLMultiMin""). The various minimization algorithms; (conjugatefr, conjugatepr, bfgs, etc..) can be passed as enumerations and also as a string.; The default algorithm is conjugatefr (Fletcher-Reeves conjugate gradient algorithm). @ingroup MultiMin; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMinimizer.h:486,plugin,plugin,486,math/mathmore/inc/Math/GSLMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMinimizer.h,2,['plugin'],['plugin']
Modifiability,"//_____________________________________________________________________________________; /**; GSLSimAnMinimizer class for minimization using simulated annealing; using the algorithm from; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Simulated-Annealing.html"">; GSL</A>.; It implements the ROOT::Minimizer interface and; a plug-in (name ""GSLSimAn"") exists to instantiate this class via the plug-in manager; Configuration (Setting/getting) the options is done through the methods defined in the; ROOT::Math::Minimizer class.; The user needs to call the base class method ROOT::Math::Minimizer::SetOptions to set the; corresponding options.; Here is some code example for increasing n_tries from 200 (default) to 1000; ```; ROOT::Math::GenAlgoOptions simanOpt;; simanOpt.SetValue(""n_tries"", 1000);; ROOT::Math::MinimizerOptions opt;; opt.SetExtraOptions(simanOpt);; minimizer->SetOptions(opt);; ```. @ingroup MultiMin; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLSimAnMinimizer.h:335,plug-in,plug-in,335,math/mathmore/inc/Math/GSLSimAnMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLSimAnMinimizer.h,3,"['Config', 'plug-in']","['Configuration', 'plug-in']"
Modifiability,//_____________________________________________________________________________________; /**; User Class to find the Root of one dimensional functions.; The GSL Methods are implemented in MathMore and they are loaded automatically; via the plug-in manager. The possible types of Root-finding algorithms are:; <ul>; <li>Root Bracketing Algorithms which do not require function derivatives; <ol>; <li>RootFinder::kBRENT (default method implemented in MathCore); <li>RootFinder::kGSL_BISECTION; <li>RootFinder::kGSL_FALSE_POS; <li>RootFinder::kGSL_BRENT; </ol>; <li>Root Finding Algorithms using Derivatives; <ol>; <li>RootFinder::kGSL_NEWTON; <li>RootFinder::kGSL_SECANT; <li>RootFinder::kGSL_STEFFENSON; </ol>; </ul>. This class does not cupport copying. @ingroup RootFinders. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RootFinder.h:240,plug-in,plug-in,240,math/mathcore/inc/Math/RootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/RootFinder.h,1,['plug-in'],['plug-in']
Modifiability,//___________________________________________________________________________________________; /**; User class for performing multidimensional integration. By default uses adaptive multi-dimensional integration using the algorithm from Genz Mallik; implemented in the class ROOT::Math::AdaptiveIntegratorMultiDim otherwise it can uses via the; plug-in manager the MC integration class (ROOT::Math::GSLMCIntegration) from MathMore. @ingroup Integration. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h:172,adapt,adaptive,172,math/mathcore/inc/Math/IntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h,3,"['Adapt', 'adapt', 'plug-in']","['AdaptiveIntegratorMultiDim', 'adaptive', 'plug-in']"
Modifiability,"//____________________________________________________________________________________________; /**. User Class for performing numerical integration of a function in one dimension.; It uses the plug-in manager to load advanced numerical integration algorithms from GSL, which reimplements the; algorithms used in the QUADPACK, a numerical integration package written in Fortran. Various types of adaptive and non-adaptive integration are supported. These include; integration over infinite and semi-infinite ranges and singular integrals. The integration type is selected using the Integration::type enumeration; in the class constructor.; The default type is adaptive integration with singularity; (ADAPTIVESINGULAR or QAGS in the QUADPACK convention) applying a Gauss-Kronrod 21-point integration rule.; In the case of ADAPTIVE type, the integration rule can also be specified via the; Integration::GKRule. The default rule is 31 points. In the case of integration over infinite and semi-infinite ranges, the type used is always; ADAPTIVESINGULAR applying a transformation from the original interval into (0,1). The ADAPTIVESINGULAR type is the most sophisticated type. When performances are; important, it is then recommended to use the NONADAPTIVE type in case of smooth functions or; ADAPTIVE with a lower Gauss-Kronrod rule. For detailed description on GSL integration algorithms see the; <A HREF=""http://www.gnu.org/software/gsl/manual/gsl-ref_16.html#SEC248"">GSL Manual</A>. @ingroup Integration. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:194,plug-in,plug-in,194,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,9,"['ADAPT', 'adapt', 'plug-in']","['ADAPTIVE', 'ADAPTIVESINGULAR', 'adaptive', 'plug-in']"
Modifiability,"//_____________________________________________________________________________________________________; /**; Minuit2Minimizer class implementing the ROOT::Math::Minimizer interface for; Minuit2 minimization algorithm.; In ROOT it can be instantiated using the plug-in manager (plug-in ""Minuit2""); Using a string (used by the plugin manager) or via an enumeration; an one can set all the possible minimization algorithms (Migrad, Simplex, Combined, Scan and Fumili). Refer to the [guide](https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html) for an introduction how Minuit; works. @ingroup Minuit; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h:261,plug-in,plug-in,261,math/minuit2/inc/Minuit2/Minuit2Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h,3,"['plug-in', 'plugin']","['plug-in', 'plugin']"
Modifiability,"//adding variables from subseed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableImportance.cxx:9,variab,variables,9,tmva/tmva/src/VariableImportance.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableImportance.cxx,2,['variab'],['variables']
Modifiability,"//as we start counting variables from ""zero"", I store the fisher offset at the END",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:23,variab,variables,23,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['variab'],['variables']
Modifiability,"//ask master to print config",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h:22,config,config,22,core/base/inc/MessageTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/MessageTypes.h,1,['config'],['config']
Modifiability,"//auxiliary internal variables, working place",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h:21,variab,variables,21,hist/spectrumpainter/inc/TSpectrum2Painter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h,1,['variab'],['variables']
Modifiability,"//baseOffset will be -1 if clRef does not inherit from clCast.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:42,inherit,inherit,42,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,2,['inherit'],['inherit']
Modifiability,"//case TStreamerInfo::kSTLvarp: // Variable size array of STL containers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfo.cxx:35,Variab,Variable,35,io/io/src/TStreamerInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfo.cxx,1,['Variab'],['Variable']
Modifiability,"//check of Event variables lie with the volume",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h:17,variab,variables,17,tmva/tmva/inc/TMVA/BinarySearchTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h,1,['variab'],['variables']
Modifiability,"//check that the data contain the variable we are interested in",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx:34,variab,variable,34,roofit/roofit/src/Roo2DKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx,1,['variab'],['variable']
Modifiability,"//checks if the class selection rule is inheritable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/ClassSelectionRule.h:40,inherit,inheritable,40,core/dictgen/res/ClassSelectionRule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/ClassSelectionRule.h,1,['inherit'],['inheritable']
Modifiability,"//color of channel lines (grid); //auxiliary variables,transformation coeffitients for internal use only",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h:45,variab,variables,45,hist/spectrumpainter/inc/TSpectrum2Painter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrumpainter/inc/TSpectrum2Painter.h,1,['variab'],['variables']
Modifiability,"//configSet->writeToStream(os,false) ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:2,config,configSet,2,roofit/roofitcore/src/RooNumIntConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx,1,['config'],['configSet']
Modifiability,"//const std::list<VariableSelectionRule>& ClassSelectionRule::GetFieldSelectionRules()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/ClassSelectionRule.cxx:18,Variab,VariableSelectionRule,18,core/dictgen/src/ClassSelectionRule.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/ClassSelectionRule.cxx,1,['Variab'],['VariableSelectionRule']
Modifiability,"//const std::list<VariableSelectionRule>& getFieldSelectionRules(); //gets the field selections list",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/ClassSelectionRule.h:18,Variab,VariableSelectionRule,18,core/dictgen/res/ClassSelectionRule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/ClassSelectionRule.h,1,['Variab'],['VariableSelectionRule']
Modifiability,"//constants, variables x,y,z,t, pi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:13,variab,variables,13,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,1,['variab'],['variables']
Modifiability,"//cout << ""RooRealMPFE::calculate("" << GetName() << "" variable "" << var->GetName() << "" changed "" << endl ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:54,variab,variable,54,roofit/roofitcore/src/RooRealMPFE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx,1,['variab'],['variable']
Modifiability,"//cout << ""RooSim::extendedMode("" << GetName() << "") component "" << pdf->GetName() << "" MUST be extended"" << endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:19,extend,extendedMode,19,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,2,['extend'],"['extended', 'extendedMode']"
Modifiability,"//cout << ""RooSim::extendedMode("" << GetName() << "") component "" << pdf->GetName() << "" can be extended""; // << endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:19,extend,extendedMode,19,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,2,['extend'],"['extended', 'extendedMode']"
Modifiability,"//cout << ""RooSim::extendedMode("" << GetName() << "") returning CanBeExtended"" << endl ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:19,extend,extendedMode,19,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,1,['extend'],['extendedMode']
Modifiability,"//cout << ""RooSim::extendedMode("" << GetName() << "") returning CanNotBeExtended"" << endl ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:19,extend,extendedMode,19,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,1,['extend'],['extendedMode']
Modifiability,"//cout << ""RooSim::extendedMode("" << GetName() << "") returning MustBeExtended"" << endl ;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:19,extend,extendedMode,19,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,1,['extend'],['extendedMode']
Modifiability,"//create arrays containing the variable binning",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:31,variab,variable,31,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['variab'],['variable']
Modifiability,"//creating variable binning; //TEfficiency pointer has efficiency name + counter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:11,variab,variable,11,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['variab'],['variable']
Modifiability,"//decl->getKind() != Decl::Function, but decl has type, inherited from FunctionDecl.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp:56,inherit,inherited,56,interpreter/cling/lib/MetaProcessor/Display.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/MetaProcessor/Display.cpp,1,['inherit'],['inherited']
Modifiability,"//defined(__opencl_c_named_address_space_builtins); // OpenCL v1.1 s6.11.8, v1.2 s6.12.8, v2.0 s6.13.8 - Synchronization Functions; /**; * All work-items in a work-group executing the kernel; * on a processor must execute this function before any; * are allowed to continue execution beyond the barrier.; * This function must be encountered by all work-items in; * a work-group executing the kernel.; * If barrier is inside a conditional statement, then all; * work-items must enter the conditional if any work-item; * enters the conditional statement and executes the; * barrier.; * If barrer is inside a loop, all work-items must execute; * the barrier for each iteration of the loop before any are; * allowed to continue execution beyond the barrier.; * The barrier function also queues a memory fence; * (reads and writes) to ensure correct ordering of; * memory operations to local or global memory.; * The flags argument specifies the memory address space; * and can be set to a combination of the following literal; * values.; * CLK_LOCAL_MEM_FENCE - The barrier function; * will either flush any variables stored in local memory; * or queue a memory fence to ensure correct ordering of; * memory operations to local memory.; * CLK_GLOBAL_MEM_FENCE - The barrier function; * will queue a memory fence to ensure correct ordering; * of memory operations to global memory. This can be; * useful when work-items, for example, write to buffer or; * image objects and then want to read the updated data.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:1104,variab,variables,1104,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['variab'],['variables']
Modifiability,"//directory containing cluster config information",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:31,config,config,31,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['config'],['config']
Modifiability,"//double AdaptiveIntegratorMultiDim::Result() const { return fIntegrator->Result(); }; //double AdaptiveIntegratorMultiDim::Error() const { return fIntegrator->Error(); }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:9,Adapt,AdaptiveIntegratorMultiDim,9,math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,2,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,"//environment variable used to switch to the new method of reading asynchronously",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheRead.cxx:14,variab,variable,14,io/io/src/TFileCacheRead.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileCacheRead.cxx,1,['variab'],['variable']
Modifiability,"//evaluate all variables combinations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Factory.h:15,variab,variables,15,tmva/tmva/inc/TMVA/Factory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Factory.h,1,['variab'],['variables']
Modifiability,"//evaluate all variables combinations NOTE: use with care in huge datasets with a huge number of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableImportance.h:15,variab,variables,15,tmva/tmva/inc/TMVA/VariableImportance.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableImportance.h,2,['variab'],['variables']
Modifiability,"//evaluate the simple case that is removing 1 variable at time",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Factory.h:46,variab,variable,46,tmva/tmva/inc/TMVA/Factory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Factory.h,2,['variab'],['variable']
Modifiability,"//extend this polyline to hold npoints",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPolyLine.cxx:2,extend,extend,2,graf2d/graf/src/TPolyLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPolyLine.cxx,2,['extend'],['extend']
Modifiability,"//extend this polymarker to hold npoints",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPolyMarker3D.cxx:2,extend,extend,2,graf3d/g3d/src/TPolyMarker3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPolyMarker3D.cxx,2,['extend'],['extend']
Modifiability,"//extended likelihood, equivalent to chi2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:2,extend,extended,2,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['extend'],['extended']
Modifiability,"//file containing config information",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:18,config,config,18,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['config'],['config']
Modifiability,"//fitter.Config().MinimizerOptions().SetPrintLevel(3);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/fit/testFit.cxx:9,Config,Config,9,math/mathcore/test/fit/testFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/fit/testFit.cxx,3,['Config'],['Config']
Modifiability,"//fitter.Config().MinimizerOptions().SetPrintLevel(3);; /////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/fit/SparseFit3.cxx:9,Config,Config,9,math/mathcore/test/fit/SparseFit3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/fit/SparseFit3.cxx,2,['Config'],['Config']
Modifiability,"//fitter.Config().MinimizerOptions().SetTolerance(10);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/fit/testLogLExecPolicy.cxx:9,Config,Config,9,math/mathcore/test/fit/testLogLExecPolicy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/fit/testLogLExecPolicy.cxx,1,['Config'],['Config']
Modifiability,"//fprintf(stderr,""In RewriteObjCMethodDecl\n"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:21,Rewrite,RewriteObjCMethodDecl,21,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,2,['Rewrite'],['RewriteObjCMethodDecl']
Modifiability,"//gTools().NormHist( fMvaSigFineBin ); // also doesn't use variable bin width. And calls TH1::Scale, which oddly enough does not change the SumOfWeights !!!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx:59,variab,variable,59,tmva/tmva/src/OptimizeConfigParameters.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx,1,['variab'],['variable']
Modifiability,"//histograms of control variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/inc/TSPlot.h:24,variab,variables,24,math/splot/inc/TSPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/inc/TSPlot.h,1,['variab'],['variables']
Modifiability,"//histograms of discriminating variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/inc/TSPlot.h:31,variab,variables,31,math/splot/inc/TSPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/inc/TSPlot.h,1,['variab'],['variables']
Modifiability,"//histograms of weighted variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/inc/TSPlot.h:25,variab,variables,25,math/splot/inc/TSPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/inc/TSPlot.h,1,['variab'],['variables']
Modifiability,"//historic variable, only needed for ""CompatibilityOptions""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h:11,variab,variable,11,tmva/tmva/inc/TMVA/MethodBDT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h,1,['variab'],['variable']
Modifiability,"//if (!extended) Info(""HFitImpl"",""Do a not -extended binned fit"");; // pass fitdata as a shared pointer so ownership is shared with Fitter and FitResult class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/HFitImpl.cxx:7,extend,extended,7,hist/hist/src/HFitImpl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/HFitImpl.cxx,2,['extend'],['extended']
Modifiability,"//if (!obj->InheritsFrom(TFolder::Class())) continue;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFolder.cxx:12,Inherit,InheritsFrom,12,core/base/src/TFolder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFolder.cxx,1,['Inherit'],['InheritsFrom']
Modifiability,"//if (fOper[i] >= 105000 && fOper[i]<110000) {; // We have a string used as a string; // This dormant portion of code would be used if (when?) we allow the histogramming; // of the integral content (as opposed to the string content) of strings; // held in a variable size container delimited by a null (as opposed to; // a fixed size container or variable size container whose size is controlled; // by a variable). In GetNdata, we will then use strlen to grab the current length.; //fCumulSizes[i][fNdimensions[i]-1] = 1;; //fUsedSizes[fNdimensions[i]-1] = -TMath::Abs(fUsedSizes[fNdimensions[i]-1]);; //fUsedSizes[0] = - TMath::Abs( fUsedSizes[0]);; //continue;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:258,variab,variable,258,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,3,['variab'],['variable']
Modifiability,"//if log scale in X, use variable bin size linear with log(x); //this gives a better precision when zooming on the axis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:25,variab,variable,25,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['variab'],['variable']
Modifiability,"//int n1 = batchHeight;; //int n2 = batchWidth;; // treat case where batchHeight is the batchSize in case of first Dense layers (then we need to set to fNet batch size); //if (batchDepth == 1 && GetInputHeight() == 1 && GetInputDepth() == 1) n1 = fNet->GetBatchSize();; //fXInput = TensorImpl_t(1,n1,n2);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDL.cxx:121,layers,layers,121,tmva/tmva/src/MethodDL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDL.cxx,1,['layers'],['layers']
Modifiability,"//integer, optional (default=3); //maximum depth of the individual regression estimators. The maximum; //depth limits the number of nodes in the tree. Tune this parameter; //for best performance; the best value depends on the interaction; //of the input variables.; //Ignored if ``max_leaf_nodes`` is not None.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyGTB.h:254,variab,variables,254,tmva/pymva/inc/TMVA/MethodPyGTB.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/inc/TMVA/MethodPyGTB.h,1,['variab'],['variables']
Modifiability,"//keep only multiple inheritance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:21,inherit,inheritance,21,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,1,['inherit'],['inheritance']
Modifiability,"//list of all slave servers as in config file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:34,config,config,34,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['config'],['config']
Modifiability,"//llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // TLDR: replaces llvm.preserve.static.offset + GEP + load / store; // with llvm.bpf.getelementptr.and.load / store; //; // This file implements BPFPreserveStaticOffsetPass transformation.; // This transformation address two BPF verifier specific issues:; //; // (a) Access to the fields of some structural types is allowed only; // using load and store instructions with static immediate offsets.; //; // Examples of such types are `struct __sk_buff` and `struct; // bpf_sock_ops`. This is so because offsets of the fields of; // these structures do not match real offsets in the running; // kernel. During BPF program load LDX and STX instructions; // referring to the fields of these types are rewritten so that; // offsets match real offsets. For this rewrite to happen field; // offsets have to be encoded as immediate operands of the; // instructions.; //; // See kernel/bpf/verifier.c:convert_ctx_access function in the; // Linux kernel source tree for details.; //; // (b) Pointers to context parameters of BPF programs must not be; // modified before access.; //; // During BPF program verification a tag PTR_TO_CTX is tracked for; // register values. In case if register with such tag is modified; // BPF program is not allowed to read or write memory using this; // register. See kernel/bpf/verifier.c:check_mem_access function; // in the Linux kernel source tree for details.; //; // The following sequence of the IR instructions:; //; // %x = getelementptr %ptr, %constant_offset; // %y = load %x; //; // Is translated as a single machine instruction:; //; // LDW %ptr, %constant_offset; //; // In order for cases (a) and (b) to work the sequence %x-%y above has; // to be preserved by the IR passes.; //; // However, several optimization passes might sink `load` instruction; // or hoist ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFPreserveStaticOffset.cpp:1136,rewrite,rewrite,1136,interpreter/llvm-project/llvm/lib/Target/BPF/BPFPreserveStaticOffset.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFPreserveStaticOffset.cpp,1,['rewrite'],['rewrite']
Modifiability,"//llvm::Function *ff = m_engine->FindFunctionNamed(i->c_str());; // i could also reference a global variable, in which case ff == 0.; //if (ff); // funcsToFree.push_back(ff);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:100,variab,variable,100,interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp,1,['variab'],['variable']
Modifiability,"//method to compute the range(number total of operations for every bit configuration)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableImportance.h:71,config,configuration,71,tmva/tmva/inc/TMVA/VariableImportance.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableImportance.h,1,['config'],['configuration']
Modifiability,"//mins and maxs of variables for histogramming",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/inc/TSPlot.h:19,variab,variables,19,math/splot/inc/TSPlot.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/inc/TSPlot.h,1,['variab'],['variables']
Modifiability,"//monitoring tree/ntuple and it's variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h:34,variab,variables,34,tmva/tmva/inc/TMVA/MethodBoost.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h,1,['variab'],['variables']
Modifiability,"//need at least one variable; //NOTE: if subssed is zero then is the special case; //that count in xbitset is 1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableImportance.cxx:20,variab,variable,20,tmva/tmva/src/VariableImportance.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableImportance.cxx,2,['variab'],['variable']
Modifiability,"//now .. pick those variables that are used in the FIsher and are also; // part of the ""allowed"" variables in case of Randomized Trees)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:20,variab,variables,20,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,4,['variab'],['variables']
Modifiability,"//now you have found the best separation cut for each variable, now compare the variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:54,variab,variable,54,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"//number of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRobustEstimator.h:12,variab,variables,12,math/physics/inc/TRobustEstimator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRobustEstimator.h,1,['variab'],['variables']
Modifiability,"//number of variables already added to the data matrix",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRobustEstimator.h:12,variab,variables,12,math/physics/inc/TRobustEstimator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRobustEstimator.h,1,['variab'],['variables']
Modifiability,"//only for first variable of the block",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/src/THbookBranch.cxx:17,variab,variable,17,hist/hbook/src/THbookBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/src/THbookBranch.cxx,1,['variab'],['variable']
Modifiability,"//oocoutI(nullptr,InputArguments) << ""Setting variables to impSnapshot[""<<i<<""]""<<endl;; //fImportanceSnapshots[i]->Print(""v"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCImportanceSampler.cxx:46,variab,variables,46,roofit/roostats/src/ToyMCImportanceSampler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCImportanceSampler.cxx,1,['variab'],['variables']
Modifiability,"//oocoutI(nullptr,InputArguments) << ""Setting variables to nullSnapshot[""<<i<<""]""<<endl;; //fNullSnapshots[i]->Print(""v"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCImportanceSampler.cxx:46,variab,variables,46,roofit/roostats/src/ToyMCImportanceSampler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCImportanceSampler.cxx,1,['variab'],['variables']
Modifiability,"//pass functions and variables to R",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/rtools/src/RMinimizer.cxx:21,variab,variables,21,math/rtools/src/RMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/rtools/src/RMinimizer.cxx,1,['variab'],['variables']
Modifiability,"//printf(""adaptive bandwidth factor % f weight 0 %f , %f \n"",fKDE->fAdaptiveBandwidthFactor, weights[0],fWeights[0] );",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TKDE.cxx:10,adapt,adaptive,10,hist/hist/src/TKDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TKDE.cxx,1,['adapt'],['adaptive']
Modifiability,"//progress dialog plugin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:18,plugin,plugin,18,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['plugin'],['plugin']
Modifiability,"//reset can extend bit to avoid an axis extension in SetBinContent",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:12,extend,extend,12,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['extend'],['extend']
Modifiability,"//reset only Integral, contents and Errors; // need to consider also underflow/overflow in the non-extending axes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfileHelper.h:99,extend,extending,99,hist/hist/src/TProfileHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfileHelper.h,1,['extend'],['extending']
Modifiability,"//return the individual relative variable importance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h:33,variab,variable,33,tmva/tmva/inc/TMVA/MethodBDT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h,1,['variab'],['variable']
Modifiability,"//search for next env variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Paths.cpp:22,variab,variable,22,interpreter/cling/lib/Utils/Paths.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Paths.cpp,1,['variab'],['variable']
Modifiability,"//set the grid for the cut scan on the variables like this:; // ; // | | | | | ... | | ; // xmin xmax; //; // cut 0 1 2 3 ... fNCuts-1 (counting from zero); // bin 0 1 2 3 ..... nBins-1=fNCuts (counting from zero); // --> nBins = fNCuts+1; // (NOTE, the cuts at xmin or xmax would just give the whole sample and; // hence can be safely omitted",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:39,variab,variables,39,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['variab'],['variables']
Modifiability,"//set the grid for the cut scan on the variables like this:; //; // | | | | | ... | |; // xmin xmax; //; // cut 0 1 2 3 ... fNCuts-1 (counting from zero); // bin 0 1 2 3 ..... nBins-1=fNCuts (counting from zero); // --> nBins = fNCuts+1; // (NOTE, the cuts at xmin or xmax would just give the whole sample and; // hence can be safely omitted",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:39,variab,variables,39,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['variab'],['variables']
Modifiability,"//set the periode (number of variables)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h:29,variab,variables,29,tmva/tmva/inc/TMVA/BinarySearchTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h,1,['variab'],['variables']
Modifiability,"//set up defaults. If a value is provided in config, defaults will be overwritten:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:45,config,config,45,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['config']
Modifiability,"//sets the inheritance rule for the class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/ClassSelectionRule.h:11,inherit,inheritance,11,core/dictgen/res/ClassSelectionRule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/ClassSelectionRule.h,1,['inherit'],['inheritance']
Modifiability,"//setting up helper variables for JsMVA",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealing.h:20,variab,variables,20,tmva/tmva/inc/TMVA/SimulatedAnnealing.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealing.h,2,['variab'],['variables']
Modifiability,"//std::cout << ""Calling TeacherPlugin "" << std::endl;; // pluginHandler->Print(""a"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPlugins.cxx:58,plugin,pluginHandler,58,tmva/tmva/src/MethodPlugins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPlugins.cxx,1,['plugin'],['pluginHandler']
Modifiability,"//std::cout << ""Create Deepnet - layout string "" << layoutString << ""\t layers : "" << deepNet.GetLayers().size() << std::endl;; // Split layers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDL.cxx:72,layers,layers,72,tmva/tmva/src/MethodDL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDL.cxx,2,['layers'],['layers']
Modifiability,"//std::cout << ""\t Layers: "" << std::endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h:19,Layers,Layers,19,tmva/tmva/inc/TMVA/DNN/DeepNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h,1,['Layers'],['Layers']
Modifiability,"//std::cout << ""plugin done"" << std::endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPlugins.cxx:16,plugin,plugin,16,tmva/tmva/src/MethodPlugins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPlugins.cxx,1,['plugin'],['plugin']
Modifiability,"//std::cout << ""pluginHandler found myMethodTitle="" << myMethodTitle<<std::endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPlugins.cxx:16,plugin,pluginHandler,16,tmva/tmva/src/MethodPlugins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPlugins.cxx,1,['plugin'],['pluginHandler']
Modifiability,"//std::cout << ""set a 1d function"" << std::endl;; // function is cloned when creating the adapter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx:90,adapt,adapter,90,math/mathcore/src/Fitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx,1,['adapt'],['adapter']
Modifiability,"//this variable could be used in a future version",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:7,variab,variable,7,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,2,['variab'],['variable']
Modifiability,"//use an adaptive bandwidth to reduce the dependence on global data distribution",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx:9,adapt,adaptive,9,roofit/roofit/src/Roo2DKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx,1,['adapt'],['adaptive']
Modifiability,"//variable bin size -> use n,*bins constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:2,variab,variable,2,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['variab'],['variable']
Modifiability,"//variable size bins",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPlotPainter.cxx:2,variab,variable,2,graf3d/gl/src/TGLPlotPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPlotPainter.cxx,1,['variab'],['variable']
Modifiability,"//variable that determines how ""exact"" you cut on the preselection found in the training data. Here I chose; //1% of the variable range...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:2,variab,variable,2,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,2,['variab'],['variable']
Modifiability,"//we cannot mix a compiled class with an emulated class in the inheritance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:63,inherit,inheritance,63,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,2,['inherit'],['inheritance']
Modifiability,"/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPluginManager; \ingroup Base. This class implements a plugin library manager. It keeps track of a list of plugin handlers. A plugin handler knows which plugin; library to load to get a specific class that is used to extend the; functionality of a specific base class and how to create an object; of this class. For example, to extend the base class TFile to be; able to read SQLite files one needs to load the plugin library; libRSQLite.so which defines the TRSQLiteServer class. This loading; should be triggered when a given URI contains a regular expression; defined by the handler. Plugin handlers can be defined via macros in a list of plugin; directories. With $ROOTSYS/etc/plugins the default top plugin; directory specified in $ROOTSYS/etc/system.rootrc. Additional; directories can be specified by adding them to the end of the list.; Macros for identical plugin handlers in later directories will; override previous ones (the inverse of normal search path behavior).; The macros must have names like `<BaseClass>/PX0_<PluginClass>.C`,; e.g. TSQLServer/P20_TMySQLServer.C, to allow easy sorting and grouping.; If the BaseClass is in a namespace the directory must have the name; NameSpace@@BaseClass as `:` is a reserved pathname character on some; operating systems. Macros not beginning with 'P' and ending with "".C""; are ignored. These macros typically look like:; ~~~ {.cpp}; void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*)"");; }; ~~~; Plugin handlers can also be defined via resources in the .rootrc; file. Although now depre",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:1017,Plugin,Plugin,1017,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,2,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,"/; /// Function parameters:; /// - fSource-pointer to the matrix of source spectrum, its size should; /// be fSizeX*fSizeY; /// - fDest-pointer to the matrix of destination data, its size should be; /// fSizeX*fSizeY; ///; /// ### Example of enhancement; ///; /// This function transforms the; /// source spectrum (for details see Transform function). Before the Enhance; /// function is called the class must be created by constructor and the type of the; /// transform as well as some other parameters must be set using a set of setter; /// functions. The Enhance function multiplies transformed coefficients in the given; /// region (fXmin, fXmax, fYmin, fYmax) by the given fEnhancCoeff and transforms it; /// back. Enhanced data are written into dest spectrum.; ///; /// ### Example - script Enhance2.c:; ///; /// \image html spectrum2transform_enhance_image001.jpg Fig. 1 Original two-dimensional noisy spectrum; /// \image html spectrum2transform_enhance_image002.jpg Fig. 2 Enhanced spectrum of the data from Fig. 1 using Cosine transform (channels in region (0-63)x(0-63) were multiplied by 5); ///; /// #### Script:; ///; /// Example to illustrate enhancement (class TSpectrumTransform2). To execute this example, do; ///; /// `root > .x Enhance2.C`; ///; /// ~~~ {.cpp}; /// void Enhance2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** source = new Double_t *[nbinsx];; /// Double_t ** dest = new Double_t *[nbinsx];; /// for (i=0;i<nbinsx;i++); /// source[i]= new Double_t[nbinsy];; /// for (i=0;i<nbinsx;i++); /// dest[i]= new Double_t[nbinsy];; /// TH2F *trans = new TH2F(""trans"",""Background estimation"",nbinsx,xmin,xmax,nbinsy,ymin,ymax);; /// TFile *f = new TFile(""TSpectrum2.root"");; /// trans=(TH2F*)f->Get(""back3;1"");; /// TCanvas *Tr = new TCanvas(""Transform"",""Illustration of transform function"",10,10,1000,700);; /// for (i = 0; i < nbinsx; i+",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1299,Enhance,Enhanced,1299,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,1,['Enhance'],['Enhanced']
Modifiability,"/; /// Show web window in specified location.; ///; /// \param[inout] win web window by reference; /// \param user_args specifies where and how display web window; ///; /// As display args one can use string like ""firefox"" or ""chrome"" - these are two main supported web browsers.; /// See RWebDisplayArgs::SetBrowserKind() for all available options. Default value for the browser can be configured; /// when starting root with --web argument like: ""root --web=chrome"". When root started in web server mode ""root --web=server"",; /// no any web browser will be started - just URL will be printout, which can be entered in any running web browser; ///; /// If allowed, same window can be displayed several times (like for RCanvas or TCanvas); ///; /// Following parameters can be configured in rootrc file:; ///; /// WebGui.Display: kind of display like chrome or firefox or browser, can be overwritten by --web=value command line argument; /// WebGui.OnetimeKey: if configured requires unique key every time window is connected (default yes); /// WebGui.Chrome: full path to Google Chrome executable; /// WebGui.ChromeBatch: command to start chrome in batch, used for image production, like ""$prog --headless --disable-gpu $geometry $url""; /// WebGui.ChromeHeadless: command to start chrome in headless mode, like ""fork: --headless --disable-gpu $geometry $url""; /// WebGui.ChromeInteractive: command to start chrome in interactive mode, like ""$prog $geometry --app=\'$url\' &""; /// WebGui.Firefox: full path to Mozilla Firefox executable; /// WebGui.FirefoxHeadless: command to start Firefox in headless mode, like ""fork:--headless --private-window --no-remote $profile $url""; /// WebGui.FirefoxInteractive: command to start Firefox in interactive mode, like ""$prog --private-window \'$url\' &""; /// WebGui.FirefoxProfile: name of Firefox profile to use; /// WebGui.FirefoxProfilePath: file path to Firefox profile; /// WebGui.FirefoxRandomProfile: usage of random Firefox profile -1 never, 0 - only fo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx:1062,config,configured,1062,gui/webdisplay/src/RWebWindowsManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx,1,['config'],['configured']
Modifiability,"0.5*pow(((y-[MeanY])/[SigmaY]),2 )- 0.5*pow(((z-[MeanZ])/[SigmaZ]),2))`. ### An expanded note on variables and parameters. In a TFormula, a variable is a defined by a name `x`, `y`, `z` or `t` or an; index like `x[0]`, `x[1]`, `x[2]`; that is `x[N]` where N is an integer. ```; TFormula("""", ""x[0] * x[1] + 10""); ```. Parameters are similar and can take any name. It is specified using brackets; e.g. `[expected_mass]` or `[0]`. ```; TFormula("""", ""exp([expected_mass])-1""); ```. Variables and parameters can be combined in the same TFormula. Here we consider; a very simple case where we have an exponential decay after some time t and a; number of events with timestamps for which we want to evaluate this function. ```; TFormula tf ("""", ""[0]*exp(-[1]*t)"");; tf.SetParameter(0, 1);; tf.SetParameter(1, 0.5);. for (auto & event : events) {; tf.Eval(event.t);; }; ```. The distinction between variables and parameters arose from the TFormula's; application in fitting. There parameters are fitted to the data provided; through variables. In other applications this distinction can go away. Parameter values can be provided dynamically using `TFormula::EvalPar`; instead of `TFormula::Eval`. In this way parameters can be used identically; to variables. See below for an example that uses only parameters to model a; function. ```; Int_t params[2] = {1, 2}; // {vel_x, vel_y}; TFormula tf ("""", ""[vel_x]/sqrt(([vel_x + vel_y])**2)"");. tf.EvalPar(nullptr, params);; ```. ### A note on operators. All operators of C/C++ are allowed in a TFormula with a few caveats. The operators `|`, `&`, `%` can be used but will raise an error if used in; conjunction with a variable or a parameter. Variables and parameters are treated; as doubles internally for which these operators are not defined.; This means the following command will run successfully; ```root -l -q -e TFormula("""", ""x+(10%3)"").Eval(0)```; but not; ```root -l -q -e TFormula("""", ""x%10"").Eval(0)```. The operator `^` is defined to mean exponentiati",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:6320,variab,variables,6320,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variables']
Modifiability,"00);; c->DrawColorTable();; return c;; }; End_Macro. ### Color transparency. `SetMarkerColorAlpha()`, allows to set a transparent color.; In the following example the marker color of the histogram `histo`; is set to blue with an opacity of 35% (i.e. a transparency of 65%).; (The color `kBlue` itself is internally stored as fully opaque.). ~~~ {.cpp}; histo->SetMarkerColorAlpha(kBlue, 0.35);; ~~~. The transparency is available on all platforms when the flag `OpenGL.CanvasPreferGL` is set to `1`; in `$ROOTSYS/etc/system.rootrc`, or on Mac with the Cocoa backend. On the file output; it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript. Alternatively, you can call at the top of your script `gSytle->SetCanvasPreferGL();`.; Or if you prefer to activate GL for a single canvas `c`, then use `c->SetSupportGL(true);`. \anchor ATTMARKER2; ## Marker style. The Marker style defines the markers' shape.; The marker style of any class inheriting from `TAttMarker` can; be changed using the method `SetMarkerStyle` and retrieved using the; method `GetMarkerStyle`. The following list gives the currently supported markers (screen; and PostScript) style. Each marker style is identified by an integer number; (first column) corresponding to a marker shape (second column) and can be also; accessed via a global name (third column). ~~~ {.cpp}; Marker number Marker shape Marker name; 1 dot kDot; 2 + kPlus; 3 * kStar; 4 o kCircle; 5 x kMultiply; 6 small dot kFullDotSmall; 7 medium dot kFullDotMedium; 8 large scalable dot kFullDotLarge; 9 -->19 large scalable dot; 20 full circle kFullCircle; 21 full square kFullSquare; 22 full triangle up kFullTriangleUp; 23 full triangle down kFullTriangleDown; 24 open circle kOpenCircle; 25 open square kOpenSquare; 26 open triangle up kOpenTriangleUp; 27 open diamond kOpenDiamond; 28 open cross kOpenCross; 29 full star kFullStar; 30 open star kOpenStar; 31 *; 32 open triangle down kOpenTriangleDown; 33 full diamond kFullDiamond; 34 full cro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttMarker.cxx:1771,inherit,inheriting,1771,core/base/src/TAttMarker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttMarker.cxx,1,['inherit'],['inheriting']
Modifiability,"006; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; //; // TSQLColumnInfo; //; // Contains information about single column from SQL table; // Has following methods:; // GetTypeName() - field type name in string form as it is reported by correspondent; // database method. Some databases providing full type name like ""numeric(20)"",; // other showing only ""NUMERIC"". As a result, one cannot use this string directly; // to create new field of similar types in other table; // IsNullable() - says if field value can be NULL or not; // GetSQLType() - returns kind of sql type. Possible values:; // TSQLServer::kSQL_NONE data type unknown; // TSQLServer::kSQL_CHAR CHAR(n) - string with fixed length n; // TSQLServer::kSQL_VARCHAR VARCHAR(n) - string with variable length upto n; // TSQLServer::kSQL_INTEGER INTEGER, INT, TINYINT - any integer types; // TSQLServer::kSQL_FLOAT FLOAT - float value; // TSQLServer::kSQL_DOUBLE DOUBLE - double precision value; // TSQLServer::kSQL_NUMERIC NUMERIC(n,s), NUMBER(n,s) - numeric values with length and precion; // TSQLServer::kSQL_BINARY BLOB, VARBINARY - binary data (vriable or fixed size); // TSQLServer::kSQL_TIMESTAMP TIMESTAMP - time and date stamp; // GetSize() - size of field in database. -1 if not known.; // GetLength() - length argument in type declaration like CHAR(len) or NUMERIC(len), -1 if not defined; // GetScale() - second argument in declarations like NUMERIC(len, s), -1 if not defined; // GetSigned() - is type signed(==1) or unsigned(==0), -1 if not defined; //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLColumnInfo.cxx:1198,variab,variable,1198,net/net/src/TSQLColumnInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLColumnInfo.cxx,1,['variab'],['variable']
Modifiability,"1->FillRandom(""gaus"",30000);; h1->SetFillColor(kGreen);; h1->SetFillStyle(3003);; h1->Draw();. auto f1=new TF1(""f1"",""1000*TMath::Abs(sin(x)/x)"",-10,10);; f1->SetLineColor(kBlue);; f1->SetLineWidth(4);; f1->Draw(""same"");. const Int_t n = 20;; Double_t x[n], y[n], ex[n], ey[n];; for (Int_t i=0;i<n;i++) {; x[i] = i*0.1;; y[i] = 1000*sin(x[i]+0.2);; x[i] = 17.8*x[i]-8.9;; ex[i] = 1.0;; ey[i] = 10.*i;; }; auto gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetName(""gr"");; gr->SetLineColor(kRed);; gr->SetLineWidth(2);; gr->SetMarkerStyle(21);; gr->SetMarkerSize(1.3);; gr->SetMarkerColor(7);; gr->Draw(""P"");. auto legend = new TLegend(0.1,0.7,0.48,0.9);; legend->SetHeader(""The Legend Title"",""C""); // option ""C"" allows to center the header; legend->AddEntry(h1,""Histogram filled with random numbers"",""f"");; legend->AddEntry(""f1"",""Function abs(#frac{sin(x)}{x})"",""l"");; legend->AddEntry(""gr"",""Graph with error bars"",""lep"");; legend->Draw();; }; End_Macro. `TLegend` inherits from `TAttText` therefore changing any; text attributes (text alignment, font, color...) on a legend will changed the; text attributes on each line. In particular it can be interesting to change the text alignement that way. In; order to have a base-line vertical alignment instead of a centered one simply do:; ~~~ {.cpp}; legend->SetTextAlign(13);; ~~~; or; ~~~ {.cpp}; legend->SetTextAlign(11);; ~~~; The default value of some `TLegend` attributes can be changed using; `gStyle`. The default settings are:; ~~~ {.cpp}; SetLegendBorderSize(1);; SetLegendFillColor(0);; SetLegendFont(42);; SetLegendTextSize(0.);; ~~~; The global attributes change the default values for the next created legends. Text attributes can be also changed individually on each legend entry:; ~~~ {.cpp}; TLegendEntry *le = leg->AddEntry(h1,""Histogram filled with random numbers"",""f"");; le->SetTextColor(kBlue);; ~~~. Note that the `TPad` class has a method to build automatically a legend; for all objects in the pad. It is called `TPad::BuildLegend()`. E",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLegend.cxx:2088,inherit,inherits,2088,graf2d/graf/src/TLegend.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLegend.cxx,1,['inherit'],['inherits']
Modifiability,"2) A program when released has no strange ""features"" or bugs.; 3) A program is robust and handles ALL extreme and unusual cases.; 4) A program is written in phases and modules with hard tests for each one.; 5) A program is written for any user who doesn't need special knowledge; to use the program.; 6) A program has well defined user requirements and functional specifications.; 7) A program is written with regard to future expansion and integreation; with other systems (portability). When programming following these additional principles make programs easier; to maintain. A) Choose variable names that accurately describes what the variable does/is.; B) Write comments to inform someone faced with the task of modifying your code.; C) Avoid excessive comments. Write the code so that it says what it does.; D) Follow a strict one-in, one-out flow of control structues except in the; case of fatal error conditions.; E) Avoid using global variables.; F) Do not cause side effects to variables that were not parameters to a; function.; G) Have a single function perform a single purpose.; H) Select a single indentation style and stick with it.; I) Use a consistent naming convention. The following principles help me when I try optimizing code:. a) If optimizing, use a profiler to determine which sections of code most of; the time is spent in. Spend most of your effort in the most used sections.; Don't bother optimizing a procedure using less than 10% of the time. b) High level optimizations are far more effective than cycle shaving.; (e.g. use quick sort instead of optimizing a bubble sort.). c) Be flexible in your approach to solving a problem. List exactly what you; need as a result at a minimum. Get rid of unnecessary assumptions. d) Become familiar with sets of operations that are equivalent, or nearly so.; Learn the relative expense of basic operations. e) If possible, be careful not to needlessly sacrifice significant readability; of the code for a cycle or two. -- Spy. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:3148,flexible,flexible,3148,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['flexible'],['flexible']
Modifiability,"20010404/150441 At:243649 N=9583 TBasket CX = 3.34; /// 20010404/150442 At:253232 N=28324 TBasket CX = 1.13; /// 20010404/150442 At:281556 N=29641 TBasket CX = 1.08; /// 20010404/150442 At:311197 N=29633 TBasket CX = 1.08; /// 20010404/150442 At:340830 N=29091 TBasket CX = 1.10; /// 20010404/150442 At:369921 N=10341 TBasket CX = 3.09; /// 20010404/150442 At:380262 N=509 TH1F CX = 1.93; /// 20010404/150442 At:380771 N=1769 TH2F CX = 4.32; /// 20010404/150442 At:382540 N=1849 TProfile CX = 1.65; /// 20010404/150442 At:384389 N=18434 TNtuple CX = 4.51; /// 20010404/150442 At:402823 N=307 KeysList; /// 20010404/150443 At:403130 N=4548 StreamerInfo CX = 3.65; /// 20010404/150443 At:407678 N=86 FreeSegments; /// 20010404/150443 At:407764 N=1 END; ///; /// If the parameter opt contains ""forComp"", the Date/Time is omitted; /// and the decompressed size is also printed.; ///; /// Record_Adress Logical_Record_Length Key_Length Object_Record_Length ClassName CompressionFactor; ///; /// If the parameter opt contains ""extended"", the name and title of the keys are added:; /// 20200820/155031 At:100 N=180 TFile name: hsimple.root title: Demo ROOT file with histograms; /// 220200820/155032 At:280 N=28880 TBasket CX = 1.11 name: random title: ntuple; /// 220200820/155032 At:29160 N=29761 TBasket CX = 1.08 name: px title: ntuple; /// 220200820/155032 At:58921 N=29725 TBasket CX = 1.08 name: py title: ntuple; /// 220200820/155032 At:88646 N=29209 TBasket CX = 1.10 name: pz title: ntuple; /// 220200820/155032 At:117855 N=10197 TBasket CX = 3.14 name: i title: ntuple; /// ...; /// 20200820/155032 At:405110 N=808 TNtuple CX = 3.53 name: ntuple title: Demo ntuple; /// 20200820/155706 At:405918 N=307 KeysList name: hsimple.root title: Demo ROOT file with histograms; /// 20200820/155032 At:406225 N=8556 StreamerInfo CX = 3.42 name: StreamerInfo title: Doubly linked list; /// 20200820/155708 At:414781 N=86 FreeSegments name: hsimple.root title: Demo ROOT file with histograms; /// 20200820/155",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:1864,extend,extended,1864,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['extend'],['extended']
Modifiability,"2; ### 2 - Expression using variable x with parameters. #### Case 1: inline expression using standard C++ functions/operators. * Example a:. ~~~~{.cpp}; auto fa = new TF1(""fa"",""[0]*x*sin([1]*x)"",-3,3);; ~~~~. This creates a function of variable x with 2 parameters. The parameters must be initialized via:. ~~~~{.cpp}; fa->SetParameter(0,value_first_parameter);; fa->SetParameter(1,value_second_parameter);; ~~~~. Parameters may be given a name:. ~~~~{.cpp}; fa->SetParName(0,""Constant"");; ~~~~. * Example b:. ~~~~{.cpp}; auto fb = new TF1(""fb"",""gaus(0)*expo(3)"",0,10);; ~~~~. ``gaus(0)`` is a substitute for ``[0]*exp(-0.5*((x-[1])/[2])**2)`` and ``(0)`` means start numbering parameters at ``0``. ``expo(3)`` is a substitute for ``exp([3]+[4]*x)``. #### Case 2: inline expression using TMath functions with parameters. Begin_Macro(source); {; auto fb2 = new TF1(""fa3"",""TMath::Landau(x,[0],[1],0)"",-5,10);; fb2->SetParameters(0.2,1.3);; fb2->Draw();; }; End_Macro. \anchor F3; ### 3 - A lambda expression with variables and parameters. \since **6.00/00:**; TF1 supports using lambda expressions in the formula. This allows, by using a full C++ syntax the full power of lambda; functions and still maintain the capability of storing the function in a file which cannot be done with; function pointer or lambda written not as expression, but as code (see items below). Example on how using lambda to define a sum of two functions.; Note that is necessary to provide the number of parameters. ~~~~{.cpp}; TF1 f1(""f1"",""sin(x)"",0,10);; TF1 f2(""f2"",""cos(x)"",0,10);; TF1 fsum(""f1"",""[&](double *x, double *p){ return p[0]*f1(x) + p[1]*f2(x); }"",0,10,2);; ~~~~. \anchor F4; ### 4 - A general C function with parameters. Consider the macro myfunc.C below:. ~~~~{.cpp}; // Macro myfunc.C; Double_t myfunction(Double_t *x, Double_t *par); {; Float_t xx =x[0];; Double_t f = TMath::Abs(par[0]*sin(par[1]*xx)/xx);; return f;; }; void myfunc(); {; auto f1 = new TF1(""myfunc"",myfunction,0,10,2);; f1->SetParameters(2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:2551,variab,variables,2551,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['variab'],['variables']
Modifiability,"6); // |.(VLAs)............................| (size of this area is unknown at; // |...................................| compile time); // |-----------------------------------| <- sp; // | | Lower address; //; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are both VLAs and local; // variables with more-than-default alignment requirements.; // * A frame pointer is definitely needed when there are local variables with; // more-than-default alignment requirements.; //; // In some cases when a base pointer is not strictly needed, it is generated; // anyway when offsets from the frame pointer to access local variables become; // so large that the offset can't be encoded in the immediate fields of loads; // or stores.; //; // The frame pointer might be chosen to be r7 or r11, depending on the target; // architecture and operating system. See ARMSubtarget::getFramePointerReg for; // details.; //; // Outgoing function arguments must be at the bottom of the stack frame when; // calling another function. If we do not have variable-sized stack objects, we; // can allocate a ""reserved call frame"" area at the bottom of the local; // variable area, large enough for all outgoing calls. If we do have VLAs, then; // the stack pointer must be decremented and incremented around each call to; // make space for the arguments below the VLAs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp:3631,variab,variables,3631,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,3,['variab'],"['variable', 'variable-sized', 'variables']"
Modifiability,"8| <cleanupcode> |; // 9| LIFETIME_END b1, b2 |; // 10| return |; // +-----------------------+; //; // If we create live intervals for the variables above strictly based; // on the lifetime markers, we'll get the set of intervals on the; // left. If we ignore the lifetime start markers and instead treat a; // variable's lifetime as beginning with the first reference to the; // var, then we get the intervals on the right.; //; // LIFETIME_START First Use; // b1: [0,9] [3,4] [8,9]; // b2: [0,9] [6,9]; // b3: [2,4] [3,4]; // b4: [5,7] [6,7]; // b5: [5,7] [6,7]; //; // For the intervals on the left, the best we can do is overlap two; // variables (b3 and b4, for example); this gives us a stack size of; // 4*1024 bytes, not ideal. When treating first-use as the start of a; // lifetime, we can additionally overlap b1 and b5, giving us a 3*1024; // byte stack (better).; //; // Degenerate Slots:; // -----------------; //; // Relying entirely on first-use of stack slots is problematic,; // however, due to the fact that optimizations can sometimes migrate; // uses of a variable outside of its lifetime start/end region. Here; // is an example:; //; // int bar() {; // char b1[1024], b2[1024];; // if (...) {; // <uses of b2>; // return y;; // } else {; // <uses of b1>; // while (...) {; // char b3[1024];; // <uses of b3>; // }; // }; // }; //; // Before optimization, the control flow graph for the code above; // might look like the following:; //; // +------ block 0 -------+; // 0| LIFETIME_START b1, b2 |; // 1| <test 'if' condition> |; // +-----------------------+; // ./ \.; // +------ block 1 -------+ +------- block 2 -------+; // 2| <uses of b2> | 3| <uses of b1> |; // +-----------------------+ +-----------------------+; // | |; // | +------- block 3 -------+ <-\.; // | 4| <while condition> | |; // | +-----------------------+ |; // | / | |; // | / +------- block 4 -------+; // \ / 5| LIFETIME_START b3 | |; // \ / 6| <uses of b3> | |; // \ / 7| LIFETIME_END b3 | |; // \ | +---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp:7972,variab,variable,7972,interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,1,['variab'],['variable']
Modifiability,": List of Objective C Instance Variables; weak-ref-symbols: [] # Optional: List of weak defined symbols; */; /*. YAML Format specification. --- !tapi-tbd; tbd-version: 4 # The tbd version for format; targets: [ armv7-ios, x86_64-maccatalyst ] # The list of applicable tapi supported target triples; uuids: # Optional: List of target and UUID pairs.; - target: armv7-ios; value: ...; - target: x86_64-maccatalyst; value: ...; flags: [] # Optional:; install-name: /u/l/libfoo.dylib #; current-version: 1.2.3 # Optional: defaults to 1.0; compatibility-version: 1.0 # Optional: defaults to 1.0; swift-abi-version: 0 # Optional: defaults to 0; parent-umbrella: # Optional:; allowable-clients:; - targets: [ armv7-ios ] # Optional:; clients: [ clientA ]; exports: # List of export sections; ...; re-exports: # List of reexport sections; ...; undefineds: # List of undefineds sections; ... Each export and reexport section is defined as following:. - targets: [ arm64-macos ] # The list of target triples associated with symbols; symbols: [ _symA ] # Optional: List of symbols; objc-classes: [] # Optional: List of Objective-C classes; objc-eh-types: [] # Optional: List of Objective-C classes; # with EH; objc-ivars: [] # Optional: List of Objective C Instance; # Variables; weak-symbols: [] # Optional: List of weak defined symbols; thread-local-symbols: [] # Optional: List of thread local symbols; - targets: [ arm64-macos, x86_64-maccatalyst ] # Optional: Targets for applicable additional symbols; symbols: [ _symB ] # Optional: List of symbols. Each undefineds section is defined as following:; - targets: [ arm64-macos ] # The list of target triples associated with symbols; symbols: [ _symC ] # Optional: List of symbols; objc-classes: [] # Optional: List of Objective-C classes; objc-eh-types: [] # Optional: List of Objective-C classes; # with EH; objc-ivars: [] # Optional: List of Objective C Instance Variables; weak-symbols: [] # Optional: List of weak defined symbols; */; // clang-format on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp:5573,Variab,Variables,5573,interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp,2,['Variab'],['Variables']
Modifiability,"; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodFisher; \ingroup TMVA. Fisher and Mahalanobis Discriminants (Linear Discriminant Analysis). In the method of Fisher discriminants event selection is performed; in a transformed variable space with zero linear correlations, by; distinguishing the mean values of the signal and background; distributions. The linear discriminant analysis determines an axis in the (correlated); hyperspace of the input variables; such that, when projecting the output classes (signal and background); upon this axis, they are pushed as far as possible away from each other,; while events of a same class are confined in a close vicinity.; The linearity property of this method is reflected in the metric with; which ""far apart"" and ""close vicinity"" are determined: the covariance; matrix of the discriminant variable space. The classification of the events in signal and background classes; relies on the following characteristics (only): overall sample means, \f$ x_i \f$,; for each input variable, \f$ i \f$,; class-specific sample means, \f$ x_{S(B),i}\f$,; and total covariance matrix \f$ T_{ij} \f$. The covariance matrix; can be decomposed into the sum of a _within_ (\f$ W_{ij} \f$); and a _between-class_ (\f$ B_{ij} \f$) class matrix. They describe; the dispersion of events relative to the means of their own class (within-class; matrix), and relative to the overall sample means (between-class matrix).; The Fisher coefficients, \f$ F_i \f$, are then given by. \f[; F_i = \frac{\sqrt{N_s N_b}}{N_s + N_b} \sum_{j=1}^{N_{SB}} W_{ij}^{-1} (\bar{X}_{Sj} - \bar{X}_{Bj}); \f]. where in TMVA is set \f$ N_S = N_B \f$, so that the factor; in front of the sum simplifies to \f$ \frac{1}{2}\f$.; The Fisher discriminant then re",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx:2018,variab,variable,2018,tmva/tmva/src/MethodFisher.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx,1,['variab'],['variable']
Modifiability,"; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBtree; \ingroup Containers; B-tree class. TBtree inherits from the TSeqCollection ABC. ## B-tree Implementation notes. This implements B-trees with several refinements. Most of them can be found; in Knuth Vol 3, but some were developed to adapt to restrictions imposed; by C++. First, a restatement of Knuth's properties that a B-tree must; satisfy, assuming we make the enhancement he suggests in the paragraph; at the bottom of page 476. Instead of storing null pointers to non-existent; nodes (which Knuth calls the leaves) we utilize the space to store keys.; Therefore, what Knuth calls level (l-1) is the bottom of our tree, and; we call the nodes at this level LeafNodes. Other nodes are called InnerNodes.; The other enhancement we have adopted is in the paragraph at the bottom of; page 477: overflow control. The following are modifications of Knuth's properties on page 478:. 1. Every InnerNode has at most Order keys, and at most Order+1 sub-trees.; 2. Every LeafNode has at most 2*(Order+1) keys.; 3. An InnerNode with k keys has k+1 sub-trees.; 4. Every InnerNode that is not the root has at least InnerLowWaterMark keys.; 5. Every LeafNode that is not the root has at least LeafLowWaterMark keys.; 6. If the root is a LeafNode, it has at least one key.; 7. If the root is an InnerNode, it has at least one key and two sub-trees.; 8. All LeafNodes are the same distance from the root as all the other; LeafNodes.; 9. For InnerNode n with key n[i].key, then sub-tree n[i-1].tree contains; all keys < n[i].key, and sub-tree n[i].tree contains all keys; >= n[i].key.; 10. Order is at least 3. The values of InnerLowWaterMark and LeafLowWaterMark may actually be set; by the user when the tree is initialized, but currently they are set; automatically to:;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:1155,enhance,enhancement,1155,core/cont/src/TBtree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx,1,['enhance'],['enhancement']
Modifiability,"; * INPUTS; * asv - pointer to valid ASVisual structure; * layers - array of ASImageLayer structures that will be rendered; * one on top of another. First element corresponds to; * the bottommost layer.; * dst_width - desired width of the resulting image; * dst_height - desired height of the resulting image; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out - compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; * DESCRIPTION; * merge_layers() will create new ASImage of requested size. It will then; * go through all the layers, and fill image with composition.; * Bottommost layer will be used unchanged and above layers will be; * superimposed on it, using algorithm specified in ASImageLayer; * structure of the overlaying layer. Layers may have smaller size; * then destination image, and maybe placed in arbitrary locations. Each; * layer will be padded to fit width of the destination image with all 0; * effectively making it transparent.; *********/; /****f* libAfterImage/transform/make_gradient(); * NAME; * make_gradient() - renders linear gradient into new ASImage; * SYNOPSIS; * ASImage *make_gradient ( struct ASVisual *asv,; * struct ASGradient *grad,; * unsigned int width,; * unsigned int height,; * ASFlagType filter,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality);; * INPUTS; * asv - pointer to valid ASVisual structure; * grad - ASGradient structure defining how gradient should be; * drawn; * width - desired width of the resulting image; * height - desired height of the resulting image; * filter - only channels corresponding to set bits will be; * rendered.; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out- compression level of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:5149,Layers,Layers,5149,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['Layers'],['Layers']
Modifiability,"; * parent's environment.; *; * @flags should be the bitwise OR of any flags you want to affect the; * function's behavior. The %G_SPAWN_DO_NOT_REAP_CHILD means that the; * child will not be automatically reaped; you must call waitpid() or; * handle SIGCHLD yourself, or the child will become a zombie.; * %G_SPAWN_LEAVE_DESCRIPTORS_OPEN means that the parent's open file; * descriptors will be inherited by the child; otherwise all; * descriptors except stdin/stdout/stderr will be closed before; * calling exec() in the child. %G_SPAWN_SEARCH_PATH means that; * <literal>argv[0]</literal> need not be an absolute path, it; * will be looked for in the user's PATH. %G_SPAWN_STDOUT_TO_DEV_NULL; * means that the child's standad output will be discarded, instead; * of going to the same location as the parent's standard output.; * %G_SPAWN_STDERR_TO_DEV_NULL means that the child's standard error; * will be discarded. %G_SPAWN_CHILD_INHERITS_STDIN means that; * the child will inherit the parent's standard input (by default,; * the child's standard input is attached to /dev/null).; * %G_SPAWN_FILE_AND_ARGV_ZERO means that the first element of @argv is; * the file to execute, while the remaining elements are the; * actual argument vector to pass to the file. Normally; * g_spawn_async_with_pipes() uses @argv[0] as the file to execute, and; * passes all of @argv to the child.; *; * @child_setup and @user_data are a function and user data to be; * called in the child after GLib has performed all the setup it plans; * to perform (including creating pipes, closing file descriptors,; * etc.) but before calling exec(). That is, @child_setup is called; * just before calling exec() in the child. Obviously actions taken in; * this function will only affect the child, not the parent. ; *; * If non-NULL, @child_pid will be filled with the child's process; * ID. You can use the process ID to send signals to the child, or; * to waitpid() if you specified the %G_SPAWN_DO_NOT_REAP_CHILD flag.; *; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c:2432,inherit,inherit,2432,graf2d/win32gdk/gdk/src/glib/gspawn.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c,1,['inherit'],['inherit']
Modifiability,"; * parent's environment.; *; * @flags should be the bitwise OR of any flags you want to affect the; * function's behavior. The %G_SPAWN_DO_NOT_REAP_CHILD means that the; * child will not be automatically reaped; you must call waitpid() or; * handle SIGCHLD yourself, or the child will become a zombie.; * %G_SPAWN_LEAVE_DESCRIPTORS_OPEN means that the parent's open file; * descriptors will be inherited by the child; otherwise all; * descriptors except stdin/stdout/stderr will be closed before; * calling exec() in the child. %G_SPAWN_SEARCH_PATH means that; * <literal>argv[0]</literal> need not be an absolute path, it; * will be looked for in the user's PATH. %G_SPAWN_STDOUT_TO_DEV_NULL; * means that the child's standad output will be discarded, instead; * of going to the same location as the parent's standard output.; * %G_SPAWN_STDERR_TO_DEV_NULL means that the child's standard error; * will be discarded. %G_SPAWN_CHILD_INHERITS_STDIN means that; * the child will inherit the parent's standard input (by default,; * the child's standard input is attached to /dev/null).; *; * @child_setup and @user_data are a function and user data to be; * called in the child after GLib has performed all the setup it plans; * to perform (including creating pipes, closing file descriptors,; * etc.) but before calling exec(). That is, @child_setup is called; * just before calling exec() in the child. Obviously actions taken in; * this function will only affect the child, not the parent. ; *; * If non-NULL, @child_pid will be filled with the child's process; * ID. You can use the process ID to send signals to the child, or; * to waitpid() if you specified the %G_SPAWN_DO_NOT_REAP_CHILD flag.; *; * If non-NULL, the @standard_input, @standard_output, @standard_error; * locations will be filled with file descriptors for writing to the child's; * standard input or reading from its standard output or standard error.; * The caller of g_spawn_async_with_pipes() must close these file descriptors;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:2432,inherit,inherit,2432,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,1,['inherit'],['inherit']
Modifiability,"; /*. YAML Format specification. --- !tapi-tbd-v3; archs: [ armv7, armv7s, arm64 ] # the list of architecture slices that are; # supported by this file.; uuids: [ armv7:... ] # Optional: List of architecture and UUID pairs.; platform: ios # Specifies the platform (macosx, ios, etc); flags: [] # Optional:; install-name: /u/l/libfoo.dylib #; current-version: 1.2.3 # Optional: defaults to 1.0; compatibility-version: 1.0 # Optional: defaults to 1.0; swift-abi-version: 0 # Optional: defaults to 0; objc-constraint: retain_release # Optional: defaults to retain_release; parent-umbrella: # Optional:; exports: # List of export sections; ...; undefineds: # List of undefineds sections; ... Each export section is defined as following:. - archs: [ arm64 ] # the list of architecture slices; allowed-clients: [ client ] # Optional: List of clients; re-exports: [ ] # Optional: List of re-exports; symbols: [ _sym ] # Optional: List of symbols; objc-classes: [] # Optional: List of Objective-C classes; objc-eh-types: [] # Optional: List of Objective-C classes; # with EH; objc-ivars: [] # Optional: List of Objective C Instance; # Variables; weak-def-symbols: [] # Optional: List of weak defined symbols; thread-local-symbols: [] # Optional: List of thread local symbols. Each undefineds section is defined as following:; - archs: [ arm64 ] # the list of architecture slices; symbols: [ _sym ] # Optional: List of symbols; objc-classes: [] # Optional: List of Objective-C classes; objc-eh-types: [] # Optional: List of Objective-C classes; # with EH; objc-ivars: [] # Optional: List of Objective C Instance Variables; weak-ref-symbols: [] # Optional: List of weak defined symbols; */; /*. YAML Format specification. --- !tapi-tbd; tbd-version: 4 # The tbd version for format; targets: [ armv7-ios, x86_64-maccatalyst ] # The list of applicable tapi supported target triples; uuids: # Optional: List of target and UUID pairs.; - target: armv7-ios; value: ...; - target: x86_64-maccatalyst; value: ...; fla",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp:3870,Variab,Variables,3870,interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp,1,['Variab'],['Variables']
Modifiability,"; // by means of varying a few constant or type parameters.; //; // Most obviously, the intrinsics in a single parametrised family will have; // code generation sequences that only differ in a type or two, e.g. vaddq_s8; // and vaddq_u16 will look the same apart from putting a different vector type; // in the call to CGM.getIntrinsic(). But also, completely different intrinsics; // will often code-generate in the same way, with only a different choice of; // _which_ IR intrinsic they lower to (e.g. vaddq_m_s8 and vmulq_m_s8), but; // marshalling the arguments and return values of the IR intrinsic in exactly; // the same way. And others might differ only in some other kind of constant,; // such as a lane index.; //; // So, when we generate the IR-building code for all these intrinsics, we keep; // track of every value that could possibly be pulled out of the code and; // stored ahead of time in a local variable. Then we group together intrinsics; // by textual equivalence of the code that would result if _all_ those; // parameters were stored in local variables. That gives us maximal sets that; // can be implemented by a single piece of IR-building code by changing; // parameter values ahead of time.; //; // After we've done that, we do a second pass in which we only allocate _some_; // of the parameters into local variables, by tracking which ones have the same; // values as each other (so that a single variable can be reused) and which; // ones are the same across the whole set (so that no variable is needed at; // all).; //; // Hence the class below. Its allocParam method is invoked during code; // generation by every method of a Result subclass (see below) that wants to; // give it the opportunity to pull something out into a switchable parameter.; // It returns a variable name for the parameter, or (if it's being used in the; // second pass once we've decided that some parameters don't need to be stored; // in variables after all) it might just return the input e",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:1228,variab,variables,1228,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,1,['variab'],['variables']
Modifiability,"; // can rely on a little trick: for `S` and `T` to be in-use together,; // one of them needs to become in-use while the other is in-use (or; // they might both become in use simultaneously). We can check this; // by also keeping track of the points at which a stack slot might *start*; // being in-use.; //; // Exact first use:; // ----------------; //; // Consider the following motivating example:; //; // int foo() {; // char b1[1024], b2[1024];; // if (...) {; // char b3[1024];; // <uses of b1, b3>;; // return x;; // } else {; // char b4[1024], b5[1024];; // <uses of b2, b4, b5>;; // return y;; // }; // }; //; // In the code above, ""b3"" and ""b4"" are declared in distinct lexical; // scopes, meaning that it is easy to prove that they can share the; // same stack slot. Variables ""b1"" and ""b2"" are declared in the same; // scope, meaning that from a lexical point of view, their lifetimes; // overlap. From a control flow pointer of view, however, the two; // variables are accessed in disjoint regions of the CFG, thus it; // should be possible for them to share the same stack slot. An ideal; // stack allocation for the function above would look like:; //; // slot 0: b1, b2; // slot 1: b3, b4; // slot 2: b5; //; // Achieving this allocation is tricky, however, due to the way; // lifetime markers are inserted. Here is a simplified view of the; // control flow graph for the code above:; //; // +------ block 0 -------+; // 0| LIFETIME_START b1, b2 |; // 1| <test 'if' condition> |; // +-----------------------+; // ./ \.; // +------ block 1 -------+ +------ block 2 -------+; // 2| LIFETIME_START b3 | 5| LIFETIME_START b4, b5 |; // 3| <uses of b1, b3> | 6| <uses of b2, b4, b5> |; // 4| LIFETIME_END b3 | 7| LIFETIME_END b4, b5 |; // +-----------------------+ +-----------------------+; // \. /.; // +------ block 3 -------+; // 8| <cleanupcode> |; // 9| LIFETIME_END b1, b2 |; // 10| return |; // +-----------------------+; //; // If we create live intervals for the variables above st",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp:6020,variab,variables,6020,interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,1,['variab'],['variables']
Modifiability,"; // entirely. Preferring more-aligned fields is an attempt to eliminate; // stricter constraints earlier, with the idea that weaker alignment; // constraints may be resolvable with less padding elsewhere. These; // These two rules are sufficient to ensure that we get the optimal; // layout in the ""C-style"" case. Preferring larger fields tends to take; // better advantage of large gaps and may be more likely to have a size; // that's a multiple of a useful alignment. Preferring the initial; // order may help somewhat with locality but is mostly just a way of; // ensuring deterministic output.; //; // Note that this algorithm does not guarantee a minimal layout. Picking; // a larger object greedily may leave a gap that cannot be filled as; // efficiently. Unfortunately, solving this perfectly is an NP-complete; // problem (by reduction from bin-packing: let B_i be the bin sizes and; // O_j be the object sizes; add fixed-offset fields such that the gaps; // between them have size B_i, and add flexible-offset fields with; // alignment 1 and size O_j; if the layout size is equal to the end of; // the last fixed-layout field, the objects fit in the bins; note that; // this doesn't even require the complexity of alignment).; // The implementation below is essentially just an optimized version of; // scanning the list of remaining fields looking for the best, which; // would be O(n^2). In the worst case, it doesn't improve on that.; // However, in practice it'll just scan the array of alignment bins; // and consider the first few elements from one or two bins. The; // number of bins is bounded by a small constant: alignments are powers; // of two that are vanishingly unlikely to be over 64 and fairly unlikely; // to be over 8. And multiple elements only need to be considered when; // filling a gap between fixed-offset fields, which doesn't happen very; // often. We could use a data structure within bins that optimizes for; // finding the best-sized match, but it would requi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp:2502,flexible,flexible-offset,2502,interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp,1,['flexible'],['flexible-offset']
Modifiability,"; // layout in the ""C-style"" case. Preferring larger fields tends to take; // better advantage of large gaps and may be more likely to have a size; // that's a multiple of a useful alignment. Preferring the initial; // order may help somewhat with locality but is mostly just a way of; // ensuring deterministic output.; //; // Note that this algorithm does not guarantee a minimal layout. Picking; // a larger object greedily may leave a gap that cannot be filled as; // efficiently. Unfortunately, solving this perfectly is an NP-complete; // problem (by reduction from bin-packing: let B_i be the bin sizes and; // O_j be the object sizes; add fixed-offset fields such that the gaps; // between them have size B_i, and add flexible-offset fields with; // alignment 1 and size O_j; if the layout size is equal to the end of; // the last fixed-layout field, the objects fit in the bins; note that; // this doesn't even require the complexity of alignment).; // The implementation below is essentially just an optimized version of; // scanning the list of remaining fields looking for the best, which; // would be O(n^2). In the worst case, it doesn't improve on that.; // However, in practice it'll just scan the array of alignment bins; // and consider the first few elements from one or two bins. The; // number of bins is bounded by a small constant: alignments are powers; // of two that are vanishingly unlikely to be over 64 and fairly unlikely; // to be over 8. And multiple elements only need to be considered when; // filling a gap between fixed-offset fields, which doesn't happen very; // often. We could use a data structure within bins that optimizes for; // finding the best-sized match, but it would require allocating memory; // and copying data, so it's unlikely to be worthwhile.; // Start by organizing the flexible-offset fields into bins according to; // their alignment. We expect a small enough number of bins that we; // don't care about the asymptotic costs of walking this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp:3603,flexible,flexible-offset,3603,interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp,1,['flexible'],['flexible-offset']
Modifiability,"; /// 1. Form ""odbc://[user[:passwd]@]<host>[:<port>][/<database>][?Driver]"",; /// e.g.: ""odbc://pcroot.cern.ch:3306/test?MySQL"".; /// Driver argument specifies ODBC driver, which should be used for; /// connection. By default, MyODBC driver name is used.; /// The uid is the username and pw the password that should be used; /// for the connection.; /// If uid and pw are not specified (==0), user and passwd arguments from; /// URL will be used. Works only with MySQL ODBC, probably with PostrSQL; /// ODBC.; /// 2. Form ""odbcd://DRIVER={MyODBC};SERVER=pcroot.cern.ch;DATABASE=test;USER=user;PASSWORD=pass;OPTION=3;PORT=3306;""; /// This is a form, which is accepted by SQLDriverConnect function of ODBC.; /// Here some other arguments can be specified, which are not included; /// in standard URL format.; /// 3. Form ""odbcn://MySpecialConfig"", where MySpecialConfig is entry,; /// defined in user DSN (user data source). Here uid and pw should be; /// always specified.; ///; /// Configuring unixODBC under Linux: http://www.unixodbc.org/odbcinst.html; /// Remarks: for variants 1 & 2 it is enough to create/configure; /// odbcinst.ini file. For variant 3 file odbc.ini should be created.; /// Path to this files can be specified in environmental variables like; /// export ODBCINI=/home/my/unixODBC/etc/odbc.ini; /// export ODBCSYSINI=/home/my/unixODBC/etc; ///; /// Configuring MySQL ODBC under Windows.; /// Installing ODBC driver for MySQL is enough to use it under Windows.; /// Afer odbcd:// variant can be used with DRIVER={MySQL ODBC 3.51 Driver};; /// To configure User DSN, go into Start menu -> Settings ->; /// Control panel -> Administrative tools-> Data Sources (ODBC).; ///; /// To install Oracle ODBC driver for Windows, one should download; /// and install either complete Oracle client (~500 MB), or so-called; /// Instant Client Basic and Instant Client ODBC (~20 MB together).; /// Some remark about Instant Client:; /// 1) Two additional DLLs are required: mfc71.dll & msver71",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx:1129,Config,Configuring,1129,sql/odbc/src/TODBCServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx,1,['Config'],['Configuring']
Modifiability,"; /// The format on ARM is:; ///; /// 3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0; /// 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0; /// +-------+---------+-+-+-+---+-----------------------------------+; /// | C Wrd | Epi Cnt |F|E|X|Ver| Function Length |; /// +-------+--------+'-'-'-'---'---+-------------------------------+; /// | Reserved |Ex. Code Words| (Extended Epilogue Count) |; /// +-------+--------+--------------+-------------------------------+; ///; /// The format on ARM64 is:; ///; /// 3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0; /// 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0; /// +---------+---------+-+-+---+-----------------------------------+; /// | C Wrd | Epi Cnt |E|X|Ver| Function Length |; /// +---------+------+--'-'-'---'---+-------------------------------+; /// | Reserved |Ex. Code Words| (Extended Epilogue Count) |; /// +-------+--------+--------------+-------------------------------+; ///; /// Function Length : 18-bit field indicating the total length of the function; /// in bytes divided by 2. If a function is larger than; /// 512KB, then multiple pdata and xdata records must be used.; /// Vers : 2-bit field describing the version of the remaining structure. Only; /// version 0 is currently defined (values 1-3 are not permitted).; /// X : 1-bit field indicating the presence of exception data; /// E : 1-bit field indicating that the single epilogue is packed into the; /// header; /// F : 1-bit field indicating that the record describes a function fragment; /// (implies that no prologue is present, and prologue processing should be; /// skipped) (ARM only); /// Epilogue Count : 5-bit field that differs in meaning based on the E field.; ///; /// If E is set, then this field specifies the index of the; /// first unwind code describing the (only) epilogue.; ///; /// Otherwise, this field indicates the number of exception; /// scopes. If more than 31 scopes exist, then ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h:981,Extend,Extended,981,interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h,1,['Extend'],['Extended']
Modifiability,"; /// \headerfile <x86intrin.h>; ///; /// \code; /// __m128i _mm_cmpistrm(__m128i A, __m128i B, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VPCMPISTRM / PCMPISTRM </c>; /// instruction.; ///; /// \param A; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param B; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param M; /// An 8-bit immediate operand specifying whether the characters are bytes or; /// words, the type of comparison to perform, and the format of the return; /// value. \n; /// Bits [1:0]: Determine source data format. \n; /// 00: 16 unsigned bytes \n; /// 01: 8 unsigned words \n; /// 10: 16 signed bytes \n; /// 11: 8 signed words \n; /// Bits [3:2]: Determine comparison type and aggregation method. \n; /// 00: Subset: Each character in \a B is compared for equality with all; /// the characters in \a A. \n; /// 01: Ranges: Each character in \a B is compared to \a A. The comparison; /// basis is greater than or equal for even-indexed elements in \a A,; /// and less than or equal for odd-indexed elements in \a A. \n; /// 10: Match: Compare each pair of corresponding characters in \a A and; /// \a B for equality. \n; /// 11: Substring: Search \a B for substring matches of \a A. \n; /// Bits [5:4]: Determine whether to perform a one's complement on the bit; /// mask of the comparison results. \n; /// 00: No effect. \n; /// 01: Negate the bit mask. \n; /// 10: No effect. \n; /// 11: Negate the bit mask only for bits with an index less than or equal; /// to the size of \a A or \a B. \n; /// Bit [6]: Determines whether the result is zero-extended or expanded to 16; /// bytes. \n; /// 0: The result is zero-extended to 16 bytes. \n; /// 1: The result is expanded to 16 bytes (this expansion is performed by; /// repeating each bit 8 or 16 times).; /// \returns Returns a 128-bit integer vector representing the result mask of; /// the comparison.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:1995,extend,extended,1995,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,2,['extend'],['extended']
Modifiability,"; /// will create the parameters \f$ m_A,m_B,m_C \f$ and a formula expression \f$ m_D \f$; /// that evaluates to \f$ (1-(m_A+m_B+m_C)) \f$. Constrained splits can also be; /// specified in the product of categories. In that case, the name of the; /// remainder state follows the syntax `""{State1;State2}""`, where `State1` and; /// `State2` are the state names of the two spitting categories.; ///; /// ## Splitting multiple PDFs; /// The examples so far deal with a single prototype PDF. It is also; /// possible to build with multiple prototype PDFs by specifying a; /// mapping between the prototype to use and the names of states of; /// a ""master"" splitting category. To specify these configurations,; /// an intermediate `MultiBuildConfig` must be composed with all; /// the necessary specifications. This, for example,; /// ```; /// RooSimWSTool::MultiBuildConfig mbc(""mc"");; /// mbc.addPdf(""I"",""G"",SplitParam(""m,s"",""c""));; /// mbc.addPdf(""II,III"",""F"",SplitParam(""a"",""c,d""));; /// ```; /// configures a build with two prototype PDFs \f$ G \f$ and \f$ F \f$.; /// Prototype \f$ G \f$ is used for state `""I""` of the master split category; /// `mc` and prototype \f$ F \f$ is used for states `""II""` and `""III""` of the; /// master split category `mc`. Furthermore, the parameters \f$ m,s \f$ of; /// prototype \f$ G \f$ are split; /// in category \f$ c \f$ while the parameter \f$ a \f$ of prototype \f$ F \f$ is split in; /// the product of the categories \f$ c \f$ and \f$ d \f$. The actual build is then; /// performed by passing the build configuration to RooSimWSTool, *e.g.*,; /// ```; /// wst.build(""MASTER"", mbc);; /// ```; /// By default, a specialisation is built for each permutation of; /// states of the splitting categories that are used. It is possible; /// to restrict the building of specialised PDFs to a subset of states; /// by adding a restriction on the number of states to build as follows:; /// ```; /// mbc.restrictBuild(""c"",""A,B"");; /// ```; /// The restrictBuild method ca",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:3688,config,configures,3688,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['config'],['configures']
Modifiability,"; \f[; c_1\cdot\mathrm{PDF}_1 + c_2\cdot\mathrm{PDF}_2 \; + \; ... \; + \; \left( 1-\sum_{i=1}^{n-1}c_i \right) \cdot \mathrm{PDF}_n; \f]. The first form is for extended likelihood fits, where the; expected number of events is \f$ \sum_i c_i \f$. The coefficients \f$ c_i \f$; can either be explicitly provided, or, if all components support; extended likelihood fits, they can be calculated from the contribution; of each PDF to the total expected number of events. In the second form, the sum of the coefficients is required to be 1 or less,; and the coefficient of the last PDF is calculated automatically from the condition; that the sum of all coefficients has to be 1. ### Recursive coefficients; It is also possible to parameterise the coefficients recursively. \f[; \sum_{i=1}^n c_i \prod_{j=1}^{i-1} \left[ (1-c_j) \right] \cdot \mathrm{PDF}_i \\; = c_1 \cdot \mathrm{PDF}_1 + (1-c_1)\, c_2 \cdot \mathrm{PDF}_2 + \ldots + (1-c_1)\ldots(1-c_{n-1}) \cdot 1 \cdot \mathrm{PDF}_n \\; \f]. In this form the sum of the coefficients is always less than 1.0; for all possible values of the individual coefficients between 0 and 1.; \note Don't pass the \f$ n^\mathrm{th} \f$ coefficient. It is always 1, since the normalisation condition removes one degree of freedom. RooAddPdf relies on each component PDF to be normalized and will perform; no normalization other than calculating the proper last coefficient \f$ c_n \f$, if requested.; An (enforced) condition for this assumption is that each \f$ \mathrm{PDF}_i \f$ is independent of each \f$ c_i \f$. ## Difference between RooAddPdf / RooRealSumFunc / RooRealSumPdf; - RooAddPdf is a PDF of PDFs, *i.e.* its components need to be normalised and non-negative.; - RooRealSumPdf is a PDF of functions, *i.e.*, its components can be negative, but their sum cannot be. The normalisation; is computed automatically, unless the PDF is extended (see above).; - RooRealSumFunc is a sum of functions. It is neither normalised, nor need it be positive. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:2810,extend,extended,2810,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,1,['extend'],['extended']
Modifiability,"; \ingroup MinuitOld. Implementation in C++ of the Minuit package written by Fred James.; This is a straightforward conversion of the original Fortran version. The main changes are:. - The variables in the various Minuit labelled common blocks; have been changed to the TMinuit class data members. - The internal arrays with a maximum dimension depending on the; maximum number of parameters are now data members arrays with; a dynamic dimension such that one can fit very large problems; by simply initialising the TMinuit constructor with the maximum; number of parameters. - The include file Minuit.h has been commented as much as possible; using existing comments in the code or the printed documentation. - The original Minuit subroutines are now member functions. - Constructors and destructor have been added. - Instead of passing the FCN function in the argument; list, the addresses of this function is stored as pointer; in the data members of the class. This is by far more elegant; and flexible in an interactive environment.; The member function SetFCN can be used to define this pointer. - The ROOT static function Printf is provided to replace all; format statements and to print on currently defined output file.; - The functions SetObjectFit(TObject * obj)/GetObjectFit() can be; used inside the FCN function to set/get a referenced object; instead of using global variables. ## Basic concepts of MINUIT. The [MINUIT](https://root.cern/download/minuit.pdf); package acts on a multiparameter Fortran function to which one; must give the generic name <TT>FCN</TT>. In the ROOT implementation,; the function <TT>FCN</TT> is defined via the MINUIT SetFCN member function; when an Histogram.Fit command is invoked.; The value of <TT>FCN</TT> will in general depend on one; or more variable parameters. To take a simple example, in case of ROOT histograms (classes TH1C,TH1S,TH1F,TH1D); the Fit function defines the Minuit fitting function as being H1FitChisquare; or H1FitLikelihood depend",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:1497,flexible,flexible,1497,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['flexible'],['flexible']
Modifiability,"; \kappa, \beta^2)\f$; for fixed values of \f$\kappa\f$ and \f$\beta^2\f$.; Changing these values is computationally expensive. The parameter \f$\kappa\f$ should be in the range \f$0.01 \le \kappa \le 10\f$.; In contrast to the CERNLIB implementation, all values of \f$\kappa \ge 0.001\f$ may be used,; but may result in slower running and/or inaccurate results. The parameter \f$\beta^2\f$ must be in the range \f$0 \le \beta^2 \le 1\f$. Two parameters which are fixed in the CERNLIB implementation may be set by the user:; - epsilonPM corresponds to \f$\epsilon^+ = \epsilon^-\f$ in Eqs. (2.1) and (2.2) of Schorr's paper.; epsilonPM gives an estimate on the integral of the cumulative distribution function; outside the range \f$\lambda_{min} \le \lambda \le \lambda_{max}\f$; where the approximation is valid.; Thus, it determines the support of the approximation used here (called $T_0 - T_1$ in the paper).; Schorr recommends \f$\epsilon^+ = \epsilon^- = 5\cdot 10^{-4}\f$.; The code from CERNLIB has been extended such that also smaller values are possible. - epsilon corresponds to \f$\epsilon\f$ in Eq. (4.10) of Schorr's paper.; It determines the accuracy of the series expansion.; Schorr recommends \f$\epsilon = 10^{-5}\f$. For the quantile calculation, the algorithm given by Schorr is not used,; because it turns out to be very slow and still inaccurate.; Instead, an initial estimate is calculated based on a pre-calculated table,; which is subsequently improved by Newton iterations. While the CERNLIB implementation calculates at most 156 terms in the series expansion; for the pdf and cdf calculation, this class calculates up to 500 terms, depending; on the values of epsilonPM and epsilon. Average times on a Pentium Core2 Duo P8400 2.26GHz:; - 38us per call to SetKappaBeta2 or constructor; - 0.49us per call to Pdf, Cdf; - 8.2us per first call to Quantile after SetKappaBeta2 or constructor; - 0.83us per subsequent call to Quantile. Benno List, June 2010. @ingroup StatFunc; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurate.h:3192,extend,extended,3192,math/mathmore/inc/Math/VavilovAccurate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurate.h,1,['extend'],['extended']
Modifiability,"; h2->Fill(x, y, w); h3->Fill(x, y, z); h3->Fill(x, y, z, w); ~~~; or via one of the Fill functions accepting names described above.; The Fill functions compute the bin number corresponding to the given; x, y or z argument and increment this bin by the given weight.; The Fill functions return the bin number for 1-D histograms or global; bin number for 2-D and 3-D histograms.; If TH1::Sumw2 has been called before filling, the sum of squares of; weights is also stored.; One can also increment directly a bin number via TH1::AddBinContent; or replace the existing content via TH1::SetBinContent. Passing an; out-of-range bin to TH1::AddBinContent leads to undefined behavior.; To access the bin content of a given bin, do:; ~~~ {.cpp}; Double_t binContent = h->GetBinContent(bin);; ~~~. By default, the bin number is computed using the current axis ranges.; If the automatic binning option has been set via; ~~~ {.cpp}; h->SetCanExtend(TH1::kAllAxes);; ~~~; then, the Fill Function will automatically extend the axis range to; accomodate the new value specified in the Fill argument. The method; used is to double the bin size until the new value fits in the range,; merging bins two by two. This automatic binning options is extensively; used by the TTree::Draw function when histogramming Tree variables; with an unknown range.; This automatic binning option is supported for 1-D, 2-D and 3-D histograms. During filling, some statistics parameters are incremented to compute; the mean value and Root Mean Square with the maximum precision. In case of histograms of type TH1C, TH1S, TH2C, TH2S, TH3C, TH3S; a check is made that the bin contents do not exceed the maximum positive; capacity (127 or 32767). Histograms of all types may have positive; or/and negative bin contents. \anchor associated-errors; ### Associated errors; By default, for each bin, the sum of weights is computed at fill time.; One can also call TH1::Sumw2 to force the storage and computation; of the sum of the square of we",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:12861,extend,extend,12861,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['extend'],['extend']
Modifiability,";; ehpad (bb2); // ...; // end_try; // catch ;; ehpad (bb3); // ...; // end_try; //; // Now if bar() throws, it is going to end up ip in bb2, not bb3, where it; // is supposed to end up. We solve this problem by wrapping the mismatching; // call with an inner try-delegate that rethrows the exception to the right; // 'catch'.; //; // try; // try; // call @foo; // try ;; (new); // call @bar; // delegate 1 (bb3) ;; (new); // catch ;; ehpad (bb2); // ...; // end_try; // catch ;; ehpad (bb3); // ...; // end_try; //; // ---; // 2. The same as 1, but in this case an instruction unwinds to a caller; // function and not another EH pad.; //; // Example: we have the following CFG:; // bb0:; // call @foo ; if it throws, unwind to bb2; // bb1:; // call @bar ; if it throws, unwind to caller; // bb2 (ehpad):; // catch; // ...; //; // And the CFG is sorted in this order. Then after placing TRY markers, it; // will look like:; // try; // call @foo; // call @bar ;; if it throws, unwind to caller; // catch ;; ehpad (bb2); // ...; // end_try; //; // Now if bar() throws, it is going to end up ip in bb2, when it is supposed; // throw up to the caller. We solve this problem in the same way, but in this; // case 'delegate's immediate argument is the number of block depths + 1,; // which means it rethrows to the caller.; // try; // call @foo; // try ;; (new); // call @bar; // delegate 1 (caller) ;; (new); // catch ;; ehpad (bb2); // ...; // end_try; //; // Before rewriteDepthImmediates, delegate's argument is a BB. In case of the; // caller, it will take a fake BB generated by getFakeCallerBlock(), which; // will be converted to a correct immediate argument later.; //; // In case there are multiple calls in a BB that may throw to the caller, they; // can be wrapped together in one nested try-delegate scope. (In 1, this; // couldn't happen, because may-throwing instruction there had an unwind; // destination, i.e., it was an invoke before, and there could be only one; // invoke within a BB.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyCFGStackify.cpp:3197,rewrite,rewriteDepthImmediates,3197,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyCFGStackify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyCFGStackify.cpp,1,['rewrite'],['rewriteDepthImmediates']
Modifiability,";PORT=3306;""; /// This is a form, which is accepted by SQLDriverConnect function of ODBC.; /// Here some other arguments can be specified, which are not included; /// in standard URL format.; /// 3. Form ""odbcn://MySpecialConfig"", where MySpecialConfig is entry,; /// defined in user DSN (user data source). Here uid and pw should be; /// always specified.; ///; /// Configuring unixODBC under Linux: http://www.unixodbc.org/odbcinst.html; /// Remarks: for variants 1 & 2 it is enough to create/configure; /// odbcinst.ini file. For variant 3 file odbc.ini should be created.; /// Path to this files can be specified in environmental variables like; /// export ODBCINI=/home/my/unixODBC/etc/odbc.ini; /// export ODBCSYSINI=/home/my/unixODBC/etc; ///; /// Configuring MySQL ODBC under Windows.; /// Installing ODBC driver for MySQL is enough to use it under Windows.; /// Afer odbcd:// variant can be used with DRIVER={MySQL ODBC 3.51 Driver};; /// To configure User DSN, go into Start menu -> Settings ->; /// Control panel -> Administrative tools-> Data Sources (ODBC).; ///; /// To install Oracle ODBC driver for Windows, one should download; /// and install either complete Oracle client (~500 MB), or so-called; /// Instant Client Basic and Instant Client ODBC (~20 MB together).; /// Some remark about Instant Client:; /// 1) Two additional DLLs are required: mfc71.dll & msver71.dll; /// They can be found either in MS VC++ 7.1 Free Toolkit or; /// download from other Internet sites; /// 2) ORACLE_HOME environment variable should be specified and point to; /// location, where Instant Client files are extracted; /// 3) Run odbc_install.exe from account with administrative rights; /// 3) In $ORACLE_HOME/network/admin/ directory appropriate *.ora files; /// like ldap.ora, sqlnet.ora, tnsnames.ora should be installed.; /// Contact your Oracle administrator to get these files.; /// After Oracle ODBC driver is installed, appropriate entry in ODBC drivers; /// list like ""Oracle in instantcli",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx:1713,config,configure,1713,sql/odbc/src/TODBCServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx,1,['config'],['configure']
Modifiability,"<tr><th> Creating categories <th>; /// <tr><td> `c[lep,kao,nt1,nt2]` <td> Create category c with given state names; /// <tr><td> `tag[B0=1,B0bar=-1]` <td> Create category tag with given state names and index assignments; /// <tr><th> Creating functions and pdfs <th>; /// <tr><td> `MyPdf::g(x,m,s)` <td> Create pdf or function of type MyPdf with name g with argument x,m,s; /// Interpretation and number of arguments are mapped to the constructor arguments of the class; /// (after the name and title).; /// <tr><td> `MyPdf(x,m,s)` <td> As above, but with an implicitly defined (unique) object name; /// <tr><th> Creating sets and lists (to be used as inputs above) <th>; /// <tr><td> `{a,b,c}` <td> Create RooArgSet or RooArgList (as determined by context) from given contents; /// </table>; ///; ///; /// Objects that are not created, are assumed to exist in the workspace; /// Object creation expressions as shown above can be nested, e.g. one can do; /// ```; /// RooGaussian::g(x[-10,10],m[0],3); /// ```; /// to create a pdf and its variables in one go. This nesting can be applied recursively e.g.; /// ```; /// SUM::model( f[0.5,0,1] * RooGaussian::g( x[-10,10], m[0], 3] ),; /// RooChebychev::c( x, {a0[0.1],a1[0.2],a2[-0.3]} )); /// ```; /// creates the sum of a Gaussian and a Chebychev and all its variables.; ///; ///; /// A separate series of operator meta-type exists to simplify the construction of composite expressions; /// meta-types in all capitals (SUM) create pdfs, meta types in lower case (sum) create; /// functions.; ///; /// <table>; /// <tr><th> Expression <th> Effect; /// <tr><td> `SUM::name(f1*pdf1,f2*pdf2,pdf3]` <td> Create sum pdf name with value `f1*pdf1+f2*pdf2+(1-f1-f2)*pdf3`; /// <tr><td> `RSUM::name(f1*pdf1,f2*pdf2,pdf3]` <td> Create recursive sum pdf name with value `f1*pdf1 + (1-f1)(f2*pdf2 + (1-f2)pdf3)`; /// <tr><td> `ASUM::name(f1*amp1,f2*amp2,amp3]` <td> Create sum pdf name with value `f1*amp1+f2*amp2+(1-f1-f2)*amp3` where `amplX` are amplitudes of t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:1697,variab,variables,1697,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['variab'],['variables']
Modifiability,"=======================================; // | type | defaultmap | pvt | first | is_device_ptr | map | res. |; // | |(tofrom:scalar)| | pvt | |has_dv_adr| |; // =========================================================================; // | scl | | | | - | | bycopy|; // | scl | | - | x | - | - | bycopy|; // | scl | | x | - | - | - | null |; // | scl | x | | | - | | byref |; // | scl | x | - | x | - | - | bycopy|; // | scl | x | x | - | - | - | null |; // | scl | | - | - | - | x | byref |; // | scl | x | - | - | - | x | byref |; //; // | agg | n.a. | | | - | | byref |; // | agg | n.a. | - | x | - | - | byref |; // | agg | n.a. | x | - | - | - | null |; // | agg | n.a. | - | - | - | x | byref |; // | agg | n.a. | - | - | - | x[] | byref |; //; // | ptr | n.a. | | | - | | bycopy|; // | ptr | n.a. | - | x | - | - | bycopy|; // | ptr | n.a. | x | - | - | - | null |; // | ptr | n.a. | - | - | - | x | byref |; // | ptr | n.a. | - | - | - | x[] | bycopy|; // | ptr | n.a. | - | - | x | | bycopy|; // | ptr | n.a. | - | - | x | x | bycopy|; // | ptr | n.a. | - | - | x | x[] | bycopy|; // =========================================================================; // Legend:; // scl - scalar; // ptr - pointer; // agg - aggregate; // x - applies; // - - invalid in this combination; // [] - mapped with an array section; // byref - should be mapped by reference; // byval - should be mapped by value; // null - initialize a local variable to null on the device; //; // Observations:; // - All scalar declarations that show up in a map clause have to be passed; // by reference, because they may have been mapped in the enclosing data; // environment.; // - If the scalar value does not fit the size of uintptr, it has to be; // passed by reference, regardless the result in the table above.; // - For pointers mapped by value that have either an implicit map or an; // array section, the runtime library may pass the NULL value to the; // device instead of the value passed to it by the compiler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:1761,variab,variable,1761,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,"><td> `MyPdf::g(x,m,s)` <td> Create pdf or function of type MyPdf with name g with argument x,m,s; /// Interpretation and number of arguments are mapped to the constructor arguments of the class; /// (after the name and title).; /// <tr><td> `MyPdf(x,m,s)` <td> As above, but with an implicitly defined (unique) object name; /// <tr><th> Creating sets and lists (to be used as inputs above) <th>; /// <tr><td> `{a,b,c}` <td> Create RooArgSet or RooArgList (as determined by context) from given contents; /// </table>; ///; ///; /// Objects that are not created, are assumed to exist in the workspace; /// Object creation expressions as shown above can be nested, e.g. one can do; /// ```; /// RooGaussian::g(x[-10,10],m[0],3); /// ```; /// to create a pdf and its variables in one go. This nesting can be applied recursively e.g.; /// ```; /// SUM::model( f[0.5,0,1] * RooGaussian::g( x[-10,10], m[0], 3] ),; /// RooChebychev::c( x, {a0[0.1],a1[0.2],a2[-0.3]} )); /// ```; /// creates the sum of a Gaussian and a Chebychev and all its variables.; ///; ///; /// A separate series of operator meta-type exists to simplify the construction of composite expressions; /// meta-types in all capitals (SUM) create pdfs, meta types in lower case (sum) create; /// functions.; ///; /// <table>; /// <tr><th> Expression <th> Effect; /// <tr><td> `SUM::name(f1*pdf1,f2*pdf2,pdf3]` <td> Create sum pdf name with value `f1*pdf1+f2*pdf2+(1-f1-f2)*pdf3`; /// <tr><td> `RSUM::name(f1*pdf1,f2*pdf2,pdf3]` <td> Create recursive sum pdf name with value `f1*pdf1 + (1-f1)(f2*pdf2 + (1-f2)pdf3)`; /// <tr><td> `ASUM::name(f1*amp1,f2*amp2,amp3]` <td> Create sum pdf name with value `f1*amp1+f2*amp2+(1-f1-f2)*amp3` where `amplX` are amplitudes of type RooAbsReal; /// <tr><td> `sum::name(a1,a2,a3]` <td> Create sum function with value `a1+a2+a3`; /// <tr><td> `sum::name(a1*b1,a2*b2,a3*b 3]` <td> Create sum function with value `a1*b1+a2*b2+a3*b3`; /// <tr><td> `PROD::name(pdf1,pdf2]` <td> Create product of pdf with `name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:1968,variab,variables,1968,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['variab'],['variables']
Modifiability,"After the longjmp call, we check whether a longjmp occurred, and if it did,; /// which setjmp it corresponds to, and jump to the right post-setjmp block.; /// We assume setjmp-longjmp handling always run after EH handling, which means; /// we don't expect any exception-related instructions when SjLj runs.; /// FIXME Currently this scheme does not support indirect call of setjmp,; /// because of the limitation of the scheme itself. fastcomp does not support it; /// either.; ///; /// In detail, this pass does following things:; ///; /// 1) Assumes the existence of global variables: __THREW__, __threwValue; /// __THREW__ and __threwValue are defined in compiler-rt in Emscripten.; /// These variables are used for both exceptions and setjmp/longjmps.; /// __THREW__ indicates whether an exception or a longjmp occurred or not. 0; /// means nothing occurred, 1 means an exception occurred, and other numbers; /// mean a longjmp occurred. In the case of longjmp, __THREW__ variable; /// indicates the corresponding setjmp buffer the longjmp corresponds to.; /// __threwValue is 0 for exceptions, and the argument to longjmp in case of; /// longjmp.; ///; /// * Emscripten exception handling; ///; /// 2) We assume the existence of setThrew and setTempRet0/getTempRet0 functions; /// at link time. setThrew exists in Emscripten's compiler-rt:; ///; /// void setThrew(uintptr_t threw, int value) {; /// if (__THREW__ == 0) {; /// __THREW__ = threw;; /// __threwValue = value;; /// }; /// }; //; /// setTempRet0 is called from __cxa_find_matching_catch() in JS glue code.; /// In exception handling, getTempRet0 indicates the type of an exception; /// caught, and in setjmp/longjmp, it means the second argument to longjmp; /// function.; ///; /// 3) Lower; /// invoke @func(arg1, arg2) to label %invoke.cont unwind label %lpad; /// into; /// __THREW__ = 0;; /// call @__invoke_SIG(func, arg1, arg2); /// %__THREW__.val = __THREW__;; /// __THREW__ = 0;; /// if (%__THREW__.val == 1); /// goto %lpad; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:2814,variab,variable,2814,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,1,['variab'],['variable']
Modifiability,"Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodCFMlpANN; \ingroup TMVA. Interface to Clermond-Ferrand artificial neural network. The CFMlpANN belong to the class of Multilayer Perceptrons (MLP), which are; feed-forward networks according to the following propagation schema:. \image html tmva_mlp.png Schema for artificial neural network. The input layer contains as many neurons as input variables used in the MVA.; The output layer contains two neurons for the signal and background; event classes. In between the input and output layers are a variable number; of <i>k</i> hidden layers with arbitrary numbers of neurons. (While the; structure of the input and output layers is determined by the problem, the; hidden layers can be configured by the user through the option string; of the method booking.). As indicated in the sketch, all neuron inputs to a layer are linear; combinations of the neuron output of the previous layer. The transfer; from input to output within a neuron is performed by means of an ""activation; function"". In general, the activation function of a neuron can be; zero (deactivated), one (linear), or non-linear. The above example uses; a sigmoid activation function. The transfer function of the output layer; is usually linear. As a consequence: an ANN without hidden layer should; give identical discrimination power as a linear discriminant ana",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx:1430,variab,variables,1430,tmva/tmva/src/MethodCFMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx,1,['variab'],['variables']
Modifiability,"Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// Description: This pass finds Load Value Injection (LVI) gadgets consisting; /// of a load from memory (i.e., SOURCE), and any operation that may transmit; /// the value loaded from memory over a covert channel, or use the value loaded; /// from memory to determine a branch/call target (i.e., SINK). After finding; /// all such gadgets in a given function, the pass minimally inserts LFENCE; /// instructions in such a manner that the following property is satisfied: for; /// all SOURCE+SINK pairs, all paths in the CFG from SOURCE to SINK contain at; /// least one LFENCE instruction. The algorithm that implements this minimal; /// insertion is influenced by an academic paper that minimally inserts memory; /// fences for high-performance concurrent programs:; /// http://www.cs.ucr.edu/~lesani/companion/oopsla15/OOPSLA15.pdf; /// The algorithm implemented in this pass is as follows:; /// 1. Build a condensed CFG (i.e., a GadgetGraph) consisting only of the; /// following components:; /// - SOURCE instructions (also includes function arguments); /// - SINK instructions; /// - Basic block entry points; /// - Basic block terminators; /// - LFENCE instructions; /// 2. Analyze the GadgetGraph to determine which SOURCE+SINK pairs (i.e.,; /// gadgets) are already mitigated by existing LFENCEs. If all gadgets have been; /// mitigated, go to step 6.; /// 3. Use a heuristic or plugin to approximate minimal LFENCE insertion.; /// 4. Insert one LFENCE along each CFG edge that was cut in step 3.; /// 5. Go to step 2.; /// 6. If any LFENCEs were inserted, return `true` from runOnMachineFunction(); /// to tell LLVM that the function was modified.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LoadValueInjectionLoadHardening.cpp:1769,plugin,plugin,1769,interpreter/llvm-project/llvm/lib/Target/X86/X86LoadValueInjectionLoadHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LoadValueInjectionLoadHardening.cpp,1,['plugin'],['plugin']
Modifiability,"B}^{-1}\mathbf{a})\,.\f$. The original model \f$\mathsf{F}\mathbf{c}\f$ is therefore identical with; this if; \f[; \mathbf{c} = \left(\mathsf{B}^{-1}\mathbf{a}\right) =; \left[\mathbf{a}^T\left(\mathsf{B}^{-1}\right)^T\right]^T\,.; \f]; The reason we use \f$\left(\mathsf{B}^{-1}\right)^T\f$ rather then; \f$\mathsf{B}^{-1}\f$ is to save storage, since \f$\left(\mathsf{B}^{-1}\right)^T\f$; can be stored in the same matrix as \f$\mathsf{B}\f$ (TMultiDimFit::MakeCoefficients).; The errors in the coefficients is calculated by inverting the curvature matrix; of the non-orthogonal functions \f$ f_{lj}\f$ [1] (TMultiDimFit::MakeCoefficientErrors). ## Considerations; It's important to realize that the training sample should be; representative of the problem at hand, in particular along the borders; of the region of interest. This is because the algorithm presented; here, is a *interpolation*, rather then a *extrapolation* [5]. Also, the independent variables \f$ x_{i}\f$ need to be linear; independent, since the procedure will perform poorly if they are not; [5]. One can find an linear transformation from ones; original variables \f$ \xi_{i}\f$ to a set of linear independent variables; \f$ x_{i}\f$, using a *Principal Components Analysis* (see TPrincipal), and; then use the transformed variable as input to this class [5] [6]. H. Wind also outlines a method for parameterising a multidimensional; dependence over a multidimensional set of variables. An example; of the method from [5], is a follows (please refer to; [5] for a full discussion):. 1. Define \f$\mathbf{P} = (P_1, \ldots, P_5)\f$ are the 5 dependent; quantities that define a track.; 2. Compute, for \f$ M\f$ different values of \f$\mathbf{P}\f$, the tracks; through the magnetic field, and determine the corresponding; \f$\mathbf{x} = (x_1, \ldots, x_N)\f$.; 3. Use the simulated observations to determine, with a simple; approximation, the values of \f$\mathbf{P}_j\f$. We call these values; \f$\mathbf{P}^\prime_j, j = 1, ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:13905,variab,variables,13905,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variables']
Modifiability,"Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPluginManager; \ingroup Base. This class implements a plugin library manager. It keeps track of a list of plugin handlers. A plugin handler knows which plugin; library to load to get a specific class that is used to extend the; functionality of a specific base class and how to create an object; of this class. For example, to extend the base class TFile to be; able to read SQLite files one needs to load the plugin library; libRSQLite.so which defines the TRSQLiteServer class. This loading; should be triggered when a given URI contains a regular expression; defined by the handler. Plugin handlers can be defined via macros in a list of plugin; directories. With $ROOTSYS/etc/plugins the default top plugin; directory specified in $ROOTSYS/etc/system.rootrc. Additional; directories can be specified by adding them to the end of the list.; Macros for identical plugin handlers in later directories will; override previous ones (the inverse of normal search path behavior).; The macros must have names like `<BaseClass>/PX0_<PluginClass>.C`,; e.g. TSQLServer/P20_TMySQLServer.C, to allow easy sorting and grouping.; If the BaseClass is in a namespace the directory must have the name; NameSpace@@BaseClass as `:` is a reserved pathname character on some; operating systems. Macros not beginning with 'P' and ending with "".C""; are ignored. These macros typically look like:; ~~~ {.cpp}; void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*)"");; }; ~~~; Plugin handlers can also be defined via resources in the .rootrc; file. Although now deprecated this method still works for backward; compatibility, e.g.:; ~~~ {.cpp}; Plugin.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:1111,plugin,plugins,1111,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"Core *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooAddPdf; \ingroup Roofitcore. Efficient implementation of a sum of PDFs of the form. \f[; \sum_{i=1}^{n} c_i \cdot \mathrm{PDF}_i; \f]. or; \f[; c_1\cdot\mathrm{PDF}_1 + c_2\cdot\mathrm{PDF}_2 \; + \; ... \; + \; \left( 1-\sum_{i=1}^{n-1}c_i \right) \cdot \mathrm{PDF}_n; \f]. The first form is for extended likelihood fits, where the; expected number of events is \f$ \sum_i c_i \f$. The coefficients \f$ c_i \f$; can either be explicitly provided, or, if all components support; extended likelihood fits, they can be calculated from the contribution; of each PDF to the total expected number of events. In the second form, the sum of the coefficients is required to be 1 or less,; and the coefficient of the last PDF is calculated automatically from the condition; that the sum of all coefficients has to be 1. ### Recursive coefficients; It is also possible to parameterise the coefficients recursively. \f[; \sum_{i=1}^n c_i \prod_{j=1}^{i-1} \left[ (1-c_j) \right] \cdot \mathrm{PDF}_i \\; = c_1 \cdot \mathrm{PDF}_1 + (1-c_1)\, c_2 \cdot \mathrm{PDF}_2 + \ldots + (1-c_1)\ldots(1-c_{n-1}) \cdot 1 \cdot \mathrm{PDF}_n \\; \f]. In this form the sum of the coefficients is always less than 1.0; for all possible values of the individual coefficients between 0 and 1.; \note Don't pass the \f$ n^\mathrm{th} \f$ coefficient. It",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:1087,extend,extended,1087,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,1,['extend'],['extended']
Modifiability,"D::name(pdf1|x,pdf2]` <td> Create product of conditional pdf `pdf1` given `x` and `pdf2`; /// <tr><td> `prod::name(a,b,c]` <td> Create production function with value `a*b*c`; /// <tr><td> `SIMUL::name(cat,a=pdf1,b=pdf2]` <td> Create simultaneous pdf index category `cat`. Make `pdf1` to state `a`, `pdf2` to state `b`; /// <tr><td> `EXPR::name(<expr>,var,...]` <td> Create a generic pdf that interprets the given expression; /// <tr><td> `expr::name(<expr>,var,...]` <td> Create a generic function that interprets the given expression; /// <tr><td> `taylorexpand::name(func,{var1,var2,...},val,order,eps1,eps2]` <td> Create a taylor expansion of func w.r.t. `{var1,var2,..}` around `val` up to `order`; /// <tr><td> `lagrangianmorph::name(""$fileName('infile.root'),$observableName(obs),$couplings({var1[-10,10],var2[-10,10]}),$folders({'sample1,sample2,sample3'}),$NewPhysics(var1=1,var2=0)""]` <td> Create a RooLagrangianMorphFunc function for the observable obs as a function of `var1`, `var2` based on input templates stored in the folders in the file; /// </table>; ///; /// The functionality of high-level object creation tools like RooSimWSTool, RooCustomizer and RooClassFactory; /// is also interfaced through meta-types in the factory.; /// <table>; /// <tr><th> Interface to %RooSimWSTool <th>; /// <tr><td> `SIMCLONE::name( modelPdf, $ParamSplit(...), $ParamSplitConstrained(...), $Restrict(...) ]`; /// <td> Clone-and-customize modelPdf according to ParamSplit and ParamSplitConstrained(); /// specifications and return a RooSimultaneous pdf of all built clones; ///; /// <tr><td> `MSIMCLONE::name( masterIndex, $AddPdf(mstate1, modelPdf1, $ParamSplit(...)), $AddPdf(mstate2,modelPdf2),...) ]`; /// <td> Clone-and-customize multiple models (modelPdf1,modelPdf2) according to ParamSplit and; /// ParamSplitConstrained() specifications and return a RooSimultaneous pdf of all built clones,; /// using the specified master index to map prototype pdfs to master states; /// <tr><th> Interface t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:3763,coupling,couplings,3763,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['coupling'],['couplings']
Modifiability,"Data() method. #### 1.2 The data can be added:; - simply point by point - AddPoint() method; - an array of points at once:; If the data is already stored in some arrays, this data; can be assigned to the linear fitter without physically; coping bytes, thanks to the Use() method of; TVector and TMatrix classes - AssignData() method. ### 2.Setting the formula. #### 2.1 The linear formula syntax:; -Additive parts are separated by 2 plus signs ""++""; --for example ""1 ++ x"" - for fitting a straight line; -All standard functions, undrestood by TFormula, can be used; as additive parts; --TMath functions can be used too; -Functions, used as additive parts, shouldn't have any parameters,; even if those parameters are set.; --for example, if normalizing a sum of a gaus(0, 1) and a; gaus(0, 2), don't use the built-in ""gaus"" of TFormula,; because it has parameters, take TMath::Gaus(x, 0, 1) instead.; -Polynomials can be used like ""pol3"", ..""polN""; -If fitting a more than 3-dimensional formula, variables should; be numbered as follows:; -- x[0], x[1], x[2]... For example, to fit ""1 ++ x[0] ++ x[1] ++ x[2] ++ x[3]*x[3]"". #### 2.2 Setting the formula:. ##### 2.2.1 If fitting a 1-2-3-dimensional formula, one can create a; TF123 based on a linear expression and pass this function; to the fitter:; --Example:; ~~~~; TLinearFitter *lf = new TLinearFitter();; TF2 *f2 = new TF2(""f2"", ""x ++ y ++ x*x*y*y"", -2, 2, -2, 2);; lf->SetFormula(f2);; ~~~~; --The results of the fit are then stored in the function,; just like when the TH1::Fit or TGraph::Fit is used; --A linear function of this kind is by no means different; from any other function, it can be drawn, evaluated, etc. --For multidimensional fitting, TFormulas of the form:; x[0]++...++x[n] can be used; ##### 2.2.2 There is no need to create the function if you don't want to,; the formula can be set by expression:; --Example:; ~~~~; // 2 is the number of dimensions; TLinearFitter *lf = new TLinearFitter(2);; lf->SetFormula(""x ++ y ++ x*x*",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:2532,variab,variables,2532,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,1,['variab'],['variables']
Modifiability,"Dimensional functions:; - `xygaus` is a substitute for `[Constant]*exp(-0.5*pow(((x-[MeanX])/[SigmaX]),2 )- 0.5*pow(((y-[MeanY])/[SigmaY]),2))`, a 2d Gaussian without correlation.; - `bigaus` is a substitute for `[Constant]*ROOT::Math::bigaussian_pdf (x,y,[SigmaX],[SigmaY],[Rho],[MeanX],[MeanY])`, a 2d gaussian including a correlation parameter.; 3. Three Dimensional functions:; - `xyzgaus` is for a 3d Gaussians without correlations:; `[Constant]*exp(-0.5*pow(((x-[MeanX])/[SigmaX]),2 )- 0.5*pow(((y-[MeanY])/[SigmaY]),2 )- 0.5*pow(((z-[MeanZ])/[SigmaZ]),2))`. ### An expanded note on variables and parameters. In a TFormula, a variable is a defined by a name `x`, `y`, `z` or `t` or an; index like `x[0]`, `x[1]`, `x[2]`; that is `x[N]` where N is an integer. ```; TFormula("""", ""x[0] * x[1] + 10""); ```. Parameters are similar and can take any name. It is specified using brackets; e.g. `[expected_mass]` or `[0]`. ```; TFormula("""", ""exp([expected_mass])-1""); ```. Variables and parameters can be combined in the same TFormula. Here we consider; a very simple case where we have an exponential decay after some time t and a; number of events with timestamps for which we want to evaluate this function. ```; TFormula tf ("""", ""[0]*exp(-[1]*t)"");; tf.SetParameter(0, 1);; tf.SetParameter(1, 0.5);. for (auto & event : events) {; tf.Eval(event.t);; }; ```. The distinction between variables and parameters arose from the TFormula's; application in fitting. There parameters are fitted to the data provided; through variables. In other applications this distinction can go away. Parameter values can be provided dynamically using `TFormula::EvalPar`; instead of `TFormula::Eval`. In this way parameters can be used identically; to variables. See below for an example that uses only parameters to model a; function. ```; Int_t params[2] = {1, 2}; // {vel_x, vel_y}; TFormula tf ("""", ""[vel_x]/sqrt(([vel_x + vel_y])**2)"");. tf.EvalPar(nullptr, params);; ```. ### A note on operators. All operators of C",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:5773,Variab,Variables,5773,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['Variab'],['Variables']
Modifiability,"E P I X G L O B A L B E N C H M A R K; // ===============================================================; //; // HEPiX-HEPNT is an organization comprised of UNIX and Windows support staff; // in the High Energy Physics community.; // One of the HEPIX activities is to gather knowledge about new hardware; // and software and to recommend common solutions (eg Scientific Linux); // see: http://wwwhepix.web.cern.ch/wwwhepix/; //; // This benchmark suite has been implemented following several requests; // from HEPIX members interested by a collection of benchmarks representative; // of typical applications.; //; // stressHepix is a single benchmark inclusing several standard ROOT benchmarks; // with a mixture of CPU intensive tests and I/O tests.; // The output of stressHepix is one single number (the ROOTMARK).; // A Pentium IV 2.8GHz running Linux SLC3 and gcc3.2.3 runs this benchmark; // with a reference at 800 ROOTMARKs.; // To build the executable for this benchmark, do; // cd $ROOTSYS/test; // make; //; // The default configuration of ROOT is enough.; // The output of this benchmark looks like:; //; /// stressHepix; ///; ///; ///Starting stressHepix benchmark (details will be in stressHepix.log); ///Takes 442 CP seconds on a 500 rootmarks machine (IBM Thinkpad centrino 1.4GHz VC++7.1); ///Takes 278 CP seconds on a 800 rootmarks reference machine (P IV 2.8 GHz, SLC3 gcc3.2.3); ///Takes 239 CP seconds on a 924 rootmarks machine (MacBook 2.0GHz gcc4.0.1); ///Takes 209 CP seconds on a 1056 rootmarks machine (MacBook 2.0GHz icc9.1); ///Takes 147 CP seconds on a 1512 rootmarks machine (MacPro 3.0GHz gcc4.0.1); ///Takes 142 CP seconds on a 1550 rootmarks machine (AMD64/280, FC5 gcc4.1); ///Takes 121 CP seconds on a 1828 rootmarks machine (MacPro 3.0GHz icc9.1); ///; ///Running : stressFit Minuit 2000, (takes 11 RT seconds on the ref machine); ///Running : stressLinear, (takes 26 RT seconds on the ref machine); ///Running : stressGeometry, (takes 77 RT seconds on the ref m",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHepix.cxx:1201,config,configuration,1201,test/stressHepix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHepix.cxx,1,['config'],['configuration']
Modifiability,"Eff = 0;; TFile* pFile = new TFile(""myfile.root"",""recreate"");. //h_pass and h_total are valid and consistent histograms; if(TEfficiency::CheckConsistency(h_pass,h_total)); {; pEff = new TEfficiency(h_pass,h_total);; //this will attach the TEfficiency object to the current directory; pEff->SetDirectory(gDirectory);; //now all objects in gDirectory will be written to ""myfile.root""; pFile->Write();; }; ~~~~~~~~~~~~~~~. In case you already have two filled histograms and you only want to; plot them as a graph, you should rather use TGraphAsymmErrors::TGraphAsymmErrors(const TH1* pass,const TH1* total,Option_t* opt); to create a graph object. \anchor EFF03; ## III. Filling with events; You can fill the TEfficiency object by calling the TEfficiency::Fill(Bool_t bPassed,Double_t x,Double_t y,Double_t z) method.; The ""bPassed"" boolean flag indicates whether the current event is good; (both histograms are filled) or not (only TEfficiency::fTotalHistogram is filled).; The x, y and z variables determine the bin which is filled. For lower dimensions, the z- or even the y-value may be omitted. Begin_Macro(source); {; //canvas only needed for this documentation; TCanvas* c1 = new TCanvas(""example"","""",600,400);; c1->SetFillStyle(1001);; c1->SetFillColor(kWhite);. //create one-dimensional TEfficiency object with fixed bin size; TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; TRandom3 rand3;. bool bPassed;; double x;; for(int i=0; i<10000; ++i); {; //simulate events with variable under investigation; x = rand3.Uniform(10);; //check selection: bPassed = DoesEventPassSelection(x); bPassed = rand3.Rndm() < TMath::Gaus(x,5,4);; pEff->Fill(bPassed,x);; }. pEff->Draw(""AP"");; }; End_Macro. You can also set the number of passed or total events for a bin directly by; using the TEfficiency::SetPassedEvents or TEfficiency::SetTotalEvents method. \anchor EFF04; ## IV. Statistic options; The calculation of the estimated efficiency depends on the chosen statistic; op",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:5691,variab,variables,5691,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['variab'],['variables']
Modifiability,"Efficiency object is; in a valid state. \anchor EFF062; ### VI.2 Fitting; The efficiency can be fitted using the TEfficiency::Fit function which internally uses; the TBinomialEfficiencyFitter::Fit method.; As this method is using a maximum-likelihood-fit, it is necessary to initialise; the given fit function with reasonable start values.; The resulting fit function is attached to the list of associated functions and; will be drawn automatically during the next TEfficiency::Draw command.; The list of associated function can be modified by using the pointer returned; by TEfficiency::GetListOfFunctions. Begin_Macro(source); {; //canvas only needed for this documentation; TCanvas* c1 = new TCanvas(""example"","""",600,400);; c1->SetFillStyle(1001);; c1->SetFillColor(kWhite);. //create one-dimensional TEfficiency object with fixed bin size; TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; TRandom3 rand3;. bool bPassed;; double x;; for (int i=0; i<10000; ++i) {; //simulate events with variable under investigation; x = rand3.Uniform(10);; //check selection: bPassed = DoesEventPassSelection(x); bPassed = rand3.Rndm() < TMath::Gaus(x,5,4);; pEff->Fill(bPassed,x);; }. //create a function for fitting and do the fit; TF1* f1 = new TF1(""f1"",""gaus"",0,10);; f1->SetParameters(1,5,2);; pEff->Fit(f1);. //create a threshold function; TF1* f2 = new TF1(""thres"",""0.8"",0,10);; f2->SetLineColor(kRed);; //add it to the list of functions; //use add first because the parameters of the last function will be displayed; pEff->GetListOfFunctions()->AddFirst(f2);. pEff->Draw(""AP"");; }; End_Macro. \anchor EFF063; ### VI.3 Draw a TEfficiency object; A TEfficiency object can be drawn by calling the usual TEfficiency::Draw method.; At the moment drawing is only supported for 1- and 2-dimensional TEfficiency objects.; In the 1-dimensional case, you can use the same options as for the TGraphAsymmErrors::Draw; method. For 2-dimensional TEfficiency objects, you can pass the same ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:23721,variab,variable,23721,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['variab'],['variable']
Modifiability,"HttpThrds: 10; ///; /// One also can configure usage of special thread of processing of http server requests; ///; /// WebGui.HttpThrd: no; ///; /// Extra threads can be used to send data to different clients via websocket (default no); ///; /// WebGui.SenderThrds: no; ///; /// If required, one could change websocket timeouts (default is 10000 ms); ///; /// WebGui.HttpWSTmout: 10000; ///; /// By default, THttpServer created in restricted mode which only allows websocket handlers; /// and processes only very few other related http requests. For security reasons such mode; /// should be always enabled. Only if it is really necessary to process all other kinds; /// of HTTP requests, one could specify no for following parameter (default yes):; ///; /// WebGui.WSOnly: yes; ///; /// In some applications one may need to force longpoll websocket emulations from the beginning,; /// for instance when clients connected via proxys. Although JSROOT should automatically fallback; /// to longpoll engine, one can configure this directly (default no); ///; /// WebGui.WSLongpoll: no; ///; /// Following parameter controls browser max-age caching parameter for files (default 3600); /// When 0 is specified, browser cache will be disabled; ///; /// WebGui.HttpMaxAge: 3600; ///; /// Also one can provide extra URL options for, see TCivetweb::Create for list of supported options; ///; /// WebGui.HttpExtraArgs: winsymlinks=no; ///; /// One also can configure usage of FastCGI server for web windows:; ///; /// WebGui.FastCgiPort: 4000; /// WebGui.FastCgiThreads: 10; ///; /// To be able start web browser for such windows, one can provide real URL of the; /// web server which will connect with that FastCGI instance:; ///; /// WebGui.FastCgiServer: https://your_apache_server.com/root_cgi_path; ///; /// For some custom applications one requires to load JavaScript modules or other files.; /// For such applications one may require to load files from other locations which can be configured; /// with ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx:2727,config,configure,2727,gui/webdisplay/src/RWebWindowsManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx,1,['config'],['configure']
Modifiability,"I. Usage</a></h3>; These are typical things people do with THtml:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.LoadAllLibs(); // Load all rootmap'ed libraries; root[] html.MakeAll(); // generate documentation for all changed classes; </pre>; or to run on just a few classes:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.MakeIndex(); // create auxiliary files (style sheet etc) and indices; root[] html.MakeClass(""TMyClass""); // create documentation for TMyClass only; </pre>; To ""beautify"" (i.e. create links to documentation for class names etc) some text; file or macro, use:; <pre>; root[] html.Convert( ""hsimple.C"", ""Histogram example"" ); </pre>. <h3><a name=""conf"">II. Configuration</a></h3>; Most configuration options can be set as a call to THtml, or as a TEnv variable,; which you can set in your .rootrc. <h4><a name=""conf:input"">II.1 Input files</a></h4>. <p>In your .rootrc, define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>); of the classes you want to document, or call THtml::SetInputDir()</p>. <p>Example:</p><pre>; Root.Html.SourceDir: .:src:include; Root.Html.Root: http://root.cern.ch/root/html</pre>. <h4><a name=""conf:output"">II.2 Output directory</a></h4>. <p>The output directory can be specified using the Root.Html.OutputDir; configuration variable (default value: ""htmldoc""). If that directory; doesn't exist <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a>; will create it.</p>. <p>Example:</p><pre>; Root.Html.OutputDir: htmldoc</pre>. <h4><a name=""conf:liblink"">II.3 Linking other documentation</a></h4>. <p>When trying to document a class, THtml searches for a source file in; the directories set via S",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:3725,Config,Configuration,3725,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,3,"['Config', 'config', 'variab']","['Configuration', 'configuration', 'variable']"
Modifiability,"Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements a pass that removes irreducible control flow.; /// Irreducible control flow means multiple-entry loops, which this pass; /// transforms to have a single entry.; ///; /// Note that LLVM has a generic pass that lowers irreducible control flow, but; /// it linearizes control flow, turning diamonds into two triangles, which is; /// both unnecessary and undesirable for WebAssembly.; ///; /// The big picture: We recursively process each ""region"", defined as a group; /// of blocks with a single entry and no branches back to that entry. A region; /// may be the entire function body, or the inner part of a loop, i.e., the; /// loop's body without branches back to the loop entry. In each region we fix; /// up multi-entry loops by adding a new block that can dispatch to each of the; /// loop entries, based on the value of a label ""helper"" variable, and we; /// replace direct branches to the entries with assignments to the label; /// variable and a branch to the dispatch block. Then the dispatch block is the; /// single entry in the loop containing the previous multiple entries. After; /// ensuring all the loops in a region are reducible, we recurse into them. The; /// total time complexity of this pass is:; ///; /// O(NumBlocks * NumNestedLoops * NumIrreducibleLoops +; /// NumLoops * NumLoops); ///; /// This pass is similar to what the Relooper [1] does. Both identify looping; /// code that requires multiple entries, and resolve it in a similar way (in; /// Relooper terminology, we implement a Multiple shape in a Loop shape). Note; /// also that like the Relooper, we implement a ""minimal"" intervention: we only; /// use the ""label"" helper for the blocks we absolutely must and no others. We; /// also prioritize code size and do not duplicate code in order to resolve; /// irreducibility. The graph algorithms for",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixIrreducibleControlFlow.cpp:1257,variab,variable,1257,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixIrreducibleControlFlow.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyFixIrreducibleControlFlow.cpp,2,['variab'],['variable']
Modifiability,"Interval | false | total events, passed events, confidence level |; | Jeffrey | kBJeffrey | TEfficiency::Bayesian | true | total events, passed events, confidence level, fBeta_alpha = 0.5, fBeta_beta = 0.5 |; | Uniform prior | kBUniform |TEfficiency::Bayesian | true |total events, passed events, confidence level, fBeta_alpha = 1, fBeta_beta = 1 |; | custom prior | kBBayesian |TEfficiency::Bayesian | true |total events, passed events, confidence level, fBeta_alpha, fBeta_beta |. The following example demonstrates the effect of different statistic options and; confidence levels. Begin_Macro(source); {; //canvas only needed for the documentation; TCanvas* c1 = new TCanvas(""c1"","""",600,400);; c1->Divide(2);; c1->SetFillStyle(1001);; c1->SetFillColor(kWhite);. //create one-dimensional TEfficiency object with fixed bin size; TEfficiency* pEff = new TEfficiency(""eff"",""different confidence levels;x;#epsilon"",20,0,10);; TRandom3 rand3;. bool bPassed;; double x;; for(int i=0; i<1000; ++i); {; //simulate events with variable under investigation; x = rand3.Uniform(10);; //check selection: bPassed = DoesEventPassSelection(x); bPassed = rand3.Rndm() < TMath::Gaus(x,5,4);; pEff->Fill(bPassed,x);; }. //set style attributes; pEff->SetFillStyle(3004);; pEff->SetFillColor(kRed);. //copy current TEfficiency object and set new confidence level; TEfficiency* pCopy = new TEfficiency(*pEff);; pCopy->SetConfidenceLevel(0.90);. //set style attributes; pCopy->SetFillStyle(3005);; pCopy->SetFillColor(kBlue);. c1->cd(1);. //add legend; TLegend* leg1 = new TLegend(0.3,0.1,0.7,0.5);; leg1->AddEntry(pEff,""68.3%"",""F"");; leg1->AddEntry(pCopy,""90%"",""F"");. pEff->Draw(""A4"");; pCopy->Draw(""same4"");; leg1->Draw(""same"");. //use same confidence level but different statistic methods; TEfficiency* pEff2 = new TEfficiency(*pEff);; TEfficiency* pCopy2 = new TEfficiency(*pEff);. pEff2->SetStatisticOption(TEfficiency::kFNormal);; pCopy2->SetStatisticOption(TEfficiency::kFAC);. pEff2->SetTitle(""different statistic",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:11960,variab,variable,11960,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['variab'],['variable']
Modifiability,"K, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooChi2Var; \ingroup Roofitcore; \brief Simple \f$ \chi^2 \f$ calculation from a binned dataset and a PDF.; *; * It calculates:; *; \f{align*}{; \chi^2 &= \sum_{\mathrm{bins}} \left( \frac{N_\mathrm{PDF,bin} - N_\mathrm{Data,bin}}{\Delta_\mathrm{bin}} \right)^2 \\; N_\mathrm{PDF,bin} &=; \begin{cases}; \mathrm{pdf}(\text{bin centre}) \cdot V_\mathrm{bin} \cdot N_\mathrm{Data,tot} &\text{normal PDF}\\; \mathrm{pdf}(\text{bin centre}) \cdot V_\mathrm{bin} \cdot N_\mathrm{Data,expected} &\text{extended PDF}; \end{cases} \\; \Delta_\mathrm{bin} &=; \begin{cases}; \sqrt{N_\mathrm{PDF,bin}} &\text{if } \mathtt{DataError == RooAbsData::Expected}\\; \mathtt{data{\rightarrow}weightError()} &\text{otherwise} \\; \end{cases}; \f}; * If the dataset doesn't have user-defined errors, errors are assumed to be \f$ \sqrt{N} \f$.; * In extended PDF mode, N_tot (total number of data events) is substituted with N_expected, the; * expected number of events that the PDF predicts.; *; * \note If the dataset has errors stored, empty bins will prevent the calculation of \f$ \chi^2 \f$, because those have; * zero error. This leads to messages like:; * ```; * [#0] ERROR:Eval -- RooChi2Var::RooChi2Var(chi2_GenPdf_data_hist) INFINITY ERROR: bin 2 has zero error; * ```; *; * \note In this case, one can use the expected errors of the PDF instead of the data errors:; * ```{.cpp}; * RooChi2Var chi2(..., ..., RooFit::DataError(RooAbsData::Expected), ...);; * ```; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChi2Var.cxx:1282,extend,extended,1282,roofit/roofitcore/src/RooChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooChi2Var.cxx,2,['extend'],['extended']
Modifiability,"LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This set of linked tablegen backends is responsible for emitting the bits; // and pieces that implement <arm_mve.h>, which is defined by the ACLE standard; // and provides a set of types and functions for (more or less) direct access; // to the MVE instruction set, including the scalar shifts as well as the; // vector instructions.; //; // MVE's standard intrinsic functions are unusual in that they have a system of; // polymorphism. For example, the function vaddq() can behave like vaddq_u16(),; // vaddq_f32(), vaddq_s8(), etc., depending on the types of the vector; // arguments you give it.; //; // This constrains the implementation strategies. The usual approach to making; // the user-facing functions polymorphic would be to either use; // __attribute__((overloadable)) to make a set of vaddq() functions that are; // all inline wrappers on the underlying clang builtins, or to define a single; // vaddq() macro which expands to an instance of _Generic.; //; // The inline-wrappers approach would work fine for most intrinsics, except for; // the ones that take an argument required to be a compile-time constant,; // because if you wrap an inline function around a call to a builtin, the; // constant nature of the argument is not passed through.; //; // The _Generic approach can be made to work with enough effort, but it takes a; // lot of machinery, because of the design feature of _Generic that even the; // untaken branches are required to pass all front-end validity checks such as; // type-correctness. You can work around that by nesting further _Generics all; // over the place to coerce things to the right type in untaken branches, but; // what you get out is complicated, hard to guarantee its correctness, and; // worst of all, gives _completely unreadable_ error messages if the u",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:1096,polymorphi,polymorphic,1096,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,1,['polymorphi'],['polymorphic']
Modifiability,"LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Data structures for storing variable assignment information in LLVM. In the; // dbg.value design, a dbg.value intrinsic specifies the position in a block; // a source variable take on an LLVM Value:; //; // %foo = add i32 1, %0; // dbg.value(metadata i32 %foo, ...); // %bar = void call @ext(%foo);; //; // and all information is stored in the Value / Metadata hierachy defined; // elsewhere in LLVM. In the ""DPValue"" design, each instruction /may/ have a; // connection with a DPMarker, which identifies a position immediately before the; // instruction, and each DPMarker /may/ then have connections to DPValues which; // record the variable assignment information. To illustrate:; //; // %foo = add i32 1, %0; // ; foo->DbgMarker == nullptr; // ;; There are no variable assignments / debug records ""in front"" of; // ;; the instruction for %foo, therefore it has no DbgMarker.; // %bar = void call @ext(%foo); // ; bar->DbgMarker = {; // ; StoredDPValues = {; // ; DPValue(metadata i32 %foo, ...); // ; }; // ; }; // ;; There is a debug-info record in front of the %bar instruction,; // ;; thus it points at a DPMarker object. That DPMarker contains a; // ;; DPValue in it's ilist, storing the equivalent information to the; // ;; dbg.value above: the Value, DILocalVariable, etc.; //; // This structure separates the two concerns of the position of the debug-info; // in the function, and the Value that it refers to. It also creates a new; // ""place"" in-between the Value / Metadata hierachy where we can customise; // storage and allocation techniques to better suite debug-info workloads.; // NB: as of the initial prototype, none of that has actually been attempted; // yet.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugProgramInstruction.h:1151,variab,variable,1151,interpreter/llvm-project/llvm/include/llvm/IR/DebugProgramInstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugProgramInstruction.h,1,['variab'],['variable']
Modifiability,"LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting is used when a JobManager is spun up, i.e. usually when the first Job; * starts. At this point, the Queue is also created according to the setting. The; * default is FIFO. When using a Priority Queue, the priority of tasks in a Job; * can be set using either setTaskPriorities or suggestTaskOrder. If no priorities; * are set, the Priority queue simply assumes equal priority for all tasks. The; * resulting order then depe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:1493,Config,Config,1493,roofit/multiprocess/src/Config.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx,1,['Config'],['Config']
Modifiability,"Lower exceptions for Emscripten =//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file lowers exception-related instructions and setjmp/longjmp function; /// calls to use Emscripten's library functions. The pass uses JavaScript's try; /// and catch mechanism in case of Emscripten EH/SjLj and Wasm EH intrinsics in; /// case of Emscripten SjLJ.; ///; /// * Emscripten exception handling; /// This pass lowers invokes and landingpads into library functions in JS glue; /// code. Invokes are lowered into function wrappers called invoke wrappers that; /// exist in JS side, which wraps the original function call with JS try-catch.; /// If an exception occurred, cxa_throw() function in JS side sets some; /// variables (see below) so we can check whether an exception occurred from; /// wasm code and handle it appropriately.; ///; /// * Emscripten setjmp-longjmp handling; /// This pass lowers setjmp to a reasonably-performant approach for emscripten.; /// The idea is that each block with a setjmp is broken up into two parts: the; /// part containing setjmp and the part right after the setjmp. The latter part; /// is either reached from the setjmp, or later from a longjmp. To handle the; /// longjmp, all calls that might longjmp are also called using invoke wrappers; /// and thus JS / try-catch. JS longjmp() function also sets some variables so; /// we can check / whether a longjmp occurred from wasm code. Each block with a; /// function call that might longjmp is also split up after the longjmp call.; /// After the longjmp call, we check whether a longjmp occurred, and if it did,; /// which setjmp it corresponds to, and jump to the right post-setjmp block.; /// We assume setjmp-longjmp handling always run afte",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:1027,variab,variables,1027,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,1,['variab'],['variables']
Modifiability,"N_i\f$ parameters,; a weight can be computed for every event and each species, in order to obtain later the true distribution; \f$\hbox{M}_i(x)\f$ of variable \f$x\f$. If \f${\rm n}\f$ is one of the; \f${\rm N}_{\rm s}\f$ species present in the data sample, the weight for this species is defined by:. \f[; \fbox{$; {_s{\cal P}}_{\rm n}(y_e)={\sum_{j=1}^{{\rm N}_{\rm s}} \hbox{V}_{{\rm n}j}{\rm f}_j(y_e)\over\sum_{k=1}^{{\rm N}_{\rm s}}N_k{\rm f}_k(y_e) } $} , \tag{2}; \f]. where \f$\hbox{V}_{{\rm n}j}\f$. is the covariance matrix resulting from the Likelihood maximization.; This matrix can be used directly from the fit, but this is numerically; less accurate than the direct computation:. \f[; \hbox{ V}^{-1}_{{\rm n}j}~=~; {\partial^2(-{\cal L})\over\partial N_{\rm n}\partial N_j}~=~; \sum_{e=1}^N {{\rm f}_{\rm n}(y_e){\rm f}_j(y_e)\over(\sum_{k=1}^{{\rm N}_{\rm s}}N_k{\rm f}_k(y_e))^2} . \tag{3}; \f]. The distribution of the control variable \f$x\f$ obtained by histogramming the weighted; events reproduces, on average, the true distribution; \f${\hbox{ {M}}}_{\rm n}(x)\f$. The class TSPlot allows to reconstruct the true distribution; \f${\hbox{ {M}}}_{\rm n}(x)\f$. of a control variable \f$x\f$ for each of the \f${\rm N}_{\rm s}\f$ species from; the sole knowledge of the PDFs of the discriminating variables \f${\rm f}_i(y)\f$.; The plots obtained thanks to the TSPlot class are called \f$\hbox {$_s$}{\cal P}lots\f$. ### Some properties and checks. Beside reproducing the true distribution,\f$\hbox {$_s$}{\cal P}lots\f$ bear remarkable properties:. - Each \f$x\f$ - distribution is properly normalized:. \f[; \sum_{e=1}^{N} {_s{\cal P}}_{\rm n}(y_e)~=~N_{\rm n} ~. \tag{4}; \f]. - For any event:. \f[; \sum_{l=1}^{{\rm N}_{\rm s}} {_s{\cal P}}_l(y_e) ~=~1 ~. \tag{5}; \f]. That is to say that, summing up the \f${\rm N}_{\rm s}\f$ \f$\hbox {$_s$}{\cal P}lots\f$,; one recovers the data sample distribution in \f$x\f$, and summing up the number of events; entering in a \f$\hbox{$",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:3779,variab,variable,3779,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variable']
Modifiability,"Note that different SQL databases treat date/time types differently.; // For instance, MySQL has all correspondent types (TIME, DATE, DATETIME and TIMESTAMP),; // Oracle native driver supports only DATE (which is actually date and time) and TIMESTAMP; // ODBC interface provides access for time, date and timestamps,; // for PostgreSQL, TIMESTAMP is available and can be retrieved via all methods,; // the implementation for SQLite interprets the column content as; // a timestamp with second fraction.; // Due to these differences, one should use correct methods to access such data.; // For instance, in MySQL SQL type 'DATE' is only date (one should use GetDate() to; // access such data), while in Oracle it is date and time. Therefore,; // to get complete data from a 'DATE' column in Oracle, one should use the GetDatime() method.; //; // The only difference between timestamp and date/time is that timestamp has a fractional; // seconds part. Be aware that the fractional part has different meanings; // (actual value) in different SQL plugins.; // For PostgreSQL, it is given back as microseconds, while for SQLite3,; // milliseconds correspond to the fraction (similar to the DATETIME-functions; // implemented in the SQLite3 language).; //; // 5. Binary data; // ==============; // Most modern data bases support just binary data, which is; // typically has SQL type name 'BLOB'. To access data in such; // columns, GetBinary()/SetBinary() methods should be used.; // The current implementation implies that the complete content of the; // column must be retrieved at once. Therefore, very big data of; // gigabytes size may cause a problem.; //; // In addition, for PostgresSQL, the methods GetLargeObject()/SetLargeObject(); // are implemented with similar syntax. They retrieve a large object for the OID; // given in the column of the statement. For non-PostgreSQL databases,; // calling GetLargeObject()/SetLargeObject() is redirected to GetBinary()/SetBinary().; //; /////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx:10444,plugin,plugins,10444,net/net/src/TSQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx,1,['plugin'],['plugins']
Modifiability,"OT is built with MT support and MT is enables, the fit is perfomed in multi-thread - ""E"" Perform better Errors estimation using Minos technique; /// ""MULTITHREAD"" | Forces usage of multi-thread execution whenever possible; ///; /// The default fitting of an histogram (when no option is given) is perfomed as following:; /// - a chi-square fit (see below Chi-square Fits) computed using the bin histogram errors and excluding bins with zero errors (empty bins);; /// - the full range of the histogram is used;; /// - the default Minimizer with its default configuration is used (see below Minimizer Configuration) except for linear function;; /// - for linear functions (`polN`, `chenbyshev` or formula expressions combined using operator `++`) a linear minimization is used.; /// - only the status of the fit is returned;; /// - the fit is performed in Multithread whenever is enabled in ROOT;; /// - only the last fitted function is saved in the histogram;; /// - the histogram is drawn after fitting overalyed with the resulting fitting function; ///; /// \anchor HFitMinimizer; /// ### Minimizer Configuration; ///; /// The Fit is perfomed using the default Minimizer, defined in the `ROOT::Math::MinimizerOptions` class.; /// It is possible to change the default minimizer and its configuration parameters by calling these static functions before fitting (before calling `TH1::Fit`):; /// - `ROOT::Math::MinimizerOptions::SetDefaultMinimizer(minimizerName, minimizerAgorithm)` for changing the minmizer and/or the corresponding algorithm.; /// For example `ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLMultiMin"",""BFGS"");` will set the usage of the BFGS algorithm of the GSL multi-dimensional minimization; /// The current defaults are (""Minuit"",""Migrad"").; /// See the documentation of the `ROOT::Math::MinimizerOptions` for the available minimizers in ROOT and their corresponding algorithms.; /// - `ROOT::Math::MinimizerOptions::SetDefaultTolerance` for setting a different tolerance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:4901,Config,Configuration,4901,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['Config'],['Configuration']
Modifiability,"Q"" Quiet mode (minimum printing); /// - option = ""V"" Verbose mode (default is between Q and V); /// - option = ""E"" Perform better Errors estimation using Minos technique; /// - option = ""M"" More. Improve fit results; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~ {.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~ {.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup:; ///; /// - Parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~ {.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""f1"", ""jpsimass"", ""jpsipt>3.0"");; /// ~~~; /// 1, 2 and 3 Dimensional fits are supported. See also TTree::Fit; ///; /// Return status:; ///; /// - The function return the status of the fit in the following form; /// fitResult = migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult; /// - The fitResult is 0 is the fit is OK.; /// - The fitResult is negative in case of an error not connected with the fit.; /// - The number of entries used in the fit can be obtained via mytree.GetSelectedRows();; /// - If the number of selected entries is null the function returns -1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1595,variab,variable,1595,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variable']
Modifiability,"R""(; // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE. )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:37,VARIAB,VARIABLE,37,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,1,['VARIAB'],['VARIABLE']
Modifiability,"R""(; // Support also using the imaginary unit; using namespace std::complex_literals;; // To be able to also comile C code, we define a variable that behaves like the ""I"" macro from C.; constexpr auto I = 1i;; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:136,variab,variable,136,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,1,['variab'],['variable']
Modifiability,"R""(; <head>; <title>llvm-exegesis Analysis Results</title>; <style>; body {; font-family: sans-serif; }; span.sched-class-name {; font-weight: bold;; font-family: monospace;; }; span.opcode {; font-family: monospace;; }; span.config {; font-family: monospace;; }; div.inconsistency {; margin-top: 50px;; }; table {; margin-left: 50px;; border-collapse: collapse;; }; table, table tr,td,th {; border: 1px solid #444;; }; table ul {; padding-left: 0px;; margin: 0px;; list-style-type: none;; }; table.sched-class-clusters td {; padding-left: 10px;; padding-right: 10px;; padding-top: 10px;; padding-bottom: 10px;; }; table.sched-class-desc td {; padding-left: 10px;; padding-right: 10px;; padding-top: 2px;; padding-bottom: 2px;; }; span.mono {; font-family: monospace;; }; td.measurement {; text-align: center;; }; tr.good-cluster td.measurement {; color: #292; }; tr.bad-cluster td.measurement {; color: #922; }; tr.good-cluster td.measurement span.minmax {; color: #888;; }; tr.bad-cluster td.measurement span.minmax {; color: #888;; }; </style>; </head>; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Analysis.cpp:226,config,config,226,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Analysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Analysis.cpp,1,['config'],['config']
Modifiability,"R""(; <html>; <head>; <meta charset='utf-8'/>; <style>; span.d { color: red; }; span.u { color: #cc00cc; }; span.i { color: green; }; span.m { font-weight: bold; }; span { font-weight: normal; color: black; }; div.code {; width: 48%;; height: 98%;; overflow: scroll;; float: left;; padding: 0 0 0.5% 0.5%;; border: solid 2px LightGrey;; border-radius: 5px;; }; </style>; </head>; <script type='text/javascript'>; highlightStack = []; function clearHighlight() {; while (highlightStack.length) {; var [l, r] = highlightStack.pop(); document.getElementById(l).style.backgroundColor = 'inherit'; if (r[1] != '-'); document.getElementById(r).style.backgroundColor = 'inherit'; }; }; function highlight(event) {; var id = event.target['id']; doHighlight(id); }; function doHighlight(id) {; clearHighlight(); source = document.getElementById(id); if (!source.attributes['tid']); return; var mapped = source; while (mapped && mapped.parentElement && mapped.attributes['tid'].value.substr(1) === '-1'); mapped = mapped.parentElement; var tid = null, target = null; if (mapped) {; tid = mapped.attributes['tid'].value; target = document.getElementById(tid); }; if (source.parentElement && source.parentElement.classList.contains('code')); return; source.style.backgroundColor = 'lightgrey'; source.scrollIntoView(); if (target) {; if (mapped === source); target.style.backgroundColor = 'lightgrey'; target.scrollIntoView(); }; highlightStack.push([id, tid]); location.hash = '#' + id; }; function scrollToBoth() {; doHighlight(location.hash.substr(1)); }; function changed(elem) {; return elem.classList.length == 0; }; function nextChangedNode(prefix, increment, number) {; do {; number += increment; var elem = document.getElementById(prefix + number); } while(elem && !changed(elem)); return elem ? number : null; }; function handleKey(e) {; var down = e.code === ""KeyJ""; var up = e.code === ""KeyK""; if (!down && !up); return; var id = highlightStack[0] ? highlightStack[0][0] : 'R0'; var oldelem = document.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-diff/ClangDiff.cpp:582,inherit,inherit,582,interpreter/llvm-project/clang/tools/clang-diff/ClangDiff.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-diff/ClangDiff.cpp,2,['inherit'],['inherit']
Modifiability,"R""(; OVERVIEW: Clang Static Analyzer -analyzer-config Option List. The following list of configurations are meant for development purposes only, as; some of the variables they define are set to result in the most optimal; analysis. Setting them to other values may drastically change how the analyzer; behaves, and may even result in instabilities, crashes!. USAGE: -analyzer-config <OPTION1=VALUE,OPTION2=VALUE,...>; -analyzer-config OPTION1=VALUE, -analyzer-config OPTION2=VALUE, ...; OPTIONS:; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/AnalyzerHelpFlags.cpp:47,config,config,47,interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/AnalyzerHelpFlags.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/AnalyzerHelpFlags.cpp,6,"['config', 'variab']","['config', 'configurations', 'variables']"
Modifiability,"R""(; int CLASS_NAME::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char */*rangeName*/) const; {; // Support also using the imaginary unit; using namespace std::complex_literals;; // To be able to also comile C code, we define a variable that behaves like the ""I"" macro from C.; constexpr auto I = 1i;. // LIST HERE OVER WHICH VARIABLES ANALYTICAL INTEGRATION IS SUPPORTED,; // ASSIGN A NUMERIC CODE FOR EACH SUPPORTED (SET OF) PARAMETERS. THE EXAMPLE; // BELOW ASSIGNS CODE 1 TO INTEGRATION OVER VARIABLE X YOU CAN ALSO; // IMPLEMENT MORE THAN ONE ANALYTICAL INTEGRAL BY REPEATING THE matchArgs; // EXPRESSION MULTIPLE TIMES.; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:252,variab,variable,252,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,3,"['VARIAB', 'variab']","['VARIABLE', 'VARIABLES', 'variable']"
Modifiability,"R""(; int CLASS_NAME::getGenerator(const RooArgSet &directVars, RooArgSet &generateVars, bool /*staticInitOK*/) const; {; // LIST HERE OVER WHICH VARIABLES INTERNAL GENERATION IS SUPPORTED, ASSIGN A; // NUMERIC CODE FOR EACH SUPPORTED (SET OF) PARAMETERS. THE EXAMPLE BELOW; // ASSIGNS CODE 1 TO INTEGRATION OVER VARIABLE X. YOU CAN ALSO IMPLEMENT; // MORE THAN ONE GENERATOR CONFIGURATION BY REPEATING THE matchArgs; // EXPRESSION MULTIPLE TIMES. IF THE FLAG staticInitOK IS TRUE, THEN IT IS; // SAFE TO PRECALCULATE INTERMEDIATE QUANTITIES IN initGenerator(), IF IT IS; // NOT SET THEN YOU SHOULD NOT ADVERTISE ANY GENERATOR METHOD THAT RELIES ON; // PRECALCULATIONS IN initGenerator(). // if (matchArgs(directVars,generateVars,x)) return 1;; return 0;; }. void CLASS_NAME::generateEvent(int code); {; // GENERATE SET OF OBSERVABLES DEFINED BY RETURN CODE ASSIGNED BY; // getGenerator(). RETURN THE GENERATED VALUES BY ASSIGNING THEM TO THE; // PROXY DATA MEMBERS THAT REPRESENT THE CHOSEN OBSERVABLES. // assert(code==1);; // x = 0;; return;; }; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx:145,VARIAB,VARIABLES,145,roofit/roofitcore/src/RooClassFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooClassFactory.cxx,3,"['CONFIG', 'VARIAB']","['CONFIGURATION', 'VARIABLE', 'VARIABLES']"
Modifiability,"R""(OPTIONS:; --format - archive format to create; =default - default; =gnu - gnu; =darwin - darwin; =bsd - bsd; =bigarchive - big archive (AIX OS); --plugin=<string> - ignored for compatibility; -h --help - display this help and exit; --output - the directory to extract archive members to; --rsp-quoting - quoting style for response files; =posix - posix; =windows - windows; --thin - create a thin archive; --version - print the version and exit; -X{32|64|32_64|any} - object mode (only for AIX OS); @<file> - read options from <file>. OPERATIONS:; d - delete [files] from the archive; m - move [files] in the archive; p - print contents of [files] found in the archive; q - quick append [files] to the archive; r - replace or insert [files] into the archive; s - act as ranlib; t - display list of files in archive; x - extract [files] from the archive. MODIFIERS:; [a] - put [files] after [relpos]; [b] - put [files] before [relpos] (same as [i]); [c] - do not warn if archive had to be created; [D] - use zero for timestamps and uids/gids (default); [h] - display this help and exit; [i] - put [files] before [relpos] (same as [b]); [l] - ignored for compatibility; [L] - add archive's contents; [N] - use instance [count] of name; [o] - preserve original dates; [O] - display member offsets; [P] - use full names when matching (implied for thin archives); [s] - create an archive index (cf. ranlib); [S] - do not build a symbol table; [T] - deprecated, use --thin instead; [u] - update only [files] newer than archive contents; [U] - use actual timestamps and uids/gids; [v] - be verbose about actions taken; [V] - display the version and exit; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-ar/llvm-ar.cpp:150,plugin,plugin,150,interpreter/llvm-project/llvm/tools/llvm-ar/llvm-ar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-ar/llvm-ar.cpp,1,['plugin'],['plugin']
Modifiability,"R""<<<(; <style type=""text/css"">; body { color:#000000; background-color:#ffffff }; body { font-family:Helvetica, sans-serif; font-size:10pt }; h1 { font-size:14pt }; .FileName { margin-top: 5px; margin-bottom: 5px; display: inline; }; .FileNav { margin-left: 5px; margin-right: 5px; display: inline; }; .FileNav a { text-decoration:none; font-size: larger; }; .divider { margin-top: 30px; margin-bottom: 30px; height: 15px; }; .divider { background-color: gray; }; .code { border-collapse:collapse; width:100%; }; .code { font-family: ""Monospace"", monospace; font-size:10pt }; .code { line-height: 1.2em }; .comment { color: green; font-style: oblique }; .keyword { color: blue }; .string_literal { color: red }; .directive { color: darkmagenta }. /* Macros and variables could have pop-up notes hidden by default.; - Macro pop-up: expansion of the macro; - Variable pop-up: value (table) of the variable */; .macro_popup, .variable_popup { display: none; }. /* Pop-up appears on mouse-hover event. */; .macro:hover .macro_popup, .variable:hover .variable_popup {; display: block;; padding: 2px;; -webkit-border-radius:5px;; -webkit-box-shadow:1px 1px 7px #000;; border-radius:5px;; box-shadow:1px 1px 7px #000;; position: absolute;; top: -1em;; left:10em;; z-index: 1; }. .macro_popup {; border: 2px solid red;; background-color:#FFF0F0;; font-weight: normal;; }. .variable_popup {; border: 2px solid blue;; background-color:#F0F0FF;; font-weight: bold;; font-family: Helvetica, sans-serif;; font-size: 9pt;; }. /* Pop-up notes needs a relative position as a base where they pops up. */; .macro, .variable {; background-color: PaleGoldenRod;; position: relative;; }; .macro { color: DarkMagenta; }. #tooltiphint {; position: fixed;; width: 50em;; margin-left: -25em;; left: 50%;; padding: 10px;; border: 1px solid #b0b0b0;; border-radius: 2px;; box-shadow: 1px 1px 7px black;; background-color: #c0c0c0;; z-index: 2;; }. .num { width:2.5em; padding-right:2ex; background-color:#eeeeee }; .num { text-",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp:762,variab,variables,762,interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp,3,"['Variab', 'variab']","['Variable', 'variable', 'variables']"
Modifiability,"R""CODE(::Init(TTree *tree); {; // The Init() function is called when the selector needs to initialize; // a new tree or chain. Typically here the reader is initialized.; // It is normally not necessary to make changes to the generated; // code, but the routine can be extended by the user if needed.; // Init() will be called many times when running on PROOF; // (once per file to be processed). fReader.SetTree(tree);; }. bool )CODE""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:268,extend,extended,268,tree/treeplayer/src/TTreeReaderGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx,1,['extend'],['extended']
Modifiability,"R""CODE(::Notify(); {; // The Notify() function is called when a new file is opened. This; // can be either for a new TTree in a TChain or when when a new TTree; // is started when using PROOF. It is normally not necessary to make changes; // to the generated code, but the routine can be extended by the; // user if needed. The return value is currently not used. return true;; }. #endif // #ifdef )CODE""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:288,extend,extended,288,tree/treeplayer/src/TTreeReaderGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx,1,['extend'],['extended']
Modifiability,"R""CODE(; struct TemplateFun {; template <class T>; TemplateFun(int, T);. template <class T>; int NonCtor(float, T);; };; class InheritTemplateFun: TemplateFun {; public:; using TemplateFun::TemplateFun;; };. namespace Templates {; class TypeArg;; template <class T> class TemplateArg;; template <class OUTER>; struct MyMethods {; template <class X> int Na();; template <class X> int Nb(X); // can be deduced but not enough for MethodInfo.; template <class A, class B = int> int Nc();; template <class X = OUTER, class... ARGS, class Y> int Nd();. template <class X = int> int Ya();; template <class...> int Yb();; template <int X = 12> int Yc();; template <typename X = TypeArg> int Yd1();; template <template <class T> class X = TemplateArg> int Yd2();; template <class X = OUTER> int Ye();; template <class X = OUTER> int Yf();; template <class X = OUTER, class... ARGS> int Yg();; template <class X = OUTER, class... ARGS, class Y = int> int Yh();; };; }. )CODE""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx:127,Inherit,InheritTemplateFun,127,core/metacling/test/TClingMethodInfoTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingMethodInfoTests.cxx,1,['Inherit'],['InheritTemplateFun']
Modifiability,"R. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example - script Transform.c:; ///; /// \image html spectrumtransform_transform_image002.jpg Fig. 1 Original gamma-ray spectrum; /// \image html spectrumtransform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform; ///; /// #### Script:; /// Example to illustrate Transform function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Transform.C`; ///; /// ~~~ {.cpp}; /// #include <TSpectrum>; /// #include <TSpectrumTransform>; /// void Transform() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1569,adapt,adaptive,1569,hist/spectrum/src/TSpectrumTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx,1,['adapt'],['adaptive']
Modifiability,"Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TStyleManager; \ingroup ged. This class provides a Graphical User Interface to manage styles; in ROOT. It allows the user to edit styles, import / export; them to macros, apply a style on the selected object or on; all canvases, change gStyle. Activate the style manager by selecting Edit menu / Style...; in the canvas window. The Style Manager interface is composed of two parts:; - the top level interface that manages a list of styles;; - the style editor, which deals with the current style settings. The combo box 'Available Styles' contains the list of available; styles for the current ROOT session and shows the currently; selected one. The field on the right shows the setting of the gStyle.; You can set the global variable gStyle to the selected style by; clicking on the button in the middle.; The group frame 'Apply on' displays information for the currently; selected canvas and object in the ROOT session. This selection might; be changed by clicking on another object with the middle mouse; button. You have a choice to apply a style on the selected object or; on all available canvases.; WARNING: You cannot undo the changes after applying the style! If; you are not sure of that action, it may be better to see a preview; of what you are going to apply.; If the check button 'Preview' is selected, a preview of the selected; canvas according to the selected style will be shown. The selection; of the next check button 'Run Time Preview' will apply updates of; the preview any time a value of the selected style is changed. For; drawings that take a time it is better to disable this option. Create a new style:; A new style can be created via the Style menu/New... or the toolbar.; A clone of the selected style will be used as a bas",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx:1158,variab,variable,1158,gui/ged/src/TStyleManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TStyleManager.cxx,1,['variab'],['variable']
Modifiability,"SE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // CUDA C/C++ includes memory space designation as variable type qualifers (such; // as __global__ and __shared__). Knowing the space of a memory access allows; // CUDA compilers to emit faster PTX loads and stores. For example, a load from; // shared memory can be translated to `ld.shared` which is roughly 10% faster; // than a generic `ld` on an NVIDIA Tesla K40c.; //; // Unfortunately, type qualifiers only apply to variable declarations, so CUDA; // compilers must infer the memory space of an address expression from; // type-qualified variables.; //; // LLVM IR uses non-zero (so-called) specific address spaces to represent memory; // spaces (e.g. addrspace(3) means shared memory). The Clang frontend; // places only type-qualified variables in specific address spaces, and then; // conservatively `addrspacecast`s each type-qualified variable to addrspace(0); // (so-called the generic address space) for other instructions to use.; //; // For example, the Clang translates the following CUDA code; // __shared__ float a[10];; // float v = a[i];; // to; // %0 = addrspacecast [10 x float] addrspace(3)* @a to [10 x float]*; // %1 = gep [10 x float], [10 x float]* %0, i64 0, i64 %i; // %v = load float, float* %1 ; emits ld.f32; // @a is in addrspace(3) since it's type-qualified, but its use from %1 is; // redirected to %0 (the generic version of @a).; //; // The optimization implemented in this file propagates specific address spaces; // from type-qualified variable declarations to its users. For example, it; // optimizes the above IR to; // %1 = gep [10 x float] addrspace(3)* @a, i64 0, i64 %i; // %v = load float addrspace(3)* %1 ; emits ld.shared.f32; // propagating the addrspace(3) from @a to %1. As the result, the NVPTX; // codegen is able to emit ld.shared.f32 for %v.; //; // Address space",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp:1123,variab,variables,1123,interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // SymbolRewriter is a LLVM pass which can rewrite symbols transparently within; // existing code. It is implemented as a compiler pass and is configured via a; // YAML configuration file.; //; // The YAML configuration file format is as follows:; //; // RewriteMapFile := RewriteDescriptors; // RewriteDescriptors := RewriteDescriptor | RewriteDescriptors; // RewriteDescriptor := RewriteDescriptorType ':' '{' RewriteDescriptorFields '}'; // RewriteDescriptorFields := RewriteDescriptorField | RewriteDescriptorFields; // RewriteDescriptorField := FieldIdentifier ':' FieldValue ','; // RewriteDescriptorType := Identifier; // FieldIdentifier := Identifier; // FieldValue := Identifier; // Identifier := [0-9a-zA-Z]+; //; // Currently, the following descriptor types are supported:; //; // - function: (function rewriting); // + Source (original name of the function); // + Target (explicit transformation); // + Transform (pattern transformation); // + Naked (boolean, whether the function is undecorated); // - global variable: (external linkage global variable rewriting); // + Source (original name of externally visible variable); // + Target (explicit transformation); // + Transform (pattern transformation); // - global alias: (global alias rewriting); // + Source (original name of the aliased name); // + Target (explicit transformation); // + Transform (pattern transformation); //; // Note that source and exactly one of [Target, Transform] must be provided; //; // New rewrite descriptors can be created. Addding a new rewrite descriptor; // involves:; //; // a) extended the rewrite descriptor kind enumeration; // (<anonymous>::RewriteDescriptor::RewriteDescriptorType); // b) implementing the new descriptor; // (c.f. <anonymous>::ExplicitRewriteFunctionDescriptor); // c) extending the rewrite map parser; // (<anonymous>::RewriteMapPa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SymbolRewriter.cpp:586,config,configuration,586,interpreter/llvm-project/llvm/lib/Transforms/Utils/SymbolRewriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SymbolRewriter.cpp,18,"['Rewrite', 'config', 'rewrite', 'variab']","['RewriteDescriptor', 'RewriteDescriptorField', 'RewriteDescriptorFields', 'RewriteDescriptorType', 'RewriteDescriptors', 'RewriteMapFile', 'configuration', 'rewrite', 'variable']"
Modifiability,"SYS/etc/system.rootrc. Additional; directories can be specified by adding them to the end of the list.; Macros for identical plugin handlers in later directories will; override previous ones (the inverse of normal search path behavior).; The macros must have names like `<BaseClass>/PX0_<PluginClass>.C`,; e.g. TSQLServer/P20_TMySQLServer.C, to allow easy sorting and grouping.; If the BaseClass is in a namespace the directory must have the name; NameSpace@@BaseClass as `:` is a reserved pathname character on some; operating systems. Macros not beginning with 'P' and ending with "".C""; are ignored. These macros typically look like:; ~~~ {.cpp}; void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*)"");; }; ~~~; Plugin handlers can also be defined via resources in the .rootrc; file. Although now deprecated this method still works for backward; compatibility, e.g.:; ~~~ {.cpp}; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""<constructor>""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""<constructor>""; Plugin.TVirtualFitter: * TFitter Minuit ""TFitter(Int_t)""; ~~~; Where the + in front of Plugin.TSQLServer says that it extends the; existing definition of TSQLServer, useful when there is more than; one plugin that can extend the same base class. The ""<constructor>""; should be the constructor or a static method that generates an; instance of the specified class. Global methods should start with; ""::"" in their name, like ""::CreateFitter()"".; Instead of being a shared library a plugin can also be a CINT; script, so instead of libDialog.so one can have Dialog.C.; The * is a placeholder in case there is no need for a URI to; differentiate between different plugins for the same base class.; For the default plugins see $ROOTSYS/etc/system.rootrc. Plugin handlers can also be registered at run time, e.g.:; ~~~ {.cpp}; gPluginMgr->AddHandler(""TSQLServer"", ""^sqlite:"",; ""TSQLiteServer"", ""RSQLite"",; ""TSQLiteServ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:2196,Plugin,Plugin,2196,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['Plugin'],['Plugin']
Modifiability,"See TProfile2D::SetErrorOption for; /// details on the differences.; /// The option=prof is automatically selected in case of z:y:x>>pf; /// where pf is an existing TProfile2D histogram.; ///; /// ### Making a 5D plot using GL; ///; /// If option GL5D is specified together with 5 variables, a 5D plot is drawn; /// using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example.; ///; /// ### Making a parallel coordinates plot; ///; /// In case of a 2-Dim or more expression with the option=para, one can generate; /// a parallel coordinates plot. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Making a candle sticks chart; ///; /// In case of a 2-Dim or more expression with the option=candle, one can generate; /// a candle sticks chart. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Normalizing the output histogram to 1; ///; /// When option contains ""norm"" the output histogram is normalized to 1.; ///; /// ### Saving the result of Draw to a TEventList, a TEntryList or a TEntryListArray; ///; /// TTree::Draw can be used to fill a TEventList object (list of entry numbers); /// instead of histogramming one variable.; /// If varexp0 has the form >>elist , a TEventList object named ""elist""; /// is created in the current directory. elist will contain the list; /// of entry numbers satisfying the current selection.; /// If option ""entrylist"" is used, a TEntryList object is created; /// If the selection contains arrays, vectors or any container class and option; /// ""entrylistarray"" is used, a TEntryListArray object is created; /// containing also the subentries satisfying the selection, i.e. the indices of; /// the branches which hold containers classes.; /// Example:; /// ~~~ {.cpp}; /// tree.Draw(""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:21619,variab,variables,21619,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variables']
Modifiability,"Size. If the text precision (see next paragraph) is smaller than 3, the text; size (`textsize`) is a fraction of the current pad size. Therefore the; same `textsize` value can generate text outputs with different absolute; sizes in two different pads.; The text size in pixels (`charheight`) is computed the following way:. ~~~ {.cpp}; pad_width = gPad->XtoPixel(gPad->GetX2());; pad_height = gPad->YtoPixel(gPad->GetY1());; if (pad_width < pad_height) charheight = textsize*pad_width;; else charheight = textsize*pad_height;; ~~~. If the text precision is equal to 3, the text size doesn't depend on the pad's; dimensions. A given `textsize` value always generates the same absolute; size. The text size (`charheight`) is given in pixels:. ~~~ {.cpp}; charheight = textsize;; ~~~. Note that to scale fonts to the same size as the old True Type package a; scale factor of `0.93376068` is apply to the text size before drawing. The text size of any class inheriting from `TAttText` can; be changed using the method `SetTextSize` and retrieved using the; method `GetTextSize`. \anchor ATTTEXT5; ## Text Font and Precision. The text font code is combination of the font number and the precision.; ~~~ {.cpp}; Text font code = 10*fontnumber + precision; ~~~; Font numbers must be between 1 and 14. The precision can be:. - `precision = 0` fast hardware fonts (steps in the size); - `precision = 1` scalable and rotatable hardware fonts (see below); - `precision = 2` scalable and rotatable hardware fonts; - `precision = 3` scalable and rotatable hardware fonts. Text size; is given in pixels. The text font and precision of any class inheriting from `TAttText` can; be changed using the method `SetTextFont` and retrieved using the; method `GetTextFont`. \anchor ATTTEXT51; ### Font quality and speed. When precision 0 is used, only the original non-scaled X11 system fonts are; used. The fonts have a minimum (4) and maximum (37) size in pixels. These; fonts are fast and are of good quality. Their siz",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx:4169,inherit,inheriting,4169,core/base/src/TAttText.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx,1,['inherit'],['inheriting']
Modifiability,"System->SetIncludePath(""-I$ROOTSYS/include; /// -I$HOME/mypackage/include"");; /// root[2] .x myfunc.C++(10,20);; /// ~~~; /// The user may sometimes try to compile a script before it has loaded all the; /// needed shared libraries. In this case we want to be helpful and output a; /// list of the unresolved symbols. So if the loading of the created shared; /// library fails, we will try to build a executable that contains the; /// script. The linker should then output a list of missing symbols.; ///; /// To support this we provide a TSystem::SetMakeExe() function, that sets the; /// directive telling how to create an executable. The loader will need; /// to be informed of all the libraries available. The information about; /// the libraries that has been loaded by .L and TSystem::Load() is accessible; /// to the script compiler. However, the information about; /// the libraries that have been selected at link time by the application; /// builder (like the root libraries for root.exe) are not available and need; /// to be explicitly listed in fLinkedLibs (either by default or by a call to; /// TSystem::SetLinkedLibs()).; ///; /// To simplify customization we could also add to the .rootrc support for the; /// variables; /// ~~~ {.cpp}; /// Unix.*.Root.IncludePath: -I$ROOTSYS/include; /// WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; ///; /// Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; /// WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; /// ~~~; /// And also support for MakeSharedLibs() and MakeExe().; ///; /// (the ... have to be replaced by the actual values and are here only to; /// shorten this comment).; ///; /// Note that the default behavior is to remove libraries when closing ROOT,; /// ie TSystem::CleanCompiledMacros() is called in the TROOT destructor.; /// The default behavior of .L script.C+ is the opposite one, leaving things; /// after closing, without removing. In other words, .L always passes the 'k'; /// option behind the scenes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:5251,variab,variables,5251,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['variab'],['variables']
Modifiability,"TClonesArray* a, Option_t opt="""") {...} //; // Int_t ImportParticles(Option_t opt="""") { ... } //; // Int_t SetParameter(const char* name, Double_t val) { ... } //; // Double_t GetParameter(const char* name) { ... } //; // virtual ~MyGenerator() { ... } //; // protected: //; // MyGenerator() { ... } //; // MyGenerator(const MyGenerator& o) { ... } //; // MyGenerator& operator=(const MyGenerator& o) { ... } //; // static MyGenerator* fgInstance; //; // ClassDefOverride(MyGenerator,0); //; // }; //; // //; // Having multiple objects accessing the same common blocks is not //; // safe. //; // //; // concrete TGenerator classes can be loaded in scripts and subseqent- //; // ly used in compiled code: //; // //; // // MyRun.h //; // class MyRun : public TObject //; // { //; // public: //; // static MyRun* Instance() { ... } //; // void SetGenerator(TGenerator* g) { fGenerator = g; } //; // void Run(Int_t n, Option_t* option="""") //; // { //; // TFile* file = TFile::Open(""file.root"",""RECREATE""); //; // TTree* tree = new TTree(""T"",""T""); //; // TClonesArray* p = new TClonesArray(""TParticles""); //; // tree->Branch(""particles"", &p); //; // for (Int_t event = 0; event < n; event++) { //; // fGenerator->GenerateEvent(); //; // fGenerator->ImportParticles(p,option); //; // tree->Fill(); //; // } //; // file->Write(); //; // file->Close(); //; // } //; // ... //; // protected: //; // TGenerator* fGenerator; //; // ClassDefOverride(MyRun,0); //; // }; //; // //; // // Config.C //; // void Config() //; // { //; // MyRun* run = MyRun::Instance(); //; // run->SetGenerator(MyGenerator::Instance()); //; // } //; // //; // // main.cxx //; // int //; // main(int argc, char** argv) //; // { //; // TApplication app("""", 0, 0); //; // gSystem->ProcessLine("".x Config.C""); //; // MyRun::Instance()->Run(10); //; // return 0; //; // } //; // //; // This is especially useful for example with TVirtualMC or similar. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TGenerator.h:3917,Config,Config,3917,montecarlo/eg/inc/TGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TGenerator.h,3,['Config'],['Config']
Modifiability,"T_1_1RDataFrame.html#transformations). This selects only specific rows of the dataset. - [Creating custom columns](https://root.cern/doc/master/classROOT_1_1RDataFrame.html#transformations). Custom columns can, for example, contain the results of a computation that must be performed for every row of the dataset. 3. [Produce results](https://root.cern/doc/master/classROOT_1_1RDataFrame.html#actions). *Actions* are used to aggregate data into results. Most actions are *lazy*, i.e. they are not executed on the spot, but registered with RDataFrame and executed only when a result is accessed for the first time. Make sure to book all transformations and actions before you access the contents of any of the results. This lets RDataFrame accumulate work and then produce all results at the same time, upon first access to any of them. The following table shows how analyses based on TTreeReader and TTree::Draw() translate to RDataFrame. Follow the; [crash course](#crash-course) to discover more idiomatic and flexible ways to express analyses with RDataFrame.; <table>; <tr>; <td>; <b>TTreeReader</b>; </td>; <td>; <b>ROOT::RDataFrame</b>; </td>; </tr>; <tr>; <td>; ~~~{.cpp}; TTreeReader reader(""myTree"", file);; TTreeReaderValue<A_t> a(reader, ""A"");; TTreeReaderValue<B_t> b(reader, ""B"");; TTreeReaderValue<C_t> c(reader, ""C"");; while(reader.Next()) {; if(IsGoodEvent(*a, *b, *c)); DoStuff(*a, *b, *c);; }; ~~~; </td>; <td>; ~~~{.cpp}; ROOT::RDataFrame d(""myTree"", file, {""A"", ""B"", ""C""});; d.Filter(IsGoodEvent).Foreach(DoStuff);; ~~~; </td>; </tr>; <tr>; <td>; <b>TTree::Draw</b>; </td>; <td>; <b>ROOT::RDataFrame</b>; </td>; </tr>; <tr>; <td>; ~~~{.cpp}; auto *tree = file->Get<TTree>(""myTree"");; tree->Draw(""x"", ""y > 2"");; ~~~; </td>; <td>; ~~~{.cpp}; ROOT::RDataFrame df(""myTree"", file);; auto h = df.Filter(""y > 2"").Histo1D(""x"");; h->Draw(); ~~~; </td>; </tr>; <tr>; <td>; ~~~{.cpp}; tree->Draw(""jet_eta"", ""weight*(event == 1)"");; ~~~; </td>; <td>; ~~~{.cpp}; df.Filter(""event == 1"").Histo1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:13553,flexible,flexible,13553,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['flexible'],['flexible']
Modifiability,"The XML file is built in memory before being dumped to disk.; //; // Like for normal ROOT files, XML files use the same I/O mechanism; // exploiting the ROOT/CINT dictionary. Any class having a dictionary; // can be saved in XML format.; //; // This first implementation does not support subdirectories; // or Trees.; //; // The shared library libRXML.so may be loaded dynamically; // via gSystem->Load(""libRXML""). This library is automatically; // loaded by the plugin manager as soon as a XML file is created; // via, eg; // TFile::Open(""file.xml"",""recreate"");; // TFile::Open returns a TXMLFile object. When a XML file is open in write mode,; // one can use the normal TObject::Write to write an object in the file.; // Alternatively one can use the new functions TDirectoryFile::WriteObject and; // TDirectoryFile::WriteObjectAny to write a TObject* or any class not deriving; // from TObject.; //; // example of a session saving a histogram to a XML file; // =====================================================; // TFile *f = TFile::Open(""Example.xml"",""recreate"");; // TH1F *h = new TH1F(""h"",""test"",1000,-2,2);; // h->FillRandom(""gaus"");; // h->Write();; // delete f;; //; // example of a session reading the histogram from the file; // ========================================================; // TFile *f = TFile::Open(""Example.xml"");; // TH1F *h = (TH1F*)f->Get(""h"");; // h->Draw();; //; // A new option in the canvas ""File"" menu is available to save; // a TCanvas as a XML file. One can also do; // canvas->Print(""Example.xml"");; //; // Configuring ROOT with the option ""xml""; // ======================================; // The XML package is enabled by default; //; // documentation; // =============; // See also classes TBufferXML, TKeyXML, TXMLEngine, TXMLSetup and TXMLPlayer.; // An example of XML file corresponding to the small example below; // can be found at http://root.cern/root/Example.xml; //; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx:2663,Config,Configuring,2663,io/xml/src/TXMLFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLFile.cxx,1,['Config'],['Configuring']
Modifiability,"The checker reports uninitialized fields in objects created after a; // constructor call.; //; // This checker has several options:; // - ""Pedantic"" (boolean). If its not set or is set to false, the checker; // won't emit warnings for objects that don't have at least one initialized; // field. This may be set with; //; // `-analyzer-config optin.cplusplus.UninitializedObject:Pedantic=true`.; //; // - ""NotesAsWarnings"" (boolean). If set to true, the checker will emit a; // warning for each uninitialized field, as opposed to emitting one warning; // per constructor call, and listing the uninitialized fields that belongs; // to it in notes. Defaults to false.; //; // `-analyzer-config \; // optin.cplusplus.UninitializedObject:NotesAsWarnings=true`.; //; // - ""CheckPointeeInitialization"" (boolean). If set to false, the checker will; // not analyze the pointee of pointer/reference fields, and will only check; // whether the object itself is initialized. Defaults to false.; //; // `-analyzer-config \; // optin.cplusplus.UninitializedObject:CheckPointeeInitialization=true`.; //; // TODO: With some clever heuristics, some pointers should be dereferenced; // by default. For example, if the pointee is constructed within the; // constructor call, it's reasonable to say that no external object; // references it, and we wouldn't generate multiple report on the same; // pointee.; //; // - ""IgnoreRecordsWithField"" (string). If supplied, the checker will not; // analyze structures that have a field with a name or type name that; // matches the given pattern. Defaults to """".; //; // `-analyzer-config \; // optin.cplusplus.UninitializedObject:IgnoreRecordsWithField=""[Tt]ag|[Kk]ind""`.; //; // - ""IgnoreGuardedFields"" (boolean). If set to true, the checker will analyze; // _syntactically_ whether the found uninitialized object is used without a; // preceding assert call. Defaults to false.; //; // `-analyzer-config \; // optin.cplusplus.UninitializedObject:IgnoreGuardedFields=true`.; //;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObject.h:1501,config,config,1501,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObject.h,1,['config'],['config']
Modifiability,"This function searches for peaks in source spectrum. It is based on; /// deconvolution method. First the background is removed (if desired), then; /// Markov smoothed spectrum is calculated (if desired), then the response; /// function is generated according to given sigma and deconvolution is; /// carried out. The order of peaks is arranged according to their heights in; /// the spectrum after background elimination. The highest peak is the first in; /// the list. On success it returns number of found peaks.; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum.; /// - destVector: pointer to the vector of resulting deconvolved spectrum.; /// - ssize: length of source spectrum.; /// - sigma: sigma of searched peaks, for details we refer to manual.; /// - threshold: threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual.; /// - backgroundRemove: logical variable, set if the removal of; /// background before deconvolution is desired.; /// - deconIterations-number of iterations in deconvolution operation.; /// - markov: logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow: averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method).; ///; /// ### Peaks searching:; ///; /// The goal of this function is to identify automatically the peaks in spectrum; /// with the presence of the continuous background and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification are:; ///; /// - non-sensitivity to noise, i.e., only statistically; /// relevant peaks should be identified.; /// - non-sensitivity of the algorithm to continuous; /// background.; /// - ability to identify peaks close to the edges of the; /// spectrum region. Usually peak finders fail to detect them.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1126,variab,variable,1126,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['variab'],['variable']
Modifiability,"TileDirective). In The OMPCanonicalLoop and; /// ForStmt/CXXForRangeStmt pair is repeated for loop associated with the; /// directive. A OMPCanonicalLoop must not appear in the AST unless associated; /// with a OMPLoopBasedDirective. In an imperfectly nested loop nest, the; /// OMPCanonicalLoop may also be wrapped in a CompoundStmt:; ///; /// [...]; /// ` OMPCanonicalLoop; /// `- ForStmt/CXXForRangeStmt; /// `- CompoundStmt; /// |- Leading in-between code (if any); /// |- OMPCanonicalLoop; /// | `- ForStmt/CXXForRangeStmt; /// | `- ...; /// `- Trailing in-between code (if any); ///; /// The leading/trailing in-between code must not itself be a OMPCanonicalLoop; /// to avoid confusion which loop belongs to the nesting.; ///; /// There are three different kinds of iteration variables for different; /// purposes:; /// * Loop user variable: The user-accessible variable with different value for; /// each iteration.; /// * Loop iteration variable: The variable used to identify a loop iteration;; /// for range-based for-statement, this is the hidden iterator '__begin'. For; /// other loops, it is identical to the loop user variable. Must be a; /// random-access iterator, pointer or integer type.; /// * Logical iteration counter: Normalized loop counter starting at 0 and; /// incrementing by one at each iteration. Allows abstracting over the type; /// of the loop iteration variable and is always an unsigned integer type; /// appropriate to represent the range of the loop iteration variable. Its; /// value corresponds to the logical iteration number in the OpenMP; /// specification.; ///; /// This AST node provides two captured statements:; /// * The distance function which computes the number of iterations.; /// * The loop user variable function that computes the loop user variable when; /// given a logical iteration number.; ///; /// These captured statements provide the link between C/C++ semantics and the; /// logical iteration counters used by the OpenMPIRBuilder which i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:2464,variab,variable,2464,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,2,['variab'],['variable']
Modifiability,"Trunc->visitUnknown(%X),; // and call this function with %SymbolicPHI = %X.; //; // The analysis will find that the value coming around the backedge has; // the following SCEV:; // BEValue = ((sext i32 (trunc i64 %X to i32) to i64) + %Step); // Upon concluding that this matches the desired pattern, the function; // will return the pair {NewAddRec, SmallPredsVec} where:; // NewAddRec = {%Start,+,%Step}; // SmallPredsVec = {P1, P2, P3} as follows:; // P1(WrapPred): AR: {trunc(%Start),+,(trunc %Step)}<nsw> Flags: <nssw>; // P2(EqualPred): %Start == (sext i32 (trunc i64 %Start to i32) to i64); // P3(EqualPred): %Step == (sext i32 (trunc i64 %Step to i32) to i64); // The returned pair means that SymbolicPHI can be rewritten into NewAddRec; // under the predicates {P1,P2,P3}.; // This predicated rewrite will be cached in PredicatedSCEVRewrites:; // PredicatedSCEVRewrites[{%X,L}] = {NewAddRec, {P1,P2,P3)}; //; // TODO's:; //; // 1) Extend the Induction descriptor to also support inductions that involve; // casts: When needed (namely, when we are called in the context of the; // vectorizer induction analysis), a Set of cast instructions will be; // populated by this method, and provided back to isInductionPHI. This is; // needed to allow the vectorizer to properly record them to be ignored by; // the cost model and to avoid vectorizing them (otherwise these casts,; // which are redundant under the runtime overflow checks, will be; // vectorized, which can be costly).; //; // 2) Support additional induction/PHISCEV patterns: We also want to support; // inductions where the sext-trunc / zext-trunc operations (partly) occur; // after the induction update operation (the induction increment):; //; // (Trunc iy (SExt/ZExt ix (%SymbolicPHI + InvariantAccum) to iy) to ix); // which correspond to a phi->add->trunc->sext/zext->phi update chain.; //; // (Trunc iy ((SExt/ZExt ix (%SymbolicPhi) to iy) + InvariantAccum) to ix); // which correspond to a phi->trunc->add->sext/zext->phi upda",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:1503,rewrite,rewrite,1503,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,2,"['Extend', 'rewrite']","['Extend', 'rewrite']"
Modifiability,"U The type of the aggregator variable. Must be default-constructible, copy-constructible and copy-assignable. Automatically deduced.; /// \tparam T The type of the column to apply the reduction to. Automatically deduced.; /// \param[in] aggregator A callable with signature `U(U,T)` or `void(U&,T)`, where T is the type of the column, U is the type of the aggregator variable; /// \param[in] merger A callable with signature `U(U,U)` or `void(std::vector<U>&)` used to merge the results of the accumulations of each thread; /// \param[in] columnName The column to be aggregated. If omitted, the first default column is used instead.; /// \param[in] aggIdentity The aggregator variable of each thread is initialized to this value (or is default-constructed if the parameter is omitted); /// \return the result of the aggregation wrapped in a RResultPtr.; ///; /// An aggregator callable takes two values, an aggregator variable and a column value. The aggregator variable is; /// initialized to aggIdentity or default-constructed if aggIdentity is omitted.; /// This action calls the aggregator callable for each processed entry, passing in the aggregator variable and; /// the value of the column columnName.; /// If the signature is `U(U,T)` the aggregator variable is then copy-assigned the result of the execution of the callable.; /// Otherwise the signature of aggregator must be `void(U&,T)`.; ///; /// The merger callable is used to merge the partial accumulation results of each processing thread. It is only called in multi-thread executions.; /// If its signature is `U(U,U)` the aggregator variables of each thread are merged two by two.; /// If its signature is `void(std::vector<U>& a)` it is assumed that it merges all aggregators in a[0].; ///; /// This action is *lazy*: upon invocation of this method the calculation is booked but not executed. Also see RResultPtr.; ///; /// Example usage:; /// ~~~{.cpp}; /// auto aggregator = [](double acc, double x) { return acc * x; };; /// ROOT",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1262,variab,variable,1262,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['variab'],['variable']
Modifiability,"Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodFisher; \ingroup TMVA. Fisher and Mahalanobis Discriminants (Linear Discriminant Analysis). In the method of Fisher discriminants event selection is performed; in a transformed variable space with zero linear correlations, by; distinguishing the mean values of the signal and background; distributions. The linear discriminant analysis determines an axis in the (correlated); hyperspace of the input variables; such that, when projecting the output classes (signal and background); upon this axis, they are pushed as far as possible away from each other,; while events of a same class are confined in a close vicinity.; The linearity property of this method is reflected in the metric with; which ""far apart"" and ""close vicinity"" are determined: the covariance; matrix of the discriminant variable space. The classification of the events in signal and background classes; relies on the following characteristics (only): overall sample means, \f$ x_i \f$,; for each input variable, \f$ i \f$,; class-specific sample means, \f$ x_{S(B),i}\f$,; and total covariance matrix \f$ T_{ij} \f$. The covariance matrix; can be decomposed into the sum of a _within_ (\f$ W_{ij} \f$); and a _between-class_ (\f$ B_{ij} \f$) class matrix. They describe; the dispersion of events relative to the means of their own class (within-class; matrix), and relative to the overall sample means (between-class matrix).; The Fisher coefficients, \f$ F_i \f$, are then given by. \f[; F_",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx:1629,variab,variables,1629,tmva/tmva/src/MethodFisher.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx,1,['variab'],['variables']
Modifiability,"[1,2,3]D; - HistoND; - Max; - Mean; - Min; - Profile[1,2,3]D; - Redefine; - Snapshot; - Stats; - StdDev; - Sum; - Systematic variations: Vary and [VariationsFor](\ref ROOT::RDF::Experimental::VariationsFor).; - Parallel submission of distributed graphs: [RunGraphs](\ref ROOT::RDF::RunGraphs).; - Information about the dataframe: GetColumnNames. with support for more operations coming in the future. Data sources other than TTree and TChain (e.g. CSV, RNTuple) are; currently not supported. \note The distributed RDataFrame module requires at least Python version 3.8. ### Connecting to a Spark cluster. In order to distribute the RDataFrame workload, you can connect to a Spark cluster you have access to through the; official [Spark API](https://spark.apache.org/docs/latest/rdd-programming-guide.html#initializing-spark), then hook the; connection instance to the distributed `RDataFrame` object like so:. ~~~{.py}; import pyspark; import ROOT. # Create a SparkContext object with the right configuration for your Spark cluster; conf = SparkConf().setAppName(appName).setMaster(master); sc = SparkContext(conf=conf). # Point RDataFrame calls to the Spark specific RDataFrame; RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. # The Spark RDataFrame constructor accepts an optional ""sparkcontext"" parameter; # and it will distribute the application to the connected cluster; df = RDataFrame(""mytree"", ""myfile.root"", sparkcontext = sc); ~~~. If an instance of [SparkContext](https://spark.apache.org/docs/latest/api/python/reference/api/pyspark.SparkContext.html); is not provided, the default behaviour is to create one in the background for you. ### Connecting to a Dask cluster. Similarly, you can connect to a Dask cluster by creating your own connection object which internally operates with one; of the cluster schedulers supported by Dask (more information in the; [Dask distributed docs](http://distributed.dask.org/en/stable/)):. ~~~{.py}; import ROOT; from dask.distributed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:38460,config,configuration,38460,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['config'],['configuration']
Modifiability,"\code; /// for (int i = 0; i < 7; ++i) // Canonical loop ""i""; /// for (int j = 0; j < 9; ++j) // Canonical loop ""j""; /// body(i, j);; /// \endcode; ///; /// After collapsing with Loops={i,j}, the loop is changed to; /// \code; /// for (int ij = 0; ij < 63; ++ij) {; /// int i = ij / 9;; /// int j = ij % 9;; /// body(i, j);; /// }; /// \endcode; ///; /// In the current implementation, the following limitations apply:; ///; /// * All input loops have an induction variable of the same type.; ///; /// * The collapsed loop will have the same trip count integer type as the; /// input loops. Therefore it is possible that the collapsed loop cannot; /// represent all iterations of the input loops. For instance, assuming a; /// 32 bit integer type, and two input loops both iterating 2^16 times, the; /// theoretical trip count of the collapsed loop would be 2^32 iteration,; /// which cannot be represented in an 32-bit integer. Behavior is undefined; /// in this case.; ///; /// * The trip counts of every input loop must be available at \p ComputeIP.; /// Non-rectangular loops are not yet supported.; ///; /// * At each nest level, code between a surrounding loop and its nested loop; /// is hoisted into the loop body, and such code will be executed more; /// often than before collapsing (or not at all if any inner loop iteration; /// has a trip count of 0). This is permitted by the OpenMP specification.; ///; /// \param DL Debug location for instructions added for collapsing,; /// such as instructions to compute/derive the input loop's; /// induction variables.; /// \param Loops Loops in the loop nest to collapse. Loops are specified; /// from outermost-to-innermost and every control flow of a; /// loop's body must pass through its directly nested loop.; /// \param ComputeIP Where additional instruction that compute the collapsed; /// trip count. If not set, defaults to before the generated; /// loop.; ///; /// \returns The CanonicalLoopInfo object representing the collapsed loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:2368,variab,variables,2368,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,1,['variab'],['variables']
Modifiability,"\f$ are chosen first; (TMultiDimFit::TestFunction). In case \f$ \phi \f$ isn't defined, an alternative method of; performing this second test is used: The \f$L^{\mbox{th}}\f$; function \f$\textbf{f}_L\f$ is accepted if (refer also to equation (13)); \f[; \Delta S_L > \frac{S_{L-1}}{L_{max}-L}; \f]; where \f$ S_{L-1}\f$ is the sum of the \f$ L-1\f$ first residuals from the; \f$ L-1\f$ functions previously accepted; and \f$ L_{max}\f$ is the total number; of functions allowed in the final expression of the fit (defined by; user). From this we see, that by restricting \f$ L_{max}\f$ -- the number of; terms in the final model -- the fit is more difficult to perform,; since the above selection criteria is more limiting. The more coefficients we evaluate, the more the sum of squares of; residuals \f$ S\f$ will be reduced. We can evaluate \f$ S\f$ before inverting; \f$\mathsf{B}\f$ as shown below. ## Coefficients and Coefficient Errors; Having found a parameterization, that is the \f$ F_l\f$'s and \f$ L\f$, that; minimizes \f$ S\f$, we still need to determine the coefficients; \f$ c_l\f$. However, it's a feature of how we choose the significant; functions, that the evaluation of the \f$ c_l\f$'s becomes trivial [5]. To derive; \f$\mathbf{c}\f$, we first note that; equation (4) can be written as; \f[; \mathsf{F} = \mathsf{W}\mathsf{B}; \f]; where; \f{eqnarray*}{; b_{ij} = \frac{\mathbf{f}_j \bullet \mathbf{w}_i}{\mathbf{w}_i^2}; & \mbox{if} & i < j\\; 1 & \mbox{if} & i = j\\; 0 & \mbox{if} & i > j; \f}; Consequently, \f$\mathsf{B}\f$ is an upper triangle matrix, which can be; readily inverted. So we now evaluate; \f[; \mathsf{F}\mathsf{B}^{-1} = \mathsf{W}; \f]; The model \f$\mathsf{W}\mathbf{a}\f$ can therefore be written as; \f$(\mathsf{F}\mathsf{B}^{-1})\mathbf{a} = \mathsf{F}(\mathsf{B}^{-1}\mathbf{a})\,.\f$. The original model \f$\mathsf{F}\mathbf{c}\f$ is therefore identical with; this if; \f[; \mathbf{c} = \left(\mathsf{B}^{-1}\mathbf{a}\right) =; \left[\mathbf{a}^T\l",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:12099,parameteriz,parameterization,12099,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['parameteriz'],['parameterization']
Modifiability,"^{-1}\right)^T\right]^T\,.; \f]; The reason we use \f$\left(\mathsf{B}^{-1}\right)^T\f$ rather then; \f$\mathsf{B}^{-1}\f$ is to save storage, since \f$\left(\mathsf{B}^{-1}\right)^T\f$; can be stored in the same matrix as \f$\mathsf{B}\f$ (TMultiDimFit::MakeCoefficients).; The errors in the coefficients is calculated by inverting the curvature matrix; of the non-orthogonal functions \f$ f_{lj}\f$ [1] (TMultiDimFit::MakeCoefficientErrors). ## Considerations; It's important to realize that the training sample should be; representative of the problem at hand, in particular along the borders; of the region of interest. This is because the algorithm presented; here, is a *interpolation*, rather then a *extrapolation* [5]. Also, the independent variables \f$ x_{i}\f$ need to be linear; independent, since the procedure will perform poorly if they are not; [5]. One can find an linear transformation from ones; original variables \f$ \xi_{i}\f$ to a set of linear independent variables; \f$ x_{i}\f$, using a *Principal Components Analysis* (see TPrincipal), and; then use the transformed variable as input to this class [5] [6]. H. Wind also outlines a method for parameterising a multidimensional; dependence over a multidimensional set of variables. An example; of the method from [5], is a follows (please refer to; [5] for a full discussion):. 1. Define \f$\mathbf{P} = (P_1, \ldots, P_5)\f$ are the 5 dependent; quantities that define a track.; 2. Compute, for \f$ M\f$ different values of \f$\mathbf{P}\f$, the tracks; through the magnetic field, and determine the corresponding; \f$\mathbf{x} = (x_1, \ldots, x_N)\f$.; 3. Use the simulated observations to determine, with a simple; approximation, the values of \f$\mathbf{P}_j\f$. We call these values; \f$\mathbf{P}^\prime_j, j = 1, \ldots, M\f$.; 4. Determine from \f$\mathbf{x}\f$ a set of at least five relevant; coordinates \f$\mathbf{x}^\prime\f$, using contrains, *or; alternative:*; 5. Perform a Principal Component Analysis (usi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:14080,variab,variables,14080,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,3,['variab'],"['variable', 'variables']"
Modifiability,"_list[count_of_properties];; /// }; /// struct _protocol_t;; /// struct _protocol_list_t {; /// long protocol_count; // Note, this is 32/64 bit; /// struct _protocol_t * protocol_list[protocol_count];; /// }; /// struct _objc_method {; /// SEL _cmd;; /// const char *method_type;; /// char *_imp;; /// }; /// struct _method_list_t {; /// uint32_t entsize; // sizeof(struct _objc_method); /// uint32_t method_count;; /// struct _objc_method method_list[method_count];; /// }; /// struct _protocol_t {; /// id isa; // NULL; /// const char *protocol_name;; /// const struct _protocol_list_t * protocol_list; // super protocols; /// const struct method_list_t *instance_methods;; /// const struct method_list_t *class_methods;; /// const struct method_list_t *optionalInstanceMethods;; /// const struct method_list_t *optionalClassMethods;; /// const struct _prop_list_t * properties;; /// const uint32_t size; // sizeof(struct _protocol_t); /// const uint32_t flags; // = 0; /// const char ** extendedMethodTypes;; /// }; /// struct _ivar_t {; /// unsigned long int *offset; // pointer to ivar offset location; /// const char *name;; /// const char *type;; /// uint32_t alignment;; /// uint32_t size;; /// }; /// struct _ivar_list_t {; /// uint32 entsize; // sizeof(struct _ivar_t); /// uint32 count;; /// struct _ivar_t list[count];; /// }; /// struct _class_ro_t {; /// uint32_t flags;; /// uint32_t instanceStart;; /// uint32_t instanceSize;; /// uint32_t reserved; // only when building for 64bit targets; /// const uint8_t *ivarLayout;; /// const char *name;; /// const struct _method_list_t *baseMethods;; /// const struct _protocol_list_t *baseProtocols;; /// const struct _ivar_list_t *ivars;; /// const uint8_t *weakIvarLayout;; /// const struct _prop_list_t *properties;; /// }; /// struct _class_t {; /// struct _class_t *isa;; /// struct _class_t *superclass;; /// void *cache;; /// IMP *vtable;; /// struct _class_ro_t *ro;; /// }; /// struct _category_t {; /// const char *name;; /// struc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:1287,extend,extendedMethodTypes,1287,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,1,['extend'],['extendedMethodTypes']
Modifiability,"`x[1]`, `x[2]`; that is `x[N]` where N is an integer. ```; TFormula("""", ""x[0] * x[1] + 10""); ```. Parameters are similar and can take any name. It is specified using brackets; e.g. `[expected_mass]` or `[0]`. ```; TFormula("""", ""exp([expected_mass])-1""); ```. Variables and parameters can be combined in the same TFormula. Here we consider; a very simple case where we have an exponential decay after some time t and a; number of events with timestamps for which we want to evaluate this function. ```; TFormula tf ("""", ""[0]*exp(-[1]*t)"");; tf.SetParameter(0, 1);; tf.SetParameter(1, 0.5);. for (auto & event : events) {; tf.Eval(event.t);; }; ```. The distinction between variables and parameters arose from the TFormula's; application in fitting. There parameters are fitted to the data provided; through variables. In other applications this distinction can go away. Parameter values can be provided dynamically using `TFormula::EvalPar`; instead of `TFormula::Eval`. In this way parameters can be used identically; to variables. See below for an example that uses only parameters to model a; function. ```; Int_t params[2] = {1, 2}; // {vel_x, vel_y}; TFormula tf ("""", ""[vel_x]/sqrt(([vel_x + vel_y])**2)"");. tf.EvalPar(nullptr, params);; ```. ### A note on operators. All operators of C/C++ are allowed in a TFormula with a few caveats. The operators `|`, `&`, `%` can be used but will raise an error if used in; conjunction with a variable or a parameter. Variables and parameters are treated; as doubles internally for which these operators are not defined.; This means the following command will run successfully; ```root -l -q -e TFormula("""", ""x+(10%3)"").Eval(0)```; but not; ```root -l -q -e TFormula("""", ""x%10"").Eval(0)```. The operator `^` is defined to mean exponentiation instead of the C/C++; interpretation xor. `**` is added, also meaning exponentiation. The operators `++` and `@` are added, and are shorthand for the a linear; function. That means the expression `x@2` will be expan",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:6535,variab,variables,6535,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variables']
Modifiability,"a coming from the LHC alone:; it is demonstrated to scale and it's battle tested. It has been optimized during the years; to reduce dataset sizes on disk and to deliver excellent runtime performance.; It allows to access only part of the columns of the datasets, too.; The TNtuple and TNtupleD classes are specialisations of the TTree class which can; only hold single precision and double precision floating-point numbers respectively;; The TChain is a collection of TTrees, which can be located also in different files. */; /** \class TTree; \ingroup tree. A TTree represents a columnar dataset. Any C++ type can be stored in its columns. A TTree, often called in jargon *tree*, consists of a list of independent columns or *branches*,; represented by the TBranch class.; Behind each branch, buffers are allocated automatically by ROOT.; Such buffers are automatically written to disk or kept in memory until the size stored in the; attribute fMaxVirtualSize is reached.; Variables of one branch are written to the same buffer. A branch buffer is; automatically compressed if the file compression attribute is set (default).; Branches may be written to different files (see TBranch::SetFile). The ROOT user can decide to make one single branch and serialize one object into; one single I/O buffer or to make several branches.; Making several branches is particularly interesting in the data analysis phase,; when it is desirable to have a high reading rate and not all columns are equally interesting. \anchor creatingattreetoc; ## Create a TTree to store columnar data; - [Construct a TTree](\ref creatingattree); - [Add a column of Fundamental Types and Arrays thereof](\ref addcolumnoffundamentaltypes); - [Add a column of a STL Collection instances](\ref addingacolumnofstl); - [Add a column holding an object](\ref addingacolumnofobjs); - [Add a column holding a TObjectArray](\ref addingacolumnofobjs); - [Fill the tree](\ref fillthetree); - [Add a column to an already existing Tree](\ref add",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1665,Variab,Variables,1665,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['Variab'],['Variables']
Modifiability,"ability of vectorization.; //; // The loop vectorizer combines consecutive loop iterations into a single; // 'wide' iteration. After this transformation the index is incremented; // by the SIMD vector width, and not by one.; //; // This pass has four parts:; // 1. The main loop pass that drives the different parts.; // 2. LoopVectorizationLegality - A unit that checks for the legality; // of the vectorization.; // 3. InnerLoopVectorizer - A unit that performs the actual; // widening of instructions.; // 4. LoopVectorizationCostModel - A unit that checks for the profitability; // of vectorization. It decides on the optimal vector width, which; // can be one, if vectorization is not profitable.; //; // There is a development effort going on to migrate loop vectorizer to the; // VPlan infrastructure and to introduce outer loop vectorization support (see; // docs/VectorizationPlan.rst and; // http://lists.llvm.org/pipermail/llvm-dev/2017-December/119523.html). For this; // purpose, we temporarily introduced the VPlan-native vectorization path: an; // alternative vectorization path that is natively implemented on top of the; // VPlan infrastructure. See EnableVPlanNativePath for enabling.; //; //===----------------------------------------------------------------------===//; //; // The reduction-variable vectorization is based on the paper:; // D. Nuzman and R. Henderson. Multi-platform Auto-vectorization.; //; // Variable uniformity checks are inspired by:; // Karrenberg, R. and Hack, S. Whole Function Vectorization.; //; // The interleaved access vectorization is based on the paper:; // Dorit Nuzman, Ira Rosen and Ayal Zaks. Auto-Vectorization of Interleaved; // Data for SIMD; //; // Other ideas/concepts are from:; // A. Zaks and D. Nuzman. Autovectorization in GCC-two years later.; //; // S. Maleki, Y. Gao, M. Garzaran, T. Wong and D. Padua. An Evaluation of; // Vectorizing Compilers.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorize.h:1944,variab,variable,1944,interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorize.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorize.h,2,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,"ables....| LLVM chooses r6); // |.(VLAs)............................| (size of this area is unknown at; // |...................................| compile time); // |-----------------------------------| <- sp; // | | Lower address; //; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are both VLAs and local; // variables with more-than-default alignment requirements.; // * A frame pointer is definitely needed when there are local variables with; // more-than-default alignment requirements.; //; // In some cases when a base pointer is not strictly needed, it is generated; // anyway when offsets from the frame pointer to access local variables become; // so large that the offset can't be encoded in the immediate fields of loads; // or stores.; //; // The frame pointer might be chosen to be r7 or r11, depending on the target; // architecture and operating system. See ARMSubtarget::getFramePointerReg for; // details.; //; // Outgoing function arguments must be at the bottom of the stack frame when; // calling another function. If we do not have variable-sized stack objects, we; // can allocate a ""reserved call frame"" area at the bottom of the local; // variable area, large enough for all outgoing calls. If we do have VLAs, then; // the stack pointer must be decremented and incremented around each call to; // make space for the arguments below the VLAs.; //; //===---------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp:3425,variab,variables,3425,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,1,['variab'],['variables']
Modifiability,"accelerator keys.; This is identical to the command "".L macro.C++"" in the root prompt; command line. #### Interrupting a Running Macro. You can interrupt a running macro by selecting the Tools menu /; Interrupt; by clicking on the corresponding toolbar button, or by; using Shift+F5 accelerator keys. #### Interface to CINT Interpreter. Any command entered in the Command combo box will be passed to; the CINT interpreter. This combo box will keep the commands history; and will allow you to re-execute the same commands during an editor; session. #### Keyboard Bindings. The following table lists the keyboard shortcuts and accelerator; keys. | Key: | Action |; |---------------|----------------|; | Up | Move cursor up. |; | Shift+Up | Move cursor up and extend selection. |; | Down | Move cursor down. |; | Shift+Down | Move cursor down and extend selection. |; | Left | Move cursor left. |; | Shift+Left | Move cursor left and extend selection. |; | Right | Move cursor right. |; | Shift+Right | Move cursor right and extend selection. |; | Home | Move cursor to begin of line. |; | Shift+Home | Move cursor to begin of line and extend selection. |; | Ctrl+Home | Move cursor to top of page. |; | End | Move cursor to end of line. |; | Shift+End | Move cursor to end of line and extend selection. |; | Ctrl+End | Move cursor to end of page. |; | PgUp | Move cursor up one page. |; | Shift+PgUp | Move cursor up one page and extend selection. |; | PgDn | Move cursor down one page. |; | Shift+PgDn | Move cursor down one page and extend selection. |; | Delete | Delete character after cursor, or text selection. |; | BackSpace | Delete character before cursor, or text selection. |; | Ctrl+B | Move cursor left. |; | Ctrl+D | Delete character after cursor, or text selection. |; | Ctrl+E | Move cursor to end of line. |; | Ctrl+H | Delete character before cursor, or text selection. |; | Ctrl+K | Delete characters from current position to the end of line. |; | Ctrl+U | Delete current line. |. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx:4676,extend,extend,4676,gui/gui/src/TGTextEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx,5,['extend'],['extend']
Modifiability,"ad; // - Implementations that instantiate templates per-kernel where those templates; // use LDS are expected to hit the ""Kernel"" lowering strategy; // - The runtime properties impose a cost in compiler implementation complexity; //; // Dynamic LDS implementation; // Dynamic LDS is lowered similarly to the ""table"" strategy above and uses the; // same intrinsic to identify which kernel is at the root of the dynamic call; // graph. This relies on the specified behaviour that all dynamic LDS variables; // alias one another, i.e. are at the same address, with respect to a given; // kernel. Therefore this pass creates new dynamic LDS variables for each kernel; // that allocates any dynamic LDS and builds a table of addresses out of those.; // The AMDGPUPromoteAlloca pass skips kernels that use dynamic LDS.; // The corresponding optimisation for ""kernel"" lowering where the table lookup; // is elided is not implemented.; //; //; // Implementation notes / limitations; // A single LDS global variable represents an instance per kernel that can reach; // said variables. This pass essentially specialises said variables per kernel.; // Handling ConstantExpr during the pass complicated this significantly so now; // all ConstantExpr uses of LDS variables are expanded to instructions. This; // may need amending when implementing non-undef initialisers.; //; // Lowering is split between this IR pass and the back end. This pass chooses; // where given variables should be allocated and marks them with metadata,; // MD_absolute_symbol. The backend places the variables in coincidentally the; // same location and raises a fatal error if something has gone awry. This works; // in practice because the only pass between this one and the backend that; // changes LDS is PromoteAlloca and the changes it makes do not conflict.; //; // Addresses are written to constant global arrays based on the same metadata.; //; // The backend lowers LDS variables in the order of traversal of the function.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:7268,variab,variable,7268,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"address; // |-----------------------------------|; // | |; // | arguments passed on the stack |; // | |; // |-----------------------------------| <- (sp at function entry); // | |; // | varargs from registers |; // | |; // |-----------------------------------|; // | |; // | prev_lr |; // | prev_fp |; // | (a.k.a. ""frame record"") |; // | |; // |- - - - - - - - - - - - - - - - - -| <- fp (r7 or r11); // | |; // | callee-saved gpr registers |; // | |; // |-----------------------------------|; // | |; // | callee-saved fp/simd regs |; // | |; // |-----------------------------------|; // |.empty.space.to.make.part.below....|; // |.aligned.in.case.it.needs.more.than| (size of this area is unknown at; // |.the.standard.8-byte.alignment.....| compile time; if present); // |-----------------------------------|; // | |; // | local variables of fixed size |; // | including spill slots |; // |-----------------------------------| <- base pointer (not defined by ABI,; // |.variable-sized.local.variables....| LLVM chooses r6); // |.(VLAs)............................| (size of this area is unknown at; // |...................................| compile time); // |-----------------------------------| <- sp; // | | Lower address; //; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are both VLAs and local; // variables with more-than-default alignment requirements.; // * A frame pointer is definitely needed when there are loca",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp:2418,variab,variables,2418,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,1,['variab'],['variables']
Modifiability,"aded test available; //; // xrootd root no; // davix http no; //; // An example of output of a non multithreaded test, when all the tests; // run OK is shown below:; //; // ****************************************************************************; // * Starting stressIOPlugins test for protocol http; // * Test files will be read from:; // * http://root.cern/files/StressIOPluginsTestFiles/; // ****************************************************************************; // Test 1 : Check size & compression factor of a Root file........ using stress_2.root; // : opened file with plugin class......................... TDavixFile; // : Check size & compression factor of a Root file........ OK; // Test 2 : Test graphics & Postscript............................ using stress_5.root; // : opened file with plugin class......................... TDavixFile; // : Test graphics & Postscript............................ OK; // Test 3 : Trees split and compression modes..................... using Event_8a.root; // : opened file with plugin class......................... TDavixFile; // : Trees split and compression modes..................... using Event_8b.root; // : opened file with plugin class......................... TDavixFile; // : Trees split and compression modes..................... OK; // Test 4 : Filename formats when adding files to TChain.......... using Event_8a.root and Event_8b.root; // : treename in chain..................................... OK; // : treename to AddFile................................... OK; // : treename in filenames, slash-suffix style............. OK; // : bad treename to AddFile, good in filename............. OK; // : treename and url query in filename.................... OK; // : treename given in url frag in filename................ OK; // : filename with a url query in Add...................... OK; // ****************************************************************************; //_____________________________batch only_____________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx:1804,plugin,plugin,1804,test/stressIOPlugins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx,2,['plugin'],['plugin']
Modifiability,"ading; should be triggered when a given URI contains a regular expression; defined by the handler. Plugin handlers can be defined via macros in a list of plugin; directories. With $ROOTSYS/etc/plugins the default top plugin; directory specified in $ROOTSYS/etc/system.rootrc. Additional; directories can be specified by adding them to the end of the list.; Macros for identical plugin handlers in later directories will; override previous ones (the inverse of normal search path behavior).; The macros must have names like `<BaseClass>/PX0_<PluginClass>.C`,; e.g. TSQLServer/P20_TMySQLServer.C, to allow easy sorting and grouping.; If the BaseClass is in a namespace the directory must have the name; NameSpace@@BaseClass as `:` is a reserved pathname character on some; operating systems. Macros not beginning with 'P' and ending with "".C""; are ignored. These macros typically look like:; ~~~ {.cpp}; void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*)"");; }; ~~~; Plugin handlers can also be defined via resources in the .rootrc; file. Although now deprecated this method still works for backward; compatibility, e.g.:; ~~~ {.cpp}; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""<constructor>""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""<constructor>""; Plugin.TVirtualFitter: * TFitter Minuit ""TFitter(Int_t)""; ~~~; Where the + in front of Plugin.TSQLServer says that it extends the; existing definition of TSQLServer, useful when there is more than; one plugin that can extend the same base class. The ""<constructor>""; should be the constructor or a static method that generates an; instance of the specified class. Global methods should start with; ""::"" in their name, like ""::CreateFitter()"".; Instead of being a shared library a plugin can also be a CINT; script, so instead of libDialog.so one can have Dialog.C.; The * is a placeholder in case there is no need for a URI to; differentiate between different",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:1964,Plugin,Plugin,1964,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['Plugin'],['Plugin']
Modifiability,"ads where it was drawn.; If a histogram is drawn in a pad, then filled again, the new status; of the histogram will be automatically shown in the pad next time; the pad is updated. One does not need to redraw the histogram.; To draw the current version of a histogram in a pad, one can use; ~~~ {.cpp}; h->DrawCopy();; ~~~; This makes a clone (see Clone below) of the histogram. Once the clone; is drawn, the original histogram may be modified or deleted without; affecting the aspect of the clone. One can use TH1::SetMaximum() and TH1::SetMinimum() to force a particular; value for the maximum or the minimum scale on the plot. (For 1-D; histograms this means the y-axis, while for 2-D histograms these; functions affect the z-axis). TH1::UseCurrentStyle() can be used to change all histogram graphics; attributes to correspond to the current selected style.; This function must be called for each histogram.; In case one reads and draws many histograms from a file, one can force; the histograms to inherit automatically the current graphics style; by calling before gROOT->ForceStyle(). \anchor cont-level; ### Setting Drawing histogram contour levels (2-D hists only). By default contours are automatically generated at equidistant; intervals. A default value of 20 levels is used. This can be modified; via TH1::SetContour() or TH1::SetContourLevel().; the contours level info is used by the drawing options ""cont"", ""surf"",; and ""lego"". \anchor graph-att; ### Setting histogram graphics attributes. The histogram classes inherit from the attribute classes:; TAttLine, TAttFill, and TAttMarker.; See the member functions of these classes for the list of options. \anchor axis-drawing; ### Customizing how axes are drawn. Use the functions of TAxis, such as; ~~~ {.cpp}; histogram.GetXaxis()->SetTicks(""+"");; histogram.GetYaxis()->SetRangeUser(1., 5.);; ~~~. \anchor fitting-histograms; ## Fitting histograms. Histograms (1-D, 2-D, 3-D and Profiles) can be fitted with a user; specified function ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:18366,inherit,inherit,18366,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['inherit'],['inherit']
Modifiability,"al arrays with a maximum dimension depending on the; maximum number of parameters are now data members arrays with; a dynamic dimension such that one can fit very large problems; by simply initialising the TMinuit constructor with the maximum; number of parameters. - The include file Minuit.h has been commented as much as possible; using existing comments in the code or the printed documentation. - The original Minuit subroutines are now member functions. - Constructors and destructor have been added. - Instead of passing the FCN function in the argument; list, the addresses of this function is stored as pointer; in the data members of the class. This is by far more elegant; and flexible in an interactive environment.; The member function SetFCN can be used to define this pointer. - The ROOT static function Printf is provided to replace all; format statements and to print on currently defined output file.; - The functions SetObjectFit(TObject * obj)/GetObjectFit() can be; used inside the FCN function to set/get a referenced object; instead of using global variables. ## Basic concepts of MINUIT. The [MINUIT](https://root.cern/download/minuit.pdf); package acts on a multiparameter Fortran function to which one; must give the generic name <TT>FCN</TT>. In the ROOT implementation,; the function <TT>FCN</TT> is defined via the MINUIT SetFCN member function; when an Histogram.Fit command is invoked.; The value of <TT>FCN</TT> will in general depend on one; or more variable parameters. To take a simple example, in case of ROOT histograms (classes TH1C,TH1S,TH1F,TH1D); the Fit function defines the Minuit fitting function as being H1FitChisquare; or H1FitLikelihood depending on the options selected.; H1FitChisquare; calculates the chisquare between the user fitting function (gaussian, polynomial,; user defined,etc) and the data for given values of the parameters.; It is the task of MINUIT to find those values of the parameters; which give the lowest value of chisquare. ### B",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:1881,variab,variables,1881,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['variab'],['variables']
Modifiability,"amed in class B.; ///; /// C++0x [class.access.base]p4:; /// A base class B of N is accessible at R, if; /// [B1] an invented public member of B would be a public member of N, or; /// [B2] R occurs in a member or friend of class N, and an invented public; /// member of B would be a private or protected member of N, or; /// [B3] R occurs in a member or friend of a class P derived from N, and an; /// invented public member of B would be a private or protected member; /// of P, or; /// [B4] there exists a class S such that B is a base class of S accessible; /// at R and S is a base class of N accessible at R.; ///; /// Along a single inheritance path we can restate both of these; /// iteratively:; ///; /// First, we note that M1-4 are equivalent to B1-4 if the member is; /// treated as a notional base of its declaring class with inheritance; /// access equivalent to the member's access. Therefore we need only; /// ask whether a class B is accessible from a class N in context R.; ///; /// Let B_1 .. B_n be the inheritance path in question (i.e. where; /// B_1 = N, B_n = B, and for all i, B_{i+1} is a direct base class of; /// B_i). For i in 1..n, we will calculate ACAB(i), the access to the; /// closest accessible base in the path:; /// Access(a, b) = (* access on the base specifier from a to b *); /// Merge(a, forbidden) = forbidden; /// Merge(a, private) = forbidden; /// Merge(a, b) = min(a,b); /// Accessible(c, forbidden) = false; /// Accessible(c, private) = (R is c) || IsFriend(c, R); /// Accessible(c, protected) = (R derived from c) || IsFriend(c, R); /// Accessible(c, public) = true; /// ACAB(n) = public; /// ACAB(i) =; /// let AccessToBase = Merge(Access(B_i, B_{i+1}), ACAB(i+1)) in; /// if Accessible(B_i, AccessToBase) then public else AccessToBase; ///; /// B is an accessible base of N at R iff ACAB(1) = public.; ///; /// \param FinalAccess the access of the ""final step"", or AS_public if; /// there is no final step.; /// \return null if friendship is dependent",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAccess.cpp:1711,inherit,inheritance,1711,interpreter/llvm-project/clang/lib/Sema/SemaAccess.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAccess.cpp,1,['inherit'],['inheritance']
Modifiability,"anchor G2D00; ## Creating a TGraph2D. This class has different constructors:; - With an array's dimension and three arrays x, y, and z:; ~~~ {.cpp}; auto g = new TGraph2D(n, x, y, z);; ~~~; x, y, z arrays can be doubles, floats, or ints.; - With an array's dimension only:; ~~~ {.cpp}; auto g = new TGraph2D(n);; ~~~; The internal arrays are then filled with `SetPoint()`. The following line; fills the internal arrays at the position `i` with the values; `x`, `y`, `z`.; ~~~ {.cpp}; g->SetPoint(i, x, y, z);; ~~~; - Without parameters:; ~~~ {.cpp}; auto g = new TGraph2D();; ~~~; again `SetPoint()` must be used to fill the internal arrays.; - From a file:; ~~~ {.cpp}; auto g = new TGraph2D(""graph.dat"");; ~~~; Arrays are read from the ASCII file ""graph.dat"" according to a specifies; format. The default format is `%%lg %%lg %%lg`. Note that in any of these three cases, `SetPoint()` can be used to change a data; point or add a new one. If the data point index (`i`) is greater than the; current size of the internal arrays, they are automatically extended. Like TGraph some TGraph2D constructors do not have the TGraph2D title and name as parameters.; For these constructors TGraph2D has the default title and name ""Graph2D"". To change the; default title and name `SetTitle` and `SetName` should be called on the TGraph2D after its; creation. \anchor G2D01; ## Drawing options. Specific drawing options can be used to paint a TGraph2D:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""TRI"" | The Delaunay triangles are drawn using filled area. An hidden surface drawing technique is used. The surface is painted with the current fill area color. The edges of each triangles are painted with the current line color. |; | ""TRIW"" | The Delaunay triangles are drawn as wire frame. |; | ""TRI1"" | The Delaunay triangles are painted with color levels. The edges of each triangles are painted with the current line color. |; | ""TRI2"" | The D",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx:1447,extend,extended,1447,hist/hist/src/TGraph2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx,1,['extend'],['extended']
Modifiability,"anchor labelling-axis; ### Labelling axes. Axis titles can be specified in the title argument of the constructor.; They must be separated by "";"":; ~~~ {.cpp}; TH1F* h=new TH1F(""h"", ""Histogram title;X Axis;Y Axis"", 100, 0, 1);; ~~~; The histogram title and the axis titles can be any TLatex string, and; are persisted if a histogram is written to a file. Any title can be omitted:; ~~~ {.cpp}; TH1F* h=new TH1F(""h"", ""Histogram title;;Y Axis"", 100, 0, 1);; TH1F* h=new TH1F(""h"", "";;Y Axis"", 100, 0, 1);; ~~~; The method SetTitle() has the same syntax:; ~~~ {.cpp}; h->SetTitle(""Histogram title;Another X title Axis"");; ~~~; Alternatively, the title of each axis can be set directly:; ~~~ {.cpp}; h->GetXaxis()->SetTitle(""X axis title"");; h->GetYaxis()->SetTitle(""Y axis title"");; ~~~; For bin labels see \ref binning. \anchor binning; ## Binning. \anchor fix-var; ### Fix or variable bin size. All histogram types support either fix or variable bin sizes.; 2-D histograms may have fix size bins along X and variable size bins; along Y or vice-versa. The functions to fill, manipulate, draw or access; histograms are identical in both cases. Each histogram always contains 3 axis objects of type TAxis: fXaxis, fYaxis and fZaxis.; To access the axis parameters, use:; ~~~ {.cpp}; TAxis *xaxis = h->GetXaxis(); etc.; Double_t binCenter = xaxis->GetBinCenter(bin), etc.; ~~~; See class TAxis for a description of all the access functions.; The axis range is always stored internally in double precision. \anchor convention; ### Convention for numbering bins. For all histogram types: nbins, xlow, xup; ~~~ {.cpp}; bin = 0; underflow bin; bin = 1; first bin with low-edge xlow INCLUDED; bin = nbins; last bin with upper-edge xup EXCLUDED; bin = nbins+1; overflow bin; ~~~; In case of 2-D or 3-D histograms, a ""global bin"" number is defined.; For example, assuming a 3-D histogram with (binx, biny, binz), the function; ~~~ {.cpp}; Int_t gbin = h->GetBin(binx, biny, binz);; ~~~; returns a global/linearized",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:7484,variab,variable,7484,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variable']
Modifiability,"and TEfficiency::fPassedHistogram).; Then the efficiency, as well as its upper and lower error, can be calculated for each bin; individually. As the efficiency can be regarded as a parameter of a binomial distribution, the; number of passed and total events must always be integer numbers. Therefore a; filling with weights is not possible. However, you can assign a global weight to each; TEfficiency object (TEfficiency::SetWeight).; It is necessary to create one TEfficiency object; for each weight if you investigate a process involving different weights. This; procedure needs more effort but enables you to re-use the filled object in cases; where you want to change one or more weights. This would not be possible if all; events with different weights were filled in the same histogram. \anchor EFF02; ## II. Creating a TEfficiency object; If you start a new analysis, it is highly recommended to use the TEfficiency class; from the beginning. You can then use one of the constructors for fixed or; variable bin size and your desired dimension. These constructors append the; created TEfficiency object to the current directory. So it will be written; automatically to a file during the next TFile::Write command. Example: create a two-dimensional TEfficiency object with; - name = ""eff""; - title = ""my efficiency""; - axis titles: x, y and LaTeX-formatted epsilon as a label for Z axis; - 10 bins with constant bin width (= 1) along X axis starting at 0 (lower edge; from the first bin) up to 10 (upper edge of last bin); - 20 bins with constant bin width (= 0.5) along Y axis starting at -5 (lower; edge from the first bin) up to 5 (upper edge of last bin). TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;y;#epsilon"",10,0,10,20,-5,5);. If you already have two histograms filled with the number of passed and total; events, you will use the constructor TEfficiency(const TH1& passed,const TH1& total); to construct the TEfficiency object. The histograms ""passed"" and ""total"" have; t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:2668,variab,variable,2668,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['variab'],['variable']
Modifiability,"and local files. The; global file is `$ROOTSYS/etc/system<name>` (or `ROOTETCDIR/system<name>`); the user file is `$HOME/<name>` and the local file is `./<name>`.; By setting the shell variable `ROOTENV_NO_HOME=1` the reading of; the `$HOME/<name>` resource file will be skipped. This might be useful; in case the home directory resides on an auto-mounted remote file; system and one wants to avoid this file system from being mounted. The format of the `.rootrc` file is similar to the `.Xdefaults` format:; ~~~ {.cpp}; [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value>; ~~~; Where `<SystemName>` is either Unix, WinNT, MacOS or Vms,; `<RootName>` the name as given in the TApplication ctor (or ""RootApp""; in case no explicit TApplication derived object was created),; `<ProgName>` the current program name and `<name>` the resource name,; with optionally a type specification. `<value>` can be either a; string, an integer, a float/double or a boolean with the values; TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; an integer 0 or 1. The options [+] allows the concatenation of; values to the same resource name. E.g.:; ~~~ {.cpp}; Unix.Rint.Root.DynamicPath: .:$(ROOTSYS)/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.ObjStat: 1; ~~~; `<SystemName>` and `<ProgName>` or `<RootName>` may be the wildcard ""*"".; A # in the first column starts comment line. Note that the environment variables (like $ROOTSYS) need to be; surrounded in parentheses in order to be expanded. For the currently defined resources (and their default values) see; `$ROOTSYS/etc/system.rootrc`. Note that the .rootrc config files contain the config for all ROOT; based applications. To add new entries to a TEnv:; ~~~ {.cpp}; TEnv env("".myfile"");; env.SetValue(""myname"",""value"");; env.SaveLevel(kEnvLocal);; ~~~; All new entries will be saved in the file corresponding to the; first SaveLevel() command. If Save() is used, new entries go; into the local file by default.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TEnv.cxx:2042,variab,variables,2042,core/base/src/TEnv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TEnv.cxx,3,"['config', 'variab']","['config', 'variables']"
Modifiability,"and other objects written; /// after the setting is changed.; /// In case the file does not exist or is not a valid ROOT file,; /// it is made a Zombie. One can detect this situation with a code like:; /// ~~~{.cpp}; /// TFile f(""file.root"");; /// if (f.IsZombie()) {; /// std::cout << ""Error opening file"" << std::endl;; /// exit(-1);; /// }; /// ~~~; /// If you open a file instead with TFile::Open(""file.root"") use rather; /// the following code as a nullptr is returned.; /// ~~~{.cpp}; /// TFile* f = TFile::Open(""file.root"");; /// if (!f) {; /// std::cout << ""Error opening file"" << std::endl;; /// exit(-1);; /// }; /// ~~~; /// When opening the file, the system checks the validity of this directory.; /// If something wrong is detected, an automatic Recovery is performed. In; /// this case, the file is scanned sequentially reading all logical blocks; /// and attempting to rebuild a correct directory (see TFile::Recover).; /// One can disable the automatic recovery procedure when reading one; /// or more files by setting the environment variable ""TFile.Recover: 0""; /// in the system.rootrc file.; ///; /// A bit `TFile::kReproducible` can be enabled specifying; /// the `""reproducible""` url option when creating the file:; /// ~~~{.cpp}; /// TFile *f = TFile::Open(""name.root?reproducible"",""RECREATE"",""File title"");; /// ~~~; /// Unlike regular `TFile`s, the content of such file has reproducible binary; /// content when writing exactly same data. This achieved by writing pre-defined; /// values for creation and modification date of TKey/TDirectory objects and; /// null value for TUUID objects inside TFile. As drawback, TRef objects stored; /// in such file cannot be read correctly.; ///; /// In case the name of the file is not reproducible either (in case of; /// creating temporary filenames) a value can be passed to the reproducible; /// option to replace the name stored in the file.; /// ~~~{.cpp}; /// TFile *f = TFile::Open(""tmpname.root?reproducible=fixedname"",""RECREAT",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:5473,variab,variable,5473,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['variab'],['variable']
Modifiability,"and target indices) that a variable; /// fragment might be located, qualified by a DIExpression and indirect-ness; /// flag, while each variable is identified by a DebugVariable object. The; /// availability of an expression begins when a DBG_VALUE instruction specifies; /// the location of a DebugVariable, and continues until that location is; /// clobbered or re-specified by a different DBG_VALUE for the same; /// DebugVariable.; ///; /// The output of LiveDebugValues is additional DBG_VALUE instructions,; /// placed to extend variable locations as far they're available. This file; /// and the VarLocBasedLDV class is an implementation that explicitly tracks; /// locations, using the VarLoc class.; ///; /// The canonical ""available expressions"" problem doesn't have expression; /// clobbering, instead when a variable is re-assigned, any expressions using; /// that variable get invalidated. LiveDebugValues can map onto ""available; /// expressions"" by having every register represented by a variable, which is; /// used in an expression that becomes available at a DBG_VALUE instruction.; /// When the register is clobbered, its variable is effectively reassigned, and; /// expressions computed from it become unavailable. A similar construct is; /// needed when a DebugVariable has its location re-specified, to invalidate; /// all other locations for that DebugVariable.; ///; /// Using the dataflow analysis to compute the available expressions, we create; /// a DBG_VALUE at the beginning of each block where the expression is; /// live-in. This propagates variable locations into every basic block where; /// the location can be determined, rather than only having DBG_VALUEs in blocks; /// where locations are specified due to an assignment or some optimization.; /// Movements of values between registers and spill slots are annotated with; /// DBG_VALUEs too to track variable values bewteen locations. All this allows; /// DbgEntityHistoryCalculator to focus on only the locations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:1602,variab,variable,1602,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::MethodBase; \ingroup TMVA. Virtual base Class for all MVA method. MethodBase hosts several specific evaluation methods. The kind of MVA that provides optimal performance in an analysis strongly; depends on the particular application. The evaluation factory provides a; number of numerical benchmark results to directly assess the performance; of the MVA training on the independent test sample. These are:. - The _signal efficiency_ at three representative background efficiencies; (which is 1 &minus; rejection).; - The _significance_ of an MVA estimator, defined by the difference; between the MVA mean values for signal and background, divided by the; quadratic sum of their root mean squares.; - The _separation_ of an MVA _x_, defined by the integral; \f[; \frac{1}{2} \int \frac{(S(x) - B(x))^2}{(S(x) + B(x))} dx; \f]; where; \f$ S(x) \f$ and \f$ B(x) \f$ are the signal and background distributions,; respectively. The separation is zero for identical signal and background MVA; shapes, and it is one for disjunctive shapes.; - The average, \f$ \int x \mu (S(x)) dx \f$, of the signal \f$ \mu_{transform} \f$.; The \f$ \mu_{transform} \f$ of an MVA denotes the transformation that yields; a uniform background distribution. In this way, the signal distributions; \f$ S(x) \f$ can be directly compared among the various MVAs. The stronger; \f$ S(x) \f$ peaks towards one, the better is the discrimination of the MVA.; The \f$ \mu_{transform} \f$ is; [documented here](http://tel.ccsd.cnrs.fr/documents/archives0/00/00/29/91/index_fr.html). The MVA standard output also prints the linear correlation coefficients between; signal and background, which can be useful to eliminate variables that exhibit too; strong correlations.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:3014,variab,variables,3014,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,1,['variab'],['variables']
Modifiability,"and; // TTreeReaderArray objects. It knows the current entry number and knows; // how to iterate through the TTree.; TTreeReader reader(""MyTree"", file);. // Read a single float value in each tree entries:; TTreeReaderValue<float> weight(reader, ""event.weight"");. // Read a TriggerInfo object from the tree entries:; TTreeReaderValue<TriggerInfo> triggerInfo(reader, ""triggerInfo"");. //Read a vector of Muon objects from the tree entries:; TTreeReaderValue<std::vector<Muon>> muons(reader, ""muons"");. //Read the pT for all jets in the tree entry:; TTreeReaderArray<double> jetPt(reader, ""jets.pT"");. // Read the taus in the tree entry:; TTreeReaderArray<Tau> taus(reader, ""taus"");. // Now iterate through the TTree entries and fill a histogram. TH1F(""hist"", ""TTreeReader example histogram"", 10, 0., 100.);. bool firstEntry = true;; while (reader.Next()) {; if (firstEntry) {; // Check that branches exist and their types match our expectation.; if (!CheckValue(weight)) return false;; if (!CheckValue(triggerInfo)) return false;; if (!CheckValue(muons)) return false;; if (!CheckValue(jetPt)) return false;; if (!CheckValue(taus)) return false;; firstentry = false;; }. // Access the TriggerInfo object as if it's a pointer.; if (!triggerInfo->hasMuonL1()); continue;. // Ditto for the vector<Muon>.; if (!muons->size()); continue;. // Access the jetPt as an array, whether the TTree stores this as; // a std::vector, std::list, TClonesArray or Jet* C-style array, with; // fixed or variable array size.; if (jetPt.GetSize() < 2 || jetPt[0] < 100); continue;. // Access the array of taus.; if (!taus.IsEmpty()) {; // Access a float value - need to dereference as TTreeReaderValue; // behaves like an iterator; float currentWeight = *weight;; for (const Tau& tau: taus) {; hist->Fill(tau.eta(), currentWeight);; }; }; } // TTree entry / event loop. // Return true if we have iterated through all entries.; return reader.GetEntryStatus() == TTreeReader::kEntryBeyondEnd;; }; ~~~; */; // clang-format on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:4309,variab,variable,4309,tree/treeplayer/src/TTreeReader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx,1,['variab'],['variable']
Modifiability,"arameter besides the columns it should be applied to. RDataFrame; guarantees that ForeachSlot() will invoke the user expression with different `slot` parameters for different concurrent; executions (see [Special helper columns: rdfentry_ and rdfslot_](\ref helper-cols) for more information on the slot parameter).; We can take advantage of ForeachSlot() to evaluate a thread-safe root mean square of column ""x"":; ~~~{.cpp}; // Thread-safe evaluation of RMS of column ""x"" using ForeachSlot; ROOT::EnableImplicitMT();; const unsigned int nSlots = df.GetNSlots();; std::vector<double> sumSqs(nSlots, 0.);; std::vector<unsigned int> ns(nSlots, 0);. df.ForeachSlot([&sumSqs, &ns](unsigned int slot, double x) { sumSqs[slot] += x*x; ns[slot] += 1; }, {""x""});; double sumSq = std::accumulate(sumSqs.begin(), sumSqs.end(), 0.); // sum all squares; unsigned int n = std::accumulate(ns.begin(), ns.end(), 0); // sum all counts; std::cout << ""rms of x: "" << std::sqrt(sumSq / n) << std::endl;; ~~~; Notice how we created one `double` variable for each processing slot and later merged their results via `std::accumulate`. \anchor friends; ### Dataset joins with friend trees. Vertically concatenating multiple trees that have the same columns (creating a logical dataset with the same columns and; more rows) is trivial in RDataFrame: just pass the tree name and a list of file names to RDataFrame's constructor, or create a TChain; out of the desired trees and pass that to RDataFrame. Horizontal concatenations of trees or chains (creating a logical dataset with the same number of rows and the union of the; columns of multiple trees) leverages TTree's ""friend"" mechanism. Simple joins of trees that do not have the same number of rows are also possible with indexed friend trees (see below). To use friend trees in RDataFrame, set up trees with the appropriate relationships and then instantiate an RDataFrame; with the main tree:. ~~~{.cpp}; TTree main([...]);; TTree friend([...]);; main.AddFriend(&frien",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:71409,variab,variable,71409,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['variab'],['variable']
Modifiability,"ard(n - 1 < len);; // ...; // }; //; // After this transformation the condition of the guard is loop invariant, so; // loop-unswitch can later unswitch the loop by this condition which basically; // predicates the loop by the widened condition:; //; // if (n - 1 < len); // for (i = 0; i < n; i++) {; // ...; // }; // else; // deoptimize; //; // It's tempting to rely on SCEV here, but it has proven to be problematic.; // Generally the facts SCEV provides about the increment step of add; // recurrences are true if the backedge of the loop is taken, which implicitly; // assumes that the guard doesn't fail. Using these facts to optimize the; // guard results in a circular logic where the guard is optimized under the; // assumption that it never fails.; //; // For example, in the loop below the induction variable will be marked as nuw; // basing on the guard. Basing on nuw the guard predicate will be considered; // monotonic. Given a monotonic condition it's tempting to replace the induction; // variable in the condition with its value on the last iteration. But this; // transformation is not correct, e.g. e = 4, b = 5 breaks the loop.; //; // for (int i = b; i != e; i++); // guard(i u< len); //; // One of the ways to reason about this problem is to use an inductive proof; // approach. Given the loop:; //; // if (B(0)) {; // do {; // I = PHI(0, I.INC); // I.INC = I + Step; // guard(G(I));; // } while (B(I));; // }; //; // where B(x) and G(x) are predicates that map integers to booleans, we want a; // loop invariant expression M such the following program has the same semantics; // as the above:; //; // if (B(0)) {; // do {; // I = PHI(0, I.INC); // I.INC = I + Step; // guard(G(0) && M);; // } while (B(I));; // }; //; // One solution for M is M = forall X . (G(X) && B(X)) => G(X + Step); //; // Informal proof that the transformation above is correct:; //; // By the definition of guards we can rewrite the guard condition to:; // G(I) && G(0) && M; //; // Let's prove that for",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPredication.cpp:1673,variab,variable,1673,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPredication.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPredication.cpp,1,['variab'],['variable']
Modifiability,"ariable of type 'ReduceData' on the calling lane,; /// b. its lane_id,; /// c. an offset relative to the current lane_id to generate a; /// remote_lane_id. The remote lane contains the second; /// variable of type 'ReduceData' that is to be reduced.; /// d. an algorithm version parameter determining which reduction; /// algorithm to use.; ///; /// 'shuffleReduceFn' retrieves data from the remote lane using; /// efficient GPU shuffle intrinsics and reduces, using the; /// algorithm specified by the 4th parameter, the two operands; /// element-wise. The result is written to the first operand.; ///; /// Different reduction algorithms are implemented in different; /// runtime functions, all calling 'shuffleReduceFn' to perform; /// the essential reduction step. Therefore, based on the 4th; /// parameter, this function behaves slightly differently to; /// cooperate with the runtime to ensure correctness under; /// different circumstances.; ///; /// 'InterWarpCpyFn' is a pointer to a function that transfers; /// reduced variables across warps. It tunnels, through CUDA; /// shared memory, the thread-private data of type 'ReduceData'; /// from lane 0 of each warp to a lane in the first warp.; /// 4. Call the OpenMP runtime on the GPU to reduce across teams.; /// The last team writes the global reduced value to memory.; ///; /// ret = __kmpc_nvptx_teams_reduce_nowait(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn,; /// scratchpadCopyFn, loadAndReduceFn); ///; /// 'scratchpadCopyFn' is a helper that stores reduced; /// data from the team master to a scratchpad array in; /// global memory.; ///; /// 'loadAndReduceFn' is a helper that loads data from; /// the scratchpad array and reduces it with the input; /// operand.; ///; /// These compiler generated functions hide address; /// calculation and alignment information from the runtime.; /// 5. if ret == 1:; /// The team master of the last team stores the reduced; /// result to the globals in memory.; /// foo += reduceDat",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:3556,variab,variables,3556,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['variab'],['variables']
Modifiability,"ariable-sized objects, the local objects can always be; // accessed using the SP, regardless whether they are aligned or not. (The; // alignment padding will be at the bottom of the stack (highest address),; // and so the offset with respect to the SP will be known at the compile-; // -time.); //; // The only complication occurs if there are both, local aligned objects, and; // dynamically allocated (variable-sized) objects. The alignment pad will be; // placed between the FP and the local objects, thus preventing the use of the; // FP to access the local objects. At the same time, the variable-sized objects; // will be between the SP and the local objects, thus introducing an unknown; // distance from the SP to the locals.; //; // To avoid this problem, a new register is created that holds the aligned; // address of the bottom of the stack, referred in the sources as AP (aligned; // pointer). The AP will be equal to ""FP-p"", where ""p"" is the smallest pad; // that aligns AP to the required boundary (a maximum of the alignments of; // all stack objects, fixed- and variable-sized). All local objects[1] will; // then use AP as the base pointer.; // [1] The exception is with ""fixed"" stack objects. ""Fixed"" stack objects get; // their name from being allocated at fixed locations on the stack, relative; // to the FP. In the presence of dynamic allocation and local alignment, such; // objects can only be accessed through the FP.; //; // Illustration of the AP:; // FP --+; // |; // ---------------+---------------------+-----+-----------------------++-+--; // Rest of the | Local stack objects | Pad | Fixed stack objects |LR|; // stack frame | (aligned) | | (CSR, spills, etc.) |FP|; // ---------------+---------------------+-----+-----------------+-----+--+--; // |<-- Multiple of the -->|; // stack alignment +-- AP; //; // The AP is set up at the beginning of the function. Since it is not a dedi-; // cated (reserved) register, it needs to be kept live throughout the function; // ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp:1978,variab,variable-sized,1978,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,1,['variab'],['variable-sized']
Modifiability,"ariables, when analyzing whether; // they are read or write-only).; //; // However, we only get to this code for weak-for-linkage values in one of; // two cases:; // 1) The prevailing copy is not in IR (it is in native code).; // 2) The prevailing copy in IR is not exported from its module.; // Additionally, at least for the new LTO API, case 2 will only happen if; // there is exactly one definition of the value (i.e. in exactly one; // module), as duplicate defs are result in the value being marked exported.; // Likely, users of the legacy LTO API are similar, however, currently there; // are llvm-lto based tests of the legacy LTO API that do not mark; // duplicate linkonce_odr copies as exported via the tool, so we need; // to handle that case below by checking the number of copies.; //; // Generally, we only want to internalize a weak-for-linker value in case; // 2, because in case 1 we cannot see how the value is used to know if it; // is read or write-only. We also don't want to bloat the binary with; // multiple internalized copies of non-prevailing linkonce/weak functions.; // Note if we don't internalize, we will convert non-prevailing copies to; // available_externally anyway, so that we drop them after inlining. The; // only reason to internalize such a function is if we indeed have a single; // copy, because internalizing it won't increase binary size, and enables; // use of inliner heuristics that are more aggressive in the face of a; // single call to a static (local). For variables, internalizing a read or; // write only variable can enable more aggressive optimization. However, we; // already perform this elsewhere in the ThinLTO backend handling for; // read or write-only variables (processGlobalForThinLTO).; //; // Therefore, only internalize linkonce/weak if there is a single copy, that; // is prevailing in this IR module. We can do so aggressively, without; // requiring the address to be insignificant, or that a variable be read or; // write-only.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp:1998,variab,variables,1998,interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTO.cpp,4,['variab'],"['variable', 'variables']"
Modifiability,"aset to be built.; /// This list describes the order in which these dimensions appear in the; /// ascii files to be read.; /// Each line in the ascii file should contain N white-space separated; /// tokens, with N the number of args in `varList`. Any text beyond; /// N tokens will be ignored with a warning message.; /// (NB: This is the default output of RooArgList::writeToStream()); ///; /// \param verbOpt `Q` be quiet, `D` debug mode (verbose); ///; /// \param commonPath All filenames in `fileList` will be prefixed with this optional path.; ///; /// \param indexCatName Interpret the data as belonging to category `indexCatName`.; /// When multiple files are read, a RooCategory arg in `varList` can; /// optionally be designated to hold information about the source file; /// of each data point. This feature is enabled by giving the name; /// of the (already existing) category variable in `indexCatName`.; ///; /// \attention If the value of any of the variables on a given line exceeds the; /// fit range associated with that dimension, the entire line will be; /// ignored. A warning message is printed in each case, unless the; /// `Q` verbose option is given. The number of events read and skipped; /// is always summarized at the end.; ///; /// If no further information is given a label name 'fileNNN' will; /// be assigned to each event, where NNN is the sequential number of; /// the source file in `fileList`.; ///; /// Alternatively, it is possible to override the default label names; /// of the index category by specifying them in the fileList string:; /// When instead of `file1.txt,file2.txt` the string; /// `file1.txt:FOO,file2.txt:BAR` is specified, a state named ""FOO""; /// is assigned to the index category for each event originating from; /// file1.txt. The labels FOO,BAR may be predefined in the index; /// category via defineType(), but don't have to be.; ///; /// Finally, one can also assign the same label to multiple files,; /// either by specifying `file1.txt:F",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:1367,variab,variables,1367,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['variab'],['variables']
Modifiability,asses; // =======================; //; // The Event class is a naive/simple example of an event structure.; // public:; // char fType[20];; // char *fEventName; //run+event number in character format; // Int_t fNtrack;; // Int_t fNseg;; // Int_t fNvertex;; // UInt_t fFlag;; // Double32_t fTemperature;; // Int_t fMeasures[10];; // Double32_t fMatrix[4][4];; // Double32_t *fClosestDistance; //[fNvertex] indexed array!; // EventHeader fEvtHdr;; // TClonesArray *fTracks;; // TRefArray *fHighPt; //array of High Pt tracks only; // TRefArray *fMuons; //array of Muon tracks only; // TRef fLastTrack; //pointer to last track; // TRef fHistoWeb; //EXEC:GetHistoWeb reference to an histogram in a TWebFile; // TH1F *fH;; // TBits fTriggerBits; //Bits triggered by this event.; //; // The EventHeader class has 3 data members (integers):; // public:; // Int_t fEvtNum;; // Int_t fRun;; // Int_t fDate;; //; //; // The Event data member fTracks is a pointer to a TClonesArray.; // It is an array of a variable number of tracks per event.; // Each element of the array is an object of class Track with the members:; // private:; // Float_t fPx; //X component of the momentum; // Float_t fPy; //Y component of the momentum; // Float_t fPz; //Z component of the momentum; // Float_t fRandom; //A random track quantity; // Float_t fMass2; //The mass square of this particle; // Float_t fBx; //X intercept at the vertex; // Float_t fBy; //Y intercept at the vertex; // Float_t fMeanCharge; //Mean charge deposition of all hits of this track; // Float_t fXfirst; //X coordinate of the first point; // Float_t fXlast; //X coordinate of the last point; // Float_t fYfirst; //Y coordinate of the first point; // Float_t fYlast; //Y coordinate of the last point; // Float_t fZfirst; //Z coordinate of the first point; // Float_t fZlast; //Z coordinate of the last point; // Double32_t fCharge; //Charge of this track; // Double32_t fVertex[3]; //Track vertex position; // Int_t fNpoint; //Number of points for this tr,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/Event.cxx:1148,variab,variable,1148,test/Event.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/Event.cxx,2,['variab'],['variable']
Modifiability,"at variable locations are live-through every loop, and then removing those; /// that are not through dataflow.; ///; /// Within LiveDebugValues: each variable location is represented by a; /// VarLoc object that identifies the source variable, the set of; /// machine-locations that currently describe it (a single location for; /// DBG_VALUE or multiple for DBG_VALUE_LIST), and the DBG_VALUE inst that; /// specifies the location. Each VarLoc is indexed in the (function-scope) \p; /// VarLocMap, giving each VarLoc a set of unique indexes, each of which; /// corresponds to one of the VarLoc's machine-locations and can be used to; /// lookup the VarLoc in the VarLocMap. Rather than operate directly on machine; /// locations, the dataflow analysis in this pass identifies locations by their; /// indices in the VarLocMap, meaning all the variable locations in a block can; /// be described by a sparse vector of VarLocMap indicies.; ///; /// All the storage for the dataflow analysis is local to the ExtendRanges; /// method and passed down to helper methods. ""OutLocs"" and ""InLocs"" record the; /// in and out lattice values for each block. ""OpenRanges"" maintains a list of; /// variable locations and, with the ""process"" method, evaluates the transfer; /// function of each block. ""flushPendingLocs"" installs debug value instructions; /// for each live-in location at the start of blocks, while ""Transfers"" records; /// transfers of values between machine-locations.; ///; /// We avoid explicitly representing the ""Unknown"" (\top) lattice value in the; /// implementation. Instead, unvisited blocks implicitly have all lattice; /// values set as ""Unknown"". After being visited, there will be path back to; /// the entry block where the lattice value is ""False"", and as the transfer; /// function cannot make new ""Unknown"" locations, there are no scenarios where; /// a block can have an ""Unknown"" location after being visited. Similarly, we; /// don't enumerate all possible variable locations ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:5203,Extend,ExtendRanges,5203,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['Extend'],['ExtendRanges']
Modifiability,"atement inside a loop ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Transform each threading path to effectively jump thread the DFA. For; // example, the CFG below could be transformed as follows, where the cloned; // blocks unconditionally branch to the next correct case based on what is; // identified in the analysis.; //; // sw.bb sw.bb; // / | \ / | \; // case1 case2 case3 case1 case2 case3; // \ | / | | |; // determinator det.2 det.3 det.1; // br sw.bb / | \; // sw.bb.2 sw.bb.3 sw.bb.1; // br case2 br case3 br case1§; //; // Definitions and Terminology:; //; // * Threading path:; // a list of basic blocks, the exit state, and the block that determines; // the next state, for which the following notation will be used:; // < path of BBs that form a cycle > [ state, determinator ]; //; // * Predictable switch:; // The switch variable is always a known constant so that all conditional; // jumps based on switch variable can be converted to unconditional jump.; //; // * Determinator:; // The basic block that determines the next state of the DFA.; //; // Representing the optimization in C-like pseudocode: the code pattern on the; // left could functionally be transformed to the right pattern if the switch; // condition is predictable.; //; // X = A goto A; // for (...) A:; // switch (X) ...; // case A goto B; // X = B B:; // case B ...; // X = C goto C; //; // The pass first checks that switch variable X is decided by the control flow; // path taken in the loop; for example, in case B, the next value of X is; // decided to be C. It then enumerates through all paths in the loop and labels; // the basic blocks where the next state is decided.; //; // Using this information it creates new paths that unconditio",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp:1155,variab,variable,1155,interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,2,['variab'],['variable']
Modifiability,"ation complexity; //; // Dynamic LDS implementation; // Dynamic LDS is lowered similarly to the ""table"" strategy above and uses the; // same intrinsic to identify which kernel is at the root of the dynamic call; // graph. This relies on the specified behaviour that all dynamic LDS variables; // alias one another, i.e. are at the same address, with respect to a given; // kernel. Therefore this pass creates new dynamic LDS variables for each kernel; // that allocates any dynamic LDS and builds a table of addresses out of those.; // The AMDGPUPromoteAlloca pass skips kernels that use dynamic LDS.; // The corresponding optimisation for ""kernel"" lowering where the table lookup; // is elided is not implemented.; //; //; // Implementation notes / limitations; // A single LDS global variable represents an instance per kernel that can reach; // said variables. This pass essentially specialises said variables per kernel.; // Handling ConstantExpr during the pass complicated this significantly so now; // all ConstantExpr uses of LDS variables are expanded to instructions. This; // may need amending when implementing non-undef initialisers.; //; // Lowering is split between this IR pass and the back end. This pass chooses; // where given variables should be allocated and marks them with metadata,; // MD_absolute_symbol. The backend places the variables in coincidentally the; // same location and raises a fatal error if something has gone awry. This works; // in practice because the only pass between this one and the backend that; // changes LDS is PromoteAlloca and the changes it makes do not conflict.; //; // Addresses are written to constant global arrays based on the same metadata.; //; // The backend lowers LDS variables in the order of traversal of the function.; // This is at odds with the deterministic layout required. The workaround is to; // allocate the fixed-address variables immediately upon starting the function; // where they can be placed as intended. This require",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:7520,variab,variables,7520,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,"ations, so CUDA; // compilers must infer the memory space of an address expression from; // type-qualified variables.; //; // LLVM IR uses non-zero (so-called) specific address spaces to represent memory; // spaces (e.g. addrspace(3) means shared memory). The Clang frontend; // places only type-qualified variables in specific address spaces, and then; // conservatively `addrspacecast`s each type-qualified variable to addrspace(0); // (so-called the generic address space) for other instructions to use.; //; // For example, the Clang translates the following CUDA code; // __shared__ float a[10];; // float v = a[i];; // to; // %0 = addrspacecast [10 x float] addrspace(3)* @a to [10 x float]*; // %1 = gep [10 x float], [10 x float]* %0, i64 0, i64 %i; // %v = load float, float* %1 ; emits ld.f32; // @a is in addrspace(3) since it's type-qualified, but its use from %1 is; // redirected to %0 (the generic version of @a).; //; // The optimization implemented in this file propagates specific address spaces; // from type-qualified variable declarations to its users. For example, it; // optimizes the above IR to; // %1 = gep [10 x float] addrspace(3)* @a, i64 0, i64 %i; // %v = load float addrspace(3)* %1 ; emits ld.shared.f32; // propagating the addrspace(3) from @a to %1. As the result, the NVPTX; // codegen is able to emit ld.shared.f32 for %v.; //; // Address space inference works in two steps. First, it uses a data-flow; // analysis to infer as many generic pointers as possible to point to only one; // specific address space. In the above example, it can prove that %1 only; // points to addrspace(3). This algorithm was published in; // CUDA: Compiling and optimizing for a GPU platform; // Chakrabarti, Grover, Aarts, Kong, Kudlur, Lin, Marathe, Murphy, Wang; // ICCS 2012; //; // Then, address space inference replaces all refinable generic pointers with; // equivalent specific pointers.; //; // The major challenge of implementing this optimization is handling PHINodes,; // ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp:1855,variab,variable,1855,interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InferAddressSpaces.cpp,1,['variab'],['variable']
Modifiability,"ay result if these conditions are not fulfilled; (see e.g. arXiv:0803.2711). ## Instantiation; A fit object is instantiated through; TFractionFitter* fit = new TFractionFitter(data, mc);; A number of basic checks (intended to ensure that the template histograms; represent the same ""kind"" of distribution as the data one) are carried out.; The TVirtualFitter object is then addressed and all fit parameters (the; template fractions) declared (initially unbounded). ## Applying constraints; Fit parameters can be constrained through. fit->Constrain(parameter #, lower bound, upper bound);. Setting lower bound = upper bound = 0 removes the constraint (a la Minuit);; however, a function. fit->Unconstrain(parameter #). is also provided to simplify this. ## Setting parameter values; The function. ROOT::Fit::Fitter* fitter = fit->GetFitter();. is provided for direct access to the ROOT::Fit::Fitter object. This allows to; set and fix parameter values, limits and set step sizes directly via. fitter->Config().ParSettings(parameter #).Set(const std::string &name, double value, double step, double lower, double upper);. ## Restricting the fit range; The fit range can be restricted through. fit->SetRangeX(first bin #, last bin #);; and freed using. fit->ReleaseRangeX();; For 2D histograms the Y range can be similarly restricted using. fit->SetRangeY(first bin #, last bin #);; fit->ReleaseRangeY();; and for 3D histograms also. fit->SetRangeZ(first bin #, last bin #);; fit->ReleaseRangeZ();; It is also possible to exclude individual bins from the fit through. fit->ExcludeBin(bin #);; where the given bin number is assumed to follow the TH1::GetBin() numbering.; Any bins excluded in this way can be included again using the corresponding. fit->IncludeBin(bin #);. ## Weights histograms; Weights histograms (for a motivation see the above publication) can be specified; for the individual MC sources through. fit->SetWeight(parameter #, pointer to weights histogram);; and unset by specifying a ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx:3324,Config,Config,3324,hist/hist/src/TFractionFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFractionFitter.cxx,1,['Config'],['Config']
Modifiability,"b) this copyright and permission notice appear in associated; * documentation, and; * (c) there is clear notice in each modified Data File or in the Software; * as well as in the documentation associated with the Data File(s) or; * Software that the data or software has been modified.; *; * THE DATA FILES AND SOFTWARE ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF; * ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE; * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT OF THIRD PARTY RIGHTS.; * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS; * NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL; * DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,; * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER; * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR; * PERFORMANCE OF THE DATA FILES OR SOFTWARE.; *; * Except as contained in this notice, the name of a copyright holder; * shall not be used in advertising or otherwise to promote the sale,; * use or other dealings in these Data Files or Software without prior; * written authorization of the copyright holder.; */; /* ---------------------------------------------------------------------. Conversions between UTF32, UTF-16, and UTF-8. Source code file.; Author: Mark E. Davis, 1994.; Rev History: Rick McGowan, fixes & updates May 2001.; Sept 2001: fixed const & error conditions per; mods suggested by S. Parent & A. Lillich.; June 2002: Tim Dodd added detection and handling of incomplete; source sequences, enhanced error detection, added casts; to eliminate compiler warnings.; July 2003: slight mods to back out aggressive FFFE detection.; Jan 2004: updated switches in from-UTF8 conversions.; Oct 2004: updated to use UNI_MAX_LEGAL_UTF32 in UTF-32 conversions. See the header file ""ConvertUTF.h"" for complete documentation. ------------------------------------------------------------------------ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp:2772,enhance,enhanced,2772,interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,1,['enhance'],['enhanced']
Modifiability,"b1, b2; // slot 1: b3, b4; // slot 2: b5; //; // Achieving this allocation is tricky, however, due to the way; // lifetime markers are inserted. Here is a simplified view of the; // control flow graph for the code above:; //; // +------ block 0 -------+; // 0| LIFETIME_START b1, b2 |; // 1| <test 'if' condition> |; // +-----------------------+; // ./ \.; // +------ block 1 -------+ +------ block 2 -------+; // 2| LIFETIME_START b3 | 5| LIFETIME_START b4, b5 |; // 3| <uses of b1, b3> | 6| <uses of b2, b4, b5> |; // 4| LIFETIME_END b3 | 7| LIFETIME_END b4, b5 |; // +-----------------------+ +-----------------------+; // \. /.; // +------ block 3 -------+; // 8| <cleanupcode> |; // 9| LIFETIME_END b1, b2 |; // 10| return |; // +-----------------------+; //; // If we create live intervals for the variables above strictly based; // on the lifetime markers, we'll get the set of intervals on the; // left. If we ignore the lifetime start markers and instead treat a; // variable's lifetime as beginning with the first reference to the; // var, then we get the intervals on the right.; //; // LIFETIME_START First Use; // b1: [0,9] [3,4] [8,9]; // b2: [0,9] [6,9]; // b3: [2,4] [3,4]; // b4: [5,7] [6,7]; // b5: [5,7] [6,7]; //; // For the intervals on the left, the best we can do is overlap two; // variables (b3 and b4, for example); this gives us a stack size of; // 4*1024 bytes, not ideal. When treating first-use as the start of a; // lifetime, we can additionally overlap b1 and b5, giving us a 3*1024; // byte stack (better).; //; // Degenerate Slots:; // -----------------; //; // Relying entirely on first-use of stack slots is problematic,; // however, due to the fact that optimizations can sometimes migrate; // uses of a variable outside of its lifetime start/end region. Here; // is an example:; //; // int bar() {; // char b1[1024], b2[1024];; // if (...) {; // <uses of b2>; // return y;; // } else {; // <uses of b1>; // while (...) {; // char b3[1024];; // <uses of b3>; // }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp:7207,variab,variable,7207,interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,1,['variab'],['variable']
Modifiability,"bc://pcroot.cern.ch:3306/test?MySQL"".; /// Driver argument specifies ODBC driver, which should be used for; /// connection. By default, MyODBC driver name is used.; /// The uid is the username and pw the password that should be used; /// for the connection.; /// If uid and pw are not specified (==0), user and passwd arguments from; /// URL will be used. Works only with MySQL ODBC, probably with PostrSQL; /// ODBC.; /// 2. Form ""odbcd://DRIVER={MyODBC};SERVER=pcroot.cern.ch;DATABASE=test;USER=user;PASSWORD=pass;OPTION=3;PORT=3306;""; /// This is a form, which is accepted by SQLDriverConnect function of ODBC.; /// Here some other arguments can be specified, which are not included; /// in standard URL format.; /// 3. Form ""odbcn://MySpecialConfig"", where MySpecialConfig is entry,; /// defined in user DSN (user data source). Here uid and pw should be; /// always specified.; ///; /// Configuring unixODBC under Linux: http://www.unixodbc.org/odbcinst.html; /// Remarks: for variants 1 & 2 it is enough to create/configure; /// odbcinst.ini file. For variant 3 file odbc.ini should be created.; /// Path to this files can be specified in environmental variables like; /// export ODBCINI=/home/my/unixODBC/etc/odbc.ini; /// export ODBCSYSINI=/home/my/unixODBC/etc; ///; /// Configuring MySQL ODBC under Windows.; /// Installing ODBC driver for MySQL is enough to use it under Windows.; /// Afer odbcd:// variant can be used with DRIVER={MySQL ODBC 3.51 Driver};; /// To configure User DSN, go into Start menu -> Settings ->; /// Control panel -> Administrative tools-> Data Sources (ODBC).; ///; /// To install Oracle ODBC driver for Windows, one should download; /// and install either complete Oracle client (~500 MB), or so-called; /// Instant Client Basic and Instant Client ODBC (~20 MB together).; /// Some remark about Instant Client:; /// 1) Two additional DLLs are required: mfc71.dll & msver71.dll; /// They can be found either in MS VC++ 7.1 Free Toolkit or; /// download from other In",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx:1257,config,configure,1257,sql/odbc/src/TODBCServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx,1,['config'],['configure']
Modifiability,"bclasses of the SCEV class.; // These classes are used to represent certain types of subexpressions that we; // can handle. We only create one SCEV of a particular shape, so; // pointer-comparisons for equality are legal.; //; // One important aspect of the SCEV objects is that they are never cyclic, even; // if there is a cycle in the dataflow for an expression (ie, a PHI node). If; // the PHI node is one of the idioms that we can represent (e.g., a polynomial; // recurrence) then we represent it directly as a recurrence node, otherwise we; // represent it as a SCEVUnknown node.; //; // In addition to being able to represent expressions of various types, we also; // have folders that are used to build the *canonical* representation for a; // particular expression. These folders are capable of using a variety of; // rewrite rules to simplify the expressions.; //; // Once the folders are defined, we can implement the more interesting; // higher-level code, such as the code that recognizes PHI nodes of various; // types, computes the execution count of a loop, etc.; //; // TODO: We should use these routines and value representations to implement; // dependence analysis!; //; //===----------------------------------------------------------------------===//; //; // There are several good references for the techniques used in this analysis.; //; // Chains of recurrences -- a method to expedite the evaluation; // of closed-form functions; // Olaf Bachmann, Paul S. Wang, Eugene V. Zima; //; // On computational properties of chains of recurrences; // Eugene V. Zima; //; // Symbolic Evaluation of Chains of Recurrences for Loop Optimization; // Robert A. van Engelen; //; // Efficient Symbolic Analysis for Optimizing Compilers; // Robert A. van Engelen; //; // Using the chains of recurrences algebra for data dependence testing and; // induction variable substitution; // MS Thesis, Johnie Birch; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:2555,variab,variable,2555,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['variab'],['variable']
Modifiability,"bda >= 0) {; auto& logstream = coutF(Integration) << ""When the PDF "" << GetName(); << "" was constructed, beta,zeta were 0, lambda<0 and all three were constant.\n""; << ""This allowed for analytic integration, but now, numeric integration would be required.\n""; << ""These parameters must either be kept constant, or be floating from the beginning. ""; << "" Terminating fit ...""; << std::endl;; RooArgSet vars;; vars.add(_beta.arg());; vars.add(_zeta.arg());; vars.add(_lambda.arg());; vars.printStream(logstream, vars.defaultPrintContents(nullptr), RooPrintable::kVerbose);; throw std::runtime_error(""RooHypatia2 cannot be integrated analytically since parameters changed."");; }. // The formulae to follow still use beta and zeta to facilitate comparisons with the; // evaluate function. Since beta and zeta are zero, all relevant terms will be disabled; // by defining these two constexpr:; constexpr double beta = 0.;; constexpr double cons1 = 1.;. if (code != 1) {; throw std::logic_error(""Trying to compute analytic integral with unknown configuration."");; }. const double asigma = _a * _sigma;; const double a2sigma = _a2 * _sigma;; const double d0 = _x.min(rangeName) - _mu;; const double d1 = _x.max(rangeName) - _mu;. double delta;; if (_lambda <= -1.0) {; delta = _sigma * sqrt(-2. + -2.*_lambda);; }; else {; delta = _sigma;; }; const double deltaSq = delta*delta;. if ((d0 > -asigma) && (d1 < a2sigma)) {; return stIntegral(d1, delta, _lambda) - stIntegral(d0, delta, _lambda);; }. if (d0 > a2sigma) {; const double phi = 1. + a2sigma*a2sigma/deltaSq;; const double k1 = cons1*std::pow(phi,_lambda-0.5);; const double k2 = beta*k1+ cons1*(_lambda-0.5)*std::pow(phi,_lambda-1.5)*2.*a2sigma/deltaSq;; const double B = -a2sigma - _n2*k1/k2;; const double A = k1*std::pow(B+a2sigma,_n2);; return A*(std::pow(B+d1,1-_n2)/(1-_n2) -std::pow(B+d0,1-_n2)/(1-_n2) ) ;. }. if (d1 < -asigma) {; const double phi = 1. + asigma*asigma/deltaSq;; const double k1 = cons1*std::pow(phi,_lambda-0.5);; const dou",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx:1479,config,configuration,1479,roofit/roofitmore/src/RooHypatia2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx,1,['config'],['configuration']
Modifiability,"bdir` of file `f.root` (creating file and sub-directory as needed).; ///; /// \attention In multi-thread runs (i.e. when EnableImplicitMT() has been called) threads will loop over clusters of; /// entries in an undefined order, so Snapshot will produce outputs in which (clusters of) entries will be shuffled with; /// respect to the input TTree. Using such ""shuffled"" TTrees as friends of the original trees would result in wrong; /// associations between entries in the main TTree and entries in the ""shuffled"" friend. Since v6.22, ROOT will; /// error out if such a ""shuffled"" TTree is used in a friendship.; ///; /// \note In case no events are written out (e.g. because no event passes all filters) the behavior of Snapshot in; /// single-thread and multi-thread runs is different: in single-thread runs, Snapshot will write out a TTree with; /// the specified name and zero entries; in multi-thread runs, no TTree object will be written out to disk.; ///; /// \note Snapshot will refuse to process columns with names of the form `#columnname`. These are special columns; /// made available by some data sources (e.g. RNTupleDS) that represent the size of column `columnname`, and are; /// not meant to be written out with that name (which is not a valid C++ variable name). Instead, go through an; /// Alias(): `df.Alias(""nbar"", ""#bar"").Snapshot(..., {""nbar""})`.; ///; /// ### Example invocations:; ///; /// ~~~{.cpp}; /// // without specifying template parameters (column types automatically deduced); /// df.Snapshot(""outputTree"", ""outputFile.root"", {""x"", ""y""});; ///; /// // specifying template parameters (""x"" is `int`, ""y"" is `float`); /// df.Snapshot<int, float>(""outputTree"", ""outputFile.root"", {""x"", ""y""});; /// ~~~; ///; /// To book a Snapshot without triggering the event loop, one needs to set the appropriate flag in; /// `RSnapshotOptions`:; /// ~~~{.cpp}; /// RSnapshotOptions opts;; /// opts.fLazy = true;; /// df.Snapshot(""outputTree"", ""outputFile.root"", {""x""}, opts);; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:3204,variab,variable,3204,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['variab'],['variable']
Modifiability,"bility of vectorization.; //; // The loop vectorizer combines consecutive loop iterations into a single; // 'wide' iteration. After this transformation the index is incremented; // by the SIMD vector width, and not by one.; //; // This pass has three parts:; // 1. The main loop pass that drives the different parts.; // 2. LoopVectorizationLegality - A unit that checks for the legality; // of the vectorization.; // 3. InnerLoopVectorizer - A unit that performs the actual; // widening of instructions.; // 4. LoopVectorizationCostModel - A unit that checks for the profitability; // of vectorization. It decides on the optimal vector width, which; // can be one, if vectorization is not profitable.; //; // There is a development effort going on to migrate loop vectorizer to the; // VPlan infrastructure and to introduce outer loop vectorization support (see; // docs/VectorizationPlan.rst and; // http://lists.llvm.org/pipermail/llvm-dev/2017-December/119523.html). For this; // purpose, we temporarily introduced the VPlan-native vectorization path: an; // alternative vectorization path that is natively implemented on top of the; // VPlan infrastructure. See EnableVPlanNativePath for enabling.; //; //===----------------------------------------------------------------------===//; //; // The reduction-variable vectorization is based on the paper:; // D. Nuzman and R. Henderson. Multi-platform Auto-vectorization.; //; // Variable uniformity checks are inspired by:; // Karrenberg, R. and Hack, S. Whole Function Vectorization.; //; // The interleaved access vectorization is based on the paper:; // Dorit Nuzman, Ira Rosen and Ayal Zaks. Auto-Vectorization of Interleaved; // Data for SIMD; //; // Other ideas/concepts are from:; // A. Zaks and D. Nuzman. Autovectorization in GCC-two years later.; //; // S. Maleki, Y. Gao, M. Garzaran, T. Wong and D. Padua. An Evaluation of; // Vectorizing Compilers.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:1945,variab,variable,1945,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,2,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,"ble is a control; variable. The expected distribution of this control variable, for; signal, is to be compared to the one extracted, for signal, from the; data sample. In order to be able to do so, one must be able to unfold; from the distribution of the whole data sample. The TSPlot method allows to reconstruct the distributions for; the control variable, independently for each of the various sources of; events, without making use of any <em>a priori</em> knowledge on <u>this</u>; variable. The aim is thus to use the knowledge available for the; discriminating variables to infer the behaviour of the individual; sources of events with respect to the control variable. TSPlot is optimal if the control variable is uncorrelated with the discriminating variables. A detail description of the formalism itself, called \f$\hbox{$_s$}{\cal P}lot\f$, is given; in [[1](https://arxiv.org/abs/physics/0402083)]. ### The method. The \f$\hbox{$_s$}{\cal P}lot\f$ technique is developed in the above context of a; maximum Likelihood method making use of discriminating variables. One considers a data sample in which are merged several species; of events. These species represent various signal components and; background components which all together account for the data sample.; The different terms of the log-Likelihood are:. - \f$N\f$ : the total number of events in the data sample,; - \f${\rm N}_{\rm s}\f$ : the number of species of events populating the data sample,; - \f$N_i\f$ : the number of events expected on the average for the \f$i^{\rm th}\f$ species,; - \f${\rm f}_i(y_e)\f$ : the value of the PDFs of the discriminating variables; \f$y\f$ for the\f$i^{th}\f$ species and for event\f$e\f$,; - \f$x\f$ : the set of control variables which, by definition, do not appear in; the expression of the Likelihood function \f${\cal L}\f$. The extended log-Likelihood reads:. \f[; {\cal L}=\sum_{e=1}^{N}\ln \Big\{ \sum_{i=1}^{{\rm N}_{\rm s}}N_i{\rm f}_i(y_e) \Big\} -\sum_{i=1}^{{\rm N}_{\rm s}",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:1796,variab,variables,1796,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variables']
Modifiability,"ble' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data type (to add autoload for example) and hence getting to; /// the data involves the implicit call to a C++ conversion operator.; /// This conversion is automatic in most case. However it is not invoked; /// in a few cases, in particular in variadic function (like printf).; /// So when using printf you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:3853,variab,variable,3853,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['variab'],['variable']
Modifiability,"bles for different; /// purposes:; /// * Loop user variable: The user-accessible variable with different value for; /// each iteration.; /// * Loop iteration variable: The variable used to identify a loop iteration;; /// for range-based for-statement, this is the hidden iterator '__begin'. For; /// other loops, it is identical to the loop user variable. Must be a; /// random-access iterator, pointer or integer type.; /// * Logical iteration counter: Normalized loop counter starting at 0 and; /// incrementing by one at each iteration. Allows abstracting over the type; /// of the loop iteration variable and is always an unsigned integer type; /// appropriate to represent the range of the loop iteration variable. Its; /// value corresponds to the logical iteration number in the OpenMP; /// specification.; ///; /// This AST node provides two captured statements:; /// * The distance function which computes the number of iterations.; /// * The loop user variable function that computes the loop user variable when; /// given a logical iteration number.; ///; /// These captured statements provide the link between C/C++ semantics and the; /// logical iteration counters used by the OpenMPIRBuilder which is; /// language-agnostic and therefore does not know e.g. how to advance a; /// random-access iterator. The OpenMPIRBuilder will use this information to; /// apply simd, workshare-loop, distribute, taskloop and loop directives to the; /// loop. For compatibility with the non-OpenMPIRBuilder codegen path, an; /// OMPCanonicalLoop can itself also be wrapped into the CapturedStmts of an; /// OMPLoopDirective and skipped when searching for the associated syntactical; /// loop.; ///; /// Example:; /// <code>; /// std::vector<std::string> Container{1,2,3};; /// for (std::string Str : Container); /// Body(Str);; /// </code>; /// which is syntactic sugar for approximately:; /// <code>; /// auto &&__range = Container;; /// auto __begin = std::begin(__range);; /// auto __end = std::end(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:3268,variab,variable,3268,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,2,['variab'],['variable']
Modifiability,"bles....| LLVM chooses X19); // |.(VLAs)............................| (size of this area is unknown at; // |...................................| compile time); // |-----------------------------------| <- sp; // | | Lower address; //; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are both VLAs and local; // variables with more-than-default alignment requirements.; // * A frame pointer is definitely needed when there are local variables with; // more-than-default alignment requirements.; //; // For Darwin platforms the frame-record (fp, lr) is stored at the top of the; // callee-saved area, since the unwind encoding does not allow for encoding; // this dynamically and existing tools depend on this layout. For other; // platforms, the frame-record is stored at the bottom of the (gpr) callee-saved; // area to allow SVE stack objects (allocated directly below the callee-saves,; // if available) to be accessed directly from the framepointer.; // The SVE spill/fill instructions have VL-scaled addressing modes such; // as:; // ldr z8, [fp, #-7 mul vl]; // For SVE the size of the vector length (VL) is not known at compile-time, so; // '#-7 mul vl' is an offset that can only be evaluated at runtime. With this; // layout, we don't need to add an unscaled offset to the framepointer before; // accessing the SVE object in the frame.; //; // In some cases when a base pointer is not strictly needed, it is generated; // ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:3500,variab,variables,3500,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['variab'],['variables']
Modifiability,"body, after the prologue is run. However, it's depicted; // here for completeness.; //; // | | Higher address; // |----------------------------------------------|; // | Parameter area for this function |; // |----------------------------------------------|; // | Register save area (RSA) for this function |; // |----------------------------------------------|; // | Return address for this function |; // |----------------------------------------------|; // | Frame pointer for this function |; // |----------------------------------------------| <- fp(=old sp); // |.empty.space.to.make.part.below.aligned.in....|; // |.case.it.needs.more.than.the.standard.16-byte.| (size of this area is; // |.alignment....................................| unknown at compile time); // |----------------------------------------------|; // | Local variables of fixed size including spill|; // | slots |; // |----------------------------------------------| <- bp(not defined by ABI,; // |.variable-sized.local.variables.(VLAs)........| LLVM chooses SX17); // |..............................................| (size of this area is; // |..............................................| unknown at compile time); // |----------------------------------------------| <- stack top (returned by; // | Parameter area for callee | alloca); // |----------------------------------------------|; // | Register save area (RSA) for callee |; // |----------------------------------------------|; // | Return address for callee |; // |----------------------------------------------|; // | Frame pointer for callee |; // |----------------------------------------------| <- sp; // | | Lower address; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to b",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp:2788,variab,variables,2788,interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,1,['variab'],['variables']
Modifiability,"both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected.""; R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz; ""Data Analysis Techniques for High-Energy Physics"", 2nd edition. What does this algorithm do?; It computes a highly robust estimator of multivariate location and scatter.; Then, it takes those estimates to compute robust distances of all the; data vectors. Those with large robust distances are considered outliers.; Robust distances can then be plotted for better visualization of the data. How does this algorithm do it?; The MCD objective is to find h observations(out of n) whose classical; covariance matrix has the lowest determinant. The MCD estimator of location; is then the average of those h points and the MCD estimate of scatter; is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2; so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers.; The algorithm also allows for exact fit situations - that is, when h or more; observations lie on a hyperplane. Then the algorithm still yields the MCD location T; and scatter matrix S, the latter being singular as it should be. From (T,S) the; program then computes the equation of the hyperplane. How can this algorithm be used?; In any case, when contamination of data is suspected, that might influence; the classical estimates.; Also, robust estimation of location and scatter is a tool to robustify; other multivariate techniques such as, for example, principal-component analysis; and discriminant analysis. Technical details of the algorithm:. 1. The default h = (n+nvariables+1)/2, but the user may choose any integer h with; (n+nvariables+1)/2<=h<=n. The program then reports the MCD's breakdown value; (n-h+1)/n. If you are sure that the dataset contains less than 25% contamination; which is usually the case, a good comp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx:2313,variab,variables,2313,math/physics/src/TRobustEstimator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx,1,['variab'],['variables']
Modifiability,"bservation \f$\mathbf{x}\f$ within the domain of; the parameterization, using the result from the Principal Component; Analysis.; 2. Determine \f$\mathbf{P}^\prime\f$ as before.; 3. Determine \f$\mathbf{x}^\prime\f$ as before.; 4. Use the result of the fit to determine \f$\mathbf{Q}^\prime\f$.; 5. Transform back to \f$\mathbf{P}\f$ from \f$\mathbf{Q}^\prime\f$, using; the result from the Principal Component Analysis. ## Testing the parameterization; The class also provides functionality for testing the, over the; training sample, found parameterization (TMultiDimFit::Fit). This is done by passing; the class a test sample of \f$ M_t\f$ tuples of the form; \f$(\mathbf{x}_{t,j},D_{t,j}, E_{t,j})\f$, where \f$\mathbf{x}_{t,j}\f$ are the independent; variables, \f$ D_{t,j}\f$ the known, dependent quantity, and \f$ E_{t,j}\f$ is; the square error in \f$ D_{t,j}\f$ (TMultiDimFit::AddTestRow). The parameterization is then evaluated at every \f$\mathbf{x}_t\f$ in the; test sample, and; \f[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mathbf{x}_{t,j}\right)\right)^2; \f]; is evaluated. The relative error over the test sample; \f[; R_t = \frac{S_t}{\sum_{j=1}^{M_t} D_{t,j}^2}; \f]; should not be to low or high compared to \f$ R\f$ from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representative of; the problem. A large difference in the reduced \f$ \chi^2\f$ over the two; samples indicate an over fit, and the maximum number of terms in the; parameterisation should be reduced. It's possible to use [4] to further improve the fit, using the test sample. Christian Holm. ## Bibliography; - <a name=""bevington""></a> Philip R. Bevington and D. Keith Robinson. *Data Reduction and Error Analysis for; the Physical Sciences*. McGraw-Hill, 2 edition, 1992.; - <a name=""mudifi""></a> R. Brun et al. *Long writeup DD/75-23*, CERN, 1980.; - Gene H. Golub and Charles F. van Loan. *Matrix Compu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:16703,parameteriz,parameterization,16703,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['parameteriz'],['parameterization']
Modifiability,"btained from inverting the cumulative posterior distribution.; This calculator works then only for model with a single parameter of interest.; The model can instead have several nuisance parameters which are integrated (marginalized) in the computation of the posterior function.; The integration and normalization of the posterior is computed using numerical integration methods provided by ROOT.; See the MCMCCalculator for model with multiple parameters of interest. The interface allows one to construct the class by passing the data set, probability density function for the model, the prior; functions and then the parameter of interest to scan. The nuisance parameters can also be passed to be marginalized when; computing the posterior. Alternatively, the class can be constructed by passing the data and the ModelConfig containing; all the needed information (model pdf, prior pdf, parameter of interest, nuisance parameters, etc..). After configuring the calculator, one only needs to ask GetInterval(), which; will return an SimpleInterval object. By default the extreme of the integral are obtained by inverting directly the; cumulative posterior distribution. By using the method SetScanOfPosterior(nbins) the interval is then obtained by; scanning the posterior function in the given number of points. The first method is in general faster but it requires an; integration one extra dimension ( in the poi in addition to the nuisance parameters), therefore in some case it can be; less robust. The class can also return the posterior function (method GetPosteriorFunction) or if needed the normalized; posterior function (the posterior pdf) (method GetPosteriorPdf). A posterior plot is also obtained using; the GetPosteriorPlot method. The class allows to use different integration methods for integrating in (marginalizing) the nuisances and in the poi. All the numerical; integration methods of ROOT can be used via the method SetIntegrationType (see more in the documentation of; thi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:1894,config,configuring,1894,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['config'],['configuring']
Modifiability,"bug-info is marked out by ""-"" characters and a few; other special characters (+:=) where I want to highlight what's going on. Dest; |; this-block: A----A----A ====A----A----A----A---A---A; Src-block ++++B---B---B---B:::C; | |; First Last. The splice method is going to take all the instructions from First up to; (but not including) Last and insert them in _front_ of Dest, forming one; long list. All the DPValues attached to instructions _between_ First and; Last need no maintenence. However, we have to do special things with the; DPValues marked with the +:= characters. We only have three positions:; should the ""+"" DPValues be transferred, and if so to where? Do we move the; "":"" DPValues? Would they go in front of the ""="" DPValues, or should the ""=""; DPValues go before ""+"" DPValues?. We're told which way it should be by the bits carried in the iterators. The; ""Head"" bit indicates whether the specified position is supposed to be at the; front of the attached DPValues (true) or not (false). The Tail bit is true; on the other end of a range: is the range intended to include DPValues up to; the end (false) or not (true). FIXME: the tail bit doesn't need to be distinct from the head bit, we could; combine them. Here are some examples of different configurations:. Dest.Head = true, First.Head = true, Last.Tail = false. this-block: A----A----A++++B---B---B---B:::====A----A----A----A---A---A; | |; First Dest. Wheras if we didn't want to read from the Src list,. Dest.Head = true, First.Head = false, Last.Tail = false. this-block: A----A----AB---B---B---B:::====A----A----A----A---A---A; | |; First Dest. Or if we didn't want to insert at the head of Dest:. Dest.Head = false, First.Head = false, Last.Tail = false. this-block: A----A----A====B---B---B---B:::A----A----A----A---A---A; | |; First Dest. Tests for these various configurations can be found in the unit test file; BasicBlockDbgInfoTest.cpp. */; // Detach the marker at Dest -- this lets us move the ""===="" DPValues around.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/BasicBlock.cpp:1443,config,configurations,1443,interpreter/llvm-project/llvm/lib/IR/BasicBlock.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/BasicBlock.cpp,2,['config'],['configurations']
Modifiability,"bugVariable object. The; /// availability of an expression begins when a DBG_VALUE instruction specifies; /// the location of a DebugVariable, and continues until that location is; /// clobbered or re-specified by a different DBG_VALUE for the same; /// DebugVariable.; ///; /// The output of LiveDebugValues is additional DBG_VALUE instructions,; /// placed to extend variable locations as far they're available. This file; /// and the VarLocBasedLDV class is an implementation that explicitly tracks; /// locations, using the VarLoc class.; ///; /// The canonical ""available expressions"" problem doesn't have expression; /// clobbering, instead when a variable is re-assigned, any expressions using; /// that variable get invalidated. LiveDebugValues can map onto ""available; /// expressions"" by having every register represented by a variable, which is; /// used in an expression that becomes available at a DBG_VALUE instruction.; /// When the register is clobbered, its variable is effectively reassigned, and; /// expressions computed from it become unavailable. A similar construct is; /// needed when a DebugVariable has its location re-specified, to invalidate; /// all other locations for that DebugVariable.; ///; /// Using the dataflow analysis to compute the available expressions, we create; /// a DBG_VALUE at the beginning of each block where the expression is; /// live-in. This propagates variable locations into every basic block where; /// the location can be determined, rather than only having DBG_VALUEs in blocks; /// where locations are specified due to an assignment or some optimization.; /// Movements of values between registers and spill slots are annotated with; /// DBG_VALUEs too to track variable values bewteen locations. All this allows; /// DbgEntityHistoryCalculator to focus on only the locations within individual; /// blocks, facilitating testing and improving modularity.; ///; /// We follow an optimisic dataflow approach, with this lattice:; ///; /// \verba",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:1740,variab,variable,1740,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"builtin, the; // constant nature of the argument is not passed through.; //; // The _Generic approach can be made to work with enough effort, but it takes a; // lot of machinery, because of the design feature of _Generic that even the; // untaken branches are required to pass all front-end validity checks such as; // type-correctness. You can work around that by nesting further _Generics all; // over the place to coerce things to the right type in untaken branches, but; // what you get out is complicated, hard to guarantee its correctness, and; // worst of all, gives _completely unreadable_ error messages if the user gets; // the types wrong for an intrinsic call.; //; // Therefore, my strategy is to introduce a new __attribute__ that allows a; // function to be mapped to a clang builtin even though it doesn't have the; // same name, and then declare all the user-facing MVE function names with that; // attribute, mapping each one directly to the clang builtin. And the; // polymorphic ones have __attribute__((overloadable)) as well. So once the; // compiler has resolved the overload, it knows the internal builtin ID of the; // selected function, and can check the immediate arguments against that; and; // if the user gets the types wrong in a call to a polymorphic intrinsic, they; // get a completely clear error message showing all the declarations of that; // function in the header file and explaining why each one doesn't fit their; // call.; //; // The downside of this is that if every clang builtin has to correspond; // exactly to a user-facing ACLE intrinsic, then you can't save work in the; // frontend by doing it in the header file: CGBuiltin.cpp has to do the entire; // job of converting an ACLE intrinsic call into LLVM IR. So the Tablegen; // description for an MVE intrinsic has to contain a full description of the; // sequence of IRBuilder calls that clang will need to make.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:2558,polymorphi,polymorphic,2558,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,2,['polymorphi'],['polymorphic']
Modifiability,"by grouping them in a per-kernel; // struct instance. This duplicates the variables, accurately modelling their; // aliasing properties relative to a single global representation. It also; // permits control over alignment via padding.; //; // Uses from functions are more complicated and the primary purpose of this; // IR pass. Several different lowering are chosen between to meet requirements; // to avoid allocating any LDS where it is not necessary, as that impacts; // occupancy and may fail the compilation, while not imposing overhead on a; // feature whose primary advantage over global memory is performance. The basic; // design goal is to avoid one kernel imposing overhead on another.; //; // Implementation.; //; // LDS variables with constant annotation or non-undef initializer are passed; // through unchanged for simplification or error diagnostics in later passes.; // Non-undef initializers are not yet implemented for LDS.; //; // LDS variables that are always allocated at the same address can be found; // by lookup at that address. Otherwise runtime information/cost is required.; //; // The simplest strategy possible is to group all LDS variables in a single; // struct and allocate that struct in every kernel such that the original; // variables are always at the same address. LDS is however a limited resource; // so this strategy is unusable in practice. It is not implemented here.; //; // Strategy | Precise allocation | Zero runtime cost | General purpose |; // --------+--------------------+-------------------+-----------------+; // Module | No | Yes | Yes |; // Table | Yes | No | Yes |; // Kernel | Yes | Yes | No |; // Hybrid | Yes | Partial | Yes |; //; // ""Module"" spends LDS memory to save cycles. ""Table"" spends cycles and global; // memory to save LDS. ""Kernel"" is as fast as kernel allocation but only works; // for variables that are known reachable from a single kernel. ""Hybrid"" picks; // between all three. When forced to choose between LDS and cycle",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:2787,variab,variables,2787,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,"cale the normalized pdf by the number of events predicted by the model instead of scaling by the total data weight.; /// This imposes a constraint on the predicted number of events analogous to the extended term in a likelihood fit.; /// - If you don't pass this command, an extended fit will be done by default if the pdf makes a prediction on the number of events; /// (in RooFit jargon, ""if the pdf can be extended"").; /// - Passing `Extended(true)` when the the pdf makes no prediction on the expected number of events will result in error messages,; /// and the chi2 will fall back to the total data weight to scale the normalized pdf.; /// - There are cases where the fit **must** be done in extended mode. This happens for example when you have a RooAddPdf; /// where the coefficients represent component yields. If the fit is not extended, these coefficients will not be; /// well-defined, as the RooAddPdf always normalizes itself. If you pass `Extended(false)` in such a case, an error will be; /// printed and you'll most likely get garbage results.; /// <tr><td> `Range(const char* name)` <td> Fit only data inside range with given name; /// <tr><td> `Range(double lo, double hi)` <td> Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; /// Multiple comma separated range names can be specified.; /// <tr><td> `NumCPU(int num)` <td> Parallelize NLL calculation on num CPUs; /// <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization (on by default); /// <tr><td> `IntegrateBins()` <td> Integrate PDF within each bin. This sets the desired precision.; ///; /// <tr><th> <th> Options to control flow of fit procedure; /// <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; /// <tr><td> `Hesse(bool flag)` <td> Flag controls if HESSE is run after MIGRAD, on by default; /// <tr><td> `Minos(bool flag)` <td> Flag controls if MINOS is run after HESSE, on by default; /// <tr><td>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1400,Extend,Extended,1400,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['Extend'],['Extended']
Modifiability,"ce (default); - Multiple inheritance; - Composition; - References by data members and member functions; - References from Code. The list of classes is specified:; - either in the TClassTree constructor as a second argument; - or the parameter to TClassTree::Draw. Note that the ClassTree viewer can also be started from the canvas; pull down menu ""Classes"". In the list of classes, class names are separated by a "":""; wildcarding is supported.; The following formats are supported, eg in TClassTree::Draw; 1. `Draw(""ClassA"")`; - Draw inheritance tree for ClassA; - Show all classes referenced by ClassA; 2. `Draw(""*ClassB"")`; - Draw inheritance tree for ClassB; and all the classes deriving from ClassB; 3. `Draw("">ClassC"")`; - Draw inheritance tree for ClassC; - Show classes referencing ClassC; 4. `Draw(""ClassD<"")`; - Draw inheritance tree for ClassD; - Show classes referenced by ClassD; - Show all classes referencing ClassD; 5. `Draw(""Cla*"")`; - Draw inheritance tree for all classes with name starting with ""Cla""; - Show classes referenced by these classes; 6. `Draw(""ClassA:ClassB<"")`; - Draw inheritance tree for ClassA; - Show all classes referenced by ClassA; - Draw inheritance tree for ClassB; - Show classes referenced by ClassB; - Show all classes referencing ClassB. Example: `Draw(""TTree<"")`; - Draw inheritance tree for the Root class TTree; - Show all classes referenced by TTree; - Show all classes using TTree. By default, only direct inheritance is drawn.; Use TClassTree::ShowLinks(option) to show additional references; - option = ""H"" to show links to embedded classes; - option = ""M"" to show multiple inheritance; - option = ""R"" to show pointers to other classes from data members; - option = ""C"" to show classes used by the code(implementation) of a class. The following picture is produced directly by:; ~~~ {.cpp}; TClassTree ct(""ct"",""*TH1""); ~~~; It shows all the classes derived from the base class TH1. \image html gpad_classtree1.png. The TClassTree class uses the ser",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:1115,inherit,inheritance,1115,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,1,['inherit'],['inheritance']
Modifiability,"ce an; /// OpenMP team is mapped to a CUDA threadblock and OpenMP threads; /// within a team are mapped to CUDA threads within a threadblock.; /// Our goal is to efficiently aggregate values across all OpenMP; /// threads such that:; ///; /// - the compiler and runtime are logically concise, and; /// - the reduction is performed efficiently in a hierarchical; /// manner as follows: within OpenMP threads in the same warp,; /// across warps in a threadblock, and finally across teams on; /// the NVPTX device.; ///; /// Introduction to Decoupling; ///; /// We would like to decouple the compiler and the runtime so that the; /// latter is ignorant of the reduction variables (number, data types); /// and the reduction operators. This allows a simpler interface; /// and implementation while still attaining good performance.; ///; /// Pseudocode for the aforementioned OpenMP program generated by the; /// compiler is as follows:; ///; /// 1. Create private copies of reduction variables on each OpenMP; /// thread: 'foo_private', 'bar_private'; /// 2. Each OpenMP thread reduces the chunk of 'A' and 'B' assigned; /// to it and writes the result in 'foo_private' and 'bar_private'; /// respectively.; /// 3. Call the OpenMP runtime on the GPU to reduce within a team; /// and store the result on the team master:; ///; /// __kmpc_nvptx_parallel_reduce_nowait_v2(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn); ///; /// where:; /// struct ReduceData {; /// double *foo;; /// double *bar;; /// } reduceData; /// reduceData.foo = &foo_private; /// reduceData.bar = &bar_private; ///; /// 'shuffleReduceFn' and 'interWarpCpyFn' are pointers to two; /// auxiliary functions generated by the compiler that operate on; /// variables of type 'ReduceData'. They aid the runtime perform; /// algorithmic steps in a data agnostic manner.; ///; /// 'shuffleReduceFn' is a pointer to a function that reduces data; /// of type 'ReduceData' across two OpenMP threads (lanes) in the; /// same warp. It ta",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:1455,variab,variables,1455,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['variab'],['variables']
Modifiability,"ce of the imported histogram.; /// <tr><td> Import(const char*, RooAbsData&); /// <td> Import a RooDataSet or RooDataHist to be associated with the given state name of the index category; /// specified in Index(). If the given state name is not yet defined in the index; /// category it will be added on the fly. The import command can be specified multiple times.; /// <tr><td> Link(const char*, RooDataSet&) <td> Link contents of supplied RooDataSet to this dataset for given index category state name.; /// In this mode, no data is copied and the linked dataset must be remain live for the duration; /// of this dataset. Note that link is active for both reading and writing, so modifications; /// to the aggregate dataset will also modify its components. Link() and Import() are mutually exclusive.; /// <tr><td> OwnLinked() <td> Take ownership of all linked datasets; /// <tr><td> Import(std::map<string,RooAbsData*>&) <td> As above, but allows specification of many imports in a single operation; /// <tr><td> Link(std::map<string,RooDataSet*>&) <td> As above, but allows specification of many links in a single operation; /// <tr><td> Cut(const char*) <br>; /// Cut(RooFormulaVar&); /// <td> Apply the given cut specification when importing data; /// <tr><td> CutRange(const char*) <td> Only accept events in the observable range with the given name; /// <tr><td> WeightVar(const char*) <br>; /// WeightVar(const RooAbsArg&); /// <td> Interpret the given variable as event weight rather than as observable; /// <tr><td> StoreError(const RooArgSet&) <td> Store symmetric error along with value for given subset of observables; /// <tr><td> StoreAsymError(const RooArgSet&) <td> Store asymmetric error along with value for given subset of observables; /// <tr><td> `GlobalObservables(const RooArgSet&)` <td> Define the set of global observables to be stored in this RooDataSet.; /// A snapshot of the passed RooArgSet is stored, meaning the values wont't change unexpectedly.; /// </table>; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:2445,variab,variable,2445,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['variab'],['variable']
Modifiability,"ce within a team; /// and store the result on the team master:; ///; /// __kmpc_nvptx_parallel_reduce_nowait_v2(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn); ///; /// where:; /// struct ReduceData {; /// double *foo;; /// double *bar;; /// } reduceData; /// reduceData.foo = &foo_private; /// reduceData.bar = &bar_private; ///; /// 'shuffleReduceFn' and 'interWarpCpyFn' are pointers to two; /// auxiliary functions generated by the compiler that operate on; /// variables of type 'ReduceData'. They aid the runtime perform; /// algorithmic steps in a data agnostic manner.; ///; /// 'shuffleReduceFn' is a pointer to a function that reduces data; /// of type 'ReduceData' across two OpenMP threads (lanes) in the; /// same warp. It takes the following arguments as input:; ///; /// a. variable of type 'ReduceData' on the calling lane,; /// b. its lane_id,; /// c. an offset relative to the current lane_id to generate a; /// remote_lane_id. The remote lane contains the second; /// variable of type 'ReduceData' that is to be reduced.; /// d. an algorithm version parameter determining which reduction; /// algorithm to use.; ///; /// 'shuffleReduceFn' retrieves data from the remote lane using; /// efficient GPU shuffle intrinsics and reduces, using the; /// algorithm specified by the 4th parameter, the two operands; /// element-wise. The result is written to the first operand.; ///; /// Different reduction algorithms are implemented in different; /// runtime functions, all calling 'shuffleReduceFn' to perform; /// the essential reduction step. Therefore, based on the 4th; /// parameter, this function behaves slightly differently to; /// cooperate with the runtime to ensure correctness under; /// different circumstances.; ///; /// 'InterWarpCpyFn' is a pointer to a function that transfers; /// reduced variables across warps. It tunnels, through CUDA; /// shared memory, the thread-private data of type 'ReduceData'; /// from lane 0 of each warp to a lane in the first warp.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:2723,variab,variable,2723,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['variab'],['variable']
Modifiability,"ced RModel object.; /// Keras models can have layers like Dense and Conv which have activation; /// function as an attribute. Function first searches if layer object is among; /// the ones which don't have activation attribute and then calls the respective; /// preparation function to get the ROperator object, which is then added; /// into the RModel object. If passed layer is among the ones which may have activation; /// attribute, then it checks for the activation attribute, if present then first adds; /// the primary operator into the RModel object, and then adds the operator for the; /// activation function with appropriate changes in the names of input and output; /// tensors for both of them.; /// Example of such layers is the Dense Layer. For a dense layer with input tensor name; /// dense2BiasAdd0 and output tensor name dense3Relu0 with relu as activation attribute; /// will be transformed into a ROperator_Gemm with input tensor name dense2BiasAdd0; /// & output tensor name dense3Dense (layerName+layerType), and a subsequent; /// ROperator_Relu with input tensor name as dense3Dense and output tensor name; /// as dense3Relu0.; ///; /// For developing new preparatory functions for supporting Keras layers in future,; /// all one needs is to extract the required properties and attributes from the fLayer; /// dictionary which contains all the information about any Keras layer and after; /// any required transformations, these are passed for instantiating the ROperator; /// object.; ///; /// The fLayer dictionary which holds all the information about a Keras layer has; /// following structure:-; ///; /// dict fLayer { 'layerType' : Type of the Keras layer; /// 'layerAttributes' : Attributes of the keras layer as returned by layer.get_config(); /// 'layerInput' : List of names of input tensors; /// 'layerOutput' : List of names of output tensors; /// 'layerDType' : Data-type of the Keras layer; /// 'layerWeight' : List of weight tensor names of Keras layers; /// }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx:1641,layers,layers,1641,tmva/pymva/src/RModelParser_Keras.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx,2,['layers'],['layers']
Modifiability,"cense-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the RefCountedBase, ThreadSafeRefCountedBase, and; /// IntrusiveRefCntPtr classes.; ///; /// IntrusiveRefCntPtr is a smart pointer to an object which maintains a; /// reference count. (ThreadSafe)RefCountedBase is a mixin class that adds a; /// refcount member variable and methods for updating the refcount. An object; /// that inherits from (ThreadSafe)RefCountedBase deletes itself when its; /// refcount hits zero.; ///; /// For example:; ///; /// ```; /// class MyClass : public RefCountedBase<MyClass> {};; ///; /// void foo() {; /// // Constructing an IntrusiveRefCntPtr increases the pointee's refcount; /// // by 1 (from 0 in this case).; /// IntrusiveRefCntPtr<MyClass> Ptr1(new MyClass());; ///; /// // Copying an IntrusiveRefCntPtr increases the pointee's refcount by 1.; /// IntrusiveRefCntPtr<MyClass> Ptr2(Ptr1);; ///; /// // Constructing an IntrusiveRefCntPtr has no effect on the object's; /// // refcount. After a move, the moved-from pointer is null.; /// IntrusiveRefCntPtr<MyClass> Ptr3(std::move(Ptr1));; /// assert(Ptr1 == nullptr);; ///; /// // Clearing an IntrusiveRefCntPtr decreases the pointee's refcount by 1.; /// Ptr2.reset();; ///; /// // The object deletes itself when we return from the function, because; /// // Ptr3's destructor decrements its refcount to 0.; /// }; /// ```; ///; /// You can use IntrusiveRefCntPtr with isa<T>(), dyn_cast<T>(), etc.:; ///; /// ```; /// IntrusiveRefCntPtr<MyClass> Ptr(new MyClass());; /// OtherClass *Other = dyn_cast<OtherClass>(Ptr); // Ptr.get() not required; /// ```; ///; /// IntrusiveRefCntPtr works with any class that; ///; /// - inherits from (ThreadSafe)RefCountedBase,; /// - has Retain() and Release() methods, or; /// - specializes IntrusiveRefCntPtrInfo.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h:2023,inherit,inherits,2023,interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntrusiveRefCntPtr.h,1,['inherit'],['inherits']
Modifiability,"ces the chunk of 'A' and 'B' assigned; /// to it and writes the result in 'foo_private' and 'bar_private'; /// respectively.; /// 3. Call the OpenMP runtime on the GPU to reduce within a team; /// and store the result on the team master:; ///; /// __kmpc_nvptx_parallel_reduce_nowait_v2(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn); ///; /// where:; /// struct ReduceData {; /// double *foo;; /// double *bar;; /// } reduceData; /// reduceData.foo = &foo_private; /// reduceData.bar = &bar_private; ///; /// 'shuffleReduceFn' and 'interWarpCpyFn' are pointers to two; /// auxiliary functions generated by the compiler that operate on; /// variables of type 'ReduceData'. They aid the runtime perform; /// algorithmic steps in a data agnostic manner.; ///; /// 'shuffleReduceFn' is a pointer to a function that reduces data; /// of type 'ReduceData' across two OpenMP threads (lanes) in the; /// same warp. It takes the following arguments as input:; ///; /// a. variable of type 'ReduceData' on the calling lane,; /// b. its lane_id,; /// c. an offset relative to the current lane_id to generate a; /// remote_lane_id. The remote lane contains the second; /// variable of type 'ReduceData' that is to be reduced.; /// d. an algorithm version parameter determining which reduction; /// algorithm to use.; ///; /// 'shuffleReduceFn' retrieves data from the remote lane using; /// efficient GPU shuffle intrinsics and reduces, using the; /// algorithm specified by the 4th parameter, the two operands; /// element-wise. The result is written to the first operand.; ///; /// Different reduction algorithms are implemented in different; /// runtime functions, all calling 'shuffleReduceFn' to perform; /// the essential reduction step. Therefore, based on the 4th; /// parameter, this function behaves slightly differently to; /// cooperate with the runtime to ensure correctness under; /// different circumstances.; ///; /// 'InterWarpCpyFn' is a pointer to a function that transfers; /// reduce",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:2525,variab,variable,2525,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['variab'],['variable']
Modifiability,"ch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test error will be computed); #### 3. Define general DNN options; # We define the general DNN options concatenating in the final string the previously defined layout and training strategy.; # Note we use the ``"":""`` separator to separate the different higher level options, as in the other TMVA methods.; # In addition to input layout, batch layout and training strategy we add now:; # - Type of Loss function (e.g. CROSSENTROPY); # - Weight Initizalization (e.g XAVIER, XAVIERUNIFORM, NORMAL ); # - Variable Transformation; # - Type of Architecture (e.g. CPU, GPU, Standard); # We can then book the DL method using the built option string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:2497,Variab,Variable,2497,tutorials/tmva/TMVA_Higgs_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py,1,['Variab'],['Variable']
Modifiability,"channel (see TH1 documentation); \class TH1F; \brief 1-D histogram with a float per channel (see TH1 documentation); \class TH1D; \brief 1-D histogram with a double per channel (see TH1 documentation); @}; */; /** \class TH1; \ingroup Histograms; TH1 is the base class of all histogram classes in %ROOT. It provides the common interface for operations such as binning, filling, drawing, which; will be detailed below. -# [Creating histograms](\ref creating-histograms); - [Labelling axes](\ref labelling-axis); -# [Binning](\ref binning); - [Fix or variable bin size](\ref fix-var); - [Convention for numbering bins](\ref convention); - [Alphanumeric Bin Labels](\ref alpha); - [Histograms with automatic bins](\ref auto-bin); - [Rebinning](\ref rebinning); -# [Filling histograms](\ref filling-histograms); - [Associated errors](\ref associated-errors); - [Associated functions](\ref associated-functions); - [Projections of histograms](\ref prof-hist); - [Random Numbers and histograms](\ref random-numbers); - [Making a copy of a histogram](\ref making-a-copy); - [Normalizing histograms](\ref normalizing); -# [Drawing histograms](\ref drawing-histograms); - [Setting Drawing histogram contour levels (2-D hists only)](\ref cont-level); - [Setting histogram graphics attributes](\ref graph-att); - [Customising how axes are drawn](\ref axis-drawing); -# [Fitting histograms](\ref fitting-histograms); -# [Saving/reading histograms to/from a ROOT file](\ref saving-histograms); -# [Operations on histograms](\ref operations-on-histograms); -# [Miscellaneous operations](\ref misc). ROOT supports the following histogram types:. - 1-D histograms:; - TH1C : histograms with one byte per channel. Maximum bin content = 127; - TH1S : histograms with one short per channel. Maximum bin content = 32767; - TH1I : histograms with one int per channel. Maximum bin content = INT_MAX (\ref intmax ""*""); - TH1L : histograms with one long64 per channel. Maximum bin content = LLONG_MAX (\ref llongmax ""**""); - ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:883,variab,variable,883,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variable']
Modifiability,"ckground events from the training sample. ### Boosting:. The idea behind adaptive boosting (AdaBoost) is, that signal events; from the training sample, that end up in a background node; (and vice versa) are given a larger weight than events that are in; the correct leave node. This results in a re-weighed training event; sample, with which then a new decision tree can be developed.; The boosting can be applied several times (typically 100-500 times); and one ends up with a set of decision trees (a forest).; Gradient boosting works more like a function expansion approach, where; each tree corresponds to a summand. The parameters for each summand (tree); are determined by the minimization of a error function (binomial log-; likelihood for classification and Huber loss for regression).; A greedy algorithm is used, which means, that only one tree is modified; at a time, while the other trees stay fixed. ### Bagging:. In this particular variant of the Boosted Decision Trees the boosting; is not done on the basis of previous training results, but by a simple; stochastic re-sampling of the initial training event sample. ### Random Trees:. Similar to the ""Random Forests"" from Leo Breiman and Adele Cutler, it; uses the bagging algorithm together and bases the determination of the; best node-split during the training on a random subset of variables only; which is individually chosen for each split. ### Analysis:. Applying an individual decision tree to a test event results in a; classification of the event as either signal or background. For the; boosted decision tree selection, an event is successively subjected to; the whole set of decision trees and depending on how often it is; classified as signal, a ""likelihood"" estimator is constructed for the; event being signal or background. The value of this estimator is the; one which is then used to select the events from an event sample, and; the cut value on this estimator defines the efficiency and purity of; the selection. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:4372,variab,variables,4372,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['variab'],['variables']
Modifiability,"combinations. The program described here performs this principal components analysis; on a sample of data provided by the user. It computes the covariance; matrix, its eigenvalues ands corresponding eigenvectors and exhibits; the behavior of the principal components \f$a_{m_i}\f$, thus providing; to the user all the means of understanding their data. ## Principal Components Method; Let's consider a sample of \f$M\f$ prototypes each being characterized by; \f$P\f$ variables \f$x_0, x_1, \ldots, x_{P-1}\f$. Each prototype is a point, or a; column vector, in a \f$P\f$-dimensional *Pattern space*.; \f[; \mathbf{x} = \left[\begin{array}{c}; x_0\\x_1\\\vdots\\x_{P-1}\end{array}\right]\,,; \f]; where each \f$x_n\f$ represents the particular value associated with the; \f$n\f$-dimension. Those \f$P\f$ variables are the quantities accessible to the; experimentalist, but are not necessarily the most significant for the; classification purpose. The *Principal Components Method* consists of applying a; *linear* transformation to the original variables. This; transformation is described by an orthogonal matrix and is equivalent; to a rotation of the original pattern space into a new set of; coordinate vectors, which hopefully provide easier feature; identification and dimensionality reduction. Let's define the covariance matrix:; \f[; \mathsf{C} = \left\langle\mathbf{y}\mathbf{y}^T\right\rangle; \quad\mbox{where}\quad; \mathbf{y} = \mathbf{x} - \left\langle\mathbf{x}\right\rangle\,,; \f]; and the brackets indicate mean value over the sample of \f$M\f$; prototypes. This matrix \f$\mathsf{C}\f$ is real, positive definite, symmetric, and will; have all its eigenvalues greater then zero. It will now be show that; among the family of all the complete orthonormal bases of the pattern; space, the base formed by the eigenvectors of the covariance matrix; and belonging to the largest eigenvalues, corresponds to the most; significant features of the description of the original prototypes. l",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:4060,variab,variables,4060,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,1,['variab'],['variables']
Modifiability,"cording all references to variables; /// (DeclRefExprs or MemberExprs) within said nested lambda in its array of; /// PotentialCaptures. All such variables have to be captured by that lambda,; /// except for as described below.; /// If that variable is usable as a constant expression and is named in a; /// manner that does not involve its odr-use (e.g. undergoes; /// lvalue-to-rvalue conversion, or discarded) record that it is so. Upon the; /// act of analyzing the enclosing full expression (ActOnFinishFullExpr); /// if we can determine that the full expression is not instantiation-; /// dependent, then we can entirely avoid its capture.; ///; /// const int n = 0;; /// [&] (auto x) {; /// (void)+n + x;; /// };; /// Interestingly, this strategy would involve a capture of n, even though; /// it's obviously not odr-used here, because the full-expression is; /// instantiation-dependent. It could be useful to avoid capturing such; /// variables, even when they are referred to in an instantiation-dependent; /// expression, if we can unambiguously determine that they shall never be; /// odr-used. This would involve removal of the variable-referring-expression; /// from the array of PotentialCaptures during the lvalue-to-rvalue; /// conversions. But per the working draft N3797, (post-chicago 2013) we must; /// capture such variables.; /// Before anyone is tempted to implement a strategy for not-capturing 'n',; /// consider the insightful warning in:; /// /cfe-commits/Week-of-Mon-20131104/092596.html; /// ""The problem is that the set of captures for a lambda is part of the ABI; /// (since lambda layout can be made visible through inline functions and the; /// like), and there are no guarantees as to which cases we'll manage to build; /// an lvalue-to-rvalue conversion in, when parsing a template -- some; /// seemingly harmless change elsewhere in Sema could cause us to start or stop; /// building such a node. So we need a rule that anyone can implement and get; /// exactly th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/ScopeInfo.h:1250,variab,variables,1250,interpreter/llvm-project/clang/include/clang/Sema/ScopeInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/ScopeInfo.h,1,['variab'],['variables']
Modifiability,"correlated with a control variable \f$x\f$:; the later is therefore totally absent from the fit. 2. The weights \f${_s{\cal P}}\f$ are calculated using Eq.; (2); where the covariance matrix is taken from Minuit. 3. Histograms of \f$x\f$ are filled by weighting the events with \f${_s{\cal P}}\f$ . 4. Error bars per bin are given by Eq. (6). The \f$\hbox {$_s$}{\cal P}lots\f$ reproduce the true distributions of the species; in the control variable \f$x\f$, within the above defined statistical uncertainties. ### Illustrations. To illustrate the technique, one considers an example derived from the analysis where; \f$\hbox {$_s$}{\cal P}lots\f$; have been first used (charmless B decays). One is dealing with a data; sample in which two species are present: the first is termed signal and; the second background. A maximum Likelihood fit is performed to obtain; the two yields \f$N_1\f$ and \f$N_2\f$ . The fit relies on two discriminating; variables collectively denoted \f$y\f$ which are chosen within three possible; variables denoted \f${m_{\rm ES}}\f$ , \f$\Delta E\f$ and \f${\cal F}\f$.; The variable which is not incorporated in \f$y\f$ is used as the control variable; \f$x\f$ . The six distributions of the three variables are assumed to be the ones; depicted in Fig. 1. \image html splot_pdfmesNIM.png Figure 1 width=800. Distributions of the three discriminating variables available to perform the Likelihood fit:; \f${m_{\rm ES}}\f$ , \f$\Delta E\f$ , \f${\cal F}\f$ .; Among the three variables, two are used to perform the fit while one is; kept out of the fit to serve the purpose of a control variable. The; three distributions on the top (resp. bottom) of the figure correspond; to the signal (resp. background). The unit of the vertical axis is; chosen such that it indicates the number of entries per bin, if one; slices the histograms in 25 bins. A data sample being built through a Monte Carlo simulation based on the; distributions shown in Fig.; 1,; one obtains the three di",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:6741,variab,variables,6741,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,2,['variab'],['variables']
Modifiability,"cpp}; legend->SetTextAlign(11);; ~~~; The default value of some `TLegend` attributes can be changed using; `gStyle`. The default settings are:; ~~~ {.cpp}; SetLegendBorderSize(1);; SetLegendFillColor(0);; SetLegendFont(42);; SetLegendTextSize(0.);; ~~~; The global attributes change the default values for the next created legends. Text attributes can be also changed individually on each legend entry:; ~~~ {.cpp}; TLegendEntry *le = leg->AddEntry(h1,""Histogram filled with random numbers"",""f"");; le->SetTextColor(kBlue);; ~~~. Note that the `TPad` class has a method to build automatically a legend; for all objects in the pad. It is called `TPad::BuildLegend()`. Each item in the legend is added using the `AddEntry` method. This; method defines the object to be added (by reference or name), the label; associated to this object and an option which a combination of:. - L: draw line associated with TAttLine if obj inherits from TAttLine; - P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; - F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; - E: draw vertical error bar. As shown in the following example, passing a NULL pointer as first parameter in; `AddEntry` is also valid. This allows to add text or blank lines in a; legend. Begin_Macro(source); {; auto c2 = new TCanvas(""c2"",""c2"",500,300);. auto* legend = new TLegend(0.2, 0.2, .8, .8);; auto h = new TH1F("""", """", 1, 0, 1);. legend->AddEntry(h, ""Histogram \""h\"""", ""l"");; legend->AddEntry((TObject*)0, """", """");; legend->AddEntry((TObject*)0, ""Some text"", """");; legend->AddEntry((TObject*)0, """", """");; legend->AddEntry(h, ""Histogram \""h\"" again"", ""l"");. legend->Draw();; }; End_Macro. It is possible to draw the legend entries over several columns using; the method `SetNColumns()` like in the following example. Begin_Macro(source); {; auto c3 = new TCanvas(""c2"",""c2"",500,300);. auto legend = new TLegend(0.2, 0.2, .8, .8);; auto h = new TH1F("""", """", 1, 0, 1);. legend->SetNColumns(2);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLegend.cxx:3382,inherit,inherits,3382,graf2d/graf/src/TLegend.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TLegend.cxx,3,['inherit'],['inherits']
Modifiability,"crete implementation of the RooStats::ConfInterval; interface. It takes as input Markov Chain of data points in the parameter; space generated by Monte Carlo using the Metropolis algorithm. From the Markov; Chain, the confidence interval can be determined in two ways:. #### Using a Kernel-Estimated PDF: (not the default method). A RooNDKeysPdf is constructed from the data set using adaptive kernel width.; With this RooNDKeysPdf F, we then integrate over the most likely domain in the; parameter space (tallest points in the posterior RooNDKeysPdf) until the target; confidence level is reached within an acceptable neighborhood as defined by; SetEpsilon(). More specifically: we calculate the following for different; cutoff values C until we reach the target confidence level: \f$\int_{ F >= C } F; d{normset} \f$.; Important note: this is not the default method because of a bug in constructing; the RooNDKeysPdf from a weighted data set. Configure to use this method by; calling SetUseKeys(true), and the data set will be interpreted without weights. #### Using a binned data set: (the default method). This is the binned analog of the continuous integrative method that uses the; kernel-estimated PDF. The points in the Markov Chain are put into a binned; data set and the interval is then calculated by adding the heights of the bins; in decreasing order until the desired level of confidence has been reached.; Note that this means the actual confidence level is >= the confidence level; prescribed by the client (unless the user calls SetHistStrict(false)). This; method is the default but may not remain as such in future releases, so you may; wish to explicitly configure to use this method by calling SetUseKeys(false). These are not the only ways for the confidence interval to be determined, and; other possibilities are being considered being added, especially for the; 1-dimensional case. One can ask an MCMCInterval for the lower and upper limits on a specific; parameter of interes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCInterval.cxx:1480,Config,Configure,1480,roofit/roostats/src/MCMCInterval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCInterval.cxx,1,['Config'],['Configure']
Modifiability,"ct with a field for each of those; // LDS variables. Variables that are only used from kernels are excluded.; //; // The ""table"" lowering implemented here has three components.; // First kernels are assigned a unique integer identifier which is available in; // functions it calls through the intrinsic amdgcn_lds_kernel_id. The integer; // is passed through a specific SGPR, thus works with indirect calls.; // Second, each kernel allocates LDS variables independent of other kernels and; // writes the addresses it chose for each variable into an array in consistent; // order. If the kernel does not allocate a given variable, it writes undef to; // the corresponding array location. These arrays are written to a constant; // table in the order matching the kernel unique integer identifier.; // Third, uses from non-kernel functions are replaced with a table lookup using; // the intrinsic function to find the address of the variable.; //; // ""Kernel"" lowering is only applicable for variables that are unambiguously; // reachable from exactly one kernel. For those cases, accesses to the variable; // can be lowered to ConstantExpr address of a struct instance specific to that; // one kernel. This is zero cost in space and in compute. It will raise a fatal; // error on any variable that might be reachable from multiple kernels and is; // thus most easily used as part of the hybrid lowering strategy.; //; // Hybrid lowering is a mixture of the above. It uses the zero cost kernel; // lowering where it can. It lowers the variable accessed by the greatest; // number of kernels using the module strategy as that is free for the first; // variable. Any futher variables that can be lowered with the module strategy; // without incurring LDS memory overhead are. The remaining ones are lowered; // via table.; //; // Consequences; // - No heuristics or user controlled magic numbers, hybrid is the right choice; // - Kernels that don't use functions (or have had them all inlined) are not; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:4975,variab,variables,4975,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,"cted to hit the ""Kernel"" lowering strategy; // - The runtime properties impose a cost in compiler implementation complexity; //; // Dynamic LDS implementation; // Dynamic LDS is lowered similarly to the ""table"" strategy above and uses the; // same intrinsic to identify which kernel is at the root of the dynamic call; // graph. This relies on the specified behaviour that all dynamic LDS variables; // alias one another, i.e. are at the same address, with respect to a given; // kernel. Therefore this pass creates new dynamic LDS variables for each kernel; // that allocates any dynamic LDS and builds a table of addresses out of those.; // The AMDGPUPromoteAlloca pass skips kernels that use dynamic LDS.; // The corresponding optimisation for ""kernel"" lowering where the table lookup; // is elided is not implemented.; //; //; // Implementation notes / limitations; // A single LDS global variable represents an instance per kernel that can reach; // said variables. This pass essentially specialises said variables per kernel.; // Handling ConstantExpr during the pass complicated this significantly so now; // all ConstantExpr uses of LDS variables are expanded to instructions. This; // may need amending when implementing non-undef initialisers.; //; // Lowering is split between this IR pass and the back end. This pass chooses; // where given variables should be allocated and marks them with metadata,; // MD_absolute_symbol. The backend places the variables in coincidentally the; // same location and raises a fatal error if something has gone awry. This works; // in practice because the only pass between this one and the backend that; // changes LDS is PromoteAlloca and the changes it makes do not conflict.; //; // Addresses are written to constant global arrays based on the same metadata.; //; // The backend lowers LDS variables in the order of traversal of the function.; // This is at odds with the deterministic layout required. The workaround is to; // allocate the fixed-addr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:7385,variab,variables,7385,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,"ction or data member (including base classes) //; // global variable, function, or class name //; // //; // Also, something like //; // //; // someObject->Func([TAB] //; // someObject.Func([TAB] //; // someClass::Func([TAB] //; // someClass var([TAB] //; // new someClass([TAB] //; // //; // will print a list of prototypes for the indicated //; // method or constructor. //; // //; // Current limitations and bugs: //; // //; // 1. you can only use one member access operator at a time. //; // eg, this will work: gROOT->GetListOfG[TAB] //; // but this will not: gROOT->GetListOfGlobals()->Conta[TAB] //; // //; // 2. nothing is guaranteed to work on windows //; // (for one thing, /bin/env and /etc/passwd are hardcoded) //; // //; // 3. CINT shortcut #2 is deliberately not supported. //; // (using ""operator.()"" instead of ""operator->()"") //; // //; // 4. most identifiers (including C++ identifiers, usernames, //; // environment variables, etc) //; // are restriceted to this character set: [_a-zA-Z0-9] //; // therefore, you won't be able to complete things like //; // //; // operator new //; // operator+ //; // etc //; // //; // 5. ~whatever[TAB] always tries to complete a username. //; // use whitespace (~ whatever[TAB]) if you want to complete a global //; // identifier. //; // //; // 6. CINT shortcut #3 is not supported when trying to complete //; // the name of a global object. (it is supported when trying to //; // complete a member of a global object) //; // //; // 7. the list of #pragma's is hardcoded //; // (ie not obtained from the interpreter at runtime) //; // ==> user-defined #pragma's will not be recognized //; // //; // 8. the system include directories are also hardcoded //; // because i don't know how to get them from the interpreter. //; // fons, maybe they should be #ifdef'd for the different sytems? //; // //; // 9. the TabCom.FileIgnore resource is always applied, even if you //; // are not trying to complete a filename. //; // //; // 10. anything in quo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:1875,variab,variables,1875,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['variab'],['variables']
Modifiability,"ctions (or have had them all inlined) are not; // affected by any lowering for kernels that do.; // - Kernels that don't make indirect function calls are not affected by those; // that do.; // - Variables which are used by lots of kernels, e.g. those injected by a; // language runtime in most kernels, are expected to have no overhead; // - Implementations that instantiate templates per-kernel where those templates; // use LDS are expected to hit the ""Kernel"" lowering strategy; // - The runtime properties impose a cost in compiler implementation complexity; //; // Dynamic LDS implementation; // Dynamic LDS is lowered similarly to the ""table"" strategy above and uses the; // same intrinsic to identify which kernel is at the root of the dynamic call; // graph. This relies on the specified behaviour that all dynamic LDS variables; // alias one another, i.e. are at the same address, with respect to a given; // kernel. Therefore this pass creates new dynamic LDS variables for each kernel; // that allocates any dynamic LDS and builds a table of addresses out of those.; // The AMDGPUPromoteAlloca pass skips kernels that use dynamic LDS.; // The corresponding optimisation for ""kernel"" lowering where the table lookup; // is elided is not implemented.; //; //; // Implementation notes / limitations; // A single LDS global variable represents an instance per kernel that can reach; // said variables. This pass essentially specialises said variables per kernel.; // Handling ConstantExpr during the pass complicated this significantly so now; // all ConstantExpr uses of LDS variables are expanded to instructions. This; // may need amending when implementing non-undef initialisers.; //; // Lowering is split between this IR pass and the back end. This pass chooses; // where given variables should be allocated and marks them with metadata,; // MD_absolute_symbol. The backend places the variables in coincidentally the; // same location and raises a fatal error if something has gone awry. ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:6907,variab,variables,6907,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,"ctor template which; offer superior runtime performance, i.e.:; - ROOT::Math::PtEtaPhiMVector based on pt (rho),eta,phi and M (t) coordinates in double precision; - ROOT::Math::PtEtaPhiEVector based on pt (rho),eta,phi and E (t) coordinates in double precision; - ROOT::Math::PxPyPzMVector based on px,py,pz and M (mass) coordinates in double precision; - ROOT::Math::PxPyPzEVector based on px,py,pz and E (energy) coordinates in double precision; - ROOT::Math::XYZTVector based on x,y,z,t coordinates (cartesian) in double precision (same as PxPyPzEVector); - ROOT::Math::XYZTVectorF based on x,y,z,t coordinates (cartesian) in float precision (same as PxPyPzEVector but float). More details can be found in the documentation of the @ref GenVector package.; \endparblock. ### Description; TLorentzVector is a general four-vector class, which can be used; either for the description of position and time (x,y,z,t) or momentum and; energy (px,py,pz,E). ### Declaration; TLorentzVector has been implemented as a set a TVector3 and a Double_t variable.; By default all components are initialized by zero. ~~~ {.cpp}; TLorentzVector v1; // initialized by (0., 0., 0., 0.); TLorentzVector v2(1., 1., 1., 1.);; TLorentzVector v3(v1);; TLorentzVector v4(TVector3(1., 2., 3.),4.);; ~~~. For backward compatibility there are two constructors from an Double_t; and Float_t C array. ### Access to the components; There are two sets of access functions to the components of a LorentzVector:; X(), Y(), Z(), T() and Px(),; Py(), Pz() and E(). Both sets return the same values; but the first set is more relevant for use where TLorentzVector; describes a combination of position and time and the second set is more; relevant where TLorentzVector describes momentum and energy:. ~~~ {.cpp}; Double_t xx =v.X();; ...; Double_t tt = v.T();. Double_t px = v.Px();; ...; Double_t ee = v.E();; ~~~. The components of TLorentzVector can also accessed by index:. ~~~ {.cpp}; xx = v(0); or xx = v[0];; yy = v(1); yy = v[1];",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TLorentzVector.cxx:1583,variab,variable,1583,math/physics/src/TLorentzVector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TLorentzVector.cxx,1,['variab'],['variable']
Modifiability,"ctory, the; /// file mode bit will be change to 'dirmode' using chmod.; ///; /// If library_specified is not specified, CompileMacro generate a default name; /// for library by taking the name of the file ""filename"" but replacing the; /// dot before the extension by an underscore and by adding the shared; /// library extension for the current platform.; /// For example on most platform, hsimple.cxx will generate hsimple_cxx.so; ///; /// It uses the directive fMakeSharedLibs to create a shared library.; /// If loading the shared library fails, it tries to output a list of missing; /// symbols by creating an executable (on some platforms like OSF, this does; /// not HAVE to be an executable) containing the script. It uses the; /// directive fMakeExe to do so.; /// For both directives, before passing them to TSystem::Exec, it expands the; /// variables $SourceFiles, $SharedLib, $LibName, $IncludePath, $LinkedLibs,; /// $DepLibs, $ExeName and $ObjectFiles. See SetMakeSharedLib() for more; /// information on those variables.; ///; /// This method is used to implement the following feature:; ///; /// Synopsis:; ///; /// The purpose of this addition is to allow the user to use an external; /// compiler to create a shared library from its C++ macro (scripts).; /// Currently in order to execute a script, a user has to type at the root; /// prompt; /// ~~~ {.cpp}; /// .X myfunc.C(arg1,arg2); /// ~~~; /// We allow them to type:; /// ~~~ {.cpp}; /// .X myfunc.C++(arg1,arg2); /// ~~~; /// or; /// ~~~ {.cpp}; /// .X myfunc.C+(arg1,arg2); /// ~~~; /// In which case an external compiler will be called to create a shared; /// library. This shared library will then be loaded and the function; /// myfunc will be called with the two arguments. With '++' the shared library; /// is always recompiled. With '+' the shared library is recompiled only; /// if it does not exist yet or the macro file is newer than the shared; /// library.; ///; /// Of course the + and ++ notation is supported in",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx:2573,variab,variables,2573,core/base/src/TSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSystem.cxx,1,['variab'],['variables']
Modifiability,"d and pw are not specified (==0), user and passwd arguments from; /// URL will be used. Works only with MySQL ODBC, probably with PostrSQL; /// ODBC.; /// 2. Form ""odbcd://DRIVER={MyODBC};SERVER=pcroot.cern.ch;DATABASE=test;USER=user;PASSWORD=pass;OPTION=3;PORT=3306;""; /// This is a form, which is accepted by SQLDriverConnect function of ODBC.; /// Here some other arguments can be specified, which are not included; /// in standard URL format.; /// 3. Form ""odbcn://MySpecialConfig"", where MySpecialConfig is entry,; /// defined in user DSN (user data source). Here uid and pw should be; /// always specified.; ///; /// Configuring unixODBC under Linux: http://www.unixodbc.org/odbcinst.html; /// Remarks: for variants 1 & 2 it is enough to create/configure; /// odbcinst.ini file. For variant 3 file odbc.ini should be created.; /// Path to this files can be specified in environmental variables like; /// export ODBCINI=/home/my/unixODBC/etc/odbc.ini; /// export ODBCSYSINI=/home/my/unixODBC/etc; ///; /// Configuring MySQL ODBC under Windows.; /// Installing ODBC driver for MySQL is enough to use it under Windows.; /// Afer odbcd:// variant can be used with DRIVER={MySQL ODBC 3.51 Driver};; /// To configure User DSN, go into Start menu -> Settings ->; /// Control panel -> Administrative tools-> Data Sources (ODBC).; ///; /// To install Oracle ODBC driver for Windows, one should download; /// and install either complete Oracle client (~500 MB), or so-called; /// Instant Client Basic and Instant Client ODBC (~20 MB together).; /// Some remark about Instant Client:; /// 1) Two additional DLLs are required: mfc71.dll & msver71.dll; /// They can be found either in MS VC++ 7.1 Free Toolkit or; /// download from other Internet sites; /// 2) ORACLE_HOME environment variable should be specified and point to; /// location, where Instant Client files are extracted; /// 3) Run odbc_install.exe from account with administrative rights; /// 3) In $ORACLE_HOME/network/admin/ directory approp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx:1517,Config,Configuring,1517,sql/odbc/src/TODBCServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx,1,['Config'],['Configuring']
Modifiability,"d by their offset.; ///; /// Epilogue Start Offset: 18-bit field encoding the offset of epilogue relative; /// to the start of the function in bytes divided by two; /// Res : 2-bit field reserved for future expansion (must be set to 0); /// Condition : (ARM only) 4-bit field providing the condition under which the; /// epilogue is executed. Unconditional epilogues should set this; /// field to 0xe. Epilogues must be entirely conditional or; /// unconditional, and in Thumb-2 mode. The epilogue begins with; /// the first instruction after the IT opcode.; /// Epilogue Start Index : 8-bit field indicating the byte index of the first; /// unwind code describing the epilogue; ///; /// 3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0; /// 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0; /// +---------------+---------------+---------------+---------------+; /// | Unwind Code 3 | Unwind Code 2 | Unwind Code 1 | Unwind Code 0 |; /// +---------------+---------------+---------------+---------------+; ///; /// Following the epilogue scopes, the byte code describing the unwinding; /// follows. This is padded to align up to word alignment. Bytes are stored in; /// little endian.; ///; /// 3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0; /// 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0; /// +---------------------------------------------------------------+; /// | Exception Handler RVA (requires X = 1) |; /// +---------------------------------------------------------------+; /// | (possibly followed by data required for exception handler) |; /// +---------------------------------------------------------------+; ///; /// If the X bit is set in the header, the unwind byte code is followed by the; /// exception handler information. This constants of one Exception Handler RVA; /// which is the address to the exception handler, followed immediately by the; /// variable length data associated with the exception handler.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h:5550,variab,variable,5550,interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h,1,['variab'],['variable']
Modifiability,"d, etc. --For multidimensional fitting, TFormulas of the form:; x[0]++...++x[n] can be used; ##### 2.2.2 There is no need to create the function if you don't want to,; the formula can be set by expression:; --Example:; ~~~~; // 2 is the number of dimensions; TLinearFitter *lf = new TLinearFitter(2);; lf->SetFormula(""x ++ y ++ x*x*y*y"");; ~~~~. ##### 2.2.3 The fastest functions to compute are polynomials and hyperplanes.; --Polynomials are set the usual way: ""pol1"", ""pol2"",...; --Hyperplanes are set by expression ""hyp3"", ""hyp4"", ...; ---The ""hypN"" expressions only work when the linear fitter; is used directly, not through TH1::Fit or TGraph::Fit.; To fit a graph or a histogram with a hyperplane, define; the function as ""1++x++y"".; ---A constant term is assumed for a hyperplane, when using; the ""hypN"" expression, so ""hyp3"" is in fact fitting with; ""1++x++y++z"" function.; --Fitting hyperplanes is much faster than fitting other; expressions so if performance is vital, calculate the; function values beforehand and give them to the fitter; as variables; --Example:; You want to fit ""sin(x)|cos(2*x)"" very fast. Calculate; sin(x) and cos(2*x) beforehand and store them in array *data.; Then:; TLinearFitter *lf=new TLinearFitter(2, ""hyp2"");; lf->AssignData(npoint, 2, data, y);. #### 2.3 Resetting the formula. ##### 2.3.1 If the input data is stored (or added via AssignData() function),; the fitting formula can be reset without re-adding all the points.; --Example:; ~~~~; TLinearFitter *lf=new TLinearFitter(""1++x++x*x"");; lf->AssignData(n, 1, x, y, e);; lf->Eval(); //looking at the parameter significance, you see,; // that maybe the fit will improve, if you take out; // the constant term; lf->SetFormula(""x++x*x"");; lf->Eval();; ...; ~~~~. ##### 2.3.2 If the input data is not stored, the fitter will have to be; cleared and the data will have to be added again to try a; different formula. ### 3.Accessing the fit results. #### 3.1 There are methods in the fitter to access all rele",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:4257,variab,variables,4257,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,1,['variab'],['variables']
Modifiability,"d.; Only files ending on <tt>.html</tt> or <tt>.txt</tt> will be taken into account;; the text files will first be run through; <a href=""#THtml:Convert"">THtml::Convert()</a>.; You can see an example <a href=""http://root.cern.ch/root/html/HIST_Index.html"">here</a>;; the part between ""Index of HIST classes"" and ""Jump to"" is created by parsing; the module's doc directory.</p>. <h3><a name=""aux"">VI. Auxiliary files: style sheet, JavaScript, help page</a></h3>. <p>The documentation pages share a common set of javascript and CSS files. They; are generated automatically when running <a href=""#THtml:MakeAll"">MakeAll()</a>;; they can be generated on; demand by calling <a href=""#THtml:CreateAuxiliaryFiles"">CreateAuxiliaryFiles()</a>.</p>. <h3><a name=""charts"">VII. Class Charts</a></h3>; THtml can generate a number of graphical representations for a class, which; are displayed as a tabbed set of imaged on-top of the class description.; It can show the inheritance, inherited and hidden members, directly and; indirectly included files, and library dependencies. These graphs are generated using the <a href=""http://www.graphviz.org/"">Graphviz</a>; package. You can install it from <a href=""http://www.graphviz.org"">http://www.graphviz.org</a>.; You can either put it into your $PATH, or tell THtml where to find it by calling; <a href=""#THtml:SetDotDir"">SetDotDir()</a>. <h3><a name=""confvar"">VIII. Configuration variables</a></h3>. <p>Here is a list of all configuration variables that are known to THtml.; You can set them in your .rootrc file, see; <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>.</p>. <pre>; Root.Html.OutputDir (default: htmldoc); Root.Html.SourceDir (default: .:src/:include/); Root.Html.Author (default: // Author:) - start tag for authors; Root.Html.LastUpdate (default: // @(#)) - start tag for last update; Root.Html.Copyright (default: * Copyright) - start tag for copyright notice; Root.Html.Description (default: //____________________ ) - start tag for cla",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:20477,inherit,inheritance,20477,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,2,['inherit'],"['inheritance', 'inherited']"
Modifiability,"d; // in a url. The supported names are: xroot, root, http, https.; // If the name is omitted a selection of schemes are tested; // based on feature availability:; //; // feature protocol multithreaded test available; //; // xrootd root no; // davix http no; //; // An example of output of a non multithreaded test, when all the tests; // run OK is shown below:; //; // ****************************************************************************; // * Starting stressIOPlugins test for protocol http; // * Test files will be read from:; // * http://root.cern/files/StressIOPluginsTestFiles/; // ****************************************************************************; // Test 1 : Check size & compression factor of a Root file........ using stress_2.root; // : opened file with plugin class......................... TDavixFile; // : Check size & compression factor of a Root file........ OK; // Test 2 : Test graphics & Postscript............................ using stress_5.root; // : opened file with plugin class......................... TDavixFile; // : Test graphics & Postscript............................ OK; // Test 3 : Trees split and compression modes..................... using Event_8a.root; // : opened file with plugin class......................... TDavixFile; // : Trees split and compression modes..................... using Event_8b.root; // : opened file with plugin class......................... TDavixFile; // : Trees split and compression modes..................... OK; // Test 4 : Filename formats when adding files to TChain.......... using Event_8a.root and Event_8b.root; // : treename in chain..................................... OK; // : treename to AddFile................................... OK; // : treename in filenames, slash-suffix style............. OK; // : bad treename to AddFile, good in filename............. OK; // : treename and url query in filename.................... OK; // : treename given in url frag in filename................ OK; // : filenam",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx:1580,plugin,plugin,1580,test/stressIOPlugins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx,1,['plugin'],['plugin']
Modifiability,"dFriend method has two parameters, the first is the tree name and the; /// second is the name of the ROOT file where the friend tree is saved.; /// AddFriend automatically opens the friend file. If no file name is given,; /// the tree called ft1 is assumed to be in the same file as the original tree.; ///; /// tree.AddFriend(""ft1"",""friendfile1.root"");; /// If the friend tree has the same name as the original tree, you can give it; /// an alias in the context of the friendship:; ///; /// tree.AddFriend(""tree1 = tree"",""friendfile1.root"");; /// Once the tree has friends, we can use TTree::Draw as if the friend's; /// variables were in the original tree. To specify which tree to use in; /// the Draw method, use the syntax:; /// ~~~ {.cpp}; /// <treeName>.<branchname>.<varname>; /// ~~~; /// If the variablename is enough to uniquely identify the variable, you can; /// leave out the tree and/or branch name.; /// For example, these commands generate a 3-d scatter plot of variable ""var""; /// in the TTree tree versus variable v1 in TTree ft1 versus variable v2 in; /// TTree ft2.; /// ~~~ {.cpp}; /// tree.AddFriend(""ft1"",""friendfile1.root"");; /// tree.AddFriend(""ft2"",""friendfile2.root"");; /// tree.Draw(""var:ft1.v1:ft2.v2"");; /// ~~~; /// \image html ttree_friend2.png; ///; /// The picture illustrates the access of the tree and its friends with a; /// Draw command.; /// When AddFriend is called, the ROOT file is automatically opened and the; /// friend tree (ft1) is read into memory. The new friend (ft1) is added to; /// the list of friends of tree.; /// The number of entries in the friend must be equal or greater to the number; /// of entries of the original tree. If the friend tree has fewer entries a; /// warning is given and the missing entries are not included in the histogram.; /// To retrieve the list of friends from a tree use TTree::GetListOfFriends.; /// When the tree is written to file (TTree::Write), the friends list is saved; /// with it. And when the tree is retr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2080,variab,variable,2080,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,3,['variab'],['variable']
Modifiability,"def initialisers.; //; // Lowering is split between this IR pass and the back end. This pass chooses; // where given variables should be allocated and marks them with metadata,; // MD_absolute_symbol. The backend places the variables in coincidentally the; // same location and raises a fatal error if something has gone awry. This works; // in practice because the only pass between this one and the backend that; // changes LDS is PromoteAlloca and the changes it makes do not conflict.; //; // Addresses are written to constant global arrays based on the same metadata.; //; // The backend lowers LDS variables in the order of traversal of the function.; // This is at odds with the deterministic layout required. The workaround is to; // allocate the fixed-address variables immediately upon starting the function; // where they can be placed as intended. This requires a means of mapping from; // the function to the variables that it allocates. For the module scope lds,; // this is via metadata indicating whether the variable is not required. If a; // pass deletes that metadata, a fatal error on disagreement with the absolute; // symbol metadata will occur. For kernel scope and dynamic, this is by _name_; // correspondence between the function and the variable. It requires the; // kernel to have a name (which is only a limitation for tests in practice) and; // for nothing to rename the corresponding symbols. This is a hazard if the pass; // is run multiple times during debugging. Alternative schemes considered all; // involve bespoke metadata.; //; // If the name correspondence can be replaced, multiple distinct kernels that; // have the same memory layout can map to the same kernel id (as the address; // itself is handled by the absolute symbol metadata) and that will allow more; // uses of the ""kernel"" style faster lowering and reduce the size of the lookup; // tables.; //; // There is a test that checks this does not fire for a graphics shader. This; // lowering is expec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:8636,variab,variable,8636,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variable']
Modifiability,"dening checks across loop iterations. For example, it will; // convert; //; // for (i = 0; i < n; i++) {; // guard(i < len);; // ...; // }; //; // to; //; // for (i = 0; i < n; i++) {; // guard(n - 1 < len);; // ...; // }; //; // After this transformation the condition of the guard is loop invariant, so; // loop-unswitch can later unswitch the loop by this condition which basically; // predicates the loop by the widened condition:; //; // if (n - 1 < len); // for (i = 0; i < n; i++) {; // ...; // }; // else; // deoptimize; //; // It's tempting to rely on SCEV here, but it has proven to be problematic.; // Generally the facts SCEV provides about the increment step of add; // recurrences are true if the backedge of the loop is taken, which implicitly; // assumes that the guard doesn't fail. Using these facts to optimize the; // guard results in a circular logic where the guard is optimized under the; // assumption that it never fails.; //; // For example, in the loop below the induction variable will be marked as nuw; // basing on the guard. Basing on nuw the guard predicate will be considered; // monotonic. Given a monotonic condition it's tempting to replace the induction; // variable in the condition with its value on the last iteration. But this; // transformation is not correct, e.g. e = 4, b = 5 breaks the loop.; //; // for (int i = b; i != e; i++); // guard(i u< len); //; // One of the ways to reason about this problem is to use an inductive proof; // approach. Given the loop:; //; // if (B(0)) {; // do {; // I = PHI(0, I.INC); // I.INC = I + Step; // guard(G(I));; // } while (B(I));; // }; //; // where B(x) and G(x) are predicates that map integers to booleans, we want a; // loop invariant expression M such the following program has the same semantics; // as the above:; //; // if (B(0)) {; // do {; // I = PHI(0, I.INC); // I.INC = I + Step; // guard(G(0) && M);; // } while (B(I));; // }; //; // One solution for M is M = forall X . (G(X) && B(X)) => G(X + Step);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPredication.cpp:1478,variab,variable,1478,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPredication.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPredication.cpp,1,['variab'],['variable']
Modifiability,"der the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass performs below peephole optimizations on MIR level.; //; // 1. MOVi32imm + ANDWrr ==> ANDWri + ANDWri; // MOVi64imm + ANDXrr ==> ANDXri + ANDXri; //; // 2. MOVi32imm + ADDWrr ==> ADDWRi + ADDWRi; // MOVi64imm + ADDXrr ==> ANDXri + ANDXri; //; // 3. MOVi32imm + SUBWrr ==> SUBWRi + SUBWRi; // MOVi64imm + SUBXrr ==> SUBXri + SUBXri; //; // The mov pseudo instruction could be expanded to multiple mov instructions; // later. In this case, we could try to split the constant operand of mov; // instruction into two immediates which can be directly encoded into; // *Wri/*Xri instructions. It makes two AND/ADD/SUB instructions instead of; // multiple `mov` + `and/add/sub` instructions.; //; // 4. Remove redundant ORRWrs which is generated by zero-extend.; //; // %3:gpr32 = ORRWrs $wzr, %2, 0; // %4:gpr64 = SUBREG_TO_REG 0, %3, %subreg.sub_32; //; // If AArch64's 32-bit form of instruction defines the source operand of; // ORRWrs, we can remove the ORRWrs because the upper 32 bits of the source; // operand are set to zero.; //; // 5. %reg = INSERT_SUBREG %reg(tied-def 0), %subreg, subidx; // ==> %reg:subidx = SUBREG_TO_REG 0, %subreg, subidx; //; // 6. %intermediate:gpr32 = COPY %src:fpr128; // %dst:fpr128 = INSvi32gpr %dst_vec:fpr128, dst_index, %intermediate:gpr32; // ==> %dst:fpr128 = INSvi32lane %dst_vec:fpr128, dst_index, %src:fpr128, 0; //; // In cases where a source FPR is copied to a GPR in order to be copied; // to a destination FPR, we can directly copy the values between the FPRs,; // eliminating the use of the Integer unit. When we match a pattern of; // INSvi[X]gpr that is preceded by a chain of COPY instructions from a FPR; // source, we use the INSvi[X]lane to replace the COPY & INSvi[X]gpr; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MIPeepholeOpt.cpp:1140,extend,extend,1140,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MIPeepholeOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MIPeepholeOpt.cpp,1,['extend'],['extend']
Modifiability,"des is; small, that this waste allows fewer cases of special code, and that it; is useful in certain of the methods, it was felt to be a worthwhile waste. The size of the exterior nodes (leaf nodes) does not need to be related to; the size of the interior nodes at all. Since leaf nodes contain only; keys, they may be as large or small as we like independent of the size; of the interior nodes. For no particular reason other than it seems like; a good idea, we will allocate 2*(ORDER+1) keys in each leaf node, and they; will be numbered and indexed from 0 to 2*ORDER+1. It does have the advantage; of keeping the size of the leaf and interior arrays the same, so that if we; find allocation and de-allocation of these arrays expensive, we can modify; their allocation to use a garbage ring, or something. Both of these numbers will be run-time constants associated with each tree; (each tree at run-time can be of a different order). The variable ""order""; is the order of the tree, and the inclusive upper limit on the indices of; the keys in the interior nodes. The variable ""order2"" is the inclusive; upper limit on the indices of the leaf nodes, and is designed; ~~~ {.cpp}; (1) to keep the sizes of the two kinds of nodes the same;; (2) to keep the expressions involving the arrays of keys looking; somewhat the same: lower limit upper limit; for inner nodes: 1 order; for leaf nodes: 0 order2; Remember that index 0 of the inner nodes is special.; ~~~; Currently, order2 = 2*(order+1).; ~~~ {.cpp}; Picture: (also see Knuth Vol 3 pg 478). +--+--+--+--+--+--...; | | | | | |; parent--->| | | |; | | | |; +*-+*-+*-+--+--+--...; | | |; +----+ | +-----+; | +-----+ |; V | V; +----------+ | +----------+; | | | | |; this->| | | | |<--sib; +----------+ | +----------+; V; data; ~~~; It is conceptually VERY convenient to think of the data as being the; very first element of the sib node. Any primitive that tells sib to; perform some action on n nodes should include this 'hidden' element.; For Inn",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:5121,variab,variable,5121,core/cont/src/TBtree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx,1,['variab'],['variable']
Modifiability,"df.fitTo(data,Range=""Range1,Range2"")`,; ## it will fit the shapes in the two selected ranges and also take into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both regions correct their interpretation such that N_expected refers to the full range,; ## it is interpreted easily, and consistent in both regions.; ##; ## This requires that the likelihood model is extended using RooAddPdf in the; ## form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf.; #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:1230,extend,extended,1230,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,1,['extend'],['extended']
Modifiability,"dividually set with SetXPhi(),; SetXTheta(), and SetXPsi(). These routines set the Euler; angles using the X-convention which is defined by a rotation about the Z-axis,; about the new X-axis, and about the new Z-axis. This is the convention used; in Landau and Lifshitz, Goldstein and other common physics texts. The; Y-convention Euler angles can be set with SetYEulerAngles(),; SetYPhi(), SetYTheta(), and SetYPsi(). The caveat; is that Euler angles usually define the rotation of the new coordinate system; with respect to the original system, however, the TRotation class specifies; the rotation of the object in the original system (an active rotation). To; recover the usual Euler rotations (ie. rotate the system not the object), you; must take the inverse of the rotation. The member functions SetXAxis(), SetYAxis(), and; SetZAxis() will create a rotation which rotates the requested axis; of the object to be parallel to a vector. If used with one argument, the; rotation about that axis is arbitrary. If used with two arguments, the; second variable defines the XY, YZ, or ZX; respectively. ### Inverse rotation. ~~~; TRotation a,b;; ...; b = a.Inverse(); // b is inverse of a, a is unchanged; b = a.Invert(); // invert a and set b = a; ~~~. ### Compound Rotations; The operator * has been implemented in a way that follows the; mathematical notation of a product of the two matrices which describe the; two consecutive rotations. Therefore the second rotation should be placed; first:. ~~~; r = r2 * r1;; ~~~. ### Rotation of TVector3; The TRotation class provides an operator * which allows to express; a rotation of a TVector3 analog to the mathematical notation. ~~~; | x' | | xx xy xz | | x |; | y' | = | yx yy yz | | y |; | z' | | zx zy zz | | z |; ~~~. e.g.:. ~~~; TVector3 v(1,1,1);; v = r * v;; ~~~. You can also use the Transform() member function or the operator *= of the; TVector3 class:. ~~~; TVector3 v;; TRotation r;; v.Transform(r);; v *= r; //Attention v = r * v; ~~~; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRotation.cxx:3918,variab,variable,3918,math/physics/src/TRotation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRotation.cxx,1,['variab'],['variable']
Modifiability,"dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooFormulaVar; ///; /// A RooFormulaVar is a generic implementation of a real-valued object,; /// which takes a RooArgList of servers and a C++ expression string defining how; /// its value should be calculated from the given list of servers.; /// RooFormulaVar uses a RooFormula object to perform the expression evaluation.; ///; /// If RooAbsPdf objects are supplied to RooFormulaVar as servers, their; /// raw (unnormalized) values will be evaluated. Use RooGenericPdf, which; /// constructs generic PDF functions, to access their properly normalized; /// values.; ///; /// The string expression can be any valid TFormula expression referring to the; /// listed servers either by name or by their ordinal list position. These three are; /// equivalent:; /// ```; /// RooFormulaVar(""gen"", ""x*y"", RooArgList(x,y)) // reference by name; /// RooFormulaVar(""gen"", ""@0*@1"", RooArgList(x,y)) // reference by ordinal with @; /// RooFormulaVar(""gen"", ""x[0]*x[1]"", RooArgList(x,y)) // TFormula-builtin reference by ordinal; /// ```; /// Note that `x[i]` is an expression reserved for TFormula. All variable references; /// are automatically converted to the TFormula-native format. If a variable with; /// the name `x` is given, the RooFormula interprets `x[i]` as a list position,; /// but `x` without brackets as the name of a RooFit object.; ///; /// The last two versions, while slightly less readable, are more versatile because; /// the names of the arguments are not hard coded.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx:1877,variab,variable,1877,roofit/roofitcore/src/RooFormulaVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormulaVar.cxx,2,['variab'],['variable']
Modifiability,"dynamic LDS variables; // alias one another, i.e. are at the same address, with respect to a given; // kernel. Therefore this pass creates new dynamic LDS variables for each kernel; // that allocates any dynamic LDS and builds a table of addresses out of those.; // The AMDGPUPromoteAlloca pass skips kernels that use dynamic LDS.; // The corresponding optimisation for ""kernel"" lowering where the table lookup; // is elided is not implemented.; //; //; // Implementation notes / limitations; // A single LDS global variable represents an instance per kernel that can reach; // said variables. This pass essentially specialises said variables per kernel.; // Handling ConstantExpr during the pass complicated this significantly so now; // all ConstantExpr uses of LDS variables are expanded to instructions. This; // may need amending when implementing non-undef initialisers.; //; // Lowering is split between this IR pass and the back end. This pass chooses; // where given variables should be allocated and marks them with metadata,; // MD_absolute_symbol. The backend places the variables in coincidentally the; // same location and raises a fatal error if something has gone awry. This works; // in practice because the only pass between this one and the backend that; // changes LDS is PromoteAlloca and the changes it makes do not conflict.; //; // Addresses are written to constant global arrays based on the same metadata.; //; // The backend lowers LDS variables in the order of traversal of the function.; // This is at odds with the deterministic layout required. The workaround is to; // allocate the fixed-address variables immediately upon starting the function; // where they can be placed as intended. This requires a means of mapping from; // the function to the variables that it allocates. For the module scope lds,; // this is via metadata indicating whether the variable is not required. If a; // pass deletes that metadata, a fatal error on disagreement with the absolute; // s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:7728,variab,variables,7728,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,"e Projections without weights......................OK; // Test 3: Testing Histogram Projections with weights.......................OK; // Test 4: Testing Profile Projections with weights.......................OK; // Test 5: Projection with Range for Histograms and Profiles................OK; // Test 6: Histogram Rebinning..............................................OK; // Test 7: Add tests for 1D, 2D and 3D Histograms and Profiles..............OK; // Test 8: Multiply tests for 1D, 2D and 3D Histograms......................OK; // Test 9: Divide tests for 1D, 2D and 3D Histograms........................OK; // Test 10: Copy tests for 1D, 2D and 3D Histograms and Profiles.............OK; // Test 11: Read/Write tests for 1D, 2D and 3D Histograms and Profiles.......OK; // Test 12: Merge tests for 1D, 2D and 3D Histograms and Profiles............OK; // Test 13: Label tests for 1D and 2D Histograms ............................OK; // Test 14: Interpolation tests for Histograms...............................OK; // Test 15: Scale tests for Profiles.........................................OK; // Test 16: Integral tests for Histograms....................................OK; // Test 17: Buffer tests for Histograms......................................OK; // Test 18: Extend axis tests for Histograms.................................OK; // Test 19: TH1-THn[Sparse] Conversion tests.................................OK; // Test 20: FillData tests for Histograms and Sparses........................OK; // Test 21: Reference File Read for Histograms and Profiles..................OK; // ****************************************************************************; // stressHistogram: Real Time = 86.22 seconds Cpu Time = 85.64 seconds; // ROOTMARKS = 1292.62 ROOT version: 6.05/01 remotes/origin/master@v6-05-01-336-g5c3d5ff; // ****************************************************************************; // //; //*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx:2998,Extend,Extend,2998,test/stressHistogram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistogram.cxx,1,['Extend'],['Extend']
Modifiability,"e TTree and the TEventLists can be defined in; the constructor, or later with the suited setter method. The lists; used for training and test can be defined either explicitly, or via; a string containing the formula to be used to define them, exactly as; for a TCut. The learning method is defined using the TMultiLayerPerceptron::SetLearningMethod() .; Learning methods are :. - TMultiLayerPerceptron::kStochastic,; - TMultiLayerPerceptron::kBatch,; - TMultiLayerPerceptron::kSteepestDescent,; - TMultiLayerPerceptron::kRibierePolak,; - TMultiLayerPerceptron::kFletcherReeves,; - TMultiLayerPerceptron::kBFGS. A weight can be assigned to events, either in the constructor, either; with TMultiLayerPerceptron::SetEventWeight(). In addition, the TTree weight; is taken into account. Finally, one starts the training with; TMultiLayerPerceptron::Train(Int_t nepoch, Option_t* options). The; first argument is the number of epochs while option is a string that; can contain: ""text"" (simple text output) , ""graph""; (evoluting graphical training curves), ""update=X"" (step for; the text/graph output update) or ""+"" (will skip the; randomisation and start from the previous values). All combinations; are available. Example:; ~~~ {.cpp}; net.Train(100,""text, graph, update=10"");; ~~~. When the neural net is trained, it can be used; directly ( TMultiLayerPerceptron::Evaluate() ) or exported to a; standalone C++ code ( TMultiLayerPerceptron::Export() ). Finally, note that even if this implementation is inspired from the mlpfit code,; the feature lists are not exactly matching:. - mlpfit hybrid learning method is not implemented; - output neurons can be normalized, this is not the case for mlpfit; - the neural net is exported in C++, FORTRAN or PYTHON; - the drawResult() method allows a fast check of the learning procedure. In addition, the paw version of mlpfit had additional limitations on the number of; neurons, hidden layers and inputs/outputs that does not apply to TMultiLayerPerceptron.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:9289,layers,layers,9289,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['layers'],['layers']
Modifiability,"e also called using invoke wrappers; /// and thus JS / try-catch. JS longjmp() function also sets some variables so; /// we can check / whether a longjmp occurred from wasm code. Each block with a; /// function call that might longjmp is also split up after the longjmp call.; /// After the longjmp call, we check whether a longjmp occurred, and if it did,; /// which setjmp it corresponds to, and jump to the right post-setjmp block.; /// We assume setjmp-longjmp handling always run after EH handling, which means; /// we don't expect any exception-related instructions when SjLj runs.; /// FIXME Currently this scheme does not support indirect call of setjmp,; /// because of the limitation of the scheme itself. fastcomp does not support it; /// either.; ///; /// In detail, this pass does following things:; ///; /// 1) Assumes the existence of global variables: __THREW__, __threwValue; /// __THREW__ and __threwValue are defined in compiler-rt in Emscripten.; /// These variables are used for both exceptions and setjmp/longjmps.; /// __THREW__ indicates whether an exception or a longjmp occurred or not. 0; /// means nothing occurred, 1 means an exception occurred, and other numbers; /// mean a longjmp occurred. In the case of longjmp, __THREW__ variable; /// indicates the corresponding setjmp buffer the longjmp corresponds to.; /// __threwValue is 0 for exceptions, and the argument to longjmp in case of; /// longjmp.; ///; /// * Emscripten exception handling; ///; /// 2) We assume the existence of setThrew and setTempRet0/getTempRet0 functions; /// at link time. setThrew exists in Emscripten's compiler-rt:; ///; /// void setThrew(uintptr_t threw, int value) {; /// if (__THREW__ == 0) {; /// __THREW__ = threw;; /// __threwValue = value;; /// }; /// }; //; /// setTempRet0 is called from __cxa_find_matching_catch() in JS glue code.; /// In exception handling, getTempRet0 indicates the type of an exception; /// caught, and in setjmp/longjmp, it means the second argument to longj",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:2534,variab,variables,2534,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,1,['variab'],['variables']
Modifiability,"e concept of a \c Split, which is a whitespace range that signifies; /// a position of the content of a token where a reformatting might be done.; ///; /// Operating with splits is divided into two operations:; /// - getSplit, for finding a split starting at a position,; /// - insertBreak, for executing the split using a whitespace manager.; ///; /// There is a pair of operations that are used to compress a long whitespace; /// range with a single space if that will bring the line length under the; /// column limit:; /// - getLineLengthAfterCompression, for calculating the size in columns of the; /// line after a whitespace range has been compressed, and; /// - compressWhitespace, for executing the whitespace compression using a; /// whitespace manager; note that the compressed whitespace may be in the; /// middle of the original line and of the reformatted line.; ///; /// For tokens where the whitespace before each line needs to be also; /// reformatted, for example for tokens supporting reflow, there are analogous; /// operations that might be executed before the main line breaking occurs:; /// - getReflowSplit, for finding a split such that the content preceding it; /// needs to be specially reflown,; /// - reflow, for executing the split using a whitespace manager,; /// - introducesBreakBefore, for checking if reformatting the beginning; /// of the content introduces a line break before it,; /// - adaptStartOfLine, for executing the reflow using a whitespace; /// manager.; ///; /// For tokens that require the whitespace after the last line to be; /// reformatted, for example in multiline jsdoc comments that require the; /// trailing '*/' to be on a line of itself, there are analogous operations; /// that might be executed after the last line has been reformatted:; /// - getSplitAfterLastLine, for finding a split after the last line that needs; /// to be reflown,; /// - replaceWhitespaceAfterLastLine, for executing the reflow using a; /// whitespace manager.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/BreakableToken.h:2328,adapt,adaptStartOfLine,2328,interpreter/llvm-project/clang/lib/Format/BreakableToken.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/BreakableToken.h,1,['adapt'],['adaptStartOfLine']
Modifiability,"e file output; it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript. Alternatively, you can call at the top of your script `gSytle->SetCanvasPreferGL();`.; Or if you prefer to activate GL for a single canvas `c`, then use `c->SetSupportGL(true);`. \anchor ATTLINE2; ## Line Width; The line width is expressed in pixel units.; The line width of any class inheriting from `TAttLine` can; be changed using the method `SetLineWidth` and retrieved using the; method `GetLineWidth`.; The following picture shows the line widths from 1 to 10 pixels. Begin_Macro; {; TCanvas *Lw = new TCanvas(""Lw"",""test"",500,200);; TText t;; t.SetTextAlign(32);; t.SetTextSize(0.08);; Int_t i=1;; for (float s=0.1; s<1.0 ; s+=0.092) {; TLine *lh = new TLine(0.15,s,.85,s);; lh->SetLineWidth(i);; t.DrawText(0.1,s,Form(""%d"",i++));; lh->Draw();; }; }; End_Macro. \anchor ATTLINE3; ## Line Style; Line styles are identified via integer numbers. The line style of any class; inheriting from `TAttLine` can be changed using the method; `SetLineStyle` and retrieved using the method `GetLineStyle`. The first 10 line styles are predefined as shown on the following picture:. Begin_Macro; {; TCanvas *Ls = new TCanvas(""Ls"",""test"",500,200);; TText t;; t.SetTextAlign(32);; t.SetTextSize(0.08);; Int_t i=1;; for (float s=0.1; s<1.0 ; s+=0.092) {; TLine *lh = new TLine(0.15,s,.85,s);; lh->SetLineStyle(i);; lh->SetLineWidth(3);; t.DrawText(0.1,s,Form(""%d"",i++));; lh->Draw();; }; }; End_Macro. Some line styles can be accessed via the following enum:. ~~~ {.cpp}; kSolid = 1; kDashed = 2; kDotted = 3; kDashDotted = 4; ~~~. Additional line styles can be defined using `TStyle::SetLineStyleString`.; For example the line style number 11 can be defined as follow:; ~~~ {.cpp}; gStyle->SetLineStyleString(11,""400 200"");; ~~~; Existing line styles (1 to 10) can be redefined using the same method.; */; ////////////////////////////////////////////////////////////////////////////////; /// AttLine default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttLine.cxx:2277,inherit,inheriting,2277,core/base/src/TAttLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttLine.cxx,1,['inherit'],['inheriting']
Modifiability,"e getVal(); method. RooAbsPdf manages the entire normalization logic of each PDF with; the help of a RooRealIntegral object, which coordinates the integration; of a given choice of normalization. By default, RooRealIntegral will; perform an entirely numeric integration of all dependents. However,; PDFs can advertise one or more (partial) analytical integrals of; their function, and these will be used by RooRealIntegral, if it; determines that this is safe (i.e., no hidden Jacobian terms,; multiplication with other PDFs that have one or more dependents in; common, etc). #### Implementing analytical integrals; To implement analytical integrals, two functions must be implemented. First,. ```; Int_t getAnalyticalIntegral(const RooArgSet& integSet, RooArgSet& anaIntSet); ```; should return the analytical integrals that are supported. `integSet`; is the set of dependents for which integration is requested. The; function should copy the subset of dependents it can analytically; integrate to `anaIntSet`, and return a unique identification code for; this integration configuration. If no integration can be; performed, zero should be returned. Second,. ```; double analyticalIntegral(Int_t code); ```. implements the actual analytical integral(s) advertised by; `getAnalyticalIntegral()`. This function will only be called with; codes returned by `getAnalyticalIntegral()`, except code zero. The integration range for each dependent to be integrated can; be obtained from the dependent's proxy functions `min()` and; `max()`. Never call these proxy functions for any proxy not known to; be a dependent via the integration code. Doing so may be; ill-defined, e.g., in case the proxy holds a function, and will; trigger an assert. Integrated category dependents should always be; summed over all of their states. ### Direct generation of observables. Distributions for any PDF can be generated with the accept/reject method,; but for certain PDFs, more efficient methods may be implemented. To; i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:3643,config,configuration,3643,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['config'],['configuration']
Modifiability,"e given in ascending order.; /// option is a character string to specify options; /// ""D"" Put out a line of ""Debug"" printout; /// ""M"" Return the Maximum Kolmogorov distance instead of prob; ///; /// ### Output:; /// The returned value prob is a calculated confidence level which gives a; /// statistical test for compatibility of a and b.; /// Values of prob close to zero are taken as indicating a small probability; /// of compatibility. For two point sets drawn randomly from the same parent; /// distribution, the value of prob should be uniformly distributed between; /// zero and one.; /// in case of error the function return -1; /// If the 2 sets have a different number of points, the minimum of; /// the two sets is used.; ///; /// ### Method:; /// The Kolmogorov test is used. The test statistic is the maximum deviation; /// between the two integrated distribution functions, multiplied by the; /// normalizing factor (rdmax*sqrt(na*nb/(na+nb)).; ///; /// Code adapted by Rene Brun from CERNLIB routine TKOLMO (Fred James); /// (W.T. Eadie, D. Drijard, F.E. James, M. Roos and B. Sadoulet,; /// Statistical Methods in Experimental Physics, (North-Holland,; /// Amsterdam 1971) 269-271); ///; /// ### Method Improvement by Jason A Detwiler (JADetwiler@lbl.gov); ///; /// The nuts-and-bolts of the TMath::KolmogorovTest() algorithm is a for-loop; /// over the two sorted arrays a and b representing empirical distribution; /// functions. The for-loop handles 3 cases: when the next points to be; /// evaluated satisfy a>b, a<b, or a=b:; ///; /// ~~~ {.cpp}; /// for (Int_t i=0;i<na+nb;i++) {; /// if (a[ia-1] < b[ib-1]) {; /// rdiff -= sa;; /// ia++;; /// if (ia > na) {ok = kTRUE; break;}; /// } else if (a[ia-1] > b[ib-1]) {; /// rdiff += sb;; /// ib++;; /// if (ib > nb) {ok = kTRUE; break;}; /// } else {; /// rdiff += sb - sa;; /// ia++;; /// ib++;; /// if (ia > na) {ok = kTRUE; break;}; /// if (ib > nb) {ok = kTRUE; break;}; /// }; /// rdmax = TMath::Max(rdmax,TMath::Abs(rdiff));; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:1419,adapt,adapted,1419,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['adapt'],['adapted']
Modifiability,"e html geom_frameexp.jpg. - 3 - bomb in radial spherical coordinate : TGeoManager::SetBombR(). Volumes themselves support different visualization settings :; - TGeoVolume::SetVisibility() : set volume visibility.; - TGeoVolume::VisibleDaughters() : set daughters visibility.; All these actions automatically updates the current view if any. ### Checking the geometry. Several checking methods are accessible from the volume context menu. They; generally apply only to the visible parts of the drawn geometry in order to; ease geometry checking, and their implementation is in the TGeoChecker class; from the painting package. #### Checking a given point.; Can be called from TGeoManager::CheckPoint(Double_t x, Double_t y, Double_t z).; This method is drawing the daughters of the volume containing the point one; level down, printing the path to the deepest physical node holding this point.; It also computes the closest distance to any boundary. The point will be drawn; in red, as well as a sphere having this closest distance as radius. In case a; non-zero distance is given by the user as fifth argument of CheckPoint, this; distance will be used as radius of the safety sphere. \image html geom_checkpoint.jpg. #### Shooting random points.; Can be called from TGeoVolume::RandomPoints() (context menu function) and; it will draw this volume with current visualization settings. Random points; are generated in the bounding box of the top drawn volume. The points are; classified and drawn with the color of their deepest container. Only points; in visible nodes will be drawn. \image html geom_random1.jpg. #### Raytracing.; Can be called from TGeoVolume::RandomRays() (context menu of volumes) and; will shoot rays from a given point in the local reference frame with random; directions. The intersections with displayed nodes will appear as segments; having the color of the touched node. Drawn geometry will be then made invisible; in order to enhance rays. \image html geom_random2.jpg; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:11903,enhance,enhance,11903,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['enhance'],['enhance']
Modifiability,"e https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements straight-line strength reduction (SLSR). Unlike loop; // strength reduction, this algorithm is designed to reduce arithmetic; // redundancy in straight-line code instead of loops. It has proven to be; // effective in simplifying arithmetic statements derived from an unrolled loop.; // It can also simplify the logic of SeparateConstOffsetFromGEP.; //; // There are many optimizations we can perform in the domain of SLSR. This file; // for now contains only an initial step. Specifically, we look for strength; // reduction candidates in the following forms:; //; // Form 1: B + i * S; // Form 2: (B + i) * S; // Form 3: &B[i * S]; //; // where S is an integer variable, and i is a constant integer. If we found two; // candidates S1 and S2 in the same form and S1 dominates S2, we may rewrite S2; // in a simpler way with respect to S1. For example,; //; // S1: X = B + i * S; // S2: Y = B + i' * S => X + (i' - i) * S; //; // S1: X = (B + i) * S; // S2: Y = (B + i') * S => X + (i' - i) * S; //; // S1: X = &B[i * S]; // S2: Y = &B[i' * S] => &X[(i' - i) * S]; //; // Note: (i' - i) * S is folded to the extent possible.; //; // This rewriting is in general a good idea. The code patterns we focus on; // usually come from loop unrolling, so (i' - i) * S is likely the same; // across iterations and can be reused. When that happens, the optimized form; // takes only one add starting from the second iteration.; //; // When such rewriting is possible, we call S1 a ""basis"" of S2. When S2 has; // multiple bases, we choose to rewrite S2 with respect to its ""immediate""; // basis, the basis that is the closest ancestor in the dominator tree.; //; // TODO:; //; // - Floating point arithmetics when fast math is enabled.; //; // - SLSR may decrease ILP at the archite",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp:1191,rewrite,rewrite,1191,interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp,1,['rewrite'],['rewrite']
Modifiability,"e integer; // is passed through a specific SGPR, thus works with indirect calls.; // Second, each kernel allocates LDS variables independent of other kernels and; // writes the addresses it chose for each variable into an array in consistent; // order. If the kernel does not allocate a given variable, it writes undef to; // the corresponding array location. These arrays are written to a constant; // table in the order matching the kernel unique integer identifier.; // Third, uses from non-kernel functions are replaced with a table lookup using; // the intrinsic function to find the address of the variable.; //; // ""Kernel"" lowering is only applicable for variables that are unambiguously; // reachable from exactly one kernel. For those cases, accesses to the variable; // can be lowered to ConstantExpr address of a struct instance specific to that; // one kernel. This is zero cost in space and in compute. It will raise a fatal; // error on any variable that might be reachable from multiple kernels and is; // thus most easily used as part of the hybrid lowering strategy.; //; // Hybrid lowering is a mixture of the above. It uses the zero cost kernel; // lowering where it can. It lowers the variable accessed by the greatest; // number of kernels using the module strategy as that is free for the first; // variable. Any futher variables that can be lowered with the module strategy; // without incurring LDS memory overhead are. The remaining ones are lowered; // via table.; //; // Consequences; // - No heuristics or user controlled magic numbers, hybrid is the right choice; // - Kernels that don't use functions (or have had them all inlined) are not; // affected by any lowering for kernels that do.; // - Kernels that don't make indirect function calls are not affected by those; // that do.; // - Variables which are used by lots of kernels, e.g. those injected by a; // language runtime in most kernels, are expected to have no overhead; // - Implementations that instantiate ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:5268,variab,variable,5268,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variable']
Modifiability,"e into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both regions correct their interpretation such that N_expected refers to the full range,; ## it is interpreted easily, and consistent in both regions.; ##; ## This requires that the likelihood model is extended using RooAddPdf in the; ## form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \authors Stephan Hageboeck, Wouter Verkerke",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:1526,extend,extended,1526,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,3,['extend'],['extended']
Modifiability,"e is deleted. \anchor addingacolumnoftclonesarray; ## Add a column holding TClonesArray instances. *It is recommended to use STL containers instead of TClonesArrays*. ~~~ {.cpp}; // clonesarray is the address of a pointer to a TClonesArray.; auto branch = tree.Branch(branchname,clonesarray, bufsize, splitlevel); ~~~; The TClonesArray is a direct access list of objects of the same class.; For example, if the TClonesArray is an array of TTrack objects,; this function will create one subbranch for each data member of; the object TTrack. \anchor fillthetree; ## Fill the Tree. A TTree instance is filled with the invocation of the TTree::Fill method:; ~~~ {.cpp}; tree.Fill(); ~~~; Upon its invocation, a loop on all defined branches takes place that for each branch invokes; the TBranch::Fill method. \anchor addcoltoexistingtree; ## Add a column to an already existing Tree. You may want to add a branch to an existing tree. For example,; if one variable in the tree was computed with a certain algorithm,; you may want to try another algorithm and compare the results.; One solution is to add a new branch, fill it, and save the tree.; The code below adds a simple branch to an existing tree.; Note the kOverwrite option in the Write method, it overwrites the; existing tree. If it is not specified, two copies of the tree headers; are saved.; ~~~ {.cpp}; void tree3AddBranch() {; TFile f(""tree3.root"", ""update"");. Float_t new_v;; auto t3 = f->Get<TTree>(""t3"");; auto newBranch = t3->Branch(""new_v"", &new_v, ""new_v/F"");. Long64_t nentries = t3->GetEntries(); // read the number of entries in the t3. for (Long64_t i = 0; i < nentries; i++) {; new_v = gRandom->Gaus(0, 1);; newBranch->Fill();; }. t3->Write("""", TObject::kOverwrite); // save only the new version of the tree; }; ~~~; It is not always possible to add branches to existing datasets stored in TFiles: for example,; these files might not be writeable, just readable. In addition, modifying in place a TTree; causes a new TTree instance",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:10674,variab,variable,10674,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variable']
Modifiability,"e it as `Called`; // because not calling tracked parameter on all of the paths is an error; // on its own. For these reasons, we need to have a separate kind,; // `MaybeCalled`, and change `Called` to `DefinitelyCalled` to avoid; // confusion.; //; // Two violations of calling parameter more than once and not calling it on; // every path are not, however, mutually exclusive. In situations where both; // violations take place, we prefer to report ONLY double call. It's always; // harder to pinpoint a bug that has arisen when a user neglects to take the; // right action (and therefore, no action is taken), than when a user takes; // the wrong action. And, in order to remember that we already reported; // a double call, we need another kind: `Reported`.; //; // Our analysis is intra-procedural and, while in the perfect world,; // developers only use tracked parameters to call them, in the real world,; // the picture might be different. Parameters can be stored in global; // variables or leaked into other functions that we know nothing about.; // We try to be lenient and trust users. Another kind `Escaped` reflects; // such situations. We don't know if it gets called there or not, but we; // should always think of `Escaped` as the best possible option.; //; // Some of the paths in the analyzed functions might end with a call; // to noreturn functions. Such paths are not required to have parameter; // calls and we want to track that. For the purposes of better diagnostics,; // we don't want to reuse `Escaped` and, thus, have another kind `NoReturn`.; //; // Additionally, we have `NotVisited` kind that tells us nothing about; // a tracked parameter, but is used for tracking analyzed (aka visited); // basic blocks.; //; // If we consider `|` to be a JOIN operation of two kinds coming from; // two different paths, the following properties must hold:; //; // 1. for any Kind K: K | K == K; // Joining two identical kinds should result in the same kind.; //; // 2. for any Kind ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CalledOnceCheck.cpp:1657,variab,variables,1657,interpreter/llvm-project/clang/lib/Analysis/CalledOnceCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CalledOnceCheck.cpp,1,['variab'],['variables']
Modifiability,"e known ->; //; // Low address High address; //; // <--- stack growth; //; //; // - In any circumstances, the outgoing function arguments are always accessi-; // ble using the SP, and the incoming arguments are accessible using the FP.; // - If the local objects are not aligned, they can always be accessed using; // the FP.; // - If there are no variable-sized objects, the local objects can always be; // accessed using the SP, regardless whether they are aligned or not. (The; // alignment padding will be at the bottom of the stack (highest address),; // and so the offset with respect to the SP will be known at the compile-; // -time.); //; // The only complication occurs if there are both, local aligned objects, and; // dynamically allocated (variable-sized) objects. The alignment pad will be; // placed between the FP and the local objects, thus preventing the use of the; // FP to access the local objects. At the same time, the variable-sized objects; // will be between the SP and the local objects, thus introducing an unknown; // distance from the SP to the locals.; //; // To avoid this problem, a new register is created that holds the aligned; // address of the bottom of the stack, referred in the sources as AP (aligned; // pointer). The AP will be equal to ""FP-p"", where ""p"" is the smallest pad; // that aligns AP to the required boundary (a maximum of the alignments of; // all stack objects, fixed- and variable-sized). All local objects[1] will; // then use AP as the base pointer.; // [1] The exception is with ""fixed"" stack objects. ""Fixed"" stack objects get; // their name from being allocated at fixed locations on the stack, relative; // to the FP. In the presence of dynamic allocation and local alignment, such; // objects can only be accessed through the FP.; //; // Illustration of the AP:; // FP --+; // |; // ---------------+---------------------+-----+-----------------------++-+--; // Rest of the | Local stack objects | Pad | Fixed stack objects |LR|; // stack ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp:1492,variab,variable-sized,1492,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,1,['variab'],['variable-sized']
Modifiability,"e list of objects in memory.; When a file is closed, all histograms in memory associated with this file; are automatically deleted. \anchor labelling-axis; ### Labelling axes. Axis titles can be specified in the title argument of the constructor.; They must be separated by "";"":; ~~~ {.cpp}; TH1F* h=new TH1F(""h"", ""Histogram title;X Axis;Y Axis"", 100, 0, 1);; ~~~; The histogram title and the axis titles can be any TLatex string, and; are persisted if a histogram is written to a file. Any title can be omitted:; ~~~ {.cpp}; TH1F* h=new TH1F(""h"", ""Histogram title;;Y Axis"", 100, 0, 1);; TH1F* h=new TH1F(""h"", "";;Y Axis"", 100, 0, 1);; ~~~; The method SetTitle() has the same syntax:; ~~~ {.cpp}; h->SetTitle(""Histogram title;Another X title Axis"");; ~~~; Alternatively, the title of each axis can be set directly:; ~~~ {.cpp}; h->GetXaxis()->SetTitle(""X axis title"");; h->GetYaxis()->SetTitle(""Y axis title"");; ~~~; For bin labels see \ref binning. \anchor binning; ## Binning. \anchor fix-var; ### Fix or variable bin size. All histogram types support either fix or variable bin sizes.; 2-D histograms may have fix size bins along X and variable size bins; along Y or vice-versa. The functions to fill, manipulate, draw or access; histograms are identical in both cases. Each histogram always contains 3 axis objects of type TAxis: fXaxis, fYaxis and fZaxis.; To access the axis parameters, use:; ~~~ {.cpp}; TAxis *xaxis = h->GetXaxis(); etc.; Double_t binCenter = xaxis->GetBinCenter(bin), etc.; ~~~; See class TAxis for a description of all the access functions.; The axis range is always stored internally in double precision. \anchor convention; ### Convention for numbering bins. For all histogram types: nbins, xlow, xup; ~~~ {.cpp}; bin = 0; underflow bin; bin = 1; first bin with low-edge xlow INCLUDED; bin = nbins; last bin with upper-edge xup EXCLUDED; bin = nbins+1; overflow bin; ~~~; In case of 2-D or 3-D histograms, a ""global bin"" number is defined.; For example, assuming a 3-D hist",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:7352,variab,variable,7352,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variable']
Modifiability,"e names like `<BaseClass>/PX0_<PluginClass>.C`,; e.g. TSQLServer/P20_TMySQLServer.C, to allow easy sorting and grouping.; If the BaseClass is in a namespace the directory must have the name; NameSpace@@BaseClass as `:` is a reserved pathname character on some; operating systems. Macros not beginning with 'P' and ending with "".C""; are ignored. These macros typically look like:; ~~~ {.cpp}; void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*)"");; }; ~~~; Plugin handlers can also be defined via resources in the .rootrc; file. Although now deprecated this method still works for backward; compatibility, e.g.:; ~~~ {.cpp}; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""<constructor>""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""<constructor>""; Plugin.TVirtualFitter: * TFitter Minuit ""TFitter(Int_t)""; ~~~; Where the + in front of Plugin.TSQLServer says that it extends the; existing definition of TSQLServer, useful when there is more than; one plugin that can extend the same base class. The ""<constructor>""; should be the constructor or a static method that generates an; instance of the specified class. Global methods should start with; ""::"" in their name, like ""::CreateFitter()"".; Instead of being a shared library a plugin can also be a CINT; script, so instead of libDialog.so one can have Dialog.C.; The * is a placeholder in case there is no need for a URI to; differentiate between different plugins for the same base class.; For the default plugins see $ROOTSYS/etc/system.rootrc. Plugin handlers can also be registered at run time, e.g.:; ~~~ {.cpp}; gPluginMgr->AddHandler(""TSQLServer"", ""^sqlite:"",; ""TSQLiteServer"", ""RSQLite"",; ""TSQLiteServer(const char*,const char*,const char*)"");; ~~~; A list of currently defined handlers can be printed using:; ~~~ {.cpp}; gPluginMgr->Print(); // use option=""a"" to see ctors; ~~~; The use of the plugin library manager removes all textual references; to hard-c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:2377,extend,extends,2377,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,3,"['extend', 'plugin']","['extend', 'extends', 'plugin']"
Modifiability,"e names. The (optional) file LinkDef.h looks like:. #ifdef __CLING__. #pragma link off all globals;; #pragma link off all classes;; #pragma link off all functions;. #pragma link C++ class TAxis;; #pragma link C++ class TAttAxis-;; #pragma link C++ class TArrayC-!;; #pragma link C++ class AliEvent+;. #pragma link C++ function StrDup;; #pragma link C++ function operator+(const TString&,const TString&);. #pragma link C++ global gROOT;; #pragma link C++ global gEnv;. #pragma link C++ enum EMessageTypes;. #endif. This file tells rootcling which classes will be persisted on disk and what; entities will trigger automatic load of the shared library which contains; it. A trailing - in the class name tells rootcling to not generate the; Streamer() method. This is necessary for those classes that need a; customized Streamer() method. A trailing ! in the class name tells rootcling; to not generate the operator>>(TBuffer &b, MyClass *&obj) function. This is; necessary to be able to write pointers to objects of classes not inheriting; from TObject. See for an example the source of the TArrayF class.; If the class contains a ClassDef macro, a trailing + in the class; name tells rootcling to generate an automatic Streamer(), i.e. a; streamer that let ROOT do automatic schema evolution. Otherwise, a; trailing + in the class name tells rootcling to generate a ShowMember; function and a Shadow Class. The + option is mutually exclusive with; the - option. For legacy reasons it is not yet the default.; When the linkdef file is not specified a default version exporting; the classes with the names equal to the include files minus the .h; is generated. The default constructor used by the ROOT I/O can be customized by; using the rootcling pragma:; #pragma link C++ ioctortype UserClass;; For example, with this pragma and a class named MyClass,; this method will called the first of the following 3; constructors which exists and is public:; MyClass(UserClass*);; MyClass(TRootIOCtor*);; MyClass",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling-argparse.py:1559,inherit,inheriting,1559,core/dictgen/src/rootcling-argparse.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling-argparse.py,1,['inherit'],['inheriting']
Modifiability,"e noise (10% of the amplitude of small peaks).; ///; /// \image html TSpectrum_Deconvolution_wide2.jpg Fig. 13 Testing example of synthetic spectrum composed of 5 Gaussians with added noise.; ///; /// | Peak # | Position | Height | Area |; /// |----------|----------|--------|--------|; /// | 1 | 50 | 500 | 10159 |; /// | 2 | 70 | 3000 | 60957 |; /// | 3 | 80 | 1000 | 20319 |; /// | 4 | 100 | 5000 | 101596 |; /// | 5 | 110 | 500 | 10159 |; ///; /// Table 1 Positions, heights and areas of peaks in the spectrum shown in Fig. 13.; ///; /// In ideal case, we should obtain the result given in Fig. 14. The areas of; /// the Gaussian components of the spectrum are concentrated completely to; /// delta-functions. When solving the overdetermined system of linear equations; /// with data from Fig. 13 in the sense of minimum least squares criterion; /// without any regularisation we obtain the result with large oscillations; /// (Fig. 15). From mathematical point of view, it is the optimal solution in; /// the unconstrained space of independent variables. From physical point of; /// view we are interested only in a meaningful solution. Therefore, we have to; /// employ regularisation techniques (e.g. Gold deconvolution) and/or to; /// confine the space of allowed solutions to subspace of positive solutions.; ///; /// \image html TSpectrum_Deconvolution_wide3.jpg Fig. 14 The same spectrum like in Fig. 13, outlined bars show the contents of present components (peaks).; /// \image html TSpectrum_Deconvolution_wide4.jpg Fig. 15 Least squares solution of the system of linear equations without regularisation.; ///; /// ### Example 9 - script Deconvolution_wide.C; ///; /// When we employ Gold deconvolution algorithm we obtain the result given in; /// Fig. 16. One can observe that the resulting spectrum is smooth. On the; /// other hand the method is not able to decompose completely the peaks in the; /// spectrum.; ///; /// Example of Gold deconvolution for closely positioned wide peak",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:6542,variab,variables,6542,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['variab'],['variables']
Modifiability,"e only argument that must be provided, @argv. @argv; * should be a NULL-terminated array of strings, to be passed as the; * argument vector for the child. The first string in @argv is of; * course the name of the program to execute. By default, the name of; * the program must be a full path; the PATH shell variable will only; * be searched if you pass the %G_SPAWN_SEARCH_PATH flag.; *; * @envp is a NULL-terminated array of strings, where each string; * has the form <literal>KEY=VALUE</literal>. This will become; * the child's environment. If @envp is NULL, the child inherits its; * parent's environment.; *; * @flags should be the bitwise OR of any flags you want to affect the; * function's behavior. The %G_SPAWN_DO_NOT_REAP_CHILD means that the; * child will not be automatically reaped; you must call waitpid() or; * handle SIGCHLD yourself, or the child will become a zombie.; * %G_SPAWN_LEAVE_DESCRIPTORS_OPEN means that the parent's open file; * descriptors will be inherited by the child; otherwise all; * descriptors except stdin/stdout/stderr will be closed before; * calling exec() in the child. %G_SPAWN_SEARCH_PATH means that; * <literal>argv[0]</literal> need not be an absolute path, it; * will be looked for in the user's PATH. %G_SPAWN_STDOUT_TO_DEV_NULL; * means that the child's standad output will be discarded, instead; * of going to the same location as the parent's standard output.; * %G_SPAWN_STDERR_TO_DEV_NULL means that the child's standard error; * will be discarded. %G_SPAWN_CHILD_INHERITS_STDIN means that; * the child will inherit the parent's standard input (by default,; * the child's standard input is attached to /dev/null).; * %G_SPAWN_FILE_AND_ARGV_ZERO means that the first element of @argv is; * the file to execute, while the remaining elements are the; * actual argument vector to pass to the file. Normally; * g_spawn_async_with_pipes() uses @argv[0] as the file to execute, and; * passes all of @argv to the child.; *; * @child_setup and @user_data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c:1849,inherit,inherited,1849,graf2d/win32gdk/gdk/src/glib/gspawn.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c,1,['inherit'],['inherited']
Modifiability,"e only argument that must be provided, @argv. @argv; * should be a NULL-terminated array of strings, to be passed as the; * argument vector for the child. The first string in @argv is of; * course the name of the program to execute. By default, the name of; * the program must be a full path; the PATH shell variable will only; * be searched if you pass the %G_SPAWN_SEARCH_PATH flag.; *; * @envp is a NULL-terminated array of strings, where each string; * has the form <literal>KEY=VALUE</literal>. This will become; * the child's environment. If @envp is NULL, the child inherits its; * parent's environment.; *; * @flags should be the bitwise OR of any flags you want to affect the; * function's behavior. The %G_SPAWN_DO_NOT_REAP_CHILD means that the; * child will not be automatically reaped; you must call waitpid() or; * handle SIGCHLD yourself, or the child will become a zombie.; * %G_SPAWN_LEAVE_DESCRIPTORS_OPEN means that the parent's open file; * descriptors will be inherited by the child; otherwise all; * descriptors except stdin/stdout/stderr will be closed before; * calling exec() in the child. %G_SPAWN_SEARCH_PATH means that; * <literal>argv[0]</literal> need not be an absolute path, it; * will be looked for in the user's PATH. %G_SPAWN_STDOUT_TO_DEV_NULL; * means that the child's standad output will be discarded, instead; * of going to the same location as the parent's standard output.; * %G_SPAWN_STDERR_TO_DEV_NULL means that the child's standard error; * will be discarded. %G_SPAWN_CHILD_INHERITS_STDIN means that; * the child will inherit the parent's standard input (by default,; * the child's standard input is attached to /dev/null).; *; * @child_setup and @user_data are a function and user data to be; * called in the child after GLib has performed all the setup it plans; * to perform (including creating pipes, closing file descriptors,; * etc.) but before calling exec(). That is, @child_setup is called; * just before calling exec() in the child. Obviously ac",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:1849,inherit,inherited,1849,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,1,['inherit'],['inherited']
Modifiability,"e similar pass implemented in X86SpeculativeLoadHardening.cpp, as; // the instruction set characteristics result in different trade-offs.; // - The speculation hardening is done after register allocation. With a; // relative abundance of registers, one register is reserved (X16) to be; // the taint register. X16 is expected to not clash with other register; // reservation mechanisms with very high probability because:; // . The AArch64 ABI doesn't guarantee X16 to be retained across any call.; // . The only way to request X16 to be used as a programmer is through; // inline assembly. In the rare case a function explicitly demands to; // use X16/W16, this pass falls back to hardening against speculation; // by inserting a DSB SYS/ISB barrier pair which will prevent control; // flow speculation.; // - It is easy to insert mask operations at this late stage as we have; // mask operations available that don't set flags.; // - The taint variable contains all-ones when no miss-speculation is detected,; // and contains all-zeros when miss-speculation is detected. Therefore, when; // masking, an AND instruction (which only changes the register to be masked,; // no other side effects) can easily be inserted anywhere that's needed.; // - The tracking of miss-speculation is done by using a data-flow conditional; // select instruction (CSEL) to evaluate the flags that were also used to; // make conditional branch direction decisions. Speculation of the CSEL; // instruction can be limited with a CSDB instruction - so the combination of; // CSEL + a later CSDB gives the guarantee that the flags as used in the CSEL; // aren't speculated. When conditional branch direction gets miss-speculated,; // the semantics of the inserted CSEL instruction is such that the taint; // register will contain all zero bits.; // One key requirement for this to work is that the conditional branch is; // followed by an execution of the CSEL instruction, where the CSEL; // instruction needs to use the sa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp:2354,variab,variable,2354,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SpeculationHardening.cpp,1,['variab'],['variable']
Modifiability,"e size, held by the `myvar` column , with values between 0 and 16: ""myArr[myvar]/d[0,10]""; - The `myvar` column, which holds the variable size, **MUST** be an `Int_t` (/I). - If the address points to a single numerical variable, the leaflist is optional:; ~~~ {.cpp}; int value;; tree->Branch(branchname, &value);; ~~~; - If the address points to more than one numerical variable, we strongly recommend; that the variable be sorted in decreasing order of size. Any other order will; result in a non-portable TTree (i.e. you will not be able to read it back on a; platform with a different padding strategy).; We recommend to persistify objects rather than composite leaflists.; - In case of the truncated floating point types (Float16_t and Double32_t) you can; furthermore specify the range in the style [xmin,xmax] or [xmin,xmax,nbits] after; the type character. For example, for storing a variable size array `myArr` of; `Double32_t` with values within a range of `[0, 2*pi]` and the size of which is stored; in an `Int_t` (/I) branch called `myArrSize`, the syntax for the `leaflist` string would; be: `myArr[myArrSize]/d[0,twopi]`. Of course the number of bits could be specified,; the standard rules of opaque typedefs annotation are valid. For example, if only; 18 bits were sufficient, the syntax would become: `myArr[myArrSize]/d[0,twopi,18]`. \anchor addingacolumnofstl; ## Adding a column holding STL collection instances (e.g. std::vector, std::list, std::unordered_map). ~~~ {.cpp}; auto branch = tree.Branch( branchname, STLcollection, buffsize, splitlevel);; ~~~; STLcollection is the address of a pointer to std::vector, std::list,; std::deque, std::set or std::multiset containing pointers to objects.; If the splitlevel is a value bigger than 100 (TTree::kSplitCollectionOfPointers); then the collection will be written in split mode, e.g. if it contains objects of; any types deriving from TTrack this function will sort the objects; based on their type and store them in separate ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:6167,variab,variable,6167,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variable']
Modifiability,"e that the performance in terms of speed and stability of RooFFTConvPdf is; /// vastly superior to that of RooNumConvPdf.; ///; /// An important feature of FFT convolutions is that the observable is assumed to be; /// cyclical. This is correct for cyclical observables such as angles,; /// but does not hold in general. For non-cyclical variables, wrap-around artifacts may be; /// encountered, *e.g.* if the PDF is zero at xMin and non-zero at xMax. A rising tail may appear at xMin.; /// This is inevitable when using FFTs. A distribution with 3 bins therefore looks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 are not equal, the FFT sees a cyclical function with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// The spillover or discontinuity can be reduced or eliminated by; /// introducing a buffer zone in the FFT calculation. If this feature is activated (on by default),; /// the sampling array for the FFT calculation is extended in both directions,; /// and padded with the lowest/highest bin.; /// Example:; /// ```; /// original: -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5; /// add buffer zones: U U -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5 O O; /// rotate: 0 +1 +2 +3 +4 +5 O O U U -5 -4 -3 -2 -1; /// ```; /// The buffer bins are stripped away when the FFT output values; /// are transferred back to the p.d.f cache. The default buffer size is 10% of the; /// observable domain size, and can be changed with the `setBufferFraction()` member function.; ///; /// The RooFFTConvPdf uses caching inherited from a RooAbsCachedPdf. If it is; /// evaluated for a particular value of x, the FFT and convolution is calculated; /// for all bins in the observable space for the given choice of parameters,; /// which are also stored in the cache. Subsequent evaluations for different values of the convolution observable and; /// identical parameters will be retrieved from the cache. If one or more; /// of the parameters change, the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:2351,extend,extended,2351,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,1,['extend'],['extended']
Modifiability,"e training. Training of a decision tree is the; process to define the ""cut criteria"" for each node. The training; starts with the root node. Here one takes the full training event; sample and selects the variable and corresponding cut value that gives; the best separation between signal and background at this stage. Using; this cut criterion, the sample is then divided into two subsamples, a; signal-like (right) and a background-like (left) sample. Two new nodes; are then created for each of the two sub-samples and they are; constructed using the same mechanism as described for the root; node. The devision is stopped once a certain node has reached either a; minimum number of events, or a minimum or maximum signal purity. These; leave nodes are then called ""signal"" or ""background"" if they contain; more signal respective background events from the training sample. ### Boosting:. The idea behind adaptive boosting (AdaBoost) is, that signal events; from the training sample, that end up in a background node; (and vice versa) are given a larger weight than events that are in; the correct leave node. This results in a re-weighed training event; sample, with which then a new decision tree can be developed.; The boosting can be applied several times (typically 100-500 times); and one ends up with a set of decision trees (a forest).; Gradient boosting works more like a function expansion approach, where; each tree corresponds to a summand. The parameters for each summand (tree); are determined by the minimization of a error function (binomial log-; likelihood for classification and Huber loss for regression).; A greedy algorithm is used, which means, that only one tree is modified; at a time, while the other trees stay fixed. ### Bagging:. In this particular variant of the Boosted Decision Trees the boosting; is not done on the basis of previous training results, but by a simple; stochastic re-sampling of the initial training event sample. ### Random Trees:. Similar to the ""R",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:3094,adapt,adaptive,3094,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['adapt'],['adaptive']
Modifiability,"e type are separated by a slash (/).; /// The variable type may be 0,1 or 2 characters. If no type is given,; /// the type of the variable is assumed to be the same as the previous; /// variable. If the first variable does not have a type, it is assumed; /// of type F by default. The list of currently supported types is given below:; /// - `C` : a character string terminated by the 0 character; /// - `B` : an 8 bit signed integer (`Char_t`); Treated as a character when in an array.; /// - `b` : an 8 bit unsigned integer (`UChar_t`); /// - `S` : a 16 bit signed integer (`Short_t`); /// - `s` : a 16 bit unsigned integer (`UShort_t`); /// - `I` : a 32 bit signed integer (`Int_t`); /// - `i` : a 32 bit unsigned integer (`UInt_t`); /// - `F` : a 32 bit floating point (`Float_t`); /// - `f` : a 24 bit floating point with truncated mantissa (`Float16_t`); /// - `D` : a 64 bit floating point (`Double_t`); /// - `d` : a 24 bit truncated floating point (`Double32_t`); /// - `L` : a 64 bit signed integer (`Long64_t`); /// - `l` : a 64 bit unsigned integer (`ULong64_t`); /// - `G` : a long signed integer, stored as 64 bit (`Long_t`); /// - `g` : a long unsigned integer, stored as 64 bit (`ULong_t`); /// - `O` : [the letter `o`, not a zero] a boolean (`bool`); ///; /// Arrays of values are supported with the following syntax:; /// - If leaf name has the form var[nelem], where nelem is alphanumeric, then; /// if nelem is a leaf name, it is used as the variable size of the array,; /// otherwise return 0.; /// The leaf referred to by nelem **MUST** be an int (/I),; /// - If leaf name has the form var[nelem], where nelem is a non-negative integer, then; /// it is used as the fixed size of the array.; /// - If leaf name has the form of a multi-dimensional array (e.g. var[nelem][nelem2]); /// where nelem and nelem2 are non-negative integer) then; /// it is used as a 2 dimensional array of fixed size.; /// - In case of the truncated floating point types (Float16_t and Double32_t) you c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2167,variab,variable,2167,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variable']
Modifiability,"e used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example - script Transform.c:; ///; /// \image html spectrumtransform_transform_image002.jpg Fig. 1 Original gamma-ray spectrum; /// \image html spectrumtransform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform; ///; /// #### Script:; /// Example to illustrate Transform function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Transform.C`; ///; /// ~~~ {.cpp}; /// #include <TSpectrum>; /// #include <TSpectrumTransform>; /// void Transform() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Transformed spectrum using Cosine transform"",nbins,xmin,xmax);; /// TFile *f = new TFile(""spectra/TSpectrum.root"");; /// h=(TH1F*) f->Get(""transform1;1"");; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1960,adapt,adaptive,1960,hist/spectrum/src/TSpectrumTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx,1,['adapt'],['adaptive']
Modifiability,"e, title, ...) :; pdfProxy(""pdfProxy"", ""Proxy holding a PDF"", this, thePdf) {; [ Extra checking here ... ]; }. // In .cxx: Accessing the proxy; RooAbsArg* absArg = pdfProxy.absArg();; RooAbsPdf* pdf = dynamic_cast<RooAbsPdf*>(absArg);; assert(pdf); // Manual type checking ...; pdf->fitTo(...);; ~~~; <td>; ~~~{.cpp}; // In .h: Declare member; RooTemplateProxy<RooAbsPdf> pdfProxy;. ClassDefOverride(MyPdf, 2); };. // In .cxx: Initialise proxy in constructor; // The program will not compile if ""thePdf"" is not a; // type deriving from RooAbsPdf; MyPdf::MyPdf(name, title, ...) :; pdfProxy(""pdfProxy"", ""Proxy holding a PDF"", this, thePdf) {. }. // In .cxx: Accessing the proxy. pdfProxy->fitTo(...);; ~~~; </table>. ### How to modernise old code. 1. Choose the proper template argument for the proxy.; - If a PDF is stored: `RooTemplateProxy<RooAbsPdf>`.; - If a real-valued object is stored: `RooTemplateProxy<RooAbsReal>`.; - If a category is stored: `RooTemplateProxy<RooCategory>`.; - If a variable is stored (i.e. one wants to be able to assign values to it): `RooTemplateProxy<RooRealVar>`; Other template arguments are possible, as long as they derive from RooAbsArg.; 2. Increment the class version of the owning class.; 3. Make sure that the right type is passed in the constructor of the proxy.; 4. Always use `proxy->` and `*proxy` to work with the stored object. No need to cast.; 5. **Only if necessary** If errors about missing symbols connected to RooTemplateProxy appear at link time,; a specific template instantiation for RooTemplateProxy is not yet in ROOT's dictionaries.; These two lines should be added to the LinkDef.h of the project:; ~~~{.cpp}; #pragma link C++ class RooTemplateProxy<RooMultiCategory>+;; #pragma read sourceClass=""RooCategoryProxy"" targetClass=""RooTemplateProxy<RooMultiCategory>""; ~~~; Replace `RooMultiCategory` by the proper type. If the proxy was holding a real-valued object, use `sourceClass=""RooRealProxy""`. The first line adds the proxy class to the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTemplateProxy.h:3146,variab,variable,3146,roofit/roofitcore/inc/RooTemplateProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTemplateProxy.h,1,['variab'],['variable']
Modifiability,"e-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function pass that initializes undef vector value to; // temporary pseudo instruction and remove it in expandpseudo pass to prevent; // register allocation resulting in a constraint violated result for vector; // instruction. It also rewrites the NoReg tied operand back to an; // IMPLICIT_DEF.; //; // RISC-V vector instruction has register overlapping constraint for certain; // instructions, and will cause illegal instruction trap if violated, we use; // early clobber to model this constraint, but it can't prevent register; // allocator allocated same or overlapped if the input register is undef value,; // so convert IMPLICIT_DEF to temporary pseudo instruction and remove it later; // could prevent that happen, it's not best way to resolve this, and it might; // change the order of program or increase the register pressure, so ideally we; // should model the constraint right, but before we model the constraint right,; // it's the only way to prevent that happen.; //; // When we enable the subregister liveness option, it will also trigger same; // issue due to the partial of register is undef. If we pseudoinit the whole; // register, then it will generate redundant COPY instruction. Currently, it; // will generate INSERT_SUBREG to make sure the whole register is occupied; // when program encounter operation that has early-clobber constraint.; //; //; // See also: https://github.com/llvm/llvm-project/issues/50157; //; // Additionally, this pass rewrites tied operands of vector instructions; // from NoReg to IMPLICIT_DEF. (Not that this is a non-overlapping set of; // operands to the above.) We use NoReg to side step a MachineCSE; // optimization quality problem but need to convert back before; // TwoAddressInstruction. See pr64282 for context.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVRVVInitUndef.cpp:1873,rewrite,rewrites,1873,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVRVVInitUndef.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVRVVInitUndef.cpp,1,['rewrite'],['rewrites']
Modifiability,"eader is used to compute the loop's trip; /// count. The instructions from BodyIP (at the Body block's first instruction,; /// excluding) until the Latch are also considered outside CanonicalLoopInfo's; /// control and thus can have side-effects. The body block is the single entry; /// point into the loop body, which may contain arbitrary control flow as long; /// as all control paths eventually branch to the Latch block.; ///; /// TODO: Consider adding another standardized BasicBlock between Body CFG and; /// Latch to guarantee that there is only a single edge to the latch. It would; /// make loop transformations easier to not needing to consider multiple; /// predecessors of the latch (See redirectAllPredecessorsTo) and would give us; /// an equivalant to PreheaderIP, AfterIP and BodyIP for inserting code that; /// executes after each body iteration.; ///; /// There must be no loop-carried dependencies through llvm::Values. This is; /// equivalant to that the Latch has no PHINode and the Header's only PHINode is; /// for the induction variable.; ///; /// All code in Header, Cond, Latch and Exit (plus the terminator of the; /// Preheader) are CanonicalLoopInfo's responsibility and their build-up checked; /// by assertOK(). They are expected to not be modified unless explicitly; /// modifying the CanonicalLoopInfo through a methods that applies a OpenMP; /// loop-associated construct such as applyWorkshareLoop, tileLoops, unrollLoop,; /// etc. These methods usually invalidate the CanonicalLoopInfo and re-use its; /// basic blocks. After invalidation, the CanonicalLoopInfo must not be used; /// anymore as its underlying control flow may not exist anymore.; /// Loop-transformation methods such as tileLoops, collapseLoops and unrollLoop; /// may also return a new CanonicalLoopInfo that can be passed to other; /// loop-associated construct implementing methods. These loop-transforming; /// methods may either create a new CanonicalLoopInfo usually using; /// createLoopSke",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:2919,variab,variable,2919,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,1,['variab'],['variable']
Modifiability,"eady existing Tree](\ref addcoltoexistingtree); - [An Example](\ref fullexample). \anchor creatingattree; ## Construct a TTree. ~~~ {.cpp}; TTree tree(name, title); ~~~; Creates a Tree with name and title. Various kinds of branches can be added to a tree:; - Variables representing fundamental types, simple classes/structures or list of variables: for example for C or Fortran; structures.; - Any C++ object or collection, provided by the STL or ROOT. In the following, the details about the creation of different types of branches are given. \anchor addcolumnoffundamentaltypes; ## Add a column (""branch"") holding fundamental types and arrays thereof; This strategy works also for lists of variables, e.g. to describe simple structures.; It is strongly recommended to persistify those as objects rather than lists of leaves. ~~~ {.cpp}; auto branch = tree.Branch(branchname, address, leaflist, bufsize); ~~~; - address is the address of the first item of a structure; - leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a; slash (/). The variable type must be 1 character. (Characters; after the first are legal and will be appended to the visible; name of the leaf, but have no effect.) If no type is given, the; type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is; assumed of type F by default. The list of currently supported; types is given below:; - `C` : a character string terminated by the 0 character; - `B` : an 8 bit signed integer (`Char_t`); Treated as a character when in an array.; - `b` : an 8 bit unsigned integer (`UChar_t`); - `S` : a 16 bit signed integer (`Short_t`); - `s` : a 16 bit unsigned integer (`UShort_t`); - `I` : a 32 bit signed integer (`Int_t`); - `i` : a 32 bit unsigned integer (`UInt_t`); - `F` : a 32 bit floating point (`Float_t`); - `f` : a 24 bit floating point with truncated m",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:3677,variab,variable,3677,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,3,['variab'],['variable']
Modifiability,"eans that; /// for each bin, there will be one event in the dataset with a weight corresponding to the (possibly randomised) bin content.; ///; ///; /// <tr><td> `AllBinned()` <td> As above, but for all components.; /// \note The notion of components is only meaningful for simultaneous PDFs; /// as binned generation is always executed at the top-level node for a regular; /// PDF, so for those it only mattes that the top-level node is tagged.; ///; /// <tr><td> ProtoData(const RooDataSet& data, bool randOrder); /// <td> Use specified dataset as prototype dataset. If randOrder in ProtoData() is set to true,; /// the order of the events in the dataset will be read in a random order if the requested; /// number of events to be generated does not match the number of events in the prototype dataset.; /// \note If ProtoData() is used, the specified existing dataset as a prototype: the new dataset will contain; /// the same number of events as the prototype (unless otherwise specified), and any prototype variables not in; /// whatVars will be copied into the new dataset for each generated event and also used to set our PDF parameters.; /// The user can specify a number of events to generate that will override the default. The result is a; /// copy of the prototype dataset with only variables in whatVars randomized. Variables in whatVars that; /// are not in the prototype will be added as new columns to the generated dataset.; ///; /// </table>; ///; /// #### Accessing the underlying event generator; /// Depending on the fit model (if it is difficult to sample), it may be necessary to change generator settings.; /// For the default generator (RooFoamGenerator), the number of samples or cells could be increased by e.g. using; /// myPdf->specialGeneratorConfig()->getConfigSection(""RooFoamGenerator"").setRealValue(""nSample"",1e4);; ///; /// The foam generator e.g. has the following config options:; /// - nCell[123N]D; /// - nSample; /// - chatLevel; /// \see rf902_numgenconfig.C",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:2951,variab,variables,2951,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,3,"['Variab', 'config', 'variab']","['Variables', 'config', 'variables']"
Modifiability,"eas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; * *; **********************************************************************************/; /*! \class TMVA::DecisionTree; \ingroup TMVA. Implementation of a Decision Tree. In a decision tree successive decision nodes are used to categorize the; events out of the sample as either signal or background. Each node; uses only a single discriminating variable to decide if the event is; signal-like (""goes right"") or background-like (""goes left""). This; forms a tree like structure with ""baskets"" at the end (leave nodes),; and an event is classified as either signal or background according to; whether the basket where it ends up has been classified signal or; background during the training. Training of a decision tree is the; process to define the ""cut criteria"" for each node. The training; starts with the root node. Here one takes the full training event; sample and selects the variable and corresponding cut value that gives; the best separation between signal and background at this stage. Using; this cut criterion, the sample is then divided into two subsamples, a; signal-like (right) and a background-like (left) sample. Two new nodes; are then created for each of the two sub-samples and they are; constructed using the same mechanism as described for the root; node. The devision is stopped once a certain node has reached either a; minimum number of events, ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:1435,variab,variable,1435,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['variab'],['variable']
Modifiability,"eassociate can; // reassociate (a + 2) + b in the example to (a + b) + 2 because it detects that; // (a + b) is computed before.; //; // NaryReassociate works as follows. For every instruction in the form of (a +; // b) + c, it checks whether a + c or b + c is already computed by a dominating; // instruction. If so, it then reassociates (a + b) + c into (a + c) + b or (b +; // c) + a and removes the redundancy accordingly. To efficiently look up whether; // an expression is computed before, we store each instruction seen and its SCEV; // into an SCEV-to-instruction map.; //; // Although the algorithm pattern-matches only ternary additions, it; // automatically handles many >3-ary expressions by walking through the function; // in the depth-first order. For example, given; //; // (a + c) + d; // ((a + b) + c) + d; //; // NaryReassociate first rewrites (a + b) + c to (a + c) + b, and then rewrites; // ((a + c) + b) + d into ((a + c) + d) + b.; //; // Finally, the above dominator-based algorithm may need to be run multiple; // iterations before emitting optimal code. One source of this need is that we; // only split an operand when it is used only once. The above algorithm can; // eliminate an instruction and decrease the usage count of its operands. As a; // result, an instruction that previously had multiple uses may become a; // single-use instruction and thus eligible for split consideration. For; // example,; //; // ac = a + c; // ab = a + b; // abc = ab + c; // ab2 = ab + b; // ab2c = ab2 + c; //; // In the first iteration, we cannot reassociate abc to ac+b because ab is used; // twice. However, we can reassociate ab2c to abc+b in the first iteration. As a; // result, ab2 becomes dead and ab will be used only once in the second; // iteration.; //; // Limitations and TODO items:; //; // 1) We only considers n-ary adds and muls for now. This should be extended; // and generalized.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/NaryReassociate.h:2978,extend,extended,2978,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/NaryReassociate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/NaryReassociate.h,2,['extend'],['extended']
Modifiability,"ecture to the scheduler in the form of properties. It also; /// optionally refers to scheduler resource tables and itinerary; /// tables. Scheduler resource tables model the latency and cost for each; /// instruction type. Itinerary tables are an independent mechanism that; /// provides a detailed reservation table describing each cycle of instruction; /// execution. Subtargets may define any or all of the above categories of data; /// depending on the type of CPU and selected scheduler.; ///; /// The machine independent properties defined here are used by the scheduler as; /// an abstract machine model. A real micro-architecture has a number of; /// buffers, queues, and stages. Declaring that a given machine-independent; /// abstract property corresponds to a specific physical property across all; /// subtargets can't be done. Nonetheless, the abstract model is; /// useful. Futhermore, subtargets typically extend this model with processor; /// specific resources to model any hardware features that can be exploited by; /// scheduling heuristics and aren't sufficiently represented in the abstract.; ///; /// The abstract pipeline is built around the notion of an ""issue point"". This; /// is merely a reference point for counting machine cycles. The physical; /// machine will have pipeline stages that delay execution. The scheduler does; /// not model those delays because they are irrelevant as long as they are; /// consistent. Inaccuracies arise when instructions have different execution; /// delays relative to each other, in addition to their intrinsic latency. Those; /// special cases can be handled by TableGen constructs such as, ReadAdvance,; /// which reduces latency when reading data, and ReleaseAtCycles, which consumes; /// a processor resource when writing data for a number of abstract; /// cycles.; ///; /// TODO: One tool currently missing is the ability to add a delay to; /// ReleaseAtCycles. That would be easy to add and would likely cover all cases; /// curr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:1071,extend,extend,1071,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,1,['extend'],['extend']
Modifiability,"ed by the conjugate gradient.; Parameters are Tau and Reset, which defines the epochs where the direction is; reset to the steepest descent. #### Conjugate gradients with the Fletcher-Reeves updating formula:. Weights are set to the minimum along the line defined by the conjugate gradient. Parameters; are Tau and Reset, which defines the epochs where the direction is; reset to the steepest descent. #### Broyden, Fletcher, Goldfarb, Shanno (BFGS) method:. Implies the computation of a NxN matrix; computation, but seems more powerful at least for less than 300; weights. Parameters are Tau and Reset, which defines the epochs where; the direction is reset to the steepest descent. ### How to use it... TMLP is build from 3 classes: TNeuron, TSynapse and; TMultiLayerPerceptron. Only TMultiLayerPerceptron should be used; explicitly by the user. TMultiLayerPerceptron will take examples from a TTree; given in the constructor. The network is described by a simple; string: The input/output layers are defined by giving the expression for; each neuron, separated by comas. Hidden layers are just described; by the number of neurons. The layers are separated by colons.; In addition, input/output layer formulas can be preceded by '@' (e.g ""@out""); if one wants to also normalize the data from the TTree.; Input and outputs are taken from the TTree given as second argument.; Expressions are evaluated as for TTree::Draw(), arrays are expended in; distinct neurons, one for each index.; This can only be done for fixed-size arrays.; If the formula ends with ""!"", softmax functions are used for the output layer.; One defines the training and test datasets by TEventLists. Example:; ~~~ {.cpp}; TMultiLayerPerceptron(""x,y:10:5:f"",inputTree);; ~~~. Both the TTree and the TEventLists can be defined in; the constructor, or later with the suited setter method. The lists; used for training and test can be defined either explicitly, or via; a string containing the formula to be used to define them, exac",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:6602,layers,layers,6602,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['layers'],['layers']
Modifiability,"ed by; // | Parameter area for callee | alloca); // |----------------------------------------------|; // | Register save area (RSA) for callee |; // |----------------------------------------------|; // | Return address for callee |; // |----------------------------------------------|; // | Frame pointer for callee |; // |----------------------------------------------| <- sp; // | | Lower address; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are both VLAs and local; // variables with more-than-default alignment requirements.; // * A frame pointer is definitely needed when there are local variables with; // more-than-default alignment requirements.; //; // In addition, VE ABI defines RSA frame, return address, and frame pointer; // as follows:; //; // |----------------------------------------------| <- sp+176; // | %s18...%s33 |; // |----------------------------------------------| <- sp+48; // | Linkage area register (%s17) |; // |----------------------------------------------| <- sp+40; // | Procedure linkage table register (%plt=%s16) |; // |----------------------------------------------| <- sp+32; // | Global offset table register (%got=%s15) |; // |----------------------------------------------| <- sp+24; // | Thread pointer register (%tp=%s14) |; // |----------------------------------------------| <- sp+16; // | Return address |; // |----------------------------------------------| <- sp+8; // | Frame",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp:4107,variab,variables,4107,interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,1,['variab'],['variables']
Modifiability,"ed by; /// binning information as described in the previous paragraph.; /// ~~~ {.cpp}; /// tree.Draw(""sqrt(x)>>+hsqrt"",""y>0""); /// ~~~; /// will not reset `hsqrt`, but will continue filling. This works for 1-D, 2-D; /// and 3-D histograms.; ///; /// ### Accessing collection objects; ///; /// TTree::Draw default's handling of collections is to assume that any; /// request on a collection pertain to it content. For example, if fTracks; /// is a collection of Track objects, the following:; /// ~~~ {.cpp}; /// tree->Draw(""event.fTracks.fPx"");; /// ~~~; /// will plot the value of fPx for each Track objects inside the collection.; /// Also; /// ~~~ {.cpp}; /// tree->Draw(""event.fTracks.size()"");; /// ~~~; /// would plot the result of the member function Track::size() for each; /// Track object inside the collection.; /// To access information about the collection itself, TTree::Draw support; /// the '@' notation. If a variable which points to a collection is prefixed; /// or postfixed with '@', the next part of the expression will pertain to; /// the collection object. For example:; /// ~~~ {.cpp}; /// tree->Draw(""event.@fTracks.size()"");; /// ~~~; /// will plot the size of the collection referred to by `fTracks` (i.e the number; /// of Track objects).; ///; /// ### Drawing 'objects'; ///; /// When a class has a member function named AsDouble or AsString, requesting; /// to directly draw the object will imply a call to one of the 2 functions.; /// If both AsDouble and AsString are present, AsDouble will be used.; /// AsString can return either a char*, a std::string or a TString.s; /// For example, the following; /// ~~~ {.cpp}; /// tree->Draw(""event.myTTimeStamp"");; /// ~~~; /// will draw the same histogram as; /// ~~~ {.cpp}; /// tree->Draw(""event.myTTimeStamp.AsDouble()"");; /// ~~~; /// In addition, when the object is a type TString or std::string, TTree::Draw; /// will call respectively `TString::Data` and `std::string::c_str()`; ///; /// If the object is a TBits, the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:13371,variab,variable,13371,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variable']
Modifiability,"ed on; ``SPlot: A statistical tool to unfold data distributions,''; Nucl. Instrum. Meth. A 555, 356 (2005) [arXiv:physics/0402083]. ### Creating an SPlot; To use this class, you first must have a pdf that includes; yield parameters for (possibly several) different species, for example a signal and background; yield. Those yields must be of type RooRealVar / RooLinearVar (or anything that derives from; RooAbsRealLValue). This is necessary because; RooStats needs to be able to set the yields to 0 and 1 to probe the PDF. After; constructing the s weights, the yields will be restored to their original values. To create an instance of the SPlot, supply a data set, the pdf to analyse,; and a list which parameters of the pdf are yields. The SPlot will calculate SWeights, and; include these as columns in the RooDataSet. The dataset will have two additional columns; for every yield with name ""`<varname>`"":; - `L_<varname>` is the likelihood for each event, *i.e.*, the pdf evaluated for the given value of the variable ""varname"".; - `<varname>_sw` is the value of the sWeight for the variable ""varname"" for each event. In SPlot::SPlot(), one can choose whether columns should be added to an existing dataset or whether a copy of the dataset; should be created. ### Plotting s-weighted data; After computing the s weights, create a new dataset that uses the s weights of the variable of interest for weighting.; If the yield parameter for signal was e.g. ""signalYield"", the dataset can be constructed as follows:; ~~~{.cpp}; RooDataSet data_signal(""<name>"", ""<title>"", <dataWithSWeights>, <variables>, 0, ""signalYield_sw"");; ~~~. A complete tutorial with an extensive model is rs301_splot.C. #### Using ratios as yield parameters; As mentioned, RooStats needs to be able to modify the yield parameters. That means that they have to be a RooRealVar; of a RooLinearVar. This allows using ratio parameters as in the following example:; ~~~{.cpp}; RooRealVar x(""x"", ""observable"", 0, 0, 20);; RooRealVa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SPlot.cxx:2871,variab,variable,2871,roofit/roostats/src/SPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SPlot.cxx,1,['variab'],['variable']
Modifiability,"ed using Eq.; (2); where the covariance matrix is taken from Minuit. 3. Histograms of \f$x\f$ are filled by weighting the events with \f${_s{\cal P}}\f$ . 4. Error bars per bin are given by Eq. (6). The \f$\hbox {$_s$}{\cal P}lots\f$ reproduce the true distributions of the species; in the control variable \f$x\f$, within the above defined statistical uncertainties. ### Illustrations. To illustrate the technique, one considers an example derived from the analysis where; \f$\hbox {$_s$}{\cal P}lots\f$; have been first used (charmless B decays). One is dealing with a data; sample in which two species are present: the first is termed signal and; the second background. A maximum Likelihood fit is performed to obtain; the two yields \f$N_1\f$ and \f$N_2\f$ . The fit relies on two discriminating; variables collectively denoted \f$y\f$ which are chosen within three possible; variables denoted \f${m_{\rm ES}}\f$ , \f$\Delta E\f$ and \f${\cal F}\f$.; The variable which is not incorporated in \f$y\f$ is used as the control variable; \f$x\f$ . The six distributions of the three variables are assumed to be the ones; depicted in Fig. 1. \image html splot_pdfmesNIM.png Figure 1 width=800. Distributions of the three discriminating variables available to perform the Likelihood fit:; \f${m_{\rm ES}}\f$ , \f$\Delta E\f$ , \f${\cal F}\f$ .; Among the three variables, two are used to perform the fit while one is; kept out of the fit to serve the purpose of a control variable. The; three distributions on the top (resp. bottom) of the figure correspond; to the signal (resp. background). The unit of the vertical axis is; chosen such that it indicates the number of entries per bin, if one; slices the histograms in 25 bins. A data sample being built through a Monte Carlo simulation based on the; distributions shown in Fig.; 1,; one obtains the three distributions of Fig. 2.; Whereas the distribution of \f$\Delta E\f$ clearly indicates the presence of the signal,; the distribution of \f${m_{\",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:6899,variab,variable,6899,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,2,['variab'],['variable']
Modifiability,"ed, the names of the; variables X,Y are automatically taken from the current pad title. Example:. Assume a TTree object T and:; ~~~ {.cpp}; Root > T.Draw(""abs(fMomemtum):fEtot""); ~~~; the TCutG members fVarX, fVary will be set to:; ~~~ {.cpp}; fVarx = fEtot; fVary = abs(fMomemtum); ~~~; A graphical cut can be used in a TTree selection expression:; ~~~ {.cpp}; Root > T.Draw(""fEtot"",""cutg1""); ~~~; where ""cutg1"" is the name of an existing graphical cut. Note that, as shown in the example above, a graphical cut may be used in a; selection expression when drawing TTrees expressions of 1-d, 2-d or; 3-dimensions. The expressions used in TTree::Draw can reference the variables in; the fVarX, fVarY of the graphical cut plus other variables. When the TCutG object is created by TTree::Draw, it is added to the list of special objects in; the main TROOT object pointed by gROOT. To retrieve a pointer to this object; from the code or command line, do:; ~~~ {.cpp}; TCutG *mycutg;; mycutg = (TCutG*)gROOT->GetListOfSpecials()->FindObject(""CUTG""); mycutg->SetName(""mycutg"");; ~~~; When the TCutG is not created via TTree::Draw, one must set the variable names; corresponding to x,y if one wants to use the cut as input to TTree::Draw,eg; ~~~ {.cpp}; TCutG *cutg = new TCutG(""mycut"",6);; cutg->SetVarX(""y"");; cutg->SetVarY(""x"");; cutg->SetPoint(0,-0.3586207,1.509534);; cutg->SetPoint(1,-1.894181,-0.529661);; cutg->SetPoint(2,0.07780173,-1.21822);; cutg->SetPoint(3,-1.0375,-0.07944915);; cutg->SetPoint(4,0.756681,0.1853814);; cutg->SetPoint(5,-0.3586207,1.509534);; ~~~; Example of use of a TCutG in TTree::Draw:; ~~~ {.cpp}; tree.Draw(""x:y"",""mycutg && z>0 && sqrt(x)>1""); ~~~; A Graphical cut may be drawn via TGraph::Draw. It can be edited like a normal; TGraph. Being a TGraph the drawing options and behavior relatives to graphs apply.; They are listed in the TGraphPainter description.; See in particular ""Graphs in logarithmic scale"". A Graphical cut may be saved to a file via TCutG::Write.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCutG.cxx:2203,variab,variable,2203,graf2d/graf/src/TCutG.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCutG.cxx,1,['variab'],['variable']
Modifiability,"ed. This step can be skipped if you have access to an existing Dask; cluster; in that case, the cluster administrator should provide you with a; URL to connect to the cluster in step 2. More options for cluster creation; can be found in the Dask docs at; http://distributed.dask.org/en/stable/api.html#cluster .; 2. Creating a Dask client object that connects to the cluster. This accepts; directly the object previously created. In case the cluster was setup; externally, you need to provide an endpoint URL to the client, e.g.; 'https://myscheduler.domain:8786'. Through Dask, you can connect to various types of cluster resources. For; example, you can connect together a set of machines through SSH and use them; to run your computations. This is done through the `SSHCluster` class. For; example:. ```python; from dask.distributed import SSHCluster; cluster = SSHCluster(; # A list with machine host names, the first name will be used as; # scheduler, following names will become workers.; hosts=[""machine1"",""machine2"",""machine3""],; # A dictionary of options for each worker node, here we set the number; # of cores to be used on each node.; worker_options={""nprocs"":4,},; ); ```. Another common usecase is interfacing Dask to a batch system like HTCondor or; Slurm. A separate package called dask-jobqueue (https://jobqueue.dask.org); extends the available Dask cluster classes to enable running Dask computations; as batch jobs. In this case, the cluster object usually receives the parameters; that would be written in the job description file. For example:. ```python; from dask_jobqueue import HTCondorCluster; cluster = HTCondorCluster(; cores=1,; memory='2000MB',; disk='1000MB',; ); # Use the scale method to send as many jobs as needed; cluster.scale(4); ```. In this tutorial, a cluster object is created for the local machine, using; multiprocessing (processes=True) on 2 workers (n_workers=2) each using only; 1 core (threads_per_worker=1) and 2GiB of RAM (memory_limit=""2GiB"").; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py:1644,extend,extends,1644,tutorials/dataframe/distrdf002_dask_connection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py,1,['extend'],['extends']
Modifiability,"edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooAddPdf; \ingroup Roofitcore. Efficient implementation of a sum of PDFs of the form. \f[; \sum_{i=1}^{n} c_i \cdot \mathrm{PDF}_i; \f]. or; \f[; c_1\cdot\mathrm{PDF}_1 + c_2\cdot\mathrm{PDF}_2 \; + \; ... \; + \; \left( 1-\sum_{i=1}^{n-1}c_i \right) \cdot \mathrm{PDF}_n; \f]. The first form is for extended likelihood fits, where the; expected number of events is \f$ \sum_i c_i \f$. The coefficients \f$ c_i \f$; can either be explicitly provided, or, if all components support; extended likelihood fits, they can be calculated from the contribution; of each PDF to the total expected number of events. In the second form, the sum of the coefficients is required to be 1 or less,; and the coefficient of the last PDF is calculated automatically from the condition; that the sum of all coefficients has to be 1. ### Recursive coefficients; It is also possible to parameterise the coefficients recursively. \f[; \sum_{i=1}^n c_i \prod_{j=1}^{i-1} \left[ (1-c_j) \right] \cdot \mathrm{PDF}_i \\; = c_1 \cdot \mathrm{PDF}_1 + (1-c_1)\, c_2 \cdot \mathrm{PDF}_2 + \ldots + (1-c_1)\ldots(1-c_{n-1}) \cdot 1 \cdot \mathrm{PDF}_n \\; \f]. In this form the sum of the coefficients is always less than 1.0; for all possible values of the individual coefficients between 0 and 1.; \note Don't pass the \f$ n^\mathrm{th} \f$ coefficient. It is always 1, since the normalisation condition removes one degree of freedom. RooAddPdf relies on each component PDF to be normalized and will perform; no normaliz",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:1269,extend,extended,1269,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,1,['extend'],['extended']
Modifiability,"ee"", ""file.root"");; auto metCut = [](double x) { return x > 4.; }; // a C++11 lambda function checking ""x > 4""; auto c = d.Filter(metCut, {""MET""}).Count();; std::cout << *c << std::endl;; ~~~. An example of a more complex filter expressed as a string containing C++ code is shown below. ~~~{.cpp}; RDataFrame d(""myTree"", ""file.root"");; auto df = d.Define(""p"", ""std::array<double, 4> p{px, py, pz}; return p;""); .Filter(""double p2 = 0.0; for (auto&& x : p) p2 += x*x; return sqrt(p2) < 10.0;"");; ~~~. The code snippet above defines a column `p` that is a fixed-size array using the component column names and then; filters on its magnitude by looping over its elements. It must be noted that the usage of strings to define columns; like the one above is currently the only possibility when using PyROOT. When writing expressions as such, only constants; and data coming from other columns in the dataset can be involved in the code passed as a string. Local variables and; functions cannot be used, since the interpreter will not know how to find them. When capturing local state is necessary,; it must first be declared to the ROOT C++ interpreter. More information on filters and how to use them to automatically generate cutflow reports can be found [below](#Filters). ### Defining custom columns; Let's now consider the case in which ""myTree"" contains two quantities ""x"" and ""y"", but our analysis relies on a derived; quantity `z = sqrt(x*x + y*y)`. Using the Define() transformation, we can create a new column in the dataset containing; the variable ""z"":; ~~~{.cpp}; RDataFrame d(""myTree"", ""file.root"");; auto sqrtSum = [](double x, double y) { return sqrt(x*x + y*y); };; auto zMean = d.Define(""z"", sqrtSum, {""x"",""y""}).Mean(""z"");; std::cout << *zMean << std::endl;; ~~~; Define() creates the variable ""z"" by applying `sqrtSum` to ""x"" and ""y"". Later in the chain of calls we refer to; variables created with Define() as if they were actual tree branches/columns, but they are evaluated on demand,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:20468,variab,variables,20468,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['variab'],['variables']
Modifiability,"eed to create the function if you don't want to,; // the formula can be set by expression:; // --Example:; // // 2 is the number of dimensions; // TLinearFitter *lf = new TLinearFitter(2);; // lf->SetFormula(""x ++ y ++ x*x*y*y"");; // --That's the only way to go, if you want to fit in more; // than 3 dimensions; // 2.2.3 The fastest functions to compute are polynomials and hyperplanes.; // --Polynomials are set the usual way: ""pol1"", ""pol2"",...; // --Hyperplanes are set by expression ""hyp3"", ""hyp4"", ...; // ---The ""hypN"" expressions only work when the linear fitter; // is used directly, not through TH1::Fit or TGraph::Fit.; // To fit a graph or a histogram with a hyperplane, define; // the function as ""1++x++y"".; // ---A constant term is assumed for a hyperplane, when using; // the ""hypN"" expression, so ""hyp3"" is in fact fitting with; // ""1++x++y++z"" function.; // --Fitting hyperplanes is much faster than fitting other; // expressions so if performance is vital, calculate the; // function values beforehand and give them to the fitter; // as variables; // --Example:; // You want to fit ""sin(x)|cos(2*x)"" very fast. Calculate; // sin(x) and cos(2*x) beforehand and store them in array *data.; // Then:; // TLinearFitter *lf=new TLinearFitter(2, ""hyp2"");; // lf->AssignData(npoint, 2, data, y);; //; // 2.3 Resetting the formula; // 2.3.1 If the input data is stored (or added via AssignData() function),; // the fitting formula can be reset without re-adding all the points.; // --Example:; // TLinearFitter *lf=new TLinearFitter(""1++x++x*x"");; // lf->AssignData(n, 1, x, y, e);; // lf->Eval(); // //looking at the parameter significance, you see,; // // that maybe the fit will improve, if you take out; // // the constant term; // lf->SetFormula(""x++x*x"");; // lf->Eval();; // ...; // 2.3.2 If the input data is not stored, the fitter will have to be; // cleared and the data will have to be added again to try a; // different formula.; //; // 3.Accessing the fit results; // 3.1 Ther",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearFitter.h:4326,variab,variables,4326,math/minuit/inc/TLinearFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearFitter.h,1,['variab'],['variables']
Modifiability,"ef creatingattree); - [Add a column of Fundamental Types and Arrays thereof](\ref addcolumnoffundamentaltypes); - [Add a column of a STL Collection instances](\ref addingacolumnofstl); - [Add a column holding an object](\ref addingacolumnofobjs); - [Add a column holding a TObjectArray](\ref addingacolumnofobjs); - [Fill the tree](\ref fillthetree); - [Add a column to an already existing Tree](\ref addcoltoexistingtree); - [An Example](\ref fullexample). \anchor creatingattree; ## Construct a TTree. ~~~ {.cpp}; TTree tree(name, title); ~~~; Creates a Tree with name and title. Various kinds of branches can be added to a tree:; - Variables representing fundamental types, simple classes/structures or list of variables: for example for C or Fortran; structures.; - Any C++ object or collection, provided by the STL or ROOT. In the following, the details about the creation of different types of branches are given. \anchor addcolumnoffundamentaltypes; ## Add a column (""branch"") holding fundamental types and arrays thereof; This strategy works also for lists of variables, e.g. to describe simple structures.; It is strongly recommended to persistify those as objects rather than lists of leaves. ~~~ {.cpp}; auto branch = tree.Branch(branchname, address, leaflist, bufsize); ~~~; - address is the address of the first item of a structure; - leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a; slash (/). The variable type must be 1 character. (Characters; after the first are legal and will be appended to the visible; name of the leaf, but have no effect.) If no type is given, the; type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is; assumed of type F by default. The list of currently supported; types is given below:; - `C` : a character string terminated by the 0 character; - `B` : an 8 bit signed integer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:3356,variab,variables,3356,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variables']
Modifiability,"effects of non-linearity and numerical roundoff both; become more important as the external value gets closer to one of the limits; (expressed as the distance to nearest limit divided by distance between limits).; The user must therefore be aware of the fact that, for example,; if he puts limits of \f$(0,10^{10})\f$ on a parameter, then the values \f$0.0\f$; and \f$1.0\f$ will be indistinguishable to the accuracy of most machines. The transformation also affects the parameter error matrix, of course,; so Minuit does a transformation of the error matrix (and the; ``parabolic'' parameter errors) when there are parameter limits.; Users should however realize that the transformation is only a linear; approximation, and that it cannot give a meaningful result if one or more; parameters is very close to a limit, where; \f$\partial P_{\mathrm{ext}} / \partial P_{\mathrm{int}} \approx 0\f$.; Therefore, it is recommended that:. 1. Limits on variable parameters should be used only when needed in order; to prevent the parameter from taking on unphysical values. 2. When a satisfactory minimum has been found using limits, the limits; should then be removed if possible, in order to perform or re-perform the; error analysis without limits. ### How to get the right answer from MINUIT. MINUIT offers the user a choice of several minimization algorithms. The; MIGRAD algorithm is in general the best minimizer for; nearly all functions. It is a variable-metric method with inexact line; search, a stable metric updating scheme, and checks for; positive-definiteness. Its main weakness is that it depends heavily on; knowledge of the first derivatives, and fails miserably if they are very; inaccurate. If parameter limits are needed, in spite of the side effects, then the; user should be aware of the following techniques to alleviate problems; caused by limits:. #### Getting the right minimum with limits. If MIGRAD converges normally to a point where no parameter is near one of; its limits, th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:4761,variab,variable,4761,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['variab'],['variable']
Modifiability,"el such that the original; // variables are always at the same address. LDS is however a limited resource; // so this strategy is unusable in practice. It is not implemented here.; //; // Strategy | Precise allocation | Zero runtime cost | General purpose |; // --------+--------------------+-------------------+-----------------+; // Module | No | Yes | Yes |; // Table | Yes | No | Yes |; // Kernel | Yes | Yes | No |; // Hybrid | Yes | Partial | Yes |; //; // ""Module"" spends LDS memory to save cycles. ""Table"" spends cycles and global; // memory to save LDS. ""Kernel"" is as fast as kernel allocation but only works; // for variables that are known reachable from a single kernel. ""Hybrid"" picks; // between all three. When forced to choose between LDS and cycles we minimise; // LDS use.; // The ""module"" lowering implemented here finds LDS variables which are used by; // non-kernel functions and creates a new struct with a field for each of those; // LDS variables. Variables that are only used from kernels are excluded.; //; // The ""table"" lowering implemented here has three components.; // First kernels are assigned a unique integer identifier which is available in; // functions it calls through the intrinsic amdgcn_lds_kernel_id. The integer; // is passed through a specific SGPR, thus works with indirect calls.; // Second, each kernel allocates LDS variables independent of other kernels and; // writes the addresses it chose for each variable into an array in consistent; // order. If the kernel does not allocate a given variable, it writes undef to; // the corresponding array location. These arrays are written to a constant; // table in the order matching the kernel unique integer identifier.; // Third, uses from non-kernel functions are replaced with a table lookup using; // the intrinsic function to find the address of the variable.; //; // ""Kernel"" lowering is only applicable for variables that are unambiguously; // reachable from exactly one kernel. For those cases, a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:4038,Variab,Variables,4038,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['Variab'],['Variables']
Modifiability,"elPersistence = to save the trained model in xml or serialized files.; * Jobs = number of ml methods to test/train in parallel using MultiProc, requires to call Evaluate method.; * Basic example.; * \code; void classification(UInt_t jobs = 2); {; TMVA::Tools::Instance();. TFile *input(0);; TString fname = ""./tmva_class_example.root"";; if (!gSystem->AccessPathName(fname)) {; input = TFile::Open(fname); // check if file in local directory exists; } else {; TFile::SetCacheFileDir(""."");; input = TFile::Open(""http://root.cern/files/tmva_class_example.root"", ""CACHEREAD"");; }; if (!input) {; std::cout << ""ERROR: could not open data file"" << std::endl;; exit(1);; }. // Register the training and test trees. TTree *signalTree = (TTree *)input->Get(""TreeS"");; TTree *background = (TTree *)input->Get(""TreeB"");. TMVA::DataLoader *dataloader = new TMVA::DataLoader(""dataset"");. dataloader->AddVariable(""myvar1 := var1+var2"", 'F');; dataloader->AddVariable(""myvar2 := var1-var2"", ""Expression 2"", """", 'F');; dataloader->AddVariable(""var3"", ""Variable 3"", ""units"", 'F');; dataloader->AddVariable(""var4"", ""Variable 4"", ""units"", 'F');. dataloader->AddSpectator(""spec1 := var1*2"", ""Spectator 1"", ""units"", 'F');; dataloader->AddSpectator(""spec2 := var1*3"", ""Spectator 2"", ""units"", 'F');. // global event weights per tree (see below for setting event-wise weights); Double_t signalWeight = 1.0;; Double_t backgroundWeight = 1.0;. dataloader->SetBackgroundWeightExpression(""weight"");. TMVA::Experimental::Classification *cl = new TMVA::Experimental::Classification(dataloader, Form(""Jobs=%d"", jobs));. cl->BookMethod(TMVA::Types::kBDT, ""BDTG"", ""!H:!V:NTrees=2000:MinNodeSize=2.5%:BoostType=Grad:Shrinkage=0.10:""; ""UseBaggedBoost:BaggedSampleFraction=0.5:nCuts=20:MaxDepth=2"");; cl->BookMethod(TMVA::Types::kSVM, ""SVM"", ""Gamma=0.25:Tol=0.001:VarTransform=Norm"");. cl->Evaluate(); // Train and Test all methods. auto &results = cl->GetResults();. TCanvas *c = new TCanvas(Form(""ROC""));; c->SetTitle(""ROC-Integral Cu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Classification.h:2320,Variab,Variable,2320,tmva/tmva/inc/TMVA/Classification.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Classification.h,2,['Variab'],['Variable']
Modifiability,"en into dest spectrum.; ///; /// Function parameters:; /// - source-pointer to the vector of source spectrum, its length should; /// be size except for inverse FOURIER, FOUR-WALSh, FOUR-HAAR; /// transform. These need 2*size length to supply real and; /// imaginary coefficients.; /// - destVector-pointer to the vector of dest data, its length should be; /// size except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Example - script Enhance.c:; ///; /// \image html spectrumtransform_enhance_image001.jpg Fig. 1 Original spectrum (black line) and enhanced spectrum (red line) using Cosine transform (channels 0-1024 were multiplied by 2); ///; /// #### Script:; ///; /// Example to illustrate Enhance function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Enhance.C`; ///; /// ~~~ {.cpp}; /// void Enhance() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Enhancement using Cosine transform"",nbins,xmin,xmax);; /// TH1F *d = new TH1F(""d"","""",nbins,xmin,xmax);; /// TFile *f = new TFile(""spectra/TSpectrum.root"");; /// h=(TH1F*) f->Get(""transform1;1"");; /// for (i = 0; i < nbins; i++) source[i]=h->GetBinContent(i + 1);; /// TCanvas *Transform1 = gROOT->GetListOfCanvases()->FindObject(""Transform1"");; /// if (!Transform1) Transform1 = new TCanvas(""Transform"",""Transform1"",10,10,1000,700);; /// h->SetAxisRange(700,1024);; /// h->Draw(""L"");; /// TSpectrum *s = new TSpectrum();; /// TSpectrumTransform *t = new TSpectrumTransform(4096);; /// t->SetTransformType(t->kTransformCos,0);; /// t->SetRegion(0, 1024);; /// t->SetEnhanceCoeff(2);; /// t->Enhance(source,dest);; /// for (i = 0; i < nbins; i++) d->SetBinContent(i + 1,dest[i]);; /// d->SetLineColor(kRed);; /// d->Draw(""SAME L"");; /// }; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1278,Enhance,Enhance,1278,hist/spectrum/src/TSpectrumTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx,3,['Enhance'],"['Enhance', 'Enhancement']"
Modifiability,"en the; // source and destination operands of XADD are GPR32, there is no sub-register; // dead info. If we rely on the generic MachineInstr::allDefsAreDead, then we; // will raise false alarm on GPR32 Def.; //; // To support GPR32 Def, ideally we could just enable sub-registr liveness track; // on BPF backend, then allDefsAreDead could work on GPR32 Def. This requires; // implementing TargetSubtargetInfo::enableSubRegLiveness on BPF.; //; // However, sub-register liveness tracking module inside LLVM is actually; // designed for the situation where one register could be split into more than; // one sub-registers for which case each sub-register could have their own; // liveness and kill one of them doesn't kill others. So, tracking liveness for; // each make sense.; //; // For BPF, each 64-bit register could only have one 32-bit sub-register. This; // is exactly the case which LLVM think brings no benefits for doing; // sub-register tracking, because the live range of sub-register must always; // equal to its parent register, therefore liveness tracking is disabled even; // the back-end has implemented enableSubRegLiveness. The detailed information; // is at r232695:; //; // Author: Matthias Braun <matze@braunis.de>; // Date: Thu Mar 19 00:21:58 2015 +0000; // Do not track subregister liveness when it brings no benefits; //; // Hence, for BPF, we enhance MachineInstr::allDefsAreDead. Given the solo; // sub-register always has the same liveness as its parent register, LLVM is; // already attaching a implicit 64-bit register Def whenever the there is; // a sub-register Def. The liveness of the implicit 64-bit Def is available.; // For example, for ""lock *(u32 *)(r0 + 4) += w9"", the MachineOperand info could; // be:; //; // $w9 = XADDW32 killed $r0, 4, $w9(tied-def 0),; // implicit killed $r9, implicit-def dead $r9; //; // Even though w9 is not marked as Dead, the parent register r9 is marked as; // Dead correctly, and it is safe to use such information or our purpose.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIChecking.cpp:1533,enhance,enhance,1533,interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIChecking.cpp,1,['enhance'],['enhance']
Modifiability,"en using PyROOT. When writing expressions as such, only constants; and data coming from other columns in the dataset can be involved in the code passed as a string. Local variables and; functions cannot be used, since the interpreter will not know how to find them. When capturing local state is necessary,; it must first be declared to the ROOT C++ interpreter. More information on filters and how to use them to automatically generate cutflow reports can be found [below](#Filters). ### Defining custom columns; Let's now consider the case in which ""myTree"" contains two quantities ""x"" and ""y"", but our analysis relies on a derived; quantity `z = sqrt(x*x + y*y)`. Using the Define() transformation, we can create a new column in the dataset containing; the variable ""z"":; ~~~{.cpp}; RDataFrame d(""myTree"", ""file.root"");; auto sqrtSum = [](double x, double y) { return sqrt(x*x + y*y); };; auto zMean = d.Define(""z"", sqrtSum, {""x"",""y""}).Mean(""z"");; std::cout << *zMean << std::endl;; ~~~; Define() creates the variable ""z"" by applying `sqrtSum` to ""x"" and ""y"". Later in the chain of calls we refer to; variables created with Define() as if they were actual tree branches/columns, but they are evaluated on demand, at most; once per event. As with filters, Define() calls can be chained with other transformations to create multiple custom; columns. Define() and Filter() transformations can be concatenated and intermixed at will. As with filters, it is possible to specify new columns as string expressions. This snippet is analogous to the one above:; ~~~{.cpp}; RDataFrame d(""myTree"", ""file.root"");; auto zMean = d.Define(""z"", ""sqrt(x*x + y*y)"").Mean(""z"");; std::cout << *zMean << std::endl;; ~~~. Again the names of the columns used in the expression and their types are inferred automatically. The string must be; valid C++ and it is just-in-time compiled. The process has a small runtime overhead and like with filters it is currently the only possible approach when using PyROOT. Previously, ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:21309,variab,variable,21309,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['variab'],['variable']
Modifiability,"end of class N, or in a member or friend of a class P; /// derived from N, where m as a member of P is public, private,; /// or protected, or; /// [M4] there exists a base class B of N that is accessible at R, and; /// m is accessible at R when named in class B.; ///; /// C++0x [class.access.base]p4:; /// A base class B of N is accessible at R, if; /// [B1] an invented public member of B would be a public member of N, or; /// [B2] R occurs in a member or friend of class N, and an invented public; /// member of B would be a private or protected member of N, or; /// [B3] R occurs in a member or friend of a class P derived from N, and an; /// invented public member of B would be a private or protected member; /// of P, or; /// [B4] there exists a class S such that B is a base class of S accessible; /// at R and S is a base class of N accessible at R.; ///; /// Along a single inheritance path we can restate both of these; /// iteratively:; ///; /// First, we note that M1-4 are equivalent to B1-4 if the member is; /// treated as a notional base of its declaring class with inheritance; /// access equivalent to the member's access. Therefore we need only; /// ask whether a class B is accessible from a class N in context R.; ///; /// Let B_1 .. B_n be the inheritance path in question (i.e. where; /// B_1 = N, B_n = B, and for all i, B_{i+1} is a direct base class of; /// B_i). For i in 1..n, we will calculate ACAB(i), the access to the; /// closest accessible base in the path:; /// Access(a, b) = (* access on the base specifier from a to b *); /// Merge(a, forbidden) = forbidden; /// Merge(a, private) = forbidden; /// Merge(a, b) = min(a,b); /// Accessible(c, forbidden) = false; /// Accessible(c, private) = (R is c) || IsFriend(c, R); /// Accessible(c, protected) = (R derived from c) || IsFriend(c, R); /// Accessible(c, public) = true; /// ACAB(n) = public; /// ACAB(i) =; /// let AccessToBase = Merge(Access(B_i, B_{i+1}), ACAB(i+1)) in; /// if Accessible(B_i, AccessToBase) t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAccess.cpp:1328,inherit,inheritance,1328,interpreter/llvm-project/clang/lib/Sema/SemaAccess.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAccess.cpp,2,['inherit'],['inheritance']
Modifiability,"ength of spectrum and working space arrays; /// - ssizey-z length of spectrum and working space arrays; /// - averWindow-width of averaging smoothing window; ///; /// ### Smoothing; ///; /// Goal: Suppression of statistical fluctuations; /// the algorithm is based on discrete Markov chain, which has very simple; /// invariant distribution; ///; /// \f[; /// U_2 = \frac{p_{1.2}}{p_{2,1}}U_1, U_3 = \frac{p_{2,3}}{p_{3,2}}U_2 U_1, ... , U_n = \frac{p_{n-1,n}}{p_{n,n-1}}U_{n-1} ... U_2 U_1; /// \f]; /// \f$U_1\f$ being defined from the normalization condition \f$ \sum_{i=1}^{n} U_i = 1\f$; /// n is the length of the smoothed spectrum and; /// \f[; /// p_{i,i\pm1} = A_i \sum_{k=1}^{m} exp\left[\frac{y(i\pm k)-y(i)}{y(i\pm k)+y(i)}\right]; /// \f]; ///; /// is the probability of the change of the peak position from channel i to the channel i+1.; /// \f$A_i\f$ is the normalization constant so that\f$ p_{i,i-1}+p_{i,i+1}=1\f$ and m is a width; /// of smoothing window. We have extended this algorithm to three dimensions.; ///; /// #### Reference:; ///; /// [1] Z.K. Silagadze, A new; /// algorithm for automatic photo-peak searches. NIM A 376 (1996), 451-.; ///; /// ### Example 1 - script SmootMarkov3.c :; ///; /// \image html spectrum3_smoothing_image007.jpg Fig. 1 Original noisy spectrum.; /// \image html spectrum3_smoothing_image008.jpg Fig. 2 Smoothed spectrum with averaging window m=3.; ///; /// #### Script:; ///; /// Example to illustrate the Markov smoothing (class TSpectrum3).; /// To execute this example, do:; ///; /// `root > .x SmoothMarkov3.C`; ///; /// ~~~ {.cpp}; /// void SmoothMarkov3() {; /// Int_t i, j, k;; /// Int_t nbinsx = 64;; /// Int_t nbinsy = 64;; /// Int_t nbinsz = 64;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Int_t zmin = 0;; /// Int_t zmax = nbinsz;; /// Double_t*** source = new Double_t**[nbinsx];; /// for(i=0;i<nbinsx;i++){; /// source[i]=new Double_t*[nbinsy];; /// for(j=0;j<nbinsy;j++); /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:1448,extend,extended,1448,hist/spectrum/src/TSpectrum3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx,1,['extend'],['extended']
Modifiability,"ent values of \f$\mathbf{P}\f$, the tracks; through the magnetic field, and determine the corresponding; \f$\mathbf{x} = (x_1, \ldots, x_N)\f$.; 3. Use the simulated observations to determine, with a simple; approximation, the values of \f$\mathbf{P}_j\f$. We call these values; \f$\mathbf{P}^\prime_j, j = 1, \ldots, M\f$.; 4. Determine from \f$\mathbf{x}\f$ a set of at least five relevant; coordinates \f$\mathbf{x}^\prime\f$, using contrains, *or; alternative:*; 5. Perform a Principal Component Analysis (using TPrincipal), and use; to get a linear transformation \f$\mathbf{x} \rightarrow \mathbf{x}^\prime\f$, so that; \f$\mathbf{x}^\prime\f$ are constrained and linear independent.; 6. Perform a Principal Component Analysis on; \f$Q_i = P_i / P^\prime_i\, i = 1, \ldots, 5\f$, to get linear; indenpendent (among themselves, but not independent of \f$\mathbf{x}\f$) quantities; \f$\mathbf{Q}^\prime\f$; 7. For each component \f$Q^\prime_i\f$ make a multidimensional fit,; using \f$\mathbf{x}^\prime\f$ as the variables, thus determining a set of; coefficients \f$\mathbf{c}_i\f$. To process data, using this parameterisation, do; 1. Test wether the observation \f$\mathbf{x}\f$ within the domain of; the parameterization, using the result from the Principal Component; Analysis.; 2. Determine \f$\mathbf{P}^\prime\f$ as before.; 3. Determine \f$\mathbf{x}^\prime\f$ as before.; 4. Use the result of the fit to determine \f$\mathbf{Q}^\prime\f$.; 5. Transform back to \f$\mathbf{P}\f$ from \f$\mathbf{Q}^\prime\f$, using; the result from the Principal Component Analysis. ## Testing the parameterization; The class also provides functionality for testing the, over the; training sample, found parameterization (TMultiDimFit::Fit). This is done by passing; the class a test sample of \f$ M_t\f$ tuples of the form; \f$(\mathbf{x}_{t,j},D_{t,j}, E_{t,j})\f$, where \f$\mathbf{x}_{t,j}\f$ are the independent; variables, \f$ D_{t,j}\f$ the known, dependent quantity, and \f$ E_{t,j}\f$ is; the sq",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:15659,variab,variables,15659,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variables']
Modifiability,"entation); \class TH2I; \brief 2-D histogram with an int per channel (see TH1 documentation); \class TH2L; \brief 2-D histogram with a long64 per channel (see TH1 documentation); \class TH2F; \brief 2-D histogram with a float per channel (see TH1 documentation); \class TH2D; \brief 2-D histogram with a double per channel (see TH1 documentation); @}; */; /** \class TH2; Service class for 2-D histogram classes. - TH2C a 2-D histogram with one byte per cell (char). Maximum bin content = 127; - TH2S a 2-D histogram with two bytes per cell (short integer). Maximum bin content = 32767; - TH2I a 2-D histogram with four bytes per cell (32 bit integer). Maximum bin content = INT_MAX (\ref intmax2 ""*""); - TH2L a 2-D histogram with eight bytes per cell (64 bit integer). Maximum bin content = LLONG_MAX (\ref llongmax2 ""**""); - TH2F a 2-D histogram with four bytes per cell (float). Maximum precision 7 digits, maximum integer bin content = +/-16777216 (\ref floatmax2 ""***""); - TH2D a 2-D histogram with eight bytes per cell (double). Maximum precision 14 digits, maximum integer bin content = +/-9007199254740992 (\ref doublemax2 ""****""). <sup>; \anchor intmax2 (*) INT_MAX = 2147483647 is the [maximum value for a variable of type int.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; \anchor llongmax2 (**) LLONG_MAX = 9223372036854775807 is the [maximum value for a variable of type long64.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; \anchor floatmax2 (***) 2^24 = 16777216 is the [maximum integer that can be properly represented by a float32 with 23-bit mantissa.](https://stackoverflow.com/a/3793950/7471760)<br>; \anchor doublemax2 (****) 2^53 = 9007199254740992 is the [maximum integer that can be properly represented by a double64 with 52-bit mantissa.](https://stackoverflow.com/a/3793950/7471760); </sup>. */; ////////////////////////////////////////////////////////////////////////////////; /// 2-D histogram default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:1404,variab,variable,1404,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,2,['variab'],['variable']
Modifiability,"entical to the command "".L macro.C++"" in the root prompt //; // command line. //; // //; // Interrupting a Running Macro //; // //; // You can interrupt a running macro by selecting the Tools menu / //; // Interrupt; by clicking on the corresponding toolbar button, or by //; // using Shift+F5 accelerator keys. //; // //; // Interface to CINT Interpreter //; // //; // Any command entered in the Command combo box will be passed to //; // the CINT interpreter. This combo box will keep the commands history //; // and will allow you to re-execute the same commands during an editor //; // session. //; // //; // Keyboard Bindings //; // //; // The following table lists the keyboard shortcuts and accelerator //; // keys. //; // //; // Key: Action: //; // ==== ======= //; // //; // Up Move cursor up. //; // Shift+Up Move cursor up and extend selection. //; // Down Move cursor down. //; // Shift+Down Move cursor down and extend selection. //; // Left Move cursor left. //; // Shift+Left Move cursor left and extend selection. //; // Right Move cursor right. //; // Shift+Right Move cursor right and extend selection. //; // Home Move cursor to begin of line. //; // Shift+Home Move cursor to begin of line and extend selection.//; // Ctrl+Home Move cursor to top of page. //; // End Move cursor to end of line. //; // Shift+End Move cursor to end of line and extend selection. //; // Ctrl+End Move cursor to end of page. //; // PgUp Move cursor up one page. //; // Shift+PgUp Move cursor up one page and extend selection. //; // PgDn Move cursor down one page. //; // Shift+PgDn Move cursor down one page and extend selection. //; // Delete Delete character after cursor, or text selection. //; // BackSpace Delete character before cursor, or text selection.//; // Ctrl+B Move cursor left. //; // Ctrl+D Delete character after cursor, or text selection. //; // Ctrl+E Move cursor to end of line. //; // Ctrl+H Delete character before cursor, or text selection.//; // Ctrl+K Delete characters from ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx:4611,extend,extend,4611,test/RootIDE/TGRootIDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx,1,['extend'],['extend']
Modifiability,"ents combined with an accurate description of all the Probability; Density Functions (PDF). To assess the validity of the fit, a convincing quality check; is to explore further the data sample by examining the distributions of; control variables. A control variable can be obtained for instance by; removing one of the discriminating variables before performing again; the maximum Likelihood fit: this removed variable is a control; variable. The expected distribution of this control variable, for; signal, is to be compared to the one extracted, for signal, from the; data sample. In order to be able to do so, one must be able to unfold; from the distribution of the whole data sample. The TSPlot method allows to reconstruct the distributions for; the control variable, independently for each of the various sources of; events, without making use of any <em>a priori</em> knowledge on <u>this</u>; variable. The aim is thus to use the knowledge available for the; discriminating variables to infer the behaviour of the individual; sources of events with respect to the control variable. TSPlot is optimal if the control variable is uncorrelated with the discriminating variables. A detail description of the formalism itself, called \f$\hbox{$_s$}{\cal P}lot\f$, is given; in [[1](https://arxiv.org/abs/physics/0402083)]. ### The method. The \f$\hbox{$_s$}{\cal P}lot\f$ technique is developed in the above context of a; maximum Likelihood method making use of discriminating variables. One considers a data sample in which are merged several species; of events. These species represent various signal components and; background components which all together account for the data sample.; The different terms of the log-Likelihood are:. - \f$N\f$ : the total number of events in the data sample,; - \f${\rm N}_{\rm s}\f$ : the number of species of events populating the data sample,; - \f$N_i\f$ : the number of events expected on the average for the \f$i^{\rm th}\f$ species,; - \f${\rm f}_i(y_e)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:1299,variab,variables,1299,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"ents straight-line strength reduction (SLSR). Unlike loop; // strength reduction, this algorithm is designed to reduce arithmetic; // redundancy in straight-line code instead of loops. It has proven to be; // effective in simplifying arithmetic statements derived from an unrolled loop.; // It can also simplify the logic of SeparateConstOffsetFromGEP.; //; // There are many optimizations we can perform in the domain of SLSR. This file; // for now contains only an initial step. Specifically, we look for strength; // reduction candidates in the following forms:; //; // Form 1: B + i * S; // Form 2: (B + i) * S; // Form 3: &B[i * S]; //; // where S is an integer variable, and i is a constant integer. If we found two; // candidates S1 and S2 in the same form and S1 dominates S2, we may rewrite S2; // in a simpler way with respect to S1. For example,; //; // S1: X = B + i * S; // S2: Y = B + i' * S => X + (i' - i) * S; //; // S1: X = (B + i) * S; // S2: Y = (B + i') * S => X + (i' - i) * S; //; // S1: X = &B[i * S]; // S2: Y = &B[i' * S] => &X[(i' - i) * S]; //; // Note: (i' - i) * S is folded to the extent possible.; //; // This rewriting is in general a good idea. The code patterns we focus on; // usually come from loop unrolling, so (i' - i) * S is likely the same; // across iterations and can be reused. When that happens, the optimized form; // takes only one add starting from the second iteration.; //; // When such rewriting is possible, we call S1 a ""basis"" of S2. When S2 has; // multiple bases, we choose to rewrite S2 with respect to its ""immediate""; // basis, the basis that is the closest ancestor in the dominator tree.; //; // TODO:; //; // - Floating point arithmetics when fast math is enabled.; //; // - SLSR may decrease ILP at the architecture level. Targets that are very; // sensitive to ILP may want to disable it. Having SLSR to consider ILP is; // left as future work.; //; // - When (i' - i) is constant but i and i' are not, we could still perform; // SLSR.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp:1933,rewrite,rewrite,1933,interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp,1,['rewrite'],['rewrite']
Modifiability,"er the behaviour of the individual; sources of events with respect to the control variable. TSPlot is optimal if the control variable is uncorrelated with the discriminating variables. A detail description of the formalism itself, called \f$\hbox{$_s$}{\cal P}lot\f$, is given; in [[1](https://arxiv.org/abs/physics/0402083)]. ### The method. The \f$\hbox{$_s$}{\cal P}lot\f$ technique is developed in the above context of a; maximum Likelihood method making use of discriminating variables. One considers a data sample in which are merged several species; of events. These species represent various signal components and; background components which all together account for the data sample.; The different terms of the log-Likelihood are:. - \f$N\f$ : the total number of events in the data sample,; - \f${\rm N}_{\rm s}\f$ : the number of species of events populating the data sample,; - \f$N_i\f$ : the number of events expected on the average for the \f$i^{\rm th}\f$ species,; - \f${\rm f}_i(y_e)\f$ : the value of the PDFs of the discriminating variables; \f$y\f$ for the\f$i^{th}\f$ species and for event\f$e\f$,; - \f$x\f$ : the set of control variables which, by definition, do not appear in; the expression of the Likelihood function \f${\cal L}\f$. The extended log-Likelihood reads:. \f[; {\cal L}=\sum_{e=1}^{N}\ln \Big\{ \sum_{i=1}^{{\rm N}_{\rm s}}N_i{\rm f}_i(y_e) \Big\} -\sum_{i=1}^{{\rm N}_{\rm s}}N_i \tag{1}; \f]. From this expression, after maximization of \f${\cal L}\f$ with respect to the \f$N_i\f$ parameters,; a weight can be computed for every event and each species, in order to obtain later the true distribution; \f$\hbox{M}_i(x)\f$ of variable \f$x\f$. If \f${\rm n}\f$ is one of the; \f${\rm N}_{\rm s}\f$ species present in the data sample, the weight for this species is defined by:. \f[; \fbox{$; {_s{\cal P}}_{\rm n}(y_e)={\sum_{j=1}^{{\rm N}_{\rm s}} \hbox{V}_{{\rm n}j}{\rm f}_j(y_e)\over\sum_{k=1}^{{\rm N}_{\rm s}}N_k{\rm f}_k(y_e) } $} , \tag{2}; \f]. where ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:2367,variab,variables,2367,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,2,['variab'],['variables']
Modifiability,"er, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCFMlpANN *; * *; * *; * Description: *; * Interface for Clermond-Ferrand artificial neural network. *; * The ANN code has been translated from FORTRAN77 (f2c); *; * see files: MethodCFMlpANN_f2c_mlpl3.cpp *; * MethodCFMlpANN_f2c_datacc.cpp *; * *; * -------------------------------------------------------------------- *; * Reference for the original FORTRAN version: *; * Authors : J. Proriol and contributions from ALEPH-Clermont-Fd *; * Team members. Contact : gaypas@afal11.cern.ch *; * *; * Copyright: Laboratoire Physique Corpusculaire *; * Universite de Blaise Pascal, IN2P3/CNRS *; * -------------------------------------------------------------------- *; * *; * Usage: options are given through Factory: *; * factory->BookMethod( ""MethodCFMlpANN"", OptionsString ); *; * *; * where: *; * TString OptionsString = ""n_training_cycles:n_hidden_layers"" *; * *; * default is: n_training_cycles = 5000, n_layers = 4 *; * note that the number of hidden layers in the NN is *; * *; * n_hidden_layers = n_layers - 2 *; * *; * since there is one input and one output layer. The number of *; * nodes (neurons) is predefined to be *; * *; * n_nodes[i] = nvars + 1 - i (where i=1..n_layers) *; * *; * with nvars being the number of variables used in the NN. *; * Hence, the default case is: n_neurons(layer 1 (input)) : nvars *; * n_neurons(layer 2 (hidden)): nvars-1 *; * n_neurons(layer 3 (hidden)): nvars-1 *; * n_neurons(layer 4 (out)) : 2 *; * *; * This artificial neural network usually needs a relatively large *; * number of cycles to converge (8000 and more). Overtraining can *; * be efficiently tested by comparing the signal and background *; * output of the NN for the events that were used for training and *; * an independent data sample (with equal properties). If th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN.h:1239,layers,layers,1239,tmva/tmva/inc/TMVA/MethodCFMlpANN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN.h,1,['layers'],['layers']
Modifiability,"er-roman;"">; <li><a href=""#usage"">Usage</a></li>; <li><a href=""#conf"">Configuration</a>; <ol><li><a href=""#conf:input"">Input files</a></li>; <li><a href=""#conf:output"">Output directory</a></li>; <li><a href=""#conf:liblink"">Linking other documentation</a></li>; <li><a href=""#conf:classdoc"">Recognizing class documentation</a></li>; <li><a href=""#conf:tags"">Author, copyright, etc.</a></li>; <li><a href=""#conf:header"">Header and footer</a></li>; <li><a href=""#conf:search"">Links to searches, home page, ViewVC</a></li>; <li><a href=""#conf:charset"">HTML Charset</a></li>; </ol></li>; <li><a href=""#syntax"">Documentation syntax</a>; <ol><li><a href=""#syntax:classdesc"">Class description</a></li>; <li><a href=""#syntax:classidx"">Class index</a></li>; <li><a href=""#syntax:meth"">Method documentation</a></li>; <li><a href=""#syntax:datamem"">Data member documentation</a></li>; </ol></li>; <li><a href=""#directive"">Documentation directives</a>; <ol><li><a href=""#directive:html""><tt>BEGIN<!-- -->_HTML</tt> <tt>END<!-- -->_HTML</tt>: include 'raw' HTML</a></li>; <li><a href=""#directive:macro""><tt>BEGIN<!-- -->_MACRO</tt> <tt>END<!-- -->_MACRO</tt>: include a picture generated by a macro</a></li>; <li><a href=""#directive:latex""><tt>BEGIN<!-- -->_LATEX</tt> <tt>END<!-- -->_LATEX</tt>: include a latex picture</a></li>; </ol></li>; <li><a href=""#index"">Product and module index</a></li>; <li><a href=""#aux"">Auxiliary files: style sheet, JavaScript, help page</a></li>; <li><a href=""#charts"">Class Charts</a></li>; <li><a href=""#confvar"">Configuration variables</a></li>; <li><a href=""#how"">Behind the scenes</a></li>; </ol>. <h3><a name=""usage"">I. Usage</a></h3>; These are typical things people do with THtml:; <pre>; root[] <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> html; // create a <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> object; root[] html.LoadAllLibs(); // Load all rootmap'ed libraries; root[] html.MakeAll(); // generate documentation for all changed clas",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:2683,Config,Configuration,2683,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,2,"['Config', 'variab']","['Configuration', 'variables']"
Modifiability,"er@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Reader; \ingroup TMVA. The Reader class serves to use the MVAs in a specific analysis context.; Within an event loop, a vector is filled that corresponds to the variables; that were used to train the MVA(s) during the training stage. This vector; is transfered to the Reader, who takes care of interpreting the weight; file of the MVA of choice, and to return the MVA's output. This is then; used by the user for further analysis. Usage:. ~~~ {.cpp}; // ------ before starting the event loop (eg, in the initialisation step). //; // create TMVA::Reader object; //; TMVA::Reader *reader = new TMVA::Reader();. // create a set of variables and declare them to the reader; // - the variable names must corresponds in name and type to; // those given in the weight file(s) that you use; Float_t var1, var2, var3, var4;; reader->AddVariable( ""var1"", &var1 );; reader->AddVariable( ""var2"", &var2 );; reader->AddVariable( ""var3"", &var3 );; reader->AddVariable( ""var4"", &var4 );. // book the MVA of your choice (prior training of these methods, ie,; // existence of the weight files is required); reader->BookMVA( ""Fisher method"", ""weights/Fisher.weights.txt"" );; reader->",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx:1522,variab,variables,1522,tmva/tmva/src/Reader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx,1,['variab'],['variables']
Modifiability,"erfaced with RDataSources. The ROOT::RDF::RDataSource interface defines an API that RDataFrame can use to read arbitrary columnar data formats. RDataFrame calls into concrete RDataSource implementations to retrieve information about the data, retrieve (thread-local) readers or ""cursors"" for selected columns; and to advance the readers to the desired data entry.; Some predefined RDataSources are natively provided by ROOT such as the ROOT::RDF::RCsvDS which allows to read comma separated files:; ~~~{.cpp}; auto tdf = ROOT::RDF::FromCSV(""MuRun2010B.csv"");; auto filteredEvents =; tdf.Filter(""Q1 * Q2 == -1""); .Define(""m"", ""sqrt(pow(E1 + E2, 2) - (pow(px1 + px2, 2) + pow(py1 + py2, 2) + pow(pz1 + pz2, 2)))"");; auto h = filteredEvents.Histo1D(""m"");; h->Draw();; ~~~. See also FromNumpy (Python-only), FromRNTuple(), FromArrow(), FromSqlite(). \anchor callgraphs; ### Computation graphs (storing and reusing sets of transformations). As we saw, transformed dataframes can be stored as variables and reused multiple times to create modified versions of the dataset. This implicitly defines a **computation graph** in which; several paths of filtering/creation of columns are executed simultaneously, and finally aggregated results are produced. RDataFrame detects when several actions use the same filter or the same defined column, and **only evaluates each; filter or defined column once per event**, regardless of how many times that result is used down the computation graph.; Objects read from each column are **built once and never copied**, for maximum efficiency.; When ""upstream"" filters are not passed, subsequent filters, temporary column expressions and actions are not evaluated,; so it might be advisable to put the strictest filters first in the graph. \anchor representgraph; ### Visualizing the computation graph; It is possible to print the computation graph from any node to obtain a [DOT (graphviz)](https://en.wikipedia.org/wiki/DOT_(graph_description_language)) representation e",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:74934,variab,variables,74934,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['variab'],['variables']
Modifiability,"ermany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodLikelihood; \ingroup TMVA. Likelihood analysis (""non-parametric approach""). Also implemented is a ""diagonalized likelihood approach"",; which improves over the uncorrelated likelihood approach by; transforming linearly the input variables into a diagonal space,; using the square-root of the covariance matrix. The method of maximum likelihood is the most straightforward, and; certainly among the most elegant multivariate analyser approaches.; We define the likelihood ratio, \f$ R_L \f$, for event; \f$ i \f$, by:. \f[; R_L(i) = \frac{L_S(i)}{L_B(i) + L_B(i)}; \f]. Here the signal and background likelihoods, \f$ L_S \f$,; \f$ L_B \f$, are products of the corresponding probability; densities, \f$ p_S \f$, \f$ p_B \f$, of the; \f$ N_{var} \f$ discriminating variables used in the MVA:. \f[; L_S(i) \ \prod_{j=1}^{N_{var}} p_{Sj} (i); \f]. and accordingly for \f$ L_B \f$.; In practise, TMVA uses polynomial splines to estimate the probability; density functions (PDF) obtained from the distributions of the; training variables. Note that in TMVA the output of the likelihood ratio is transformed by:. \f[; R_L(i) \to R'_L(i) = -\frac{1}{\tau} ln(R_L^{-1}(i) -1); \f]. to avoid the occurrence of heavy peaks at \f$ R_L = 0.1 \f$ . #### Decorrelated (or ""diagonalized"") Likelihood. The biggest drawback of the Likelihood approach is that it assumes; that the discriminant variables are uncorrelated. If it were the case,; it can be proven that the discrimination obtained by the above likelihood; ratio is optimal, ie, no other method can beat it. However, in most; practical applications of MVAs correlations are present. </p>. Linear correlations, measured from the training",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLikelihood.cxx:1956,variab,variables,1956,tmva/tmva/src/MethodLikelihood.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLikelihood.cxx,1,['variab'],['variables']
Modifiability,"ernel does not allocate a given variable, it writes undef to; // the corresponding array location. These arrays are written to a constant; // table in the order matching the kernel unique integer identifier.; // Third, uses from non-kernel functions are replaced with a table lookup using; // the intrinsic function to find the address of the variable.; //; // ""Kernel"" lowering is only applicable for variables that are unambiguously; // reachable from exactly one kernel. For those cases, accesses to the variable; // can be lowered to ConstantExpr address of a struct instance specific to that; // one kernel. This is zero cost in space and in compute. It will raise a fatal; // error on any variable that might be reachable from multiple kernels and is; // thus most easily used as part of the hybrid lowering strategy.; //; // Hybrid lowering is a mixture of the above. It uses the zero cost kernel; // lowering where it can. It lowers the variable accessed by the greatest; // number of kernels using the module strategy as that is free for the first; // variable. Any futher variables that can be lowered with the module strategy; // without incurring LDS memory overhead are. The remaining ones are lowered; // via table.; //; // Consequences; // - No heuristics or user controlled magic numbers, hybrid is the right choice; // - Kernels that don't use functions (or have had them all inlined) are not; // affected by any lowering for kernels that do.; // - Kernels that don't make indirect function calls are not affected by those; // that do.; // - Variables which are used by lots of kernels, e.g. those injected by a; // language runtime in most kernels, are expected to have no overhead; // - Implementations that instantiate templates per-kernel where those templates; // use LDS are expected to hit the ""Kernel"" lowering strategy; // - The runtime properties impose a cost in compiler implementation complexity; //; // Dynamic LDS implementation; // Dynamic LDS is lowered similarly to",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:5518,variab,variable,5518,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,2,['variab'],['variable']
Modifiability,"erver implementing the REST API of the Amazon S3 protocol. This; class is meant to be as generic as possible to be used with files; hosted not only by Amazon S3 servers but also by other providers; implementing the core of the S3 protocol. The S3 protocol works on top of HTTPS (and HTTP) and imposes that; each HTTP request be signed using a specific convention: the request; must include an 'Authorization' header which contains the signature; of a concatenation of selected request fields. For signing the; request, an 'Access Key Id' and a 'Secret Access Key' need to be; known. These keys are used by the S3 servers to identify the client; and to authenticate the request as genuine. As an end user, you must know the Access Key and Secret Access Key; in order to access each S3 file. They are provided to you by your S3; service provider. Those two keys can be provided to ROOT when; initializing an object of this class by two means:; a. by using the environmental variables S3_ACCESS_KEY and ; S3_SECRET_KEY, or; b. by specifying them when opening each file. You can use AWS temporary security credentials (temporary access key; and secret access key), but you must also give the associated; session token. The token may be set in the S3_SESSION_TOKEN; environmental variable, or on open in the TOKEN option. The first method is convenient if all the S3 files you want to; access are hosted by a single provider. The second one is more; flexible as it allows you to specify which credentials to use; on a per-file basis. See the documentation of the constructor of; this class for details on the syntax. For generating and signing the HTTP request, this class uses; TS3HTTPRequest. For more information on the details of S3 protocol please refer to:; ""Amazon Simple Storage Service Developer Guide"":; http://docs.amazonwebservices.com/AmazonS3/latest/dev/Welcome.html. ""Amazon Simple Storage Service REST API Reference""; http://docs.amazonwebservices.com/AmazonS3/latest/API/APIRest.html. **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:1894,variab,variable,1894,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,2,"['flexible', 'variab']","['flexible', 'variable']"
Modifiability,"es are retained in all copies and that this; notice is included verbatim in any distributions. No written agreement,; license, or royalty fee is required for any of the authorized uses.; Modifications to this software may be copyrighted by their authors; and need not follow the licensing terms described here, provided that; the new terms are clearly indicated on the first page of each file where; they apply. IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY; FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES; ARISING OUT OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY; DERIVATIVES THEREOF, EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE; POSSIBILITY OF SUCH DAMAGE. THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. THIS SOFTWARE; IS PROVIDED ON AN ""AS IS"" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE; NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR; MODIFICATIONS. GOVERNMENT USE: If you are acquiring this software on behalf of the; U.S. government, the Government shall have only ""Restricted Rights""; in the software and related documentation as defined in the Federal ; Acquisition Regulations (FARs) in Clause 52.227.19 (c) (2). If you; are acquiring the software on behalf of the Department of Defense, the; software shall be classified as ""Commercial Computer Software"" and the; Government shall have only ""Restricted Rights"" as defined in Clause; 252.227-7013 (c) (1) of DFARs. Notwithstanding the foregoing, the; authors grant the U.S. Government and others acting in its behalf; permission to use and distribute the software in accordance with the; terms specified in this license.; */; /*; *----------------------------------------------------------------------; *; * XAllocColor --; *; *	Find the closest available color to the specified XColor.; *; * Results:; *	U",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c:1713,ENHANCE,ENHANCEMENTS,1713,graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,1,['ENHANCE'],['ENHANCEMENTS']
Modifiability,"esNIM.png Figure 1 width=800. Distributions of the three discriminating variables available to perform the Likelihood fit:; \f${m_{\rm ES}}\f$ , \f$\Delta E\f$ , \f${\cal F}\f$ .; Among the three variables, two are used to perform the fit while one is; kept out of the fit to serve the purpose of a control variable. The; three distributions on the top (resp. bottom) of the figure correspond; to the signal (resp. background). The unit of the vertical axis is; chosen such that it indicates the number of entries per bin, if one; slices the histograms in 25 bins. A data sample being built through a Monte Carlo simulation based on the; distributions shown in Fig.; 1,; one obtains the three distributions of Fig. 2.; Whereas the distribution of \f$\Delta E\f$ clearly indicates the presence of the signal,; the distribution of \f${m_{\rm ES}}\f$ and \f${\cal F}\f$ are less obviously populated by signal. \image html splot_genfiTOTNIM.png Figure 2 width=800. Distributions of the three discriminating variables for signal plus; background. The three distributions are the ones obtained from a data; sample obtained through a Monte Carlo simulation based on the; distributions shown in Fig.; 1.; The data sample consists of 500 signal events and 5000 background events. Choosing \f$\Delta E\f$ and \f${\cal F}\f$ as discriminating variables to determine; \f$N_1\f$ and \f$N_2\f$ through a maximum Likelihood fit, one builds, for the control; variable \f${m_{\rm ES}}\f$ which is unknown to the fit, the two \f$\hbox {$_s$}{\cal P}lots\f$; for signal and background shown in; Fig. 3.; One observes that the \f$\hbox{$_s$}{\cal P}lot\f$; for signal reproduces correctly the PDF even where the latter vanishes,; although the error bars remain sizeable. This results from the almost; complete cancellation between positive and negative weights: the sum of; weights is close to zero while the sum of weights squared is not. The; occurrence of negative weights occurs through the appearance of the; covaria",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:8106,variab,variables,8106,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variables']
Modifiability,"essing slot.; /// \tparam F The type of the aggregator callable. Automatically deduced.; /// \tparam U The type of the aggregator variable. Must be default-constructible, copy-constructible and copy-assignable. Automatically deduced.; /// \tparam T The type of the column to apply the reduction to. Automatically deduced.; /// \param[in] aggregator A callable with signature `U(U,T)` or `void(U&,T)`, where T is the type of the column, U is the type of the aggregator variable; /// \param[in] merger A callable with signature `U(U,U)` or `void(std::vector<U>&)` used to merge the results of the accumulations of each thread; /// \param[in] columnName The column to be aggregated. If omitted, the first default column is used instead.; /// \param[in] aggIdentity The aggregator variable of each thread is initialized to this value (or is default-constructed if the parameter is omitted); /// \return the result of the aggregation wrapped in a RResultPtr.; ///; /// An aggregator callable takes two values, an aggregator variable and a column value. The aggregator variable is; /// initialized to aggIdentity or default-constructed if aggIdentity is omitted.; /// This action calls the aggregator callable for each processed entry, passing in the aggregator variable and; /// the value of the column columnName.; /// If the signature is `U(U,T)` the aggregator variable is then copy-assigned the result of the execution of the callable.; /// Otherwise the signature of aggregator must be `void(U&,T)`.; ///; /// The merger callable is used to merge the partial accumulation results of each processing thread. It is only called in multi-thread executions.; /// If its signature is `U(U,U)` the aggregator variables of each thread are merged two by two.; /// If its signature is `void(std::vector<U>& a)` it is assumed that it merges all aggregators in a[0].; ///; /// This action is *lazy*: upon invocation of this method the calculation is booked but not executed. Also see RResultPtr.; ///; /// Exampl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1218,variab,variable,1218,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['variab'],['variable']
Modifiability,"et limits on one or more parameters and the fitting function is a predefined one (e.g gaus, expo,..), otherwise in case of pre-defined functions, some default initial values and limits will be used.; /// ""C"" | In case of linear fitting, do no calculate the chisquare (saves CPU time).; /// ""G"" | Uses the gradient implemented in `TF1::GradientPar` for the minimization. This allows to use Automatic Differentiation when it is supported by the provided TF1 function.; /// ""WIDTH"" | Scales the histogran bin content by the bin width (useful for variable bins histograms); /// ""SERIAL"" | Runs in serial mode. By defult if ROOT is built with MT support and MT is enables, the fit is perfomed in multi-thread - ""E"" Perform better Errors estimation using Minos technique; /// ""MULTITHREAD"" | Forces usage of multi-thread execution whenever possible; ///; /// The default fitting of an histogram (when no option is given) is perfomed as following:; /// - a chi-square fit (see below Chi-square Fits) computed using the bin histogram errors and excluding bins with zero errors (empty bins);; /// - the full range of the histogram is used;; /// - the default Minimizer with its default configuration is used (see below Minimizer Configuration) except for linear function;; /// - for linear functions (`polN`, `chenbyshev` or formula expressions combined using operator `++`) a linear minimization is used.; /// - only the status of the fit is returned;; /// - the fit is performed in Multithread whenever is enabled in ROOT;; /// - only the last fitted function is saved in the histogram;; /// - the histogram is drawn after fitting overalyed with the resulting fitting function; ///; /// \anchor HFitMinimizer; /// ### Minimizer Configuration; ///; /// The Fit is perfomed using the default Minimizer, defined in the `ROOT::Math::MinimizerOptions` class.; /// It is possible to change the default minimizer and its configuration parameters by calling these static functions before fitting (before calling `TH1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:4357,config,configuration,4357,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,"['Config', 'config']","['Configuration', 'configuration']"
Modifiability,"et to 0 to indicate that; /// an extension word is required.; /// Code Words : 4-bit (5-bit on ARM64) field that specifies the number of; /// 32-bit words needed to contain all the unwind codes. If more; /// than 15 words (31 words on ARM64) are required, then this field; /// and the Epilogue Count field must both be set to 0 to indicate; /// that an extension word is required.; /// Extended Epilogue Count, Extended Code Words :; /// Valid only if Epilog Count and Code Words are both; /// set to 0. Provides an 8-bit extended code word; /// count and 16-bits for epilogue count; ///; /// The epilogue scope format on ARM is:; ///; /// 3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0; /// 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0; /// +----------------+------+---+---+-------------------------------+; /// | Ep Start Idx | Cond |Res| Epilogue Start Offset |; /// +----------------+------+---+-----------------------------------+; ///; /// The epilogue scope format on ARM64 is:; ///; /// 3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0; /// 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0; /// +-------------------+-------+---+-------------------------------+; /// | Ep Start Idx | Res | Epilogue Start Offset |; /// +-------------------+-------+-----------------------------------+; ///; /// If the E bit is unset in the header, the header is followed by a series of; /// epilogue scopes, which are sorted by their offset.; ///; /// Epilogue Start Offset: 18-bit field encoding the offset of epilogue relative; /// to the start of the function in bytes divided by two; /// Res : 2-bit field reserved for future expansion (must be set to 0); /// Condition : (ARM only) 4-bit field providing the condition under which the; /// epilogue is executed. Unconditional epilogues should set this; /// field to 0xe. Epilogues must be entirely conditional or; /// unconditional, and in Thumb-2 mode. The epilogue begins with; /// the fi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h:2656,extend,extended,2656,interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h,1,['extend'],['extended']
Modifiability,"events. These species represent various signal components and; background components which all together account for the data sample.; The different terms of the log-Likelihood are:. - \f$N\f$ : the total number of events in the data sample,; - \f${\rm N}_{\rm s}\f$ : the number of species of events populating the data sample,; - \f$N_i\f$ : the number of events expected on the average for the \f$i^{\rm th}\f$ species,; - \f${\rm f}_i(y_e)\f$ : the value of the PDFs of the discriminating variables; \f$y\f$ for the\f$i^{th}\f$ species and for event\f$e\f$,; - \f$x\f$ : the set of control variables which, by definition, do not appear in; the expression of the Likelihood function \f${\cal L}\f$. The extended log-Likelihood reads:. \f[; {\cal L}=\sum_{e=1}^{N}\ln \Big\{ \sum_{i=1}^{{\rm N}_{\rm s}}N_i{\rm f}_i(y_e) \Big\} -\sum_{i=1}^{{\rm N}_{\rm s}}N_i \tag{1}; \f]. From this expression, after maximization of \f${\cal L}\f$ with respect to the \f$N_i\f$ parameters,; a weight can be computed for every event and each species, in order to obtain later the true distribution; \f$\hbox{M}_i(x)\f$ of variable \f$x\f$. If \f${\rm n}\f$ is one of the; \f${\rm N}_{\rm s}\f$ species present in the data sample, the weight for this species is defined by:. \f[; \fbox{$; {_s{\cal P}}_{\rm n}(y_e)={\sum_{j=1}^{{\rm N}_{\rm s}} \hbox{V}_{{\rm n}j}{\rm f}_j(y_e)\over\sum_{k=1}^{{\rm N}_{\rm s}}N_k{\rm f}_k(y_e) } $} , \tag{2}; \f]. where \f$\hbox{V}_{{\rm n}j}\f$. is the covariance matrix resulting from the Likelihood maximization.; This matrix can be used directly from the fit, but this is numerically; less accurate than the direct computation:. \f[; \hbox{ V}^{-1}_{{\rm n}j}~=~; {\partial^2(-{\cal L})\over\partial N_{\rm n}\partial N_j}~=~; \sum_{e=1}^N {{\rm f}_{\rm n}(y_e){\rm f}_j(y_e)\over(\sum_{k=1}^{{\rm N}_{\rm s}}N_k{\rm f}_k(y_e))^2} . \tag{3}; \f]. The distribution of the control variable \f$x\f$ obtained by histogramming the weighted; events reproduces, on average, the true",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:2983,variab,variable,2983,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variable']
Modifiability,"ever, the two; // variables are accessed in disjoint regions of the CFG, thus it; // should be possible for them to share the same stack slot. An ideal; // stack allocation for the function above would look like:; //; // slot 0: b1, b2; // slot 1: b3, b4; // slot 2: b5; //; // Achieving this allocation is tricky, however, due to the way; // lifetime markers are inserted. Here is a simplified view of the; // control flow graph for the code above:; //; // +------ block 0 -------+; // 0| LIFETIME_START b1, b2 |; // 1| <test 'if' condition> |; // +-----------------------+; // ./ \.; // +------ block 1 -------+ +------ block 2 -------+; // 2| LIFETIME_START b3 | 5| LIFETIME_START b4, b5 |; // 3| <uses of b1, b3> | 6| <uses of b2, b4, b5> |; // 4| LIFETIME_END b3 | 7| LIFETIME_END b4, b5 |; // +-----------------------+ +-----------------------+; // \. /.; // +------ block 3 -------+; // 8| <cleanupcode> |; // 9| LIFETIME_END b1, b2 |; // 10| return |; // +-----------------------+; //; // If we create live intervals for the variables above strictly based; // on the lifetime markers, we'll get the set of intervals on the; // left. If we ignore the lifetime start markers and instead treat a; // variable's lifetime as beginning with the first reference to the; // var, then we get the intervals on the right.; //; // LIFETIME_START First Use; // b1: [0,9] [3,4] [8,9]; // b2: [0,9] [6,9]; // b3: [2,4] [3,4]; // b4: [5,7] [6,7]; // b5: [5,7] [6,7]; //; // For the intervals on the left, the best we can do is overlap two; // variables (b3 and b4, for example); this gives us a stack size of; // 4*1024 bytes, not ideal. When treating first-use as the start of a; // lifetime, we can additionally overlap b1 and b5, giving us a 3*1024; // byte stack (better).; //; // Degenerate Slots:; // -----------------; //; // Relying entirely on first-use of stack slots is problematic,; // however, due to the fact that optimizations can sometimes migrate; // uses of a variable outside of its lifeti",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp:7035,variab,variables,7035,interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,1,['variab'],['variables']
Modifiability,"every histogram cell. Unfortunately,; * it needs a work array to hold the best-distance-so-far for each histogram; * cell (because the inner loop has to be over cells, not colormap entries).; * The work array elements have to be INT32s, so the work array would need; * 256Kb at our recommended precision. This is not feasible in DOS machines.; *; * To get around these problems, we apply Thomas' method to compute the; * nearest colors for only the cells within a small subbox of the histogram.; * The work array need be only as big as the subbox, so the memory usage; * problem is solved. Furthermore, we need not fill subboxes that are never; * referenced in pass2; many images use only part of the color gamut, so a; * fair amount of work is saved. An additional advantage of this; * approach is that we can apply Heckbert's locality criterion to quickly; * eliminate colormap entries that are far away from the subbox; typically; * three-fourths of the colormap entries are rejected by Heckbert's criterion,; * and we need not compute their distances to individual cells in the subbox.; * The speed of this approach is heavily influenced by the subbox size: too; * small means too much overhead, too big loses because Heckbert's criterion; * can't eliminate as many colormap entries. Empirically the best subbox; * size seems to be about 1/512th of the histogram (1/8th in each direction).; *; * Thomas' article also describes a refined method which is asymptotically; * faster than the brute-force method, but it is also far more complex and; * cannot efficiently be applied to small subboxes. It is therefore not; * useful for programs intended to be portable to DOS machines. On machines; * with plenty of memory, filling the whole histogram in one shot with Thomas'; * refined method might be faster than the present code --- but then again,; * it might not be any faster, and it's certainly more complicated.; */; /* log2(histogram cells in update box) for each axis; this can be adjusted */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:3185,portab,portable,3185,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['portab'],['portable']
Modifiability,"f MINUIT. The [MINUIT](https://root.cern/download/minuit.pdf); package acts on a multiparameter Fortran function to which one; must give the generic name <TT>FCN</TT>. In the ROOT implementation,; the function <TT>FCN</TT> is defined via the MINUIT SetFCN member function; when an Histogram.Fit command is invoked.; The value of <TT>FCN</TT> will in general depend on one; or more variable parameters. To take a simple example, in case of ROOT histograms (classes TH1C,TH1S,TH1F,TH1D); the Fit function defines the Minuit fitting function as being H1FitChisquare; or H1FitLikelihood depending on the options selected.; H1FitChisquare; calculates the chisquare between the user fitting function (gaussian, polynomial,; user defined,etc) and the data for given values of the parameters.; It is the task of MINUIT to find those values of the parameters; which give the lowest value of chisquare. ### Basic concepts - The transformation for parameters with limits. For variable parameters with limits, MINUIT uses the following; transformation:. \f[; P_{\mathrm{int}} = \arcsin; \left( 2\: \frac{P_{\mathrm{ext}}-a}{b-a} - 1 \right); P_{\mathrm{ext}} = a + \frac{b - a}{2} \left( \sin P_{\mathrm{int}} + 1 \right); \f]. so that the internal value \f$P_{\mathrm{int}}\f$ can take on any value, while; the external value \f$P_{\mathrm{ext}}\f$ can take on values only between the lower; limit \f$a\f$ and the upper limit \f$b\f$.; Since the transformation is necessarily non-linear, it would transform a; nice linear problem into a nasty non-linear one, which is the reason why; limits should be avoided if not necessary.; In addition, the transformation; does require some computer time, so it slows down the computation a little; bit, and more importantly, it introduces additional numerical inaccuracy into; the problem in addition to what is introduced in the numerical calculation; of the FCN value.; The effects of non-linearity and numerical roundoff both; become more important as the external value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:2876,variab,variable,2876,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['variab'],['variable']
Modifiability,"f any class inheriting from `TAttText` can; be changed using the method `SetTextAlign` and retrieved using the; method `GetTextAlign`. ~~~ {.cpp}; align = 10*HorizontalAlign + VerticalAlign; ~~~. For horizontal alignment the following convention applies:. ~~~ {.cpp}; 1=left adjusted, 2=centered, 3=right adjusted; ~~~. For vertical alignment the following convention applies:. ~~~ {.cpp}; 1=bottom adjusted, 2=centered, 3=top adjusted; ~~~. For example:. ~~~ {.cpp}; align = 11 = left adjusted and bottom adjusted; align = 32 = right adjusted and vertically centered; ~~~. Begin_Macro(source); textalign.C; End_Macro. Mnemonic constants are available:. ~~~ {.cpp}; kHAlignLeft = 10, kHAlignCenter = 20, kHAlignRight = 30,; kVAlignBottom = 1, kVAlignCenter = 2, kVAlignTop = 3; ~~~. They allow to write:. ~~~ {.cpp}; object->SetTextAlign(kHAlignLeft+kVAlignTop);; ~~~. \anchor ATTTEXT2; ## Text Angle. Text angle in degrees.; The text angle of any class inheriting from `TAttText` can; be changed using the method `SetTextAngle` and retrieved using the; method `GetTextAngle`.; The following picture shows the text angle:. Begin_Macro(source); textangle.C; End_Macro. \anchor ATTTEXT3; ## Text Color. The text color is a color index (integer) pointing in the ROOT; color table.; The text color of any class inheriting from `TAttText` can; be changed using the method `SetTextColor` and retrieved using the; method `GetTextColor`.; The following table shows the first 50 default colors. Begin_Macro; {; TCanvas *c = new TCanvas(""c"",""Fill Area colors"",0,0,500,200);; c->DrawColorTable();; return c;; }; End_Macro. ### Color transparency; `SetTextColorAlpha()`, allows to set a transparent color.; In the following example the text color of the text `text`; is set to blue with an opacity of 35% (i.e. a transparency of 65%).; (The color `kBlue` itself is internally stored as fully opaque.). ~~~ {.cpp}; text->SetTextColorAlpha(kBlue, 0.35);; ~~~. The transparency is available on all platforms when th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx:1758,inherit,inheriting,1758,core/base/src/TAttText.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx,1,['inherit'],['inheriting']
Modifiability,"f the SCC DAG and the fewer merge points; /// in the SCC DAG, the more independence there is in optimizing within it.; /// There is a strong desire to enable parallelization of optimizations over; /// the call graph, and both limited fanout and merge points will (artificially; /// in some cases) limit the scaling of such an effort.; ///; /// To this end, graph represents both direct and any potential resolution to; /// an indirect call edge. Another way to think about it is that it represents; /// both the direct call edges and any direct call edges that might be formed; /// through static optimizations. Specifically, it considers taking the address; /// of a function to be an edge in the call graph because this might be; /// forwarded to become a direct call by some subsequent function-local; /// optimization. The result is that the graph closely follows the use-def; /// edges for functions. Walking ""up"" the graph can be done by looking at all; /// of the uses of a function.; ///; /// The roots of the call graph are the external functions and functions; /// escaped into global variables. Those functions can be called from outside; /// of the module or via unknowable means in the IR -- we may not be able to; /// form even a potential call edge from a function body which may dynamically; /// load the function and call it.; ///; /// This analysis still requires updates to remain valid after optimizations; /// which could potentially change the set of potential callees. The; /// constraints it operates under only make the traversal order remain valid.; ///; /// The entire analysis must be re-computed if full interprocedural; /// optimizations run at any point. For example, globalopt completely; /// invalidates the information in this analysis.; ///; /// FIXME: This class is named LazyCallGraph in a lame attempt to distinguish; /// it from the existing CallGraph. At some point, it is expected that this; /// will be the only call graph and it will be renamed accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h:1918,variab,variables,1918,interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h,1,['variab'],['variables']
Modifiability,"f the instruction.; // These attributes, recorded in enum attributeBits; // (X86DisassemblerDecoderCommon.h), form a bitmask. The table CONTEXTS_SYM; // provides a mapping from bitmasks to contexts, which are represented by; // enum InstructionContext (ibid.).; //; // 2. Read the opcode, and determine what kind of opcode it is. The; // disassembler distinguishes four kinds of opcodes, which are enumerated in; // OpcodeType (X86DisassemblerDecoderCommon.h): one-byte (0xnn), two-byte; // (0x0f 0xnn), three-byte-38 (0x0f 0x38 0xnn), or three-byte-3a; // (0x0f 0x3a 0xnn). Mandatory prefixes are treated as part of the context.; //; // 3. Depending on the opcode type, look in one of four ClassDecision structures; // (X86DisassemblerDecoderCommon.h). Use the opcode class to determine which; // OpcodeDecision (ibid.) to look the opcode in. Look up the opcode, to get; // a ModRMDecision (ibid.).; //; // 4. Some instructions, such as escape opcodes or extended opcodes, or even; // instructions that have ModRM*Reg / ModRM*Mem forms in LLVM, need the; // ModR/M byte to complete decode. The ModRMDecision's type is an entry from; // ModRMDecisionType (X86DisassemblerDecoderCommon.h) that indicates if the; // ModR/M byte is required and how to interpret it.; //; // 5. After resolving the ModRMDecision, the disassembler has a unique ID; // of type InstrUID (X86DisassemblerDecoderCommon.h). Looking this ID up in; // INSTRUCTIONS_SYM yields the name of the instruction and the encodings and; // meanings of its operands.; //; // 6. For each operand, its encoding is an entry from OperandEncoding; // (X86DisassemblerDecoderCommon.h) and its type is an entry from; // OperandType (ibid.). The encoding indicates how to read it from the; // instruction; the type indicates how to interpret the value once it has; // been read. For example, a register operand could be stored in the R/M; // field of the ModR/M byte, the REG field of the ModR/M byte, or added to; // the main opcode. This is ortho",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp:1731,extend,extended,1731,interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp,1,['extend'],['extended']
Modifiability,"f this have to be merged; /// into one bin of the result.; ///; /// If the original histogram has errors stored (via Sumw2), the resulting; /// histograms has new errors correctly calculated.; ///; /// examples: if h1 is an existing TH1F histogram with 100 bins; ///; /// ~~~ {.cpp}; /// h1->Rebin(); //merges two bins in one in h1: previous contents of h1 are lost; /// h1->Rebin(5); //merges five bins in one in h1; /// TH1F *hnew = dynamic_cast<TH1F*>(h1->Rebin(5,""hnew"")); // creates a new histogram hnew; /// // merging 5 bins of h1 in one bin; /// ~~~; ///; /// NOTE: If ngroup is not an exact divider of the number of bins,; /// the top limit of the rebinned histogram is reduced; /// to the upper edge of the last bin that can make a complete; /// group. The remaining bins are added to the overflow bin.; /// Statistics will be recomputed from the new bin contents.; ///; /// #### case 2 xbins!=0; ///; /// A new histogram is created (you should specify newname).; /// The parameter ngroup is the number of variable size bins in the created histogram.; /// The array xbins must contain ngroup+1 elements that represent the low-edges; /// of the bins.; /// If the original histogram has errors stored (via Sumw2), the resulting; /// histograms has new errors correctly calculated.; ///; /// NOTE: The bin edges specified in xbins should correspond to bin edges; /// in the original histogram. If a bin edge in the new histogram is; /// in the middle of a bin in the original histogram, all entries in; /// the split bin in the original histogram will be transfered to the; /// lower of the two possible bins in the new histogram. This is; /// probably not what you want. A warning message is emitted in this; /// case; ///; /// examples: if h1 is an existing TH1F histogram with 100 bins; ///; /// ~~~ {.cpp}; /// Double_t xbins[25] = {...} array of low-edges (xbins[25] is the upper edge of last bin; /// h1->Rebin(24,""hnew"",xbins); //creates a new variable bin size histogram hnew; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1510,variab,variable,1510,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['variab'],['variable']
Modifiability,"f this software.; */; /*. NOTE ON X3D CODING STYLE:. Don't think I usually code in the gerberized fashion that X3D demonstrates.; X3D was written for speed at any cost. My goal was to write the fastest 3D; object viewer that I could, period. Regular programs ought to be written; with different goals in mind such as:. 1) A program has excellent documentation that ANYONE can read.; 2) A program when released has no strange ""features"" or bugs.; 3) A program is robust and handles ALL extreme and unusual cases.; 4) A program is written in phases and modules with hard tests for each one.; 5) A program is written for any user who doesn't need special knowledge; to use the program.; 6) A program has well defined user requirements and functional specifications.; 7) A program is written with regard to future expansion and integreation; with other systems (portability). When programming following these additional principles make programs easier; to maintain. A) Choose variable names that accurately describes what the variable does/is.; B) Write comments to inform someone faced with the task of modifying your code.; C) Avoid excessive comments. Write the code so that it says what it does.; D) Follow a strict one-in, one-out flow of control structues except in the; case of fatal error conditions.; E) Avoid using global variables.; F) Do not cause side effects to variables that were not parameters to a; function.; G) Have a single function perform a single purpose.; H) Select a single indentation style and stick with it.; I) Use a consistent naming convention. The following principles help me when I try optimizing code:. a) If optimizing, use a profiler to determine which sections of code most of; the time is spent in. Spend most of your effort in the most used sections.; Don't bother optimizing a procedure using less than 10% of the time. b) High level optimizations are far more effective than cycle shaving.; (e.g. use quick sort instead of optimizing a bubble sort.). c) Be flex",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:2124,variab,variable,2124,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,2,['variab'],['variable']
Modifiability,"f$ discriminating variables used in the MVA:. \f[; L_S(i) \ \prod_{j=1}^{N_{var}} p_{Sj} (i); \f]. and accordingly for \f$ L_B \f$.; In practise, TMVA uses polynomial splines to estimate the probability; density functions (PDF) obtained from the distributions of the; training variables. Note that in TMVA the output of the likelihood ratio is transformed by:. \f[; R_L(i) \to R'_L(i) = -\frac{1}{\tau} ln(R_L^{-1}(i) -1); \f]. to avoid the occurrence of heavy peaks at \f$ R_L = 0.1 \f$ . #### Decorrelated (or ""diagonalized"") Likelihood. The biggest drawback of the Likelihood approach is that it assumes; that the discriminant variables are uncorrelated. If it were the case,; it can be proven that the discrimination obtained by the above likelihood; ratio is optimal, ie, no other method can beat it. However, in most; practical applications of MVAs correlations are present. </p>. Linear correlations, measured from the training sample, can be taken; into account in a straightforward manner through the square-root; of the covariance matrix. The square-root of a matrix; \f$ C \f$ is the matrix \f$ C&prime; \f$ that multiplied with itself; yields \f$ C \f$: \f$ C \f$=\f$ C&prime;C&prime; \f$. We compute the; square-root matrix (SQM) by means of diagonalising (\f$ D \f$) the; covariance matrix:. \f[; D = S^TCS \Rightarrow C' = S \sqrt{DS^T}; \f]. and the linear transformation of the linearly correlated into the; uncorrelated variables space is then given by multiplying the measured; variable tuple by the inverse of the SQM. Note that these transformations; are performed for both signal and background separately, since the; correlation pattern is not the same in the two samples. The above diagonalisation is complete for linearly correlated,; Gaussian distributed variables only. In real-world examples this; is not often the case, so that only little additional information; may be recovered by the diagonalisation procedure. In these cases,; non-linear methods must be applied.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLikelihood.cxx:3376,variab,variables,3376,tmva/tmva/src/MethodLikelihood.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLikelihood.cxx,3,['variab'],"['variable', 'variables']"
Modifiability,"fSizeX*fSizeY; /// - fDest-pointer to the matrix of destination data, its size should be; /// fSizeX*fSizeY; ///; /// ### Example of enhancement; ///; /// This function transforms the; /// source spectrum (for details see Transform function). Before the Enhance; /// function is called the class must be created by constructor and the type of the; /// transform as well as some other parameters must be set using a set of setter; /// functions. The Enhance function multiplies transformed coefficients in the given; /// region (fXmin, fXmax, fYmin, fYmax) by the given fEnhancCoeff and transforms it; /// back. Enhanced data are written into dest spectrum.; ///; /// ### Example - script Enhance2.c:; ///; /// \image html spectrum2transform_enhance_image001.jpg Fig. 1 Original two-dimensional noisy spectrum; /// \image html spectrum2transform_enhance_image002.jpg Fig. 2 Enhanced spectrum of the data from Fig. 1 using Cosine transform (channels in region (0-63)x(0-63) were multiplied by 5); ///; /// #### Script:; ///; /// Example to illustrate enhancement (class TSpectrumTransform2). To execute this example, do; ///; /// `root > .x Enhance2.C`; ///; /// ~~~ {.cpp}; /// void Enhance2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** source = new Double_t *[nbinsx];; /// Double_t ** dest = new Double_t *[nbinsx];; /// for (i=0;i<nbinsx;i++); /// source[i]= new Double_t[nbinsy];; /// for (i=0;i<nbinsx;i++); /// dest[i]= new Double_t[nbinsy];; /// TH2F *trans = new TH2F(""trans"",""Background estimation"",nbinsx,xmin,xmax,nbinsy,ymin,ymax);; /// TFile *f = new TFile(""TSpectrum2.root"");; /// trans=(TH2F*)f->Get(""back3;1"");; /// TCanvas *Tr = new TCanvas(""Transform"",""Illustration of transform function"",10,10,1000,700);; /// for (i = 0; i < nbinsx; i++){; /// for (j = 0; j < nbinsy; j++){; /// source[i][j] = trans->GetBinContent(i + 1,j + 1);; /// }; /// }; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1475,enhance,enhancement,1475,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,1,['enhance'],['enhancement']
Modifiability,"fficients; /// - fSizex,fSizey-basic dimensions of source and dest spectra; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example 1 - script Transform2.c:; ///; /// \image html spectrum2transform_transform_image002.jpg Fig. 1 Original two-dimensional noisy spectrum; ///; /// \image html spectrum2transform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform. Energy of the transformed data is concentrated around the beginning of the coordinate system; ///; /// #### Script:; ///; /// Example to illustrate Transform function (class TSpectrumTransform2).; /// To execute this example, do; ///; /// `root > .x Transform2.C`; ///; /// ~~~ {.cpp}; /// void Transform2() {; /// Int",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1668,adapt,adaptive,1668,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,1,['adapt'],['adaptive']
Modifiability,"fined until this header was; // included to be part of the type signature of a builtin that; // was known to clang already.; //; // The declarations use __attribute__(__clang_arm_builtin_alias),; // so that each function declared will be recognized as the; // appropriate MVE builtin in spite of its user-facing name.; //; // (That's better than making them all wrapper functions,; // partly because it avoids any compiler error message citing; // the wrapper function definition instead of the user's code,; // and mostly because some MVE intrinsics have arguments; // required to be compile-time constants, and that property; // can't be propagated through a wrapper function. It can be; // propagated through a macro, but macros can't be overloaded; // on argument types very easily - you have to use _Generic,; // which makes error messages very confusing when the user; // gets it wrong.); //; // Finally, the polymorphic versions of the intrinsics are; // also defined with __attribute__(overloadable), so that when; // the same name is defined with several type signatures, the; // right thing happens. Each one of the overloaded; // declarations is given a different builtin id, which; // has exactly the effect we want: first clang resolves the; // overload to the right function, then it knows which builtin; // it's referring to, and then the Sema checking for that; // builtin can check further things like the constant; // arguments.; //; // One more subtlety is the newline just before the return; // type name. That's a cosmetic tweak to make the error; // messages legible if the user gets the types wrong in a call; // to a polymorphic function: this way, clang will print just; // the _final_ line of each declaration in the header, to show; // the type signatures that would have been legal. So all the; // confusing machinery with __attribute__ is left out of the; // error message, and the user sees something that's more or; // less self-documenting: ""here's a list of actually r",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:1249,polymorphi,polymorphic,1249,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,1,['polymorphi'],['polymorphic']
Modifiability,"for the first histogram and with distribution; /// \f[; ///\frac{e^{-Mp_{i}}(Mp_{i})^{m_{i}}}{m_{i}!}; /// \f]; /// for the second histogram. If the hypothesis of homogeneity is valid,; /// then the maximum likelihood estimator of pi, i=1,...,r, is; /// \f[; ///\hat{p}_{i}= \frac{n_{i}+m_{i}}{N+M}; /// \f]; /// and then; /// \f[; /// X^{2} = \sum_{i=1}^{r}\frac{(n_{i}-N\hat{p}_{i})^{2}}{N\hat{p}_{i}} + \sum_{i=1}^{r}\frac{(m_{i}-M\hat{p}_{i})^{2}}{M\hat{p}_{i}} =\frac{1}{MN} \sum_{i=1}^{r}\frac{(Mn_{i}-Nm_{i})^{2}}{n_{i}+m_{i}}; /// \f]; /// has approximately a \f$ \chi^{2}_{(r-1)} \f$ distribution [3].; /// The comparison procedure can include an analysis of the residuals which; /// is often helpful in identifying the bins of histograms responsible for; /// a significant overall \f$ \chi^{2} \f$ value. Most convenient for; /// analysis are the adjusted (normalized) residuals [4]; /// \f[; /// r_{i} = \frac{n_{i}-N\hat{p}_{i}}{\sqrt{N\hat{p}_{i}}\sqrt{(1-N/(N+M))(1-(n_{i}+m_{i})/(N+M))}}; /// \f]; /// If hypotheses of homogeneity are valid then residuals ri are; /// approximately independent and identically distributed random variables; /// having N(0,1) distribution. The application of the \f$ \chi^{2} \f$ test has; /// restrictions related to the value of the expected frequencies Npi,; /// Mpi, i=1,...,r. A conservative rule formulated in [5] is that all the; /// expectations must be 1 or greater for both histograms. In practical; /// cases when expected frequencies are not known the estimated expected; /// frequencies \f$ M\hat{p}_{i}, N\hat{p}_{i}, i=1,...,r \f$ can be used.; ///; /// #### Unweighted and weighted histograms comparison:; ///; /// A simple modification of the ideas described above can be used for the; /// comparison of the usual (unweighted) and weighted histograms. Let us; /// denote the number of events in the ith bin in the unweighted; /// histogram as ni and the common weight of events in the ith bin of the; /// weighted histogram as wi. The t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:5303,variab,variables,5303,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variables']
Modifiability,"ford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1365,adapt,adaptive,1365,roofit/roofitcore/src/RooNumConvolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx,1,['adapt'],['adaptive']
Modifiability,"from CERNLIB; by R. Brun, H. Hansroul, and J. Kubler.; The class has been implemented by Christian Holm Christensen in August 2000. ## Introduction. In many applications of various fields of research, the treatment of; large amounts of data requires powerful techniques capable of rapid; data reduction and analysis. Usually, the quantities most; conveniently measured by the experimentalist, are not necessarily the; most significant for classification and analysis of the data. It is; then useful to have a way of selecting an optimal set of variables; necessary for the recognition process and reducing the dimensionality; of the problem, resulting in an easier classification procedure. This paper describes the implementation of one such method of; feature selection, namely the principal components analysis. This; multidimensional technique is well known in the field of pattern; recognition and and its use in Particle Physics has been documented; elsewhere (cf. H. Wind, <I>Function Parameterization</I>, CERN; 72-21). ## Overview; Suppose we have prototypes which are trajectories of particles,; passing through a spectrometer. If one measures the passage of the; particle at say 8 fixed planes, the trajectory is described by an; 8-component vector:; \f[; \mathbf{x} = \left(x_0, x_1, \ldots, x_7\right); \f]; in 8-dimensional pattern space. One proceeds by generating a representative tracks sample and; building up the covariance matrix \f$\mathsf{C}\f$. Its eigenvectors and; eigenvalues are computed by standard methods, and thus a new basis is; obtained for the original 8-dimensional space the expansion of the; prototypes,; \f[; \mathbf{x}_m = \sum^7_{i=0} a_{m_i} \mathbf{e}_i; \quad; \mbox{where}; \quad; a_{m_i} = \mathbf{x}^T\bullet\mathbf{e}_i; \f]; allows the study of the behavior of the coefficients \f$a_{m_i}\f$ for all; the tracks of the sample. The eigenvectors which are insignificant for; the trajectory description in the expansion will have their; corresponding coef",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:1554,Parameteriz,Parameterization,1554,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,1,['Parameteriz'],['Parameterization']
Modifiability,"function,; * in C++) can override a virtual method in a base class. For; * Objective-C, a method is said to override any method in the class's; * base class, its protocols, or its categories' protocols, that has the same; * selector and is of the same kind (class or instance).; * If no such method exists, the search continues to the class's superclass,; * its protocols, and its categories, and so on. A method from an Objective-C; * implementation is considered to override the same methods as its; * corresponding method in the interface.; *; * For C++, a virtual member function overrides any virtual member; * function with the same signature that occurs in its base; * classes. With multiple inheritance, a virtual member function can; * override several virtual member functions coming from different; * base classes.; *; * In all cases, this function determines the immediate overridden; * method, rather than all of the overridden methods. For example, if; * a method is originally declared in a class A, then overridden in B; * (which in inherits from A) and also in C (which inherited from B),; * then the only overridden method returned from this function when; * invoked on C's method will be B's method. The client may then; * invoke this function again, given the previously-found overridden; * methods, to map out the complete method-override set.; *; * \param cursor A cursor representing an Objective-C or C++; * method. This routine will compute the set of methods that this; * method overrides.; *; * \param overridden A pointer whose pointee will be replaced with a; * pointer to an array of cursors, representing the set of overridden; * methods. If there are no overridden methods, the pointee will be; * set to NULL. The pointee must be freed via a call to; * \c clang_disposeOverriddenCursors().; *; * \param num_overridden A pointer to the number of overridden; * functions, will be set to the number of overridden functions in the; * array pointed to by \p overridden.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:1193,inherit,inherits,1193,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['inherit'],"['inherited', 'inherits']"
Modifiability,"g multiple NLL terms to avoid numeric precision; /// loss that happens if you sum multiple terms of different orders; /// of magnitude.; ///; /// The weight-squared error correction works as follows:; /// adjust poisson such that; /// estimate of \f$N_\mathrm{expect}\f$ stays at the same value, but has a different variance, rescale; /// both the observed and expected count of the Poisson with a factor \f$ \sum w_{i} / \sum w_{i}^2 \f$; /// (the effective weight of the Poisson term),; /// i.e., change \f$\mathrm{Poisson}(N_\mathrm{observed} = \sum w_{i} | N_\mathrm{expect} )\f$; /// to \f$ \mathrm{Poisson}(\sum w_{i} \cdot \sum w_{i} / \sum w_{i}^2 | N_\mathrm{expect} \cdot \sum w_{i} / \sum w_{i}^2 ) \f$,; /// weighted by the effective weight \f$ \sum w_{i}^2 / \sum w_{i} \f$ in the likelihood.; /// Since here we compute the likelihood with the weight square, we need to multiply by the; /// square of the effective weight:; /// - \f$ W_\mathrm{expect} = N_\mathrm{expect} \cdot \sum w_{i} / \sum w_{i}^2 \f$ : effective expected entries; /// - \f$ W_\mathrm{observed} = \sum w_{i} \cdot \sum w_{i} / \sum w_{i}^2 \f$ : effective observed entries; ///; /// The extended term for the likelihood weighted by the square of the weight will be then:; ///; /// \f$ \left(\sum w_{i}^2 / \sum w_{i}\right)^2 \cdot W_\mathrm{expect} - (\sum w_{i}^2 / \sum w_{i})^2 \cdot W_\mathrm{observed} \cdot \log{W_\mathrm{expect}} \f$; ///; /// aund this is using the previous expressions for \f$ W_\mathrm{expect} \f$ and \f$ W_\mathrm{observed} \f$:; ///; /// \f$ \sum w_{i}^2 / \sum w_{i} \cdot N_\mathrm{expect} - \sum w_{i}^2 \cdot \log{W_\mathrm{expect}} \f$; ///; /// Since the weights are constants in the likelihood we can use \f$\log{N_\mathrm{expect}}\f$ instead of \f$\log{W_\mathrm{expect}}\f$.; ///; /// See also RooAbsPdf::extendedTerm(RooAbsData const& data, bool weightSquared, bool doOffset),; /// which takes a dataset to extract \f$N_\mathrm{observed}\f$ and the; /// normalization set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:2278,extend,extended,2278,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['extend'],"['extended', 'extendedTerm']"
Modifiability,"garding branch expanding:; ///; /// When branch instruction like beqzc or bnezc has offset that is too large; /// to fit into its immediate field, it has to be expanded to another; /// instruction or series of instructions.; ///; /// FIXME: Fix pc-region jump instructions which cross 256MB segment boundaries.; /// TODO: Handle out of range bc, b (pseudo) instructions.; ///; /// Regarding compact branch hazard prevention:; ///; /// Hazards handled: forbidden slots for MIPSR6, FPU slots for MIPS3 and below,; /// load delay slots for MIPS1.; ///; /// A forbidden slot hazard occurs when a compact branch instruction is executed; /// and the adjacent instruction in memory is a control transfer instruction; /// such as a branch or jump, ERET, ERETNC, DERET, WAIT and PAUSE.; ///; /// For example:; ///; /// 0x8004 bnec a1,v0,<P+0x18>; /// 0x8008 beqc a1,a2,<P+0x54>; ///; /// In such cases, the processor is required to signal a Reserved Instruction; /// exception.; ///; /// Here, if the instruction at 0x8004 is executed, the processor will raise an; /// exception as there is a control transfer instruction at 0x8008.; ///; /// There are two sources of forbidden slot hazards:; ///; /// A) A previous pass has created a compact branch directly.; /// B) Transforming a delay slot branch into compact branch. This case can be; /// difficult to process as lookahead for hazards is insufficient, as; /// backwards delay slot fillling can also produce hazards in previously; /// processed instuctions.; ///; /// In future this pass can be extended (or new pass can be created) to handle; /// other pipeline hazards, such as various MIPS1 hazards, processor errata that; /// require instruction reorganization, etc.; ///; /// This pass has to run after the delay slot filler as that pass can introduce; /// pipeline hazards such as compact branch hazard, hence the existing hazard; /// recognizer is not suitable.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsBranchExpansion.cpp:2979,extend,extended,2979,interpreter/llvm-project/llvm/lib/Target/Mips/MipsBranchExpansion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsBranchExpansion.cpp,1,['extend'],['extended']
Modifiability,"gate gradients with the Fletcher-Reeves updating formula:. Weights are set to the minimum along the line defined by the conjugate gradient. Parameters; are Tau and Reset, which defines the epochs where the direction is; reset to the steepest descent. #### Broyden, Fletcher, Goldfarb, Shanno (BFGS) method:. Implies the computation of a NxN matrix; computation, but seems more powerful at least for less than 300; weights. Parameters are Tau and Reset, which defines the epochs where; the direction is reset to the steepest descent. ### How to use it... TMLP is build from 3 classes: TNeuron, TSynapse and; TMultiLayerPerceptron. Only TMultiLayerPerceptron should be used; explicitly by the user. TMultiLayerPerceptron will take examples from a TTree; given in the constructor. The network is described by a simple; string: The input/output layers are defined by giving the expression for; each neuron, separated by comas. Hidden layers are just described; by the number of neurons. The layers are separated by colons.; In addition, input/output layer formulas can be preceded by '@' (e.g ""@out""); if one wants to also normalize the data from the TTree.; Input and outputs are taken from the TTree given as second argument.; Expressions are evaluated as for TTree::Draw(), arrays are expended in; distinct neurons, one for each index.; This can only be done for fixed-size arrays.; If the formula ends with ""!"", softmax functions are used for the output layer.; One defines the training and test datasets by TEventLists. Example:; ~~~ {.cpp}; TMultiLayerPerceptron(""x,y:10:5:f"",inputTree);; ~~~. Both the TTree and the TEventLists can be defined in; the constructor, or later with the suited setter method. The lists; used for training and test can be defined either explicitly, or via; a string containing the formula to be used to define them, exactly as; for a TCut. The learning method is defined using the TMultiLayerPerceptron::SetLearningMethod() .; Learning methods are :. - TMultiLayerPercep",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:6748,layers,layers,6748,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['layers'],['layers']
Modifiability,"ght.; The Fill functions return the bin number for 1-D histograms or global; bin number for 2-D and 3-D histograms.; If TH1::Sumw2 has been called before filling, the sum of squares of; weights is also stored.; One can also increment directly a bin number via TH1::AddBinContent; or replace the existing content via TH1::SetBinContent. Passing an; out-of-range bin to TH1::AddBinContent leads to undefined behavior.; To access the bin content of a given bin, do:; ~~~ {.cpp}; Double_t binContent = h->GetBinContent(bin);; ~~~. By default, the bin number is computed using the current axis ranges.; If the automatic binning option has been set via; ~~~ {.cpp}; h->SetCanExtend(TH1::kAllAxes);; ~~~; then, the Fill Function will automatically extend the axis range to; accomodate the new value specified in the Fill argument. The method; used is to double the bin size until the new value fits in the range,; merging bins two by two. This automatic binning options is extensively; used by the TTree::Draw function when histogramming Tree variables; with an unknown range.; This automatic binning option is supported for 1-D, 2-D and 3-D histograms. During filling, some statistics parameters are incremented to compute; the mean value and Root Mean Square with the maximum precision. In case of histograms of type TH1C, TH1S, TH2C, TH2S, TH3C, TH3S; a check is made that the bin contents do not exceed the maximum positive; capacity (127 or 32767). Histograms of all types may have positive; or/and negative bin contents. \anchor associated-errors; ### Associated errors; By default, for each bin, the sum of weights is computed at fill time.; One can also call TH1::Sumw2 to force the storage and computation; of the sum of the square of weights per bin.; If Sumw2 has been called, the error per bin is computed as the; sqrt(sum of squares of weights), otherwise the error is set equal; to the sqrt(bin content).; To return the error for a given bin number, do:; ~~~ {.cpp}; Double_t error = h->GetBin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:13156,variab,variables,13156,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variables']
Modifiability,"gisterMap = {2 -> {X}, 3 -> {}}, InstrMap {X -> 2}; // DBG_VALUE %2, A, .... # X; // -> DBG_VALUE 0, A, ... # Y; // DBG_VALUE %3, A, ..., # Z; // %2 = ld ...; // %3 = ld ...; // %4 = ld ...; // After the DBG_VALUE Y is processed, the DbgValueSinkCandidates is updated; // to now hold Y for A and the RegisterMap is also updated to remove X from; // %2, this is because both X and Y describe the same debug variable A. X is; // also updated to have a $noreg as the first operand.; // DbgValueSinkCandidates = {A -> {Y}}, RegisterMap = {2 -> {}, 3 -> {}},; // InstrMap = {X-> 2}; // DBG_VALUE $noreg, A, .... # X; // DBG_VALUE 0, A, ... # Y; // -> DBG_VALUE %3, A, ..., # Z; // %2 = ld ...; // %3 = ld ...; // %4 = ld ...; // After DBG_VALUE Z is processed, the DbgValueSinkCandidates is updated to; // hold Z fr A, the RegisterMap is updated to hold Z for %3, and the InstrMap; // is updated to have Z mapped to %3. This is again because Z describes the; // debug variable A, Y is not updated to have $noreg as first operand because; // its first operand is an immediate, not a register.; // DbgValueSinkCandidates = {A -> {Z}}, RegisterMap = {2 -> {}, 3 -> {Z}},; // InstrMap = {X -> 2, Z -> 3}; // DBG_VALUE $noreg, A, .... # X; // DBG_VALUE 0, A, ... # Y; // DBG_VALUE %3, A, ..., # Z; // -> %2 = ld ...; // %3 = ld ...; // %4 = ld ...; // Nothing happens here since the RegisterMap for %2 contains no value.; // DbgValueSinkCandidates = {A -> {Z}}, RegisterMap = {2 -> {}, 3 -> {Z}},; // InstrMap = {X -> 2, Z -> 3}; // DBG_VALUE $noreg, A, .... # X; // DBG_VALUE 0, A, ... # Y; // DBG_VALUE %3, A, ..., # Z; // %2 = ld ...; // -> %3 = ld ...; // %4 = ld ...; // Since the RegisterMap contains Z as a value for %3, the MachineInstr; // pointer Z is copied to come after the load for %3 and the old Z's first; // operand is changed to $noreg the Basic Block iterator is moved to after the; // DBG_VALUE Z's new position.; // DbgValueSinkCandidates = {A -> {Z}}, RegisterMap = {2 -> {}, 3 -> {Z}},; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp:3529,variab,variable,3529,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,1,['variab'],['variable']
Modifiability,"h one or more reduction; /// clauses:; ///; /// float foo;; /// double bar;; /// #pragma omp target teams distribute parallel for \; /// reduction(+:foo) reduction(*:bar); /// for (int i = 0; i < N; i++) {; /// foo += A[i]; bar *= B[i];; /// }; ///; /// where 'foo' and 'bar' are reduced across all OpenMP threads in; /// all teams. In our OpenMP implementation on the NVPTX device an; /// OpenMP team is mapped to a CUDA threadblock and OpenMP threads; /// within a team are mapped to CUDA threads within a threadblock.; /// Our goal is to efficiently aggregate values across all OpenMP; /// threads such that:; ///; /// - the compiler and runtime are logically concise, and; /// - the reduction is performed efficiently in a hierarchical; /// manner as follows: within OpenMP threads in the same warp,; /// across warps in a threadblock, and finally across teams on; /// the NVPTX device.; ///; /// Introduction to Decoupling; ///; /// We would like to decouple the compiler and the runtime so that the; /// latter is ignorant of the reduction variables (number, data types); /// and the reduction operators. This allows a simpler interface; /// and implementation while still attaining good performance.; ///; /// Pseudocode for the aforementioned OpenMP program generated by the; /// compiler is as follows:; ///; /// 1. Create private copies of reduction variables on each OpenMP; /// thread: 'foo_private', 'bar_private'; /// 2. Each OpenMP thread reduces the chunk of 'A' and 'B' assigned; /// to it and writes the result in 'foo_private' and 'bar_private'; /// respectively.; /// 3. Call the OpenMP runtime on the GPU to reduce within a team; /// and store the result on the team master:; ///; /// __kmpc_nvptx_parallel_reduce_nowait_v2(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn); ///; /// where:; /// struct ReduceData {; /// double *foo;; /// double *bar;; /// } reduceData; /// reduceData.foo = &foo_private; /// reduceData.bar = &bar_private; ///; /// 'shuffleReduceFn' and 'i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:1141,variab,variables,1141,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['variab'],['variables']
Modifiability,"h-dimensional geometry and visualizing multivariate problems. It has first; been proposed by A. Inselberg in 1981. To show a set of points in an n-dimensional space, a backdrop is drawn; consisting of n parallel lines. A point in n-dimensional space is represented as; a polyline with vertices on the parallel axes; the position of the vertex on the; i-th axis corresponds to the i-th coordinate of the point. This tool comes with a rather large gui in the editor. It is necessary to use; this editor in order to explore a data set, as explained below. ### Reduce cluttering:. The main issue for parallel coordinates is the very high cluttering of the; output when dealing with large data set. Two techniques have been implemented to; bypass that so far:. - Draw doted lines instead of plain lines with an adjustable dots spacing. A; slider to adjust the dots spacing is available in the editor.; - Sort the entries to display with a ""weight cut"". On each axis is drawn a; histogram describing the distribution of the data on the corresponding; variable. The ""weight"" of an entry is the sum of the bin content of each bin; the entry is going through. An entry going through the histograms peaks will; have a big weight wether an entry going randomly through the histograms will; have a rather small weight. Setting a cut on this weight allows to draw only; the most representative entries. A slider set the cut is also available in; the gui. ## Selections:. Selections of specific entries can be defined over the data se using parallel; coordinates. With that representation, a selection is an ensemble of ranges; defined on the axes. Ranges defined on the same axis are conjugated with OR; (an entry must be in one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). Several selections can be defined with different colors. It is; possible to generate an entry list from a given selection and apply it to th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:1184,variab,variable,1184,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['variab'],['variable']
Modifiability,"he STL or ROOT. In the following, the details about the creation of different types of branches are given. \anchor addcolumnoffundamentaltypes; ## Add a column (""branch"") holding fundamental types and arrays thereof; This strategy works also for lists of variables, e.g. to describe simple structures.; It is strongly recommended to persistify those as objects rather than lists of leaves. ~~~ {.cpp}; auto branch = tree.Branch(branchname, address, leaflist, bufsize); ~~~; - address is the address of the first item of a structure; - leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a; slash (/). The variable type must be 1 character. (Characters; after the first are legal and will be appended to the visible; name of the leaf, but have no effect.) If no type is given, the; type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is; assumed of type F by default. The list of currently supported; types is given below:; - `C` : a character string terminated by the 0 character; - `B` : an 8 bit signed integer (`Char_t`); Treated as a character when in an array.; - `b` : an 8 bit unsigned integer (`UChar_t`); - `S` : a 16 bit signed integer (`Short_t`); - `s` : a 16 bit unsigned integer (`UShort_t`); - `I` : a 32 bit signed integer (`Int_t`); - `i` : a 32 bit unsigned integer (`UInt_t`); - `F` : a 32 bit floating point (`Float_t`); - `f` : a 24 bit floating point with truncated mantissa (`Float16_t`); - `D` : a 64 bit floating point (`Double_t`); - `d` : a 24 bit truncated floating point (`Double32_t`); - `L` : a 64 bit signed integer (`Long64_t`); - `l` : a 64 bit unsigned integer (`ULong64_t`); - `G` : a long signed integer, stored as 64 bit (`Long_t`); - `g` : a long unsigned integer, stored as 64 bit (`ULong_t`); - `O` : [the letter `o`, not a zero] a boolean (`bool`). Examples:; - A int: ""myVar/I""; - A ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:4075,variab,variable,4075,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variable']
Modifiability,"he code to The Lean Mean C++ Option Parser.; * The ""Software"" does NOT refer to any other files which you; * may have received alongside this file (e.g. as part of a larger project that; * incorporates The Lean Mean C++ Option Parser).; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software, to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to permit; * persons to whom the Software is furnished to do so, subject to the following; * conditions:; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; * SOFTWARE.; */; /*; * NOTE: It is recommended that you read the processed HTML doxygen documentation; * rather than this source. If you don't know doxygen, it's like javadoc for C++.; * If you don't want to install doxygen you can find a copy of the processed; * documentation at; *; * http://optionparser.sourceforge.net/; *; */; /*; Danio Piparo - Since we import this parser from tan external source, we keep; track of the changes:. New Features 6-7-12:; o Added FullArg class from the examples in the header. Bugs Fixed 8-7-12:; o Cov: Add initialisation of screenlen variable in LinePartIterator; o Cov: LineWrapper databuf, lenbuf and wrote_something are now initialised; o Cov: Option::operator= now returns Option& (return *this;) and not void; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:1987,variab,variable,1987,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['variab'],['variable']
Modifiability,"he latter part; /// is either reached from the setjmp, or later from a longjmp. To handle the; /// longjmp, all calls that might longjmp are also called using invoke wrappers; /// and thus JS / try-catch. JS longjmp() function also sets some variables so; /// we can check / whether a longjmp occurred from wasm code. Each block with a; /// function call that might longjmp is also split up after the longjmp call.; /// After the longjmp call, we check whether a longjmp occurred, and if it did,; /// which setjmp it corresponds to, and jump to the right post-setjmp block.; /// We assume setjmp-longjmp handling always run after EH handling, which means; /// we don't expect any exception-related instructions when SjLj runs.; /// FIXME Currently this scheme does not support indirect call of setjmp,; /// because of the limitation of the scheme itself. fastcomp does not support it; /// either.; ///; /// In detail, this pass does following things:; ///; /// 1) Assumes the existence of global variables: __THREW__, __threwValue; /// __THREW__ and __threwValue are defined in compiler-rt in Emscripten.; /// These variables are used for both exceptions and setjmp/longjmps.; /// __THREW__ indicates whether an exception or a longjmp occurred or not. 0; /// means nothing occurred, 1 means an exception occurred, and other numbers; /// mean a longjmp occurred. In the case of longjmp, __THREW__ variable; /// indicates the corresponding setjmp buffer the longjmp corresponds to.; /// __threwValue is 0 for exceptions, and the argument to longjmp in case of; /// longjmp.; ///; /// * Emscripten exception handling; ///; /// 2) We assume the existence of setThrew and setTempRet0/getTempRet0 functions; /// at link time. setThrew exists in Emscripten's compiler-rt:; ///; /// void setThrew(uintptr_t threw, int value) {; /// if (__THREW__ == 0) {; /// __THREW__ = threw;; /// __threwValue = value;; /// }; /// }; //; /// setTempRet0 is called from __cxa_find_matching_catch() in JS glue code.; /// In ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:2414,variab,variables,2414,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,1,['variab'],['variables']
Modifiability,"he matrix of destination data, its size should be; /// fSizex*fSizey except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; /// need fSizex*2*fSizey length to store real and imaginary coefficients; /// - fSizex,fSizey-basic dimensions of source and dest spectra; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example 1 - script Transform2.c:; ///; /// \image html spectrum2transform_transform_image002.jpg Fig. 1 Original two-dimensional noisy spectrum; ///; /// \image html spectrum2transform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform. Energy of the transformed data is concentrated around the beginning of the coordinate system; ///; /// #### Script:; ///; /// Exa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1540,enhance,enhancement,1540,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,1,['enhance'],['enhancement']
Modifiability,"hen, old can be reused in a new expression.; TFormula new(""x*old"") is equivalent to:; TFormula new(""x*sin(x*(x<0.5 || x>1))""). Up to 4 dimensions are supported (indicated by x, y, z, t); An expression may have 0 parameters or a list of parameters; indicated by the sequence [par_number]. A graph showing the logic to compile and analyze a formula; is shown in TFormula::Compile and TFormula::Analyze.; Once a formula has been compiled, it can be evaluated for a given; set of parameters. see graph in TFormula::EvalPar. This class is the base class for the function classes TF1,TF2 and TF3.; It is also used by the ntuple selection mechanism TNtupleFormula. In version 7 of TFormula, the usage of fOper has been changed; to improve the performance of TFormula::EvalPar.; Conceptually, fOper was changed from a simple array of Int_t; to an array of composite values.; For example a 'ylandau(5)' operation used to be encoded as 4105;; it is now encoded as (klandau >> kTFOperShift) + 5; Any class inheriting from TFormula and using directly fOper (which; is now a private data member), needs to be updated to take this; in consideration. The member functions recommended to set and; access fOper are: SetAction, GetAction, GetActionParam; For more performant access to the information, see the implementation; TFormula::EvalPar. ### CHANGING DEFAULT SETTINGS. When creating complex formula , it may be necessary to increase; some default parameters. see static function TFormula::SetMaxima. ### WHY TFormula CANNOT ACCEPT A CLASS MEMBER FUNCTION ?. This is a frequently asked question.; C++ is a strongly typed language. There is no way for TFormula (without; recompiling this class) to know about all possible user defined data types.; This also apply to the case of a static class function.; Because TMath is a special and frequent case, TFormula is aware; of all TMath functions.; */; ////////////////////////////////////////////////////////////////////////////////; /// Formula default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:2239,inherit,inheriting,2239,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,1,['inherit'],['inheriting']
Modifiability,"his //; // class is meant to be as generic as possible to be used with files //; // hosted not only by Amazon S3 servers but also by other providers //; // implementing the core of the S3 protocol. //; // //; // The S3 protocol works on top of HTTPS (and HTTP) and imposes that //; // each HTTP request be signed using a specific convention: the request //; // must include an 'Authorization' header which contains the signature //; // of a concatenation of selected request fields. For signing the //; // request, an 'Access Key Id' and a 'Secret Access Key' need to be //; // known. These keys are used by the S3 servers to identify the client //; // and to authenticate the request as genuine. //; // //; // As an end user, you must know the Access Key and Secret Access Key //; // in order to access each S3 file. They are provided to you by your S3 //; // service provider. Those two keys can be provided to ROOT when //; // initializing an object of this class by two means: //; // a) by using the environmental variables S3_ACCESS_KEY and //; // S3_SECRET_KEY, or //; // b) by specifying them as an argument when opening each file. //; // //; // The first method is convenient if all the S3 files you want to //; // access are hosted by a single provider. The second one is more //; // flexible as it allows you to specify which credentials to use //; // on a per-file basis. See the documentation of the constructor of //; // this class for details on the syntax. //; // //; // For generating and signing the HTTP request, this class uses //; // TS3HTTPRequest. //; // //; // For more information on the details of S3 protocol please refer to: //; // ""Amazon Simple Storage Service Developer Guide"": //; // http://docs.amazonwebservices.com/AmazonS3/latest/dev/Welcome.html //; // //; // ""Amazon Simple Storage Service REST API Reference"" //; // http://docs.amazonwebservices.com/AmazonS3/latest/API/APIRest.html //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TS3WebFile.h:1269,variab,variables,1269,net/net/inc/TS3WebFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TS3WebFile.h,2,"['flexible', 'variab']","['flexible', 'variables']"
Modifiability,"his class implements a layout algorithm for globals referenced by bit sets; /// that tries to keep members of small bit sets together. This can; /// significantly reduce bit set sizes in many cases.; ///; /// It works by assembling fragments of layout from sets of referenced globals.; /// Each set of referenced globals causes the algorithm to create a new; /// fragment, which is assembled by appending each referenced global in the set; /// into the fragment. If a referenced global has already been referenced by an; /// fragment created earlier, we instead delete that fragment and append its; /// contents into the fragment we are assembling.; ///; /// By starting with the smallest fragments, we minimize the size of the; /// fragments that are copied into larger fragments. This is most intuitively; /// thought about when considering the case where the globals are virtual tables; /// and the bit sets represent their derived classes: in a single inheritance; /// hierarchy, the optimum layout would involve a depth-first search of the; /// class hierarchy (and in fact the computed layout ends up looking a lot like; /// a DFS), but a naive DFS would not work well in the presence of multiple; /// inheritance. This aspect of the algorithm ends up fitting smaller; /// hierarchies inside larger ones where that would be beneficial.; ///; /// For example, consider this class hierarchy:; ///; /// A B; /// \ / | \; /// C D E; ///; /// We have five bit sets: bsA (A, C), bsB (B, C, D, E), bsC (C), bsD (D) and; /// bsE (E). If we laid out our objects by DFS traversing B followed by A, our; /// layout would be {B, C, D, E, A}. This is optimal for bsB as it needs to; /// cover the only 4 objects in its hierarchy, but not for bsA as it needs to; /// cover 5 objects, i.e. the entire layout. Our algorithm proceeds as follows:; ///; /// Add bsC, fragments {{C}}; /// Add bsD, fragments {{C}, {D}}; /// Add bsE, fragments {{C}, {D}, {E}}; /// Add bsA, fragments {{A, C}, {D}, {E}}; /// Add bsB,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/LowerTypeTests.h:961,inherit,inheritance,961,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/LowerTypeTests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/LowerTypeTests.h,2,['inherit'],['inheritance']
Modifiability,"his model means the GPU runtime can specify the amount of memory allocated.; // If this is more than the kernel assumed, the excess can be made available; // using a language specific feature, which IR represents as a variable with; // no initializer. This feature is referred to here as ""Dynamic LDS"" and is; // lowered slightly differently to the normal case.; //; // Consequences of this GPU feature:; // - memory is limited and exceeding it halts compilation; // - a global accessed by one kernel exists independent of other kernels; // - a global exists independent of simultaneous execution of the same kernel; // - the address of the global may be different from different kernels as they; // do not alias, which permits only allocating variables they use; // - if the address is allowed to differ, functions need help to find it; //; // Uses from kernels are implemented here by grouping them in a per-kernel; // struct instance. This duplicates the variables, accurately modelling their; // aliasing properties relative to a single global representation. It also; // permits control over alignment via padding.; //; // Uses from functions are more complicated and the primary purpose of this; // IR pass. Several different lowering are chosen between to meet requirements; // to avoid allocating any LDS where it is not necessary, as that impacts; // occupancy and may fail the compilation, while not imposing overhead on a; // feature whose primary advantage over global memory is performance. The basic; // design goal is to avoid one kernel imposing overhead on another.; //; // Implementation.; //; // LDS variables with constant annotation or non-undef initializer are passed; // through unchanged for simplification or error diagnostics in later passes.; // Non-undef initializers are not yet implemented for LDS.; //; // LDS variables that are always allocated at the same address can be found; // by lookup at that address. Otherwise runtime information/cost is required.; //; // The",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:1904,variab,variables,1904,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,"his pass creates new dynamic LDS variables for each kernel; // that allocates any dynamic LDS and builds a table of addresses out of those.; // The AMDGPUPromoteAlloca pass skips kernels that use dynamic LDS.; // The corresponding optimisation for ""kernel"" lowering where the table lookup; // is elided is not implemented.; //; //; // Implementation notes / limitations; // A single LDS global variable represents an instance per kernel that can reach; // said variables. This pass essentially specialises said variables per kernel.; // Handling ConstantExpr during the pass complicated this significantly so now; // all ConstantExpr uses of LDS variables are expanded to instructions. This; // may need amending when implementing non-undef initialisers.; //; // Lowering is split between this IR pass and the back end. This pass chooses; // where given variables should be allocated and marks them with metadata,; // MD_absolute_symbol. The backend places the variables in coincidentally the; // same location and raises a fatal error if something has gone awry. This works; // in practice because the only pass between this one and the backend that; // changes LDS is PromoteAlloca and the changes it makes do not conflict.; //; // Addresses are written to constant global arrays based on the same metadata.; //; // The backend lowers LDS variables in the order of traversal of the function.; // This is at odds with the deterministic layout required. The workaround is to; // allocate the fixed-address variables immediately upon starting the function; // where they can be placed as intended. This requires a means of mapping from; // the function to the variables that it allocates. For the module scope lds,; // this is via metadata indicating whether the variable is not required. If a; // pass deletes that metadata, a fatal error on disagreement with the absolute; // symbol metadata will occur. For kernel scope and dynamic, this is by _name_; // correspondence between the function and the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:7835,variab,variables,7835,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,"hodCFMlpANN_f2c_datacc.cpp *; * *; * -------------------------------------------------------------------- *; * Reference for the original FORTRAN version: *; * Authors : J. Proriol and contributions from ALEPH-Clermont-Fd *; * Team members. Contact : gaypas@afal11.cern.ch *; * *; * Copyright: Laboratoire Physique Corpusculaire *; * Universite de Blaise Pascal, IN2P3/CNRS *; * -------------------------------------------------------------------- *; * *; * Usage: options are given through Factory: *; * factory->BookMethod( ""MethodCFMlpANN"", OptionsString ); *; * *; * where: *; * TString OptionsString = ""n_training_cycles:n_hidden_layers"" *; * *; * default is: n_training_cycles = 5000, n_layers = 4 *; * note that the number of hidden layers in the NN is *; * *; * n_hidden_layers = n_layers - 2 *; * *; * since there is one input and one output layer. The number of *; * nodes (neurons) is predefined to be *; * *; * n_nodes[i] = nvars + 1 - i (where i=1..n_layers) *; * *; * with nvars being the number of variables used in the NN. *; * Hence, the default case is: n_neurons(layer 1 (input)) : nvars *; * n_neurons(layer 2 (hidden)): nvars-1 *; * n_neurons(layer 3 (hidden)): nvars-1 *; * n_neurons(layer 4 (out)) : 2 *; * *; * This artificial neural network usually needs a relatively large *; * number of cycles to converge (8000 and more). Overtraining can *; * be efficiently tested by comparing the signal and background *; * output of the NN for the events that were used for training and *; * an independent data sample (with equal properties). If the separation *; * performance is significantly better for the training sample, the *; * NN interprets statistical effects, and is hence overtrained. In *; * this case, the number of cycles should be reduced, or the size *; * of the training sample increased. *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <H",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN.h:1512,variab,variables,1512,tmva/tmva/inc/TMVA/MethodCFMlpANN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN.h,1,['variab'],['variables']
Modifiability,"hould ""block out"" those gaps by e.g.; /// just creating a single fixed-offset field that represents the; /// entire ""header"".; ///; /// - The size of a field is not required to be a multiple of, or even; /// greater than, the field's required alignment. The only constraint; /// on fields is that they must not be zero-sized.; ///; /// To simplify the implementation, any fixed-offset fields in the; /// layout must appear at the start of the field array, and they must; /// be ordered by increasing offset.; ///; /// The algorithm will produce a guaranteed-minimal layout with no; /// interior padding in the following ""C-style"" case:; ///; /// - every field's size is a multiple of its required alignment and; /// - either no fields have initially fixed offsets, or the fixed-offset; /// fields have no interior padding and end at an offset that is at; /// least as aligned as all the flexible-offset fields.; ///; /// Otherwise, while the algorithm will make a best-effort attempt to; /// avoid padding, it cannot guarantee a minimal layout, as there is; /// no known efficient algorithm for doing so.; ///; /// The layout produced by this algorithm may not be stable across LLVM; /// releases. Do not use this anywhere where ABI stability is required.; ///; /// Flexible-offset fields with the same size and alignment will be ordered; /// the same way they were in the initial array. Otherwise the current; /// algorithm makes no effort to preserve the initial order of; /// flexible-offset fields.; ///; /// On return, all fields will have been assigned a fixed offset, and the; /// array will be sorted in order of ascending offsets. Note that this; /// means that the fixed-offset fields may no longer form a strict prefix; /// if there's any padding before they end.; ///; /// The return value is the total size of the struct and its required; /// alignment. Note that the total size is not rounded up to a multiple; /// of the required alignment; clients which require this can do so easily.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/OptimizedStructLayout.h:1788,Flexible,Flexible-offset,1788,interpreter/llvm-project/llvm/include/llvm/Support/OptimizedStructLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/OptimizedStructLayout.h,2,"['Flexible', 'flexible']","['Flexible-offset', 'flexible-offset']"
Modifiability,"ht (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::ProfileLikelihoodCalculator; \ingroup Roostats. The ProfileLikelihoodCalculator is a concrete implementation of CombinedCalculator; (the interface class for tools which can produce both a RooStats HypoTestResult; and ConfInterval). The tool uses the profile likelihood ratio as a test statistic,; and assumes that Wilks' theorem is valid. Wilks' theorem states that \f$ -2 \cdot \ln(\lambda) \f$; (profile likelihood ratio) is asymptotically distributed as a \f$ \chi^2 \f$ distribution; with \f$ N \f$ degrees of freedom. Thus, \f$p\f$-values can be; constructed, and the profile likelihood ratio can be used to construct a; LikelihoodInterval. (In the future, this class could be extended to use toy; Monte Carlo to calibrate the distribution of the test statistic). Usage: It uses the interface of the CombinedCalculator, so that it can be; configured by specifying:. - A model common model (*e.g.* a family of specific models, which includes both; the null and alternate); - A data set; - A set of parameters of interest. The nuisance parameters will be all other; parameters of the model.; - A set of parameters which specify the null hypothesis (including values; and const/non-const status). The interface allows one to pass the model, data, and parameters either directly; or via a ModelConfig class. The alternate hypothesis leaves the parameter free; to take any value other than those specified by the null hypothesis. There is; therefore no need to specify the alternate parameters. After configuring the calculator, one only needs to call GetHypoTest() (which; will return a HypoTestResult pointer) or GetInterval() (which will return a; ConfInterval pointer). This calculator can work with bot",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx:1124,extend,extended,1124,roofit/roostats/src/ProfileLikelihoodCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx,1,['extend'],['extended']
Modifiability,"i><tt>Name &lt;link&gt; Info</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate; an HTML link for <tt>Name</tt> as specified by <tt>link</tt> and print; <tt>Info</tt> behind <tt>Name</tt>.</p>. <p>Example:</p>; <tt>// Author: Enrico Fermi &lt;http://www.enricos-home.it&gt;</tt> or<br/>; <tt>// Author: Enrico Fermi &lt;mailto:enrico@fnal.gov&gt;</tt> in the; source file. That's world compatible.</li>; </ul>. <p>Example (with defaults given):</p><pre>; Root.Html.Author: // Author:; Root.Html.LastUpdate: // @(#); Root.Html.Copyright: * Copyright; Root.Html.XWho: http://consult.cern.ch/xwho/people?</pre>. <h4><a name=""conf:header"">II.6 Header and footer</a></h4>. <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> generates; a default header and footer for all pages. You can; specify your own versions with the configuration variables Root.Html.Header; and Root.Html.Footer, or by calling SetHeader(), SetFooter().; Both variables default to """", using the standard Root; versions. If it has a ""+"" appended, <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will; write both versions (user and root) to a file, for the header in the order; 1st root, 2nd user, and for the footer 1st user, 2nd root (the root; versions containing ""&lt;html&gt;"" and &lt;/html&gt; tags, resp).</p>. <p>If you want to replace root's header you have to write a file containing; all HTML elements necessary starting with the &lt;doctype&gt; tag and ending with; (and including) the &lt;body&gt; tag. If you add your header it will be added; directly after Root's &lt;body&gt; tag. Any occurrence of the string <tt>%TITLE%</tt>; in the user's header file will be replaced by; a sensible, automatically generated title. If the header is generated for a; class, occurrences of <tt>%CLASS%</tt> will be replaced by the current class's name,; <tt>%SRCFILE%</tt> and <tt>%INCFILE%</tt> by the name of the source and header file, resp.; (as given by <a href=""http://",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:9408,variab,variables,9408,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['variab'],['variables']
Modifiability,"iagnostics in later passes.; // Non-undef initializers are not yet implemented for LDS.; //; // LDS variables that are always allocated at the same address can be found; // by lookup at that address. Otherwise runtime information/cost is required.; //; // The simplest strategy possible is to group all LDS variables in a single; // struct and allocate that struct in every kernel such that the original; // variables are always at the same address. LDS is however a limited resource; // so this strategy is unusable in practice. It is not implemented here.; //; // Strategy | Precise allocation | Zero runtime cost | General purpose |; // --------+--------------------+-------------------+-----------------+; // Module | No | Yes | Yes |; // Table | Yes | No | Yes |; // Kernel | Yes | Yes | No |; // Hybrid | Yes | Partial | Yes |; //; // ""Module"" spends LDS memory to save cycles. ""Table"" spends cycles and global; // memory to save LDS. ""Kernel"" is as fast as kernel allocation but only works; // for variables that are known reachable from a single kernel. ""Hybrid"" picks; // between all three. When forced to choose between LDS and cycles we minimise; // LDS use.; // The ""module"" lowering implemented here finds LDS variables which are used by; // non-kernel functions and creates a new struct with a field for each of those; // LDS variables. Variables that are only used from kernels are excluded.; //; // The ""table"" lowering implemented here has three components.; // First kernels are assigned a unique integer identifier which is available in; // functions it calls through the intrinsic amdgcn_lds_kernel_id. The integer; // is passed through a specific SGPR, thus works with indirect calls.; // Second, each kernel allocates LDS variables independent of other kernels and; // writes the addresses it chose for each variable into an array in consistent; // order. If the kernel does not allocate a given variable, it writes undef to; // the corresponding array location. These arrays are",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:3692,variab,variables,3692,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,"ictoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodBDT; \ingroup TMVA. Analysis of Boosted Decision Trees. Boosted decision trees have been successfully used in High Energy; Physics analysis for example by the MiniBooNE experiment; (Yang-Roe-Zhu, physics/0508045). In Boosted Decision Trees, the; selection is done on a majority vote on the result of several decision; trees, which are all derived from the same training sample by; supplying different event weights during the training. ### Decision trees:. Successive decision nodes are used to categorize the; events out of the sample as either signal or background. Each node; uses only a single discriminating variable to decide if the event is; signal-like (""goes right"") or background-like (""goes left""). This; forms a tree like structure with ""baskets"" at the end (leave nodes),; and an event is classified as either signal or background according to; whether the basket where it ends up has been classified signal or; background during the training. Training of a decision tree is the; process to define the ""cut criteria"" for each node. The training; starts with the root node. Here one takes the full training event; sample and selects the variable and corresponding cut value that gives; the best separation between signal and background at this stage. Using; this cut criterion, the sample is then divided into two subsamples, a; signal-like (right) and a background-like (left) sample. Two new nodes; are then created for each of the two sub-samples and they are; constructed using the same mechanism as described for the root; node. The devision is stopped once a certain node has reached either a; minimum number of events, ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:1855,variab,variable,1855,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['variab'],['variable']
Modifiability,"iends (friend_tree1 and; /// friend_tree2) and now has access to the variables a,b,c,i,j,k,l and m.; ///; /// \image html ttree_friend1.png; ///; /// The AddFriend method has two parameters, the first is the tree name and the; /// second is the name of the ROOT file where the friend tree is saved.; /// AddFriend automatically opens the friend file. If no file name is given,; /// the tree called ft1 is assumed to be in the same file as the original tree.; ///; /// tree.AddFriend(""ft1"",""friendfile1.root"");; /// If the friend tree has the same name as the original tree, you can give it; /// an alias in the context of the friendship:; ///; /// tree.AddFriend(""tree1 = tree"",""friendfile1.root"");; /// Once the tree has friends, we can use TTree::Draw as if the friend's; /// variables were in the original tree. To specify which tree to use in; /// the Draw method, use the syntax:; /// ~~~ {.cpp}; /// <treeName>.<branchname>.<varname>; /// ~~~; /// If the variablename is enough to uniquely identify the variable, you can; /// leave out the tree and/or branch name.; /// For example, these commands generate a 3-d scatter plot of variable ""var""; /// in the TTree tree versus variable v1 in TTree ft1 versus variable v2 in; /// TTree ft2.; /// ~~~ {.cpp}; /// tree.AddFriend(""ft1"",""friendfile1.root"");; /// tree.AddFriend(""ft2"",""friendfile2.root"");; /// tree.Draw(""var:ft1.v1:ft2.v2"");; /// ~~~; /// \image html ttree_friend2.png; ///; /// The picture illustrates the access of the tree and its friends with a; /// Draw command.; /// When AddFriend is called, the ROOT file is automatically opened and the; /// friend tree (ft1) is read into memory. The new friend (ft1) is added to; /// the list of friends of tree.; /// The number of entries in the friend must be equal or greater to the number; /// of entries of the original tree. If the friend tree has fewer entries a; /// warning is given and the missing entries are not included in the histogram.; /// To retrieve the list of friends from",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1906,variab,variablename,1906,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,['variab'],"['variable', 'variablename']"
Modifiability,"ight (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; ***********************************************************************************/; /*! \class TMVA::MethodPDERS; \ingroup TMVA. This is a generalization of the above Likelihood methods to \f$ N_{var} \f$; dimensions, where \f$ N_{var} \f$ is the number of input variables; used in the MVA. If the multi-dimensional probability density functions; (PDFs) for signal and background were known, this method contains the entire; physical information, and is therefore optimal. Usually, kernel estimation; methods are used to approximate the PDFs using the events from the; training sample. A very simple probability density estimator (PDE) has been suggested; in [hep-ex/0211019](http://arxiv.org/abs/hep-ex/0211019). The; PDE for a given test event is obtained from counting the (normalized); number of signal and background (training) events that occur in the; ""vicinity"" of the test event. The volume that describes ""vicinity"" is; user-defined. A [search method based on binary-trees](http://arxiv.org/abs/hep-ex/0211019); is used to effectively reduce the; selection time for the range search. Three different volume definitions; are optional:. - *MinMax:* the volume is defined in each dimension with respect; to the full variable range found in the training sample.; - *RMS:* the volume is defined in each dimensions with respect; to the RMS estimated from the training sample.; - *Adaptive:* a volume element is defined in each dimensions with; respect to the RMS estimated from the training sample. The overall; scale of the volume element is then determined for each event so; that the total number of events confined in the volume be within; a user-defined range. The adaptive range search is used by default.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx:2351,variab,variable,2351,tmva/tmva/src/MethodPDERS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx,3,"['Adapt', 'adapt', 'variab']","['Adaptive', 'adaptive', 'variable']"
Modifiability,"ight for this species is defined by:. \f[; \fbox{$; {_s{\cal P}}_{\rm n}(y_e)={\sum_{j=1}^{{\rm N}_{\rm s}} \hbox{V}_{{\rm n}j}{\rm f}_j(y_e)\over\sum_{k=1}^{{\rm N}_{\rm s}}N_k{\rm f}_k(y_e) } $} , \tag{2}; \f]. where \f$\hbox{V}_{{\rm n}j}\f$. is the covariance matrix resulting from the Likelihood maximization.; This matrix can be used directly from the fit, but this is numerically; less accurate than the direct computation:. \f[; \hbox{ V}^{-1}_{{\rm n}j}~=~; {\partial^2(-{\cal L})\over\partial N_{\rm n}\partial N_j}~=~; \sum_{e=1}^N {{\rm f}_{\rm n}(y_e){\rm f}_j(y_e)\over(\sum_{k=1}^{{\rm N}_{\rm s}}N_k{\rm f}_k(y_e))^2} . \tag{3}; \f]. The distribution of the control variable \f$x\f$ obtained by histogramming the weighted; events reproduces, on average, the true distribution; \f${\hbox{ {M}}}_{\rm n}(x)\f$. The class TSPlot allows to reconstruct the true distribution; \f${\hbox{ {M}}}_{\rm n}(x)\f$. of a control variable \f$x\f$ for each of the \f${\rm N}_{\rm s}\f$ species from; the sole knowledge of the PDFs of the discriminating variables \f${\rm f}_i(y)\f$.; The plots obtained thanks to the TSPlot class are called \f$\hbox {$_s$}{\cal P}lots\f$. ### Some properties and checks. Beside reproducing the true distribution,\f$\hbox {$_s$}{\cal P}lots\f$ bear remarkable properties:. - Each \f$x\f$ - distribution is properly normalized:. \f[; \sum_{e=1}^{N} {_s{\cal P}}_{\rm n}(y_e)~=~N_{\rm n} ~. \tag{4}; \f]. - For any event:. \f[; \sum_{l=1}^{{\rm N}_{\rm s}} {_s{\cal P}}_l(y_e) ~=~1 ~. \tag{5}; \f]. That is to say that, summing up the \f${\rm N}_{\rm s}\f$ \f$\hbox {$_s$}{\cal P}lots\f$,; one recovers the data sample distribution in \f$x\f$, and summing up the number of events; entering in a \f$\hbox{$_s$}{\cal P}lot\f$ for a given species, one recovers the yield of the; species, as provided by the fit.; The property 4 is implemented in the TSPlot class as a check. - the sum of the statistical uncertainties per bin. \f[; \sigma[N_{\rm n}\ _s\tilde{\rm M}_{\rm n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:4029,variab,variable,4029,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"ight is 0.1.; * The errors are as big as if one fitted to 1000 events.; * <tr><td> false <td> The errors reflect the errors of a dataset, which is as big as the sum of weights.; * Use this if you want to know what statistical errors you would get if you had a dataset with as many; * events as the (weighted) Monte Carlo simulation represents.; *; * **Example** (Data as above):; * The errors are as big as if one fitted to 100 events.; * </table>; * \note If the `SumW2Error` correction is enabled, the covariance matrix quality stored in the RooFitResult; * object will be the minimum of the original covariance matrix quality and the quality of the covariance; * matrix calculated with the squared weights.; * <tr><td> `AsymptoticError()` <td> Use the asymptotically correct approach to estimate errors in the presence of weights.; * This is slower but more accurate than `SumW2Error`. See also https://arxiv.org/abs/1911.01303).; This option even correctly implements the case of extended likelihood fits; (see this [writeup on extended weighted fits](https://root.cern/files/extended_weighted_fits.pdf) that complements the paper linked before).; * <tr><td> `PrefitDataFraction(double fraction)`; * <td> Runs a prefit on a small dataset of size fraction*(actual data size). This can speed up fits; * by finding good starting values for the parameters for the actual fit.; * \warning Prefitting may give bad results when used in binned analysis.; *; * <tr><th><th> Options to control informational output; * <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit).; * <tr><td> `Timer(bool flag)` <td> Time CPU and wall clock consumption of fit steps, off by default.; * <tr><td> `PrintLevel(Int_t level)` <td> Set Minuit print level (-1 to 3, default is 1). At -1 all RooFit informational messages are suppressed as well.; * See RooMinimizer::PrintLevel for the meaning of the levels.; * <tr><td> `Warnings(bool flag)` <td> Enable or disab",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:5391,extend,extended,5391,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['extend'],['extended']
Modifiability,"ignment requirements.; //; // For Darwin platforms the frame-record (fp, lr) is stored at the top of the; // callee-saved area, since the unwind encoding does not allow for encoding; // this dynamically and existing tools depend on this layout. For other; // platforms, the frame-record is stored at the bottom of the (gpr) callee-saved; // area to allow SVE stack objects (allocated directly below the callee-saves,; // if available) to be accessed directly from the framepointer.; // The SVE spill/fill instructions have VL-scaled addressing modes such; // as:; // ldr z8, [fp, #-7 mul vl]; // For SVE the size of the vector length (VL) is not known at compile-time, so; // '#-7 mul vl' is an offset that can only be evaluated at runtime. With this; // layout, we don't need to add an unscaled offset to the framepointer before; // accessing the SVE object in the frame.; //; // In some cases when a base pointer is not strictly needed, it is generated; // anyway when offsets from the frame pointer to access local variables become; // so large that the offset can't be encoded in the immediate fields of loads; // or stores.; //; // Outgoing function arguments must be at the bottom of the stack frame when; // calling another function. If we do not have variable-sized stack objects, we; // can allocate a ""reserved call frame"" area at the bottom of the local; // variable area, large enough for all outgoing calls. If we do have VLAs, then; // the stack pointer must be decremented and incremented around each call to; // make space for the arguments below the VLAs.; //; // FIXME: also explain the redzone concept.; //; // An example of the prologue:; //; // .globl __foo; // .align 2; // __foo:; // Ltmp0:; // .cfi_startproc; // .cfi_personality 155, ___gxx_personality_v0; // Leh_func_begin:; // .cfi_lsda 16, Lexception33; //; // stp xa,bx, [sp, -#offset]!; // ...; // stp x28, x27, [sp, #offset-32]; // stp fp, lr, [sp, #offset-16]; // add fp, sp, #offset - 16; // sub sp, sp, #1360; //; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:4557,variab,variables,4557,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['variab'],['variables']
Modifiability,"igns an expression for a DebugVariable to be ""True""; /// if a DBG_VALUE in the block specifies it; ""False"" if the location is; /// clobbered; or the live-in value if it is unaffected by the block. We; /// visit each block in reverse post order until a fixedpoint is reached. The; /// solution produced is maximal.; ///; /// Intuitively, we start by assuming that every expression / variable location; /// is at least ""True"", and then propagate ""False"" from the entry block and any; /// clobbers until there are no more changes to make. This gives us an accurate; /// solution because all incorrect locations will have a ""False"" propagated into; /// them. It also gives us a solution that copes well with loops by assuming; /// that variable locations are live-through every loop, and then removing those; /// that are not through dataflow.; ///; /// Within LiveDebugValues: each variable location is represented by a; /// VarLoc object that identifies the source variable, the set of; /// machine-locations that currently describe it (a single location for; /// DBG_VALUE or multiple for DBG_VALUE_LIST), and the DBG_VALUE inst that; /// specifies the location. Each VarLoc is indexed in the (function-scope) \p; /// VarLocMap, giving each VarLoc a set of unique indexes, each of which; /// corresponds to one of the VarLoc's machine-locations and can be used to; /// lookup the VarLoc in the VarLocMap. Rather than operate directly on machine; /// locations, the dataflow analysis in this pass identifies locations by their; /// indices in the VarLocMap, meaning all the variable locations in a block can; /// be described by a sparse vector of VarLocMap indicies.; ///; /// All the storage for the dataflow analysis is local to the ExtendRanges; /// method and passed down to helper methods. ""OutLocs"" and ""InLocs"" record the; /// in and out lattice values for each block. ""OpenRanges"" maintains a list of; /// variable locations and, with the ""process"" method, evaluates the transfer; /// function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:4348,variab,variable,4348,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,2,['variab'],['variable']
Modifiability,"ikelihoods and extended likelihoods.; ##; ## ### 1. Shape fits (plain likelihood); ##; ## If you fit a non-extended pdf in two ranges, e.g. `pdf.fitTo(data,Range=""Range1,Range2"")`,; ## it will fit the shapes in the two selected ranges and also take into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both regions correct their interpretation such that N_expected refers to the full range,; ## it is interpreted easily, and consistent in both r",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:1133,extend,extended,1133,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,1,['extend'],['extended']
Modifiability,"ile Macro; by clicking on the corresponding; toolbar button, or by using Ctrl+F7 accelerator keys.; This is identical to the command "".L macro.C++"" in the root prompt; command line. #### Interrupting a Running Macro. You can interrupt a running macro by selecting the Tools menu /; Interrupt; by clicking on the corresponding toolbar button, or by; using Shift+F5 accelerator keys. #### Interface to CINT Interpreter. Any command entered in the Command combo box will be passed to; the CINT interpreter. This combo box will keep the commands history; and will allow you to re-execute the same commands during an editor; session. #### Keyboard Bindings. The following table lists the keyboard shortcuts and accelerator; keys. | Key: | Action |; |---------------|----------------|; | Up | Move cursor up. |; | Shift+Up | Move cursor up and extend selection. |; | Down | Move cursor down. |; | Shift+Down | Move cursor down and extend selection. |; | Left | Move cursor left. |; | Shift+Left | Move cursor left and extend selection. |; | Right | Move cursor right. |; | Shift+Right | Move cursor right and extend selection. |; | Home | Move cursor to begin of line. |; | Shift+Home | Move cursor to begin of line and extend selection. |; | Ctrl+Home | Move cursor to top of page. |; | End | Move cursor to end of line. |; | Shift+End | Move cursor to end of line and extend selection. |; | Ctrl+End | Move cursor to end of page. |; | PgUp | Move cursor up one page. |; | Shift+PgUp | Move cursor up one page and extend selection. |; | PgDn | Move cursor down one page. |; | Shift+PgDn | Move cursor down one page and extend selection. |; | Delete | Delete character after cursor, or text selection. |; | BackSpace | Delete character before cursor, or text selection. |; | Ctrl+B | Move cursor left. |; | Ctrl+D | Delete character after cursor, or text selection. |; | Ctrl+E | Move cursor to end of line. |; | Ctrl+H | Delete character before cursor, or text selection. |; | Ctrl+K | Delete characters fr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx:4585,extend,extend,4585,gui/gui/src/TGTextEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextEditor.cxx,1,['extend'],['extend']
Modifiability,"illed, if any.; //; // calculateFragmentIntersect(..., SliceOffsetInBits=0,; // SliceSizeInBits=32, Dest=%dest, Assign=dbg.assign); //; // Drawing the store (s) in memory followed by the shortened version ($),; // then the dbg.assign (d), with the fragment information on a seperate scale; // underneath:; //; // Memory; // offset; // from; // dest 0 63; // | |; // s[######] - Original stores 64 bits to Dest.; // $----[##] - DSE says the lower 32 bits are dead, to be removed.; // d [##] - Assign's address-modifying expression adds 4 bytes to; // dest.; // Variable | |; // Fragment 128|; // Offsets 159; //; // The answer is achieved in a few steps:; // 1. Add the fragment offset to the store offset:; // SliceOffsetInBits:0 + VarFrag.OffsetInBits:128 = 128; //; // 2. Subtract the address-modifying expression offset plus difference; // between d.address and dest:; // 128 - (expression_offset:32 + (d.address - dest):0) = 96; //; // 3. That offset along with the store size (32) represents the bits of the; // variable that'd be affected by the store. Call it SliceOfVariable.; // Intersect that with Assign's fragment info:; // SliceOfVariable ∩ Assign_fragment = none; //; // In this case: none of the dead bits of the store affect Assign.; //; // # Example 2; // Similar example with the same goal. This time the upper 16 bits; // of the store are going to be DSE'd.; //; // store i64 %v, ptr %dest, !DIAssignID !1; // dbg.assign(..., !DIExpression(fragment, 128, 32), !1, %dest,; // !DIExpression(DW_OP_plus_uconst, 4)); //; // calculateFragmentIntersect(..., SliceOffsetInBits=48,; // SliceSizeInBits=16, Dest=%dest, Assign=dbg.assign); //; // Memory; // offset; // from; // dest 0 63; // | |; // s[######] - Original stores 64 bits to Dest.; // $[####]-- - DSE says the upper 16 bits are dead, to be removed.; // d [##] - Assign's address-modifying expression adds 4 bytes to; // dest.; // Variable | |; // Fragment 128|; // Offsets 159; //; // Using the same steps in the first example:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp:2242,variab,variable,2242,interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,1,['variab'],['variable']
Modifiability,"image html gpad_classtree1.png. The TClassTree class uses the services of the class TPaveClass to; show the class names. By clicking with the right mouse button in; one TPaveClass object, one can invoke the following functions of TClassTree:; - ShowLinks(option) with by default option = ""HMR""; - Draw(classes). By default the class drawn is the one being pointed; - ShowClassesUsedBy(classes) (by default the pointed class); - ShowClassesUsing(classes) (by default the pointed class). The following picture has been generated with the following statements; ~~~ {.cpp}; TClassTree tc1(""tc1"",""TH1"");; tc1.ShowLinks(""HMR"");; ~~~. \image html gpad_classtree2.png. Note that in case of embedded classes or pointers to classes,; the corresponding dashed lines or arrows respectively start; in the TPaveClass object at an X position reflecting the position; in the list of data members. - References by data members to other classes are show with a full red line; - Multiple inheritance is shown with a dashed blue line; - ""Has a"" relation is shown with a dotted cyan line; - References from code is shown by a full green line. Use TClassTree::SetSourceDir to specify the search path for source files.; By default the search path includes the `$ROOTSYS` directory, the current; directory and the subdirectory `src`. The first time TClassTree::Draw is invoked, all the classes in the; current application are processed, including the parsing of the code; to find all classes referenced by the include statements.; This process may take a few seconds. The following commands will be; much faster. A TClassTree object may be saved in a Root file.; This object can be processed later by a Root program that ignores; the original classes. This interesting possibility allows to send; the class structure of an application to a colleague who does not have; your classes. Example:; ~~~ {.cpp}; TFile f(""myClasses.root"",""recreate""); TClassTree *ct = new TClassTree(""ct"",""ATLF*""); ct->Write();; ~~~; You can send at ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:3062,inherit,inheritance,3062,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,1,['inherit'],['inheritance']
Modifiability,"imal floating point numbers and correctly rounds according; /// to the specified rounding mode.; ///; /// Conversion to decimal text is not currently implemented.; ///; /// Non-zero finite numbers are represented internally as a sign bit, a 16-bit; /// signed exponent, and the significand as an array of integer parts. After; /// normalization of a number of precision P the exponent is within the range of; /// the format, and if the number is not denormal the P-th bit of the; /// significand is set as an explicit integer bit. For denormals the most; /// significant bit is shifted right so that the exponent is maintained at the; /// format's minimum, so that the smallest denormal has just the least; /// significant bit of the significand set. The sign of zeroes and infinities; /// is significant; the exponent and significand of such numbers is not stored,; /// but has a known implicit (deterministic) value: 0 for the significands, 0; /// for zero exponent, all 1 bits for infinity exponent. For NaNs the sign and; /// significand are deterministic, although not really meaningful, and preserved; /// in non-conversion operations. The exponent is implicitly all 1 bits.; ///; /// APFloat does not provide any exception handling beyond default exception; /// handling. We represent Signaling NaNs via IEEE-754R 2008 6.2.1 should clause; /// by encoding Signaling NaNs with the first bit of its trailing significand as; /// 0.; ///; /// TODO; /// ====; ///; /// Some features that may or may not be worth adding:; ///; /// Binary to decimal conversion (hard).; ///; /// Optional ability to detect underflow tininess before rounding.; ///; /// New formats: x87 in single and double precision mode (IEEE apart from; /// extended exponent range) (hard).; ///; /// New operations: sqrt, IEEE remainder, C90 fmod, nexttoward.; ///; // This is the common type definitions shared by APFloat and its internal; // implementation classes. This struct should not define any non-static data; // members.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APFloat.h:4413,extend,extended,4413,interpreter/llvm-project/llvm/include/llvm/ADT/APFloat.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APFloat.h,1,['extend'],['extended']
Modifiability,"imum Likelihood method, exploiting discriminating variables to; disentangle signal from background. The crucial point for such an; analysis to be reliable is to use an exhaustive list of sources of; events combined with an accurate description of all the Probability; Density Functions (PDF). To assess the validity of the fit, a convincing quality check; is to explore further the data sample by examining the distributions of; control variables. A control variable can be obtained for instance by; removing one of the discriminating variables before performing again; the maximum Likelihood fit: this removed variable is a control; variable. The expected distribution of this control variable, for; signal, is to be compared to the one extracted, for signal, from the; data sample. In order to be able to do so, one must be able to unfold; from the distribution of the whole data sample. The TSPlot method allows to reconstruct the distributions for; the control variable, independently for each of the various sources of; events, without making use of any <em>a priori</em> knowledge on <u>this</u>; variable. The aim is thus to use the knowledge available for the; discriminating variables to infer the behaviour of the individual; sources of events with respect to the control variable. TSPlot is optimal if the control variable is uncorrelated with the discriminating variables. A detail description of the formalism itself, called \f$\hbox{$_s$}{\cal P}lot\f$, is given; in [[1](https://arxiv.org/abs/physics/0402083)]. ### The method. The \f$\hbox{$_s$}{\cal P}lot\f$ technique is developed in the above context of a; maximum Likelihood method making use of discriminating variables. One considers a data sample in which are merged several species; of events. These species represent various signal components and; background components which all together account for the data sample.; The different terms of the log-Likelihood are:. - \f$N\f$ : the total number of events in the data sample,;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:1080,variab,variable,1080,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,2,['variab'],['variable']
Modifiability,"in [[1](https://arxiv.org/abs/physics/0402083)]. ### The method. The \f$\hbox{$_s$}{\cal P}lot\f$ technique is developed in the above context of a; maximum Likelihood method making use of discriminating variables. One considers a data sample in which are merged several species; of events. These species represent various signal components and; background components which all together account for the data sample.; The different terms of the log-Likelihood are:. - \f$N\f$ : the total number of events in the data sample,; - \f${\rm N}_{\rm s}\f$ : the number of species of events populating the data sample,; - \f$N_i\f$ : the number of events expected on the average for the \f$i^{\rm th}\f$ species,; - \f${\rm f}_i(y_e)\f$ : the value of the PDFs of the discriminating variables; \f$y\f$ for the\f$i^{th}\f$ species and for event\f$e\f$,; - \f$x\f$ : the set of control variables which, by definition, do not appear in; the expression of the Likelihood function \f${\cal L}\f$. The extended log-Likelihood reads:. \f[; {\cal L}=\sum_{e=1}^{N}\ln \Big\{ \sum_{i=1}^{{\rm N}_{\rm s}}N_i{\rm f}_i(y_e) \Big\} -\sum_{i=1}^{{\rm N}_{\rm s}}N_i \tag{1}; \f]. From this expression, after maximization of \f${\cal L}\f$ with respect to the \f$N_i\f$ parameters,; a weight can be computed for every event and each species, in order to obtain later the true distribution; \f$\hbox{M}_i(x)\f$ of variable \f$x\f$. If \f${\rm n}\f$ is one of the; \f${\rm N}_{\rm s}\f$ species present in the data sample, the weight for this species is defined by:. \f[; \fbox{$; {_s{\cal P}}_{\rm n}(y_e)={\sum_{j=1}^{{\rm N}_{\rm s}} \hbox{V}_{{\rm n}j}{\rm f}_j(y_e)\over\sum_{k=1}^{{\rm N}_{\rm s}}N_k{\rm f}_k(y_e) } $} , \tag{2}; \f]. where \f$\hbox{V}_{{\rm n}j}\f$. is the covariance matrix resulting from the Likelihood maximization.; This matrix can be used directly from the fit, but this is numerically; less accurate than the direct computation:. \f[; \hbox{ V}^{-1}_{{\rm n}j}~=~; {\partial^2(-{\cal L})\over\p",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:2580,extend,extended,2580,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['extend'],['extended']
Modifiability,"ineFunction to see whether such a PHI is; /// available. If no such PHI exists, the variable location must be dropped.; ///; /// To achieve this, we perform two kinds of analysis. First, we identify; /// every value defined by every instruction (ignoring those that only move; /// another value), then re-compute an SSA-form representation of the; /// MachineFunction, using value propagation to eliminate any un-necessary; /// PHI values. This gives us a map of every value computed in the function,; /// and its location within the register file / stack.; ///; /// Secondly, for each variable we perform the same analysis, where each debug; /// instruction is considered a def, and every instruction where the variable; /// is in lexical scope as a use. Value propagation is used again to eliminate; /// any un-necessary PHIs. This gives us a map of each variable to the value; /// it should have in a block.; ///; /// Once both are complete, we have two maps for each block:; /// * Variables to the values they should have,; /// * Values to the register / spill slot they are located in.; /// After which we can marry-up variable values with a location, and emit; /// DBG_VALUE instructions specifying those locations. Variable locations may; /// be dropped in this process due to the desired variable value not being; /// resident in any machine location, or because there is no PHI value in any; /// location that accurately represents the desired value. The building of; /// location lists for each block is left to DbgEntityHistoryCalculator.; ///; /// This pass is kept efficient because the size of the first SSA problem; /// is proportional to the working-set size of the function, which the compiler; /// tries to keep small. (It's also proportional to the number of blocks).; /// Additionally, we repeatedly perform the second SSA problem analysis with; /// only the variables and blocks in a single lexical scope, exploiting their; /// locality.; ///; /// ### Terminology; ///; /// A mac",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:2340,Variab,Variables,2340,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['Variab'],['Variables']
Modifiability,"ined with the help of auxillary; measurements.; <br/>; In TUnfoldDensity, such complex binning schemes are handled with the help; of the class TUnfoldBinning. For both the measurement and the truth; there is a tree structure. The tree nodes may correspond to single; bins (e.g. nuisance parameters) or may hold multi-dimensional distributions.; <br/>; For example, the ""measurement"" tree could have two leaves, one for; the primary distribution and one for auxillary measurements.; Similarly, the ""truth"" tree could have two leaves, one for the; signal and one for the background.; Each of the leaves may then have a multi-dimensional distribution.; <br/>; The class TUnfoldBinning takes care to map all bins of the; ""measurement"" to a one-dimensional vector y.; Similarly, the ""truth"" bins are mapped to the vector x. <h3>How to choose the regularisation settings</h3>. In TUnfoldDensity, two methods are implemented to determine tau**2; <ol>; <li>ScanLcurve() locate the tau where the L-curve plot has a ""kink""; this function is implemented in the TUnfold class</li>; <li>ScanTau() finds the solution such that some variable; (e.g. global correlation coefficient) is minimized.; This function is implemented in the TUnfoldDensity class</li>; </ol>; Each of the algorithms has its own advantages and disadvantages.; The algorithm (1) does not work if the input data are too similar to the; MC prediction. Typical no-go cases of the L-curve scan are:; <ul>; <li>the number of measurements is too small (e.g. ny=nx); <li>the input data have no statistical fluctuations; [identical MC events are used to fill the matrix of migrations; and the vector y for a ""closure test""]; </ul>; The algorithm (2) only works if the variable does have a real minimum; as a function of tau. If global correlations are minimized, the situation; is as follows:; The matrix of migration typically introduces negative correlations.; The area constraint introduces some positive correlation.; Regularisation on the ""size"" in",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:4551,variab,variable,4551,hist/unfold/src/TUnfoldDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx,1,['variab'],['variable']
Modifiability,"ing a few constant or type parameters.; //; // Most obviously, the intrinsics in a single parametrised family will have; // code generation sequences that only differ in a type or two, e.g. vaddq_s8; // and vaddq_u16 will look the same apart from putting a different vector type; // in the call to CGM.getIntrinsic(). But also, completely different intrinsics; // will often code-generate in the same way, with only a different choice of; // _which_ IR intrinsic they lower to (e.g. vaddq_m_s8 and vmulq_m_s8), but; // marshalling the arguments and return values of the IR intrinsic in exactly; // the same way. And others might differ only in some other kind of constant,; // such as a lane index.; //; // So, when we generate the IR-building code for all these intrinsics, we keep; // track of every value that could possibly be pulled out of the code and; // stored ahead of time in a local variable. Then we group together intrinsics; // by textual equivalence of the code that would result if _all_ those; // parameters were stored in local variables. That gives us maximal sets that; // can be implemented by a single piece of IR-building code by changing; // parameter values ahead of time.; //; // After we've done that, we do a second pass in which we only allocate _some_; // of the parameters into local variables, by tracking which ones have the same; // values as each other (so that a single variable can be reused) and which; // ones are the same across the whole set (so that no variable is needed at; // all).; //; // Hence the class below. Its allocParam method is invoked during code; // generation by every method of a Result subclass (see below) that wants to; // give it the opportunity to pull something out into a switchable parameter.; // It returns a variable name for the parameter, or (if it's being used in the; // second pass once we've decided that some parameters don't need to be stored; // in variables after all) it might just return the input expression unchanged.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:1497,variab,variables,1497,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,5,['variab'],"['variable', 'variables']"
Modifiability,"ing convention applies:. ~~~ {.cpp}; 1=bottom adjusted, 2=centered, 3=top adjusted; ~~~. For example:. ~~~ {.cpp}; align = 11 = left adjusted and bottom adjusted; align = 32 = right adjusted and vertically centered; ~~~. Begin_Macro(source); textalign.C; End_Macro. Mnemonic constants are available:. ~~~ {.cpp}; kHAlignLeft = 10, kHAlignCenter = 20, kHAlignRight = 30,; kVAlignBottom = 1, kVAlignCenter = 2, kVAlignTop = 3; ~~~. They allow to write:. ~~~ {.cpp}; object->SetTextAlign(kHAlignLeft+kVAlignTop);; ~~~. \anchor ATTTEXT2; ## Text Angle. Text angle in degrees.; The text angle of any class inheriting from `TAttText` can; be changed using the method `SetTextAngle` and retrieved using the; method `GetTextAngle`.; The following picture shows the text angle:. Begin_Macro(source); textangle.C; End_Macro. \anchor ATTTEXT3; ## Text Color. The text color is a color index (integer) pointing in the ROOT; color table.; The text color of any class inheriting from `TAttText` can; be changed using the method `SetTextColor` and retrieved using the; method `GetTextColor`.; The following table shows the first 50 default colors. Begin_Macro; {; TCanvas *c = new TCanvas(""c"",""Fill Area colors"",0,0,500,200);; c->DrawColorTable();; return c;; }; End_Macro. ### Color transparency; `SetTextColorAlpha()`, allows to set a transparent color.; In the following example the text color of the text `text`; is set to blue with an opacity of 35% (i.e. a transparency of 65%).; (The color `kBlue` itself is internally stored as fully opaque.). ~~~ {.cpp}; text->SetTextColorAlpha(kBlue, 0.35);; ~~~. The transparency is available on all platforms when the flag `OpenGL.CanvasPreferGL` is set to `1`; in `$ROOTSYS/etc/system.rootrc`, or on Mac with the Cocoa backend. On the file output; it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript. Alternatively, you can call at the top of your script `gSytle->SetCanvasPreferGL();`.; Or if you prefer to activate GL for a single canvas `c`, the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx:2111,inherit,inheriting,2111,core/base/src/TAttText.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx,1,['inherit'],['inheriting']
Modifiability,"ing quality check; is to explore further the data sample by examining the distributions of; control variables. A control variable can be obtained for instance by; removing one of the discriminating variables before performing again; the maximum Likelihood fit: this removed variable is a control; variable. The expected distribution of this control variable, for; signal, is to be compared to the one extracted, for signal, from the; data sample. In order to be able to do so, one must be able to unfold; from the distribution of the whole data sample. The TSPlot method allows to reconstruct the distributions for; the control variable, independently for each of the various sources of; events, without making use of any <em>a priori</em> knowledge on <u>this</u>; variable. The aim is thus to use the knowledge available for the; discriminating variables to infer the behaviour of the individual; sources of events with respect to the control variable. TSPlot is optimal if the control variable is uncorrelated with the discriminating variables. A detail description of the formalism itself, called \f$\hbox{$_s$}{\cal P}lot\f$, is given; in [[1](https://arxiv.org/abs/physics/0402083)]. ### The method. The \f$\hbox{$_s$}{\cal P}lot\f$ technique is developed in the above context of a; maximum Likelihood method making use of discriminating variables. One considers a data sample in which are merged several species; of events. These species represent various signal components and; background components which all together account for the data sample.; The different terms of the log-Likelihood are:. - \f$N\f$ : the total number of events in the data sample,; - \f${\rm N}_{\rm s}\f$ : the number of species of events populating the data sample,; - \f$N_i\f$ : the number of events expected on the average for the \f$i^{\rm th}\f$ species,; - \f${\rm f}_i(y_e)\f$ : the value of the PDFs of the discriminating variables; \f$y\f$ for the\f$i^{th}\f$ species and for event\f$e\f$,; - \f$x\f$ : the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:1440,variab,variable,1440,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"ing the; optionally normalized input) and output neurons are linear.; The type of hidden neurons is free, the default being sigmoids.; (One should still try to pass normalized inputs, e.g. between [0.,1]). The basic input is a TTree and two (training and test) TEventLists.; Input and output neurons are assigned a value computed for each event; with the same possibilities as for TTree::Draw().; Events may be weighted individually or via TTree::SetWeight().; 6 learning methods are available: kStochastic, kBatch,; kSteepestDescent, kRibierePolak, kFletcherReeves and kBFGS. This implementation, written by C. Delaere, is *inspired* from; the mlpfit package from J.Schwindling et al. with some extensions:. - the algorithms are globally the same; - in TMultilayerPerceptron, there is no limitation on the number of; layers/neurons, while MLPFIT was limited to 2 hidden layers; - TMultilayerPerceptron allows you to save the network in a root file, and; provides more export functionalities; - TMultilayerPerceptron gives more flexibility regarding the normalization of; inputs/outputs; - TMultilayerPerceptron provides, thanks to Andrea Bocci, the possibility to; use cross-entropy errors, which allows to train a network for pattern; classification based on Bayesian posterior probability. ### Introduction. Neural Networks are more and more used in various fields for data; analysis and classification, both for research and commercial; institutions. Some randomly chosen examples are:. - image analysis; - financial movements predictions and analysis; - sales forecast and product shipping optimisation; - in particles physics: mainly for classification tasks (signal; over background discrimination). More than 50% of neural networks are multilayer perceptrons. This; implementation of multilayer perceptrons is inspired from the; <A HREF=""http://schwind.home.cern.ch/schwind/MLPfit.html"">MLPfit; package</A> originally written by Jerome Schwindling. MLPfit remains; one of the fastest tool for",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:1433,layers,layers,1433,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,2,['layers'],['layers']
Modifiability,"ing; /// ~~~ {.cpp}; /// tree->Draw(""event.myTTimeStamp"");; /// ~~~; /// will draw the same histogram as; /// ~~~ {.cpp}; /// tree->Draw(""event.myTTimeStamp.AsDouble()"");; /// ~~~; /// In addition, when the object is a type TString or std::string, TTree::Draw; /// will call respectively `TString::Data` and `std::string::c_str()`; ///; /// If the object is a TBits, the histogram will contain the index of the bit; /// that are turned on.; ///; /// ### Retrieving information about the tree itself.; ///; /// You can refer to the tree (or chain) containing the data by using the; /// string 'This'.; /// You can then could any TTree methods. For example:; /// ~~~ {.cpp}; /// tree->Draw(""This->GetReadEntry()"");; /// ~~~; /// will display the local entry numbers be read.; /// ~~~ {.cpp}; /// tree->Draw(""This->GetUserInfo()->At(0)->GetName()"");; /// ~~~; /// will display the name of the first 'user info' object.; ///; /// ### Special functions and variables; ///; /// `Entry$`: A TTree::Draw formula can use the special variable `Entry$`; /// to access the entry number being read. For example to draw every; /// other entry use:; /// ~~~ {.cpp}; /// tree.Draw(""myvar"",""Entry$%2==0"");; /// ~~~; /// - `Entry$` : return the current entry number (`== TTree::GetReadEntry()`); /// - `LocalEntry$` : return the current entry number in the current tree of a; /// chain (`== GetTree()->GetReadEntry()`); /// - `Entries$` : return the total number of entries (== TTree::GetEntries()); /// - `LocalEntries$` : return the total number of entries in the current tree; /// of a chain (== GetTree()->TTree::GetEntries()); /// - `Length$` : return the total number of element of this formula for this; /// entry (`==TTreeFormula::GetNdata()`); /// - `Iteration$` : return the current iteration over this formula for this; /// entry (i.e. varies from 0 to `Length$`).; /// - `Length$(formula )` : return the total number of element of the formula; /// given as a parameter.; /// - `Sum$(formula )` : return the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:15027,variab,variables,15027,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"ingroup gpad. Draw inheritance tree and their relations for a list of classes. The following options are supported; - Direct inheritance (default); - Multiple inheritance; - Composition; - References by data members and member functions; - References from Code. The list of classes is specified:; - either in the TClassTree constructor as a second argument; - or the parameter to TClassTree::Draw. Note that the ClassTree viewer can also be started from the canvas; pull down menu ""Classes"". In the list of classes, class names are separated by a "":""; wildcarding is supported.; The following formats are supported, eg in TClassTree::Draw; 1. `Draw(""ClassA"")`; - Draw inheritance tree for ClassA; - Show all classes referenced by ClassA; 2. `Draw(""*ClassB"")`; - Draw inheritance tree for ClassB; and all the classes deriving from ClassB; 3. `Draw("">ClassC"")`; - Draw inheritance tree for ClassC; - Show classes referencing ClassC; 4. `Draw(""ClassD<"")`; - Draw inheritance tree for ClassD; - Show classes referenced by ClassD; - Show all classes referencing ClassD; 5. `Draw(""Cla*"")`; - Draw inheritance tree for all classes with name starting with ""Cla""; - Show classes referenced by these classes; 6. `Draw(""ClassA:ClassB<"")`; - Draw inheritance tree for ClassA; - Show all classes referenced by ClassA; - Draw inheritance tree for ClassB; - Show classes referenced by ClassB; - Show all classes referencing ClassB. Example: `Draw(""TTree<"")`; - Draw inheritance tree for the Root class TTree; - Show all classes referenced by TTree; - Show all classes using TTree. By default, only direct inheritance is drawn.; Use TClassTree::ShowLinks(option) to show additional references; - option = ""H"" to show links to embedded classes; - option = ""M"" to show multiple inheritance; - option = ""R"" to show pointers to other classes from data members; - option = ""C"" to show classes used by the code(implementation) of a class. The following picture is produced directly by:; ~~~ {.cpp}; TClassTree ct(""ct"",""*TH",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:984,inherit,inheritance,984,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,1,['inherit'],['inheritance']
Modifiability,"ion 7 digits, maximum integer bin content = +/-16777216 (\ref floatmax ""***""); - TH3D : histograms with one double per channel. Maximum precision 14 digits, maximum integer bin content = +/-9007199254740992 (\ref doublemax ""****""); - Profile histograms: See classes TProfile, TProfile2D and TProfile3D.; Profile histograms are used to display the mean value of Y and its standard deviation; for each bin in X. Profile histograms are in many cases an elegant; replacement of two-dimensional histograms : the inter-relation of two; measured quantities X and Y can always be visualized by a two-dimensional; histogram or scatter-plot; If Y is an unknown (but single-valued); approximate function of X, this function is displayed by a profile; histogram with much better precision than by a scatter-plot. <sup>; \anchor intmax (*) INT_MAX = 2147483647 is the [maximum value for a variable of type int.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; \anchor llongmax (**) LLONG_MAX = 9223372036854775807 is the [maximum value for a variable of type long64.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; \anchor floatmax (***) 2^24 = 16777216 is the [maximum integer that can be properly represented by a float32 with 23-bit mantissa.](https://stackoverflow.com/a/3793950/7471760)<br>; \anchor doublemax (****) 2^53 = 9007199254740992 is the [maximum integer that can be properly represented by a double64 with 52-bit mantissa.](https://stackoverflow.com/a/3793950/7471760); </sup>. The inheritance hierarchy looks as follows:. \image html classTH1__inherit__graph_org.svg width=100%. \anchor creating-histograms; ## Creating histograms. Histograms are created by invoking one of the constructors, e.g.; ~~~ {.cpp}; TH1F *h1 = new TH1F(""h1"", ""h1 title"", 100, 0, 4.4);; TH2F *h2 = new TH2F(""h2"", ""h2 title"", 40, 0, 4, 30, -3, 3);; ~~~; Histograms may also be created by:. - calling the Clone() function, see below; - making a projection from a 2-D or 3",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:4773,variab,variable,4773,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variable']
Modifiability,"ion object (functor) with parameters](\ref F5); 6. [A member function with parameters of a general C++ class](\ref F6). \anchor F1; ### 1 - Expression using variable x and no parameters. #### Case 1: inline expression using standard C++ functions/operators. Begin_Macro(source); {; auto fa1 = new TF1(""fa1"",""sin(x)/x"",0,10);; fa1->Draw();; }; End_Macro. #### Case 2: inline expression using a ROOT function (e.g. from TMath) without parameters. Begin_Macro(source); {; auto fa2 = new TF1(""fa2"",""TMath::DiLog(x)"",0,10);; fa2->Draw();; }; End_Macro. #### Case 3: inline expression using a user defined CLING function by name. ~~~~{.cpp}; Double_t myFunc(double x) { return x+sin(x); }; ....; auto fa3 = new TF1(""fa3"",""myFunc(x)"",-3,5);; fa3->Draw();; ~~~~. \anchor F2; ### 2 - Expression using variable x with parameters. #### Case 1: inline expression using standard C++ functions/operators. * Example a:. ~~~~{.cpp}; auto fa = new TF1(""fa"",""[0]*x*sin([1]*x)"",-3,3);; ~~~~. This creates a function of variable x with 2 parameters. The parameters must be initialized via:. ~~~~{.cpp}; fa->SetParameter(0,value_first_parameter);; fa->SetParameter(1,value_second_parameter);; ~~~~. Parameters may be given a name:. ~~~~{.cpp}; fa->SetParName(0,""Constant"");; ~~~~. * Example b:. ~~~~{.cpp}; auto fb = new TF1(""fb"",""gaus(0)*expo(3)"",0,10);; ~~~~. ``gaus(0)`` is a substitute for ``[0]*exp(-0.5*((x-[1])/[2])**2)`` and ``(0)`` means start numbering parameters at ``0``. ``expo(3)`` is a substitute for ``exp([3]+[4]*x)``. #### Case 2: inline expression using TMath functions with parameters. Begin_Macro(source); {; auto fb2 = new TF1(""fa3"",""TMath::Landau(x,[0],[1],0)"",-5,10);; fb2->SetParameters(0.2,1.3);; fb2->Draw();; }; End_Macro. \anchor F3; ### 3 - A lambda expression with variables and parameters. \since **6.00/00:**; TF1 supports using lambda expressions in the formula. This allows, by using a full C++ syntax the full power of lambda; functions and still maintain the capability of storing the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:1776,variab,variable,1776,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['variab'],['variable']
Modifiability,"ion variables (number, data types); /// and the reduction operators. This allows a simpler interface; /// and implementation while still attaining good performance.; ///; /// Pseudocode for the aforementioned OpenMP program generated by the; /// compiler is as follows:; ///; /// 1. Create private copies of reduction variables on each OpenMP; /// thread: 'foo_private', 'bar_private'; /// 2. Each OpenMP thread reduces the chunk of 'A' and 'B' assigned; /// to it and writes the result in 'foo_private' and 'bar_private'; /// respectively.; /// 3. Call the OpenMP runtime on the GPU to reduce within a team; /// and store the result on the team master:; ///; /// __kmpc_nvptx_parallel_reduce_nowait_v2(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn); ///; /// where:; /// struct ReduceData {; /// double *foo;; /// double *bar;; /// } reduceData; /// reduceData.foo = &foo_private; /// reduceData.bar = &bar_private; ///; /// 'shuffleReduceFn' and 'interWarpCpyFn' are pointers to two; /// auxiliary functions generated by the compiler that operate on; /// variables of type 'ReduceData'. They aid the runtime perform; /// algorithmic steps in a data agnostic manner.; ///; /// 'shuffleReduceFn' is a pointer to a function that reduces data; /// of type 'ReduceData' across two OpenMP threads (lanes) in the; /// same warp. It takes the following arguments as input:; ///; /// a. variable of type 'ReduceData' on the calling lane,; /// b. its lane_id,; /// c. an offset relative to the current lane_id to generate a; /// remote_lane_id. The remote lane contains the second; /// variable of type 'ReduceData' that is to be reduced.; /// d. an algorithm version parameter determining which reduction; /// algorithm to use.; ///; /// 'shuffleReduceFn' retrieves data from the remote lane using; /// efficient GPU shuffle intrinsics and reduces, using the; /// algorithm specified by the 4th parameter, the two operands; /// element-wise. The result is written to the first operand.; ///; /// Diff",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:2202,variab,variables,2202,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['variab'],['variables']
Modifiability,"ionModel; * RooResolutionModel is the base class for PDFs that represent a; * resolution model that can be convoluted with a physics model of the form; * \f[; * \mathrm{Phys}(x,a,b) = \sum_k \mathrm{coef}_k(a) * \mathrm{basis}_k(x,b); * \f]; * where basis_k are a limited number of functions in terms of the variable; * to be convoluted and coef_k are coefficients independent of the convolution; * variable.; *; * Classes derived from RooResolutionModel implement; * \f[; * R_k(x,\bar{b},\bar{c}) = \int \mathrm{basis}_k(x',\bar{b}) * \mathrm{resModel}(x-x',\bar{c}) \; \mathrm{d} x',; * \f]; * which RooAbsAnaConvPdf uses to construct the pdf for [ Phys (x) R ] :; * \f[; * \mathrm{PDF}(x,\bar a, \bar b, \bar c) = \sum_k \mathrm{coef}_k(\bar a) * R_k(x, \bar b, \bar c); * \f]; *; * A minimal implementation of a RooResolutionModel consists of a; * ```; * Int_t basisCode(const char* name); * ```; * function indicating which basis functions this resolution model supports, and; * ```; * double evaluate(),; * ```; * which should implement the resolution model (optionally convoluted with one of the; * supported basis functions). RooResolutionModel objects can be used as regular; * PDFs (They inherit from RooAbsPdf), or as resolution model convoluted with; * a basis function. The implementation of evaluate() can identify the requested; * mode using basisCode(). If zero, the regular PDF value; * should be calculated. If non-zero, the model's value convoluted with the; * basis function identified by the code should be calculated.; *; * Optionally, analytical integrals can be advertised and implemented, in the; * same way as done for regular PDFS (see RooAbsPdf for further details).; * Also in getAnalyticalIntegral() / analyticalIntegral(), the implementation; * should use basisCode() to determine for which scenario the integral is; * requested.; *; * The choice of basis returned by basisCode() is guaranteed not to change; * during the lifetime of a RooResolutionModel object.; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:1997,inherit,inherit,1997,roofit/roofitcore/src/RooResolutionModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx,1,['inherit'],['inherit']
Modifiability,"ional pattern space. One proceeds by generating a representative tracks sample and; building up the covariance matrix \f$\mathsf{C}\f$. Its eigenvectors and; eigenvalues are computed by standard methods, and thus a new basis is; obtained for the original 8-dimensional space the expansion of the; prototypes,; \f[; \mathbf{x}_m = \sum^7_{i=0} a_{m_i} \mathbf{e}_i; \quad; \mbox{where}; \quad; a_{m_i} = \mathbf{x}^T\bullet\mathbf{e}_i; \f]; allows the study of the behavior of the coefficients \f$a_{m_i}\f$ for all; the tracks of the sample. The eigenvectors which are insignificant for; the trajectory description in the expansion will have their; corresponding coefficients \f$a_{m_i}\f$ close to zero for all the; prototypes. On one hand, a reduction of the dimensionality is then obtained by; omitting these least significant vectors in the subsequent analysis. On the other hand, in the analysis of real data, these least; significant variables(?) can be used for the pattern; recognition problem of extracting the valid combinations of; coordinates describing a true trajectory from the set of all possible; wrong combinations. The program described here performs this principal components analysis; on a sample of data provided by the user. It computes the covariance; matrix, its eigenvalues ands corresponding eigenvectors and exhibits; the behavior of the principal components \f$a_{m_i}\f$, thus providing; to the user all the means of understanding their data. ## Principal Components Method; Let's consider a sample of \f$M\f$ prototypes each being characterized by; \f$P\f$ variables \f$x_0, x_1, \ldots, x_{P-1}\f$. Each prototype is a point, or a; column vector, in a \f$P\f$-dimensional *Pattern space*.; \f[; \mathbf{x} = \left[\begin{array}{c}; x_0\\x_1\\\vdots\\x_{P-1}\end{array}\right]\,,; \f]; where each \f$x_n\f$ represents the particular value associated with the; \f$n\f$-dimension. Those \f$P\f$ variables are the quantities accessible to the; experimentalist, but are no",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:2835,variab,variables,2835,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,1,['variab'],['variables']
Modifiability,"ional: List of thread local symbols; */; /*. YAML Format specification. --- !tapi-tbd-v2; archs: [ armv7, armv7s, arm64 ] # the list of architecture slices that are; # supported by this file.; uuids: [ armv7:... ] # Optional: List of architecture and UUID pairs.; platform: ios # Specifies the platform (macosx, ios, etc); flags: [] # Optional:; install-name: /u/l/libfoo.dylib #; current-version: 1.2.3 # Optional: defaults to 1.0; compatibility-version: 1.0 # Optional: defaults to 1.0; swift-version: 0 # Optional: defaults to 0; objc-constraint: retain_release # Optional: defaults to retain_release; parent-umbrella: # Optional:; exports: # List of export sections; ...; undefineds: # List of undefineds sections; ... Each export section is defined as following:. - archs: [ arm64 ] # the list of architecture slices; allowed-clients: [ client ] # Optional: List of clients; re-exports: [ ] # Optional: List of re-exports; symbols: [ _sym ] # Optional: List of symbols; objc-classes: [] # Optional: List of Objective-C classes; objc-ivars: [] # Optional: List of Objective C Instance; # Variables; weak-def-symbols: [] # Optional: List of weak defined symbols; thread-local-symbols: [] # Optional: List of thread local symbols. Each undefineds section is defined as following:; - archs: [ arm64 ] # the list of architecture slices; symbols: [ _sym ] # Optional: List of symbols; objc-classes: [] # Optional: List of Objective-C classes; objc-ivars: [] # Optional: List of Objective C Instance Variables; weak-ref-symbols: [] # Optional: List of weak defined symbols; */; /*. YAML Format specification. --- !tapi-tbd-v3; archs: [ armv7, armv7s, arm64 ] # the list of architecture slices that are; # supported by this file.; uuids: [ armv7:... ] # Optional: List of architecture and UUID pairs.; platform: ios # Specifies the platform (macosx, ios, etc); flags: [] # Optional:; install-name: /u/l/libfoo.dylib #; current-version: 1.2.3 # Optional: defaults to 1.0; compatibility-version: 1.0 # Opt",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp:2261,Variab,Variables,2261,interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp,1,['Variab'],['Variables']
Modifiability,ions. //; // //; // Each test will performed fits with different functions and //; // different minimization algorithms selected. There is an error //; // tolerance for each one of them. There is also the possibility to //; // inspect each one of the test individually changing the //; // defaultOptions variable. //; // //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O F I T *; // ****************************************************************************; // Test 1D and 2D objects; // Test 1: 'Histogram 1D Variable' with 'GAUS'...................OK; // Test 2: 'Histogram 1D' with 'GAUS'............................OK; // Test 3: 'TGraph 1D' with 'GAUS'...............................OK; // Test 4: 'TGraphErrors 1D' with 'GAUS'.........................OK; // Test 5: 'THnSparse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 17: 'Histogram 1D' with 'Polynomial'......................OK; // Test 18: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 19: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 20: 'THnSparse 1D' w,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:1642,Variab,Variable,1642,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Variab'],['Variable']
Modifiability,"ique, one considers an example derived from the analysis where; \f$\hbox {$_s$}{\cal P}lots\f$; have been first used (charmless B decays). One is dealing with a data; sample in which two species are present: the first is termed signal and; the second background. A maximum Likelihood fit is performed to obtain; the two yields \f$N_1\f$ and \f$N_2\f$ . The fit relies on two discriminating; variables collectively denoted \f$y\f$ which are chosen within three possible; variables denoted \f${m_{\rm ES}}\f$ , \f$\Delta E\f$ and \f${\cal F}\f$.; The variable which is not incorporated in \f$y\f$ is used as the control variable; \f$x\f$ . The six distributions of the three variables are assumed to be the ones; depicted in Fig. 1. \image html splot_pdfmesNIM.png Figure 1 width=800. Distributions of the three discriminating variables available to perform the Likelihood fit:; \f${m_{\rm ES}}\f$ , \f$\Delta E\f$ , \f${\cal F}\f$ .; Among the three variables, two are used to perform the fit while one is; kept out of the fit to serve the purpose of a control variable. The; three distributions on the top (resp. bottom) of the figure correspond; to the signal (resp. background). The unit of the vertical axis is; chosen such that it indicates the number of entries per bin, if one; slices the histograms in 25 bins. A data sample being built through a Monte Carlo simulation based on the; distributions shown in Fig.; 1,; one obtains the three distributions of Fig. 2.; Whereas the distribution of \f$\Delta E\f$ clearly indicates the presence of the signal,; the distribution of \f${m_{\rm ES}}\f$ and \f${\cal F}\f$ are less obviously populated by signal. \image html splot_genfiTOTNIM.png Figure 2 width=800. Distributions of the three discriminating variables for signal plus; background. The three distributions are the ones obtained from a data; sample obtained through a Monte Carlo simulation based on the; distributions shown in Fig.; 1.; The data sample consists of 500 signal events and ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:7299,variab,variables,7299,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"isted in `columnList`. `f` must return the value that will be; assigned to the temporary column. A new variable is created called `name`, accessible as if it was contained in the dataset from subsequent; transformations/actions. Use cases include:; - caching the results of complex calculations for easy and efficient multiple access; - extraction of quantities of interest from complex objects; - branch aliasing, i.e. changing the name of a branch. An exception is thrown if the `name` of the new column/branch is already in use for another branch in the TTree. It is also possible to specify the quantity to be stored in the new temporary column as a C++ expression with the method; `Define(name, expression)`. For example this invocation. ~~~{.cpp}; df.Define(""pt"", ""sqrt(px*px + py*py)"");; ~~~. will create a new column called ""pt"" the value of which is calculated starting from the columns px and py. The system; builds a just-in-time compiled function starting from the expression after having deduced the list of necessary branches; from the names of the variables specified by the user. #### Custom columns as function of slot and entry number. It is possible to create custom columns also as a function of the processing slot and entry numbers. The methods that can; be invoked are:; - `DefineSlot(name, f, columnList)`. In this case the callable f has this signature `R(unsigned int, T1, T2, ...)`: the; first parameter is the slot number which ranges from 0 to ROOT::GetThreadPoolSize() - 1.; - `DefineSlotEntry(name, f, columnList)`. In this case the callable f has this signature `R(unsigned int, ULong64_t,; T1, T2, ...)`: the first parameter is the slot number while the second one the number of the entry being processed. \anchor actions; ## Actions: getting results; ### Instant and lazy actions; Actions can be **instant** or **lazy**. Instant actions are executed as soon as they are called, while lazy actions are; executed whenever the object they return is accessed for the firs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:33436,variab,variables,33436,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['variab'],['variables']
Modifiability,"isting TProfile histogram.; ///; /// ### Making a 2D Profile histogram; ///; /// In case of a 3-Dim expression, one can generate a TProfile2D histogram; /// instead of a TH3F histogram by specifying option=prof or option=profs.; /// or option=profi or option=profg ; the trailing letter select the way; /// the bin error are computed, See TProfile2D::SetErrorOption for; /// details on the differences.; /// The option=prof is automatically selected in case of z:y:x>>pf; /// where pf is an existing TProfile2D histogram.; ///; /// ### Making a 5D plot using GL; ///; /// If option GL5D is specified together with 5 variables, a 5D plot is drawn; /// using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example.; ///; /// ### Making a parallel coordinates plot; ///; /// In case of a 2-Dim or more expression with the option=para, one can generate; /// a parallel coordinates plot. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Making a candle sticks chart; ///; /// In case of a 2-Dim or more expression with the option=candle, one can generate; /// a candle sticks chart. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Normalizing the output histogram to 1; ///; /// When option contains ""norm"" the output histogram is normalized to 1.; ///; /// ### Saving the result of Draw to a TEventList, a TEntryList or a TEntryListArray; ///; /// TTree::Draw can be used to fill a TEventList object (list of entry numbers); /// instead of histogramming one variable.; /// If varexp0 has the form >>elist , a TEventList object named ""elist""; /// is created in the current directory. elist will contain the list; /// of entry numbers satisfying the current selection.; /// If option ""entrylist"" is used, a TEntryList object i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:21284,variab,variables,21284,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variables']
Modifiability,"it from the constraints above.; In particular, the division axis is chosen as the one with the biggest spread, and the point to create the; splitting plane is chosen so, that one of the two subtrees contains exactly 2^k terminal nodes and is a; perfectly balanced binary tree, and, while at the same time, trying to keep the number of terminal nodes; in the 2 subtrees as close as possible. The following section gives more details about our implementation. ### 3. Using TKDTree. #### 3a. Creating the tree and setting the data; The interface of the TKDTree, that allows to set input data, has been developed to simplify using it; together with TTree::Draw() functions. That's why the data has to be provided column-wise. For example:. \code{.cpp}; {; TTree *datatree = ...; ...; datatree->Draw(""x:y:z"", ""selection"", ""goff"");; //now make a kd-tree on the drawn variables; TKDTreeID *kdtree = new TKDTreeID(npoints, 3, 1);; kdtree->SetData(0, datatree->GetV1());; kdtree->SetData(1, datatree->GetV2());; kdtree->SetData(2, datatree->GetV3());; kdtree->Build();; }; NOTE, that this implementation of kd-tree doesn't support adding new points after the tree has been built; Of course, it's not necessary to use TTree::Draw(). What is important, is to have data columnwise.; An example with regular arrays:; {; Int_t npoints = 100000;; Int_t ndim = 3;; Int_t bsize = 1;; Double_t xmin = -0.5;; Double_t xmax = 0.5;; Double_t *data0 = new Double_t[npoints];; Double_t *data1 = new Double_t[npoints];; Double_t *data2 = new Double_t[npoints];; Double_t *y = new Double_t[npoints];; for (Int_t i=0; i<npoints; i++){; data0[i]=gRandom->Uniform(xmin, xmax);; data1[i]=gRandom->Uniform(xmin, xmax);; data2[i]=gRandom->Uniform(xmin, xmax);; }; TKDTreeID *kdtree = new TKDTreeID(npoints, ndim, bsize);; kdtree->SetData(0, data0);; kdtree->SetData(1, data1);; kdtree->SetData(2, data2);; kdtree->Build();; }; \endcode. By default, the kd-tree doesn't own the data and doesn't delete it with itself. If you want th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx:4090,variab,variables,4090,math/mathcore/src/TKDTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx,1,['variab'],['variables']
Modifiability,"it to dump the externals in a bunch of object; * files to create a .def file.; *; * Notes: Visual C++ puts an underscore before each exported symbol.; * This file removes them. I don't know if this is a problem; * this other compilers. If _MSC_VER is defined,; * the underscore is removed. If not, it isn't. To get a; * full dump of an object file, use the -f option. This can; * help determine the something that may be different with a; * compiler other than Visual C++.; * ======================================; * Corrections (Axel 2006-04-04):; * Conversion to C++. Mostly.; *; * Extension (Axel 2006-03-15); * As soon as an object file contains an /EXPORT directive (which; * is generated by the compiler when a symbol is declared as; * __declspec(dllexport) no to-be-exported symbols are printed,; * as the linker will see these directives, and if those directives; * are present we only export selectively (i.e. we trust the; * programmer).; *; * ======================================; * ======================================; * Corrections (Valery Fine 23/02/98):; *; * The ""(vector) deleting destructor"" MUST not be exported; * To recognize it the following test are introduced:; * ""@@UAEPAXI@Z"" scalar deleting dtor; * ""@@QAEPAXI@Z"" vector deleting dtor; * ""AEPAXI@Z"" vector deleting dtor with thunk adjustor; * ======================================; * Corrections (Valery Fine 12/02/97):; *; * It created a wrong EXPORTS for the global pointers and constants.; * The Section Header has been involved to discover the missing information; * Now the pointers are correctly supplied with ""DATA"" descriptor; * the constants with no extra descriptor.; *; * Corrections (Valery Fine 16/09/96):; *; * It didn't work for C++ code with global variables and class definitions; * The DumpExternalObject function has been introduced to generate .DEF; *file; *; * Author: Valery Fine 16/09/96 (E-mail: fine@vxcern.cern.ch); *----------------------------------------------------------------------; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/win/bindexplib/bindexplib.cxx:2569,variab,variables,2569,misc/win/bindexplib/bindexplib.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/win/bindexplib/bindexplib.cxx,1,['variab'],['variables']
Modifiability,"it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~{.cpp}; /// Double_t somepx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somepx will be updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// floa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:2830,variab,variables,2830,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['variab'],['variables']
Modifiability,"ith a float per channel (see TH1 documentation); \class TH3D; \brief 3-D histogram with a double per channel (see TH1 documentation); @}; */; /** \class TH3; \ingroup Histograms; The 3-D histogram classes derived from the 1-D histogram classes.; All operations are supported (fill, fit).; Drawing is currently restricted to one single option.; A cloud of points is drawn. The number of points is proportional to; cell content. - TH3C a 3-D histogram with one byte per cell (char). Maximum bin content = 127; - TH3S a 3-D histogram with two bytes per cell (short integer). Maximum bin content = 32767; - TH3I a 3-D histogram with four bytes per cell (32 bit integer). Maximum bin content = INT_MAX (\ref intmax3 ""*""); - TH3L a 3-D histogram with eight bytes per cell (64 bit integer). Maximum bin content = LLONG_MAX (\ref llongmax3 ""**""); - TH3F a 3-D histogram with four bytes per cell (float). Maximum precision 7 digits, maximum integer bin content = +/-16777216 (\ref floatmax3 ""***""); - TH3D a 3-D histogram with eight bytes per cell (double). Maximum precision 14 digits, maximum integer bin content = +/-9007199254740992 (\ref doublemax3 ""****""). <sup>; \anchor intmax3 (*) INT_MAX = 2147483647 is the [maximum value for a variable of type int.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; \anchor llongmax3 (**) LLONG_MAX = 9223372036854775807 is the [maximum value for a variable of type long64.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; \anchor floatmax3 (***) 2^24 = 16777216 is the [maximum integer that can be properly represented by a float32 with 23-bit mantissa.](https://stackoverflow.com/a/3793950/7471760)<br>; \anchor doublemax3 (****) 2^53 = 9007199254740992 is the [maximum integer that can be properly represented by a double64 with 52-bit mantissa.](https://stackoverflow.com/a/3793950/7471760); </sup>; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx:1632,variab,variable,1632,hist/hist/src/TH3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH3.cxx,2,['variab'],['variable']
Modifiability,"iveError),; and \f$ S\f$ will be considered minimized when. \f[; R = \frac{S}{\sum_{j=1}^M D_j^2} < \epsilon; \f]; Optionally, the user may impose a functional expression by specifying; the powers of each variable in \f$ L\f$ specified functions \f$ F_1, \ldots,F_L\f$ (TMultiDimFit::SetPowers).; In that case, only the coefficients \f$ c_l\f$ is calculated by the class. ## Limiting the Number of Terms; As always when dealing with fits, there's a real chance of *over fitting*. As is well-known, it's; always possible to fit an \f$ N-1\f$ polynomial in \f$ x\f$ to \f$ N\f$ points \f$ (x,y)\f$ with; \f$\chi^2 = 0\f$, but the polynomial is not likely to fit new data at all [1].; Therefore, the user is asked to provide an upper limit, \f$ L_{max}\f$ to the number of terms in; \f$ D_p\f$ (TMultiDimFit::SetMaxTerms). However, since there's an infinite number of \f$ F_l\f$ to choose from, the; user is asked to give the maximum power. \f$ P_{max,i}\f$, of each variable; \f$ x_i\f$ to be considered in the minimization of \f$ S\f$ (TMultiDimFit::SetMaxPowers). One way of obtaining values for the maximum power in variable \f$ i\f$, is; to perform a regular fit to the dependent quantity \f$ D\f$, using a; polynomial only in \f$ x_i\f$. The maximum power is \f$ P_{max,i}\f$ is then the; power that does not significantly improve the one-dimensional; least-square fit over \f$ x_i\f$ to \f$ D\f$ [5]. There are still a huge amount of possible choices for \f$ F_l\f$; in fact; there are \f$\prod_{i=1}^{N} (P_{max,i} + 1)\f$ possible; choices. Obviously we need to limit this. To this end, the user is; asked to set a *power control limit*, \f$ Q\f$ (TMultiDimFit::SetPowerLimit), and a function; \f$ F_l\f$ is only accepted if; \f[; Q_l = \sum_{i=1}^{N} \frac{P_{li}}{P_{max,i}} < Q; \f]; where \f$ P_{li}\f$ is the leading power of variable \f$ x_i\f$ in function \f$ F_l\f$ (TMultiDimFit::MakeCandidates).; So the number of functions increase with \f$ Q\f$ (1, 2 is fine, 5 is way out). ## Gram",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:4424,variab,variable,4424,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variable']
Modifiability,"ject, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass eliminates local data store, LDS, uses from non-kernel functions.; // LDS is contiguous memory allocated per kernel execution.; //; // Background.; //; // The programming model is global variables, or equivalently function local; // static variables, accessible from kernels or other functions. For uses from; // kernels this is straightforward - assign an integer to the kernel for the; // memory required by all the variables combined, allocate them within that.; // For uses from functions there are performance tradeoffs to choose between.; //; // This model means the GPU runtime can specify the amount of memory allocated.; // If this is more than the kernel assumed, the excess can be made available; // using a language specific feature, which IR represents as a variable with; // no initializer. This feature is referred to here as ""Dynamic LDS"" and is; // lowered slightly differently to the normal case.; //; // Consequences of this GPU feature:; // - memory is limited and exceeding it halts compilation; // - a global accessed by one kernel exists independent of other kernels; // - a global exists independent of simultaneous execution of the same kernel; // - the address of the global may be different from different kernels as they; // do not alias, which permits only allocating variables they use; // - if the address is allowed to differ, functions need help to find it; //; // Uses from kernels are implemented here by grouping them in a per-kernel; // struct instance. This duplicates the variables, accurately modelling their; // aliasing properties relative to a single global representation. It also; // permits control over alignment via padding.; //; // Uses from functions are more compli",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:1164,variab,variable,1164,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variable']
Modifiability,"l histograms in memory associated with this file; are automatically deleted. \anchor labelling-axis; ### Labelling axes. Axis titles can be specified in the title argument of the constructor.; They must be separated by "";"":; ~~~ {.cpp}; TH1F* h=new TH1F(""h"", ""Histogram title;X Axis;Y Axis"", 100, 0, 1);; ~~~; The histogram title and the axis titles can be any TLatex string, and; are persisted if a histogram is written to a file. Any title can be omitted:; ~~~ {.cpp}; TH1F* h=new TH1F(""h"", ""Histogram title;;Y Axis"", 100, 0, 1);; TH1F* h=new TH1F(""h"", "";;Y Axis"", 100, 0, 1);; ~~~; The method SetTitle() has the same syntax:; ~~~ {.cpp}; h->SetTitle(""Histogram title;Another X title Axis"");; ~~~; Alternatively, the title of each axis can be set directly:; ~~~ {.cpp}; h->GetXaxis()->SetTitle(""X axis title"");; h->GetYaxis()->SetTitle(""Y axis title"");; ~~~; For bin labels see \ref binning. \anchor binning; ## Binning. \anchor fix-var; ### Fix or variable bin size. All histogram types support either fix or variable bin sizes.; 2-D histograms may have fix size bins along X and variable size bins; along Y or vice-versa. The functions to fill, manipulate, draw or access; histograms are identical in both cases. Each histogram always contains 3 axis objects of type TAxis: fXaxis, fYaxis and fZaxis.; To access the axis parameters, use:; ~~~ {.cpp}; TAxis *xaxis = h->GetXaxis(); etc.; Double_t binCenter = xaxis->GetBinCenter(bin), etc.; ~~~; See class TAxis for a description of all the access functions.; The axis range is always stored internally in double precision. \anchor convention; ### Convention for numbering bins. For all histogram types: nbins, xlow, xup; ~~~ {.cpp}; bin = 0; underflow bin; bin = 1; first bin with low-edge xlow INCLUDED; bin = nbins; last bin with upper-edge xup EXCLUDED; bin = nbins+1; overflow bin; ~~~; In case of 2-D or 3-D histograms, a ""global bin"" number is defined.; For example, assuming a 3-D histogram with (binx, biny, binz), the function; ~~~ {.cpp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:7413,variab,variable,7413,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variable']
Modifiability,"layer; /// into the referenced RModel object; ///; /// \param[in] rmodel RModel object; /// \param[in] fLayer Python Keras layer as a Dictionary object; /// \param[out] RModel object with the added ROperator; ///; /// Function adds equivalent ROperator into the referenced RModel object.; /// Keras models can have layers like Dense and Conv which have activation; /// function as an attribute. Function first searches if layer object is among; /// the ones which don't have activation attribute and then calls the respective; /// preparation function to get the ROperator object, which is then added; /// into the RModel object. If passed layer is among the ones which may have activation; /// attribute, then it checks for the activation attribute, if present then first adds; /// the primary operator into the RModel object, and then adds the operator for the; /// activation function with appropriate changes in the names of input and output; /// tensors for both of them.; /// Example of such layers is the Dense Layer. For a dense layer with input tensor name; /// dense2BiasAdd0 and output tensor name dense3Relu0 with relu as activation attribute; /// will be transformed into a ROperator_Gemm with input tensor name dense2BiasAdd0; /// & output tensor name dense3Dense (layerName+layerType), and a subsequent; /// ROperator_Relu with input tensor name as dense3Dense and output tensor name; /// as dense3Relu0.; ///; /// For developing new preparatory functions for supporting Keras layers in future,; /// all one needs is to extract the required properties and attributes from the fLayer; /// dictionary which contains all the information about any Keras layer and after; /// any required transformations, these are passed for instantiating the ROperator; /// object.; ///; /// The fLayer dictionary which holds all the information about a Keras layer has; /// following structure:-; ///; /// dict fLayer { 'layerType' : Type of the Keras layer; /// 'layerAttributes' : Attributes of the ke",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx:1147,layers,layers,1147,tmva/pymva/src/RModelParser_Keras.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx,1,['layers'],['layers']
Modifiability,"ld; /// be fSizex*fSizey except for inverse FOURIER, FOUR-WALSH, FOUR-HAAR; /// transform. These need fSizex*2*fSizey length to supply real and; /// imaginary coefficients.; /// - fDest-pointer to the matrix of destination data, its size should be; /// fSizex*fSizey except for direct FOURIER, FOUR-WALSh, FOUR-HAAR. These; /// need fSizex*2*fSizey length to store real and imaginary coefficients; /// - fSizex,fSizey-basic dimensions of source and dest spectra; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example 1 - script Transform2.c:; ///; /// \image html spectrum2transform_transform_image002.jpg Fig. 1 Original two-dimensional noisy spectrum; ///; /// \image html spectrum2transform_transform_image003",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1389,enhance,enhancement,1389,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,1,['enhance'],['enhancement']
Modifiability,"ler pass and is configured via a; // YAML configuration file.; //; // The YAML configuration file format is as follows:; //; // RewriteMapFile := RewriteDescriptors; // RewriteDescriptors := RewriteDescriptor | RewriteDescriptors; // RewriteDescriptor := RewriteDescriptorType ':' '{' RewriteDescriptorFields '}'; // RewriteDescriptorFields := RewriteDescriptorField | RewriteDescriptorFields; // RewriteDescriptorField := FieldIdentifier ':' FieldValue ','; // RewriteDescriptorType := Identifier; // FieldIdentifier := Identifier; // FieldValue := Identifier; // Identifier := [0-9a-zA-Z]+; //; // Currently, the following descriptor types are supported:; //; // - function: (function rewriting); // + Source (original name of the function); // + Target (explicit transformation); // + Transform (pattern transformation); // + Naked (boolean, whether the function is undecorated); // - global variable: (external linkage global variable rewriting); // + Source (original name of externally visible variable); // + Target (explicit transformation); // + Transform (pattern transformation); // - global alias: (global alias rewriting); // + Source (original name of the aliased name); // + Target (explicit transformation); // + Transform (pattern transformation); //; // Note that source and exactly one of [Target, Transform] must be provided; //; // New rewrite descriptors can be created. Addding a new rewrite descriptor; // involves:; //; // a) extended the rewrite descriptor kind enumeration; // (<anonymous>::RewriteDescriptor::RewriteDescriptorType); // b) implementing the new descriptor; // (c.f. <anonymous>::ExplicitRewriteFunctionDescriptor); // c) extending the rewrite map parser; // (<anonymous>::RewriteMapParser::parseEntry); //; // Specify to rewrite the symbols using the `-rewrite-symbols` option, and; // specify the map file to use for the rewriting via the `-rewrite-map-file`; // option.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SymbolRewriter.cpp:1914,rewrite,rewrite,1914,interpreter/llvm-project/llvm/lib/Transforms/Utils/SymbolRewriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SymbolRewriter.cpp,11,"['Rewrite', 'extend', 'rewrite']","['RewriteDescriptor', 'RewriteDescriptorType', 'RewriteMapParser', 'extended', 'extending', 'rewrite', 'rewrite-map-file', 'rewrite-symbols']"
Modifiability,"leted and only the last one is kept.; /// ""N"" | Does not store the graphics function, does not draw the histogram with the function after fitting.; /// ""0"" | Does not draw the histogram and the fitted function after fitting, but in contrast to option ""N"", it stores the fitted function in the histogram list of functions.; /// ""R"" | Fit using a fitting range specified in the function range with `TF1::SetRange`.; /// ""B"" | Use this option when you want to fix or set limits on one or more parameters and the fitting function is a predefined one (e.g gaus, expo,..), otherwise in case of pre-defined functions, some default initial values and limits will be used.; /// ""C"" | In case of linear fitting, do no calculate the chisquare (saves CPU time).; /// ""G"" | Uses the gradient implemented in `TF1::GradientPar` for the minimization. This allows to use Automatic Differentiation when it is supported by the provided TF1 function.; /// ""WIDTH"" | Scales the histogran bin content by the bin width (useful for variable bins histograms); /// ""SERIAL"" | Runs in serial mode. By defult if ROOT is built with MT support and MT is enables, the fit is perfomed in multi-thread - ""E"" Perform better Errors estimation using Minos technique; /// ""MULTITHREAD"" | Forces usage of multi-thread execution whenever possible; ///; /// The default fitting of an histogram (when no option is given) is perfomed as following:; /// - a chi-square fit (see below Chi-square Fits) computed using the bin histogram errors and excluding bins with zero errors (empty bins);; /// - the full range of the histogram is used;; /// - the default Minimizer with its default configuration is used (see below Minimizer Configuration) except for linear function;; /// - for linear functions (`polN`, `chenbyshev` or formula expressions combined using operator `++`) a linear minimization is used.; /// - only the status of the fit is returned;; /// - the fit is performed in Multithread whenever is enabled in ROOT;; /// - only the las",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:3723,variab,variable,3723,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variable']
Modifiability,"ll the bin is; very slow. The alternative is to divide the histogram into virtual rectangular regions; called ""cells"". Each cell stores the pointers of the bins intersecting it.; When a coordinate is to be filled, the method finds which cell the coordinate; falls into. Since the cells are rectangular, this can be done very quickly.; It then only loops over the bins associated with that cell and calls `IsInside()`; only on that bins. This reduces considerably the number of bins on which `IsInside()`; is called and therefore speed up by a huge factor the filling compare to the brute force; approach where `IsInside()` is called for all bins. The addition of bins to the appropriate cells is done when the bin is added; to the histogram. To do this, `AddBin()` calls the; `AddBinToPartition()` method.; This method adds the input bin to the partitioning matrix. The number of partition cells per axis can be specified in the constructor.; If it is not specified, the default value of 25 along each axis will be; assigned. This value was chosen because it is small enough to avoid slowing; down AddBin(), while being large enough to enhance Fill() by a considerable; amount. Regardless of how it is initialized at construction time, it can be; changed later with the `ChangePartition()` method.; `ChangePartition()` deletes the; old partition matrix and generates a new one with the specified number of cells; on each axis. The optimum number of partition cells per axis changes with the number of; times `Fill()` will be called. Although partitioning greatly speeds up; filling, it also adds a constant time delay into the code. When `Fill()`; is to be called many times, it is more efficient to divide the histogram into; a large number cells. However, if the histogram is to be filled only a few; times, it is better to divide into a small number of cells.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default Constructor. No boundaries specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx:4656,enhance,enhance,4656,hist/hist/src/TH2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx,1,['enhance'],['enhance']
Modifiability,"ll-known ""sort by decreasing alignment"" solution:; ///; /// - Fields may be assigned a fixed offset in the layout. If there are; /// gaps among the fixed-offset fields, the algorithm may attempt; /// to allocate flexible-offset fields into those gaps. If that's; /// undesirable, the caller should ""block out"" those gaps by e.g.; /// just creating a single fixed-offset field that represents the; /// entire ""header"".; ///; /// - The size of a field is not required to be a multiple of, or even; /// greater than, the field's required alignment. The only constraint; /// on fields is that they must not be zero-sized.; ///; /// To simplify the implementation, any fixed-offset fields in the; /// layout must appear at the start of the field array, and they must; /// be ordered by increasing offset.; ///; /// The algorithm will produce a guaranteed-minimal layout with no; /// interior padding in the following ""C-style"" case:; ///; /// - every field's size is a multiple of its required alignment and; /// - either no fields have initially fixed offsets, or the fixed-offset; /// fields have no interior padding and end at an offset that is at; /// least as aligned as all the flexible-offset fields.; ///; /// Otherwise, while the algorithm will make a best-effort attempt to; /// avoid padding, it cannot guarantee a minimal layout, as there is; /// no known efficient algorithm for doing so.; ///; /// The layout produced by this algorithm may not be stable across LLVM; /// releases. Do not use this anywhere where ABI stability is required.; ///; /// Flexible-offset fields with the same size and alignment will be ordered; /// the same way they were in the initial array. Otherwise the current; /// algorithm makes no effort to preserve the initial order of; /// flexible-offset fields.; ///; /// On return, all fields will have been assigned a fixed offset, and the; /// array will be sorted in order of ascending offsets. Note that this; /// means that the fixed-offset fields may no longer ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/OptimizedStructLayout.h:1409,flexible,flexible-offset,1409,interpreter/llvm-project/llvm/include/llvm/Support/OptimizedStructLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/OptimizedStructLayout.h,1,['flexible'],['flexible-offset']
Modifiability,"llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines helper classes for UninitializedObjectChecker and; // documentation about the logic of it.; //; // The checker reports uninitialized fields in objects created after a; // constructor call.; //; // This checker has several options:; // - ""Pedantic"" (boolean). If its not set or is set to false, the checker; // won't emit warnings for objects that don't have at least one initialized; // field. This may be set with; //; // `-analyzer-config optin.cplusplus.UninitializedObject:Pedantic=true`.; //; // - ""NotesAsWarnings"" (boolean). If set to true, the checker will emit a; // warning for each uninitialized field, as opposed to emitting one warning; // per constructor call, and listing the uninitialized fields that belongs; // to it in notes. Defaults to false.; //; // `-analyzer-config \; // optin.cplusplus.UninitializedObject:NotesAsWarnings=true`.; //; // - ""CheckPointeeInitialization"" (boolean). If set to false, the checker will; // not analyze the pointee of pointer/reference fields, and will only check; // whether the object itself is initialized. Defaults to false.; //; // `-analyzer-config \; // optin.cplusplus.UninitializedObject:CheckPointeeInitialization=true`.; //; // TODO: With some clever heuristics, some pointers should be dereferenced; // by default. For example, if the pointee is constructed within the; // constructor call, it's reasonable to say that no external object; // references it, and we wouldn't generate multiple report on the same; // pointee.; //; // - ""IgnoreRecordsWithField"" (string). If supplied, the checker will not; // analyze structures that have a field with a name or type name that; // matches the given pattern. Defaults to """".; //; // `-analyzer-config \; // optin.cplusplus.UninitializedObject:IgnoreRecordsWithField=""[Tt]ag|",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObject.h:1184,config,config,1184,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObject.h,1,['config'],['config']
Modifiability,"loop.; ///; /// Merges loops of a loop nest into a single CanonicalLoopNest representation; /// that has the same number of innermost loop iterations as the origin loop; /// nest. The induction variables of the input loops are derived from the; /// collapsed loop's induction variable. This is intended to be used to; /// implement OpenMP's collapse clause. Before applying a directive,; /// collapseLoops normalizes a loop nest to contain only a single loop and the; /// directive's implementation does not need to handle multiple loops itself.; /// This does not remove the need to handle all loop nest handling by; /// directives, such as the ordered(<n>) clause or the simd schedule-clause; /// modifier of the worksharing-loop directive.; ///; /// Example:; /// \code; /// for (int i = 0; i < 7; ++i) // Canonical loop ""i""; /// for (int j = 0; j < 9; ++j) // Canonical loop ""j""; /// body(i, j);; /// \endcode; ///; /// After collapsing with Loops={i,j}, the loop is changed to; /// \code; /// for (int ij = 0; ij < 63; ++ij) {; /// int i = ij / 9;; /// int j = ij % 9;; /// body(i, j);; /// }; /// \endcode; ///; /// In the current implementation, the following limitations apply:; ///; /// * All input loops have an induction variable of the same type.; ///; /// * The collapsed loop will have the same trip count integer type as the; /// input loops. Therefore it is possible that the collapsed loop cannot; /// represent all iterations of the input loops. For instance, assuming a; /// 32 bit integer type, and two input loops both iterating 2^16 times, the; /// theoretical trip count of the collapsed loop would be 2^32 iteration,; /// which cannot be represented in an 32-bit integer. Behavior is undefined; /// in this case.; ///; /// * The trip counts of every input loop must be available at \p ComputeIP.; /// Non-rectangular loops are not yet supported.; ///; /// * At each nest level, code between a surrounding loop and its nested loop; /// is hoisted into the loop body, and such c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:1271,variab,variable,1271,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,1,['variab'],['variable']
Modifiability,"lors"",0,0,500,200);; c->DrawColorTable();; return c;; }; End_Macro. ### Color transparency; `SetLineColorAlpha()`, allows to set a transparent color.; In the following example the line color of the histogram `histo`; is set to blue with an opacity of 35% (i.e. a transparency of 65%).; (The color `kBlue` itself is internally stored as fully opaque.). ~~~ {.cpp}; histo->SetLineColorAlpha(kBlue, 0.35);; ~~~. The transparency is available on all platforms when the flag `OpenGL.CanvasPreferGL` is set to `1`; in `$ROOTSYS/etc/system.rootrc`, or on Mac with the Cocoa backend. On the file output; it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript. Alternatively, you can call at the top of your script `gSytle->SetCanvasPreferGL();`.; Or if you prefer to activate GL for a single canvas `c`, then use `c->SetSupportGL(true);`. \anchor ATTLINE2; ## Line Width; The line width is expressed in pixel units.; The line width of any class inheriting from `TAttLine` can; be changed using the method `SetLineWidth` and retrieved using the; method `GetLineWidth`.; The following picture shows the line widths from 1 to 10 pixels. Begin_Macro; {; TCanvas *Lw = new TCanvas(""Lw"",""test"",500,200);; TText t;; t.SetTextAlign(32);; t.SetTextSize(0.08);; Int_t i=1;; for (float s=0.1; s<1.0 ; s+=0.092) {; TLine *lh = new TLine(0.15,s,.85,s);; lh->SetLineWidth(i);; t.DrawText(0.1,s,Form(""%d"",i++));; lh->Draw();; }; }; End_Macro. \anchor ATTLINE3; ## Line Style; Line styles are identified via integer numbers. The line style of any class; inheriting from `TAttLine` can be changed using the method; `SetLineStyle` and retrieved using the method `GetLineStyle`. The first 10 line styles are predefined as shown on the following picture:. Begin_Macro; {; TCanvas *Ls = new TCanvas(""Ls"",""test"",500,200);; TText t;; t.SetTextAlign(32);; t.SetTextSize(0.08);; Int_t i=1;; for (float s=0.1; s<1.0 ; s+=0.092) {; TLine *lh = new TLine(0.15,s,.85,s);; lh->SetLineStyle(i);; lh->SetLineWidth(3);; t.Dr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttLine.cxx:1684,inherit,inheriting,1684,core/base/src/TAttLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttLine.cxx,1,['inherit'],['inheriting']
Modifiability,"lot is drawn; /// using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example.; ///; /// ### Making a parallel coordinates plot; ///; /// In case of a 2-Dim or more expression with the option=para, one can generate; /// a parallel coordinates plot. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Making a candle sticks chart; ///; /// In case of a 2-Dim or more expression with the option=candle, one can generate; /// a candle sticks chart. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Normalizing the output histogram to 1; ///; /// When option contains ""norm"" the output histogram is normalized to 1.; ///; /// ### Saving the result of Draw to a TEventList, a TEntryList or a TEntryListArray; ///; /// TTree::Draw can be used to fill a TEventList object (list of entry numbers); /// instead of histogramming one variable.; /// If varexp0 has the form >>elist , a TEventList object named ""elist""; /// is created in the current directory. elist will contain the list; /// of entry numbers satisfying the current selection.; /// If option ""entrylist"" is used, a TEntryList object is created; /// If the selection contains arrays, vectors or any container class and option; /// ""entrylistarray"" is used, a TEntryListArray object is created; /// containing also the subentries satisfying the selection, i.e. the indices of; /// the branches which hold containers classes.; /// Example:; /// ~~~ {.cpp}; /// tree.Draw("">>yplus"",""y>0""); /// ~~~; /// will create a TEventList object named ""yplus"" in the current directory.; /// In an interactive session, one can type (after TTree::Draw); /// ~~~ {.cpp}; /// yplus.Print(""all""); /// ~~~; /// to print the list of entry numbers in the list.; /// ~~~ {.cpp}; /// tree.Dra",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:22055,variab,variable,22055,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variable']
Modifiability,"lt drawing option, the; /// data is filled into a TGraph named `Graph`. This TGraph can be retrieved by; /// calling; ///; /// ~~~ {.cpp}; /// auto graph = (TGraph*)gPad->GetPrimitive(""Graph"");; /// ~~~; ///; /// For the three and four dimensional cases, with the default drawing option, an unnamed; /// TPolyMarker3D is produced, and therefore cannot be retrieved.; ///; /// In all cases `htemp` can be used to access the axes. For instance in the 2D case:; ///; /// ~~~ {.cpp}; /// auto htemp = (TH2F*)gPad->GetPrimitive(""htemp"");; /// auto xaxis = htemp->GetXaxis();; /// ~~~; ///; /// When the option `""A""` is used (with TGraph painting option) to draw a 2D; /// distribution:; /// ~~~ {.cpp}; /// tree.Draw(""e1:e2"","""",""A*"");; /// ~~~; /// a scatter plot is produced (with stars in that case) but the axis creation is; /// delegated to TGraph and `htemp` is not created.; ///; /// ### Saving the result of Draw to a histogram; ///; /// If `varexp` contains `>>hnew` (following the variable(s) name(s)),; /// the new histogram called `hnew` is created and it is kept in the current; /// directory (and also the current pad). This works for all dimensions.; ///; /// Example:; /// ~~~ {.cpp}; /// tree.Draw(""sqrt(x)>>hsqrt"",""y>0""); /// ~~~; /// will draw `sqrt(x)` and save the histogram as ""hsqrt"" in the current; /// directory. To retrieve it do:; /// ~~~ {.cpp}; /// TH1F *hsqrt = (TH1F*)gDirectory->Get(""hsqrt"");; /// ~~~; /// The binning information is taken from the environment variables; /// ~~~ {.cpp}; /// Hist.Binning.?D.?; /// ~~~; /// In addition, the name of the histogram can be followed by up to 9; /// numbers between '(' and ')', where the numbers describe the; /// following:; ///; /// - 1 - bins in x-direction; /// - 2 - lower limit in x-direction; /// - 3 - upper limit in x-direction; /// - 4-6 same for y-direction; /// - 7-9 same for z-direction; ///; /// When a new binning is used the new value will become the default.; /// Values can be skipped.; ///; /// Example:; /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:10819,variab,variable,10819,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variable']
Modifiability,"m two kinds of analysis. First, we identify; /// every value defined by every instruction (ignoring those that only move; /// another value), then re-compute an SSA-form representation of the; /// MachineFunction, using value propagation to eliminate any un-necessary; /// PHI values. This gives us a map of every value computed in the function,; /// and its location within the register file / stack.; ///; /// Secondly, for each variable we perform the same analysis, where each debug; /// instruction is considered a def, and every instruction where the variable; /// is in lexical scope as a use. Value propagation is used again to eliminate; /// any un-necessary PHIs. This gives us a map of each variable to the value; /// it should have in a block.; ///; /// Once both are complete, we have two maps for each block:; /// * Variables to the values they should have,; /// * Values to the register / spill slot they are located in.; /// After which we can marry-up variable values with a location, and emit; /// DBG_VALUE instructions specifying those locations. Variable locations may; /// be dropped in this process due to the desired variable value not being; /// resident in any machine location, or because there is no PHI value in any; /// location that accurately represents the desired value. The building of; /// location lists for each block is left to DbgEntityHistoryCalculator.; ///; /// This pass is kept efficient because the size of the first SSA problem; /// is proportional to the working-set size of the function, which the compiler; /// tries to keep small. (It's also proportional to the number of blocks).; /// Additionally, we repeatedly perform the second SSA problem analysis with; /// only the variables and blocks in a single lexical scope, exploiting their; /// locality.; ///; /// ### Terminology; ///; /// A machine location is a register or spill slot, a value is something that's; /// defined by an instruction or PHI node, while a variable value is the value; /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:2479,variab,variable,2479,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"m.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass performs loop invariant code motion, attempting to remove as much; // code from the body of a loop as possible. It does this by either hoisting; // code into the preheader block, or by sinking code to the exit blocks if it is; // safe. This pass also promotes must-aliased memory locations in the loop to; // live in registers, thus hoisting and sinking ""invariant"" loads and stores.; //; // Hoisting operations out of loops is a canonicalization transform. It; // enables and simplifies subsequent optimizations in the middle-end.; // Rematerialization of hoisted instructions to reduce register pressure is the; // responsibility of the back-end, which has more accurate information about; // register pressure and also handles other optimizations than LICM that; // increase live-ranges.; //; // This pass uses alias analysis for two purposes:; //; // 1. Moving loop invariant loads and calls out of loops. If we can determine; // that a load or call inside of a loop never aliases anything stored to,; // we can hoist it or sink it like any other instruction.; // 2. Scalar Promotion of Memory - If there is a store instruction inside of; // the loop, we try to move the store to happen AFTER the loop instead of; // inside of the loop. This can only happen if a few conditions are true:; // A. The pointer stored through is loop invariant; // B. There are no stores or loads in the loop which _may_ alias the; // pointer. There are no calls in the loop which mod/ref the pointer.; // If these conditions are true, we can promote the loads and stores in the; // loop of the pointer to use a temporary alloca'd variable. We then use; // the SSAUpdater to construct the appropriate SSA form for the value.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp:2007,variab,variable,2007,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp,1,['variab'],['variable']
Modifiability,"max}\f$ to the number of terms in; \f$ D_p\f$ (TMultiDimFit::SetMaxTerms). However, since there's an infinite number of \f$ F_l\f$ to choose from, the; user is asked to give the maximum power. \f$ P_{max,i}\f$, of each variable; \f$ x_i\f$ to be considered in the minimization of \f$ S\f$ (TMultiDimFit::SetMaxPowers). One way of obtaining values for the maximum power in variable \f$ i\f$, is; to perform a regular fit to the dependent quantity \f$ D\f$, using a; polynomial only in \f$ x_i\f$. The maximum power is \f$ P_{max,i}\f$ is then the; power that does not significantly improve the one-dimensional; least-square fit over \f$ x_i\f$ to \f$ D\f$ [5]. There are still a huge amount of possible choices for \f$ F_l\f$; in fact; there are \f$\prod_{i=1}^{N} (P_{max,i} + 1)\f$ possible; choices. Obviously we need to limit this. To this end, the user is; asked to set a *power control limit*, \f$ Q\f$ (TMultiDimFit::SetPowerLimit), and a function; \f$ F_l\f$ is only accepted if; \f[; Q_l = \sum_{i=1}^{N} \frac{P_{li}}{P_{max,i}} < Q; \f]; where \f$ P_{li}\f$ is the leading power of variable \f$ x_i\f$ in function \f$ F_l\f$ (TMultiDimFit::MakeCandidates).; So the number of functions increase with \f$ Q\f$ (1, 2 is fine, 5 is way out). ## Gram-Schmidt Orthogonalisation; To further reduce the number of functions in the final expression,; only those functions that significantly reduce \f$ S\f$ is chosen. What; `significant' means, is chosen by the user, and will be; discussed below (see [2.3](TMultiFimFit.html#sec:selectiondetail)). The functions \f$ F_l\f$ are generally not orthogonal, which means one will; have to evaluate all possible \f$ F_l\f$'s over all data-points before; finding the most significant [1]. We can, however, do; better then that. By applying the *modified Gram-Schmidt; orthogonalisation* algorithm [5] [3] to the; functions \f$ F_l\f$, we can evaluate the contribution to the reduction of; \f$ S\f$ from each function in turn, and we may delay the actual inv",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:5297,variab,variable,5297,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variable']
Modifiability,"mber.; ///; /// These captured statements provide the link between C/C++ semantics and the; /// logical iteration counters used by the OpenMPIRBuilder which is; /// language-agnostic and therefore does not know e.g. how to advance a; /// random-access iterator. The OpenMPIRBuilder will use this information to; /// apply simd, workshare-loop, distribute, taskloop and loop directives to the; /// loop. For compatibility with the non-OpenMPIRBuilder codegen path, an; /// OMPCanonicalLoop can itself also be wrapped into the CapturedStmts of an; /// OMPLoopDirective and skipped when searching for the associated syntactical; /// loop.; ///; /// Example:; /// <code>; /// std::vector<std::string> Container{1,2,3};; /// for (std::string Str : Container); /// Body(Str);; /// </code>; /// which is syntactic sugar for approximately:; /// <code>; /// auto &&__range = Container;; /// auto __begin = std::begin(__range);; /// auto __end = std::end(__range);; /// for (; __begin != __end; ++__begin) {; /// std::String Str = *__begin;; /// Body(Str);; /// }; /// </code>; /// In this example, the loop user variable is `Str`, the loop iteration; /// variable is `__begin` of type `std::vector<std::string>::iterator` and the; /// logical iteration number type is `size_t` (unsigned version of; /// `std::vector<std::string>::iterator::difference_type` aka `ptrdiff_t`).; /// Therefore, the distance function will be; /// <code>; /// [&](size_t &Result) { Result = __end - __begin; }; /// </code>; /// and the loop variable function is; /// <code>; /// [&,__begin](std::vector<std::string>::iterator &Result, size_t Logical) {; /// Result = __begin + Logical;; /// }; /// </code>; /// The variable `__begin`, aka the loop iteration variable, is captured by; /// value because it is modified in the loop body, but both functions require; /// the initial value. The OpenMP specification explicitly leaves unspecified; /// when the loop expressions are evaluated such that a capture by reference is; /// suff",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:4464,variab,variable,4464,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,2,['variab'],['variable']
Modifiability,"mentation of LiveDebugValues, see; /// LiveDebugValues.cpp and VarLocBasedImpl.cpp for more information.; ///; /// This pass propagates variable locations between basic blocks, resolving; /// control flow conflicts between them. The problem is SSA construction, where; /// each debug instruction assigns the *value* that a variable has, and every; /// instruction where the variable is in scope uses that variable. The resulting; /// map of instruction-to-value is then translated into a register (or spill); /// location for each variable over each instruction.; ///; /// The primary difference from normal SSA construction is that we cannot; /// _create_ PHI values that contain variable values. CodeGen has already; /// completed, and we can't alter it just to make debug-info complete. Thus:; /// we can identify function positions where we would like a PHI value for a; /// variable, but must search the MachineFunction to see whether such a PHI is; /// available. If no such PHI exists, the variable location must be dropped.; ///; /// To achieve this, we perform two kinds of analysis. First, we identify; /// every value defined by every instruction (ignoring those that only move; /// another value), then re-compute an SSA-form representation of the; /// MachineFunction, using value propagation to eliminate any un-necessary; /// PHI values. This gives us a map of every value computed in the function,; /// and its location within the register file / stack.; ///; /// Secondly, for each variable we perform the same analysis, where each debug; /// instruction is considered a def, and every instruction where the variable; /// is in lexical scope as a use. Value propagation is used again to eliminate; /// any un-necessary PHIs. This gives us a map of each variable to the value; /// it should have in a block.; ///; /// Once both are complete, we have two maps for each block:; /// * Variables to the values they should have,; /// * Values to the register / spill slot they are located ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:1439,variab,variable,1439,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"mentation pages share a common set of javascript and CSS files. They; are generated automatically when running <a href=""#THtml:MakeAll"">MakeAll()</a>;; they can be generated on; demand by calling <a href=""#THtml:CreateAuxiliaryFiles"">CreateAuxiliaryFiles()</a>.</p>. <h3><a name=""charts"">VII. Class Charts</a></h3>; THtml can generate a number of graphical representations for a class, which; are displayed as a tabbed set of imaged on-top of the class description.; It can show the inheritance, inherited and hidden members, directly and; indirectly included files, and library dependencies. These graphs are generated using the <a href=""http://www.graphviz.org/"">Graphviz</a>; package. You can install it from <a href=""http://www.graphviz.org"">http://www.graphviz.org</a>.; You can either put it into your $PATH, or tell THtml where to find it by calling; <a href=""#THtml:SetDotDir"">SetDotDir()</a>. <h3><a name=""confvar"">VIII. Configuration variables</a></h3>. <p>Here is a list of all configuration variables that are known to THtml.; You can set them in your .rootrc file, see; <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>.</p>. <pre>; Root.Html.OutputDir (default: htmldoc); Root.Html.SourceDir (default: .:src/:include/); Root.Html.Author (default: // Author:) - start tag for authors; Root.Html.LastUpdate (default: // @(#)) - start tag for last update; Root.Html.Copyright (default: * Copyright) - start tag for copyright notice; Root.Html.Description (default: //____________________ ) - start tag for class descr; Root.Html.HomePage (default: ) - URL to the user defined home page; Root.Html.Header (default: ) - location of user defined header; Root.Html.Footer (default: ) - location of user defined footer; Root.Html.Root (default: ) - URL of Root's class documentation; Root.Html.SearchEngine (default: ) - link to the search engine; Root.Html.Search (default: ) - link to search by replacing ""%s"" with user input; Root.Html.ViewCVS (default: ) - URL of ViewCVS base; Roo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:20983,config,configuration,20983,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,2,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"ments<2>):; * - @c A<char> &rarr; @c A<char,float>; * - @c A<char,float> &rarr; @c A<char,int>; * - @c myVector<float> &rarr; @c myVector<A<char,int>,myAllocator<A<char,int>>>; * - @c myVector<A<char>> &rarr; @c myVector<float,myAllocator<float>>; *; * A brief description of the properties that can be assigned to data members; * with the @c ROOT::Meta::Selection MemberAttributes class:; * 1. @c kTransient : the data member is transient, not persistified by the; * ROOT I/O.; * 2. @c kAutoSelected : the type of the data member is selected without the; * need of specifying its class explicitely.; *; * For example:; * @code; * [...]; * class classTransientMember {; * private:; * int transientMember;; * };; * class classAutoselected {};; * class classTestAutoselect {; * private:; * classAutoselected autoselected;; * };; *; * namespace ROOT {; * namespace Meta {; * namespace Selection {; * class classTestAutoselect {; * MemberAttributes<kAutoSelected> autoselected;; * };; * class classTransientMember {; * MemberAttributes<kTransient> transientMember;; * };; * }; * }; * }; * @endcode; * would lead to the creation of selection rules for @c classTransientMember; * specifying that @c transientMember is transient, @c classTestAutoselect and; * @c classAutoselected.; *; * Another trait class present in the @c ROOT::Meta::Selection is; * @c SelectNoInstance. If a template in the selection namespace inherits from; * this class, none of its instantiations will be automatically selected but; * all of the properties specified otherwise, like transient members or; * number of template arguments to keep, will be transmitted to all of the; * instantiations selected by other means.; * For example; * @code; * [...]; * template< class T, class BASE >; * class MyDataVector : KeepFirstTemplateArguments< 1 >, SelectNoInstance {; * MemberAttributes< kTransient + kAutoSelected > m_isMostDerived;; * MemberAttributes< kNonSplittable + kAutoSelected > m_isNonSplit;; * };; * [...]; * @endcode; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/DictSelectionReader.h:6544,inherit,inherits,6544,core/dictgen/res/DictSelectionReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/DictSelectionReader.h,1,['inherit'],['inherits']
Modifiability,"merging -------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass merges globals with internal linkage into one. This way all the; // globals which were merged into a biggest one can be addressed using offsets; // from the same base pointer (no need for separate base pointer for each of the; // global). Such a transformation can significantly reduce the register pressure; // when many globals are involved.; //; // For example, consider the code which touches several global variables at; // once:; //; // static int foo[N], bar[N], baz[N];; //; // for (i = 0; i < N; ++i) {; // foo[i] = bar[i] * baz[i];; // }; //; // On ARM the addresses of 3 arrays should be kept in the registers, thus; // this code has quite large register pressure (loop body):; //; // ldr r1, [r5], #4; // ldr r2, [r6], #4; // mul r1, r2, r1; // str r1, [r0], #4; //; // Pass converts the code to something like:; //; // static struct {; // int foo[N];; // int bar[N];; // int baz[N];; // } merged;; //; // for (i = 0; i < N; ++i) {; // merged.foo[i] = merged.bar[i] * merged.baz[i];; // }; //; // and in ARM code this becomes:; //; // ldr r0, [r5, #40]; // ldr r1, [r5, #80]; // mul r0, r1, r0; // str r0, [r5], #4; //; // note that we saved 2 registers here almostly ""for free"".; //; // However, merging globals can have tradeoffs:; // - it confuses debuggers, tools, and users; // - it makes linker optimizations less useful (order files, LOHs, ...); // - it forces usage of indexed addressing (which isn't necessarily ""free""); // - it can increase register pressure when the uses are disparate enough.; //; // We use heuristics to discover the best global grouping we can (cf cl::opts).; //; // ===------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalMerge.cpp:805,variab,variables,805,interpreter/llvm-project/llvm/lib/CodeGen/GlobalMerge.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalMerge.cpp,1,['variab'],['variables']
Modifiability,"mes),; every volume becoming a branch in this graph. Any volume in the logical graph; can become the actual top volume at run time (see TGeoManager::SetTopVolume()).; All functionalities of the modeler will behave in this case as if only the; corresponding branch starting from this volume is the registered geometry. \image html geom_graf.jpg. A given volume can be positioned several times in the geometry. A volume; can be divided according default or user-defined patterns, creating automatically; the list of division nodes inside. The elementary volumes created during the; dividing process follow the same scheme as usual volumes, therefore it is possible; to position further geometrical structures inside or to divide them further more; (see TGeoVolume::Divide()). The primitive shapes supported by the package are basically the GEANT3; shapes (see class TGeoShape), arbitrary wedges with eight vertices on two parallel; planes. All basic primitives inherits from class TGeoBBox since the bounding box; of a solid is essential for the tracking algorithms. They also implement the; virtual methods defined in the virtual class TGeoShape (point and segment; classification). User-defined primitives can be directly plugged into the modeler; provided that they override these methods. Composite shapes will be soon supported; by the modeler. In order to build a TGeoCompositeShape, one will have to define; first the primitive components. The object that handle boolean; operations among components is called TGeoBoolCombinator and it has to be; constructed providing a string boolean expression between the components names. ## Example for building a simple geometry. Begin_Macro(source); ../../../tutorials/geom/rootgeom.C; End_Macro. ## TGeoManager - the manager class for the geometry package. TGeoManager class is embedding all the API needed for building and tracking; a geometry. It defines a global pointer (gGeoManager) in order to be fully; accessible from external code. The mechanism",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx:4355,inherit,inherits,4355,geom/geom/src/TGeoManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoManager.cxx,1,['inherit'],['inherits']
Modifiability,"mpl.cpp; ///; /// LiveDebugValues is an optimistic ""available expressions"" dataflow; /// algorithm. The set of expressions is the set of machine locations; /// (registers, spill slots, constants, and target indices) that a variable; /// fragment might be located, qualified by a DIExpression and indirect-ness; /// flag, while each variable is identified by a DebugVariable object. The; /// availability of an expression begins when a DBG_VALUE instruction specifies; /// the location of a DebugVariable, and continues until that location is; /// clobbered or re-specified by a different DBG_VALUE for the same; /// DebugVariable.; ///; /// The output of LiveDebugValues is additional DBG_VALUE instructions,; /// placed to extend variable locations as far they're available. This file; /// and the VarLocBasedLDV class is an implementation that explicitly tracks; /// locations, using the VarLoc class.; ///; /// The canonical ""available expressions"" problem doesn't have expression; /// clobbering, instead when a variable is re-assigned, any expressions using; /// that variable get invalidated. LiveDebugValues can map onto ""available; /// expressions"" by having every register represented by a variable, which is; /// used in an expression that becomes available at a DBG_VALUE instruction.; /// When the register is clobbered, its variable is effectively reassigned, and; /// expressions computed from it become unavailable. A similar construct is; /// needed when a DebugVariable has its location re-specified, to invalidate; /// all other locations for that DebugVariable.; ///; /// Using the dataflow analysis to compute the available expressions, we create; /// a DBG_VALUE at the beginning of each block where the expression is; /// live-in. This propagates variable locations into every basic block where; /// the location can be determined, rather than only having DBG_VALUEs in blocks; /// where locations are specified due to an assignment or some optimization.; /// Movements of values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:1419,variab,variable,1419,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,2,['variab'],['variable']
Modifiability,"mplete. Thus:; /// we can identify function positions where we would like a PHI value for a; /// variable, but must search the MachineFunction to see whether such a PHI is; /// available. If no such PHI exists, the variable location must be dropped.; ///; /// To achieve this, we perform two kinds of analysis. First, we identify; /// every value defined by every instruction (ignoring those that only move; /// another value), then re-compute an SSA-form representation of the; /// MachineFunction, using value propagation to eliminate any un-necessary; /// PHI values. This gives us a map of every value computed in the function,; /// and its location within the register file / stack.; ///; /// Secondly, for each variable we perform the same analysis, where each debug; /// instruction is considered a def, and every instruction where the variable; /// is in lexical scope as a use. Value propagation is used again to eliminate; /// any un-necessary PHIs. This gives us a map of each variable to the value; /// it should have in a block.; ///; /// Once both are complete, we have two maps for each block:; /// * Variables to the values they should have,; /// * Values to the register / spill slot they are located in.; /// After which we can marry-up variable values with a location, and emit; /// DBG_VALUE instructions specifying those locations. Variable locations may; /// be dropped in this process due to the desired variable value not being; /// resident in any machine location, or because there is no PHI value in any; /// location that accurately represents the desired value. The building of; /// location lists for each block is left to DbgEntityHistoryCalculator.; ///; /// This pass is kept efficient because the size of the first SSA problem; /// is proportional to the working-set size of the function, which the compiler; /// tries to keep small. (It's also proportional to the number of blocks).; /// Additionally, we repeatedly perform the second SSA problem analysis with; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:2212,variab,variable,2212,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"mpoundStmt; /// |- Leading in-between code (if any); /// |- OMPCanonicalLoop; /// | `- ForStmt/CXXForRangeStmt; /// | `- ...; /// `- Trailing in-between code (if any); ///; /// The leading/trailing in-between code must not itself be a OMPCanonicalLoop; /// to avoid confusion which loop belongs to the nesting.; ///; /// There are three different kinds of iteration variables for different; /// purposes:; /// * Loop user variable: The user-accessible variable with different value for; /// each iteration.; /// * Loop iteration variable: The variable used to identify a loop iteration;; /// for range-based for-statement, this is the hidden iterator '__begin'. For; /// other loops, it is identical to the loop user variable. Must be a; /// random-access iterator, pointer or integer type.; /// * Logical iteration counter: Normalized loop counter starting at 0 and; /// incrementing by one at each iteration. Allows abstracting over the type; /// of the loop iteration variable and is always an unsigned integer type; /// appropriate to represent the range of the loop iteration variable. Its; /// value corresponds to the logical iteration number in the OpenMP; /// specification.; ///; /// This AST node provides two captured statements:; /// * The distance function which computes the number of iterations.; /// * The loop user variable function that computes the loop user variable when; /// given a logical iteration number.; ///; /// These captured statements provide the link between C/C++ semantics and the; /// logical iteration counters used by the OpenMPIRBuilder which is; /// language-agnostic and therefore does not know e.g. how to advance a; /// random-access iterator. The OpenMPIRBuilder will use this information to; /// apply simd, workshare-loop, distribute, taskloop and loop directives to the; /// loop. For compatibility with the non-OpenMPIRBuilder codegen path, an; /// OMPCanonicalLoop can itself also be wrapped into the CapturedStmts of an; /// OMPLoopDirective and ski",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:2906,variab,variable,2906,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,2,['variab'],['variable']
Modifiability,"n 'NOPROXY' if you want to bypass; /// the HTTP proxy when retrieving this file's contents. As for any TWebFile-derived; /// object, the URL of the web proxy can be specified by setting an environmental; /// variable 'http_proxy'. If this variable is set, we ask that proxy to route our; /// requests HTTP(S) requests to the file server.; ///; /// In addition, you can also use the 'options' argument to provide the access key; /// and secret key to be used for authentication purposes for this file by using a; /// string of the form ""AUTH=myAccessKey:mySecretkey"". This may be useful to; /// open several files hosted by different providers in the same program/macro,; /// where the environemntal variables solution is not convenient (see below).; ///; /// To use AWS temporary security credentials you need to specify the session; /// token. This can be added to the options argument with a string of the form; /// TOKEN=mySessionToken. The temporary access and secret keys must also be; /// available, either via the AUTH option or by environmental variable.; ///; /// If you need to specify more than one option separate them by ' '; /// (blank), for instance:; /// ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+""; ///; /// Examples:; /// ```; /// TFile* f1 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; /// ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+"");; /// TFile* f2 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; /// ""AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+"");; /// TFile* f3 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; /// ""TOKEN=AQoDYXdzEM///////////wEa8AHEYmCinjD+TsGEjtgKSMAT6wnY"");; /// ```; ///; /// If there is no authentication information in the 'options' argument; /// (i.e. not AUTH=""...."") the values of the environmental variables; /// S3_ACCESS_KEY and S3_SECRET_KEY (if set) are expected to contain; /// the access key id and the secret ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:2547,variab,variable,2547,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,1,['variab'],['variable']
Modifiability,"n be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example 1 - script Transform2.c:; ///; /// \image html spectrum2transform_transform_image002.jpg Fig. 1 Original two-dimensional noisy spectrum; ///; /// \image html spectrum2transform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform. Energy of the transformed data is concentrated around the beginning of the coordinate system; ///; /// #### Script:; ///; /// Example to illustrate Transform function (class TSpectrumTransform2).; /// To execute this example, do; ///; /// `root > .x Transform2.C`; ///; /// ~~~ {.cpp}; /// void Transform2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** source = new Double_t *[nbinsx];; /// Double_t ** dest = new Double_t *[nbinsx];; /// for (i=0;i<nbinsx;i++); /// source[i]=newDouble_t[nbinsy",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:2057,adapt,adaptive,2057,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,1,['adapt'],['adaptive']
Modifiability,"n histogram. By default the fit is executed through the MINUIT; /// commands MIGRAD, HESSE in succession; ///; /// The following named arguments are supported; ///; /// <table>; /// <tr><th> <th> Options to control construction of chi2; /// <tr><td> `Extended(bool flag)` <td> **Only applicable when fitting a RooAbsPdf**. Scale the normalized pdf by the number of events predicted by the model instead of scaling by the total data weight.; /// This imposes a constraint on the predicted number of events analogous to the extended term in a likelihood fit.; /// - If you don't pass this command, an extended fit will be done by default if the pdf makes a prediction on the number of events; /// (in RooFit jargon, ""if the pdf can be extended"").; /// - Passing `Extended(true)` when the the pdf makes no prediction on the expected number of events will result in error messages,; /// and the chi2 will fall back to the total data weight to scale the normalized pdf.; /// - There are cases where the fit **must** be done in extended mode. This happens for example when you have a RooAddPdf; /// where the coefficients represent component yields. If the fit is not extended, these coefficients will not be; /// well-defined, as the RooAddPdf always normalizes itself. If you pass `Extended(false)` in such a case, an error will be; /// printed and you'll most likely get garbage results.; /// <tr><td> `Range(const char* name)` <td> Fit only data inside range with given name; /// <tr><td> `Range(double lo, double hi)` <td> Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; /// Multiple comma separated range names can be specified.; /// <tr><td> `NumCPU(int num)` <td> Parallelize NLL calculation on num CPUs; /// <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization (on by default); /// <tr><td> `IntegrateBins()` <td> Integrate PDF within each bin. This sets the desired precision.; ///; /// <tr><th> <th> Options to control flow of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1144,extend,extended,1144,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['extend'],['extended']
Modifiability,"n next to each other as bar charts.|; | ""PADS"" | The current pad/canvas is subdivided into a number of pads equal to the number of histograms in the stack and each histogram is paint into a separate pad.|; | ""PFC"" | Palette Fill Color: stack's fill color is taken in the current palette. |; | ""PLC"" | Palette Line Color: stack's line color is taken in the current palette. |; | ""PMC"" | Palette Marker Color: stack's marker color is taken in the current palette. |. \anchor HP02; ### Setting the Style. Histograms use the current style (`gStyle`). When one changes the current; style and would like to propagate the changes to the histogram,; `TH1::UseCurrentStyle` should be called. Call `UseCurrentStyle` on; each histogram is needed. To force all the histogram to use the current style use:. gROOT->ForceStyle();. All the histograms read after this call will use the current style. \anchor HP03; ### Setting line, fill, marker, and text attributes. The histogram classes inherit from the attribute classes:; `TAttLine`, `TAttFill` and `TAttMarker`.; See the description of these classes for the list of options. \anchor HP04; ### Setting Tick marks on the histogram axis. The `TPad::SetTicks` method specifies the type of tick marks on the axis.; If ` tx = gPad->GetTickx()` and `ty = gPad->GetTicky()` then:. tx = 1; tick marks on top side are drawn (inside); tx = 2; tick marks and labels on top side are drawn; ty = 1; tick marks on right side are drawn (inside); ty = 2; tick marks and labels on right side are drawn. By default only the left Y axis and X bottom axis are drawn; (`tx = ty = 0`). `TPad::SetTicks(tx,ty)` allows to set these options.; See also The `TAxis` functions to set specific axis attributes. In case multiple color filled histograms are drawn on the same pad, the fill; area may hide the axis tick marks. One can force a redraw of the axis over all; the histograms by calling:. gPad->RedrawAxis();. \anchor HP05; ### Giving titles to the X, Y and Z axis. h->GetXaxis()->Se",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:16508,inherit,inherit,16508,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['inherit'],['inherit']
Modifiability,"n when drawing a 2-D; histogram when the option ""Z"" is specified. A `TPaletteAxis` object is added to the histogram list of functions and; can be retrieved doing:. TPaletteAxis *palette = (TPaletteAxis*)h->GetListOfFunctions()->FindObject(""palette"");. then the pointer `palette` can be used to change the palette attributes. Because the palette is created at painting time only, one must issue a:. gPad->Update();. before retrieving the palette pointer in order to create the palette. The following; macro gives an example. Begin_Macro(source); {; auto h2 = new TH2F(""h2"",""Example of a resized palette "",40,-4,4,40,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; gStyle->SetPalette(1);; h2->Draw(""COLZ"");; gPad->Update();; auto palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; palette->SetY2NDC(0.7);; }; End_Macro. `TPaletteAxis` inherits from `TBox` and `TPave`. The methods; allowing to specify the palette position are inherited from these two classes. The palette can be interactively moved and resized. The context menu; can be used to set the axis attributes. It is possible to select a range on the axis to set the min/max in z. As default labels and ticks are drawn by `TGAxis` at equidistant (lin or log); points as controlled by SetNdivisions.; If option ""CJUST"" is given labels and ticks are justified at the; color boundaries defined by the contour levels.; In this case no optimization can be done. It is responsibility of the; user to adjust minimum, maximum of the histogram and/or the contour levels; to get a reasonable look of the plot.; Only overlap of the labels is avoided if too many contour levels are used. This option is especially useful with user defined contours.; An example is shown here:. Begin_Macro(source); {; gStyle->SetOptStat(0);; auto c = new TCanvas(""c"",""exa_CJUST"",300,10,400,400);; auto hpxpy = new TH2F(""hpxpy"",""py vs px"",40,-4,4,40,-4,4);; // Fill histograms randoml",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx:1316,inherit,inherited,1316,hist/histpainter/src/TPaletteAxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx,1,['inherit'],['inherited']
Modifiability,"n). Before the Enhance; /// function is called the class must be created by constructor and the type of the; /// transform as well as some other parameters must be set using a set of setter; /// functions. The Enhance function multiplies transformed coefficients in the given; /// region (fXmin, fXmax, fYmin, fYmax) by the given fEnhancCoeff and transforms it; /// back. Enhanced data are written into dest spectrum.; ///; /// ### Example - script Enhance2.c:; ///; /// \image html spectrum2transform_enhance_image001.jpg Fig. 1 Original two-dimensional noisy spectrum; /// \image html spectrum2transform_enhance_image002.jpg Fig. 2 Enhanced spectrum of the data from Fig. 1 using Cosine transform (channels in region (0-63)x(0-63) were multiplied by 5); ///; /// #### Script:; ///; /// Example to illustrate enhancement (class TSpectrumTransform2). To execute this example, do; ///; /// `root > .x Enhance2.C`; ///; /// ~~~ {.cpp}; /// void Enhance2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** source = new Double_t *[nbinsx];; /// Double_t ** dest = new Double_t *[nbinsx];; /// for (i=0;i<nbinsx;i++); /// source[i]= new Double_t[nbinsy];; /// for (i=0;i<nbinsx;i++); /// dest[i]= new Double_t[nbinsy];; /// TH2F *trans = new TH2F(""trans"",""Background estimation"",nbinsx,xmin,xmax,nbinsy,ymin,ymax);; /// TFile *f = new TFile(""TSpectrum2.root"");; /// trans=(TH2F*)f->Get(""back3;1"");; /// TCanvas *Tr = new TCanvas(""Transform"",""Illustration of transform function"",10,10,1000,700);; /// for (i = 0; i < nbinsx; i++){; /// for (j = 0; j < nbinsy; j++){; /// source[i][j] = trans->GetBinContent(i + 1,j + 1);; /// }; /// }; /// TSpectrumTransform2 *t = new TSpectrumTransform2(256,256);; /// t->SetTransformType(t->kTransformCos,0);; /// t->SetRegion(0,63,0,63);; /// t->SetEnhanceCoeff(5);; /// t->Enhance(source,dest);; /// trans->Draw(""SURF"");; /// }; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:2601,Enhance,Enhance,2601,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,1,['Enhance'],['Enhance']
Modifiability,"nager; \ingroup Base. This class implements a plugin library manager. It keeps track of a list of plugin handlers. A plugin handler knows which plugin; library to load to get a specific class that is used to extend the; functionality of a specific base class and how to create an object; of this class. For example, to extend the base class TFile to be; able to read SQLite files one needs to load the plugin library; libRSQLite.so which defines the TRSQLiteServer class. This loading; should be triggered when a given URI contains a regular expression; defined by the handler. Plugin handlers can be defined via macros in a list of plugin; directories. With $ROOTSYS/etc/plugins the default top plugin; directory specified in $ROOTSYS/etc/system.rootrc. Additional; directories can be specified by adding them to the end of the list.; Macros for identical plugin handlers in later directories will; override previous ones (the inverse of normal search path behavior).; The macros must have names like `<BaseClass>/PX0_<PluginClass>.C`,; e.g. TSQLServer/P20_TMySQLServer.C, to allow easy sorting and grouping.; If the BaseClass is in a namespace the directory must have the name; NameSpace@@BaseClass as `:` is a reserved pathname character on some; operating systems. Macros not beginning with 'P' and ending with "".C""; are ignored. These macros typically look like:; ~~~ {.cpp}; void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*)"");; }; ~~~; Plugin handlers can also be defined via resources in the .rootrc; file. Although now deprecated this method still works for backward; compatibility, e.g.:; ~~~ {.cpp}; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""<constructor>""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""<constructor>""; Plugin.TVirtualFitter: * TFitter Minuit ""TFitter(Int_t)""; ~~~; Where the + in front of Plugin.TSQLServer says that it extends the; existing definition of TSQLServer, useful when the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:1459,Plugin,PluginClass,1459,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['Plugin'],['PluginClass']
Modifiability,"nal Constant Propagation (IPSCCP) pass.; // The transformation runs iteratively a number of times which is controlled; // by the option `funcspec-max-iters`. Running it multiple times is needed; // for specializing recursive functions, but also exposes new opportunities; // arising from specializations which return constant values or contain calls; // which can be specialized.; //; // Function Specialization supports propagating constant parameters like; // function pointers, literal constants and addresses of global variables.; // By propagating function pointers, indirect calls become direct calls. This; // exposes inlining opportunities which we would have otherwise missed. That's; // why function specialization is run before the inliner in the optimization; // pipeline; that is by design.; //; // Cost Model:; // -----------; // The cost model facilitates a utility for estimating the specialization bonus; // from propagating a constant argument. This is the InstCostVisitor, a class; // that inherits from the InstVisitor. The bonus itself is expressed as codesize; // and latency savings. Codesize savings means the amount of code that becomes; // dead in the specialization from propagating the constant, whereas latency; // savings represents the cycles we are saving from replacing instructions with; // constant values. The InstCostVisitor overrides a set of `visit*` methods to; // be able to handle different types of instructions. These attempt to constant-; // fold the instruction in which case a constant is returned and propagated; // further.; //; // Function pointers are not handled by the InstCostVisitor. They are treated; // separately as they could expose inlining opportunities via indirect call; // promotion. The inlining bonus contributes to the total specialization score.; //; // For a specialization to be profitable its bonus needs to exceed a minimum; // threshold. There are three options for controlling the threshold which are; // expressed as percentag",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionSpecialization.h:1613,inherit,inherits,1613,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionSpecialization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionSpecialization.h,1,['inherit'],['inherits']
Modifiability,"nc.; *; * Permission to use, copy, modify, and distribute this software and its; * documentation for any purpose and without fee is hereby granted, provided; * that the above copyright notice appear in all copies and that both that; * copyright notice and this permission notice appear in supporting; * documentation, and that the name of Network Computing Devices may not be; * used in advertising or publicity pertaining to distribution of the software; * without specific, written prior permission. Network Computing Devices makes; * no representations about the suitability of this software for any purpose.; * It is provided ``as is'' without express or implied warranty.; *; * NETWORK COMPUTING DEVICES DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS; * SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS,; * IN NO EVENT SHALL NETWORK COMPUTING DEVICES BE LIABLE FOR ANY SPECIAL,; * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM; * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE; * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR; * PERFORMANCE OF THIS SOFTWARE.; *; * Author: Jim Fulton; * Network Computing Devices, Inc.; *; * Simple if statement processor; *; * This module can be used to evaluate string representations of C language; * if constructs. It accepts the following grammar:; *; * EXPRESSION := VALUE; * | VALUE BINOP EXPRESSION; * | VALUE '?' EXPRESSION ':' EXPRESSION; *; * VALUE := '(' EXPRESSION ')'; * | '!' VALUE; * | '-' VALUE; * | '~' VALUE; * | 'defined' '(' variable ')'; * | variable; * | number; *; * BINOP := '*' | '/' | '%'; * | '+' | '-'; * | '<<' | '>>'; * | '<' | '>' | '<=' | '>='; * | '==' | '!='; * | '&' | '^' | '|'; * | '&&' | '||'; *; * The normal C order of precedence is supported.; *; *; * External Entry Points:; *; * ParseIfExpression parse a string for #if; */; /* $XFree86: xc/config/makedepend/ifparser.h,v 3.2 1996/12/30 13:57:56 dawes Exp $ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/ifparser.h:1706,variab,variable,1706,misc/rmkdepend/ifparser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/ifparser.h,3,"['config', 'variab']","['config', 'variable']"
Modifiability,"ncertainty on the yield \f$N_{\rm n}\f$, as provided by the fit:; \f$\sigma[N_{\rm n}]\equiv\sqrt{\hbox{ V}_{{\rm n}{\rm n}}}\f$ .; Because of that and since the determination of the yields is optimal; when obtained using a Likelihood fit, one can conclude that the \f$\hbox{$_s$}{\cal P}lot\f$; technique is itself an optimal method to reconstruct distributions of control variables. ### Different steps followed by TSPlot. 1. A maximum Likelihood fit is performed to obtain the yields \f$N_i\f$; of the various species.The fit relies on discriminating variables \f$y\f$; uncorrelated with a control variable \f$x\f$:; the later is therefore totally absent from the fit. 2. The weights \f${_s{\cal P}}\f$ are calculated using Eq.; (2); where the covariance matrix is taken from Minuit. 3. Histograms of \f$x\f$ are filled by weighting the events with \f${_s{\cal P}}\f$ . 4. Error bars per bin are given by Eq. (6). The \f$\hbox {$_s$}{\cal P}lots\f$ reproduce the true distributions of the species; in the control variable \f$x\f$, within the above defined statistical uncertainties. ### Illustrations. To illustrate the technique, one considers an example derived from the analysis where; \f$\hbox {$_s$}{\cal P}lots\f$; have been first used (charmless B decays). One is dealing with a data; sample in which two species are present: the first is termed signal and; the second background. A maximum Likelihood fit is performed to obtain; the two yields \f$N_1\f$ and \f$N_2\f$ . The fit relies on two discriminating; variables collectively denoted \f$y\f$ which are chosen within three possible; variables denoted \f${m_{\rm ES}}\f$ , \f$\Delta E\f$ and \f${\cal F}\f$.; The variable which is not incorporated in \f$y\f$ is used as the control variable; \f$x\f$ . The six distributions of the three variables are assumed to be the ones; depicted in Fig. 1. \image html splot_pdfmesNIM.png Figure 1 width=800. Distributions of the three discriminating variables available to perform the Likelihood fi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:6238,variab,variable,6238,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variable']
Modifiability,"nctional expression by specifying; the powers of each variable in \f$ L\f$ specified functions \f$ F_1, \ldots,F_L\f$ (TMultiDimFit::SetPowers).; In that case, only the coefficients \f$ c_l\f$ is calculated by the class. ## Limiting the Number of Terms; As always when dealing with fits, there's a real chance of *over fitting*. As is well-known, it's; always possible to fit an \f$ N-1\f$ polynomial in \f$ x\f$ to \f$ N\f$ points \f$ (x,y)\f$ with; \f$\chi^2 = 0\f$, but the polynomial is not likely to fit new data at all [1].; Therefore, the user is asked to provide an upper limit, \f$ L_{max}\f$ to the number of terms in; \f$ D_p\f$ (TMultiDimFit::SetMaxTerms). However, since there's an infinite number of \f$ F_l\f$ to choose from, the; user is asked to give the maximum power. \f$ P_{max,i}\f$, of each variable; \f$ x_i\f$ to be considered in the minimization of \f$ S\f$ (TMultiDimFit::SetMaxPowers). One way of obtaining values for the maximum power in variable \f$ i\f$, is; to perform a regular fit to the dependent quantity \f$ D\f$, using a; polynomial only in \f$ x_i\f$. The maximum power is \f$ P_{max,i}\f$ is then the; power that does not significantly improve the one-dimensional; least-square fit over \f$ x_i\f$ to \f$ D\f$ [5]. There are still a huge amount of possible choices for \f$ F_l\f$; in fact; there are \f$\prod_{i=1}^{N} (P_{max,i} + 1)\f$ possible; choices. Obviously we need to limit this. To this end, the user is; asked to set a *power control limit*, \f$ Q\f$ (TMultiDimFit::SetPowerLimit), and a function; \f$ F_l\f$ is only accepted if; \f[; Q_l = \sum_{i=1}^{N} \frac{P_{li}}{P_{max,i}} < Q; \f]; where \f$ P_{li}\f$ is the leading power of variable \f$ x_i\f$ in function \f$ F_l\f$ (TMultiDimFit::MakeCandidates).; So the number of functions increase with \f$ Q\f$ (1, 2 is fine, 5 is way out). ## Gram-Schmidt Orthogonalisation; To further reduce the number of functions in the final expression,; only those functions that significantly reduce \f$ S\f$ ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:4577,variab,variable,4577,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variable']
Modifiability,"nd Y can always be visualized by a two-dimensional; histogram or scatter-plot; If Y is an unknown (but single-valued); approximate function of X, this function is displayed by a profile; histogram with much better precision than by a scatter-plot. <sup>; \anchor intmax (*) INT_MAX = 2147483647 is the [maximum value for a variable of type int.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; \anchor llongmax (**) LLONG_MAX = 9223372036854775807 is the [maximum value for a variable of type long64.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; \anchor floatmax (***) 2^24 = 16777216 is the [maximum integer that can be properly represented by a float32 with 23-bit mantissa.](https://stackoverflow.com/a/3793950/7471760)<br>; \anchor doublemax (****) 2^53 = 9007199254740992 is the [maximum integer that can be properly represented by a double64 with 52-bit mantissa.](https://stackoverflow.com/a/3793950/7471760); </sup>. The inheritance hierarchy looks as follows:. \image html classTH1__inherit__graph_org.svg width=100%. \anchor creating-histograms; ## Creating histograms. Histograms are created by invoking one of the constructors, e.g.; ~~~ {.cpp}; TH1F *h1 = new TH1F(""h1"", ""h1 title"", 100, 0, 4.4);; TH2F *h2 = new TH2F(""h2"", ""h2 title"", 40, 0, 4, 30, -3, 3);; ~~~; Histograms may also be created by:. - calling the Clone() function, see below; - making a projection from a 2-D or 3-D histogram, see below; - reading a histogram from a file. When a histogram is created, a reference to it is automatically added; to the list of in-memory objects for the current file or directory.; Then the pointer to this histogram in the current directory can be found; by its name, doing:; ~~~ {.cpp}; TH1F *h1 = (TH1F*)gDirectory->FindObject(name);; ~~~. This default behaviour can be changed by:; ~~~ {.cpp}; h->SetDirectory(nullptr); // for the current histogram h; TH1::AddDirectory(kFALSE); // sets a global switch disabling the referencing; ~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:5255,inherit,inheritance,5255,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['inherit'],['inheritance']
Modifiability,"ndianness> &HBuilder,; /// const SimpleStruct &Value) {; /// HBuilder.add(Value.c);; /// HBuilder.add(Value.i);; /// }; /// ```; ///; /// To avoid endianness issues, specializations of `addHash` should; /// generally rely on exising `add`, `addRange`, and `addRangeElements`; /// functions. If directly using `update`, an implementation must correctly; /// handle endianness.; ///; /// ```; /// struct __attribute__ ((packed)) StructWithFastHash {; /// int I;; /// char C;; ///; /// // If possible, we want to hash both `I` and `C` in a single; /// // `update` call for performance concerns.; /// template <typename HasherT, llvm::endianness Endianness>; /// friend void addHash(HashBuilder<HasherT, Endianness> &HBuilder,; /// const StructWithFastHash &Value) {; /// if (Endianness == llvm::endianness::native) {; /// HBuilder.update(ArrayRef(; /// reinterpret_cast<const uint8_t *>(&Value), sizeof(Value)));; /// } else {; /// // Rely on existing `add` methods to handle endianness.; /// HBuilder.add(Value.I);; /// HBuilder.add(Value.C);; /// }; /// }; /// };; /// ```; ///; /// To avoid collisions, specialization of `addHash` for variable-size; /// types must take the size into account.; ///; /// For example:; /// ```; /// struct CustomContainer {; /// private:; /// size_t Size;; /// int Elements[100];; ///; /// public:; /// CustomContainer(size_t Size) : Size(Size) {; /// for (size_t I = 0; I != Size; ++I); /// Elements[I] = I;; /// }; /// template <typename HasherT, llvm::endianness Endianness>; /// friend void addHash(HashBuilder<HasherT, Endianness> &HBuilder,; /// const CustomContainer &Value) {; /// if (Endianness == llvm::endianness::native) {; /// HBuilder.update(ArrayRef(; /// reinterpret_cast<const uint8_t *>(&Value.Size),; /// sizeof(Value.Size) + Value.Size * sizeof(Value.Elements[0])));; /// } else {; /// // `addRange` will take care of encoding the size.; /// HBuilder.addRange(&Value.Elements[0], &Value.Elements[0] +; /// Value.Size);; /// }; /// }; /// };; /// ```",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h:1699,variab,variable-size,1699,interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,1,['variab'],['variable-size']
Modifiability,"ndidates is updated to; // hold Z fr A, the RegisterMap is updated to hold Z for %3, and the InstrMap; // is updated to have Z mapped to %3. This is again because Z describes the; // debug variable A, Y is not updated to have $noreg as first operand because; // its first operand is an immediate, not a register.; // DbgValueSinkCandidates = {A -> {Z}}, RegisterMap = {2 -> {}, 3 -> {Z}},; // InstrMap = {X -> 2, Z -> 3}; // DBG_VALUE $noreg, A, .... # X; // DBG_VALUE 0, A, ... # Y; // DBG_VALUE %3, A, ..., # Z; // -> %2 = ld ...; // %3 = ld ...; // %4 = ld ...; // Nothing happens here since the RegisterMap for %2 contains no value.; // DbgValueSinkCandidates = {A -> {Z}}, RegisterMap = {2 -> {}, 3 -> {Z}},; // InstrMap = {X -> 2, Z -> 3}; // DBG_VALUE $noreg, A, .... # X; // DBG_VALUE 0, A, ... # Y; // DBG_VALUE %3, A, ..., # Z; // %2 = ld ...; // -> %3 = ld ...; // %4 = ld ...; // Since the RegisterMap contains Z as a value for %3, the MachineInstr; // pointer Z is copied to come after the load for %3 and the old Z's first; // operand is changed to $noreg the Basic Block iterator is moved to after the; // DBG_VALUE Z's new position.; // DbgValueSinkCandidates = {A -> {Z}}, RegisterMap = {2 -> {}, 3 -> {Z}},; // InstrMap = {X -> 2, Z -> 3}; // DBG_VALUE $noreg, A, .... # X; // DBG_VALUE 0, A, ... # Y; // DBG_VALUE $noreg, A, ..., # Old Z; // %2 = ld ...; // %3 = ld ...; // DBG_VALUE %3, A, ..., # Z; // -> %4 = ld ...; // Nothing happens for %4 and the algorithm exits having processed the entire; // Basic Block.; // DbgValueSinkCandidates = {A -> {Z}}, RegisterMap = {2 -> {}, 3 -> {Z}},; // InstrMap = {X -> 2, Z -> 3}; // DBG_VALUE $noreg, A, .... # X; // DBG_VALUE 0, A, ... # Y; // DBG_VALUE $noreg, A, ..., # Old Z; // %2 = ld ...; // %3 = ld ...; // DBG_VALUE %3, A, ..., # Z; // %4 = ld ...; // This map is used to track the relationship between; // a Debug Variable and the DBG_VALUE MachineInstr pointer that describes the; // debug information for that Debug Variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp:5227,Variab,Variable,5227,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,2,['Variab'],['Variable']
Modifiability,"ndow and to include; /// the estimation of Compton edges. On successful completion it returns 0. On; /// error it returns pointer to the string describing error.; ///; /// #### Parameters:; ///; /// - spectrum: pointer to the vector of source spectrum; /// - ssize: length of the spectrum vector; /// - numberIterations: maximal width of clipping window,; /// - direction: direction of change of clipping window.; /// Possible values: kBackIncreasingWindow, kBackDecreasingWindow; /// - filterOrder: order of clipping filter.; /// Possible values: kBackOrder2, kBackOrder4, kBackOrder6, kBackOrder8; /// - smoothing: logical variable whether the smoothing operation in the; /// estimation of background will be included.; /// Possible values: kFALSE, kTRUE; /// - smoothWindow: width of smoothing window.; /// Possible values: kBackSmoothing3, kBackSmoothing5, kBackSmoothing7,; /// kBackSmoothing9, kBackSmoothing11, kBackSmoothing13, kBackSmoothing15.; /// - compton: logical variable whether the estimation of Compton edge will be; /// included. Possible values: kFALSE, kTRUE.; ///; /// #### References:; ///; /// 1. C. G Ryan et al.: SNIP, a statistics-sensitive background treatment for the; /// quantitative analysis of PIXE spectra in geoscience applications. NIM, B34; /// (1988), 396-402.; ///; /// 2. M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo:; /// Background elimination methods for multidimensional gamma-ray spectra. NIM,; /// A401 (1997) 113-132.; ///; /// 3. D. D. Burgess, R. J. Tervo: Background estimation for gamma-ray; /// spectroscopy. NIM 214 (1983), 431-434.; ///; /// ### Example 1 script Background_incr.C:; ///; /// Example of the estimation of background for number of iterations=6.; /// Original spectrum is shown in black color, estimated background in red color.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_incr.C; /// End_Macro; ///; /// ### Example 2 script Background_decr.C:; ///; /// In Example 1. one can notice that a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1866,variab,variable,1866,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['variab'],['variable']
Modifiability,"ne that was clicked. A button group is by default non-exclusive.; All radio buttons that are inserted, will be mutually exclusive even; if the button group is non-exclusive. There are two ways of using a button group:. The button group is a parent widget of a number of buttons,; i.e. the button group is the parent argument in the button; constructor. The buttons are assigned identifiers 1, 2, 3 etc.; in the order they are created or you can specify button id in; the button constructor. A TGButtonGroup can display a frame and; a title because it inherits from TGGroupFrame. Example:. ```; // vertical frame without border and title; TGVButtonGroup *bg = new TGVButtonGroup(main_frame);. // create text button with id=1; TGTextButton *button1 = new TGTextButton(bg,""some text"");. // create another text button with id=2; TGTextButton *button2 = new TGTextButton(bg,""another text"");. // map all buttons; bg->Show();; ```. NOTE: there is no need to call AddFrame() since the buttons are; automatically added with a default layout hint to their parent,; i.e. the buttongroup. To override the default layout hints use the; SetLayoutHints() method. ButtonGroup Signals:. - Pressed(Int_t id) --> is emitted when a button in the group is; pressed down. The id argument is the; button's identifier.; - Released(Int_t id) --> is emitted when a button in the group is; released. The id argument is the button's; identifier.; - Clicked(Int_t id) --> is emitted when a button in the group is; clicked. The id argument is the button's; identifier. \class TGHButtonGroup; \ingroup guiwidgets. Organizes TGButton widgets in a group with one horizontal row. TGHButtonGroup is a; convenience class that offers a thin layer on top of TGButtonGroup. It inherits from; TGButtonGroup. \class TGVButtonGroup; \ingroup guiwidgets. Organizes TGButton widgets in a group with one vertical column. TGVButtonGroup is a; convenience class that offers a thin layer on top of TGButtonGroup. It inherits from; TGButtonGroup. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButtonGroup.cxx:2721,inherit,inherits,2721,gui/gui/src/TGButtonGroup.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButtonGroup.cxx,2,['inherit'],['inherits']
Modifiability,"nearized thus using; /// `Alt$` with multi-dimensional arrays of different dimensions in unlikely; /// to yield the expected results. To visualize a bit more what elements; /// would be matched by TTree::Draw, TTree::Scan can be used:; /// ~~~ {.cpp}; /// tree->Scan(""arr1:Alt$(arr2,0)"");; /// ~~~; /// will print on one line the value of arr1 and (arr2,0) that will be; /// matched by; /// ~~~ {.cpp}; /// tree->Draw(""arr1-Alt$(arr2,0)"");; /// ~~~; /// The ternary operator is not directly supported in TTree::Draw however, to plot the; /// equivalent of `var2<20 ? -99 : var1`, you can use:; /// ~~~ {.cpp}; /// tree->Draw(""(var2<20)*99+(var2>=20)*var1"","""");; /// ~~~; ///; /// ### Drawing a user function accessing the TTree data directly; ///; /// If the formula contains a file name, TTree::MakeProxy will be used; /// to load and execute this file. In particular it will draw the; /// result of a function with the same name as the file. The function; /// will be executed in a context where the name of the branches can; /// be used as a C++ variable.; ///; /// For example draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// `h1analysisProxy.cxx`, `h1analysProxy.h` and `h1analysisProxyCut.C`; /// which reimplement the selector found in `h1analysis.C`; ///; /// The main features of this facility are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// See TTree::MakeProxy for more details.; ///; /// ### Maki",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:18928,variab,variable,18928,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variable']
Modifiability,"nes the underlying; /// transport protocol to use for downloading the file contents, namely HTTP or HTTPS.; /// The 's3', 's3https', 'gs' and 'gshttps' schemes imply using HTTPS as the transport; /// protocol. The 's3http', 'as3' and 'gshttp' schemes imply using HTTP as the transport; /// protocol.; ///; /// The 'options' argument can contain 'NOPROXY' if you want to bypass; /// the HTTP proxy when retrieving this file's contents. As for any TWebFile-derived; /// object, the URL of the web proxy can be specified by setting an environmental; /// variable 'http_proxy'. If this variable is set, we ask that proxy to route our; /// requests HTTP(S) requests to the file server.; ///; /// In addition, you can also use the 'options' argument to provide the access key; /// and secret key to be used for authentication purposes for this file by using a; /// string of the form ""AUTH=myAccessKey:mySecretkey"". This may be useful to; /// open several files hosted by different providers in the same program/macro,; /// where the environemntal variables solution is not convenient (see below).; ///; /// To use AWS temporary security credentials you need to specify the session; /// token. This can be added to the options argument with a string of the form; /// TOKEN=mySessionToken. The temporary access and secret keys must also be; /// available, either via the AUTH option or by environmental variable.; ///; /// If you need to specify more than one option separate them by ' '; /// (blank), for instance:; /// ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+""; ///; /// Examples:; /// ```; /// TFile* f1 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; /// ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+"");; /// TFile* f2 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file"",; /// ""AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+"");; /// TFile* f3 = TFile::Open(""s3://host.example.com/bucket/path/to",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:2193,variab,variables,2193,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,1,['variab'],['variables']
Modifiability,"nformation about the data, retrieve (thread-local) readers or ""cursors""; for selected columns and to advance the readers to the desired data entry. The sequence of calls that RDataFrame (or any other client of a RDataSource) performs is the following:. - SetNSlots() : inform RDataSource of the desired level of parallelism; - GetColumnReaders() : retrieve from RDataSource per-thread readers for the desired columns; - Initialize() : inform RDataSource that an event-loop is about to start; - GetEntryRanges() : retrieve from RDataSource a set of ranges of entries that can be processed concurrently; - InitSlot() : inform RDataSource that a certain thread is about to start working on a certain range of entries; - SetEntry() : inform RDataSource that a certain thread is about to start working on a certain entry; - FinalizeSlot() : inform RDataSource that a certain thread finished working on a certain range of entries; - Finalize() : inform RDataSource that an event-loop finished. RDataSource implementations must support running multiple event-loops consecutively (although sequentially) on the same dataset.; - \b SetNSlots() is called once per RDataSource object, typically when it is associated to a RDataFrame.; - \b GetColumnReaders() can be called several times, potentially with the same arguments, also in-between event-loops, but not during an event-loop.; - \b GetEntryRanges() will be called several times, including during an event loop, as additional ranges are needed. It will not be called concurrently.; - \b Initialize() and \b Finalize() are called once per event-loop, right before starting and right after finishing.; - \b InitSlot(), \b SetEntry(), and \b FinalizeSlot() can be called concurrently from multiple threads, multiple times per event-loop. Advanced users that plan to implement a custom RDataSource can check out existing implementations, e.g. RCsvDS or RNTupleDS.; See the inheritance diagram below for the full list of existing concrete implementations.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDataSource.hxx:2345,inherit,inheritance,2345,tree/dataframe/inc/ROOT/RDataSource.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDataSource.hxx,1,['inherit'],['inheritance']
Modifiability,"ng is enough.; Data fragment must be large enough to ensure successful decoding.; `ZSTD_frameHeaderSize_max` bytes is guaranteed to always be large enough.; @result : 0 : successful decoding, the `ZSTD_frameHeader` structure is correctly filled.; >0 : `srcSize` is too small, please provide at least @result bytes on next attempt.; errorCode, which can be tested using ZSTD_isError(). It fills a ZSTD_frameHeader structure with important information to correctly decode the frame,; such as the dictionary ID, content size, or maximum back-reference distance (`windowSize`).; Note that these values could be wrong, either because of data corruption, or because a 3rd party deliberately spoofs false information.; As a consequence, check that values remain within valid application range.; For example, do not allocate memory blindly, check that `windowSize` is within expectation.; Each application can set its own limits, depending on local restrictions.; For extended interoperability, it is recommended to support `windowSize` of at least 8 MB. ZSTD_decompressContinue() needs previous data blocks during decompression, up to `windowSize` bytes.; ZSTD_decompressContinue() is very sensitive to contiguity,; if 2 blocks don't follow each other, make sure that either the compressor breaks contiguity at the same place,; or that previous contiguous segment is large enough to properly handle maximum back-reference distance.; There are multiple ways to guarantee this condition. The most memory efficient way is to use a round buffer of sufficient size.; Sufficient size is determined by invoking ZSTD_decodingBufferSize_min(),; which can @return an error code if required value is too large for current system (in 32-bits mode).; In a round buffer methodology, ZSTD_decompressContinue() decompresses each block next to previous one,; up to the moment there is not enough room left in the buffer to guarantee decoding another full block,; which maximum size is provided in `ZSTD_frameHeader` structur",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:1379,extend,extended,1379,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['extend'],['extended']
Modifiability,"ng the bin histogram errors and excluding bins with zero errors (empty bins);; /// - the full range of the histogram is used;; /// - the default Minimizer with its default configuration is used (see below Minimizer Configuration) except for linear function;; /// - for linear functions (`polN`, `chenbyshev` or formula expressions combined using operator `++`) a linear minimization is used.; /// - only the status of the fit is returned;; /// - the fit is performed in Multithread whenever is enabled in ROOT;; /// - only the last fitted function is saved in the histogram;; /// - the histogram is drawn after fitting overalyed with the resulting fitting function; ///; /// \anchor HFitMinimizer; /// ### Minimizer Configuration; ///; /// The Fit is perfomed using the default Minimizer, defined in the `ROOT::Math::MinimizerOptions` class.; /// It is possible to change the default minimizer and its configuration parameters by calling these static functions before fitting (before calling `TH1::Fit`):; /// - `ROOT::Math::MinimizerOptions::SetDefaultMinimizer(minimizerName, minimizerAgorithm)` for changing the minmizer and/or the corresponding algorithm.; /// For example `ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLMultiMin"",""BFGS"");` will set the usage of the BFGS algorithm of the GSL multi-dimensional minimization; /// The current defaults are (""Minuit"",""Migrad"").; /// See the documentation of the `ROOT::Math::MinimizerOptions` for the available minimizers in ROOT and their corresponding algorithms.; /// - `ROOT::Math::MinimizerOptions::SetDefaultTolerance` for setting a different tolerance value for the minimization.; /// - `ROOT::Math::MinimizerOptions::SetDefaultMaxFunctionCalls` for setting the maximum number of function calls.; /// - `ROOT::Math::MinimizerOptions::SetDefaultPrintLevel` for changing the minimizer print level from level=0 (minimal printing) to level=3 maximum printing; ///; /// Other options are possible depending on the Minimizer used, see the co",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:5087,config,configuration,5087,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['config'],['configuration']
Modifiability,"nition problem of extracting the valid combinations of; coordinates describing a true trajectory from the set of all possible; wrong combinations. The program described here performs this principal components analysis; on a sample of data provided by the user. It computes the covariance; matrix, its eigenvalues ands corresponding eigenvectors and exhibits; the behavior of the principal components \f$a_{m_i}\f$, thus providing; to the user all the means of understanding their data. ## Principal Components Method; Let's consider a sample of \f$M\f$ prototypes each being characterized by; \f$P\f$ variables \f$x_0, x_1, \ldots, x_{P-1}\f$. Each prototype is a point, or a; column vector, in a \f$P\f$-dimensional *Pattern space*.; \f[; \mathbf{x} = \left[\begin{array}{c}; x_0\\x_1\\\vdots\\x_{P-1}\end{array}\right]\,,; \f]; where each \f$x_n\f$ represents the particular value associated with the; \f$n\f$-dimension. Those \f$P\f$ variables are the quantities accessible to the; experimentalist, but are not necessarily the most significant for the; classification purpose. The *Principal Components Method* consists of applying a; *linear* transformation to the original variables. This; transformation is described by an orthogonal matrix and is equivalent; to a rotation of the original pattern space into a new set of; coordinate vectors, which hopefully provide easier feature; identification and dimensionality reduction. Let's define the covariance matrix:; \f[; \mathsf{C} = \left\langle\mathbf{y}\mathbf{y}^T\right\rangle; \quad\mbox{where}\quad; \mathbf{y} = \mathbf{x} - \left\langle\mathbf{x}\right\rangle\,,; \f]; and the brackets indicate mean value over the sample of \f$M\f$; prototypes. This matrix \f$\mathsf{C}\f$ is real, positive definite, symmetric, and will; have all its eigenvalues greater then zero. It will now be show that; among the family of all the complete orthonormal bases of the pattern; space, the base formed by the eigenvectors of the covariance matrix; and",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:3819,variab,variables,3819,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,1,['variab'],['variables']
Modifiability,"nment, or NULL to inherit parent's; * @flags: flags from #GSpawnFlags; * @child_setup: function to run in the child just before exec(); * @user_data: user data for @child_setup; * @child_pid: return location for child process ID, or NULL; * @standard_input: return location for file descriptor to write to child's stdin, or NULL; * @standard_output: return location for file descriptor to read child's stdout, or NULL; * @standard_error: return location for file descriptor to read child's stderr, or NULL; * @error: return location for error; *; * Executes a child program asynchronously (your program will not; * block waiting for the child to exit). The child program is; * specified by the only argument that must be provided, @argv. @argv; * should be a NULL-terminated array of strings, to be passed as the; * argument vector for the child. The first string in @argv is of; * course the name of the program to execute. By default, the name of; * the program must be a full path; the PATH shell variable will only; * be searched if you pass the %G_SPAWN_SEARCH_PATH flag.; *; * @envp is a NULL-terminated array of strings, where each string; * has the form <literal>KEY=VALUE</literal>. This will become; * the child's environment. If @envp is NULL, the child inherits its; * parent's environment.; *; * @flags should be the bitwise OR of any flags you want to affect the; * function's behavior. The %G_SPAWN_DO_NOT_REAP_CHILD means that the; * child will not be automatically reaped; you must call waitpid() or; * handle SIGCHLD yourself, or the child will become a zombie.; * %G_SPAWN_LEAVE_DESCRIPTORS_OPEN means that the parent's open file; * descriptors will be inherited by the child; otherwise all; * descriptors except stdin/stdout/stderr will be closed before; * calling exec() in the child. %G_SPAWN_SEARCH_PATH means that; * <literal>argv[0]</literal> need not be an absolute path, it; * will be looked for in the user's PATH. %G_SPAWN_STDOUT_TO_DEV_NULL; * means that the child's sta",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:1177,variab,variable,1177,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,2,['variab'],['variable']
Modifiability,"note pixel coverage; * of the color or luminance channels and is returned as an associated alpha; * channel: the color/gray channels are scaled (pre-multiplied) by the alpha; * value.; *; * The samples are either contained directly in the image data, between 1 and 8; * bytes per pixel according to the encoding, or are held in a color-map indexed; * by bytes in the image data. In the case of a color-map the color-map entries; * are individual samples, encoded as above, and the image data has one byte per; * pixel to select the relevant sample from the color-map.; */; /* PNG_FORMAT_*; *; * #defines to be used in png_image::format. Each #define identifies a; * particular layout of sample data and, if present, alpha values. There are; * separate defines for each of the two component encodings.; *; * A format is built up using single bit flag values. All combinations are; * valid. Formats can be built up from the flag values or you can use one of; * the predefined values below. When testing formats always use the FORMAT_FLAG; * macros to test for individual features - future versions of the library may; * add new flags.; *; * When reading or writing color-mapped images the format should be set to the; * format of the entries in the color-map then png_image_{read,write}_colormap; * called to read or write the color-map and set the format correctly for the; * image data. Do not set the PNG_FORMAT_FLAG_COLORMAP bit directly!; *; * NOTE: libpng can be built with particular features disabled. If you see; * compiler errors because the definition of one of the following flags has been; * compiled out it is because libpng does not have the required support. It is; * possible, however, for the libpng configuration to enable the format on just; * read or just write; in that case you may see an error at run time. You can; * guard against this by checking for the definition of the appropriate; * ""_SUPPORTED"" macro, one of:; *; * PNG_SIMPLIFIED_{READ,WRITE}_{BGR,AFIRST}_SUPPORTED; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:3226,config,configuration,3226,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['config'],['configuration']
Modifiability,"nsforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example - script Transform.c:; ///; /// \image html spectrumtransform_transform_image002.jpg Fig. 1 Original gamma-ray spectrum; /// \image html spectrumtransform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform; ///; /// #### Script:; /// Example to illustrate Transform function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Transform.C`; ///; /// ~~~ {.cpp}; /// #include <TSpectrum>; /// #include <TSpectrumTransform>; /// void Transform() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Transformed spec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1786,adapt,adaptive,1786,hist/spectrum/src/TSpectrumTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx,1,['adapt'],['adaptive']
Modifiability,"nstructor. It is placed; inside an existing folder via the TFolder::AddFolder method.; One can search for a folder or an object in a folder using the FindObject; method. FindObject analyses the string passed as its argument and searches; in the hierarchy until it finds an object or folder matching the name. When a folder is deleted, its reference from the parent folder and; possible other folders is deleted. If a folder has been declared the owner of its objects/folders via; TFolder::SetOwner, then the contained objects are deleted when the; folder is deleted. By default, a folder does not own its contained objects. NOTE that folder ownership can be set; - via TFolder::SetOwner; - or via TCollection::SetOwner on the collection specified to TFolder::AddFolder. Standard Root objects are automatically added to the folder hierarchy.; For example, the following folders exist:; //root/Files with the list of currently connected Root files; //root/Classes with the list of active classes; //root/Geometries with active geometries; //root/Canvases with the list of active canvases; //root/Styles with the list of graphics styles; //root/Colors with the list of active colors. For example, if a file ""myFile.root"" is added to the list of files, one can; retrieve a pointer to the corresponding TFile object with a statement like:; ~~~ {.cpp}; TFile *myFile = (TFile*)gROOT->FindObject(""//root/Files/myFile.root"");; ~~~; The above statement can be abbreviated to:; ~~~ {.cpp}; TFile *myFile = (TFile*)gROOT->FindObject(""/Files/myFile.root"");; ~~~; or even to:; ~~~ {.cpp}; TFile *myFile = (TFile*)gROOT->FindObjectAny(""myFile.root"");; ~~~; In this last case, the TROOT::FindObjectAny function will scan the folder hierarchy; starting at //root and will return the first object named ""myFile.root"". Because a string-based search mechanism is expensive, it is recommended; to save the pointer to the object as a class member or local variable; if this pointer is used frequently or inside loops.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFolder.cxx:3603,variab,variable,3603,core/base/src/TFolder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFolder.cxx,1,['variab'],['variable']
Modifiability,"nta Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooAbsAnaConvPdf; /// \ingroup Roofitcore; ///; /// Base class for PDFs that represent a; /// physics model that can be analytically convolved with a resolution model.; ///; /// To achieve factorization between the physics model and the resolution; /// model, each physics model must be able to be written in the form; /// \f[; /// \mathrm{Phys}(x, \bar{a}, \bar{b}) = \sum_k \mathrm{coef}_k(\bar{a}) * \mathrm{basis}_k(x,\bar{b}); /// \f]; ///; /// where \f$ \mathrm{basis}_k \f$ are a limited number of functions in terms of the variable; /// to be convoluted, and \f$ \mathrm{coef}_k \f$ are coefficients independent of the convolution; /// variable.; ///; /// Classes derived from RooResolutionModel implement; /// \f[; /// R_k(x,\bar{b},\bar{c}) = \int \mathrm{basis}_k(x', \bar{b}) \cdot \mathrm{resModel}(x-x',\bar{c}) \; \mathrm{d}x',; /// \f]; ///; /// which RooAbsAnaConvPdf uses to construct the pdf for [ Phys (x) R ] :; /// \f[; /// \mathrm{PDF}(x,\bar{a},\bar{b},\bar{c}) = \sum_k \mathrm{coef}_k(\bar{a}) * R_k(x,\bar{b},\bar{c}); /// \f]; ///; /// A minimal implementation of a RooAbsAnaConvPdf physics model consists of; ///; /// - A constructor that declares the required basis functions using the declareBasis() method.; /// The declareBasis() function assigns a unique identifier code to each declare basis; ///; /// - An implementation of `coefficient(Int_t code)` returning the coefficien",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:1317,variab,variable,1317,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,2,['variab'],['variable']
Modifiability,"ntation of multilayer perceptrons is inspired from the; <A HREF=""http://schwind.home.cern.ch/schwind/MLPfit.html"">MLPfit; package</A> originally written by Jerome Schwindling. MLPfit remains; one of the fastest tool for neural networks studies, and this ROOT; add-on will not try to compete on that. A clear and flexible Object; Oriented implementation has been chosen over a faster but more; difficult to maintain code. Nevertheless, the time penalty does not; exceed a factor 2. ### The MLP. The multilayer perceptron is a simple feed-forward network with; the following structure:. \image html mlp.png. It is made of neurons characterized by a bias and weighted links; between them (let's call those links synapses). The input neurons; receive the inputs, normalize them and forward them to the first; hidden layer. Each neuron in any subsequent layer first computes a linear; combination of the outputs of the previous layer. The output of the; neuron is then function of that combination with <I>f</I> being; linear for output neurons or a sigmoid for hidden layers. This is; useful because of two theorems:. 1. A linear combination of sigmoids can approximate any; continuous function.; 2. Trained with output = 1 for the signal and 0 for the; background, the approximated function of inputs X is the probability; of signal, knowing X. ### Learning methods. The aim of all learning methods is to minimize the total error on; a set of weighted examples. The error is defined as the sum in; quadrature, divided by two, of the error on each individual output; neuron.; In all methods implemented, one needs to compute; the first derivative of that error with respect to the weights.; Exploiting the well-known properties of the derivative, especially the; derivative of compound functions, one can write:. - for a neuron: product of the local derivative with the; weighted sum on the outputs of the derivatives.; - for a synapse: product of the input with the local derivative; of the output neuro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:3460,layers,layers,3460,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['layers'],['layers']
Modifiability,"ntifies the source variable, the set of; /// machine-locations that currently describe it (a single location for; /// DBG_VALUE or multiple for DBG_VALUE_LIST), and the DBG_VALUE inst that; /// specifies the location. Each VarLoc is indexed in the (function-scope) \p; /// VarLocMap, giving each VarLoc a set of unique indexes, each of which; /// corresponds to one of the VarLoc's machine-locations and can be used to; /// lookup the VarLoc in the VarLocMap. Rather than operate directly on machine; /// locations, the dataflow analysis in this pass identifies locations by their; /// indices in the VarLocMap, meaning all the variable locations in a block can; /// be described by a sparse vector of VarLocMap indicies.; ///; /// All the storage for the dataflow analysis is local to the ExtendRanges; /// method and passed down to helper methods. ""OutLocs"" and ""InLocs"" record the; /// in and out lattice values for each block. ""OpenRanges"" maintains a list of; /// variable locations and, with the ""process"" method, evaluates the transfer; /// function of each block. ""flushPendingLocs"" installs debug value instructions; /// for each live-in location at the start of blocks, while ""Transfers"" records; /// transfers of values between machine-locations.; ///; /// We avoid explicitly representing the ""Unknown"" (\top) lattice value in the; /// implementation. Instead, unvisited blocks implicitly have all lattice; /// values set as ""Unknown"". After being visited, there will be path back to; /// the entry block where the lattice value is ""False"", and as the transfer; /// function cannot make new ""Unknown"" locations, there are no scenarios where; /// a block can have an ""Unknown"" location after being visited. Similarly, we; /// don't enumerate all possible variable locations before exploring the; /// function: when a new location is discovered, all blocks previously explored; /// were implicitly ""False"" but unrecorded, and become explicitly ""False"" when; /// a new VarLoc is created with ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:5382,variab,variable,5382,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"nts from a; web server implementing the REST API of the Amazon S3 protocol. This; class is meant to be as generic as possible to be used with files; hosted not only by Amazon S3 servers but also by other providers; implementing the core of the S3 protocol. The S3 protocol works on top of HTTPS (and HTTP) and imposes that; each HTTP request be signed using a specific convention: the request; must include an 'Authorization' header which contains the signature; of a concatenation of selected request fields. For signing the; request, an 'Access Key Id' and a 'Secret Access Key' need to be; known. These keys are used by the S3 servers to identify the client; and to authenticate the request as genuine. As an end user, you must know the Access Key and Secret Access Key; in order to access each S3 file. They are provided to you by your S3; service provider. Those two keys can be provided to ROOT when; initializing an object of this class by two means:; a. by using the environmental variables S3_ACCESS_KEY and ; S3_SECRET_KEY, or; b. by specifying them when opening each file. You can use AWS temporary security credentials (temporary access key; and secret access key), but you must also give the associated; session token. The token may be set in the S3_SESSION_TOKEN; environmental variable, or on open in the TOKEN option. The first method is convenient if all the S3 files you want to; access are hosted by a single provider. The second one is more; flexible as it allows you to specify which credentials to use; on a per-file basis. See the documentation of the constructor of; this class for details on the syntax. For generating and signing the HTTP request, this class uses; TS3HTTPRequest. For more information on the details of S3 protocol please refer to:; ""Amazon Simple Storage Service Developer Guide"":; http://docs.amazonwebservices.com/AmazonS3/latest/dev/Welcome.html. ""Amazon Simple Storage Service REST API Reference""; http://docs.amazonwebservices.com/AmazonS3/latest/API/A",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:1591,variab,variables,1591,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,1,['variab'],['variables']
Modifiability,"o-change, thus a; // fixpoint, is reached, the Attributor will query the abstract attributes; // in-flight to re-evaluate their state. If the (current) state is too; // optimistic, hence it cannot be justified anymore through other abstract; // attributes or the state of the IR, the state of the abstract attribute will; // have to change. Generally, we assume abstract attribute state to be a finite; // height lattice and the update function to be monotone. However, these; // conditions are not enforced because the iteration limit will guarantee; // termination. If an optimistic fixpoint is reached, or a pessimistic fix; // point is enforced after a timeout, the abstract attributes are tasked to; // manifest their result in the IR for passes to come.; //; // Attribute manifestation is not mandatory. If desired, there is support to; // generate a single or multiple LLVM-IR attributes already in the helper struct; // IRAttribute. In the simplest case, a subclass inherits from IRAttribute with; // a proper Attribute::AttrKind as template parameter. The Attributor; // manifestation framework will then create and place a new attribute if it is; // allowed to do so (based on the abstract state). Other use cases can be; // achieved by overloading AbstractAttribute or IRAttribute methods.; //; //; // The ""mechanics"" of adding a new ""abstract attribute"":; // - Define a class (transitively) inheriting from AbstractAttribute and one; // (which could be the same) that (transitively) inherits from AbstractState.; // For the latter, consider the already available BooleanState and; // {Inc,Dec,Bit}IntegerState if they fit your needs, e.g., you require only a; // number tracking or bit-encoding.; // - Implement all pure methods. Also use overloading if the attribute is not; // conforming with the ""default"" behavior: A (set of) LLVM-IR attribute(s) for; // an argument, call site argument, function return value, or function. See; // the class and method descriptions for more informati",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:4101,inherit,inherits,4101,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['inherit'],['inherits']
Modifiability,"oRealVar zeta(""zeta"", ""zeta"", 0.);; * RooRealVar lambda(""lambda"", ""lambda"", -1., -10., -0.00001);; * ```; * In all other cases, slower / less accurate numeric integration will be used.; * Note that including `0.` in the value range of lambda excludes using analytic integrals.; * \endif; *; * ### Concavity; * Note that unless the parameters \f$ a_l,\ a_r \f$ are very large, the function has non-hyperbolic tails. This requires; * \f$ G \f$ to be strictly concave, *i.e.*, peaked, as otherwise the tails would yield imaginary numbers. Choosing \f$ \lambda,; * \beta, \zeta \f$ inappropriately will therefore lead to evaluation errors.; *; * Further, the original paper establishes that to keep the tails from rising,; * \f[; * \begin{split}; * \beta^2 &< \alpha^2 \\; * \Leftrightarrow \beta^2 &< \frac{\zeta^2}{\delta^2} = \frac{\zeta^2}{\sigma^2 A_{\lambda}^2(\zeta)}; * \end{split}; * \f]; * needs to be satisfied, unless the fit range is very restricted, because otherwise, the function rises in the tails.; *; *; * In case of evaluation errors, it is advisable to choose very large values for \f$ a_l,\ a_r \f$, tweak the parameters of the core region to; * make it concave, and re-enable the tails. Especially \f$ \beta \f$ needs to be close to zero.; *; * ## Relation to RooIpatia2; * This implementation is largely based on RooIpatia2, https://gitlab.cern.ch/lhcb/Urania/-/blob/master/PhysFit/B2DXFitters/src/RooIpatia2.cxx,; * but there are differences:; * - At construction time, the Hypatia implementation checks if the range of parameters extends into regions where; * the function might be undefined.; * - Hypatia supports I/O to ROOT files.; * - Hypatia will support faster batched function evaluations.; * - Hypatia might support analytical integration for the case \f$ \zeta = \beta = 0, \lambda < 1 \f$.; *; * Because of these differences, and to avoid name clashes for setups where RooFit is used in an environment that also has; * RooIpatia2, class names need to be different.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx:4207,extend,extends,4207,roofit/roofitmore/src/RooHypatia2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx,1,['extend'],['extends']
Modifiability,"oating point (`Double32_t`); - `L` : a 64 bit signed integer (`Long64_t`); - `l` : a 64 bit unsigned integer (`ULong64_t`); - `G` : a long signed integer, stored as 64 bit (`Long_t`); - `g` : a long unsigned integer, stored as 64 bit (`ULong_t`); - `O` : [the letter `o`, not a zero] a boolean (`bool`). Examples:; - A int: ""myVar/I""; - A float array with fixed size: ""myArrfloat[42]/F""; - An double array with variable size, held by the `myvar` column: ""myArrdouble[myvar]/D""; - An Double32_t array with variable size, held by the `myvar` column , with values between 0 and 16: ""myArr[myvar]/d[0,10]""; - The `myvar` column, which holds the variable size, **MUST** be an `Int_t` (/I). - If the address points to a single numerical variable, the leaflist is optional:; ~~~ {.cpp}; int value;; tree->Branch(branchname, &value);; ~~~; - If the address points to more than one numerical variable, we strongly recommend; that the variable be sorted in decreasing order of size. Any other order will; result in a non-portable TTree (i.e. you will not be able to read it back on a; platform with a different padding strategy).; We recommend to persistify objects rather than composite leaflists.; - In case of the truncated floating point types (Float16_t and Double32_t) you can; furthermore specify the range in the style [xmin,xmax] or [xmin,xmax,nbits] after; the type character. For example, for storing a variable size array `myArr` of; `Double32_t` with values within a range of `[0, 2*pi]` and the size of which is stored; in an `Int_t` (/I) branch called `myArrSize`, the syntax for the `leaflist` string would; be: `myArr[myArrSize]/d[0,twopi]`. Of course the number of bits could be specified,; the standard rules of opaque typedefs annotation are valid. For example, if only; 18 bits were sufficient, the syntax would become: `myArr[myArrSize]/d[0,twopi,18]`. \anchor addingacolumnofstl; ## Adding a column holding STL collection instances (e.g. std::vector, std::list, std::unordered_map). ~~~ {",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:5774,portab,portable,5774,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['portab'],['portable']
Modifiability,"oating point with truncated mantissa (`Float16_t`); - `D` : a 64 bit floating point (`Double_t`); - `d` : a 24 bit truncated floating point (`Double32_t`); - `L` : a 64 bit signed integer (`Long64_t`); - `l` : a 64 bit unsigned integer (`ULong64_t`); - `G` : a long signed integer, stored as 64 bit (`Long_t`); - `g` : a long unsigned integer, stored as 64 bit (`ULong_t`); - `O` : [the letter `o`, not a zero] a boolean (`bool`). Examples:; - A int: ""myVar/I""; - A float array with fixed size: ""myArrfloat[42]/F""; - An double array with variable size, held by the `myvar` column: ""myArrdouble[myvar]/D""; - An Double32_t array with variable size, held by the `myvar` column , with values between 0 and 16: ""myArr[myvar]/d[0,10]""; - The `myvar` column, which holds the variable size, **MUST** be an `Int_t` (/I). - If the address points to a single numerical variable, the leaflist is optional:; ~~~ {.cpp}; int value;; tree->Branch(branchname, &value);; ~~~; - If the address points to more than one numerical variable, we strongly recommend; that the variable be sorted in decreasing order of size. Any other order will; result in a non-portable TTree (i.e. you will not be able to read it back on a; platform with a different padding strategy).; We recommend to persistify objects rather than composite leaflists.; - In case of the truncated floating point types (Float16_t and Double32_t) you can; furthermore specify the range in the style [xmin,xmax] or [xmin,xmax,nbits] after; the type character. For example, for storing a variable size array `myArr` of; `Double32_t` with values within a range of `[0, 2*pi]` and the size of which is stored; in an `Int_t` (/I) branch called `myArrSize`, the syntax for the `leaflist` string would; be: `myArr[myArrSize]/d[0,twopi]`. Of course the number of bits could be specified,; the standard rules of opaque typedefs annotation are valid. For example, if only; 18 bits were sufficient, the syntax would become: `myArr[myArrSize]/d[0,twopi,18]`. \anchor ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:5646,variab,variable,5646,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,['variab'],['variable']
Modifiability,"occi, the possibility to; use cross-entropy errors, which allows to train a network for pattern; classification based on Bayesian posterior probability. ### Introduction. Neural Networks are more and more used in various fields for data; analysis and classification, both for research and commercial; institutions. Some randomly chosen examples are:. - image analysis; - financial movements predictions and analysis; - sales forecast and product shipping optimisation; - in particles physics: mainly for classification tasks (signal; over background discrimination). More than 50% of neural networks are multilayer perceptrons. This; implementation of multilayer perceptrons is inspired from the; <A HREF=""http://schwind.home.cern.ch/schwind/MLPfit.html"">MLPfit; package</A> originally written by Jerome Schwindling. MLPfit remains; one of the fastest tool for neural networks studies, and this ROOT; add-on will not try to compete on that. A clear and flexible Object; Oriented implementation has been chosen over a faster but more; difficult to maintain code. Nevertheless, the time penalty does not; exceed a factor 2. ### The MLP. The multilayer perceptron is a simple feed-forward network with; the following structure:. \image html mlp.png. It is made of neurons characterized by a bias and weighted links; between them (let's call those links synapses). The input neurons; receive the inputs, normalize them and forward them to the first; hidden layer. Each neuron in any subsequent layer first computes a linear; combination of the outputs of the previous layer. The output of the; neuron is then function of that combination with <I>f</I> being; linear for output neurons or a sigmoid for hidden layers. This is; useful because of two theorems:. 1. A linear combination of sigmoids can approximate any; continuous function.; 2. Trained with output = 1 for the signal and 0 for the; background, the approximated function of inputs X is the probability; of signal, knowing X. ### Learning metho",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:2708,flexible,flexible,2708,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['flexible'],['flexible']
Modifiability,"ode. They allow; our simple x3d viewer, and considerably more sophisticated OpenGL one to both; work with both geometry libraries (g3d and geom) efficiently. Publishing to a viewer consists of the following steps:. 1. Create / obtain viewer handle; 2. Begin scene on viewer; 3. Fill mandatory parts of TBuffer3D describing object; 4. Add to viewer; 5. Fill optional parts of TBuffer3D if requested by viewer, and add again; ... repeat 3/4/5 as required; 6. End scene on viewer. ## Creating / Obtaining Viewer. Create/obtain the viewer handle via local/global pad - the viewer is always; bound to a TPad object at present [This may be removed as a restriction in; the future] . You should perform the publishing to the viewer described below; in the Paint() method of the object you attach to the pad (via Draw()); ~~~ {.cpp}; TVirtualViewer3D * v = gPad->GetViewer3D(""xxxx"");; ~~~. "" xxxx"" is viewer type: OpenGL ""ogl"", X3D ""x3d"" or; Pad ""pad"" (default). The viewer is created via the plugin manager,; attached to pad, and the interface returned. ## Begin / End Scene. Objects must be added to viewer between BeginScene/EndScene calls e.g.; ~~~ {.cpp}; v->BeginScene();; .....; v->AddObject(....);; v->AddObject(....);; .....; v->EndScene();; ~~~. The BeginScene call will cause the viewer to suspend redraws etc, and after; the EndScene the viewer will reset the camera to frame the new scene and redraw.; [x3d viewer does not support changing of scenes - objects added after the; first Open/CloseScene pair will be ignored.]. ## Filling TBuffer3D and Adding to Viewer. The viewers behind the TVirtualViewer3D interface differ greatly in their; capabilities e.g. - Some know how to draw certain shapes natively (e.g. spheres/tubes in; OpenGL) - others always require a raw tessellation description of points/lines/segments.; - Some need the 3D object positions in the global frame, others can cope with; local frames + a translation matrix - which can give considerable performance; benefits. To cop",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:2089,plugin,plugin,2089,core/base/src/TVirtualViewer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx,1,['plugin'],['plugin']
Modifiability,"of the; /// MachineFunction, using value propagation to eliminate any un-necessary; /// PHI values. This gives us a map of every value computed in the function,; /// and its location within the register file / stack.; ///; /// Secondly, for each variable we perform the same analysis, where each debug; /// instruction is considered a def, and every instruction where the variable; /// is in lexical scope as a use. Value propagation is used again to eliminate; /// any un-necessary PHIs. This gives us a map of each variable to the value; /// it should have in a block.; ///; /// Once both are complete, we have two maps for each block:; /// * Variables to the values they should have,; /// * Values to the register / spill slot they are located in.; /// After which we can marry-up variable values with a location, and emit; /// DBG_VALUE instructions specifying those locations. Variable locations may; /// be dropped in this process due to the desired variable value not being; /// resident in any machine location, or because there is no PHI value in any; /// location that accurately represents the desired value. The building of; /// location lists for each block is left to DbgEntityHistoryCalculator.; ///; /// This pass is kept efficient because the size of the first SSA problem; /// is proportional to the working-set size of the function, which the compiler; /// tries to keep small. (It's also proportional to the number of blocks).; /// Additionally, we repeatedly perform the second SSA problem analysis with; /// only the variables and blocks in a single lexical scope, exploiting their; /// locality.; ///; /// ### Terminology; ///; /// A machine location is a register or spill slot, a value is something that's; /// defined by an instruction or PHI node, while a variable value is the value; /// assigned to a variable. A variable location is a machine location, that must; /// contain the appropriate variable value. A value that is a PHI node is; /// occasionally called an mphi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:2577,Variab,Variable,2577,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,2,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,"of type RooRealVar / RooLinearVar (or anything that derives from; RooAbsRealLValue). This is necessary because; RooStats needs to be able to set the yields to 0 and 1 to probe the PDF. After; constructing the s weights, the yields will be restored to their original values. To create an instance of the SPlot, supply a data set, the pdf to analyse,; and a list which parameters of the pdf are yields. The SPlot will calculate SWeights, and; include these as columns in the RooDataSet. The dataset will have two additional columns; for every yield with name ""`<varname>`"":; - `L_<varname>` is the likelihood for each event, *i.e.*, the pdf evaluated for the given value of the variable ""varname"".; - `<varname>_sw` is the value of the sWeight for the variable ""varname"" for each event. In SPlot::SPlot(), one can choose whether columns should be added to an existing dataset or whether a copy of the dataset; should be created. ### Plotting s-weighted data; After computing the s weights, create a new dataset that uses the s weights of the variable of interest for weighting.; If the yield parameter for signal was e.g. ""signalYield"", the dataset can be constructed as follows:; ~~~{.cpp}; RooDataSet data_signal(""<name>"", ""<title>"", <dataWithSWeights>, <variables>, 0, ""signalYield_sw"");; ~~~. A complete tutorial with an extensive model is rs301_splot.C. #### Using ratios as yield parameters; As mentioned, RooStats needs to be able to modify the yield parameters. That means that they have to be a RooRealVar; of a RooLinearVar. This allows using ratio parameters as in the following example:; ~~~{.cpp}; RooRealVar x(""x"", ""observable"", 0, 0, 20);; RooRealVar m(""m"", ""mean"", 5., -10, 10);; RooRealVar s(""s"", ""sigma"", 2., 0, 10);; RooGaussian gauss(""gauss"", ""gauss"", x, m, s);. RooRealVar a(""a"", ""exp"", -0.2, -10., 0.);; RooExponential ex(""ex"", ""ex"", x, a);. RooRealVar common(""common"", ""common scale"", 3., 0, 10);; RooRealVar r1(""r1"", ""ratio of signal events"", 0.3, 0, 10);; RooRealVar r2(""r2"", ""r",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SPlot.cxx:3235,variab,variable,3235,roofit/roostats/src/SPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SPlot.cxx,1,['variab'],['variable']
Modifiability,"ograms with one long64 per channel. Maximum bin content = LLONG_MAX (\ref llongmax ""**""); - TH3F : histograms with one float per channel. Maximum precision 7 digits, maximum integer bin content = +/-16777216 (\ref floatmax ""***""); - TH3D : histograms with one double per channel. Maximum precision 14 digits, maximum integer bin content = +/-9007199254740992 (\ref doublemax ""****""); - Profile histograms: See classes TProfile, TProfile2D and TProfile3D.; Profile histograms are used to display the mean value of Y and its standard deviation; for each bin in X. Profile histograms are in many cases an elegant; replacement of two-dimensional histograms : the inter-relation of two; measured quantities X and Y can always be visualized by a two-dimensional; histogram or scatter-plot; If Y is an unknown (but single-valued); approximate function of X, this function is displayed by a profile; histogram with much better precision than by a scatter-plot. <sup>; \anchor intmax (*) INT_MAX = 2147483647 is the [maximum value for a variable of type int.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; \anchor llongmax (**) LLONG_MAX = 9223372036854775807 is the [maximum value for a variable of type long64.](https://docs.microsoft.com/en-us/cpp/c-language/cpp-integer-limits)<br>; \anchor floatmax (***) 2^24 = 16777216 is the [maximum integer that can be properly represented by a float32 with 23-bit mantissa.](https://stackoverflow.com/a/3793950/7471760)<br>; \anchor doublemax (****) 2^53 = 9007199254740992 is the [maximum integer that can be properly represented by a double64 with 52-bit mantissa.](https://stackoverflow.com/a/3793950/7471760); </sup>. The inheritance hierarchy looks as follows:. \image html classTH1__inherit__graph_org.svg width=100%. \anchor creating-histograms; ## Creating histograms. Histograms are created by invoking one of the constructors, e.g.; ~~~ {.cpp}; TH1F *h1 = new TH1F(""h1"", ""h1 title"", 100, 0, 4.4);; TH2F *h2 = new TH2F(""h2"", ""h2 t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:4595,variab,variable,4595,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variable']
Modifiability,"oking at the parameter significance, you see,; // that maybe the fit will improve, if you take out; // the constant term; lf->SetFormula(""x++x*x"");; lf->Eval();; ...; ~~~~. ##### 2.3.2 If the input data is not stored, the fitter will have to be; cleared and the data will have to be added again to try a; different formula. ### 3.Accessing the fit results. #### 3.1 There are methods in the fitter to access all relevant information:; --GetParameters, GetCovarianceMatrix, etc; --the t-values of parameters and their significance can be reached by; GetParTValue() and GetParSignificance() methods. #### 3.2 If fitting with a pre-defined TF123, the fit results are also; written into this function. ### 4.Robust fitting - Least Trimmed Squares regression (LTS); Outliers are atypical(by definition), infrequant observations; data points; which do not appear to follow the characteristic distribution of the rest; of the data. These may reflect genuine properties of the underlying; phenomenon(variable), or be due to measurement errors or anomalies which; shouldn't be modelled. (StatSoft electronic textbook). Even a single gross outlier can greatly influence the results of least-; squares fitting procedure, and in this case use of robust(resistant) methods; is recommended. The method implemented here is based on the article and algorithm:; ""Computing LTS Regression for Large Data Sets"" by; P.J.Rousseeuw and Katrien Van Driessen; The idea of the method is to find the fitting coefficients for a subset; of h observations (out of n) with the smallest sum of squared residuals.; The size of the subset h should lie between (npoints + nparameters +1)/2; and n, and represents the minimal number of good points in the dataset.; The default value is set to (npoints + nparameters +1)/2, but of course; if you are sure that the data contains less outliers it's better to change; h according to your data. To perform a robust fit, call EvalRobust() function instead of Eval() after; adding the points a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx:5780,variab,variable,5780,math/minuit/src/TLinearFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearFitter.cxx,1,['variab'],['variable']
Modifiability,"ol over alignment via padding.; //; // Uses from functions are more complicated and the primary purpose of this; // IR pass. Several different lowering are chosen between to meet requirements; // to avoid allocating any LDS where it is not necessary, as that impacts; // occupancy and may fail the compilation, while not imposing overhead on a; // feature whose primary advantage over global memory is performance. The basic; // design goal is to avoid one kernel imposing overhead on another.; //; // Implementation.; //; // LDS variables with constant annotation or non-undef initializer are passed; // through unchanged for simplification or error diagnostics in later passes.; // Non-undef initializers are not yet implemented for LDS.; //; // LDS variables that are always allocated at the same address can be found; // by lookup at that address. Otherwise runtime information/cost is required.; //; // The simplest strategy possible is to group all LDS variables in a single; // struct and allocate that struct in every kernel such that the original; // variables are always at the same address. LDS is however a limited resource; // so this strategy is unusable in practice. It is not implemented here.; //; // Strategy | Precise allocation | Zero runtime cost | General purpose |; // --------+--------------------+-------------------+-----------------+; // Module | No | Yes | Yes |; // Table | Yes | No | Yes |; // Kernel | Yes | Yes | No |; // Hybrid | Yes | Partial | Yes |; //; // ""Module"" spends LDS memory to save cycles. ""Table"" spends cycles and global; // memory to save LDS. ""Kernel"" is as fast as kernel allocation but only works; // for variables that are known reachable from a single kernel. ""Hybrid"" picks; // between all three. When forced to choose between LDS and cycles we minimise; // LDS use.; // The ""module"" lowering implemented here finds LDS variables which are used by; // non-kernel functions and creates a new struct with a field for each of those; // LDS variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:2994,variab,variables,2994,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,2,['variab'],['variables']
Modifiability,"ollowing characteristics (only): overall sample means, \f$ x_i \f$,; for each input variable, \f$ i \f$,; class-specific sample means, \f$ x_{S(B),i}\f$,; and total covariance matrix \f$ T_{ij} \f$. The covariance matrix; can be decomposed into the sum of a _within_ (\f$ W_{ij} \f$); and a _between-class_ (\f$ B_{ij} \f$) class matrix. They describe; the dispersion of events relative to the means of their own class (within-class; matrix), and relative to the overall sample means (between-class matrix).; The Fisher coefficients, \f$ F_i \f$, are then given by. \f[; F_i = \frac{\sqrt{N_s N_b}}{N_s + N_b} \sum_{j=1}^{N_{SB}} W_{ij}^{-1} (\bar{X}_{Sj} - \bar{X}_{Bj}); \f]. where in TMVA is set \f$ N_S = N_B \f$, so that the factor; in front of the sum simplifies to \f$ \frac{1}{2}\f$.; The Fisher discriminant then reads. \f[; X_{Fi} = F_0 + \sum_{i=1}^{N_{SB}} F_i X_i; \f]. The offset \f$ F_0 \f$ centers the sample mean of \f$ x_{Fi} \f$; at zero. Instead of using the within-class matrix, the Mahalanobis variant; determines the Fisher coefficients as follows:. \f[; F_i = \frac{\sqrt{N_s N_b}}{N_s + N_b} \sum_{j=1}^{N_{SB}} (W + B)_{ij}^{-1} (\bar{X}_{Sj} - \bar{X}_{Bj}); \f]. with resulting \f$ x_{Ma} \f$ that are very similar to the \f$ x_{Fi} \f$. TMVA provides two outputs for the ranking of the input variables:. - __Fisher test:__ the Fisher analysis aims at simultaneously maximising; the between-class separation, while minimising the within-class dispersion.; A useful measure of the discrimination power of a variable is hence given; by the diagonal quantity: \f$ \frac{B_{ii}}{W_{ii}} \f$ . - __Discrimination power:__ the value of the Fisher coefficient is a; measure of the discriminating power of a variable. The discrimination power; of set of input variables can therefore be measured by the scalar. \f[; \lambda = \frac{\sqrt{N_s N_b}}{N_s + N_b} \sum_{j=1}^{N_{SB}} F_i (\bar{X}_{Sj} - \bar{X}_{Bj}); \f]. The corresponding numbers are printed on standard output.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx:3437,variab,variables,3437,tmva/tmva/src/MethodFisher.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx,4,['variab'],"['variable', 'variables']"
Modifiability,"on in frame.; /// If set, any subsequent PDF will normalize to this dataset, even if it is; /// not the first one added to the frame. By default only the 1st dataset; /// added to a frame will update the normalization information; /// <tr><td> RooFit::Rescale(double f); /// <td> Rescale drawn histogram by given factor.; /// <tr><td> RooFit::Cut(const char*); /// <td> Only plot entries that pass the given cut.; /// Apart from cutting in continuous variables `Cut(""x>5"")`, this can also be used to plot a specific; /// category state. Use something like `Cut(""myCategory == myCategory::stateA"")`, where; /// `myCategory` resolves to the state number for a given entry and; /// `myCategory::stateA` resolves to the state number of the state named ""stateA"".; ///; /// <tr><td> RooFit::CutRange(const char*); /// <td> Only plot data from given range. Separate multiple ranges with "","".; /// \note This often requires passing the normalisation when plotting the PDF because RooFit does not save; /// how many events were being plotted (it will only work for cutting slices out of uniformly distributed; /// variables).; /// ```; /// data->plotOn(frame01, CutRange(""SB1""));; /// const double nData = data->sumEntries("""", ""SB1"");; /// // Make clear that the target normalisation is nData. The enumerator NumEvent; /// // is needed to switch between relative and absolute scaling.; /// model.plotOn(frame01, Normalization(nData, RooAbsReal::NumEvent),; /// ProjectionRange(""SB1""));; /// ```; ///; /// <tr><th> <th> Histogram drawing options; /// <tr><td> RooFit::DrawOption(const char* opt); /// <td> Select ROOT draw option for resulting TGraph object; /// <tr><td> RooFit::LineStyle(Style_t style); /// <td> Select line style by ROOT line style code, default is solid; /// <tr><td> RooFit::LineColor(Color_t color); /// <td> Select line color by ROOT color code, default is black; /// <tr><td> RooFit::LineWidth(Width_t width); /// <td> Select line with in pixels, default is 3; /// <tr><td> RooFit::Mar",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:2856,variab,variables,2856,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['variab'],['variables']
Modifiability,"on is; reset to the steepest descent. #### Conjugate gradients with the Fletcher-Reeves updating formula:. Weights are set to the minimum along the line defined by the conjugate gradient. Parameters; are Tau and Reset, which defines the epochs where the direction is; reset to the steepest descent. #### Broyden, Fletcher, Goldfarb, Shanno (BFGS) method:. Implies the computation of a NxN matrix; computation, but seems more powerful at least for less than 300; weights. Parameters are Tau and Reset, which defines the epochs where; the direction is reset to the steepest descent. ### How to use it... TMLP is build from 3 classes: TNeuron, TSynapse and; TMultiLayerPerceptron. Only TMultiLayerPerceptron should be used; explicitly by the user. TMultiLayerPerceptron will take examples from a TTree; given in the constructor. The network is described by a simple; string: The input/output layers are defined by giving the expression for; each neuron, separated by comas. Hidden layers are just described; by the number of neurons. The layers are separated by colons.; In addition, input/output layer formulas can be preceded by '@' (e.g ""@out""); if one wants to also normalize the data from the TTree.; Input and outputs are taken from the TTree given as second argument.; Expressions are evaluated as for TTree::Draw(), arrays are expended in; distinct neurons, one for each index.; This can only be done for fixed-size arrays.; If the formula ends with ""!"", softmax functions are used for the output layer.; One defines the training and test datasets by TEventLists. Example:; ~~~ {.cpp}; TMultiLayerPerceptron(""x,y:10:5:f"",inputTree);; ~~~. Both the TTree and the TEventLists can be defined in; the constructor, or later with the suited setter method. The lists; used for training and test can be defined either explicitly, or via; a string containing the formula to be used to define them, exactly as; for a TCut. The learning method is defined using the TMultiLayerPerceptron::SetLearningMethod(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:6691,layers,layers,6691,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['layers'],['layers']
Modifiability,"on, and I refer these two excellents; text for more information. And example of usage is given in multidimfit.C. ## The Method; Let \f$ D \f$ by the dependent quantity of interest, which depends smoothly; on the observable quantities \f$ x_1, \ldots, x_N \f$ which we'll denote by; \f$\mathbf{x}\f$. Given a training sample of \f$ M\f$ tuples of the form, (TMultiDimFit::AddRow). \f[; \left(\mathbf{x}_j, D_j, E_j\right)\quad,; \f]; where \f$\mathbf{x}_j = (x_{1,j},\ldots,x_{N,j})\f$ are \f$ N\f$ independent; variables, \f$ D_j\f$ is the known, quantity dependent at \f$\mathbf{x}_j\f$ and \f$ E_j\f$ is; the square error in \f$ D_j\f$, the class will try to find the parameterization; \f[; D_p(\mathbf{x}) = \sum_{l=1}^{L} c_l \prod_{i=1}^{N} p_{li}\left(x_i\right); = \sum_{l=1}^{L} c_l F_l(\mathbf{x}); \f]; such that. \f[; S \equiv \sum_{j=1}^{M} \left(D_j - D_p\left(\mathbf{x}_j\right)\right)^2; \f]; is minimal. Here \f$p_{li}(x_i)\f$ are monomials, or Chebyshev or Legendre; polynomials, labelled \f$l = 1, \ldots, L\f$, in each variable \f$ x_i\f$,\f$ i=1, \ldots, N\f$. So what TMultiDimFit does, is to determine the number of terms \f$ L\f$, and then \f$ L\f$ terms; (or functions) \f$ F_l\f$, and the \f$ L\f$ coefficients \f$ c_l\f$, so that \f$ S\f$ is minimal; (TMultiDimFit::FindParameterization). Of course it's more than a little unlikely that \f$ S\f$ will ever become; exact zero as a result of the procedure outlined below. Therefore, the; user is asked to provide a minimum relative error \f$ \epsilon\f$ (TMultiDimFit::SetMinRelativeError),; and \f$ S\f$ will be considered minimized when. \f[; R = \frac{S}{\sum_{j=1}^M D_j^2} < \epsilon; \f]; Optionally, the user may impose a functional expression by specifying; the powers of each variable in \f$ L\f$ specified functions \f$ F_1, \ldots,F_L\f$ (TMultiDimFit::SetPowers).; In that case, only the coefficients \f$ c_l\f$ is calculated by the class. ## Limiting the Number of Terms; As always when dealing with fits, there's",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:2944,variab,variable,2944,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variable']
Modifiability,"one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Note: it is the implementer's task to; * actually update 'Job::state_id_' inside 'Job::update_state()'!; *; * ## Implementers notes; *; * The type of result from each task is strongly dependent on the Job at hand; * and so Job does not provide a default results member. It is up to the; * inheriting class to implement this in the above functions. We would have; * liked a template parameter task_result_t, so that we could also provide a; * default ""boilerplate"" calculate function to show a typical Job use-case of; * all the above infrastructure. This is not trivial, because the JobManager; * has to keep a list of Job pointers, so if there would be different template; * instantiations of Jobs, this would complicate this list.; *; * A typical Job implementation will have an evaluation function that is; * called from the master process, like RooAbsArg::getVal calls evaluate().; * This function will have three purposes: 1. send updated parameter values; * to the workers (possibly through update_state() or in a dedicated; * function), 2. queue tasks and 3. wait for the results to be retrieved.; * 'Job::gather_worker_results()' is provided for convenience to wait for; * all tasks to be retrieved for the current Job. Implementers can also; * choose to have the master process perform other tasks i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:2638,inherit,inheriting,2638,roofit/multiprocess/src/Job.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx,1,['inherit'],['inheriting']
Modifiability,"one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). Several selections can be defined with different colors. It is; possible to generate an entry list from a given selection and apply it to the; tree using the editor (""Apply to tree"" button). ## Axes:. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis. ## Candle chart:. TParallelCoord can also be used to display a candle chart. In that mode, every; variable is drawn in the same scale. The candle chart can be combined with the; parallel coordinates mode, drawing the candle sticks over the axes. ~~~ {.cpp}; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; grade->AddRange(new TParallelCoordRange(grade,11.5,14));; para->AddSelection(""less30"");; para->GetCurrentSelection()->SetLineColor(kViolet);; TParallelCoordVar* age = (TParallelCoordVar*)para->GetVarList()->FindObject(""Age"");; age->AddRange(new TParallelCoordRange(age,21,30));; }; ~~~. ### Some references:. - Alfred Inselberg's Homepage <http://www.math.tau.ac.il/~aiisreal>, with; Visual Tutorial, History, Selected Publications and Applications.; - Almir Olivette Artero, Maria Cristina ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:2844,variab,variable,2844,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['variab'],['variable']
Modifiability,"onic condition it's tempting to replace the induction; // variable in the condition with its value on the last iteration. But this; // transformation is not correct, e.g. e = 4, b = 5 breaks the loop.; //; // for (int i = b; i != e; i++); // guard(i u< len); //; // One of the ways to reason about this problem is to use an inductive proof; // approach. Given the loop:; //; // if (B(0)) {; // do {; // I = PHI(0, I.INC); // I.INC = I + Step; // guard(G(I));; // } while (B(I));; // }; //; // where B(x) and G(x) are predicates that map integers to booleans, we want a; // loop invariant expression M such the following program has the same semantics; // as the above:; //; // if (B(0)) {; // do {; // I = PHI(0, I.INC); // I.INC = I + Step; // guard(G(0) && M);; // } while (B(I));; // }; //; // One solution for M is M = forall X . (G(X) && B(X)) => G(X + Step); //; // Informal proof that the transformation above is correct:; //; // By the definition of guards we can rewrite the guard condition to:; // G(I) && G(0) && M; //; // Let's prove that for each iteration of the loop:; // G(0) && M => G(I); // And the condition above can be simplified to G(Start) && M.; //; // Induction base.; // G(0) && M => G(0); //; // Induction step. Assuming G(0) && M => G(I) on the subsequent; // iteration:; //; // B(I) is true because it's the backedge condition.; // G(I) is true because the backedge is guarded by this condition.; //; // So M = forall X . (G(X) && B(X)) => G(X + Step) implies G(I + Step).; //; // Note that we can use anything stronger than M, i.e. any condition which; // implies M.; //; // When S = 1 (i.e. forward iterating loop), the transformation is supported; // when:; // * The loop has a single latch with the condition of the form:; // B(X) = latchStart + X <pred> latchLimit,; // where <pred> is u<, u<=, s<, or s<=.; // * The guard condition is of the form; // G(X) = guardStart + X u< guardLimit; //; // For the ult latch comparison case M is:; // forall X . guardStart + X u",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPredication.cpp:2587,rewrite,rewrite,2587,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPredication.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopPredication.cpp,1,['rewrite'],['rewrite']
Modifiability,"onsidering the other components;; * then these indexes can be combined into a colormap index by a standard; * N-dimensional-array-subscript calculation. Most of the arithmetic involved; * can be precalculated and stored in the lookup table colorindex[].; * colorindex[i][j] maps pixel value j in component i to the nearest; * representative value (grid plane) for that component; this index is; * multiplied by the array stride for component i, so that the; * index of the colormap entry closest to a given pixel value is just; * sum( colorindex[component-number][pixel-component-value] ); * Aside from being fast, this scheme allows for variable spacing between; * representative values with no additional lookup cost.; *; * If gamma correction has been applied in color conversion, it might be wise; * to adjust the color grid spacing so that the representative colors are; * equidistant in linear space. At this writing, gamma correction is not; * implemented by jdcolor, so nothing is done here.; */; /* Declarations for ordered dithering.; *; * We use a standard 16x16 ordered dither array. The basic concept of ordered; * dithering is described in many references, for instance Dale Schumacher's; * chapter II.2 of Graphics Gems II (James Arvo, ed. Academic Press, 1991).; * In place of Schumacher's comparisons against a ""threshold"" value, we add a; * ""dither"" value to the input pixel and then round the result to the nearest; * output value. The dither value is equivalent to (0.5 - threshold) times; * the distance between output values. For ordered dithering, we assume that; * the output colors are equally spaced; if not, results will probably be; * worse, since the dither may be too much or too little at a given point.; *; * The normal calculation would be to form pixel value + dither, range-limit; * this to 0..MAXJSAMPLE, and then index into the colorindex table as usual.; * We can skip the separate range-limiting step by extending the colorindex; * table in both directions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:2800,extend,extending,2800,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,1,['extend'],['extending']
Modifiability,"ont-style: oblique }; .keyword { color: blue }; .string_literal { color: red }; .directive { color: darkmagenta }. /* Macros and variables could have pop-up notes hidden by default.; - Macro pop-up: expansion of the macro; - Variable pop-up: value (table) of the variable */; .macro_popup, .variable_popup { display: none; }. /* Pop-up appears on mouse-hover event. */; .macro:hover .macro_popup, .variable:hover .variable_popup {; display: block;; padding: 2px;; -webkit-border-radius:5px;; -webkit-box-shadow:1px 1px 7px #000;; border-radius:5px;; box-shadow:1px 1px 7px #000;; position: absolute;; top: -1em;; left:10em;; z-index: 1; }. .macro_popup {; border: 2px solid red;; background-color:#FFF0F0;; font-weight: normal;; }. .variable_popup {; border: 2px solid blue;; background-color:#F0F0FF;; font-weight: bold;; font-family: Helvetica, sans-serif;; font-size: 9pt;; }. /* Pop-up notes needs a relative position as a base where they pops up. */; .macro, .variable {; background-color: PaleGoldenRod;; position: relative;; }; .macro { color: DarkMagenta; }. #tooltiphint {; position: fixed;; width: 50em;; margin-left: -25em;; left: 50%;; padding: 10px;; border: 1px solid #b0b0b0;; border-radius: 2px;; box-shadow: 1px 1px 7px black;; background-color: #c0c0c0;; z-index: 2;; }. .num { width:2.5em; padding-right:2ex; background-color:#eeeeee }; .num { text-align:right; font-size:8pt }; .num { color:#444444 }; .line { padding-left: 1ex; border-left: 3px solid #ccc }; .line { white-space: pre }; .msg { -webkit-box-shadow:1px 1px 7px #000 }; .msg { box-shadow:1px 1px 7px #000 }; .msg { -webkit-border-radius:5px }; .msg { border-radius:5px }; .msg { font-family:Helvetica, sans-serif; font-size:8pt }; .msg { float:left }; .msg { position:relative }; .msg { padding:0.25em 1ex 0.25em 1ex }; .msg { margin-top:10px; margin-bottom:10px }; .msg { font-weight:bold }; .msg { max-width:60em; word-wrap: break-word; white-space: pre-wrap }; .msgT { padding:0x; spacing:0x }; .msgEvent { backgro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp:1598,variab,variable,1598,interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp,1,['variab'],['variable']
Modifiability,"ooks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 are not equal, the FFT sees a cyclical function with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// The spillover or discontinuity can be reduced or eliminated by; /// introducing a buffer zone in the FFT calculation. If this feature is activated (on by default),; /// the sampling array for the FFT calculation is extended in both directions,; /// and padded with the lowest/highest bin.; /// Example:; /// ```; /// original: -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5; /// add buffer zones: U U -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5 O O; /// rotate: 0 +1 +2 +3 +4 +5 O O U U -5 -4 -3 -2 -1; /// ```; /// The buffer bins are stripped away when the FFT output values; /// are transferred back to the p.d.f cache. The default buffer size is 10% of the; /// observable domain size, and can be changed with the `setBufferFraction()` member function.; ///; /// The RooFFTConvPdf uses caching inherited from a RooAbsCachedPdf. If it is; /// evaluated for a particular value of x, the FFT and convolution is calculated; /// for all bins in the observable space for the given choice of parameters,; /// which are also stored in the cache. Subsequent evaluations for different values of the convolution observable and; /// identical parameters will be retrieved from the cache. If one or more; /// of the parameters change, the cache will be updated, *i.e.*, a new FFT runs.; ///; /// The sampling density of the FFT is controlled by the binning of the; /// the convolution observable, which can be changed using RooRealVar::setBins(N).; /// For good results, N should be large (>=1000). Additional interpolation; /// between the bins may improve the result if coarse binnings are chosen. These can be; /// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:2907,inherit,inherited,2907,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,1,['inherit'],['inherited']
Modifiability,"op plugin; directory specified in $ROOTSYS/etc/system.rootrc. Additional; directories can be specified by adding them to the end of the list.; Macros for identical plugin handlers in later directories will; override previous ones (the inverse of normal search path behavior).; The macros must have names like `<BaseClass>/PX0_<PluginClass>.C`,; e.g. TSQLServer/P20_TMySQLServer.C, to allow easy sorting and grouping.; If the BaseClass is in a namespace the directory must have the name; NameSpace@@BaseClass as `:` is a reserved pathname character on some; operating systems. Macros not beginning with 'P' and ending with "".C""; are ignored. These macros typically look like:; ~~~ {.cpp}; void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*)"");; }; ~~~; Plugin handlers can also be defined via resources in the .rootrc; file. Although now deprecated this method still works for backward; compatibility, e.g.:; ~~~ {.cpp}; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""<constructor>""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""<constructor>""; Plugin.TVirtualFitter: * TFitter Minuit ""TFitter(Int_t)""; ~~~; Where the + in front of Plugin.TSQLServer says that it extends the; existing definition of TSQLServer, useful when there is more than; one plugin that can extend the same base class. The ""<constructor>""; should be the constructor or a static method that generates an; instance of the specified class. Global methods should start with; ""::"" in their name, like ""::CreateFitter()"".; Instead of being a shared library a plugin can also be a CINT; script, so instead of libDialog.so one can have Dialog.C.; The * is a placeholder in case there is no need for a URI to; differentiate between different plugins for the same base class.; For the default plugins see $ROOTSYS/etc/system.rootrc. Plugin handlers can also be registered at run time, e.g.:; ~~~ {.cpp}; gPluginMgr->AddHandler(""TSQLServer"", ""^sqlite:"",; ""TS",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:2132,Plugin,Plugin,2132,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['Plugin'],['Plugin']
Modifiability,"opyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodDT; \ingroup TMVA. Analysis of Boosted Decision Trees. Boosted decision trees have been successfully used in High Energy; Physics analysis for example by the MiniBooNE experiment; (Yang-Roe-Zhu, physics/0508045). In Boosted Decision Trees, the; selection is done on a majority vote on the result of several decision; trees, which are all derived from the same training sample by; supplying different event weights during the training. ### Decision trees:. successive decision nodes are used to categorize the; events out of the sample as either signal or background. Each node; uses only a single discriminating variable to decide if the event is; signal-like (""goes right"") or background-like (""goes left""). This; forms a tree like structure with ""baskets"" at the end (leave nodes),; and an event is classified as either signal or background according to; whether the basket where it ends up has been classified signal or; background during the training. Training of a decision tree is the; process to define the ""cut criteria"" for each node. The training; starts with the root node. Here one takes the full training event; sample and selects the variable and corresponding cut value that gives; the best separation between signal and background at this stage. Using; this cut criterion, the sample is then divided into two subsamples, a; signal-like (right) and a background-like (left) sample. Two new nodes; are then created for each of the two sub-samples and they are; constructed using the same mechanism as described for the root; node. The devision is stopped once a certain node has reached either a; minimum number of events, ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx:1591,variab,variable,1591,tmva/tmva/src/MethodDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx,1,['variab'],['variable']
Modifiability,"ortran common; blocks (like TPythia, TVenus does), one better make the derived; class a singleton. That is, something like; ; \verbatim; class MyGenerator : public TGenerator ; { ; public: ; static MyGenerator* Instance() ; { ; if (!fgInstance) fgInstance = new MyGenerator; ; return fgInstance; ; } ; void GenerateEvent() { ... } ; void ImportParticles(TClonesArray* a, Option_t opt="""") {...} ; Int_t ImportParticles(Option_t opt="""") { ... } ; Int_t SetParameter(const char* name, Double_t val) { ... } ; Double_t GetParameter(const char* name) { ... } ; virtual ~MyGenerator() { ... } ; protected: ; MyGenerator() { ... } ; MyGenerator(const MyGenerator& o) { ... } ; MyGenerator& operator=(const MyGenerator& o) { ... } ; static MyGenerator* fgInstance; ; ClassDefOverride(MyGenerator,0); ; }; ; \endverbatim; ; Having multiple objects accessing the same common blocks is not ; safe. ; ; Concrete TGenerator classes can be loaded in scripts and subseqent- ; ly used in compiled code: ; ; \verbatim; // MyRun.h ; class MyRun : public TObject ; { ; public: ; static MyRun* Instance() { ... } ; void SetGenerator(TGenerator* g) { fGenerator = g; } ; void Run(Int_t n, Option_t* option="""") ; { ; TFile* file = TFile::Open(""file.root"",""RECREATE""); ; TTree* tree = new TTree(""T"",""T""); ; TClonesArray* p = new TClonesArray(""TParticles""); ; tree->Branch(""particles"", &p); ; for (Int_t event = 0; event < n; event++) { ; fGenerator->GenerateEvent(); ; fGenerator->ImportParticles(p,option); ; tree->Fill(); ; } ; file->Write(); ; file->Close(); ; } ; ... ; protected: ; TGenerator* fGenerator; ; ClassDefOverride(MyRun,0); ; }; ; ; // Config.C ; void Config() ; { ; MyRun* run = MyRun::Instance(); ; run->SetGenerator(MyGenerator::Instance()); ; } ; ; // main.cxx ; int ; main(int argc, char** argv) ; { ; TApplication app("""", 0, 0); ; gSystem->ProcessLine("".x Config.C""); ; MyRun::Instance()->Run(10); ; return 0; ; } ; \endverbatim; ; This is especially useful for example with TVirtualMC or similar.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/src/TGenerator.cxx:3657,Config,Config,3657,montecarlo/eg/src/TGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/src/TGenerator.cxx,3,['Config'],['Config']
Modifiability,"osen state that evaluates; /// to \f$ 1 - \sum_i(a_i) \f$ where \f$ a_i \f$ are all other specializations. For example,; /// given a category \f$ c \f$ with the states `""A"",""B"",""C"",""D""`, the specification; /// ```; /// SplitParamConstrained(""m"",""c"",""D""); /// ```; /// will create the parameters \f$ m_A,m_B,m_C \f$ and a formula expression \f$ m_D \f$; /// that evaluates to \f$ (1-(m_A+m_B+m_C)) \f$. Constrained splits can also be; /// specified in the product of categories. In that case, the name of the; /// remainder state follows the syntax `""{State1;State2}""`, where `State1` and; /// `State2` are the state names of the two spitting categories.; ///; /// ## Splitting multiple PDFs; /// The examples so far deal with a single prototype PDF. It is also; /// possible to build with multiple prototype PDFs by specifying a; /// mapping between the prototype to use and the names of states of; /// a ""master"" splitting category. To specify these configurations,; /// an intermediate `MultiBuildConfig` must be composed with all; /// the necessary specifications. This, for example,; /// ```; /// RooSimWSTool::MultiBuildConfig mbc(""mc"");; /// mbc.addPdf(""I"",""G"",SplitParam(""m,s"",""c""));; /// mbc.addPdf(""II,III"",""F"",SplitParam(""a"",""c,d""));; /// ```; /// configures a build with two prototype PDFs \f$ G \f$ and \f$ F \f$.; /// Prototype \f$ G \f$ is used for state `""I""` of the master split category; /// `mc` and prototype \f$ F \f$ is used for states `""II""` and `""III""` of the; /// master split category `mc`. Furthermore, the parameters \f$ m,s \f$ of; /// prototype \f$ G \f$ are split; /// in category \f$ c \f$ while the parameter \f$ a \f$ of prototype \f$ F \f$ is split in; /// the product of the categories \f$ c \f$ and \f$ d \f$. The actual build is then; /// performed by passing the build configuration to RooSimWSTool, *e.g.*,; /// ```; /// wst.build(""MASTER"", mbc);; /// ```; /// By default, a specialisation is built for each permutation of; /// states of the splitting categorie",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:3381,config,configurations,3381,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['config'],['configurations']
Modifiability,"otes / limitations; // A single LDS global variable represents an instance per kernel that can reach; // said variables. This pass essentially specialises said variables per kernel.; // Handling ConstantExpr during the pass complicated this significantly so now; // all ConstantExpr uses of LDS variables are expanded to instructions. This; // may need amending when implementing non-undef initialisers.; //; // Lowering is split between this IR pass and the back end. This pass chooses; // where given variables should be allocated and marks them with metadata,; // MD_absolute_symbol. The backend places the variables in coincidentally the; // same location and raises a fatal error if something has gone awry. This works; // in practice because the only pass between this one and the backend that; // changes LDS is PromoteAlloca and the changes it makes do not conflict.; //; // Addresses are written to constant global arrays based on the same metadata.; //; // The backend lowers LDS variables in the order of traversal of the function.; // This is at odds with the deterministic layout required. The workaround is to; // allocate the fixed-address variables immediately upon starting the function; // where they can be placed as intended. This requires a means of mapping from; // the function to the variables that it allocates. For the module scope lds,; // this is via metadata indicating whether the variable is not required. If a; // pass deletes that metadata, a fatal error on disagreement with the absolute; // symbol metadata will occur. For kernel scope and dynamic, this is by _name_; // correspondence between the function and the variable. It requires the; // kernel to have a name (which is only a limitation for tests in practice) and; // for nothing to rename the corresponding symbols. This is a hazard if the pass; // is run multiple times during debugging. Alternative schemes considered all; // involve bespoke metadata.; //; // If the name correspondence can be replaced, ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:8215,variab,variables,8215,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,"ound, and; therefore kept, a few implementation details have changed, and this; class can take advantage of MINUIT [4] to improve the errors; of the fitting, thanks to the class TMinuit. In [5] and [6] H. Wind demonstrates the utility; of this procedure in the context of tracking, magnetic field; parameterisation, and so on. The outline of the method used in this; class is based on Winds discussion, and I refer these two excellents; text for more information. And example of usage is given in multidimfit.C. ## The Method; Let \f$ D \f$ by the dependent quantity of interest, which depends smoothly; on the observable quantities \f$ x_1, \ldots, x_N \f$ which we'll denote by; \f$\mathbf{x}\f$. Given a training sample of \f$ M\f$ tuples of the form, (TMultiDimFit::AddRow). \f[; \left(\mathbf{x}_j, D_j, E_j\right)\quad,; \f]; where \f$\mathbf{x}_j = (x_{1,j},\ldots,x_{N,j})\f$ are \f$ N\f$ independent; variables, \f$ D_j\f$ is the known, quantity dependent at \f$\mathbf{x}_j\f$ and \f$ E_j\f$ is; the square error in \f$ D_j\f$, the class will try to find the parameterization; \f[; D_p(\mathbf{x}) = \sum_{l=1}^{L} c_l \prod_{i=1}^{N} p_{li}\left(x_i\right); = \sum_{l=1}^{L} c_l F_l(\mathbf{x}); \f]; such that. \f[; S \equiv \sum_{j=1}^{M} \left(D_j - D_p\left(\mathbf{x}_j\right)\right)^2; \f]; is minimal. Here \f$p_{li}(x_i)\f$ are monomials, or Chebyshev or Legendre; polynomials, labelled \f$l = 1, \ldots, L\f$, in each variable \f$ x_i\f$,\f$ i=1, \ldots, N\f$. So what TMultiDimFit does, is to determine the number of terms \f$ L\f$, and then \f$ L\f$ terms; (or functions) \f$ F_l\f$, and the \f$ L\f$ coefficients \f$ c_l\f$, so that \f$ S\f$ is minimal; (TMultiDimFit::FindParameterization). Of course it's more than a little unlikely that \f$ S\f$ will ever become; exact zero as a result of the procedure outlined below. Therefore, the; user is asked to provide a minimum relative error \f$ \epsilon\f$ (TMultiDimFit::SetMinRelativeError),; and \f$ S\f$ will be considered mi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:2416,variab,variables,2416,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,2,"['parameteriz', 'variab']","['parameterization', 'variables']"
Modifiability,"owering implemented here has three components.; // First kernels are assigned a unique integer identifier which is available in; // functions it calls through the intrinsic amdgcn_lds_kernel_id. The integer; // is passed through a specific SGPR, thus works with indirect calls.; // Second, each kernel allocates LDS variables independent of other kernels and; // writes the addresses it chose for each variable into an array in consistent; // order. If the kernel does not allocate a given variable, it writes undef to; // the corresponding array location. These arrays are written to a constant; // table in the order matching the kernel unique integer identifier.; // Third, uses from non-kernel functions are replaced with a table lookup using; // the intrinsic function to find the address of the variable.; //; // ""Kernel"" lowering is only applicable for variables that are unambiguously; // reachable from exactly one kernel. For those cases, accesses to the variable; // can be lowered to ConstantExpr address of a struct instance specific to that; // one kernel. This is zero cost in space and in compute. It will raise a fatal; // error on any variable that might be reachable from multiple kernels and is; // thus most easily used as part of the hybrid lowering strategy.; //; // Hybrid lowering is a mixture of the above. It uses the zero cost kernel; // lowering where it can. It lowers the variable accessed by the greatest; // number of kernels using the module strategy as that is free for the first; // variable. Any futher variables that can be lowered with the module strategy; // without incurring LDS memory overhead are. The remaining ones are lowered; // via table.; //; // Consequences; // - No heuristics or user controlled magic numbers, hybrid is the right choice; // - Kernels that don't use functions (or have had them all inlined) are not; // affected by any lowering for kernels that do.; // - Kernels that don't make indirect function calls are not affected by those; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:5080,variab,variable,5080,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variable']
Modifiability,"p the first 10 entries; *that reach this node*, let the next 40 entries pass, then stop processing"". If a range node hangs from a filter node,; and the range has a `begin` parameter of 10, that means the range will skip the first 10 entries *that pass the; preceding filter*. Ranges allow ""early quitting"": if all branches of execution of a functional graph reached their `end` value of; processed entries, the event-loop is immediately interrupted. This is useful for debugging and quick data explorations. \anchor custom-columns; ### Custom columns; Custom columns are created by invoking `Define(name, f, columnList)`. As usual, `f` can be any callable object; (function, lambda expression, functor class...); it takes the values of the columns listed in `columnList` (a list of; strings) as parameters, in the same order as they are listed in `columnList`. `f` must return the value that will be; assigned to the temporary column. A new variable is created called `name`, accessible as if it was contained in the dataset from subsequent; transformations/actions. Use cases include:; - caching the results of complex calculations for easy and efficient multiple access; - extraction of quantities of interest from complex objects; - branch aliasing, i.e. changing the name of a branch. An exception is thrown if the `name` of the new column/branch is already in use for another branch in the TTree. It is also possible to specify the quantity to be stored in the new temporary column as a C++ expression with the method; `Define(name, expression)`. For example this invocation. ~~~{.cpp}; df.Define(""pt"", ""sqrt(px*px + py*py)"");; ~~~. will create a new column called ""pt"" the value of which is calculated starting from the columns px and py. The system; builds a just-in-time compiled function starting from the expression after having deduced the list of necessary branches; from the names of the variables specified by the user. #### Custom columns as function of slot and entry number. It is po",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:32476,variab,variable,32476,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['variab'],['variable']
Modifiability,"p/bottom instructions such as VMOVLT/B and VMOVNT/B,; // which take a the top/bottom half of a larger lane and extend it (or do the; // opposite, truncating into the top/bottom lane from a larger lane). Note; // that because of the way we widen lanes, a v4i16 is really a v4i32 using the; // bottom 16bits from each vector lane. This works really well with T/B; // instructions, but that doesn't extend to v8i32->v8i16 where the lanes need; // to move order.; //; // But truncates and sext/zext are always going to be fairly common from llvm.; // We have several options for how to deal with them:; // - Wherever possible combine them into an instruction that makes them; // ""free"". This includes loads/stores, which can perform the trunc as part; // of the memory operation. Or certain shuffles that can be turned into; // VMOVN/VMOVL.; // - Lane Interleaving to transform blocks surrounded by ext/trunc. So; // trunc(mul(sext(a), sext(b))) may become; // VMOVNT(VMUL(VMOVLB(a), VMOVLB(b)), VMUL(VMOVLT(a), VMOVLT(b))). (Which in; // this case can use VMULL). This is performed in the; // MVELaneInterleavingPass.; // - Otherwise we have an option. By default we would expand the; // zext/sext/trunc into a series of lane extract/inserts going via GPR; // registers. One for each vector lane in the vector. This can obviously be; // very expensive.; // - The other option is to use the fact that loads/store can extend/truncate; // to turn a trunc into two truncating stack stores and a stack reload. This; // becomes 3 back-to-back memory operations, but at least that is less than; // all the insert/extracts.; //; // In order to do the last, we convert certain trunc's into MVETRUNC, which; // are either optimized where they can be, or eventually lowered into stack; // stores/loads. This prevents us from splitting a v8i16 trunc into two stores; // two early, where other instructions would be better, and stops us from; // having to reconstruct multiple buildvector shuffles into loads/stores.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:1756,extend,extend,1756,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['extend'],['extend']
Modifiability,"parblock; /// A string that takes one of these general forms:; /// - ""e1"" produces a 1-d histogram (TH1F) of expression ""e1""; /// - ""e1:e2"" produces an unbinned 2-d scatter-plot (TGraph) of ""e1""; /// on the y-axis versus ""e2"" on the x-axis; /// - ""e1:e2:e3"" produces an unbinned 3-d scatter-plot (TPolyMarker3D) of ""e1""; /// vs ""e2"" vs ""e3"" on the z-, y-, x-axis, respectively; /// - ""e1:e2:e3:e4"" produces an unbinned 3-d scatter-plot (TPolyMarker3D) of ""e1""; /// vs ""e2"" vs ""e3"" and ""e4"" mapped on the current color palette.; /// (to create histograms in the 2, 3, and 4 dimensional case,; /// see section ""Saving the result of Draw to an histogram""); /// - ""e1:e2:e3:e4:e5"" with option ""GL5D"" produces a 5D plot using OpenGL. `gStyle->SetCanvasPreferGL(true)` is needed.; /// - Any number of variables no fewer than two can be used with the options ""CANDLE"" and ""PARA""; /// - An arbitrary number of variables can be used with the option ""GOFF""; ///; /// Examples:; /// - ""x"": the simplest case, it draws a 1-Dim histogram of column x; /// - ""sqrt(x)"", ""x*y/z"": draw histogram with the values of the specified numerical expression across TTree events; /// - ""y:sqrt(x)"": 2-Dim histogram of y versus sqrt(x); /// - ""px:py:pz:2.5*E"": produces a 3-d scatter-plot of px vs py ps pz; /// and the color number of each marker will be 2.5*E.; /// If the color number is negative it is set to 0.; /// If the color number is greater than the current number of colors; /// it is set to the highest color number. The default number of; /// colors is 50. See TStyle::SetPalette for setting a new color palette.; ///; /// The expressions can use all the operations and built-in functions; /// supported by TFormula (see TFormula::Analyze()), including free; /// functions taking numerical arguments (e.g. TMath::Bessel()).; /// In addition, you can call member functions taking numerical; /// arguments. For example, these are two valid expressions:; /// ~~~ {.cpp}; /// TMath::BreitWigner(fPx,3,2); /// event.Get",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1100,variab,variables,1100,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,['variab'],['variables']
Modifiability,"paths through; // preferred traces. This is useful for super-scalar CPUs where execution speed; // can be limited both by data dependencies and by limited execution resources.; //; // Out-of-order CPUs will often be executing instructions from multiple basic; // blocks at the same time. This makes it difficult to estimate the resource; // usage accurately in a single basic block. Resources can be estimated better; // by looking at a trace through the current basic block.; //; // For every block, the MachineTraceMetrics pass will pick a preferred trace; // that passes through the block. The trace is chosen based on loop structure,; // branch probabilities, and resource usage. The intention is to pick likely; // traces that would be the most affected by code transformations.; //; // It is expensive to compute a full arbitrary trace for every block, so to; // save some computations, traces are chosen to be convergent. This means that; // if the traces through basic blocks A and B ever cross when moving away from; // A and B, they never diverge again. This applies in both directions - If the; // traces meet above A and B, they won't diverge when going further back.; //; // Traces tend to align with loops. The trace through a block in an inner loop; // will begin at the loop entry block and end at a back edge. If there are; // nested loops, the trace may begin and end at those instead.; //; // For each trace, we compute the critical path length, which is the number of; // cycles required to execute the trace when execution is limited by data; // dependencies only. We also compute the resource height, which is the number; // of cycles required to execute all instructions in the trace when ignoring; // data dependencies.; //; // Every instruction in the current block has a slack - the number of cycles; // execution of the instruction can be delayed without extending the critical; // path.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h:2406,extend,extending,2406,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineTraceMetrics.h,1,['extend'],['extending']
Modifiability,"plot them as a graph, you should rather use TGraphAsymmErrors::TGraphAsymmErrors(const TH1* pass,const TH1* total,Option_t* opt); to create a graph object. \anchor EFF03; ## III. Filling with events; You can fill the TEfficiency object by calling the TEfficiency::Fill(Bool_t bPassed,Double_t x,Double_t y,Double_t z) method.; The ""bPassed"" boolean flag indicates whether the current event is good; (both histograms are filled) or not (only TEfficiency::fTotalHistogram is filled).; The x, y and z variables determine the bin which is filled. For lower dimensions, the z- or even the y-value may be omitted. Begin_Macro(source); {; //canvas only needed for this documentation; TCanvas* c1 = new TCanvas(""example"","""",600,400);; c1->SetFillStyle(1001);; c1->SetFillColor(kWhite);. //create one-dimensional TEfficiency object with fixed bin size; TEfficiency* pEff = new TEfficiency(""eff"",""my efficiency;x;#epsilon"",20,0,10);; TRandom3 rand3;. bool bPassed;; double x;; for(int i=0; i<10000; ++i); {; //simulate events with variable under investigation; x = rand3.Uniform(10);; //check selection: bPassed = DoesEventPassSelection(x); bPassed = rand3.Rndm() < TMath::Gaus(x,5,4);; pEff->Fill(bPassed,x);; }. pEff->Draw(""AP"");; }; End_Macro. You can also set the number of passed or total events for a bin directly by; using the TEfficiency::SetPassedEvents or TEfficiency::SetTotalEvents method. \anchor EFF04; ## IV. Statistic options; The calculation of the estimated efficiency depends on the chosen statistic; option. Let k denotes the number of passed events and N the number of total; events. \anchor EFF04a; ### Frequentist methods; The expectation value of the number of passed events is given by the true; efficiency times the total number of events. One can estimate the efficiency; by replacing the expected number of passed events by the observed number of; passed events. \f[; k = \epsilon \times N \Rightarrow \hat{\varepsilon} = \frac{k}{N}; \f]. \anchor EFF04b; ### Bayesian methods; In Ba",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:6214,variab,variable,6214,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['variab'],['variable']
Modifiability,"pressions using; /// that variable get invalidated. LiveDebugValues can map onto ""available; /// expressions"" by having every register represented by a variable, which is; /// used in an expression that becomes available at a DBG_VALUE instruction.; /// When the register is clobbered, its variable is effectively reassigned, and; /// expressions computed from it become unavailable. A similar construct is; /// needed when a DebugVariable has its location re-specified, to invalidate; /// all other locations for that DebugVariable.; ///; /// Using the dataflow analysis to compute the available expressions, we create; /// a DBG_VALUE at the beginning of each block where the expression is; /// live-in. This propagates variable locations into every basic block where; /// the location can be determined, rather than only having DBG_VALUEs in blocks; /// where locations are specified due to an assignment or some optimization.; /// Movements of values between registers and spill slots are annotated with; /// DBG_VALUEs too to track variable values bewteen locations. All this allows; /// DbgEntityHistoryCalculator to focus on only the locations within individual; /// blocks, facilitating testing and improving modularity.; ///; /// We follow an optimisic dataflow approach, with this lattice:; ///; /// \verbatim; /// ┬ ""Unknown""; /// |; /// v; /// True; /// |; /// v; /// ⊥ False; /// \endverbatim With ""True"" signifying that the expression is available (and; /// thus a DebugVariable's location is the corresponding register), while; /// ""False"" signifies that the expression is unavailable. ""Unknown""s never; /// survive to the end of the analysis (see below).; ///; /// Formally, all DebugVariable locations that are live-out of a block are; /// initialized to \top. A blocks live-in values take the meet of the lattice; /// value for every predecessors live-outs, except for the entry block, where; /// all live-ins are \bot. The usual dataflow propagation occurs: the transfer; /// funct",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:2487,variab,variable,2487,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"protocol changed; // 3 -> 4: introduction of multi-level-master support; // 4 -> 5: added friends support; // 5 -> 6: drop TFTP, support for asynchronous queries; // 6 -> 7: support for multisessions, archieve, retrieve, ...; // 7 -> 8: return number of entries in GetNextPacket; // 8 -> 9: support for stateless connection via xproofd; // 9 -> 10: new features requested, tested at CAF; // 10 -> 11: new merging strategy; // 11 -> 12: new progress message; // 12 -> 13: exchange version/architecture/compiler info; // 13 -> 14: new proofserv environment setting; // 14 -> 15: add support for entry lists; new version of TFileInfo; // 15 -> 16: add support for generic non-data based processing; // 16 -> 17: new dataset handling system; support for TFileCollection processing; // 17 -> 18: support for reconnection on daemon restarts; // 18 -> 19: TProofProgressStatus used in kPROOF_PROGRESS, kPROOF_STOPPROCESS; // and kPROOF_GETNEXTPACKET messages in Master - worker communication; // 19 -> 20: Fix the asynchronous mode (required changes in some messages); // 20 -> 21: Add support for session queuing; // 21 -> 22: Add support for switching from sync to async while running ('Ctrl-Z' functionality); // 22 -> 23: New dataset features (default tree name; classification per fileserver); // 23 -> 24: Merging optimization; // 24 -> 25: Handling of 'data' dir; group information; // 25 -> 26: Use new TProofProgressInfo class; // 26 -> 27: Use new file for updating the session status; // 27 -> 28: Support for multi-datasets, fix global pack dirs, fix AskStatistics,; // package download, dataset caching; // 28 -> 29: Support for config parameters in EnablePackage, idle-timeout; // 29 -> 30: Add information about data dir in TSlaveInfo; // 30 -> 31: Development cycle 5.29; // 31 -> 32: New log path trasmission; // 32 -> 33: Development cycle 5.29/04 (fixed worker activation, new startup technology, ...); // 33 -> 34: Development cycle 5.33/02 (fix load issue, ...); // 34 -> 35: Development",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:1755,config,config,1755,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['config'],['config']
Modifiability,"ption; //; //===----------------------------------------------------------------------===//; //; // Transform each threading path to effectively jump thread the DFA. For; // example, the CFG below could be transformed as follows, where the cloned; // blocks unconditionally branch to the next correct case based on what is; // identified in the analysis.; //; // sw.bb sw.bb; // / | \ / | \; // case1 case2 case3 case1 case2 case3; // \ | / | | |; // determinator det.2 det.3 det.1; // br sw.bb / | \; // sw.bb.2 sw.bb.3 sw.bb.1; // br case2 br case3 br case1§; //; // Definitions and Terminology:; //; // * Threading path:; // a list of basic blocks, the exit state, and the block that determines; // the next state, for which the following notation will be used:; // < path of BBs that form a cycle > [ state, determinator ]; //; // * Predictable switch:; // The switch variable is always a known constant so that all conditional; // jumps based on switch variable can be converted to unconditional jump.; //; // * Determinator:; // The basic block that determines the next state of the DFA.; //; // Representing the optimization in C-like pseudocode: the code pattern on the; // left could functionally be transformed to the right pattern if the switch; // condition is predictable.; //; // X = A goto A; // for (...) A:; // switch (X) ...; // case A goto B; // X = B B:; // case B ...; // X = C goto C; //; // The pass first checks that switch variable X is decided by the control flow; // path taken in the loop; for example, in case B, the next value of X is; // decided to be C. It then enumerates through all paths in the loop and labels; // the basic blocks where the next state is decided.; //; // Using this information it creates new paths that unconditionally branch to; // the next case. This involves cloning code, so it only gets triggered if the; // amount of code duplicated is below a threshold.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp:1731,variab,variable,1731,interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/DFAJumpThreading.cpp,1,['variab'],['variable']
Modifiability,"quivalently function local; // static variables, accessible from kernels or other functions. For uses from; // kernels this is straightforward - assign an integer to the kernel for the; // memory required by all the variables combined, allocate them within that.; // For uses from functions there are performance tradeoffs to choose between.; //; // This model means the GPU runtime can specify the amount of memory allocated.; // If this is more than the kernel assumed, the excess can be made available; // using a language specific feature, which IR represents as a variable with; // no initializer. This feature is referred to here as ""Dynamic LDS"" and is; // lowered slightly differently to the normal case.; //; // Consequences of this GPU feature:; // - memory is limited and exceeding it halts compilation; // - a global accessed by one kernel exists independent of other kernels; // - a global exists independent of simultaneous execution of the same kernel; // - the address of the global may be different from different kernels as they; // do not alias, which permits only allocating variables they use; // - if the address is allowed to differ, functions need help to find it; //; // Uses from kernels are implemented here by grouping them in a per-kernel; // struct instance. This duplicates the variables, accurately modelling their; // aliasing properties relative to a single global representation. It also; // permits control over alignment via padding.; //; // Uses from functions are more complicated and the primary purpose of this; // IR pass. Several different lowering are chosen between to meet requirements; // to avoid allocating any LDS where it is not necessary, as that impacts; // occupancy and may fail the compilation, while not imposing overhead on a; // feature whose primary advantage over global memory is performance. The basic; // design goal is to avoid one kernel imposing overhead on another.; //; // Implementation.; //; // LDS variables with constant annota",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:1690,variab,variables,1690,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,"r DBG_VALUE_LIST), and the DBG_VALUE inst that; /// specifies the location. Each VarLoc is indexed in the (function-scope) \p; /// VarLocMap, giving each VarLoc a set of unique indexes, each of which; /// corresponds to one of the VarLoc's machine-locations and can be used to; /// lookup the VarLoc in the VarLocMap. Rather than operate directly on machine; /// locations, the dataflow analysis in this pass identifies locations by their; /// indices in the VarLocMap, meaning all the variable locations in a block can; /// be described by a sparse vector of VarLocMap indicies.; ///; /// All the storage for the dataflow analysis is local to the ExtendRanges; /// method and passed down to helper methods. ""OutLocs"" and ""InLocs"" record the; /// in and out lattice values for each block. ""OpenRanges"" maintains a list of; /// variable locations and, with the ""process"" method, evaluates the transfer; /// function of each block. ""flushPendingLocs"" installs debug value instructions; /// for each live-in location at the start of blocks, while ""Transfers"" records; /// transfers of values between machine-locations.; ///; /// We avoid explicitly representing the ""Unknown"" (\top) lattice value in the; /// implementation. Instead, unvisited blocks implicitly have all lattice; /// values set as ""Unknown"". After being visited, there will be path back to; /// the entry block where the lattice value is ""False"", and as the transfer; /// function cannot make new ""Unknown"" locations, there are no scenarios where; /// a block can have an ""Unknown"" location after being visited. Similarly, we; /// don't enumerate all possible variable locations before exploring the; /// function: when a new location is discovered, all blocks previously explored; /// were implicitly ""False"" but unrecorded, and become explicitly ""False"" when; /// a new VarLoc is created with its bit not set in predecessor InLocs or; /// OutLocs.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:6179,variab,variable,6179,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"r comparison two (unweighted) histograms:; /// Let us consider two histograms with the same binning and the number; /// of bins equal to r. Let us denote the number of events in the ith bin; /// in the first histogram as ni and as mi in the second one. The total; /// number of events in the first histogram is equal to:; /// \f[; /// N = \sum_{i=1}^{r} n_{i}; /// \f]; /// and; /// \f[; /// M = \sum_{i=1}^{r} m_{i}; /// \f]; /// in the second histogram. The hypothesis of identity (homogeneity) [3]; /// is that the two histograms represent random values with identical; /// distributions. It is equivalent that there exist r constants p1,...,pr,; /// such that; /// \f[; ///\sum_{i=1}^{r} p_{i}=1; /// \f]; /// and the probability of belonging to the ith bin for some measured value; /// in both experiments is equal to pi. The number of events in the ith; /// bin is a random variable with a distribution approximated by a Poisson; /// probability distribution; /// \f[; ///\frac{e^{-Np_{i}}(Np_{i})^{n_{i}}}{n_{i}!}; /// \f]; ///for the first histogram and with distribution; /// \f[; ///\frac{e^{-Mp_{i}}(Mp_{i})^{m_{i}}}{m_{i}!}; /// \f]; /// for the second histogram. If the hypothesis of homogeneity is valid,; /// then the maximum likelihood estimator of pi, i=1,...,r, is; /// \f[; ///\hat{p}_{i}= \frac{n_{i}+m_{i}}{N+M}; /// \f]; /// and then; /// \f[; /// X^{2} = \sum_{i=1}^{r}\frac{(n_{i}-N\hat{p}_{i})^{2}}{N\hat{p}_{i}} + \sum_{i=1}^{r}\frac{(m_{i}-M\hat{p}_{i})^{2}}{M\hat{p}_{i}} =\frac{1}{MN} \sum_{i=1}^{r}\frac{(Mn_{i}-Nm_{i})^{2}}{n_{i}+m_{i}}; /// \f]; /// has approximately a \f$ \chi^{2}_{(r-1)} \f$ distribution [3].; /// The comparison procedure can include an analysis of the residuals which; /// is often helpful in identifying the bins of histograms responsible for; /// a significant overall \f$ \chi^{2} \f$ value. Most convenient for; /// analysis are the adjusted (normalized) residuals [4]; /// \f[; /// r_{i} = \frac{n_{i}-N\hat{p}_{i}}{\sqrt{N\hat{p}_{i}}\sqrt{(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:4005,variab,variable,4005,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variable']
Modifiability,"r to create the `Plain` style. ```; auto plain = new TStyle(""Plain"",""Plain Style (no colors/fill areas)"");. plain->SetCanvasBorderMode(0);; plain->SetPadBorderMode(0);; plain->SetPadColor(0);; plain->SetCanvasColor(0);; plain->SetTitleColor(0);; plain->SetStatColor(0);; ```. You can set the current style with:. ```; gROOT->SetStyle(style_name);; ```. You can get a pointer to an existing style with:. ```; auto style = gROOT->GetStyle(style_name);; ```. You can create additional styles with:. ```; TStyle *st1 = new TStyle(""st1"",""my style"");; st1->Set....; st1->cd(); this becomes now the current style gStyle; ```. In your [rootlogon.C](https://root.cern/doc/master/classexamples/startsession.log.html); file, you can redefine the default parameters via statements like:. ```; gStyle->SetStatX(0.7);; gStyle->SetStatW(0.2);; gStyle->SetLabelOffset(1.2);; gStyle->SetLabelFont(72);; ```. Note that when an object is created, its attributes are taken from the current; style. For example, you may have created an histogram in a previous session,; saved it in a file. Meanwhile, if you have changed the style, the histogram will; be drawn with the old attributes. You can force the current style attributes to; be set when you read an object from a file by calling:. ```; gROOT->ForceStyle();; ```. before reading the objects from the file. Let's assume you have a canvas or pad with your histogram or any other object,; you can force these objects to get the attributes of the current style via:. ```; canvas->UseCurrentStyle();; ```. The description of the style functions should be clear from the name of the; TStyle Setters or Getters. Some functions have an extended description, in particular:. - TStyle:SetLabelFont.; - TStyle:SetLineStyleString, to set the format of dashed lines.; - TStyle:SetOptStat.; - TStyle:SetPalette to change the colors palette.; - TStyle:SetTitleOffset. */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStyle.cxx:2811,extend,extended,2811,core/base/src/TStyle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStyle.cxx,1,['extend'],['extended']
Modifiability,"r-Discriminant implementation: *; * Andre Gaidot, CEA-France; *; * (Translation from FORTRAN) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodFisher; \ingroup TMVA. Fisher and Mahalanobis Discriminants (Linear Discriminant Analysis). In the method of Fisher discriminants event selection is performed; in a transformed variable space with zero linear correlations, by; distinguishing the mean values of the signal and background; distributions. The linear discriminant analysis determines an axis in the (correlated); hyperspace of the input variables; such that, when projecting the output classes (signal and background); upon this axis, they are pushed as far as possible away from each other,; while events of a same class are confined in a close vicinity.; The linearity property of this method is reflected in the metric with; which ""far apart"" and ""close vicinity"" are determined: the covariance; matrix of the discriminant variable space. The classification of the events in signal and background classes; relies on the following characteristics (only): overall sample means, \f$ x_i \f$,; for each input variable, \f$ i \f$,; class-specific sample means, \f$ x_{S(B),i}\f$,; and total covariance matrix \f$ T_{ij} \f$. The covariance matrix; can be decomposed into the sum of a _within_ (\f$ W_{ij} \f$); and a _between-class_ (\f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx:1406,variab,variable,1406,tmva/tmva/src/MethodFisher.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx,1,['variab'],['variable']
Modifiability,"rName`. For example, `kP6Red` represents the red color within the P6 color scheme; (`P` for Petroff or Preferred). Begin_Macro; ../../../tutorials/graphics/accessiblecolorschemes.C; End_Macro. The example thstackcolorscheme.C illustrates how to use these color schemes in THStack drawings.; It also demonstrates that they are effective in grayscale. \anchor C04; ## Grayscale view of of canvas with colors; One can toggle between a grayscale preview and the regular colored mode using; `TCanvas::SetGrayscale()`. Note that in grayscale mode, access via RGB; will return grayscale values according to ITU standards (and close to b&w; printer gray-scales), while access via HLS returns de-saturated gray-scales. The; image below shows the ROOT color wheel in grayscale mode. Begin_Macro(source); {; auto w = new TColorWheel();; auto cw = new TCanvas(""cw"",""cw"",0,0,400,400);; cw->GetCanvas()->SetGrayscale();; w->SetCanvas(cw);; w->Draw();; }; End_Macro. \anchor C05; ## Color palettes; It is often very useful to represent a variable with a color map. The concept; of ""color palette"" allows to do that. One color palette is active at any time.; This ""current palette"" is set using:. ~~~ {.cpp}; gStyle->SetPalette(...);; ~~~. This function has two parameters: the number of colors in the palette and an; array of containing the indices of colors in the palette. The following small; example demonstrates how to define and use the color palette:. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",0,0,600,400);; TF2 *f1 = new TF2(""f1"",""0.1+(1-(x-2)*(x-2))*(1-(y-2)*(y-2))"",1,3,1,3);; Int_t palette[5];; palette[0] = 15;; palette[1] = 20;; palette[2] = 23;; palette[3] = 30;; palette[4] = 32;; gStyle->SetPalette(5,palette);; f1->Draw(""colz"");; return c1;; }; End_Macro. To define more a complex palette with a continuous gradient of color, one; should use the static function `TColor::CreateGradientColorTable()`.; The following example demonstrates how to proceed:. Begin_Macro(source); {; auto c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:6013,variab,variable,6013,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['variab'],['variable']
Modifiability,"ram with the fitted function; /// normalized to the number of selected rows; /// and multiplied by the bin width; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~{.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~{.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup, parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~{.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""f1"", ""jpsimass"", ""jpsipt>3.0"");; /// ~~~; ///; /// 1, 2 and 3 Dimensional fits are supported.; /// See also TTree::Fit; ///; /// ### Return status; ///; /// The function return the status of the fit in the following form; /// ~~~{.cpp}; /// fitResult = migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult; /// ~~~; /// - The fitResult is 0 is the fit is OK.; /// - The fitResult is negative in case of an error not connected with the fit.; /// - The number of entries used in the fit can be obtained via; /// ~~~{.cpp}; /// mytree.GetSelectedRows();; /// ~~~; /// - If the number of selected entries is null the function returns -1; ///; /// new implementation using new Fitter classes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1738,variab,variable,1738,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['variab'],['variable']
Modifiability,"ram-Schmidt Orthogonalisation; To further reduce the number of functions in the final expression,; only those functions that significantly reduce \f$ S\f$ is chosen. What; `significant' means, is chosen by the user, and will be; discussed below (see [2.3](TMultiFimFit.html#sec:selectiondetail)). The functions \f$ F_l\f$ are generally not orthogonal, which means one will; have to evaluate all possible \f$ F_l\f$'s over all data-points before; finding the most significant [1]. We can, however, do; better then that. By applying the *modified Gram-Schmidt; orthogonalisation* algorithm [5] [3] to the; functions \f$ F_l\f$, we can evaluate the contribution to the reduction of; \f$ S\f$ from each function in turn, and we may delay the actual inversion; of the curvature-matrix (TMultiDimFit::MakeGramSchmidt). So we are let to consider an \f$ M\times L\f$ matrix \f$\mathsf{F}\f$, an; element of which is given by; \f[; f_{jl} = F_j\left(x_{1j} , x_{2j}, \ldots, x_{Nj}\right); = F_l(\mathbf{x}_j)\, \quad\mbox{with}~j=1,2,\ldots,M,; \f]; where \f$ j\f$ labels the \f$ M\f$ rows in the training sample and \f$ l\f$ labels; \f$ L\f$ functions of \f$ N\f$ variables, and \f$ L \leq M\f$. That is, \f$ f_{jl}\f$ is; the term (or function) numbered \f$ l\f$ evaluated at the data point; \f$ j\f$. We have to normalise \f$\mathbf{x}_j\f$ to \f$ [-1,1]\f$ for this to; succeed [5] (TMultiDimFit::MakeNormalized). We then define a; matrix \f$\mathsf{W}\f$ of which the columns \f$\mathbf{w}_j\f$ are given by; \f{eqnarray*}{; \mathbf{w}_1 &=& \mathbf{f}_1 = F_1\left(\mathbf x_1\right)\\; \mathbf{w}_l &=& \mathbf{f}_l - \sum^{l-1}_{k=1} \frac{\mathbf{f}_l \bullet; \mathbf{w}_k}{\mathbf{w}_k^2}\mathbf{w}_k\,.; \f}; and \f$\mathbf{w}_{l}\f$ is the component of \f$\mathbf{f}_{l} \f$ orthogonal; to \f$\mathbf{w}_{1}, \ldots, \mathbf{w}_{l-1}\f$. Hence we obtain [3],; \f[; \mathbf{w}_k\bullet\mathbf{w}_l = 0\quad\mbox{if}~k \neq l\quad.; \f]; We now take as a new model \f$\mathsf{W}\mathbf{a}\f$. We t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:6614,variab,variables,6614,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variables']
Modifiability,"ransforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example 1 - script Transform2.c:; ///; /// \image html spectrum2transform_transform_image002.jpg Fig. 1 Original two-dimensional noisy spectrum; ///; /// \image html spectrum2transform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform. Energy of the transformed data is concentrated around the beginning of the coordinate system; ///; /// #### Script:; ///; /// Example to illustrate Transform function (class TSpectrumTransform2).; /// To execute this example, do; ///; /// `root > .x Transform2.C`; ///; /// ~~~ {.cpp}; /// void Transform2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1884,adapt,adaptive,1884,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,1,['adapt'],['adaptive']
Modifiability,"ration are used to implement lazy evaluation of; /// && and ||. When the left hand of the expression if false; /// (respectively true), the evaluation of the right is entirely skipped; /// (since it would not change the value of the expression).; ///; /// && 142 11 (one operation on right) 142 21 (2 operations on right); /// || 142 12 (one operation on right) 142 22 (2 operations on right); ///; /// * functions calls (kFunctionCall) :; ///; /// f0 145 0 f1 145 1 etc..; ///; /// ### Errors :; ///; /// 1 : Division By Zero; /// 2 : Invalid Floating Point Operation; /// 4 : Empty String; /// 5 : invalid syntax; /// 6 : Too many operators; /// 7 : Too many parameters; /// 10 : z specified but not x and y; /// 11 : z and y specified but not x; /// 12 : y specified but not x; /// 13 : z and x specified but not y; /// 20 : non integer value for parameter number; /// 21 : atan2 requires two arguments; /// 22 : pow requires two arguments; /// 23 : degree of polynomial not specified; /// 24 : Degree of polynomial must be positive; /// 25 : Degree of polynomial must be less than 20; /// 26 : Unknown name; /// 27 : Too many constants in expression; /// 28 : strstr requires two arguments; /// 29 : interpreted or compiled function have to return a numerical type; /// 30 : Bad numerical expression; /// 31 : Part of the variable exist but some of it is not accessible or useable; /// 40 : '(' is expected; /// 41 : ')' is expected; /// 42 : '[' is expected; /// 43 : ']' is expected; ///; /// \image html TFormula_analyze.png; ///; /// ### Special functions; ///; /// By default, the formula is assigned fNumber=0. However, the following; /// formula built with simple functions are assigned fNumber:; ///; /// ""gaus"" 100 (or gausn); /// ""xygaus"" 110; /// ""expo"" 200; /// ""polN"" 300+N; /// ""landau"" 400; /// ""xylandau"" 410; ///; /// Note that expressions like gaus(0), expo(1) will force fNumber=0; ///; /// ### Warning when deriving a class from TFormula; ///; /// If you overload this member ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:4267,variab,variable,4267,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,1,['variab'],['variable']
Modifiability,"raw inheritance tree for ClassB; and all the classes deriving from ClassB; 3. `Draw("">ClassC"")`; - Draw inheritance tree for ClassC; - Show classes referencing ClassC; 4. `Draw(""ClassD<"")`; - Draw inheritance tree for ClassD; - Show classes referenced by ClassD; - Show all classes referencing ClassD; 5. `Draw(""Cla*"")`; - Draw inheritance tree for all classes with name starting with ""Cla""; - Show classes referenced by these classes; 6. `Draw(""ClassA:ClassB<"")`; - Draw inheritance tree for ClassA; - Show all classes referenced by ClassA; - Draw inheritance tree for ClassB; - Show classes referenced by ClassB; - Show all classes referencing ClassB. Example: `Draw(""TTree<"")`; - Draw inheritance tree for the Root class TTree; - Show all classes referenced by TTree; - Show all classes using TTree. By default, only direct inheritance is drawn.; Use TClassTree::ShowLinks(option) to show additional references; - option = ""H"" to show links to embedded classes; - option = ""M"" to show multiple inheritance; - option = ""R"" to show pointers to other classes from data members; - option = ""C"" to show classes used by the code(implementation) of a class. The following picture is produced directly by:; ~~~ {.cpp}; TClassTree ct(""ct"",""*TH1""); ~~~; It shows all the classes derived from the base class TH1. \image html gpad_classtree1.png. The TClassTree class uses the services of the class TPaveClass to; show the class names. By clicking with the right mouse button in; one TPaveClass object, one can invoke the following functions of TClassTree:; - ShowLinks(option) with by default option = ""HMR""; - Draw(classes). By default the class drawn is the one being pointed; - ShowClassesUsedBy(classes) (by default the pointed class); - ShowClassesUsing(classes) (by default the pointed class). The following picture has been generated with the following statements; ~~~ {.cpp}; TClassTree tc1(""tc1"",""TH1"");; tc1.ShowLinks(""HMR"");; ~~~. \image html gpad_classtree2.png. Note that in case of embedded clas",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:1784,inherit,inheritance,1784,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,1,['inherit'],['inheritance']
Modifiability,"rawing 2-d histograms. The `TPaletteAxis` is automatically created drawn when drawing a 2-D; histogram when the option ""Z"" is specified. A `TPaletteAxis` object is added to the histogram list of functions and; can be retrieved doing:. TPaletteAxis *palette = (TPaletteAxis*)h->GetListOfFunctions()->FindObject(""palette"");. then the pointer `palette` can be used to change the palette attributes. Because the palette is created at painting time only, one must issue a:. gPad->Update();. before retrieving the palette pointer in order to create the palette. The following; macro gives an example. Begin_Macro(source); {; auto h2 = new TH2F(""h2"",""Example of a resized palette "",40,-4,4,40,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; h2->Fill(px,5*py);; }; gStyle->SetPalette(1);; h2->Draw(""COLZ"");; gPad->Update();; auto palette = (TPaletteAxis*)h2->GetListOfFunctions()->FindObject(""palette"");; palette->SetY2NDC(0.7);; }; End_Macro. `TPaletteAxis` inherits from `TBox` and `TPave`. The methods; allowing to specify the palette position are inherited from these two classes. The palette can be interactively moved and resized. The context menu; can be used to set the axis attributes. It is possible to select a range on the axis to set the min/max in z. As default labels and ticks are drawn by `TGAxis` at equidistant (lin or log); points as controlled by SetNdivisions.; If option ""CJUST"" is given labels and ticks are justified at the; color boundaries defined by the contour levels.; In this case no optimization can be done. It is responsibility of the; user to adjust minimum, maximum of the histogram and/or the contour levels; to get a reasonable look of the plot.; Only overlap of the labels is avoided if too many contour levels are used. This option is especially useful with user defined contours.; An example is shown here:. Begin_Macro(source); {; gStyle->SetOptStat(0);; auto c = new TCanvas(""c"",""exa_CJUST"",300,10,400,400);; auto hpxpy = new",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx:1224,inherit,inherits,1224,hist/histpainter/src/TPaletteAxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPaletteAxis.cxx,1,['inherit'],['inherits']
Modifiability,"rbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMsgService.cxx; \class RooMsgService; \ingroup Roofitcore. Singleton class that organizes messages generated in RooFit.; Each message has a message level RooFit::MsgLevel (DEBUG,INFO,PROGRESS,WARNING,ERROR or FATAL),; an source object, and a RooFit::MsgTopic.; RooMsgService allows to filter and redirect messages into streams; according to message level, topic, (base) class of originating object, name of originating; object and based on attribute labels attached to individual objects.; The current default configuration creates streams for all messages at WARNING level; or higher (e.g. ERROR and FATAL) and for all INFO message on topics Generation,Plotting,; Integration and Minimization and redirects them to stdout. Users can create additional streams; for logging of e.g. DEBUG messages on particular topics or objects and/or redirect streams to; C++ streams or files. The singleton instance is accessible through RooMsgService::instance(). ### Temporarily change the message level; There is a helper, RooHelpers::LocalChangeMsgLevel, that overrides the default message levels as; long as it is alive. To suppress everything below WARNING:; ~~~{.cpp}; RooHelpers::LocalChangeMessageLevel changeMsgLvl(RooFit::WARNING);; [ statements that normally generate a lot of output ]; ~~~. #### Temporarily capture a message stream; RooHelpers::HijackMessageStream allows to fully capture a message stream in a std::stringstream. With this,; RooFit messages can be evaluated or suppressed.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:1219,config,configuration,1219,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,1,['config'],['configuration']
Modifiability,"rded the chromaticity of this. The reference white (X,Y,Z) would have; * given all three of the scale factors since:; *; * color-C = color-c * color-scale; * white-C = red-C + green-C + blue-C; * = red-c*red-scale + green-c*green-scale + blue-c*blue-scale; *; * But cHRM records only white-x and white-y, so we have lost the white scale; * factor:; *; * white-C = white-c*white-scale; *; * To handle this the inverse transformation makes an arbitrary assumption; * about white-scale:; *; * Assume: white-Y = 1.0; * Hence: white-scale = 1/white-y; * Or: red-Y + green-Y + blue-Y = 1.0; *; * Notice the last statement of the assumption gives an equation in three of; * the nine values we want to calculate. 8 more equations come from the; * above routine as summarised at the top above (the chromaticity; * calculation):; *; * Given: color-x = color-X / (color-X + color-Y + color-Z); * Hence: (color-x - 1)*color-X + color.x*color-Y + color.x*color-Z = 0; *; * This is 9 simultaneous equations in the 9 variables ""color-C"" and can be; * solved by Cramer's rule. Cramer's rule requires calculating 10 9x9 matrix; * determinants, however this is not as bad as it seems because only 28 of; * the total of 90 terms in the various matrices are non-zero. Nevertheless; * Cramer's rule is notoriously numerically unstable because the determinant; * calculation involves the difference of large, but similar, numbers. It is; * difficult to be sure that the calculation is stable for real world values; * and it is certain that it becomes unstable where the end points are close; * together.; *; * So this code uses the perhaps slightly less optimal but more; * understandable and totally obvious approach of calculating color-scale.; *; * This algorithm depends on the precision in white-scale and that is; * (1/white-y), so we can immediately see that as white-y approaches 0 the; * accuracy inherent in the cHRM chunk drops off substantially.; *; * libpng arithmetic: a simple inversion of the above equatio",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:2293,variab,variables,2293,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['variab'],['variables']
Modifiability,"re also supported `(&amp;&amp;, ||, ==, &lt;=, &gt;=, !)`. Examples:. `sin(x*(x&lt;0.5 || x&gt;1))`. If the result of a comparison is TRUE, the result is 1, otherwise 0. Already predefined names can be given. For example, if the formula. `TFormula old(""old"",sin(x*(x&lt;0.5 || x&gt;1)))`. one can assign a name to the formula. By default the name of the object = title = formula itself. `TFormula new(""new"",""x*old"")`. is equivalent to:. `TFormula new(""new"",""x*sin(x*(x&lt;0.5 || x&gt;1))"")`. The class supports unlimited number of variables and parameters.; By default the names which can be used for the variables are `x,y,z,t` or; `x[0],x[1],x[2],x[3],....x[N]` for N-dimensional formulas. This class is not anymore the base class for the function classes `TF1`, but it has now; a data member of TF1 which can be accessed via `TF1::GetFormula`. TFormula supports gradient and hessian calculations through clad.; To calculate the gradient one needs to first declare a `CladStorage` of the; same size as the number of parameters and then pass the variables and the; created `CladStorage`:. ```; TFormula f(""f"", ""x*[0] - y*[1]"");; Double_t p[] = {40, 30};; Double_t x[] = {1, 2};; f.SetParameters(p);; TFormula::CladStorage grad(2);; f.GradientPar(x, grad);; ```. The process is similar for hessians, except that the size of the created; CladStorage should be the square of the number of parameters because; `HessianPar` returns a flattened matrix:. ```; TFormula::CladStorage hess(4);; f.HessianPar(x, hess);; ```. \anchor FormulaFuncs; ### List of predefined functions. The list of available predefined functions which can be used as shortcuts is the following:; 1. One Dimensional functions:; - `gaus` is a substitute for `[Constant]*exp(-0.5*((x-[Mean])/[Sigma])*((x-[Mean])/[Sigma]))`; - `landau` is a substitute for `[Constant]*TMath::Landau (x,[MPV],[Sigma],false)`; - `expo` is a substitute for `exp([Constant]+[Slope]*x)`; - `crystalball` is substitute for `[Constant]*ROOT::Math::crystalball_",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:3427,variab,variables,3427,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variables']
Modifiability,"reate a new file, if the file already exists it will be overwritten.; /// UPDATE | Open an existing file for writing. If no file exists, it is created.; /// READ | Open an existing file for reading (default).; /// NET | Used by derived remote file access classes, not a user callable option.; /// WEB | Used by derived remote http access class, not a user callable option.; /// READ_WITHOUT_GLOBALREGISTRATION | Used by TTreeProcessorMT, not a user callable option.; ///; /// If option = """" (default), READ is assumed.; /// The file can be specified as a URL of the form:; ///; /// file:///user/rdm/bla.root or file:/user/rdm/bla.root; ///; /// The file can also be a member of an archive, in which case it is; /// specified as:; ///; /// multi.zip#file.root or multi.zip#0; ///; /// which will open file.root which is a member of the file multi.zip; /// archive or member 1 from the archive. For more on archive file; /// support see the TArchiveFile class.; /// TFile and its remote access plugins can also be used to open any; /// file, i.e. also non ROOT files, using:; ///; /// file.tar?filetype=raw; ///; /// This is convenient because the many remote file access plugins allow; /// easy access to/from the many different mass storage systems.; /// The title of the file (ftitle) will be shown by the ROOT browsers.; /// A ROOT file (like a Unix file system) may contain objects and; /// directories. There are no restrictions for the number of levels; /// of directories.; /// A ROOT file is designed such that one can write in the file in pure; /// sequential mode (case of BATCH jobs). In this case, the file may be; /// read sequentially again without using the file index written; /// at the end of the file. In case of a job crash, all the information; /// on the file is therefore protected.; /// A ROOT file can be used interactively. In this case, one has the; /// possibility to delete existing objects and add new ones.; /// When an object is deleted from the file, the freed space i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx:1997,plugin,plugins,1997,io/io/src/TFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFile.cxx,1,['plugin'],['plugins']
Modifiability,"recated.; ///; /// The recommended way to create an instance of this class is through; /// TFile::Open, for instance:; ///; /// ```c++; /// TFile* f1 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file""); /// TFile* f2 = TFile::Open(""gs://storage.googleapis.com/bucket/path/to/my/file""); /// ```; ///; /// The specified scheme (i.e. s3, s3http, s3https, ...) determines the underlying; /// transport protocol to use for downloading the file contents, namely HTTP or HTTPS.; /// The 's3', 's3https', 'gs' and 'gshttps' schemes imply using HTTPS as the transport; /// protocol. The 's3http', 'as3' and 'gshttp' schemes imply using HTTP as the transport; /// protocol.; ///; /// The 'options' argument can contain 'NOPROXY' if you want to bypass; /// the HTTP proxy when retrieving this file's contents. As for any TWebFile-derived; /// object, the URL of the web proxy can be specified by setting an environmental; /// variable 'http_proxy'. If this variable is set, we ask that proxy to route our; /// requests HTTP(S) requests to the file server.; ///; /// In addition, you can also use the 'options' argument to provide the access key; /// and secret key to be used for authentication purposes for this file by using a; /// string of the form ""AUTH=myAccessKey:mySecretkey"". This may be useful to; /// open several files hosted by different providers in the same program/macro,; /// where the environemntal variables solution is not convenient (see below).; ///; /// To use AWS temporary security credentials you need to specify the session; /// token. This can be added to the options argument with a string of the form; /// TOKEN=mySessionToken. The temporary access and secret keys must also be; /// available, either via the AUTH option or by environmental variable.; ///; /// If you need to specify more than one option separate them by ' '; /// (blank), for instance:; /// ""NOPROXY AUTH=F38XYZABCDeFgH4D0E1F:V+frt4re7J1euSNFnmaf8wwmI4AAAE7kzxZ/TTM+""; ///; /// Examples:; /// ```; /// TF",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:1733,variab,variable,1733,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,1,['variab'],['variable']
Modifiability,"red in the same matrix as \f$\mathsf{B}\f$ (TMultiDimFit::MakeCoefficients).; The errors in the coefficients is calculated by inverting the curvature matrix; of the non-orthogonal functions \f$ f_{lj}\f$ [1] (TMultiDimFit::MakeCoefficientErrors). ## Considerations; It's important to realize that the training sample should be; representative of the problem at hand, in particular along the borders; of the region of interest. This is because the algorithm presented; here, is a *interpolation*, rather then a *extrapolation* [5]. Also, the independent variables \f$ x_{i}\f$ need to be linear; independent, since the procedure will perform poorly if they are not; [5]. One can find an linear transformation from ones; original variables \f$ \xi_{i}\f$ to a set of linear independent variables; \f$ x_{i}\f$, using a *Principal Components Analysis* (see TPrincipal), and; then use the transformed variable as input to this class [5] [6]. H. Wind also outlines a method for parameterising a multidimensional; dependence over a multidimensional set of variables. An example; of the method from [5], is a follows (please refer to; [5] for a full discussion):. 1. Define \f$\mathbf{P} = (P_1, \ldots, P_5)\f$ are the 5 dependent; quantities that define a track.; 2. Compute, for \f$ M\f$ different values of \f$\mathbf{P}\f$, the tracks; through the magnetic field, and determine the corresponding; \f$\mathbf{x} = (x_1, \ldots, x_N)\f$.; 3. Use the simulated observations to determine, with a simple; approximation, the values of \f$\mathbf{P}_j\f$. We call these values; \f$\mathbf{P}^\prime_j, j = 1, \ldots, M\f$.; 4. Determine from \f$\mathbf{x}\f$ a set of at least five relevant; coordinates \f$\mathbf{x}^\prime\f$, using contrains, *or; alternative:*; 5. Perform a Principal Component Analysis (using TPrincipal), and use; to get a linear transformation \f$\mathbf{x} \rightarrow \mathbf{x}^\prime\f$, so that; \f$\mathbf{x}^\prime\f$ are constrained and linear independent.; 6. Perform a Princi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:14402,variab,variables,14402,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variables']
Modifiability,"reen; * related stuff.; *; * 2. Scanline handling facility via ASScanline. ASScanline is the most; * widely used structure since image handling is implemented on; * per-scanline basis.; *; * 3. Image storage, trasformation and rendering via ASImage. ASImage; * provides for generic container used for any image or text; * manipulation. It incorporates such a robust facilities as in-memory; * RLE compression, separate channel storage of 4 channels ( Alpha, Red,; * Green, and Blue ) with 8 bit per channel.; *; * 4. Simplified font handling facility via ASFont and ASFointManager.; * All the font handling is done using ASFont structure, no matter what; * type of font is used. Any font supported by X11 and FreeType can be; * used.; *; * 5. Transparent image file reading for many different formats. Included; * built-in XPM reading code and XCF ( GIMP's native format ).; * Overall supported:; * via external libraries :; * XPM, JPEG, PNG, TIFF, GIF; * via built in code :; * XPM, XCF, PNM, PPM, BMP, ICO, CUR; * Note that XPM can be supported both via built-in code or via libXpm,; * depending on compilation configuration.; * Actuall image file format is autodetected from the file contents -; * file name extention is not used and can be anything at all.; *; * 6. Image export into many popular file formats. Currently implemented :; * XPM, JPEG, PNG, GIF. Work is underway to implement support for TIFF,; * XCF, BMP, ICO.; *; * 7. Image quantization to arbitrary size colormap.; *; * 8. libAfterImage could be used without X window system, which is; * coninient for such thing as web development. XML Image manipulation; * tool, that could be used in such activity is included (see ascompose.c); *; * 9. Image reference counting; *; * USES; * libAfterBase - AfterStep basic functionality library. That Includes; * Hash tables, file search methods, message output, generic types.; * However effort has been made to allow for standalone configuration as; * well. If libAfterBase is not found at ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h:4491,config,configuration,4491,graf2d/asimage/src/libAfterImage/afterimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h,1,['config'],['configuration']
Modifiability,"rei Gheata 31/01/02; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoCompositeShape; \ingroup Shapes_classes. Composite shapes are Boolean combinations of two or more shape; components. The supported Boolean operations are union (+), intersection; (\*) and subtraction(-). Composite shapes derive from the base; **`TGeoShape`** class, therefore providing all shape features:; computation of bounding box, finding if a given point is inside or; outside the combination, as well as computing the distance to; entering/exiting. They can be directly used for creating volumes or used; in the definition of other composite shapes. Composite shapes are provided in order to complement and extend the set; of basic shape primitives. They have a binary tree internal structure,; therefore all shape-related geometry queries are signals propagated from; top level down to the final leaves, while the provided answers are; assembled and interpreted back at top. This `CSG`; `(composite solid geometry)` hierarchy is effective for small number of; components, while performance drops dramatically for large structures.; Building a complete geometry in this style is virtually possible but; highly not recommended. #### The Structure of Composite Shapes. A composite shape can always be looked as the result of a Boolean; operation between only two shape components. All information identifying; these two components as well as their positions with respect to the; frame of the composite is represented by an object called Boolean node.; A composite shape has a pointer to such a Boolean node. Since the shape; components may also be composites, they will also contain binary Boolean; no",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx:1045,extend,extend,1045,geom/geom/src/TGeoCompositeShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoCompositeShape.cxx,1,['extend'],['extend']
Modifiability,"rence is marked not viable, therefore; // is never shown up here. The worst preference shown up here is 'wrong side',; // e.g. an H function called by a HD function in device compilation. This is; // valid AST as long as the HD function is not emitted, e.g. it is an inline; // function which is called only by an H function. A deferred diagnostic will; // be triggered if it is emitted. However a wrong-sided function is still; // a viable candidate here.; //; // If Cand1 can be emitted and Cand2 cannot be emitted in the current; // context, Cand1 is better than Cand2. If Cand1 can not be emitted and Cand2; // can be emitted, Cand1 is not better than Cand2. This rule should have; // precedence over other rules.; //; // If both Cand1 and Cand2 can be emitted, or neither can be emitted, then; // other rules should be used to determine which is better. This is because; // host/device based overloading resolution is mostly for determining; // viability of a function. If two functions are both viable, other factors; // should take precedence in preference, e.g. the standard-defined preferences; // like argument conversion ranks or enable_if partial-ordering. The; // preference for pass-object-size parameters is probably most similar to a; // type-based-overloading decision and so should take priority.; //; // If other rules cannot determine which is better, CUDA preference will be; // used again to determine which is better.; //; // TODO: Currently IdentifyCUDAPreference does not return correct values; // for functions called in global variable initializers due to missing; // correct context about device/host. Therefore we can only enforce this; // rule when there is a caller. We should enforce this rule for functions; // in global variable initializers once proper context is added.; //; // TODO: We can only enable the hostness based overloading resolution when; // -fgpu-exclude-wrong-side-overloads is on since this requires deferring; // overloading resolution diagnostics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:1593,variab,variable,1593,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,2,['variab'],['variable']
Modifiability,"rences to variables; /// (DeclRefExprs or MemberExprs) within said nested lambda in its array of; /// PotentialCaptures. All such variables have to be captured by that lambda,; /// except for as described below.; /// If that variable is usable as a constant expression and is named in a; /// manner that does not involve its odr-use (e.g. undergoes; /// lvalue-to-rvalue conversion, or discarded) record that it is so. Upon the; /// act of analyzing the enclosing full expression (ActOnFinishFullExpr); /// if we can determine that the full expression is not instantiation-; /// dependent, then we can entirely avoid its capture.; ///; /// const int n = 0;; /// [&] (auto x) {; /// (void)+n + x;; /// };; /// Interestingly, this strategy would involve a capture of n, even though; /// it's obviously not odr-used here, because the full-expression is; /// instantiation-dependent. It could be useful to avoid capturing such; /// variables, even when they are referred to in an instantiation-dependent; /// expression, if we can unambiguously determine that they shall never be; /// odr-used. This would involve removal of the variable-referring-expression; /// from the array of PotentialCaptures during the lvalue-to-rvalue; /// conversions. But per the working draft N3797, (post-chicago 2013) we must; /// capture such variables.; /// Before anyone is tempted to implement a strategy for not-capturing 'n',; /// consider the insightful warning in:; /// /cfe-commits/Week-of-Mon-20131104/092596.html; /// ""The problem is that the set of captures for a lambda is part of the ABI; /// (since lambda layout can be made visible through inline functions and the; /// like), and there are no guarantees as to which cases we'll manage to build; /// an lvalue-to-rvalue conversion in, when parsing a template -- some; /// seemingly harmless change elsewhere in Sema could cause us to start or stop; /// building such a node. So we need a rule that anyone can implement and get; /// exactly the same result"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/ScopeInfo.h:1447,variab,variable-referring-expression,1447,interpreter/llvm-project/clang/include/clang/Sema/ScopeInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/ScopeInfo.h,2,['variab'],"['variable-referring-expression', 'variables']"
Modifiability,"rent methods](\ref EFF041); - [V. Merging and combining TEfficiency objects](\ref EFF05); - [Example](\ref EFF05a); - [V.1 When should I use merging?](\ref EFF051); - [Example](\ref EFF05b); - [V.2 When should I use combining?](\ref EFF052); - [Example](\ref EFF05c); - [VI. Further operations](\ref EFF06); - [VI.1 Information about the internal histograms](\ref EFF061); - [VI.2 Fitting](\ref EFF062); - [VI.3 Draw a TEfficiency object](\ref EFF063); - [VI.4 TEfficiency object's axis customisation](\ref EFF064). \anchor EFF01; ## I. Overview; This class handles the calculation of efficiencies and their uncertainties. It; provides several statistical methods for calculating frequentist and Bayesian; confidence intervals as well as a function for combining several efficiencies. Efficiencies have a lot of applications and meanings but in principle, they can; be described by the fraction of good/passed events k out of sample containing; N events. One is usually interested in the dependency of the efficiency on other; (binned) variables. The number of passed and total events is therefore stored; internally in two histograms (TEfficiency::fTotalHistogram and TEfficiency::fPassedHistogram).; Then the efficiency, as well as its upper and lower error, can be calculated for each bin; individually. As the efficiency can be regarded as a parameter of a binomial distribution, the; number of passed and total events must always be integer numbers. Therefore a; filling with weights is not possible. However, you can assign a global weight to each; TEfficiency object (TEfficiency::SetWeight).; It is necessary to create one TEfficiency object; for each weight if you investigate a process involving different weights. This; procedure needs more effort but enables you to re-use the filled object in cases; where you want to change one or more weights. This would not be possible if all; events with different weights were filled in the same histogram. \anchor EFF02; ## II. Creating a TEfficie",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:1533,variab,variables,1533,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['variab'],['variables']
Modifiability,"rent name may represent a; an unique volume object, but may also represent more general a family (class); of volume objects having the same shape type and medium, but possibly; different shape parameters. It is the user's task to provide different names; for different volume families in order to avoid ambiguities at tracking time.; A generic family rather than a single volume is created only in two cases :; when a generic shape is provided to the volume constructor or when a division; operation is applied. Each volume in the geometry stores an unique; ID corresponding to its family. In order to ease-up their creation, the manager; class is providing an API that allows making a shape and a volume in a single step. Volumes are objects that can be visualized, therefore having visibility,; colour, line and fill attributes that can be defined or modified any time after; the volume creation. It is advisable however to define these properties just; after the first creation of a volume namespace, since in case of volume families; any new member created by the modeler inherits these properties. In order to provide navigation features, volumes have to be able to find; the proper container of any point defined in the local reference frame. This; can be the volume itself, one of its positioned daughter volumes or none if; the point is actually outside. On the other hand, volumes have to provide also; other navigation methods such as finding the distances to its shape boundaries; or which daughter will be crossed first. The implementation of these features; is done at shape level, but the local mother-daughters management is handled; by volumes that builds additional optimisation structures upon geometry closure.; In order to have navigation features properly working one has to follow the; general rules for building a valid geometry (see TGeoManager class). Now let's make a simple volume representing a copper wire. We suppose that; a medium is already created (see TGeoMedium cla",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx:2104,inherit,inherits,2104,geom/geom/src/TGeoVolume.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx,1,['inherit'],['inherits']
Modifiability,"restored to their original values. To create an instance of the SPlot, supply a data set, the pdf to analyse,; and a list which parameters of the pdf are yields. The SPlot will calculate SWeights, and; include these as columns in the RooDataSet. The dataset will have two additional columns; for every yield with name ""`<varname>`"":; - `L_<varname>` is the likelihood for each event, *i.e.*, the pdf evaluated for the given value of the variable ""varname"".; - `<varname>_sw` is the value of the sWeight for the variable ""varname"" for each event. In SPlot::SPlot(), one can choose whether columns should be added to an existing dataset or whether a copy of the dataset; should be created. ### Plotting s-weighted data; After computing the s weights, create a new dataset that uses the s weights of the variable of interest for weighting.; If the yield parameter for signal was e.g. ""signalYield"", the dataset can be constructed as follows:; ~~~{.cpp}; RooDataSet data_signal(""<name>"", ""<title>"", <dataWithSWeights>, <variables>, 0, ""signalYield_sw"");; ~~~. A complete tutorial with an extensive model is rs301_splot.C. #### Using ratios as yield parameters; As mentioned, RooStats needs to be able to modify the yield parameters. That means that they have to be a RooRealVar; of a RooLinearVar. This allows using ratio parameters as in the following example:; ~~~{.cpp}; RooRealVar x(""x"", ""observable"", 0, 0, 20);; RooRealVar m(""m"", ""mean"", 5., -10, 10);; RooRealVar s(""s"", ""sigma"", 2., 0, 10);; RooGaussian gauss(""gauss"", ""gauss"", x, m, s);. RooRealVar a(""a"", ""exp"", -0.2, -10., 0.);; RooExponential ex(""ex"", ""ex"", x, a);. RooRealVar common(""common"", ""common scale"", 3., 0, 10);; RooRealVar r1(""r1"", ""ratio of signal events"", 0.3, 0, 10);; RooRealVar r2(""r2"", ""ratio of background events"", 0.5, 0, 10);; RooLinearVar c1(""c1"", ""c1"", r1, common, RooFit::RooConst(0.));; RooLinearVar c2(""c2"", ""c2"", r2, common, RooFit::RooConst(0.));. RooAddPdf sum(""sum"", ""sum"", RooArgSet(gauss, ex), RooArgSet(c1, c2))",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SPlot.cxx:3450,variab,variables,3450,roofit/roostats/src/SPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SPlot.cxx,1,['variab'],['variables']
Modifiability,"ribution.; <br/>; The class TUnfoldBinning takes care to map all bins of the; ""measurement"" to a one-dimensional vector y.; Similarly, the ""truth"" bins are mapped to the vector x. <h3>How to choose the regularisation settings</h3>. In TUnfoldDensity, two methods are implemented to determine tau**2; <ol>; <li>ScanLcurve() locate the tau where the L-curve plot has a ""kink""; this function is implemented in the TUnfold class</li>; <li>ScanTau() finds the solution such that some variable; (e.g. global correlation coefficient) is minimized.; This function is implemented in the TUnfoldDensity class</li>; </ol>; Each of the algorithms has its own advantages and disadvantages.; The algorithm (1) does not work if the input data are too similar to the; MC prediction. Typical no-go cases of the L-curve scan are:; <ul>; <li>the number of measurements is too small (e.g. ny=nx); <li>the input data have no statistical fluctuations; [identical MC events are used to fill the matrix of migrations; and the vector y for a ""closure test""]; </ul>; The algorithm (2) only works if the variable does have a real minimum; as a function of tau. If global correlations are minimized, the situation; is as follows:; The matrix of migration typically introduces negative correlations.; The area constraint introduces some positive correlation.; Regularisation on the ""size"" introduces no correlation.; Regularisation on 1st or 2nd derivatives adds positive correlations.; <br/>; For these reasons, ""size"" regularisation does not work well with; the tau-scan: the higher tau, the smaller rho, but there is no minimum.; As a result, large values of tau (too strong regularisation) are found.; In contrast, the tau-scan is expected to work better with 1st or 2nd; derivative regularisation, because at some point the negative; correlations from migrations are approximately cancelled by the; positive correlations from the regularisation conditions.; <br/>; whichever algorithm is used, the output has to be checked:; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:5149,variab,variable,5149,hist/unfold/src/TUnfoldDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx,1,['variab'],['variable']
Modifiability,"right (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. This source is based on Xclass95, a Win95-looking GUI toolkit.; Copyright (C) 1996, 1997 David Barth, Ricky Ralston, Hector Peraza. Xclass95 is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; /** \class TGTripleVSlider; \ingroup guiwidgets. TripleSlider inherit from DoubleSlider widgets and allow easy; selection of a min, max and pointer value out of a range.; The pointer position can be constrained to edges of slider and / or; can be relative to the slider position. To change the min value press the mouse near to the left / bottom; edge of the slider.; To change the max value press the mouse near to the right / top; edge of the slider.; To change both values simultaneously press the mouse near to the; center of the slider.; To change pointer value press the mouse on the pointer and drag it; to the desired position. Dragging the slider will generate the event:; - kC_VSLIDER, kSL_POS, slider id, 0. Pressing the mouse will generate the event:; - kC_VSLIDER, kSL_PRESS, slider id, 0. Releasing the mouse will generate the event:; - kC_VSLIDER, kSL_RELEASE, slider id, 0. Moving the pointer will generate the event:; - kC_VSLIDER, kSL_POINTER, slider id, 0. Use the functions GetMinPosition(), GetMaxPosition() and; GetPosition() to retrieve the position of the slider.; Use the function Get",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTripleSlider.cxx:1097,inherit,inherit,1097,gui/gui/src/TGTripleSlider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTripleSlider.cxx,1,['inherit'],['inherit']
Modifiability,"riment; (Yang-Roe-Zhu, physics/0508045). In Boosted Decision Trees, the; selection is done on a majority vote on the result of several decision; trees, which are all derived from the same training sample by; supplying different event weights during the training. ### Decision trees:. Successive decision nodes are used to categorize the; events out of the sample as either signal or background. Each node; uses only a single discriminating variable to decide if the event is; signal-like (""goes right"") or background-like (""goes left""). This; forms a tree like structure with ""baskets"" at the end (leave nodes),; and an event is classified as either signal or background according to; whether the basket where it ends up has been classified signal or; background during the training. Training of a decision tree is the; process to define the ""cut criteria"" for each node. The training; starts with the root node. Here one takes the full training event; sample and selects the variable and corresponding cut value that gives; the best separation between signal and background at this stage. Using; this cut criterion, the sample is then divided into two subsamples, a; signal-like (right) and a background-like (left) sample. Two new nodes; are then created for each of the two sub-samples and they are; constructed using the same mechanism as described for the root; node. The devision is stopped once a certain node has reached either a; minimum number of events, or a minimum or maximum signal purity. These; leave nodes are then called ""signal"" or ""background"" if they contain; more signal respective background events from the training sample. ### Boosting:. The idea behind adaptive boosting (AdaBoost) is, that signal events; from the training sample, that end up in a background node; (and vice versa) are given a larger weight than events that are in; the correct leave node. This results in a re-weighed training event; sample, with which then a new decision tree can be developed.; The boost",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:2391,variab,variable,2391,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['variab'],['variable']
Modifiability,"riment; (Yang-Roe-Zhu, physics/0508045). In Boosted Decision Trees, the; selection is done on a majority vote on the result of several decision; trees, which are all derived from the same training sample by; supplying different event weights during the training. ### Decision trees:. successive decision nodes are used to categorize the; events out of the sample as either signal or background. Each node; uses only a single discriminating variable to decide if the event is; signal-like (""goes right"") or background-like (""goes left""). This; forms a tree like structure with ""baskets"" at the end (leave nodes),; and an event is classified as either signal or background according to; whether the basket where it ends up has been classified signal or; background during the training. Training of a decision tree is the; process to define the ""cut criteria"" for each node. The training; starts with the root node. Here one takes the full training event; sample and selects the variable and corresponding cut value that gives; the best separation between signal and background at this stage. Using; this cut criterion, the sample is then divided into two subsamples, a; signal-like (right) and a background-like (left) sample. Two new nodes; are then created for each of the two sub-samples and they are; constructed using the same mechanism as described for the root; node. The devision is stopped once a certain node has reached either a; minimum number of events, or a minimum or maximum signal purity. These; leave nodes are then called ""signal"" or ""background"" if they contain; more signal respective background events from the training sample. ### Boosting:. the idea behind the boosting is, that signal events from the training; sample, that *end up in a background node (and vice versa) are given a; larger weight than events that are in the correct leave node. This; results in a re-weighed training event sample, with which then a new; decision tree can be developed. The boosting can be appli",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx:2127,variab,variable,2127,tmva/tmva/src/MethodDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDT.cxx,1,['variab'],['variable']
Modifiability,"rkby@uci.edu *; * *; * Copyright (c) 2000-2020, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; * \class RooBinSamplingPdf; * The RooBinSamplingPdf is supposed to be used as an adapter between a continuous PDF; * and a binned distribution.; * When RooFit is used to fit binned data, and the PDF is continuous, it takes the probability density; * at the bin centre as a proxy for the probability averaged (integrated) over the entire bin. This is; * correct only if the second derivative of the function vanishes, though. This is shown in the plots; * below.; *; * For PDFs that have larger curvatures, the RooBinSamplingPdf can be used. It integrates the PDF in each; * bin using an adaptive integrator. This usually requires 21 times more function evaluations, but significantly; * reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - In",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:1305,adapt,adaptive,1305,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['adapt'],['adaptive']
Modifiability,"rmula given as a parameter.; /// - `Max$(formula )` : return the maximum (within one TTree entry) of the value of the; /// elements of the formula given as a parameter.; /// - `MinIf$(formula,condition)`; /// - `MaxIf$(formula,condition)` : return the minimum (maximum) (within one TTree entry); /// of the value of the elements of the formula given as a parameter; /// if they match the condition. If no element matches the condition,; /// the result is zero. To avoid the resulting peak at zero, use the; /// pattern:; /// ~~~ {.cpp}; /// tree->Draw(""MinIf$(formula,condition)"",""condition"");; /// ~~~; /// which will avoid calculation `MinIf$` for the entries that have no match; /// for the condition.; /// - `Alt$(primary,alternate)` : return the value of ""primary"" if it is available; /// for the current iteration otherwise return the value of ""alternate"".; /// For example, with arr1[3] and arr2[2]; /// ~~~ {.cpp}; /// tree->Draw(""arr1+Alt$(arr2,0)"");; /// ~~~; /// will draw arr1[0]+arr2[0] ; arr1[1]+arr2[1] and arr1[2]+0; /// Or with a variable size array arr3; /// ~~~ {.cpp}; /// tree->Draw(""Alt$(arr3[0],0)+Alt$(arr3[1],0)+Alt$(arr3[2],0)"");; /// ~~~; /// will draw the sum arr3 for the index 0 to min(2,actual_size_of_arr3-1); /// As a comparison; /// ~~~ {.cpp}; /// tree->Draw(""arr3[0]+arr3[1]+arr3[2]"");; /// ~~~; /// will draw the sum arr3 for the index 0 to 2 only if the; /// actual_size_of_arr3 is greater or equal to 3.; /// Note that the array in 'primary' is flattened/linearized thus using; /// `Alt$` with multi-dimensional arrays of different dimensions in unlikely; /// to yield the expected results. To visualize a bit more what elements; /// would be matched by TTree::Draw, TTree::Scan can be used:; /// ~~~ {.cpp}; /// tree->Scan(""arr1:Alt$(arr2,0)"");; /// ~~~; /// will print on one line the value of arr1 and (arr2,0) that will be; /// matched by; /// ~~~ {.cpp}; /// tree->Draw(""arr1-Alt$(arr2,0)"");; /// ~~~; /// The ternary operator is not directly supported in ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:17430,variab,variable,17430,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variable']
Modifiability,"rod_{i=1}^{N} p_{li}\left(x_i\right); = \sum_{l=1}^{L} c_l F_l(\mathbf{x}); \f]; such that. \f[; S \equiv \sum_{j=1}^{M} \left(D_j - D_p\left(\mathbf{x}_j\right)\right)^2; \f]; is minimal. Here \f$p_{li}(x_i)\f$ are monomials, or Chebyshev or Legendre; polynomials, labelled \f$l = 1, \ldots, L\f$, in each variable \f$ x_i\f$,\f$ i=1, \ldots, N\f$. So what TMultiDimFit does, is to determine the number of terms \f$ L\f$, and then \f$ L\f$ terms; (or functions) \f$ F_l\f$, and the \f$ L\f$ coefficients \f$ c_l\f$, so that \f$ S\f$ is minimal; (TMultiDimFit::FindParameterization). Of course it's more than a little unlikely that \f$ S\f$ will ever become; exact zero as a result of the procedure outlined below. Therefore, the; user is asked to provide a minimum relative error \f$ \epsilon\f$ (TMultiDimFit::SetMinRelativeError),; and \f$ S\f$ will be considered minimized when. \f[; R = \frac{S}{\sum_{j=1}^M D_j^2} < \epsilon; \f]; Optionally, the user may impose a functional expression by specifying; the powers of each variable in \f$ L\f$ specified functions \f$ F_1, \ldots,F_L\f$ (TMultiDimFit::SetPowers).; In that case, only the coefficients \f$ c_l\f$ is calculated by the class. ## Limiting the Number of Terms; As always when dealing with fits, there's a real chance of *over fitting*. As is well-known, it's; always possible to fit an \f$ N-1\f$ polynomial in \f$ x\f$ to \f$ N\f$ points \f$ (x,y)\f$ with; \f$\chi^2 = 0\f$, but the polynomial is not likely to fit new data at all [1].; Therefore, the user is asked to provide an upper limit, \f$ L_{max}\f$ to the number of terms in; \f$ D_p\f$ (TMultiDimFit::SetMaxTerms). However, since there's an infinite number of \f$ F_l\f$ to choose from, the; user is asked to give the maximum power. \f$ P_{max,i}\f$, of each variable; \f$ x_i\f$ to be considered in the minimization of \f$ S\f$ (TMultiDimFit::SetMaxPowers). One way of obtaining values for the maximum power in variable \f$ i\f$, is; to perform a regular fit to the depen",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:3665,variab,variable,3665,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variable']
Modifiability,"roup.; A button group widget makes it easier to deal with groups of buttons.; A button in a button group is associated with a unique identifier.; The button group emits a Clicked() signal with this identifier when; the button is clicked. Thus, a button group is an ideal solution; when you have several similar buttons and want to connect all their; Clicked() signals, for example, to one slot. An exclusive button group switches off all toggle buttons except; the one that was clicked. A button group is by default non-exclusive.; All radio buttons that are inserted, will be mutually exclusive even; if the button group is non-exclusive. There are two ways of using a button group:. The button group is a parent widget of a number of buttons,; i.e. the button group is the parent argument in the button; constructor. The buttons are assigned identifiers 1, 2, 3 etc.; in the order they are created or you can specify button id in; the button constructor. A TGButtonGroup can display a frame and; a title because it inherits from TGGroupFrame. Example:. ```; // vertical frame without border and title; TGVButtonGroup *bg = new TGVButtonGroup(main_frame);. // create text button with id=1; TGTextButton *button1 = new TGTextButton(bg,""some text"");. // create another text button with id=2; TGTextButton *button2 = new TGTextButton(bg,""another text"");. // map all buttons; bg->Show();; ```. NOTE: there is no need to call AddFrame() since the buttons are; automatically added with a default layout hint to their parent,; i.e. the buttongroup. To override the default layout hints use the; SetLayoutHints() method. ButtonGroup Signals:. - Pressed(Int_t id) --> is emitted when a button in the group is; pressed down. The id argument is the; button's identifier.; - Released(Int_t id) --> is emitted when a button in the group is; released. The id argument is the button's; identifier.; - Clicked(Int_t id) --> is emitted when a button in the group is; clicked. The id argument is the button's; identif",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButtonGroup.cxx:1534,inherit,inherits,1534,gui/gui/src/TGButtonGroup.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButtonGroup.cxx,1,['inherit'],['inherits']
Modifiability,"rresponding toolbar button, or by //; // using Shift+F5 accelerator keys. //; // //; // Interface to CINT Interpreter //; // //; // Any command entered in the Command combo box will be passed to //; // the CINT interpreter. This combo box will keep the commands history //; // and will allow you to re-execute the same commands during an editor //; // session. //; // //; // Keyboard Bindings //; // //; // The following table lists the keyboard shortcuts and accelerator //; // keys. //; // //; // Key: Action: //; // ==== ======= //; // //; // Up Move cursor up. //; // Shift+Up Move cursor up and extend selection. //; // Down Move cursor down. //; // Shift+Down Move cursor down and extend selection. //; // Left Move cursor left. //; // Shift+Left Move cursor left and extend selection. //; // Right Move cursor right. //; // Shift+Right Move cursor right and extend selection. //; // Home Move cursor to begin of line. //; // Shift+Home Move cursor to begin of line and extend selection.//; // Ctrl+Home Move cursor to top of page. //; // End Move cursor to end of line. //; // Shift+End Move cursor to end of line and extend selection. //; // Ctrl+End Move cursor to end of page. //; // PgUp Move cursor up one page. //; // Shift+PgUp Move cursor up one page and extend selection. //; // PgDn Move cursor down one page. //; // Shift+PgDn Move cursor down one page and extend selection. //; // Delete Delete character after cursor, or text selection. //; // BackSpace Delete character before cursor, or text selection.//; // Ctrl+B Move cursor left. //; // Ctrl+D Delete character after cursor, or text selection. //; // Ctrl+E Move cursor to end of line. //; // Ctrl+H Delete character before cursor, or text selection.//; // Ctrl+K Delete characters from current position to the //; // end of line. //; // Ctrl+U Delete current line. //; // //; //Begin_Html; /*; <img src=""gif/TGRootIDE.gif"">; */; //End_Html; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx:4962,extend,extend,4962,test/RootIDE/TGRootIDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx,3,['extend'],['extend']
Modifiability,"rs in later directories will; override previous ones (the inverse of normal search path behavior).; The macros must have names like `<BaseClass>/PX0_<PluginClass>.C`,; e.g. TSQLServer/P20_TMySQLServer.C, to allow easy sorting and grouping.; If the BaseClass is in a namespace the directory must have the name; NameSpace@@BaseClass as `:` is a reserved pathname character on some; operating systems. Macros not beginning with 'P' and ending with "".C""; are ignored. These macros typically look like:; ~~~ {.cpp}; void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*)"");; }; ~~~; Plugin handlers can also be defined via resources in the .rootrc; file. Although now deprecated this method still works for backward; compatibility, e.g.:; ~~~ {.cpp}; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""<constructor>""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""<constructor>""; Plugin.TVirtualFitter: * TFitter Minuit ""TFitter(Int_t)""; ~~~; Where the + in front of Plugin.TSQLServer says that it extends the; existing definition of TSQLServer, useful when there is more than; one plugin that can extend the same base class. The ""<constructor>""; should be the constructor or a static method that generates an; instance of the specified class. Global methods should start with; ""::"" in their name, like ""::CreateFitter()"".; Instead of being a shared library a plugin can also be a CINT; script, so instead of libDialog.so one can have Dialog.C.; The * is a placeholder in case there is no need for a URI to; differentiate between different plugins for the same base class.; For the default plugins see $ROOTSYS/etc/system.rootrc. Plugin handlers can also be registered at run time, e.g.:; ~~~ {.cpp}; gPluginMgr->AddHandler(""TSQLServer"", ""^sqlite:"",; ""TSQLiteServer"", ""RSQLite"",; ""TSQLiteServer(const char*,const char*,const char*)"");; ~~~; A list of currently defined handlers can be printed using:; ~~~ {.cpp}; gPluginMgr->Print(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:2346,Plugin,Plugin,2346,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['Plugin'],['Plugin']
Modifiability,"rum. Meth. A 555, 356 (2005) [arXiv:physics/0402083]. ### Creating an SPlot; To use this class, you first must have a pdf that includes; yield parameters for (possibly several) different species, for example a signal and background; yield. Those yields must be of type RooRealVar / RooLinearVar (or anything that derives from; RooAbsRealLValue). This is necessary because; RooStats needs to be able to set the yields to 0 and 1 to probe the PDF. After; constructing the s weights, the yields will be restored to their original values. To create an instance of the SPlot, supply a data set, the pdf to analyse,; and a list which parameters of the pdf are yields. The SPlot will calculate SWeights, and; include these as columns in the RooDataSet. The dataset will have two additional columns; for every yield with name ""`<varname>`"":; - `L_<varname>` is the likelihood for each event, *i.e.*, the pdf evaluated for the given value of the variable ""varname"".; - `<varname>_sw` is the value of the sWeight for the variable ""varname"" for each event. In SPlot::SPlot(), one can choose whether columns should be added to an existing dataset or whether a copy of the dataset; should be created. ### Plotting s-weighted data; After computing the s weights, create a new dataset that uses the s weights of the variable of interest for weighting.; If the yield parameter for signal was e.g. ""signalYield"", the dataset can be constructed as follows:; ~~~{.cpp}; RooDataSet data_signal(""<name>"", ""<title>"", <dataWithSWeights>, <variables>, 0, ""signalYield_sw"");; ~~~. A complete tutorial with an extensive model is rs301_splot.C. #### Using ratios as yield parameters; As mentioned, RooStats needs to be able to modify the yield parameters. That means that they have to be a RooRealVar; of a RooLinearVar. This allows using ratio parameters as in the following example:; ~~~{.cpp}; RooRealVar x(""x"", ""observable"", 0, 0, 20);; RooRealVar m(""m"", ""mean"", 5., -10, 10);; RooRealVar s(""s"", ""sigma"", 2., 0, 10);; RooGau",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SPlot.cxx:2945,variab,variable,2945,roofit/roostats/src/SPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SPlot.cxx,1,['variab'],['variable']
Modifiability,"ry number of images. To facilitate this ASImageLayer structure; * has been created in order to specify parameters of each image; * participating in overlaying operation. Images need not to be exact; * same size. For each image its position on destination is specified; * via dst_x and dst_y data members. Each image maybe tiled and clipped; * to fit into rectangle specified by clip_x, clip_y, clip_width,; * clip_height ( in image coordinates - not destination ). If image is; * missing, then area specified by dst_x, dst_y, clip_width, clip_height; * will be filled with solid_color.; * Entire image will be tinted using tint parameter prior to overlaying.; * Bevel specified by bevel member will be drawn over image prior to; * overlaying. Specific overlay method has to be specified.; * merge_scanlines method is pointer to a function,; * that accepts 2 ASScanlines as arguments and performs overlaying of; * first one with the second one.; * There are 15 different merge_scanline methods implemented in; * libAfterImage, including alpha-blending, tinting, averaging,; * HSV and HSL colorspace operations, etc.; * NOTES; * ASImageLayer s could be organized into chains using next pointers.; * Since there could be a need to rearrange layers and maybe bypass some; * layers - we need to provide for flexibility, while at the same time; * allowing for simplicity of arrays. As the result next pointers could; * be used to link together continuous arrays of layer, like so :; * array1: [layer1(next==NULL)][layer2(next!=NULL)]; * ____________________________|; * V; * array2: [layer3(next==NULL)][layer4(next==NULL)][layer5(next!=NULL)]; * ________________________________________________|; * V; * array3: [layer6(next==NULL)][layer7(next==layer7)]; * ^______|; *; * While iterating throught such a list we check for two conditions -; * exceeding count of layers and layer pointing to self. When any of; * that is met - we stopping iteration.; * SEE ALSO; * merge_layers(); * blender.h; * SOURCE; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:1471,layers,layers,1471,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,3,['layers'],['layers']
Modifiability,"s a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data type (to add autoload for example) and hence getting to; /// the data involves the implicit call to a C++ conversion operator.; /// This conversion is automatic in most case. However it is not invoked; /// in a few cases, in particular in variadic function (like printf).; /// So when using printf you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:4297,variab,variable,4297,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['variab'],['variable']
Modifiability,"s as follows:. ~~~{.cpp}; // h is filled with all the elements of `good_pts`, for each event; auto h = df.Define(""good_pts"", [](const ROOT::RVecF &pt) { return pt[pt > 0]; }); .Histo1D(""good_pts"");; ~~~. And in Python:. ~~~{.py}; h = df.Define(""good_pts"", ""pt[pt > 0]"").Histo1D(""good_pts""); ~~~. Learn more at ROOT::VecOps::RVec. \anchor transformations; ## Transformations: manipulating data; \anchor Filters; ### Filters; A filter is created through a call to `Filter(f, columnList)` or `Filter(filterString)`. In the first overload, `f` can; be a function, a lambda expression, a functor class, or any other callable object. It must return a `bool` signalling; whether the event has passed the selection (`true`) or not (`false`). It should perform ""read-only"" operations on the; columns, and should not have side-effects (e.g. modification of an external or static variable) to ensure correctness; when implicit multi-threading is active. The second overload takes a string with a valid C++ expression in which column; names are used as variable names (e.g. `Filter(""x[0] + x[1] > 0"")`). This is a convenience feature that comes with a; certain runtime overhead: C++ code has to be generated on the fly from this expression before using it in the event; loop. See the paragraph about ""Just-in-time compilation"" below for more information. RDataFrame only evaluates filters when necessary: if multiple filters are chained one after another, they are executed; in order and the first one returning `false` causes the event to be discarded and triggers the processing of the next; entry. If multiple actions or transformations depend on the same filter, that filter is not executed multiple times for; each entry: after the first access it simply serves a cached result. \anchor named-filters-and-cutflow-reports; #### Named filters and cutflow reports; An optional string parameter `name` can be passed to the Filter() method to create a **named filter**. Named filters; work as usual, but also keep",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:29016,variab,variable,29016,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['variab'],['variable']
Modifiability,"s defined by the OpenMP specification.; /// Generator for '#omp reduction'.; ///; /// Emits the IR instructing the runtime to perform the specific kind of; /// reductions. Expects reduction variables to have been privatized and; /// initialized to reduction-neutral values separately. Emits the calls to; /// runtime functions as well as the reduction function and the basic blocks; /// performing the reduction atomically and non-atomically.; ///; /// The code emitted for the following:; ///; /// \code; /// type var_1;; /// type var_2;; /// #pragma omp <directive> reduction(reduction-op:var_1,var_2); /// /* body */;; /// \endcode; ///; /// corresponds to the following sketch.; ///; /// \code; /// void _outlined_par() {; /// // N is the number of different reductions.; /// void *red_array[] = {privatized_var_1, privatized_var_2, ...};; /// switch(__kmpc_reduce(..., N, /*size of data in red array*/, red_array,; /// _omp_reduction_func,; /// _gomp_critical_user.reduction.var)) {; /// case 1: {; /// var_1 = var_1 <reduction-op> privatized_var_1;; /// var_2 = var_2 <reduction-op> privatized_var_2;; /// // ...; /// __kmpc_end_reduce(...);; /// break;; /// }; /// case 2: {; /// _Atomic<ReductionOp>(var_1, privatized_var_1);; /// _Atomic<ReductionOp>(var_2, privatized_var_2);; /// // ...; /// break;; /// }; /// default: break;; /// }; /// }; ///; /// void _omp_reduction_func(void **lhs, void **rhs) {; /// *(type *)lhs[0] = *(type *)lhs[0] <reduction-op> *(type *)rhs[0];; /// *(type *)lhs[1] = *(type *)lhs[1] <reduction-op> *(type *)rhs[1];; /// // ...; /// }; /// \endcode; ///; /// \param Loc The location where the reduction was; /// encountered. Must be within the associate; /// directive and after the last local access to the; /// reduction variables.; /// \param AllocaIP An insertion point suitable for allocas usable; /// in reductions.; /// \param ReductionInfos A list of info on each reduction variable.; /// \param IsNoWait A flag set if the reduction is marked as nowait.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h:1848,variab,variables,1848,interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Frontend/OpenMP/OMPIRBuilder.h,2,['variab'],"['variable', 'variables']"
Modifiability,"s in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting is used when a JobManager is spun up, i.e. usually when the first Job; * starts. At this point, the Queue is also created according to the setting. The; * default is FIFO. When using a Priority Queue, the priority of tasks in a Job; * can be set using either setTaskPriorities or suggestTaskOrder. If no priorities; * are set, the Priority queue simply assumes equal priority for all tasks. The; * resulting order then depends on the implementation of std::priority_queue.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:1917,Config,Config,1917,roofit/multiprocess/src/Config.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx,1,['Config'],['Config']
Modifiability,"s may only be called; /// for LI.hasSubrange()==true. Subregister ranges are split or created; /// until \p LaneMask can be matched exactly. \p Mod is executed on the; /// matching subranges.; ///; /// Example:; /// Given an interval with subranges with lanemasks L0F00, L00F0 and; /// L000F, refining for mask L0018. Will split the L00F0 lane into; /// L00E0 and L0010 and the L000F lane into L0007 and L0008. The Mod; /// function will be applied to the L0010 and L0008 subranges.; ///; /// \p Indexes and \p TRI are required to clean up the VNIs that; /// don't define the related lane masks after they get shrunk. E.g.,; /// when L000F gets split into L0007 and L0008 maybe only a subset; /// of the VNIs that defined L000F defines L0007.; ///; /// The clean up of the VNIs need to look at the actual instructions; /// to decide what is or is not live at a definition point. If the; /// update of the subranges occurs while the IR does not reflect these; /// changes, \p ComposeSubRegIdx can be used to specify how the; /// definition are going to be rewritten.; /// E.g., let say we want to merge:; /// V1.sub1:<2 x s32> = COPY V2.sub3:<4 x s32>; /// We do that by choosing a class where sub1:<2 x s32> and sub3:<4 x s32>; /// overlap, i.e., by choosing a class where we can find ""offset + 1 == 3"".; /// Put differently we align V2's sub3 with V1's sub1:; /// V2: sub0 sub1 sub2 sub3; /// V1: <offset> sub0 sub1; ///; /// This offset will look like a composed subregidx in the class:; /// V1.(composed sub2 with sub1):<4 x s32> = COPY V2.sub3:<4 x s32>; /// => V1.(composed sub2 with sub1):<4 x s32> = COPY V2.sub3:<4 x s32>; ///; /// Now if we didn't rewrite the uses and def of V1, all the checks for V1; /// need to account for this offset.; /// This happens during coalescing where we update the live-ranges while; /// still having the old IR around because updating the IR on-the-fly; /// would actually clobber some information on how the live-ranges that; /// are being updated look like.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h:1710,rewrite,rewrite,1710,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h,1,['rewrite'],['rewrite']
Modifiability,"s more clearly; # generalizable to an analysis with shapes. There is a lot of flexibility; # for how one models a problem in RooFit/RooStats. Models come in a few; # common forms:; # - standard form: extended PDF of some discriminating variable m:; # eg: P(m) ~ S*fs(m) + B*fb(m), with S+B events expected; # in this case the dataset has N rows corresponding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$ \eta(b) \f$ then one can obtain a posterior from the auxiliary me",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:1339,variab,variable,1339,tutorials/roostats/HybridStandardForm.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py,1,['variab'],['variable']
Modifiability,"s the input argument and will; /// own the clone. If a composite object is offered for import, e.g. a p.d.f with parameters and observables, the; /// complete tree of objects is imported. If any of the _variables_ of a composite object (parameters/observables) are already; /// in the workspace the imported p.d.f. is connected to the already existing variables. If any of the _function_ objects (p.d.f, formulas); /// to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled.; /// Several optional arguments can be provided to modify the import procedure.; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `RenameConflictNodes(const char* suffix)` <td> Add suffix to branch node name if name conflicts with existing node in workspace; /// <tr><td> `RenameAllNodes(const char* suffix)` <td> Add suffix to all branch node names including top level node.; /// <tr><td> `RenameAllVariables(const char* suffix)` <td> Add suffix to all variables of objects being imported.; /// <tr><td> `RenameAllVariablesExcept(const char* suffix, const char* exceptionList)` <td> Add suffix to all variables names, except ones listed; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Rename a single variable as specified upon import.; /// <tr><td> `RecycleConflictNodes()` <td> If any of the function objects to be imported already exist in the name space, connect the; /// imported expression to the already existing nodes.; /// \attention Use with care! If function definitions do not match, this alters the definition of your function upon import; ///; /// <tr><td> `Silence()` <td> Do not issue any info message; /// </table>; ///; /// The RenameConflictNodes, RenameNodes and RecycleConflictNodes arguments are mutually exclusive. The RenameVariable argument can be repeated; /// as often as necessary to rename multiple variables. Alternatively, a single RenameVariable argument can be giv",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:1214,variab,variables,1214,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['variab'],['variables']
Modifiability,"s. The criteria for; // additional padding between two bases is that the first base is zero sized; // or ends with a zero sized subobject and the second base is zero sized or; // trails with a zero sized base or field (sharing of vfptrs can reorder the; // layout of the so the leading base is not always the first one declared).; // This rule does take into account fields that are not records, so padding; // will occur even if the last field is, e.g. an int. The padding added for; // bases is 1 byte. The padding added between vbases depends on the alignment; // of the object but is at least 4 bytes (in both 32 and 64 bit modes).; // * There is no concept of non-virtual alignment, non-virtual alignment and; // alignment are always identical.; // * There is a distinction between alignment and required alignment.; // __declspec(align) changes the required alignment of a struct. This; // alignment is _always_ obeyed, even in the presence of #pragma pack. A; // record inherits required alignment from all of its fields and bases.; // * __declspec(align) on bitfields has the effect of changing the bitfield's; // alignment instead of its required alignment. This is the only known way; // to make the alignment of a struct bigger than 8. Interestingly enough; // this alignment is also immune to the effects of #pragma pack and can be; // used to create structures with large alignment under #pragma pack.; // However, because it does not impact required alignment, such a structure,; // when used as a field or base, will not be aligned if #pragma pack is; // still active at the time of use.; //; // Known incompatibilities:; // * all: #pragma pack between fields in a record; // * 2010 and back: If the last field in a record is a bitfield, every object; // laid out after the record will have extra padding inserted before it. The; // extra padding will have size equal to the size of the storage class of the; // bitfield. 0 sized bitfields don't exhibit this behavior and the extra; // ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp:4067,inherit,inherits,4067,interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,1,['inherit'],['inherits']
Modifiability,"s: for example for C or Fortran; structures.; - Any C++ object or collection, provided by the STL or ROOT. In the following, the details about the creation of different types of branches are given. \anchor addcolumnoffundamentaltypes; ## Add a column (""branch"") holding fundamental types and arrays thereof; This strategy works also for lists of variables, e.g. to describe simple structures.; It is strongly recommended to persistify those as objects rather than lists of leaves. ~~~ {.cpp}; auto branch = tree.Branch(branchname, address, leaflist, bufsize); ~~~; - address is the address of the first item of a structure; - leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a; slash (/). The variable type must be 1 character. (Characters; after the first are legal and will be appended to the visible; name of the leaf, but have no effect.) If no type is given, the; type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is; assumed of type F by default. The list of currently supported; types is given below:; - `C` : a character string terminated by the 0 character; - `B` : an 8 bit signed integer (`Char_t`); Treated as a character when in an array.; - `b` : an 8 bit unsigned integer (`UChar_t`); - `S` : a 16 bit signed integer (`Short_t`); - `s` : a 16 bit unsigned integer (`UShort_t`); - `I` : a 32 bit signed integer (`Int_t`); - `i` : a 32 bit unsigned integer (`UInt_t`); - `F` : a 32 bit floating point (`Float_t`); - `f` : a 24 bit floating point with truncated mantissa (`Float16_t`); - `D` : a 64 bit floating point (`Double_t`); - `d` : a 24 bit truncated floating point (`Double32_t`); - `L` : a 64 bit signed integer (`Long64_t`); - `l` : a 64 bit unsigned integer (`ULong64_t`); - `G` : a long signed integer, stored as 64 bit (`Long_t`); - `g` : a long unsigned integer, stored as 64 bit (`ULong_t`); -",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:4000,variab,variable,4000,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,2,['variab'],['variable']
Modifiability,"s; /// for comparison of weighted and unweighted histograms and two weighted; /// histograms [2] as well as usual Pearson's \f$ \chi^{2} \f$ test for; /// comparison two usual (unweighted) histograms.; ///; /// #### Overview:; ///; /// Comparison of two histograms expect hypotheses that two histograms; /// represent identical distributions. To make a decision p-value should; /// be calculated. The hypotheses of identity is rejected if the p-value is; /// lower then some significance level. Traditionally significance levels; /// 0.1, 0.05 and 0.01 are used. The comparison procedure should include an; /// analysis of the residuals which is often helpful in identifying the; /// bins of histograms responsible for a significant overall \f$ \chi^{2} \f$ value.; /// Residuals are the difference between bin contents and expected bin; /// contents. Most convenient for analysis are the normalized residuals. If; /// hypotheses of identity are valid then normalized residuals are; /// approximately independent and identically distributed random variables; /// having N(0,1) distribution. Analysis of residuals expect test of above; /// mentioned properties of residuals. Notice that indirectly the analysis; /// of residuals increase the power of \f$ \chi^{2} \f$ test.; ///; /// #### Methods of comparison:; ///; /// \f$ \chi^{2} \f$ test for comparison two (unweighted) histograms:; /// Let us consider two histograms with the same binning and the number; /// of bins equal to r. Let us denote the number of events in the ith bin; /// in the first histogram as ni and as mi in the second one. The total; /// number of events in the first histogram is equal to:; /// \f[; /// N = \sum_{i=1}^{r} n_{i}; /// \f]; /// and; /// \f[; /// M = \sum_{i=1}^{r} m_{i}; /// \f]; /// in the second histogram. The hypothesis of identity (homogeneity) [3]; /// is that the two histograms represent random values with identical; /// distributions. It is equivalent that there exist r constants p1,...,pr,; /// s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:2828,variab,variables,2828,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variables']
Modifiability,"s[5][]` | two | on both 2nd dimensions |; /// | `fMatrix[][2] - fResults[][1]` | three | on both 1st dimensions |; /// | `fMatrix[][2] - fResults[][]` | six | on both 1st and 2nd dimensions of fResults |; /// | `fMatrix[][2] - fResults[3][]` | two | on 1st dim of fMatrix and 2nd of fResults (at the same time) |; /// | `fMatrix[][] - fResults[][]` | six | on 1st dim then on 2nd dim |; /// | `fMatrix[][fResult[][]]` | 30 | on 1st dim of fMatrix then on both dimensions of fResults. The value if fResults[j][k] is used as the second index of fMatrix.|; ///; ///; /// In summary, TTree::Draw loops through all unspecified dimensions. To; /// figure out the range of each loop, we match each unspecified dimension; /// from left to right (ignoring ALL dimensions for which an index has been; /// specified), in the equivalent loop matched dimensions use the same index; /// and are restricted to the smallest range (of only the matched dimensions).; /// When involving variable arrays, the range can of course be different; /// for each entry of the tree.; ///; /// So the loop equivalent to ""fMatrix[][2] - fResults[3][]"" is:; /// ~~~ {.cpp}; /// for (Int_t i0; i < min(3,2); i++) {; /// use the value of (fMatrix[i0][2] - fMatrix[3][i0]); /// }; /// ~~~; /// So the loop equivalent to ""fMatrix[][2] - fResults[][]"" is:; /// ~~~ {.cpp}; /// for (Int_t i0; i < min(3,5); i++) {; /// for (Int_t i1; i1 < 2; i1++) {; /// use the value of (fMatrix[i0][2] - fMatrix[i0][i1]); /// }; /// }; /// ~~~; /// So the loop equivalent to ""fMatrix[][] - fResults[][]"" is:; /// ~~~ {.cpp}; /// for (Int_t i0; i < min(3,5); i++) {; /// for (Int_t i1; i1 < min(3,2); i1++) {; /// use the value of (fMatrix[i0][i1] - fMatrix[i0][i1]); /// }; /// }; /// ~~~; /// So the loop equivalent to ""fMatrix[][fResults[][]]"" is:; /// ~~~ {.cpp}; /// for (Int_t i0; i0 < 3; i0++) {; /// for (Int_t j2; j2 < 5; j2++) {; /// for (Int_t j3; j3 < 2; j3++) {; /// i1 = fResults[j2][j3];; /// use the value of fMatrix[i0][i1]; /// }; /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:7763,variab,variable,7763,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variable']
Modifiability,"same absolute; size. The text size (`charheight`) is given in pixels:. ~~~ {.cpp}; charheight = textsize;; ~~~. Note that to scale fonts to the same size as the old True Type package a; scale factor of `0.93376068` is apply to the text size before drawing. The text size of any class inheriting from `TAttText` can; be changed using the method `SetTextSize` and retrieved using the; method `GetTextSize`. \anchor ATTTEXT5; ## Text Font and Precision. The text font code is combination of the font number and the precision.; ~~~ {.cpp}; Text font code = 10*fontnumber + precision; ~~~; Font numbers must be between 1 and 14. The precision can be:. - `precision = 0` fast hardware fonts (steps in the size); - `precision = 1` scalable and rotatable hardware fonts (see below); - `precision = 2` scalable and rotatable hardware fonts; - `precision = 3` scalable and rotatable hardware fonts. Text size; is given in pixels. The text font and precision of any class inheriting from `TAttText` can; be changed using the method `SetTextFont` and retrieved using the; method `GetTextFont`. \anchor ATTTEXT51; ### Font quality and speed. When precision 0 is used, only the original non-scaled X11 system fonts are; used. The fonts have a minimum (4) and maximum (37) size in pixels. These; fonts are fast and are of good quality. Their size varies with large steps; and they cannot be rotated.; Precision 1 and 2 fonts have a different behaviour depending if the; True Type Fonts (TTF) are used or not. If TTF are used, you always get very good; quality scalable and rotatable fonts.; These days TTF fonts are rendered fast enough and can be used in all cases. \anchor ATTTEXT52; ### How to use True Type Fonts. TTF fonts are used by default. They can be deactivated via the following line; in the `.rootrc` file:. ~~~ {.cpp}; Unix.*.Root.UseTTFonts: false; ~~~. \anchor ATTTEXT53; ### List of the currently supported fonts. ~~~ {.cpp}; Font number TTF Names PostScript/PDF Names; 1 : ""Free Serif Italic"" ""Tim",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx:4846,inherit,inheriting,4846,core/base/src/TAttText.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx,1,['inherit'],['inheriting']
Modifiability,"scripten exception handling; /// This pass lowers invokes and landingpads into library functions in JS glue; /// code. Invokes are lowered into function wrappers called invoke wrappers that; /// exist in JS side, which wraps the original function call with JS try-catch.; /// If an exception occurred, cxa_throw() function in JS side sets some; /// variables (see below) so we can check whether an exception occurred from; /// wasm code and handle it appropriately.; ///; /// * Emscripten setjmp-longjmp handling; /// This pass lowers setjmp to a reasonably-performant approach for emscripten.; /// The idea is that each block with a setjmp is broken up into two parts: the; /// part containing setjmp and the part right after the setjmp. The latter part; /// is either reached from the setjmp, or later from a longjmp. To handle the; /// longjmp, all calls that might longjmp are also called using invoke wrappers; /// and thus JS / try-catch. JS longjmp() function also sets some variables so; /// we can check / whether a longjmp occurred from wasm code. Each block with a; /// function call that might longjmp is also split up after the longjmp call.; /// After the longjmp call, we check whether a longjmp occurred, and if it did,; /// which setjmp it corresponds to, and jump to the right post-setjmp block.; /// We assume setjmp-longjmp handling always run after EH handling, which means; /// we don't expect any exception-related instructions when SjLj runs.; /// FIXME Currently this scheme does not support indirect call of setjmp,; /// because of the limitation of the scheme itself. fastcomp does not support it; /// either.; ///; /// In detail, this pass does following things:; ///; /// 1) Assumes the existence of global variables: __THREW__, __threwValue; /// __THREW__ and __threwValue are defined in compiler-rt in Emscripten.; /// These variables are used for both exceptions and setjmp/longjmps.; /// __THREW__ indicates whether an exception or a longjmp occurred or not. 0; /// me",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:1660,variab,variables,1660,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,1,['variab'],['variables']
Modifiability,"se is a non-leaf node of the expression.; ///; /// For example:; /// expression graph node names; ///; /// + | I; /// / \ |; /// + + | A, B; /// / \ / \ |; /// * + * | C, D, E; /// / \ / \ / \ |; /// + * | F, G; ///; /// The leaf nodes are C, E, F and G. The Ops array will contain (maybe not in; /// that order) (C, 1), (E, 1), (F, 2), (G, 2).; ///; /// The expression is maximal: if some instruction is a binary operator of the; /// same kind as 'I', and all of its uses are non-leaf nodes of the expression,; /// then the instruction also belongs to the expression, is not a leaf node of; /// it, and its operands also belong to the expression (but may be leaf nodes).; ///; /// NOTE: This routine will set operands of non-leaf non-root nodes to undef in; /// order to ensure that every non-root node in the expression has *exactly one*; /// use by a non-leaf node of the expression. This destruction means that the; /// caller MUST either replace 'I' with a new expression or use something like; /// RewriteExprTree to put the values back in if the routine indicates that it; /// made a change by returning 'true'.; ///; /// In the above example either the right operand of A or the left operand of B; /// will be replaced by undef. If it is B's operand then this gives:; ///; /// + | I; /// / \ |; /// + + | A, B - operand of B replaced with undef; /// / \ \ |; /// * + * | C, D, E; /// / \ / \ / \ |; /// + * | F, G; ///; /// Note that such undef operands can only be reached by passing through 'I'.; /// For example, if you visit operands recursively starting from a leaf node; /// then you will never see such an undef operand unless you get back to 'I',; /// which requires passing through a phi node.; ///; /// Note that this routine may also mutate binary operators of the wrong type; /// that have all uses inside the expression (i.e. only used by non-leaf nodes; /// of the expression) if it can turn them into binary operators of the right; /// type and thus make the expression bigger.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp:2411,Rewrite,RewriteExprTree,2411,interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/Reassociate.cpp,1,['Rewrite'],['RewriteExprTree']
Modifiability,"sed.; /// The uid is the username and pw the password that should be used; /// for the connection.; /// If uid and pw are not specified (==0), user and passwd arguments from; /// URL will be used. Works only with MySQL ODBC, probably with PostrSQL; /// ODBC.; /// 2. Form ""odbcd://DRIVER={MyODBC};SERVER=pcroot.cern.ch;DATABASE=test;USER=user;PASSWORD=pass;OPTION=3;PORT=3306;""; /// This is a form, which is accepted by SQLDriverConnect function of ODBC.; /// Here some other arguments can be specified, which are not included; /// in standard URL format.; /// 3. Form ""odbcn://MySpecialConfig"", where MySpecialConfig is entry,; /// defined in user DSN (user data source). Here uid and pw should be; /// always specified.; ///; /// Configuring unixODBC under Linux: http://www.unixodbc.org/odbcinst.html; /// Remarks: for variants 1 & 2 it is enough to create/configure; /// odbcinst.ini file. For variant 3 file odbc.ini should be created.; /// Path to this files can be specified in environmental variables like; /// export ODBCINI=/home/my/unixODBC/etc/odbc.ini; /// export ODBCSYSINI=/home/my/unixODBC/etc; ///; /// Configuring MySQL ODBC under Windows.; /// Installing ODBC driver for MySQL is enough to use it under Windows.; /// Afer odbcd:// variant can be used with DRIVER={MySQL ODBC 3.51 Driver};; /// To configure User DSN, go into Start menu -> Settings ->; /// Control panel -> Administrative tools-> Data Sources (ODBC).; ///; /// To install Oracle ODBC driver for Windows, one should download; /// and install either complete Oracle client (~500 MB), or so-called; /// Instant Client Basic and Instant Client ODBC (~20 MB together).; /// Some remark about Instant Client:; /// 1) Two additional DLLs are required: mfc71.dll & msver71.dll; /// They can be found either in MS VC++ 7.1 Free Toolkit or; /// download from other Internet sites; /// 2) ORACLE_HOME environment variable should be specified and point to; /// location, where Instant Client files are extracted; /// 3) Run odbc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx:1396,variab,variables,1396,sql/odbc/src/TODBCServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx,1,['variab'],['variables']
Modifiability,"sed? {df_wrong.GetNRuns()} times."") # The answer will be 3 times. ; ~~~. It is therefore good practice to declare all your transformations and actions *before* accessing their results, allowing; RDataFrame to run the loop once and produce all results in one go. ### Going parallel; Let's say we would like to run the previous examples in parallel on several cores, dividing events fairly between cores.; The only modification required to the snippets would be the addition of this line *before* constructing the main; dataframe object:; ~~~{.cpp}; ROOT::EnableImplicitMT();; ~~~; Simple as that. More details are given [below](#parallel-execution). \anchor collections; ## Working with collections and object selections. RDataFrame reads collections as the special type [ROOT::RVec](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html): for example, a column containing an array of floating point numbers can be read as a ROOT::RVecF. C-style arrays (with variable or static size), STL vectors and most other collection types can be read this way. RVec is a container similar to std::vector (and can be used just like a std::vector) but it also offers a rich interface to operate on the array elements in a vectorised fashion, similarly to Python's NumPy arrays. For example, to fill a histogram with the ""pt"" of selected particles for each event, Define() can be used to create a column that contains the desired array elements as follows:. ~~~{.cpp}; // h is filled with all the elements of `good_pts`, for each event; auto h = df.Define(""good_pts"", [](const ROOT::RVecF &pt) { return pt[pt > 0]; }); .Histo1D(""good_pts"");; ~~~. And in Python:. ~~~{.py}; h = df.Define(""good_pts"", ""pt[pt > 0]"").Histo1D(""good_pts""); ~~~. Learn more at ROOT::VecOps::RVec. \anchor transformations; ## Transformations: manipulating data; \anchor Filters; ### Filters; A filter is created through a call to `Filter(f, columnList)` or `Filter(filterString)`. In the first overload, `f` can; be a function, a la",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:27504,variab,variable,27504,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['variab'],['variable']
Modifiability,"see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U. of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodLikelihood; \ingroup TMVA. Likelihood analysis (""non-parametric approach""). Also implemented is a ""diagonalized likelihood approach"",; which improves over the uncorrelated likelihood approach by; transforming linearly the input variables into a diagonal space,; using the square-root of the covariance matrix. The method of maximum likelihood is the most straightforward, and; certainly among the most elegant multivariate analyser approaches.; We define the likelihood ratio, \f$ R_L \f$, for event; \f$ i \f$, by:. \f[; R_L(i) = \frac{L_S(i)}{L_B(i) + L_B(i)}; \f]. Here the signal and background likelihoods, \f$ L_S \f$,; \f$ L_B \f$, are products of the corresponding probability; densities, \f$ p_S \f$, \f$ p_B \f$, of the; \f$ N_{var} \f$ discriminating variables used in the MVA:. \f[; L_S(i) \ \prod_{j=1}^{N_{var}} p_{Sj} (i); \f]. and accordingly for \f$ L_B \f$.; In practise, TMVA uses polynomial splines to estimate the probability; density functions (PDF) obtained from the distributions of the; training variables. Note that in TMVA the output of the likelihood ratio is transformed by:. \f[; R_L(i) \to R'_L(i) = -\frac{1}{\tau} ln(R_L^{-1}(i) -1); \f]. to avoid the occurre",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLikelihood.cxx:1422,variab,variables,1422,tmva/tmva/src/MethodLikelihood.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLikelihood.cxx,1,['variab'],['variables']
Modifiability,"selected particles for each event, Define() can be used to create a column that contains the desired array elements as follows:. ~~~{.cpp}; // h is filled with all the elements of `good_pts`, for each event; auto h = df.Define(""good_pts"", [](const ROOT::RVecF &pt) { return pt[pt > 0]; }); .Histo1D(""good_pts"");; ~~~. And in Python:. ~~~{.py}; h = df.Define(""good_pts"", ""pt[pt > 0]"").Histo1D(""good_pts""); ~~~. Learn more at ROOT::VecOps::RVec. \anchor transformations; ## Transformations: manipulating data; \anchor Filters; ### Filters; A filter is created through a call to `Filter(f, columnList)` or `Filter(filterString)`. In the first overload, `f` can; be a function, a lambda expression, a functor class, or any other callable object. It must return a `bool` signalling; whether the event has passed the selection (`true`) or not (`false`). It should perform ""read-only"" operations on the; columns, and should not have side-effects (e.g. modification of an external or static variable) to ensure correctness; when implicit multi-threading is active. The second overload takes a string with a valid C++ expression in which column; names are used as variable names (e.g. `Filter(""x[0] + x[1] > 0"")`). This is a convenience feature that comes with a; certain runtime overhead: C++ code has to be generated on the fly from this expression before using it in the event; loop. See the paragraph about ""Just-in-time compilation"" below for more information. RDataFrame only evaluates filters when necessary: if multiple filters are chained one after another, they are executed; in order and the first one returning `false` causes the event to be discarded and triggers the processing of the next; entry. If multiple actions or transformations depend on the same filter, that filter is not executed multiple times for; each entry: after the first access it simply serves a cached result. \anchor named-filters-and-cutflow-reports; #### Named filters and cutflow reports; An optional string parameter `n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:28844,variab,variable,28844,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['variab'],['variable']
Modifiability,"sheet etc) and indices; root[] html.MakeClass(""TMyClass""); // create documentation for TMyClass only; </pre>; To ""beautify"" (i.e. create links to documentation for class names etc) some text; file or macro, use:; <pre>; root[] html.Convert( ""hsimple.C"", ""Histogram example"" ); </pre>. <h3><a name=""conf"">II. Configuration</a></h3>; Most configuration options can be set as a call to THtml, or as a TEnv variable,; which you can set in your .rootrc. <h4><a name=""conf:input"">II.1 Input files</a></h4>. <p>In your .rootrc, define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>); of the classes you want to document, or call THtml::SetInputDir()</p>. <p>Example:</p><pre>; Root.Html.SourceDir: .:src:include; Root.Html.Root: http://root.cern.ch/root/html</pre>. <h4><a name=""conf:output"">II.2 Output directory</a></h4>. <p>The output directory can be specified using the Root.Html.OutputDir; configuration variable (default value: ""htmldoc""). If that directory; doesn't exist <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a>; will create it.</p>. <p>Example:</p><pre>; Root.Html.OutputDir: htmldoc</pre>. <h4><a name=""conf:liblink"">II.3 Linking other documentation</a></h4>. <p>When trying to document a class, THtml searches for a source file in; the directories set via SetInputDir(). If it cannot find it, it assumes; that this class must have been documented before. Based on the library; this class is defined in, it checks the configuration variable; <tt>Root.Html.LibName</tt>, and creates a link using its value.; Alternatively, you can set these URLs via THtml::SetLibURL().</p>. <p>Example:<br/>; If a class MyClass is defined in class mylibs/libMyLib.so, and .rootrc; contains</p><pre>; Root.Html.MyLib: ../mylib/</pre>; <p>THtml will create a link to ""../mylib/MyClass.html"".</p>. <p>The library name association can be set up using the rootmap facility.; For the library in the example a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:4398,config,configuration,4398,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,2,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"simply point by point - AddPoint() method; // - an array of points at once:; // If the data is already stored in some arrays, this data; // can be assigned to the linear fitter without physically; // coping bytes, thanks to the Use() method of; // TVector and TMatrix classes - AssignData() method; //; // 2.Setting the formula; // 2.1 The linear formula syntax:; // -Additive parts are separated by 2 plus signs ""++""; // --for example ""1 ++ x"" - for fitting a straight line; // -All standard functions, undrestood by TFormula, can be used; // as additive parts; // --TMath functions can be used too; // -Functions, used as additive parts, shouldn't have any parameters,; // even if those parameters are set.; // --for example, if normalizing a sum of a gaus(0, 1) and a; // gaus(0, 2), don't use the built-in ""gaus"" of TFormula,; // because it has parameters, take TMath::Gaus(x, 0, 1) instead.; // -Polynomials can be used like ""pol3"", ..""polN""; // -If fitting a more than 3-dimensional formula, variables should; // be numbered as follows:; // -- x0, x1, x2... For example, to fit ""1 ++ x0 ++ x1 ++ x2 ++ x3*x3""; // 2.2 Setting the formula:; // 2.2.1 If fitting a 1-2-3-dimensional formula, one can create a; // TF123 based on a linear expression and pass this function; // to the fitter:; // --Example:; // TLinearFitter *lf = new TLinearFitter();; // TF2 *f2 = new TF2(""f2"", ""x ++ y ++ x*x*y*y"", -2, 2, -2, 2);; // lf->SetFormula(f2);; // --The results of the fit are then stored in the function,; // just like when the TH1::Fit or TGraph::Fit is used; // --A linear function of this kind is by no means different; // from any other function, it can be drawn, evaluated, etc.; // 2.2.2 There is no need to create the function if you don't want to,; // the formula can be set by expression:; // --Example:; // // 2 is the number of dimensions; // TLinearFitter *lf = new TLinearFitter(2);; // lf->SetFormula(""x ++ y ++ x*x*y*y"");; // --That's the only way to go, if you want to fit in more; // tha",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearFitter.h:2564,variab,variables,2564,math/minuit/inc/TLinearFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/inc/TLinearFitter.h,1,['variab'],['variables']
Modifiability,"since it does; only apply to open marker symbols and marker symbols consisting of lines. All; of these marker symbols are redefined with thicker lines by style numbers; starting from 50:. ~~~ {.cpp}; Marker numbers Line width; 50 - 67 2; 68 - 85 3; 86 - 103 4; 104 - 121 5; ...; ~~~. Begin_Macro; {; TCanvas *c = new TCanvas(""c"",""Marker line widths"",0,0,600,266);; TMarker marker;; marker.DisplayMarkerLineWidths();; }; End_Macro. \anchor M3; ## Marker size. Various marker sizes are shown in the figure below. The default marker size=1; is shown in the top left corner. Marker sizes smaller than 1 can be; specified. The marker size does not refer to any coordinate systems, it is an; absolute value. Therefore the marker size is not affected by any change; in TPad's scale. A marker size equal to 1 correspond to 8 pixels.; That is, a square marker with size 1 will be drawn with a side equal to 8; pixels on the screen. The marker size of any class inheriting from `TAttMarker` can; be changed using the method `SetMarkerSize` and retrieved using the; method `GetMarkerSize`. Begin_Macro; {; auto c = new TCanvas(""c"",""Marker sizes"",0,0,500,200);; TMarker marker;; marker.SetMarkerStyle(3);; Double_t x = 0;; Double_t dx = 1/6.0;; for (Int_t i=1; i<6; i++) {; x += dx;; marker.SetMarkerSize(i*0.2); marker.DrawMarker(x,.165);; marker.SetMarkerSize(i*0.8); marker.DrawMarker(x,.495);; marker.SetMarkerSize(i*1.0); marker.DrawMarker(x,.835);; }; }; End_Macro. Note that the marker styles number 1 6 and 7 (the dots), cannot be scaled. They; are meant to be very fast to draw and are always drawn with the same number of; pixels; therefore `SetMarkerSize` does not apply on them. To have a; ""scalable dot"" a filled circle should be used instead, i.e. the marker style; number 20. By default (if `SetMarkerStyle` is not specified), the marker; style used is 1. That's the most common one to draw scatter plots.; */; ////////////////////////////////////////////////////////////////////////////////; /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttMarker.cxx:4717,inherit,inheriting,4717,core/base/src/TAttMarker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttMarker.cxx,1,['inherit'],['inheriting']
Modifiability,"sing new() operator and their deletion is done by; TGeoManager class. ### Available geometrical transformations. #### TGeoTranslation; Represent a (dx,dy,dz) translation. Data members:; Double_t fTranslation[3]. Translations can be added/subtracted. ~~~ {.cpp}; TGeoTranslation t1;; t1->SetTranslation(-5,10,4);; TGeoTranslation *t2 = new TGeoTranslation(4,3,10);; t2->Subtract(&t1);; ~~~. #### Rotations; Represent a pure rotation. Data members: Double_t fRotationMatrix[3*3].; Rotations can be defined either by Euler angles, either, by GEANT3 angles :. ~~~ {.cpp}; TGeoRotation *r1 = new TGeoRotation();; r1->SetAngles(phi, theta, psi); // all angles in degrees; ~~~. This represent the composition of : first a rotation about Z axis with; angle phi, then a rotation with theta about the rotated X axis, and; finally a rotation with psi about the new Z axis. ~~~ {.cpp}; r1->SetAngles(th1,phi1, th2,phi2, th3,phi3); ~~~. This is a rotation defined in GEANT3 style. Theta and phi are the spherical; angles of each axis of the rotated coordinate system with respect to the; initial one. This construction allows definition of malformed rotations,; e.g. not orthogonal. A check is performed and an error message is issued; in this case. Specific utilities : determinant, inverse. #### Scale transformations; Represent a scale shrinking/enlargement. Data; members :Double_t fScale[3]. Not fully implemented yet. #### Combined transformations; Represent a rotation followed by a translation.; Data members: Double_t fTranslation[3], TGeoRotation *fRotation. ~~~ {.cpp}; TGeoRotation *rot = new TGeoRotation(""rot"",10,20,30);; TGeoTranslation trans;; ...; TGeoCombiTrans *c1 = new TGeoCombiTrans(trans, rot);; TGeoCombiTrans *c2 = new TGeoCombiTrans(""somename"",10,20,30,rot); ~~~. #### TGeoGenTrans; Combined transformations including a scale. Not implemented. #### TGeoIdentity; A generic singleton matrix representing a identity transformation; NOTE: identified by the global variable gGeoIdentity.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx:7420,variab,variable,7420,geom/geom/src/TGeoMatrix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoMatrix.cxx,1,['variab'],['variable']
Modifiability,"sing the Metropolis algorithm. From the Markov; Chain, the confidence interval can be determined in two ways:. #### Using a Kernel-Estimated PDF: (not the default method). A RooNDKeysPdf is constructed from the data set using adaptive kernel width.; With this RooNDKeysPdf F, we then integrate over the most likely domain in the; parameter space (tallest points in the posterior RooNDKeysPdf) until the target; confidence level is reached within an acceptable neighborhood as defined by; SetEpsilon(). More specifically: we calculate the following for different; cutoff values C until we reach the target confidence level: \f$\int_{ F >= C } F; d{normset} \f$.; Important note: this is not the default method because of a bug in constructing; the RooNDKeysPdf from a weighted data set. Configure to use this method by; calling SetUseKeys(true), and the data set will be interpreted without weights. #### Using a binned data set: (the default method). This is the binned analog of the continuous integrative method that uses the; kernel-estimated PDF. The points in the Markov Chain are put into a binned; data set and the interval is then calculated by adding the heights of the bins; in decreasing order until the desired level of confidence has been reached.; Note that this means the actual confidence level is >= the confidence level; prescribed by the client (unless the user calls SetHistStrict(false)). This; method is the default but may not remain as such in future releases, so you may; wish to explicitly configure to use this method by calling SetUseKeys(false). These are not the only ways for the confidence interval to be determined, and; other possibilities are being considered being added, especially for the; 1-dimensional case. One can ask an MCMCInterval for the lower and upper limits on a specific; parameter of interest in the interval. Note that this works better for some; distributions (ones with exactly one local maximum) than others, and sometimes; has little value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCInterval.cxx:2210,config,configure,2210,roofit/roostats/src/MCMCInterval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCInterval.cxx,1,['config'],['configure']
Modifiability,"skerRange(double) the whisker definition w=1; will be overwritten. E.g. using a whisker-range of 0.95 and w=1 will redefine the area of; the lower whisker to the upper whisker in order to cover 95% of the distribution inside; that candle. The static function will affect all candle-charts in the running program.; Default is 1. If the distribution is large enough and gaussian shaped, the maximum length of; the whisker will be located at \f$ \pm 2.698 \sigma \f$ (when using the; 1.5*iqr-definition (w=2), where \f$ \sigma \f$ is the standard deviation; (see picture above). In that case 99.3% of the total distribution will be covered; by the box and the whiskers, whereas 0.7% are represented by the outliers. ##### The Anchors; The anchors have no special meaning in terms of statistical calculation. They mark; the end of the whiskers and they have the width of the box. Both representation; with and without anchors are common. ##### The Points; Depending on the configuration the points can have different meanings:; - If p=1 the points represent the outliers. If they are shown, it means; some parts of the underlying distribution are not covered by the whiskers.; This can only occur when the whiskers are set to option w=2. Here the whiskers; can have a maximum length of \f$ 1.5 \times iqr \f$. So any points outside the; whiskers will be drawn as outliers. The outliers will be represented by crosses.; - If p=2 all points in the distribution will be painted as crosses. This is; useful for small datasets only (up to 10 or 20 points per candle).; The outliers are shown along the candle. Because the underlying distribution; is binned, is frequently occurs that a bin contains more than one value.; Because of this the points will be randomly scattered within their bin along; the candle axis. If the bin content for a bin is exactly 1 (usually; this happens for the outliers) if will be drawn in the middle of the bin along; the candle axis. As the maximum number of points per candle i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:52889,config,configuration,52889,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['config'],['configuration']
Modifiability,"small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many info-zippers for bug reports and testing.; *; * REFERENCES; *; * APPNOTE.TXT documentation file in PKZIP 1.93a distribution.; *; * A description of the Rabin and Karp algorithm is given in the book; * ""Algorithms"" by R. Sedgewick, Addison-Wesley, p252.; *; * Fiala,E.R., and Greene,D.H.; * Data Compression with Finite Windows, Comm.ACM, 32,4 (1989) 490-595; *; * INTERFACE; *; * void lm_init (int pack_level, ush *flags); * Initialize the ""longest match"" routines for a new file; *; * ulg deflate (void); * Processes a new input file and return its compressed length. Sets; * the compressed length, crc, deflate flags and internal file; * attributes.; */; /* #include ""zip.h"" */; /* #include ""ZIP.h"" */; /* ===========================================================================; * Configuration parameters; */; /* Compile with MEDIUM_MEM to reduce the memory requirements or; * with SMALL_MEM to use as little memory as possible. Use BIG_MEM if the; * entire input file can be held in memory (not possible on 16 bit systems).; * Warning: defining these symbols affects HASH_BITS (see below) and thus; * affects the compression ratio. The compressed output; * is still correct, and might even be smaller in some cases.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c:2530,Config,Configuration,2530,core/zip/src/ZDeflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c,1,['Config'],['Configuration']
Modifiability,"snippet above defines a column `p` that is a fixed-size array using the component column names and then; filters on its magnitude by looping over its elements. It must be noted that the usage of strings to define columns; like the one above is currently the only possibility when using PyROOT. When writing expressions as such, only constants; and data coming from other columns in the dataset can be involved in the code passed as a string. Local variables and; functions cannot be used, since the interpreter will not know how to find them. When capturing local state is necessary,; it must first be declared to the ROOT C++ interpreter. More information on filters and how to use them to automatically generate cutflow reports can be found [below](#Filters). ### Defining custom columns; Let's now consider the case in which ""myTree"" contains two quantities ""x"" and ""y"", but our analysis relies on a derived; quantity `z = sqrt(x*x + y*y)`. Using the Define() transformation, we can create a new column in the dataset containing; the variable ""z"":; ~~~{.cpp}; RDataFrame d(""myTree"", ""file.root"");; auto sqrtSum = [](double x, double y) { return sqrt(x*x + y*y); };; auto zMean = d.Define(""z"", sqrtSum, {""x"",""y""}).Mean(""z"");; std::cout << *zMean << std::endl;; ~~~; Define() creates the variable ""z"" by applying `sqrtSum` to ""x"" and ""y"". Later in the chain of calls we refer to; variables created with Define() as if they were actual tree branches/columns, but they are evaluated on demand, at most; once per event. As with filters, Define() calls can be chained with other transformations to create multiple custom; columns. Define() and Filter() transformations can be concatenated and intermixed at will. As with filters, it is possible to specify new columns as string expressions. This snippet is analogous to the one above:; ~~~{.cpp}; RDataFrame d(""myTree"", ""file.root"");; auto zMean = d.Define(""z"", ""sqrt(x*x + y*y)"").Mean(""z"");; std::cout << *zMean << std::endl;; ~~~. Again the names of t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:21057,variab,variable,21057,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['variab'],['variable']
Modifiability,"so valid for 2-dim); /// - ""N"" include comparison of normalizations; /// - ""D"" Put out a line of ""Debug"" printout; /// - ""M"" Return the Maximum Kolmogorov distance instead of prob; /// - ""X"" Run the pseudo experiments post-processor with the following procedure:; /// make pseudoexperiments based on random values from the parent distribution,; /// compare the KS distance of the pseudoexperiment to the parent; /// distribution, and count all the KS values above the value; /// obtained from the original data to Monte Carlo distribution.; /// The number of pseudo-experiments nEXPT is by default 1000, and; /// it can be changed by specifying the option as ""X=number"",; /// for example ""X=10000"" for 10000 toys.; /// The function returns the probability.; /// (thanks to Ben Kilminster to submit this procedure). Note that; /// this option ""X"" is much slower.; ///; /// The returned function value is the probability of test; /// (much less than one means NOT compatible); ///; /// Code adapted by Rene Brun from original HBOOK routine HDIFF; ///; /// NOTE1; /// A good description of the Kolmogorov test can be seen at:; /// http://www.itl.nist.gov/div898/handbook/eda/section3/eda35g.htm; ///; /// NOTE2; /// see also alternative function TH1::Chi2Test; /// The Kolmogorov test is assumed to give better results than Chi2Test; /// in case of histograms with low statistics.; ///; /// NOTE3 (Jan Conrad, Fred James); /// ""The returned value PROB is calculated such that it will be; /// uniformly distributed between zero and one for compatible histograms,; /// provided the data are not binned (or the number of bins is very large; /// compared with the number of events). Users who have access to unbinned; /// data and wish exact confidence levels should therefore not put their data; /// into histograms, but should call directly TMath::KolmogorovTest. On; /// the other hand, since TH1 is a convenient way of collecting data and; /// saving space, this function has been provided. However, the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1660,adapt,adapted,1660,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['adapt'],['adapted']
Modifiability,"sponding //; // toolbar button, or by using Ctrl+F7 accelerator keys. //; // This is identical to the command "".L macro.C++"" in the root prompt //; // command line. //; // //; // Interrupting a Running Macro //; // //; // You can interrupt a running macro by selecting the Tools menu / //; // Interrupt; by clicking on the corresponding toolbar button, or by //; // using Shift+F5 accelerator keys. //; // //; // Interface to CINT Interpreter //; // //; // Any command entered in the Command combo box will be passed to //; // the CINT interpreter. This combo box will keep the commands history //; // and will allow you to re-execute the same commands during an editor //; // session. //; // //; // Keyboard Bindings //; // //; // The following table lists the keyboard shortcuts and accelerator //; // keys. //; // //; // Key: Action: //; // ==== ======= //; // //; // Up Move cursor up. //; // Shift+Up Move cursor up and extend selection. //; // Down Move cursor down. //; // Shift+Down Move cursor down and extend selection. //; // Left Move cursor left. //; // Shift+Left Move cursor left and extend selection. //; // Right Move cursor right. //; // Shift+Right Move cursor right and extend selection. //; // Home Move cursor to begin of line. //; // Shift+Home Move cursor to begin of line and extend selection.//; // Ctrl+Home Move cursor to top of page. //; // End Move cursor to end of line. //; // Shift+End Move cursor to end of line and extend selection. //; // Ctrl+End Move cursor to end of page. //; // PgUp Move cursor up one page. //; // Shift+PgUp Move cursor up one page and extend selection. //; // PgDn Move cursor down one page. //; // Shift+PgDn Move cursor down one page and extend selection. //; // Delete Delete character after cursor, or text selection. //; // BackSpace Delete character before cursor, or text selection.//; // Ctrl+B Move cursor left. //; // Ctrl+D Delete character after cursor, or text selection. //; // Ctrl+E Move cursor to end of line. //; // Ctrl+H ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx:4524,extend,extend,4524,test/RootIDE/TGRootIDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx,1,['extend'],['extend']
Modifiability,"ss, or booking all operations for all different RDataFrame computation graphs before the first event loop is triggered, so that the interpreter is invoked only once for all computation graphs:. ~~~{.cpp}; // assuming df1 and df2 are separate computation graphs, do:; auto h1 = df1.Histo1D(""x"");; auto h2 = df2.Histo1D(""y"");; h1->Draw(); // we just-in-time compile everything needed by df1 and df2 here; h2->Draw(""SAME"");. // do not:; auto h1 = df1.Histo1D(""x"");; h1->Draw(); // we just-in-time compile here; auto h2 = df2.Histo1D(""y"");; h2->Draw(""SAME""); // we just-in-time compile again here, as the second Histo1D call is new; ~~~. \anchor more-features; ## More features; Here is a list of the most important features that have been omitted in the ""Crash course"" for brevity.; You don't need to read all these to start using RDataFrame, but they are useful to save typing time and runtime. \anchor systematics; ### Systematic variations. Starting from ROOT v6.26, RDataFrame provides a flexible syntax to define systematic variations.; This is done in two steps: a) register variations for one or more existing columns using Vary() and b) extract variations; of normal RDataFrame results using \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"". In between these steps, no other change; to the analysis code is required: the presence of systematic variations for certain columns is automatically propagated; through filters, defines and actions, and RDataFrame will take these dependencies into account when producing varied; results. \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" is included in header `ROOT/RDFHelpers.hxx`. The compiled C++ programs must include this header; explicitly, this is not required for ROOT macros. . An example usage of Vary() and \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" in C++:. ~~~{.cpp}; auto nominal_hx =; df.Vary(""pt"", ""ROOT::RVecD{pt*0.9f, pt*1.1f}"", {""down"", ""up""}); .Filter(""pt > pt_cut""); .Define(""x"", someFun",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:54986,flexible,flexible,54986,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['flexible'],['flexible']
Modifiability,"ssion is available (and; /// thus a DebugVariable's location is the corresponding register), while; /// ""False"" signifies that the expression is unavailable. ""Unknown""s never; /// survive to the end of the analysis (see below).; ///; /// Formally, all DebugVariable locations that are live-out of a block are; /// initialized to \top. A blocks live-in values take the meet of the lattice; /// value for every predecessors live-outs, except for the entry block, where; /// all live-ins are \bot. The usual dataflow propagation occurs: the transfer; /// function for a block assigns an expression for a DebugVariable to be ""True""; /// if a DBG_VALUE in the block specifies it; ""False"" if the location is; /// clobbered; or the live-in value if it is unaffected by the block. We; /// visit each block in reverse post order until a fixedpoint is reached. The; /// solution produced is maximal.; ///; /// Intuitively, we start by assuming that every expression / variable location; /// is at least ""True"", and then propagate ""False"" from the entry block and any; /// clobbers until there are no more changes to make. This gives us an accurate; /// solution because all incorrect locations will have a ""False"" propagated into; /// them. It also gives us a solution that copes well with loops by assuming; /// that variable locations are live-through every loop, and then removing those; /// that are not through dataflow.; ///; /// Within LiveDebugValues: each variable location is represented by a; /// VarLoc object that identifies the source variable, the set of; /// machine-locations that currently describe it (a single location for; /// DBG_VALUE or multiple for DBG_VALUE_LIST), and the DBG_VALUE inst that; /// specifies the location. Each VarLoc is indexed in the (function-scope) \p; /// VarLocMap, giving each VarLoc a set of unique indexes, each of which; /// corresponds to one of the VarLoc's machine-locations and can be used to; /// lookup the VarLoc in the VarLocMap. Rather than operate ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:3851,variab,variable,3851,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"st 0 63; // | |; // s[######] - Original stores 64 bits to Dest.; // $----[##] - DSE says the lower 32 bits are dead, to be removed.; // d [##] - Assign's address-modifying expression adds 4 bytes to; // dest.; // Variable | |; // Fragment 128|; // Offsets 159; //; // The answer is achieved in a few steps:; // 1. Add the fragment offset to the store offset:; // SliceOffsetInBits:0 + VarFrag.OffsetInBits:128 = 128; //; // 2. Subtract the address-modifying expression offset plus difference; // between d.address and dest:; // 128 - (expression_offset:32 + (d.address - dest):0) = 96; //; // 3. That offset along with the store size (32) represents the bits of the; // variable that'd be affected by the store. Call it SliceOfVariable.; // Intersect that with Assign's fragment info:; // SliceOfVariable ∩ Assign_fragment = none; //; // In this case: none of the dead bits of the store affect Assign.; //; // # Example 2; // Similar example with the same goal. This time the upper 16 bits; // of the store are going to be DSE'd.; //; // store i64 %v, ptr %dest, !DIAssignID !1; // dbg.assign(..., !DIExpression(fragment, 128, 32), !1, %dest,; // !DIExpression(DW_OP_plus_uconst, 4)); //; // calculateFragmentIntersect(..., SliceOffsetInBits=48,; // SliceSizeInBits=16, Dest=%dest, Assign=dbg.assign); //; // Memory; // offset; // from; // dest 0 63; // | |; // s[######] - Original stores 64 bits to Dest.; // $[####]-- - DSE says the upper 16 bits are dead, to be removed.; // d [##] - Assign's address-modifying expression adds 4 bytes to; // dest.; // Variable | |; // Fragment 128|; // Offsets 159; //; // Using the same steps in the first example:; // 1. SliceOffsetInBits:48 + VarFrag.OffsetInBits:128 = 176; // 2. 176 - (expression_offset:32 + (d.address - dest):0) = 144; // 3. SliceOfVariable offset = 144, size = 16:; // SliceOfVariable ∩ Assign_fragment = (offset: 144, size: 16); // SliceOfVariable tells us the bits of the variable described by Assign that; // are affected by the DSE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp:3128,Variab,Variable,3128,interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,2,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,"stance in the 2D case:; ///; /// ~~~ {.cpp}; /// auto htemp = (TH2F*)gPad->GetPrimitive(""htemp"");; /// auto xaxis = htemp->GetXaxis();; /// ~~~; ///; /// When the option `""A""` is used (with TGraph painting option) to draw a 2D; /// distribution:; /// ~~~ {.cpp}; /// tree.Draw(""e1:e2"","""",""A*"");; /// ~~~; /// a scatter plot is produced (with stars in that case) but the axis creation is; /// delegated to TGraph and `htemp` is not created.; ///; /// ### Saving the result of Draw to a histogram; ///; /// If `varexp` contains `>>hnew` (following the variable(s) name(s)),; /// the new histogram called `hnew` is created and it is kept in the current; /// directory (and also the current pad). This works for all dimensions.; ///; /// Example:; /// ~~~ {.cpp}; /// tree.Draw(""sqrt(x)>>hsqrt"",""y>0""); /// ~~~; /// will draw `sqrt(x)` and save the histogram as ""hsqrt"" in the current; /// directory. To retrieve it do:; /// ~~~ {.cpp}; /// TH1F *hsqrt = (TH1F*)gDirectory->Get(""hsqrt"");; /// ~~~; /// The binning information is taken from the environment variables; /// ~~~ {.cpp}; /// Hist.Binning.?D.?; /// ~~~; /// In addition, the name of the histogram can be followed by up to 9; /// numbers between '(' and ')', where the numbers describe the; /// following:; ///; /// - 1 - bins in x-direction; /// - 2 - lower limit in x-direction; /// - 3 - upper limit in x-direction; /// - 4-6 same for y-direction; /// - 7-9 same for z-direction; ///; /// When a new binning is used the new value will become the default.; /// Values can be skipped.; ///; /// Example:; /// ~~~ {.cpp}; /// tree.Draw(""sqrt(x)>>hsqrt(500,10,20)""); /// // plot sqrt(x) between 10 and 20 using 500 bins; /// tree.Draw(""sqrt(x):sin(y)>>hsqrt(100,10,60,50,.1,.5)""); /// // plot sqrt(x) against sin(y); /// // 100 bins in x-direction; lower limit on x-axis is 10; upper limit is 60; /// // 50 bins in y-direction; lower limit on y-axis is .1; upper limit is .5; /// ~~~; /// By default, the specified histogram is reset.; /// To co",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:11321,variab,variables,11321,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variables']
Modifiability,"strained and linear independent.; 6. Perform a Principal Component Analysis on; \f$Q_i = P_i / P^\prime_i\, i = 1, \ldots, 5\f$, to get linear; indenpendent (among themselves, but not independent of \f$\mathbf{x}\f$) quantities; \f$\mathbf{Q}^\prime\f$; 7. For each component \f$Q^\prime_i\f$ make a multidimensional fit,; using \f$\mathbf{x}^\prime\f$ as the variables, thus determining a set of; coefficients \f$\mathbf{c}_i\f$. To process data, using this parameterisation, do; 1. Test wether the observation \f$\mathbf{x}\f$ within the domain of; the parameterization, using the result from the Principal Component; Analysis.; 2. Determine \f$\mathbf{P}^\prime\f$ as before.; 3. Determine \f$\mathbf{x}^\prime\f$ as before.; 4. Use the result of the fit to determine \f$\mathbf{Q}^\prime\f$.; 5. Transform back to \f$\mathbf{P}\f$ from \f$\mathbf{Q}^\prime\f$, using; the result from the Principal Component Analysis. ## Testing the parameterization; The class also provides functionality for testing the, over the; training sample, found parameterization (TMultiDimFit::Fit). This is done by passing; the class a test sample of \f$ M_t\f$ tuples of the form; \f$(\mathbf{x}_{t,j},D_{t,j}, E_{t,j})\f$, where \f$\mathbf{x}_{t,j}\f$ are the independent; variables, \f$ D_{t,j}\f$ the known, dependent quantity, and \f$ E_{t,j}\f$ is; the square error in \f$ D_{t,j}\f$ (TMultiDimFit::AddTestRow). The parameterization is then evaluated at every \f$\mathbf{x}_t\f$ in the; test sample, and; \f[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mathbf{x}_{t,j}\right)\right)^2; \f]; is evaluated. The relative error over the test sample; \f[; R_t = \frac{S_t}{\sum_{j=1}^{M_t} D_{t,j}^2}; \f]; should not be to low or high compared to \f$ R\f$ from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representative of; the problem. A large difference in the reduced \f$ \chi^2\f$ over the two; samples in",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:16236,parameteriz,parameterization,16236,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,2,['parameteriz'],['parameterization']
Modifiability,"t default column is used instead.; /// \param[in] aggIdentity The aggregator variable of each thread is initialized to this value (or is default-constructed if the parameter is omitted); /// \return the result of the aggregation wrapped in a RResultPtr.; ///; /// An aggregator callable takes two values, an aggregator variable and a column value. The aggregator variable is; /// initialized to aggIdentity or default-constructed if aggIdentity is omitted.; /// This action calls the aggregator callable for each processed entry, passing in the aggregator variable and; /// the value of the column columnName.; /// If the signature is `U(U,T)` the aggregator variable is then copy-assigned the result of the execution of the callable.; /// Otherwise the signature of aggregator must be `void(U&,T)`.; ///; /// The merger callable is used to merge the partial accumulation results of each processing thread. It is only called in multi-thread executions.; /// If its signature is `U(U,U)` the aggregator variables of each thread are merged two by two.; /// If its signature is `void(std::vector<U>& a)` it is assumed that it merges all aggregators in a[0].; ///; /// This action is *lazy*: upon invocation of this method the calculation is booked but not executed. Also see RResultPtr.; ///; /// Example usage:; /// ~~~{.cpp}; /// auto aggregator = [](double acc, double x) { return acc * x; };; /// ROOT::EnableImplicitMT();; /// // If multithread is enabled, the aggregator function will be called by more threads; /// // and will produce a vector of partial accumulators.; /// // The merger function performs the final aggregation of these partial results.; /// auto merger = [](std::vector<double> &accumulators) {; /// for (auto i : ROOT::TSeqU(1u, accumulators.size())) {; /// accumulators[0] *= accumulators[i];; /// }; /// };; ///; /// // The accumulator is initialized at this value by every thread.; /// double initValue = 1.;; ///; /// // Multiplies all elements of the column ""x""; /// auto r",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1901,variab,variables,1901,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['variab'],['variables']
Modifiability,"t included; /// in standard URL format.; /// 3. Form ""odbcn://MySpecialConfig"", where MySpecialConfig is entry,; /// defined in user DSN (user data source). Here uid and pw should be; /// always specified.; ///; /// Configuring unixODBC under Linux: http://www.unixodbc.org/odbcinst.html; /// Remarks: for variants 1 & 2 it is enough to create/configure; /// odbcinst.ini file. For variant 3 file odbc.ini should be created.; /// Path to this files can be specified in environmental variables like; /// export ODBCINI=/home/my/unixODBC/etc/odbc.ini; /// export ODBCSYSINI=/home/my/unixODBC/etc; ///; /// Configuring MySQL ODBC under Windows.; /// Installing ODBC driver for MySQL is enough to use it under Windows.; /// Afer odbcd:// variant can be used with DRIVER={MySQL ODBC 3.51 Driver};; /// To configure User DSN, go into Start menu -> Settings ->; /// Control panel -> Administrative tools-> Data Sources (ODBC).; ///; /// To install Oracle ODBC driver for Windows, one should download; /// and install either complete Oracle client (~500 MB), or so-called; /// Instant Client Basic and Instant Client ODBC (~20 MB together).; /// Some remark about Instant Client:; /// 1) Two additional DLLs are required: mfc71.dll & msver71.dll; /// They can be found either in MS VC++ 7.1 Free Toolkit or; /// download from other Internet sites; /// 2) ORACLE_HOME environment variable should be specified and point to; /// location, where Instant Client files are extracted; /// 3) Run odbc_install.exe from account with administrative rights; /// 3) In $ORACLE_HOME/network/admin/ directory appropriate *.ora files; /// like ldap.ora, sqlnet.ora, tnsnames.ora should be installed.; /// Contact your Oracle administrator to get these files.; /// After Oracle ODBC driver is installed, appropriate entry in ODBC drivers; /// list like ""Oracle in instantclient10_2"" should appear. Connection; /// string example:; /// ""odbcd://DRIVER={Oracle in instantclient10_2};DBQ=db-test;UID=user_name;PWD=user_pass;"";",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx:2284,variab,variable,2284,sql/odbc/src/TODBCServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCServer.cxx,1,['variab'],['variable']
Modifiability,"t lattice and the update function to be monotone. However, these; // conditions are not enforced because the iteration limit will guarantee; // termination. If an optimistic fixpoint is reached, or a pessimistic fix; // point is enforced after a timeout, the abstract attributes are tasked to; // manifest their result in the IR for passes to come.; //; // Attribute manifestation is not mandatory. If desired, there is support to; // generate a single or multiple LLVM-IR attributes already in the helper struct; // IRAttribute. In the simplest case, a subclass inherits from IRAttribute with; // a proper Attribute::AttrKind as template parameter. The Attributor; // manifestation framework will then create and place a new attribute if it is; // allowed to do so (based on the abstract state). Other use cases can be; // achieved by overloading AbstractAttribute or IRAttribute methods.; //; //; // The ""mechanics"" of adding a new ""abstract attribute"":; // - Define a class (transitively) inheriting from AbstractAttribute and one; // (which could be the same) that (transitively) inherits from AbstractState.; // For the latter, consider the already available BooleanState and; // {Inc,Dec,Bit}IntegerState if they fit your needs, e.g., you require only a; // number tracking or bit-encoding.; // - Implement all pure methods. Also use overloading if the attribute is not; // conforming with the ""default"" behavior: A (set of) LLVM-IR attribute(s) for; // an argument, call site argument, function return value, or function. See; // the class and method descriptions for more information on the two; // ""Abstract"" classes and their respective methods.; // - Register opportunities for the new abstract attribute in the; // `Attributor::identifyDefaultAbstractAttributes` method if it should be; // counted as a 'default' attribute.; // - Add sufficient tests.; // - Add a Statistics object for bookkeeping. If it is a simple (set of); // attribute(s) manifested through the Attributor manifestatio",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:4530,inherit,inheriting,4530,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,2,['inherit'],"['inheriting', 'inherits']"
Modifiability,"t,; * unsigned int dst_width,; * unsigned int dst_height,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality);; * INPUTS; * asv - pointer to valid ASVisual structure; * layers - array of ASImageLayer structures that will be rendered; * one on top of another. First element corresponds to; * the bottommost layer.; * dst_width - desired width of the resulting image; * dst_height - desired height of the resulting image; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out - compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; * DESCRIPTION; * merge_layers() will create new ASImage of requested size. It will then; * go through all the layers, and fill image with composition.; * Bottommost layer will be used unchanged and above layers will be; * superimposed on it, using algorithm specified in ASImageLayer; * structure of the overlaying layer. Layers may have smaller size; * then destination image, and maybe placed in arbitrary locations. Each; * layer will be padded to fit width of the destination image with all 0; * effectively making it transparent.; *********/; /****f* libAfterImage/transform/make_gradient(); * NAME; * make_gradient() - renders linear gradient into new ASImage; * SYNOPSIS; * ASImage *make_gradient ( struct ASVisual *asv,; * struct ASGradient *grad,; * unsigned int width,; * unsigned int height,; * ASFlagType filter,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality);; * INPUTS; * asv - pointer to valid ASVisual structure; * grad - ASGradient structure defining how gradient should be; * drawn; * width - desired width of the resulting image; * height - desired height of the resulting image; * filter - only channels corresponding to set bits will be; * rendered.; * out_format 	- optionally describe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:5031,layers,layers,5031,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['layers'],['layers']
Modifiability,"tNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:4030,variab,variable,4030,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variable']
Modifiability,"t\{ v_{p-1}(i)^{\frac{\left[v_{p-1}(i+p)+v_{p-1}(i-p)\right]}{2}} \right\}; /// \f]; ///; /// where p = 1, 2, ..., numberIterations. In fact it represents second order; /// difference filter (-1,2,-1).; ///; /// One can also change the; /// direction of the change of the clipping window, the order of the clipping; /// filter, to include smoothing, to set width of smoothing window and to include; /// the estimation of Compton edges. On successful completion it returns 0. On; /// error it returns pointer to the string describing error.; ///; /// #### Parameters:; ///; /// - spectrum: pointer to the vector of source spectrum; /// - ssize: length of the spectrum vector; /// - numberIterations: maximal width of clipping window,; /// - direction: direction of change of clipping window.; /// Possible values: kBackIncreasingWindow, kBackDecreasingWindow; /// - filterOrder: order of clipping filter.; /// Possible values: kBackOrder2, kBackOrder4, kBackOrder6, kBackOrder8; /// - smoothing: logical variable whether the smoothing operation in the; /// estimation of background will be included.; /// Possible values: kFALSE, kTRUE; /// - smoothWindow: width of smoothing window.; /// Possible values: kBackSmoothing3, kBackSmoothing5, kBackSmoothing7,; /// kBackSmoothing9, kBackSmoothing11, kBackSmoothing13, kBackSmoothing15.; /// - compton: logical variable whether the estimation of Compton edge will be; /// included. Possible values: kFALSE, kTRUE.; ///; /// #### References:; ///; /// 1. C. G Ryan et al.: SNIP, a statistics-sensitive background treatment for the; /// quantitative analysis of PIXE spectra in geoscience applications. NIM, B34; /// (1988), 396-402.; ///; /// 2. M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo:; /// Background elimination methods for multidimensional gamma-ray spectra. NIM,; /// A401 (1997) 113-132.; ///; /// 3. D. D. Burgess, R. J. Tervo: Background estimation for gamma-ray; /// spectroscopy. NIM 214 (1983), 431-434.; ///; /// ### Example 1 ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1513,variab,variable,1513,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['variab'],['variable']
Modifiability,"terms of several; others, which are directly measurable. An example in high energy physics is the evaluation of the momentum of; a charged particle from the observation of its trajectory in a magnetic; field. The problem is to relate the momentum of the particle to the; observations, which may consists of positional measurements at; intervals along the particle trajectory. The exact functional relationship between the measured quantities; (e.g., the space-points) and the dependent quantity (e.g., the; momentum) is in general not known, but one possible way of solving the; problem, is to find an expression which reliably approximates the; dependence of the momentum on the observations. This explicit function of the observations can be obtained by a; <I>least squares</I> fitting procedure applied to a representative; sample of the data, for which the dependent quantity (e.g., momentum); and the independent observations are known. The function can then be; used to compute the quantity of interest for new observations of the; independent variables. This class <TT>TMultiDimFit</TT> implements such a procedure in; ROOT. It is largely based on the CERNLIB MUDIFI package [2].; Though the basic concepts are still sound, and; therefore kept, a few implementation details have changed, and this; class can take advantage of MINUIT [4] to improve the errors; of the fitting, thanks to the class TMinuit. In [5] and [6] H. Wind demonstrates the utility; of this procedure in the context of tracking, magnetic field; parameterisation, and so on. The outline of the method used in this; class is based on Winds discussion, and I refer these two excellents; text for more information. And example of usage is given in multidimfit.C. ## The Method; Let \f$ D \f$ by the dependent quantity of interest, which depends smoothly; on the observable quantities \f$ x_1, \ldots, x_N \f$ which we'll denote by; \f$\mathbf{x}\f$. Given a training sample of \f$ M\f$ tuples of the form, (TMultiDimFit::AddRow",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:1331,variab,variables,1331,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variables']
Modifiability,"ters and observables, the; /// complete tree of objects is imported. If any of the _variables_ of a composite object (parameters/observables) are already; /// in the workspace the imported p.d.f. is connected to the already existing variables. If any of the _function_ objects (p.d.f, formulas); /// to be imported already exists in the workspace an error message is printed and the import of the entire tree of objects is cancelled.; /// Several optional arguments can be provided to modify the import procedure.; ///; /// <table>; /// <tr><th> Accepted arguments; /// <tr><td> `RenameConflictNodes(const char* suffix)` <td> Add suffix to branch node name if name conflicts with existing node in workspace; /// <tr><td> `RenameAllNodes(const char* suffix)` <td> Add suffix to all branch node names including top level node.; /// <tr><td> `RenameAllVariables(const char* suffix)` <td> Add suffix to all variables of objects being imported.; /// <tr><td> `RenameAllVariablesExcept(const char* suffix, const char* exceptionList)` <td> Add suffix to all variables names, except ones listed; /// <tr><td> `RenameVariable(const char* inputName, const char* outputName)` <td> Rename a single variable as specified upon import.; /// <tr><td> `RecycleConflictNodes()` <td> If any of the function objects to be imported already exist in the name space, connect the; /// imported expression to the already existing nodes.; /// \attention Use with care! If function definitions do not match, this alters the definition of your function upon import; ///; /// <tr><td> `Silence()` <td> Do not issue any info message; /// </table>; ///; /// The RenameConflictNodes, RenameNodes and RecycleConflictNodes arguments are mutually exclusive. The RenameVariable argument can be repeated; /// as often as necessary to rename multiple variables. Alternatively, a single RenameVariable argument can be given with; /// two comma separated lists.; /// \note From python, use `Import()`, since `import` is a reserved keyword.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:1362,variab,variables,1362,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,3,['variab'],"['variable', 'variables']"
Modifiability,"ters](\ref F1); 2. [Expression using variable x with parameters](\ref F2); 3. [Lambda Expression with variable x and parameters](\ref F3); 4. [A general C function with parameters](\ref F4); 5. [A general C++ function object (functor) with parameters](\ref F5); 6. [A member function with parameters of a general C++ class](\ref F6). \anchor F1; ### 1 - Expression using variable x and no parameters. #### Case 1: inline expression using standard C++ functions/operators. Begin_Macro(source); {; auto fa1 = new TF1(""fa1"",""sin(x)/x"",0,10);; fa1->Draw();; }; End_Macro. #### Case 2: inline expression using a ROOT function (e.g. from TMath) without parameters. Begin_Macro(source); {; auto fa2 = new TF1(""fa2"",""TMath::DiLog(x)"",0,10);; fa2->Draw();; }; End_Macro. #### Case 3: inline expression using a user defined CLING function by name. ~~~~{.cpp}; Double_t myFunc(double x) { return x+sin(x); }; ....; auto fa3 = new TF1(""fa3"",""myFunc(x)"",-3,5);; fa3->Draw();; ~~~~. \anchor F2; ### 2 - Expression using variable x with parameters. #### Case 1: inline expression using standard C++ functions/operators. * Example a:. ~~~~{.cpp}; auto fa = new TF1(""fa"",""[0]*x*sin([1]*x)"",-3,3);; ~~~~. This creates a function of variable x with 2 parameters. The parameters must be initialized via:. ~~~~{.cpp}; fa->SetParameter(0,value_first_parameter);; fa->SetParameter(1,value_second_parameter);; ~~~~. Parameters may be given a name:. ~~~~{.cpp}; fa->SetParName(0,""Constant"");; ~~~~. * Example b:. ~~~~{.cpp}; auto fb = new TF1(""fb"",""gaus(0)*expo(3)"",0,10);; ~~~~. ``gaus(0)`` is a substitute for ``[0]*exp(-0.5*((x-[1])/[2])**2)`` and ``(0)`` means start numbering parameters at ``0``. ``expo(3)`` is a substitute for ``exp([3]+[4]*x)``. #### Case 2: inline expression using TMath functions with parameters. Begin_Macro(source); {; auto fb2 = new TF1(""fa3"",""TMath::Landau(x,[0],[1],0)"",-5,10);; fb2->SetParameters(0.2,1.3);; fb2->Draw();; }; End_Macro. \anchor F3; ### 3 - A lambda expression with variables an",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:1568,variab,variable,1568,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['variab'],['variable']
Modifiability,"the machine proceeds to the; next state. The NEEDBITS() macro is usually the way the state evaluates; whether it can proceed or should return. NEEDBITS() does the return if; the requested bits are not available. The typical use of the BITS macros; is:. NEEDBITS(n);; ... do something with BITS(n) ...; DROPBITS(n);. where NEEDBITS(n) either returns from inflate() if there isn't enough; input left to load n bits into the accumulator, or it continues. BITS(n); gives the low n bits in the accumulator. When done, DROPBITS(n) drops; the low n bits off the accumulator. INITBITS() clears the accumulator; and sets the number of available bits to zero. BYTEBITS() discards just; enough bits to put the accumulator on a byte boundary. After BYTEBITS(); and a NEEDBITS(8), then BITS(8) would return the next byte in the stream. NEEDBITS(n) uses PULLBYTE() to get an available byte of input, or to return; if there is no input available. The decoding of variable length codes uses; PULLBYTE() directly in order to pull just enough bytes to decode the next; code, and no more. Some states loop until they get enough input, making sure that enough; state information is maintained to continue the loop where it left off; if NEEDBITS() returns in the loop. For example, want, need, and keep; would all have to actually be part of the saved state in case NEEDBITS(); returns:. case STATEw:; while (want < need) {; NEEDBITS(n);; keep[want++] = BITS(n);; DROPBITS(n);; }; state = STATEx;; case STATEx:. As shown above, if the next state is also the next case, then the break; is omitted. A state may also return if there is not enough output space available to; complete that state. Those states are copying stored data, writing a; literal byte, and copying a matching string. When returning, a ""goto inf_leave"" is used to update the total counters,; update the check value, and determine whether any progress has been made; during that inflate() call in order to return the proper return code.; Progress is defi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:1420,variab,variable,1420,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,2,['variab'],['variable']
Modifiability,"the momentum; // Float_t fPy; //Y component of the momentum; // Float_t fPz; //Z component of the momentum; // Float_t fRandom; //A random track quantity; // Float_t fMass2; //The mass square of this particle; // Float_t fBx; //X intercept at the vertex; // Float_t fBy; //Y intercept at the vertex; // Float_t fMeanCharge; //Mean charge deposition of all hits of this track; // Float_t fXfirst; //X coordinate of the first point; // Float_t fXlast; //X coordinate of the last point; // Float_t fYfirst; //Y coordinate of the first point; // Float_t fYlast; //Y coordinate of the last point; // Float_t fZfirst; //Z coordinate of the first point; // Float_t fZlast; //Z coordinate of the last point; // Double32_t fCharge; //Charge of this track; // Double32_t fVertex[3]; //Track vertex position; // Int_t fNpoint; //Number of points for this track; // Short_t fValid; //Validity criterion; // Int_t fNsp; //Number of points for this track with a special value; // Double32_t *fPointValue; //[fNsp] a special quantity for some point.; // TBits fTriggerBits; //Bits triggered by this track.; //; // An example of a batch program to use the Event/Track classes is given; // in this directory: MainEvent.; // Look also in the same directory at the following macros:; // - eventa.C an example how to read the tree; // - eventb.C how to read events conditionally; //; // During the processing of the event (optionally) also a large number; // of histograms can be filled. The creation and handling of the; // histograms is taken care of by the HistogramManager class.; //; // Note: This version of the class Event (see EventMT.h and EventMT.cxx; // for an alternative) uses static variables to improve performance (by; // reducing the number of memory allocations). Consequently, only one; // instance of the class Event should be in use at a time (a 2nd instance; // would share the array of Tracks with the first instance).; //; ////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/Event.cxx:2985,variab,variables,2985,test/Event.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/Event.cxx,1,['variab'],['variables']
Modifiability,"the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvPdf.cxx; \class RooNumConvPdf; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF using a straightforward numeric calculation of the; convolution integral; This class should be used as last resort as numeric convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1527,adapt,adaptive,1527,roofit/roofitcore/src/RooNumConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx,1,['adapt'],['adaptive']
Modifiability,"the values they should have,; /// * Values to the register / spill slot they are located in.; /// After which we can marry-up variable values with a location, and emit; /// DBG_VALUE instructions specifying those locations. Variable locations may; /// be dropped in this process due to the desired variable value not being; /// resident in any machine location, or because there is no PHI value in any; /// location that accurately represents the desired value. The building of; /// location lists for each block is left to DbgEntityHistoryCalculator.; ///; /// This pass is kept efficient because the size of the first SSA problem; /// is proportional to the working-set size of the function, which the compiler; /// tries to keep small. (It's also proportional to the number of blocks).; /// Additionally, we repeatedly perform the second SSA problem analysis with; /// only the variables and blocks in a single lexical scope, exploiting their; /// locality.; ///; /// ### Terminology; ///; /// A machine location is a register or spill slot, a value is something that's; /// defined by an instruction or PHI node, while a variable value is the value; /// assigned to a variable. A variable location is a machine location, that must; /// contain the appropriate variable value. A value that is a PHI node is; /// occasionally called an mphi.; ///; /// The first SSA problem is the ""machine value location"" problem,; /// because we're determining which machine locations contain which values.; /// The ""locations"" are constant: what's unknown is what value they contain.; ///; /// The second SSA problem (the one for variables) is the ""variable value; /// problem"", because it's determining what values a variable has, rather than; /// what location those values are placed in.; ///; /// TODO:; /// Overlapping fragments; /// Entry values; /// Add back DEBUG statements for debugging this; /// Collect statistics; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:3478,variab,variable,3478,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,7,['variab'],"['variable', 'variables']"
Modifiability,"the variables in coincidentally the; // same location and raises a fatal error if something has gone awry. This works; // in practice because the only pass between this one and the backend that; // changes LDS is PromoteAlloca and the changes it makes do not conflict.; //; // Addresses are written to constant global arrays based on the same metadata.; //; // The backend lowers LDS variables in the order of traversal of the function.; // This is at odds with the deterministic layout required. The workaround is to; // allocate the fixed-address variables immediately upon starting the function; // where they can be placed as intended. This requires a means of mapping from; // the function to the variables that it allocates. For the module scope lds,; // this is via metadata indicating whether the variable is not required. If a; // pass deletes that metadata, a fatal error on disagreement with the absolute; // symbol metadata will occur. For kernel scope and dynamic, this is by _name_; // correspondence between the function and the variable. It requires the; // kernel to have a name (which is only a limitation for tests in practice) and; // for nothing to rename the corresponding symbols. This is a hazard if the pass; // is run multiple times during debugging. Alternative schemes considered all; // involve bespoke metadata.; //; // If the name correspondence can be replaced, multiple distinct kernels that; // have the same memory layout can map to the same kernel id (as the address; // itself is handled by the absolute symbol metadata) and that will allow more; // uses of the ""kernel"" style faster lowering and reduce the size of the lookup; // tables.; //; // There is a test that checks this does not fire for a graphics shader. This; // lowering is expected to work for graphics if the isKernel test is changed.; //; // The current markUsedByKernel is sufficient for PromoteAlloca but is elided; // before codegen. Replacing this with an equivalent intrinsic which lasts unt",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:8875,variab,variable,8875,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variable']
Modifiability,"then the response; /// function is generated according to given sigma and deconvolution is; /// carried out. The order of peaks is arranged according to their heights in; /// the spectrum after background elimination. The highest peak is the first in; /// the list. On success it returns number of found peaks.; ///; /// #### Parameters:; ///; /// - source: pointer to the vector of source spectrum.; /// - destVector: pointer to the vector of resulting deconvolved spectrum.; /// - ssize: length of source spectrum.; /// - sigma: sigma of searched peaks, for details we refer to manual.; /// - threshold: threshold value in % for selected peaks, peaks with; /// amplitude less than threshold*highest_peak/100; /// are ignored, see manual.; /// - backgroundRemove: logical variable, set if the removal of; /// background before deconvolution is desired.; /// - deconIterations-number of iterations in deconvolution operation.; /// - markov: logical variable, if it is true, first the source spectrum; /// is replaced by new spectrum calculated using Markov; /// chains method.; /// - averWindow: averaging window of searched peaks, for details; /// we refer to manual (applies only for Markov method).; ///; /// ### Peaks searching:; ///; /// The goal of this function is to identify automatically the peaks in spectrum; /// with the presence of the continuous background and statistical; /// fluctuations - noise.; ///; /// The common problems connected with correct peak identification are:; ///; /// - non-sensitivity to noise, i.e., only statistically; /// relevant peaks should be identified.; /// - non-sensitivity of the algorithm to continuous; /// background.; /// - ability to identify peaks close to the edges of the; /// spectrum region. Usually peak finders fail to detect them.; /// - resolution, decomposition of Double_tts and multiplets.; /// The algorithm should be able to recognise close positioned peaks.; /// - ability to identify peaks with different sigma.; ///; /// \image htm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:1302,variab,variable,1302,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['variab'],['variable']
Modifiability,"thods exist to fill a sparse matrix with data entries.; Most are the same like for dense matrices but some care has to be; taken with regard to performance. In the constructor, always the; shape of the matrix has to be specified in some form . Data can be; entered through the following methods :; 1. constructor from COO matrix format; ~~~; TMatrixTSparse(Int_t row_lwb,Int_t row_upb,Int_t dol_lwb,; Int_t col_upb,Int_t nr_nonzeros,; Int_t *row, Int_t *col,Element *data);; ~~~; It uses SetMatrixArray(..), see below; 2. constructor from Harwell-Boeing (CSR) matrix format; ~~~; TMatrixTSparse(Int_t row_lwb,Int_t row_upb,Int_t dol_lwb,; Int_t col_upb,; Int_t *rowptr, Int_t *col,Element *data);; ~~~; It copies input arrays into matrix .; 3. copy constructors; 4. SetMatrixArray(Int_t nr,Int_t *irow,Int_t *icol,Element *data); where it is expected that the irow,icol and data array contain; nr entries . Only the entries with non-zero data[i] value are; inserted. Be aware that the input data array will be modified; inside the routine for doing the necessary sorting of indices !; 5. SetMatrixArray(Int_t nr,Int_t nrows,Int_t ncols,Int_t *irow,; Int_t *icol,Element *data) where it is expected that the irow,; icol and data array contain nr entries . It allows to reshape; the matrix according to nrows and ncols. Only the entries with; non-zero data[i] value are inserted. Be aware that the input; data array will be modified inside the routine for doing the; necessary sorting of indices !; 6. TMatrixTSparse a(n,m); for(....) { a(i,j) = ....; This is a very flexible method but expensive :; - if no entry for slot (i,j) is found in the sparse index table; it will be entered, which involves some memory management !; - before invoking this method in a loop it is smart to first; set the index table through a call to SetSparseIndex(..); 7. SetSub(Int_t row_lwb,Int_t col_lwb,const TMatrixTBase &source); the matrix to be inserted at position (row_lwb,col_lwb) can be; both dense or sparse . */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx:3147,flexible,flexible,3147,math/matrix/src/TMatrixTSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx,1,['flexible'],['flexible']
Modifiability,"thors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooWorkspace.cxx; \class RooWorkspace; \ingroup Roofitcore. Persistable container for RooFit projects. A workspace; can contain and own variables, p.d.f.s, functions and datasets. All objects; that live in the workspace are owned by the workspace. The `import()` method; enforces consistency of objects upon insertion into the workspace (e.g. no; duplicate object with the same name are allowed) and makes sure all objects; in the workspace are connected to each other. Easy accessor methods like; `pdf()`, `var()` and `data()` allow to refer to the contents of the workspace by; object name. The entire RooWorkspace can be saved into a ROOT TFile and organises; the consistent streaming of its contents without duplication.; If a RooWorkspace contains custom classes, i.e. classes not in the; ROOT distribution, portability of workspaces can be enhanced by; storing the source code of those classes in the workspace as well.; This process is also organized by the workspace through the; `importClassCode()` method. ### Seemingly random crashes when reading large workspaces; When reading or loading workspaces with deeply nested PDFs, one can encounter; ouf-of-memory errors if the stack size is too small. This manifests in crashes; at seemingly random locations, or in the process silently ending.; Unfortunately, ROOT neither recover from this situation, nor warn or give useful; instructions. When suspecting to have run out of stack memory, check; ```; ulimit -s; ```; and try reading again.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:1469,portab,portability,1469,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,2,"['enhance', 'portab']","['enhanced', 'portability']"
Modifiability,"thors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooSimultaneous.cxx; \class RooSimultaneous; \ingroup Roofitcore. Facilitates simultaneous fitting of multiple PDFs to subsets of a given dataset.; The class takes an index category, which is used as a selector; for PDFs, and a list of PDFs, each associated; with a state of the index category. RooSimultaneous always returns; the value of the PDF that is associated with the current value; of the index category. Extended likelihood fitting is supported if all components support; extended likelihood mode. The expected number of events by a RooSimultaneous; is that of the component p.d.f. selected by the index category. The index category can be accessed using indexCategory(). ###Generating events; When generating events from a RooSimultaneous, the index category has to be added to; the dataset. Further, the PDF needs to know the relative probabilities of each category, i.e.,; how many events are in which category. This can be achieved in two ways:; - Generating with proto data that have category entries: An event from the same category as; in the proto data is created for each event in the proto data.; See RooAbsPdf::generate(const RooArgSet&,const RooDataSet&,Int_t,bool,bool,bool) const.; - No proto data: A category is chosen randomly.; \note This requires that the PDFs building the simultaneous are extended. In this way,; the relative probability of each category can be calculated from the number of events; in each category.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:1120,Extend,Extended,1120,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,3,"['Extend', 'extend']","['Extended', 'extended']"
Modifiability,"timisation of signal efficiency for given background; efficiency, applying rectangular minimum and maximum requirements. Also implemented is a ""decorrelate/diagonalized cuts approach"",; which improves over the uncorrelated cuts approach by; transforming linearly the input variables into a diagonal space,; using the square-root of the covariance matrix. Other optimisation criteria, such as maximising the signal significance-; squared, \f$ \frac{S^2}{(S+B)} \f$, with S and B being the signal and background yields,; correspond to a particular point in the optimised background rejection; versus signal efficiency curve. This working point requires the knowledge; of the expected yields, which is not the case in general. Note also that; for rare signals, Poissonian statistics should be used, which modifies; the significance criterion. The rectangular cut of a volume in the variable space is performed using; a binary tree to sort the training events. This provides a significant; reduction in computing time (up to several orders of magnitudes, depending; on the complexity of the problem at hand). Technically, optimisation is achieved in TMVA by two methods:. 1. Monte Carlo generation using uniform priors for the lower cut value,; and the cut width, thrown within the variable ranges. 2. A Genetic Algorithm (GA) searches for the optimal (""fittest"") cut sample.; The GA is configurable by many external settings through the option; string. For difficult cases (such as many variables), some tuning; may be necessary to achieve satisfying results. Attempts to use Minuit fits (Simplex ot Migrad) instead have not shown; superior results, and often failed due to convergence at local minima. The tests we have performed so far showed that in generic applications,; the GA is superior to MC sampling, and hence GA is the default method.; It is worthwhile trying both anyway. **Decorrelated (or ""diagonalized"") Cuts**. See class description for Method Likelihood for a detailed explanation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx:2561,variab,variable,2561,tmva/tmva/src/MethodCuts.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx,3,"['config', 'variab']","['configurable', 'variable', 'variables']"
Modifiability,"tion are:; /// - KMSAN always tracks the origins and implies msan-keep-going=true;; /// - KMSAN allocates shadow and origin memory for each page separately, so; /// there are no explicit accesses to shadow and origin in the; /// instrumentation.; /// Shadow and origin values for a particular X-byte memory location; /// (X=1,2,4,8) are accessed through pointers obtained via the; /// __msan_metadata_ptr_for_load_X(ptr); /// __msan_metadata_ptr_for_store_X(ptr); /// functions. The corresponding functions check that the X-byte accesses; /// are possible and returns the pointers to shadow and origin memory.; /// Arbitrary sized accesses are handled with:; /// __msan_metadata_ptr_for_load_n(ptr, size); /// __msan_metadata_ptr_for_store_n(ptr, size);; /// Note that the sanitizer code has to deal with how shadow/origin pairs; /// returned by the these functions are represented in different ABIs. In; /// the X86_64 ABI they are returned in RDX:RAX, and in the SystemZ ABI they; /// are written to memory pointed to by a hidden parameter.; /// - TLS variables are stored in a single per-task struct. A call to a; /// function __msan_get_context_state() returning a pointer to that struct; /// is inserted into every instrumented function before the entry block;; /// - __msan_warning() takes a 32-bit origin parameter;; /// - local variables are poisoned with __msan_poison_alloca() upon function; /// entry and unpoisoned with __msan_unpoison_alloca() before leaving the; /// function;; /// - the pass doesn't declare any global variables or add global constructors; /// to the translation unit.; ///; /// Also, KMSAN currently ignores uninitialized memory passed into inline asm; /// calls, making sure we're on the safe side wrt. possible false positives.; ///; /// KernelMemorySanitizer only supports X86_64 and SystemZ at the moment.; ///; //; // FIXME: This sanitizer does not yet handle scalable vectors; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp:7176,variab,variables,7176,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,3,['variab'],['variables']
Modifiability,"tion for file descriptor to write to child's stdin, or NULL; * @standard_output: return location for file descriptor to read child's stdout, or NULL; * @standard_error: return location for file descriptor to read child's stderr, or NULL; * @error: return location for error; *; * Executes a child program asynchronously (your program will not; * block waiting for the child to exit). The child program is; * specified by the only argument that must be provided, @argv. @argv; * should be a NULL-terminated array of strings, to be passed as the; * argument vector for the child. The first string in @argv is of; * course the name of the program to execute. By default, the name of; * the program must be a full path; the PATH shell variable will only; * be searched if you pass the %G_SPAWN_SEARCH_PATH flag.; *; * @envp is a NULL-terminated array of strings, where each string; * has the form <literal>KEY=VALUE</literal>. This will become; * the child's environment. If @envp is NULL, the child inherits its; * parent's environment.; *; * @flags should be the bitwise OR of any flags you want to affect the; * function's behavior. The %G_SPAWN_DO_NOT_REAP_CHILD means that the; * child will not be automatically reaped; you must call waitpid() or; * handle SIGCHLD yourself, or the child will become a zombie.; * %G_SPAWN_LEAVE_DESCRIPTORS_OPEN means that the parent's open file; * descriptors will be inherited by the child; otherwise all; * descriptors except stdin/stdout/stderr will be closed before; * calling exec() in the child. %G_SPAWN_SEARCH_PATH means that; * <literal>argv[0]</literal> need not be an absolute path, it; * will be looked for in the user's PATH. %G_SPAWN_STDOUT_TO_DEV_NULL; * means that the child's standad output will be discarded, instead; * of going to the same location as the parent's standard output.; * %G_SPAWN_STDERR_TO_DEV_NULL means that the child's standard error; * will be discarded. %G_SPAWN_CHILD_INHERITS_STDIN means that; * the child will inherit the pa",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:1442,inherit,inherits,1442,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,2,['inherit'],['inherits']
Modifiability,"tion of all; entries such that not all branch buffers are read. \anchor description; ## General Description; This class acts as a file cache, registering automatically the baskets from; the branches being processed via direct manipulation of TTrees or with tools; such as TTree::Draw, TTree::Process, TSelector, TTreeReader and RDataFrame; when in the learning phase. The learning phase is by default 100 entries.; It can be changed via TTreeCache::SetLearnEntries. The usage of a TTreeCache can considerably improve the runtime performance at; the price of a modest investment in memory, in particular when the TTree is; accessed remotely, e.g. via a high latency network. For each TTree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize method; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning perio",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:3433,variab,variable,3433,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['variab'],['variable']
Modifiability,"tion; //; //===----------------------------------------------------------------------===//; //; // This file provides an interface for customizing the standard MachineScheduler; // pass. Note that the entire pass may be replaced as follows:; //; // <Target>TargetMachine::createPassConfig(PassManagerBase &PM) {; // PM.substitutePass(&MachineSchedulerID, &CustomSchedulerPassID);; // ...}; //; // The MachineScheduler pass is only responsible for choosing the regions to be; // scheduled. Targets can override the DAG builder and scheduler without; // replacing the pass as follows:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // return new CustomMachineScheduler(C);; // }; //; // The default scheduler, ScheduleDAGMILive, builds the DAG and drives list; // scheduling while updating the instruction stream, register pressure, and live; // intervals. Most targets don't need to override the DAG builder and list; // scheduler, but subtargets that require custom scheduling heuristics may; // plugin an alternate MachineSchedStrategy. The strategy is responsible for; // selecting the highest priority node from the list:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // return new ScheduleDAGMILive(C, CustomStrategy(C));; // }; //; // The DAG builder can also be customized in a sense by adding DAG mutations; // that will run after DAG building and before list scheduling. DAG mutations; // can adjust dependencies based on target-specific knowledge or add weak edges; // to aid heuristics:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // ScheduleDAGMI *DAG = createGenericSchedLive(C);; // DAG->addMutation(new CustomDAGMutation(...));; // return DAG;; // }; //; // A target that supports alternative schedulers can use the; // MachineSchedRegistry to allow command line selection. This can be done by; // implementing the fol",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:1335,plugin,plugin,1335,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['plugin'],['plugin']
Modifiability,"tional: defaults to 0; objc-constraint: retain_release # Optional: defaults to retain_release; parent-umbrella: # Optional:; exports: # List of export sections; ...; undefineds: # List of undefineds sections; ... Each export section is defined as following:. - archs: [ arm64 ] # the list of architecture slices; allowed-clients: [ client ] # Optional: List of clients; re-exports: [ ] # Optional: List of re-exports; symbols: [ _sym ] # Optional: List of symbols; objc-classes: [] # Optional: List of Objective-C classes; objc-eh-types: [] # Optional: List of Objective-C classes; # with EH; objc-ivars: [] # Optional: List of Objective C Instance; # Variables; weak-def-symbols: [] # Optional: List of weak defined symbols; thread-local-symbols: [] # Optional: List of thread local symbols. Each undefineds section is defined as following:; - archs: [ arm64 ] # the list of architecture slices; symbols: [ _sym ] # Optional: List of symbols; objc-classes: [] # Optional: List of Objective-C classes; objc-eh-types: [] # Optional: List of Objective-C classes; # with EH; objc-ivars: [] # Optional: List of Objective C Instance Variables; weak-ref-symbols: [] # Optional: List of weak defined symbols; */; /*. YAML Format specification. --- !tapi-tbd; tbd-version: 4 # The tbd version for format; targets: [ armv7-ios, x86_64-maccatalyst ] # The list of applicable tapi supported target triples; uuids: # Optional: List of target and UUID pairs.; - target: armv7-ios; value: ...; - target: x86_64-maccatalyst; value: ...; flags: [] # Optional:; install-name: /u/l/libfoo.dylib #; current-version: 1.2.3 # Optional: defaults to 1.0; compatibility-version: 1.0 # Optional: defaults to 1.0; swift-abi-version: 0 # Optional: defaults to 0; parent-umbrella: # Optional:; allowable-clients:; - targets: [ armv7-ios ] # Optional:; clients: [ clientA ]; exports: # List of export sections; ...; re-exports: # List of reexport sections; ...; undefineds: # List of undefineds sections; ... Each export and reexp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp:4346,Variab,Variables,4346,interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TextAPI/TextStub.cpp,1,['Variab'],['Variables']
Modifiability,"tml.Search: http://www.google.com/search?q=%s+site%3A%u</pre>. <h4><a name=""conf:charset"">II.8 HTML Charset</a></h4>. <p>XHTML 1.0 transitional recommends the specification of the charset in the; content type meta tag, see e.g. <a href=""http://www.w3.org/TR/2002/REC-xhtml1-20020801/"">http://www.w3.org/TR/2002/REC-xhtml1-20020801/</a>; <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> generates it for the HTML output files. It defaults to ISO-8859-1, and; can be changed using Root.Html.Charset.</p>. <p>Example:</p><pre>; Root.Html.Charset: EUC-JP</pre>. <h3><a name=""syntax"">III. Documentation syntax</a></h3>; <h4><a name=""syntax:classdesc"">III.1 Class description</a></h4>. <p>A class description block, which must be placed before the first; member function, has a following form:</p>; <pre>; ////////////////////////////////////////////////////////////////; // //; // TMyClass //; // //; // This is the description block. //; // //; ////////////////////////////////////////////////////////////////; </pre>; <p>The environment variable Root.Html.Description; (see: <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>) contains; the delimiter string (default value: <tt>//_________________</tt>). It means; that you can also write your class description block like this:</p>; <pre>; //_____________________________________________________________; // A description of the class starts with the line above, and; // will take place here !; //; </pre>; <p>Note that <b><i>everything</i></b> until the first non-commented line is considered; as a valid class description block.</p>. <h4><a name=""syntax:classidx"">III.2 Class index</a></h4>. <p>All classes to be documented will have an entry in the ClassIndex.html,; showing their name with a link to their documentation page and a miniature; description. This description for e.g. the class MyClass has to be given; in MyClass's header as a comment right after ClassDef(MyClass, n).</p>. <h4><a name=""syntax:meth"">III.3 Method do",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:13208,variab,variable,13208,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,1,['variab'],['variable']
Modifiability,"to be normalised). #### Normalization/Integration. Although the normalization of a PDF is an integral part of a; probability density function, normalization is treated separately; in RooAbsPdf. The reason is that a RooAbsPdf object is more than a; PDF: it can be a building block for a more complex composite PDF; if any of its variables are functions instead of variables. In; such cases, the normalization of the composite PDF may not simply be; integral over the dependents of the top-level PDF: these are; functions with potentially non-trivial Jacobian terms themselves.; \note Therefore, no explicit attempt should be made to normalize the; function output in evaluate(). In particular, normalisation constants; can be omitted to speed up the function evaluations, and included later; in the integration of the PDF (see below), which is rarely called in; comparison to the `evaluate()` function. In addition, RooAbsPdf objects do not have a static concept of what; variables are parameters, and what variables are dependents (which; need to be integrated over for a correct PDF normalization).; Instead, the choice of normalization is always specified each time a; normalized value is requested from the PDF via the getVal(); method. RooAbsPdf manages the entire normalization logic of each PDF with; the help of a RooRealIntegral object, which coordinates the integration; of a given choice of normalization. By default, RooRealIntegral will; perform an entirely numeric integration of all dependents. However,; PDFs can advertise one or more (partial) analytical integrals of; their function, and these will be used by RooRealIntegral, if it; determines that this is safe (i.e., no hidden Jacobian terms,; multiplication with other PDFs that have one or more dependents in; common, etc). #### Implementing analytical integrals; To implement analytical integrals, two functions must be implemented. First,. ```; Int_t getAnalyticalIntegral(const RooArgSet& integSet, RooArgSet& anaIntSet); ```",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:2320,variab,variables,2320,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['variab'],['variables']
Modifiability,"to force a particular; value for the maximum or the minimum scale on the plot. (For 1-D; histograms this means the y-axis, while for 2-D histograms these; functions affect the z-axis). TH1::UseCurrentStyle() can be used to change all histogram graphics; attributes to correspond to the current selected style.; This function must be called for each histogram.; In case one reads and draws many histograms from a file, one can force; the histograms to inherit automatically the current graphics style; by calling before gROOT->ForceStyle(). \anchor cont-level; ### Setting Drawing histogram contour levels (2-D hists only). By default contours are automatically generated at equidistant; intervals. A default value of 20 levels is used. This can be modified; via TH1::SetContour() or TH1::SetContourLevel().; the contours level info is used by the drawing options ""cont"", ""surf"",; and ""lego"". \anchor graph-att; ### Setting histogram graphics attributes. The histogram classes inherit from the attribute classes:; TAttLine, TAttFill, and TAttMarker.; See the member functions of these classes for the list of options. \anchor axis-drawing; ### Customizing how axes are drawn. Use the functions of TAxis, such as; ~~~ {.cpp}; histogram.GetXaxis()->SetTicks(""+"");; histogram.GetYaxis()->SetRangeUser(1., 5.);; ~~~. \anchor fitting-histograms; ## Fitting histograms. Histograms (1-D, 2-D, 3-D and Profiles) can be fitted with a user; specified function or a pre-defined function via TH1::Fit.; See TH1::Fit(TF1*, Option_t *, Option_t *, Double_t, Double_t) for the fitting documentation and the possible [fitting options](\ref HFitOpt). The FitPanel can also be used for fitting an histogram. See the [FitPanel documentation](https://root.cern/manual/fitting/#using-the-fit-panel). \anchor saving-histograms; ## Saving/reading histograms to/from a ROOT file. The following statements create a ROOT file and store a histogram; on the file. Because TH1 derives from TNamed, the key identifier on; the file i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:18891,inherit,inherit,18891,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['inherit'],['inherit']
Modifiability,"to the friends data. In this way; /// it is much like adding another branch to the tree without taking the risk; /// of damaging it. To add a friend to the list, you can use the TTree::AddFriend; /// method. The tree in the diagram below has two friends (friend_tree1 and; /// friend_tree2) and now has access to the variables a,b,c,i,j,k,l and m.; ///; /// \image html ttree_friend1.png; ///; /// The AddFriend method has two parameters, the first is the tree name and the; /// second is the name of the ROOT file where the friend tree is saved.; /// AddFriend automatically opens the friend file. If no file name is given,; /// the tree called ft1 is assumed to be in the same file as the original tree.; ///; /// tree.AddFriend(""ft1"",""friendfile1.root"");; /// If the friend tree has the same name as the original tree, you can give it; /// an alias in the context of the friendship:; ///; /// tree.AddFriend(""tree1 = tree"",""friendfile1.root"");; /// Once the tree has friends, we can use TTree::Draw as if the friend's; /// variables were in the original tree. To specify which tree to use in; /// the Draw method, use the syntax:; /// ~~~ {.cpp}; /// <treeName>.<branchname>.<varname>; /// ~~~; /// If the variablename is enough to uniquely identify the variable, you can; /// leave out the tree and/or branch name.; /// For example, these commands generate a 3-d scatter plot of variable ""var""; /// in the TTree tree versus variable v1 in TTree ft1 versus variable v2 in; /// TTree ft2.; /// ~~~ {.cpp}; /// tree.AddFriend(""ft1"",""friendfile1.root"");; /// tree.AddFriend(""ft2"",""friendfile2.root"");; /// tree.Draw(""var:ft1.v1:ft2.v2"");; /// ~~~; /// \image html ttree_friend2.png; ///; /// The picture illustrates the access of the tree and its friends with a; /// Draw command.; /// When AddFriend is called, the ROOT file is automatically opened and the; /// friend tree (ft1) is read into memory. The new friend (ft1) is added to; /// the list of friends of tree.; /// The number of entries in th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1723,variab,variables,1723,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variables']
Modifiability,"tor, list, deque, set, multiset, map, multimap; // - allowed arguments for stl containers are: simple data types, string, object, pointer on object; // Any other data member can not be (yet) read from xml file and write to xml file.; //; // If data member of class is private or protected, it can not be accessed via; // member name. Two alternative way is supported. First, if for class member fValue; // exists function GetValue(), it will be used to get value from the class, and if; // exists SetValue(), it will be used to set appropriate data member. Names of setter; // and getter methods can be specified in comments filed like:; //; // int fValue; // *OPTION={GetMethod=""GetV"";SetMethod=""SetV""}; //; // If getter or setter methods does not available, address to data member will be; // calculated as predefined offset to object start address. In that case generated code; // should be used only on the same platform (OS + compiler), where it was generated.; //; // Generated streamers resolve inheritance tree for given class. This allows to have; // array (or vector) of object pointers on some basic class, while objects of derived; // class(es) are used.; //; // To access data from xml files, user should use TXmlFile class, which is different from; // ROOT TXMLFile, but provides very similar functionality. For example, to read; // object from xml file:; //; // TXmlFile file(""test.xml""); // open xml file; // file.ls(); // show list of keys in file; // TExample* ex1 = (TExample*) file.Get(""ex1"", TExample_streamer); // get object; // file.Close();; //; // To write object to file:; //; // TXmlFile outfile(""test2.xml"", ""recreate""); // create xml file; // TExample* ex1 = new TExample;; // outfile.Write(ex1, ""ex1"", TExample_streamer); // write object to file; // outfile.Close();; //; // Complete example for generating and using of external xml streamers can be taken from; // http://www-docs.gsi.de/~linev/xmlreader.tar.gz; //; // Any bug reports and requests for additional functi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLPlayer.cxx:3308,inherit,inheritance,3308,io/xml/src/TXMLPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLPlayer.cxx,1,['inherit'],['inheritance']
Modifiability,"tpBind: hostname | ipaddress; ///; /// To use secured protocol, following parameter should be specified; ///; /// WebGui.UseHttps: yes; /// WebGui.ServerCert: sertificate_filename.pem; ///; /// Alternatively, one can specify unix socket to handle requests:; ///; /// WebGui.UnixSocket: /path/to/unix/socket; /// WebGui.UnixSocketMode: 0700; ///; /// Typically one used unix sockets together with server mode like `root --web=server:/tmp/root.socket` and; /// then redirect it via ssh tunnel (e.g. using `rootssh`) to client node; ///; /// All incoming requests processed in THttpServer in timer handler with 10 ms timeout.; /// One may decrease value to improve latency or increase value to minimize CPU load; ///; /// WebGui.HttpTimer: 10; ///; /// To processing incoming http requests and websockets, THttpServer allocate 10 threads; /// One have to increase this number if more simultaneous connections are expected:; ///; /// WebGui.HttpThrds: 10; ///; /// One also can configure usage of special thread of processing of http server requests; ///; /// WebGui.HttpThrd: no; ///; /// Extra threads can be used to send data to different clients via websocket (default no); ///; /// WebGui.SenderThrds: no; ///; /// If required, one could change websocket timeouts (default is 10000 ms); ///; /// WebGui.HttpWSTmout: 10000; ///; /// By default, THttpServer created in restricted mode which only allows websocket handlers; /// and processes only very few other related http requests. For security reasons such mode; /// should be always enabled. Only if it is really necessary to process all other kinds; /// of HTTP requests, one could specify no for following parameter (default yes):; ///; /// WebGui.WSOnly: yes; ///; /// In some applications one may need to force longpoll websocket emulations from the beginning,; /// for instance when clients connected via proxys. Although JSROOT should automatically fallback; /// to longpoll engine, one can configure this directly (default no); ///; /// Web",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx:1751,config,configure,1751,gui/webdisplay/src/RWebWindowsManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx,1,['config'],['configure']
Modifiability,"tt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodCuts; \ingroup TMVA. Multivariate optimisation of signal efficiency for given background; efficiency, applying rectangular minimum and maximum requirements. Also implemented is a ""decorrelate/diagonalized cuts approach"",; which improves over the uncorrelated cuts approach by; transforming linearly the input variables into a diagonal space,; using the square-root of the covariance matrix. Other optimisation criteria, such as maximising the signal significance-; squared, \f$ \frac{S^2}{(S+B)} \f$, with S and B being the signal and background yields,; correspond to a particular point in the optimised background rejection; versus signal efficiency curve. This working point requires the knowledge; of the expected yields, which is not the case in general. Note also that; for rare signals, Poissonian statistics should be used, which modifies; the significance criterion. The rectangular cut of a volume in the variable space is performed using; a binary tree to sort the training events. This provides a significant; reduction in computing time (up to several orders of magnitudes, depending; on the complexity of the problem at hand). Technically, optimisation is achieved in TMVA by two methods:. 1. Monte Carlo generation using uniform priors for the lower cut valu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx:1556,variab,variables,1556,tmva/tmva/src/MethodCuts.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx,1,['variab'],['variables']
Modifiability,"type-II: structure with its method bodies available. Operations over such; // iterator are inlined by the analyzer, and results of modeling; // these operations are exposing implementation details of the; // iterators, which is not necessarily helping.; // * type-III: completely opaque structure. Operations over such iterator are; // modeled conservatively, producing conjured symbols everywhere.; //; // To handle all these types in a common way we introduce a structure called; // IteratorPosition which is an abstraction of the position the iterator; // represents using symbolic expressions. The checker handles all the; // operations on this structure.; //; // Additionally, depending on the circumstances, operators of types II and III; // can be represented as:; // * type-IIa, type-IIIa: conjured structure symbols - when returned by value; // from conservatively evaluated methods such as; // `.begin()`.; // * type-IIb, type-IIIb: memory regions of iterator-typed objects, such as; // variables or temporaries, when the iterator object is; // currently treated as an lvalue.; // * type-IIc, type-IIIc: compound values of iterator-typed objects, when the; // iterator object is treated as an rvalue taken of a; // particular lvalue, eg. a copy of ""type-a"" iterator; // object, or an iterator that existed before the; // analysis has started.; //; // To handle any of these three different representations stored in an SVal we; // use setter and getters functions which separate the three cases. To store; // them we use a pointer union of symbol and memory region.; //; // The checker works the following way: We record the begin and the; // past-end iterator for all containers whenever their `.begin()` and `.end()`; // are called. Since the Constraint Manager cannot handle such SVals we need; // to take over its role. We post-check equality and non-equality comparisons; // and record that the two sides are equal if we are in the 'equal' branch; // (true-branch for `==` and false-bra",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IteratorModeling.cpp:1751,variab,variables,1751,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IteratorModeling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IteratorModeling.cpp,1,['variab'],['variables']
Modifiability,"ucket/path/to/my/file; /// ```; ///; /// The 'as3' scheme is accepted for backwards compatibility but its usage is; /// deprecated.; ///; /// The recommended way to create an instance of this class is through; /// TFile::Open, for instance:; ///; /// ```c++; /// TFile* f1 = TFile::Open(""s3://host.example.com/bucket/path/to/my/file""); /// TFile* f2 = TFile::Open(""gs://storage.googleapis.com/bucket/path/to/my/file""); /// ```; ///; /// The specified scheme (i.e. s3, s3http, s3https, ...) determines the underlying; /// transport protocol to use for downloading the file contents, namely HTTP or HTTPS.; /// The 's3', 's3https', 'gs' and 'gshttps' schemes imply using HTTPS as the transport; /// protocol. The 's3http', 'as3' and 'gshttp' schemes imply using HTTP as the transport; /// protocol.; ///; /// The 'options' argument can contain 'NOPROXY' if you want to bypass; /// the HTTP proxy when retrieving this file's contents. As for any TWebFile-derived; /// object, the URL of the web proxy can be specified by setting an environmental; /// variable 'http_proxy'. If this variable is set, we ask that proxy to route our; /// requests HTTP(S) requests to the file server.; ///; /// In addition, you can also use the 'options' argument to provide the access key; /// and secret key to be used for authentication purposes for this file by using a; /// string of the form ""AUTH=myAccessKey:mySecretkey"". This may be useful to; /// open several files hosted by different providers in the same program/macro,; /// where the environemntal variables solution is not convenient (see below).; ///; /// To use AWS temporary security credentials you need to specify the session; /// token. This can be added to the options argument with a string of the form; /// TOKEN=mySessionToken. The temporary access and secret keys must also be; /// available, either via the AUTH option or by environmental variable.; ///; /// If you need to specify more than one option separate them by ' '; /// (blank), for insta",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:1702,variab,variable,1702,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,1,['variab'],['variable']
Modifiability,"ul if the PDF was fitted in a limited range in y, but it is now projected onto x. If; /// `ProjectionRange(""<name of fit range>"")` is passed, the projection is normalised correctly.; ///; /// <tr><th> Type of argument <th> Plotting control; /// <tr><td> `LineStyle(Int_t style)` <td> Select line style by ROOT line style code, default is solid; /// <tr><td> `LineColor(Int_t color)` <td> Select line color by ROOT color code, default is blue; /// <tr><td> `LineWidth(Int_t width)` <td> Select line with in pixels, default is 3; /// <tr><td> `FillStyle(Int_t style)` <td> Select fill style, default is not filled. If a filled style is selected,; /// also use VLines() to add vertical downward lines at end of curve to ensure proper closure; /// <tr><td> `FillColor(Int_t color)` <td> Select fill color by ROOT color code; /// <tr><td> `Range(const char* name)` <td> Only draw curve in range defined by given name. Multiple comma-separated ranges can be given.; /// An empty string """" or `nullptr` means to use the default range of the variable.; /// <tr><td> `Range(double lo, double hi)` <td> Only draw curve in specified range; /// <tr><td> `VLines()` <td> Add vertical lines to y=0 at end points of curve; /// <tr><td> `Precision(double eps)` <td> Control precision of drawn curve w.r.t to scale of plot, default is 1e-3. A higher precision will; /// result in more and more densely spaced curve points. A negative precision value will disable; /// adaptive point spacing and restrict sampling to the grid point of points defined by the binning; /// of the plotted observable (recommended for expensive functions such as profile likelihoods); /// <tr><td> `Invisible(bool flag)` <td> Add curve to frame, but do not display. Useful in combination AddTo(); /// <tr><td> `VisualizeError(const RooFitResult& fitres, double Z=1, bool linearMethod=true)`; /// <td> Visualize the uncertainty on the parameters, as given in fitres, at 'Z' sigma.; /// The linear method is fast but may not be accurate in the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:6362,variab,variable,6362,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['variab'],['variable']
Modifiability,"ula. Here we consider; a very simple case where we have an exponential decay after some time t and a; number of events with timestamps for which we want to evaluate this function. ```; TFormula tf ("""", ""[0]*exp(-[1]*t)"");; tf.SetParameter(0, 1);; tf.SetParameter(1, 0.5);. for (auto & event : events) {; tf.Eval(event.t);; }; ```. The distinction between variables and parameters arose from the TFormula's; application in fitting. There parameters are fitted to the data provided; through variables. In other applications this distinction can go away. Parameter values can be provided dynamically using `TFormula::EvalPar`; instead of `TFormula::Eval`. In this way parameters can be used identically; to variables. See below for an example that uses only parameters to model a; function. ```; Int_t params[2] = {1, 2}; // {vel_x, vel_y}; TFormula tf ("""", ""[vel_x]/sqrt(([vel_x + vel_y])**2)"");. tf.EvalPar(nullptr, params);; ```. ### A note on operators. All operators of C/C++ are allowed in a TFormula with a few caveats. The operators `|`, `&`, `%` can be used but will raise an error if used in; conjunction with a variable or a parameter. Variables and parameters are treated; as doubles internally for which these operators are not defined.; This means the following command will run successfully; ```root -l -q -e TFormula("""", ""x+(10%3)"").Eval(0)```; but not; ```root -l -q -e TFormula("""", ""x%10"").Eval(0)```. The operator `^` is defined to mean exponentiation instead of the C/C++; interpretation xor. `**` is added, also meaning exponentiation. The operators `++` and `@` are added, and are shorthand for the a linear; function. That means the expression `x@2` will be expanded to; ```[n]*x + [n+1]*2``` where n is the first previously unused parameter number. \class TFormulaFunction; Helper class for TFormula. \class TFormulaVariable; Another helper class for TFormula. \class TFormulaParamOrder; Functor defining the parameter order; */; // prefix used for function name passed to Cling",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:6950,variab,variable,6950,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,2,"['Variab', 'variab']","['Variables', 'variable']"
Modifiability,"uly 1, 2000, through 1.6.35, July 15, 2018 are; * Copyright (c) 2000-2002, 2004, 2006-2018 Glenn Randers-Pehrson, are; * derived from libpng-1.0.6, and are distributed according to the same; * disclaimer and license as libpng-1.0.6 with the following individuals; * added to the list of Contributing Authors:; *; * Simon-Pierre Cadieux; * Eric S. Raymond; * Mans Rullgard; * Cosmin Truta; * Gilles Vollant; * James Yu; * Mandar Sahastrabuddhe; * Google Inc.; * Vadim Barkov; *; * and with the following additions to the disclaimer:; *; * There is no warranty against interference with your enjoyment of; * the library or against infringement. There is no warranty that our; * efforts or the library will fulfill any of your particular purposes; * or needs. This library is provided with all faults, and the entire; * risk of satisfactory quality, performance, accuracy, and effort is; * with the user.; *; * Some files in the ""contrib"" directory and some configure-generated; * files that are distributed with libpng have other copyright owners, and; * are released under other open source licenses.; *; * libpng versions 0.97, January 1998, through 1.0.6, March 20, 2000, are; * Copyright (c) 1998-2000 Glenn Randers-Pehrson, are derived from; * libpng-0.96, and are distributed according to the same disclaimer and; * license as libpng-0.96, with the following individuals added to the; * list of Contributing Authors:; *; * Tom Lane; * Glenn Randers-Pehrson; * Willem van Schaik; *; * libpng versions 0.89, June 1996, through 0.96, May 1997, are; * Copyright (c) 1996-1997 Andreas Dilger, are derived from libpng-0.88,; * and are distributed according to the same disclaimer and license as; * libpng-0.88, with the following individuals added to the list of; * Contributing Authors:; *; * John Bowler; * Kevin Bracey; * Sam Bushell; * Magnus Holmgren; * Greg Roelofs; * Tom Tanner; *; * Some files in the ""scripts"" directory have other copyright owners,; * but are released under this license.; *;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:3625,config,configure-generated,3625,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['config'],['configure-generated']
Modifiability,"um-of-weights error ( \f$ \left( \sum w \right)^2 / \sum\left(w^2\right) \f$ ); /// - `None` draws no error bars; /// <tr><td> RooFit::Binning(int nbins, double xlo, double xhi); /// <td> Use specified binning to draw dataset; /// <tr><td> RooFit::Binning(const RooAbsBinning&); /// <td> Use specified binning to draw dataset; /// <tr><td> RooFit::Binning(const char* name); /// <td> Use binning with specified name to draw dataset; /// <tr><td> RooFit::RefreshNorm(); /// <td> Force refreshing for PDF normalization information in frame.; /// If set, any subsequent PDF will normalize to this dataset, even if it is; /// not the first one added to the frame. By default only the 1st dataset; /// added to a frame will update the normalization information; /// <tr><td> RooFit::Rescale(double f); /// <td> Rescale drawn histogram by given factor.; /// <tr><td> RooFit::Cut(const char*); /// <td> Only plot entries that pass the given cut.; /// Apart from cutting in continuous variables `Cut(""x>5"")`, this can also be used to plot a specific; /// category state. Use something like `Cut(""myCategory == myCategory::stateA"")`, where; /// `myCategory` resolves to the state number for a given entry and; /// `myCategory::stateA` resolves to the state number of the state named ""stateA"".; ///; /// <tr><td> RooFit::CutRange(const char*); /// <td> Only plot data from given range. Separate multiple ranges with "","".; /// \note This often requires passing the normalisation when plotting the PDF because RooFit does not save; /// how many events were being plotted (it will only work for cutting slices out of uniformly distributed; /// variables).; /// ```; /// data->plotOn(frame01, CutRange(""SB1""));; /// const double nData = data->sumEntries("""", ""SB1"");; /// // Make clear that the target normalisation is nData. The enumerator NumEvent; /// // is needed to switch between relative and absolute scaling.; /// model.plotOn(frame01, Normalization(nData, RooAbsReal::NumEvent),; /// ProjectionRange(""SB1"")",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:2202,variab,variables,2202,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['variab'],['variables']
Modifiability,"umeric convolution of two PDFs,; /// and can convolve any two RooAbsPdfs. The class exploits the convolution theorem; /// \f[; /// f(x) * g(x) \rightarrow F(k_i) \cdot G(k_i); /// \f]; /// to calculate the convolution by calculating a Real->Complex FFT of both input PDFs,; /// multiplying the complex coefficients and performing the reverse Complex->Real FFT; /// to get the result in the input space. This class uses the ROOT FFT interface to; /// the (free) FFTW3 package (www.fftw.org), and requires that your ROOT installation is; /// compiled with the `fftw3=ON` (default). Instructions for manually installing fftw below.; ///; /// Note that the performance in terms of speed and stability of RooFFTConvPdf is; /// vastly superior to that of RooNumConvPdf.; ///; /// An important feature of FFT convolutions is that the observable is assumed to be; /// cyclical. This is correct for cyclical observables such as angles,; /// but does not hold in general. For non-cyclical variables, wrap-around artifacts may be; /// encountered, *e.g.* if the PDF is zero at xMin and non-zero at xMax. A rising tail may appear at xMin.; /// This is inevitable when using FFTs. A distribution with 3 bins therefore looks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 are not equal, the FFT sees a cyclical function with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// The spillover or discontinuity can be reduced or eliminated by; /// introducing a buffer zone in the FFT calculation. If this feature is activated (on by default),; /// the sampling array for the FFT calculation is extended in both directions,; /// and padded with the lowest/highest bin.; /// Example:; /// ```; /// original: -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5; /// add buffer zones: U U -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5 O O; /// rotate: 0 +1 +2 +3 +4 +5 O O U U -5 -4 -3 -2 -1; /// ```; /// The buffer bins are stripped away when the FFT output values; /// are tr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:1675,variab,variables,1675,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,1,['variab'],['variables']
Modifiability,"ure `U(U,T)` or `void(U&,T)`, where T is the type of the column, U is the type of the aggregator variable; /// \param[in] merger A callable with signature `U(U,U)` or `void(std::vector<U>&)` used to merge the results of the accumulations of each thread; /// \param[in] columnName The column to be aggregated. If omitted, the first default column is used instead.; /// \param[in] aggIdentity The aggregator variable of each thread is initialized to this value (or is default-constructed if the parameter is omitted); /// \return the result of the aggregation wrapped in a RResultPtr.; ///; /// An aggregator callable takes two values, an aggregator variable and a column value. The aggregator variable is; /// initialized to aggIdentity or default-constructed if aggIdentity is omitted.; /// This action calls the aggregator callable for each processed entry, passing in the aggregator variable and; /// the value of the column columnName.; /// If the signature is `U(U,T)` the aggregator variable is then copy-assigned the result of the execution of the callable.; /// Otherwise the signature of aggregator must be `void(U&,T)`.; ///; /// The merger callable is used to merge the partial accumulation results of each processing thread. It is only called in multi-thread executions.; /// If its signature is `U(U,U)` the aggregator variables of each thread are merged two by two.; /// If its signature is `void(std::vector<U>& a)` it is assumed that it merges all aggregators in a[0].; ///; /// This action is *lazy*: upon invocation of this method the calculation is booked but not executed. Also see RResultPtr.; ///; /// Example usage:; /// ~~~{.cpp}; /// auto aggregator = [](double acc, double x) { return acc * x; };; /// ROOT::EnableImplicitMT();; /// // If multithread is enabled, the aggregator function will be called by more threads; /// // and will produce a vector of partial accumulators.; /// // The merger function performs the final aggregation of these partial results.; /// auto merg",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1558,variab,variable,1558,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['variab'],['variable']
Modifiability,"us 115 x xygausn; /// yexpo(5) 102 5 ygaus(5) 111 5 ygausn(5); /// xyexpo(2) 105 2 xygaus(2) 115 2 xygausn(2); ///; /// landau 120 x landaun (see note below); /// landau(0) 120 0 landaun(0); /// landau(1) 120 1 landaun(1); /// xlandau 120 x xlandaun; /// ylandau 121 x ylandaun; /// zlandau 122 x zlandaun; /// xylandau 125 x xylandaun; /// ylandau(5) 121 5 ylandaun(5); /// xylandau(2) 125 2 xylandaun(2); ///; /// pol0 130 x pol1 130 1xx; /// pol0(0) 130 0 pol1(0) 130 100; /// pol0(1) 130 1 pol1(1) 130 101; /// xpol0 130 x xpol1 130 101; /// ypol0 131 x ypol1 131 101; /// zpol0 132 x zpol1 132 1xx; /// ypol0(5) 131 5 ypol1(5) 131 105; ///; /// pi 40; ///; /// && 60 < 64; /// || 61 > 65; /// == 62 <= 66; /// != 63 => 67; /// ! 68; /// ==(string) 76 & 78; /// !=(string) 77 | 79; /// <<(shift) 80 >>(shift) 81; /// ? : 82; ///; /// * constants (kConstants) :; ///; /// c0 141 1 c1 141 2 etc..; ///; /// * strings (kStringConst):; ///; /// sX 143 x; ///; /// * variables (kFormulaVar) :; ///; /// x 144 0 y 144 1 z 144 2 t 144 3; ///; /// * parameters :; ///; /// [1] 140 1; /// [2] 140 2; /// etc.; /// ~~~; ///; /// ### Special cases for normalized gaussian or landau distributions; ///; /// the expression ""gaus"" is a substitute for; ///; /// [0]*exp(-0.5*((x-[1])/[2])**2); ///; /// to obtain a standard normalized gaussian, use ""gausn"" instead of ""gaus""; /// the expression ""gausn"" is a substitute for; ///; /// [0]*exp(-0.5*((x-[1])/[2])**2)/(sqrt(2*pi)*[2])); ///; /// WARNING: gaus and gausn are mutually exclusive in the same expression.; ///; /// In the same way the expression ""landau"" is a substitute for; ///; /// [0]*TMath::Landau(x,[1],[2],kFALSE); ///; /// to obtain a standard normalized landau, use ""landaun"" instead of ""landau""; /// the expression ""landaun"" is a substitute for; ///; /// [0]*TMath::Landau(x,[1],[2],kTRUE); ///; /// WARNING: landau and landaun are mutually exclusive in the same expression.; ///; /// ### Boolean optimization (kBoolOptmize) :; ///; /// Those p",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:1897,variab,variables,1897,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,1,['variab'],['variables']
Modifiability,"use the left button to select the; points building the contour of the cut. Click on the right button to close the; TCutG. When it is created via the graphics editor, the TCutG object is named; ""CUTG"". It is recommended to immediately change the name by using the context; menu item ""SetName"". When the graphics editor is used, the names of the; variables X,Y are automatically taken from the current pad title. Example:. Assume a TTree object T and:; ~~~ {.cpp}; Root > T.Draw(""abs(fMomemtum):fEtot""); ~~~; the TCutG members fVarX, fVary will be set to:; ~~~ {.cpp}; fVarx = fEtot; fVary = abs(fMomemtum); ~~~; A graphical cut can be used in a TTree selection expression:; ~~~ {.cpp}; Root > T.Draw(""fEtot"",""cutg1""); ~~~; where ""cutg1"" is the name of an existing graphical cut. Note that, as shown in the example above, a graphical cut may be used in a; selection expression when drawing TTrees expressions of 1-d, 2-d or; 3-dimensions. The expressions used in TTree::Draw can reference the variables in; the fVarX, fVarY of the graphical cut plus other variables. When the TCutG object is created by TTree::Draw, it is added to the list of special objects in; the main TROOT object pointed by gROOT. To retrieve a pointer to this object; from the code or command line, do:; ~~~ {.cpp}; TCutG *mycutg;; mycutg = (TCutG*)gROOT->GetListOfSpecials()->FindObject(""CUTG""); mycutg->SetName(""mycutg"");; ~~~; When the TCutG is not created via TTree::Draw, one must set the variable names; corresponding to x,y if one wants to use the cut as input to TTree::Draw,eg; ~~~ {.cpp}; TCutG *cutg = new TCutG(""mycut"",6);; cutg->SetVarX(""y"");; cutg->SetVarY(""x"");; cutg->SetPoint(0,-0.3586207,1.509534);; cutg->SetPoint(1,-1.894181,-0.529661);; cutg->SetPoint(2,0.07780173,-1.21822);; cutg->SetPoint(3,-1.0375,-0.07944915);; cutg->SetPoint(4,0.756681,0.1853814);; cutg->SetPoint(5,-0.3586207,1.509534);; ~~~; Example of use of a TCutG in TTree::Draw:; ~~~ {.cpp}; tree.Draw(""x:y"",""mycutg && z>0 && sqrt(x)>1""); ~~~; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCutG.cxx:1729,variab,variables,1729,graf2d/graf/src/TCutG.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCutG.cxx,2,['variab'],['variables']
Modifiability,"use.; // The ""module"" lowering implemented here finds LDS variables which are used by; // non-kernel functions and creates a new struct with a field for each of those; // LDS variables. Variables that are only used from kernels are excluded.; //; // The ""table"" lowering implemented here has three components.; // First kernels are assigned a unique integer identifier which is available in; // functions it calls through the intrinsic amdgcn_lds_kernel_id. The integer; // is passed through a specific SGPR, thus works with indirect calls.; // Second, each kernel allocates LDS variables independent of other kernels and; // writes the addresses it chose for each variable into an array in consistent; // order. If the kernel does not allocate a given variable, it writes undef to; // the corresponding array location. These arrays are written to a constant; // table in the order matching the kernel unique integer identifier.; // Third, uses from non-kernel functions are replaced with a table lookup using; // the intrinsic function to find the address of the variable.; //; // ""Kernel"" lowering is only applicable for variables that are unambiguously; // reachable from exactly one kernel. For those cases, accesses to the variable; // can be lowered to ConstantExpr address of a struct instance specific to that; // one kernel. This is zero cost in space and in compute. It will raise a fatal; // error on any variable that might be reachable from multiple kernels and is; // thus most easily used as part of the hybrid lowering strategy.; //; // Hybrid lowering is a mixture of the above. It uses the zero cost kernel; // lowering where it can. It lowers the variable accessed by the greatest; // number of kernels using the module strategy as that is free for the first; // variable. Any futher variables that can be lowered with the module strategy; // without incurring LDS memory overhead are. The remaining ones are lowered; // via table.; //; // Consequences; // - No heuristics or user c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:4916,variab,variable,4916,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variable']
Modifiability,"ussians without correlations:; `[Constant]*exp(-0.5*pow(((x-[MeanX])/[SigmaX]),2 )- 0.5*pow(((y-[MeanY])/[SigmaY]),2 )- 0.5*pow(((z-[MeanZ])/[SigmaZ]),2))`. ### An expanded note on variables and parameters. In a TFormula, a variable is a defined by a name `x`, `y`, `z` or `t` or an; index like `x[0]`, `x[1]`, `x[2]`; that is `x[N]` where N is an integer. ```; TFormula("""", ""x[0] * x[1] + 10""); ```. Parameters are similar and can take any name. It is specified using brackets; e.g. `[expected_mass]` or `[0]`. ```; TFormula("""", ""exp([expected_mass])-1""); ```. Variables and parameters can be combined in the same TFormula. Here we consider; a very simple case where we have an exponential decay after some time t and a; number of events with timestamps for which we want to evaluate this function. ```; TFormula tf ("""", ""[0]*exp(-[1]*t)"");; tf.SetParameter(0, 1);; tf.SetParameter(1, 0.5);. for (auto & event : events) {; tf.Eval(event.t);; }; ```. The distinction between variables and parameters arose from the TFormula's; application in fitting. There parameters are fitted to the data provided; through variables. In other applications this distinction can go away. Parameter values can be provided dynamically using `TFormula::EvalPar`; instead of `TFormula::Eval`. In this way parameters can be used identically; to variables. See below for an example that uses only parameters to model a; function. ```; Int_t params[2] = {1, 2}; // {vel_x, vel_y}; TFormula tf ("""", ""[vel_x]/sqrt(([vel_x + vel_y])**2)"");. tf.EvalPar(nullptr, params);; ```. ### A note on operators. All operators of C/C++ are allowed in a TFormula with a few caveats. The operators `|`, `&`, `%` can be used but will raise an error if used in; conjunction with a variable or a parameter. Variables and parameters are treated; as doubles internally for which these operators are not defined.; This means the following command will run successfully; ```root -l -q -e TFormula("""", ""x+(10%3)"").Eval(0)```; but not; ```root -l -q",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:6186,variab,variables,6186,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variables']
Modifiability,"ust 1994 */; /* You can do whatever you like with this source file, though I would; prefer that if you modify it and redistribute it that you include; comments to that effect with your name and the date. Thank you. History:; vers date who what; ---- --------- -------------- ------------------------------------; a ~~ Feb 92 M. Adler used full (large, one-step) lookup table; b1 21 Mar 92 M. Adler first version with partial lookup tables; b2 21 Mar 92 M. Adler fixed bug in fixed-code blocks; b3 22 Mar 92 M. Adler sped up match copies, cleaned up some; b4 25 Mar 92 M. Adler added prototypes; removed window[] (now; is the responsibility of unzip.h--also; changed name to slide[]), so needs diffs; for unzip.c and unzip.h (this allows; compiling in the small model on MSDOS);; fixed cast of q in huft_build();; b5 26 Mar 92 M. Adler got rid of unintended macro recursion.; b6 27 Mar 92 M. Adler got rid of nextbyte() routine. fixed; bug in inflate_fixed().; c1 30 Mar 92 M. Adler removed lbits, dbits environment variables.; changed BMAX to 16 for explode. Removed; OUTB usage, and replaced it with flush()--; this was a 20% speed improvement! Added; an explode.c (to replace unimplod.c) that; uses the huft routines here. Removed; register union.; c2 4 Apr 92 M. Adler fixed bug for file sizes a multiple of 32k.; c3 10 Apr 92 M. Adler reduced memory of code tables made by; huft_build significantly (factor of two to; three).; c4 15 Apr 92 M. Adler added NOMEMCPY do kill use of memcpy().; worked around a Turbo C optimization bug.; c5 21 Apr 92 M. Adler added the WSIZE #define to allow reducing; the 32K window size for specialized; applications.; c6 31 May 92 M. Adler added some typecasts to eliminate warnings; c7 27 Jun 92 G. Roelofs added some more typecasts (444: MSC bug).; c8 5 Oct 92 J-l. Gailly added ifdef'd code to deal with PKZIP bug.; c9 9 Oct 92 M. Adler removed a memory error message (~line 416).; c10 17 Oct 92 G. Roelofs changed ULONG/UWORD/byte to ulg/ush/uch,; removed old ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:1091,variab,variables,1091,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['variab'],['variables']
Modifiability,"utes. Image attributes are:. - Image Quality (see EImageQuality for the list of qualities); - Compression defines the compression rate of the color data in the; internal image structure. Speed and memory depends; on this rate, but not the image display itself; 0: no compression; 100: max compression; - Radio Flag: kTRUE the x/y radio of the displayed image is always; identical to the original image kFALSE the x and y size of the displayed; image depends on the size of the pad; - Palette: Defines the conversion from a pixel value to the; screen color. This class is used (in general by secondary inheritance); by some other classes (image display).; */; /** \class TImagePalette; \ingroup BasicGraphics. A class to define a conversion from pixel values to pixel color. A Palette is defined by some anchor points. Each anchor point has; a value between 0 and 1 and a color. An image has to be normalized; and the values between the anchor points are interpolated.; All member variables are public and can be directly manipulated.; In most cases the default operator will be used to create a; TImagePalette. In this case the member arrays have to be allocated; by an application and will be deleted in the destructor of this; class. We provide few predefined palettes:. - gHistImagePalette - palette used in TH2::Draw(""col""); - gWebImagePalette; The web palette is a set of 216 colors that will not dither or; shift on PCs or Macs. Browsers use this built-in palette when; they need to render colors on monitors with only 256 colors; (also called 8-bit color monitors).; The 6x6x6 web palette provides very quick color index lookup; and can be used for good quality conversion of images into; 2-D histograms.; - TImagePalette(Int_t ncolors, Int_t *colors); if ncolors <= 0 a default palette (see below) of 50 colors; is defined. if ncolors == 1 && colors == 0, then a Rainbow Palette is created. if ncolors > 50 and colors=0, the DeepSea palette is used.; (see TStyle::CreateGradientColorTable for",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TAttImage.cxx:1491,variab,variables,1491,graf2d/graf/src/TAttImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TAttImage.cxx,1,['variab'],['variables']
Modifiability,"vailable in; the gui. ## Selections:. Selections of specific entries can be defined over the data se using parallel; coordinates. With that representation, a selection is an ensemble of ranges; defined on the axes. Ranges defined on the same axis are conjugated with OR; (an entry must be in one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). Several selections can be defined with different colors. It is; possible to generate an entry list from a given selection and apply it to the; tree using the editor (""Apply to tree"" button). ## Axes:. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis. ## Candle chart:. TParallelCoord can also be used to display a candle chart. In that mode, every; variable is drawn in the same scale. The candle chart can be combined with the; parallel coordinates mode, drawing the candle sticks over the axes. ~~~ {.cpp}; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; grade->AddRange(new TParallelCoordRange(grade,11.5,14));; para->AddSelection(""less30"");; para->GetCurrentSelection()->SetLineColor(kViolet);; TParallelCoordVar* age = (TParallelCoordVar*)para->GetVarL",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:2545,variab,variables,2545,tree/treeviewer/src/TParallelCoord.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx,1,['variab'],['variables']
Modifiability,"variables of fixed size |; // | including spill slots |; // |-----------------------------------| <- base pointer (not defined by ABI,; // |.variable-sized.local.variables....| LLVM chooses r6); // |.(VLAs)............................| (size of this area is unknown at; // |...................................| compile time); // |-----------------------------------| <- sp; // | | Lower address; //; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are both VLAs and local; // variables with more-than-default alignment requirements.; // * A frame pointer is definitely needed when there are local variables with; // more-than-default alignment requirements.; //; // In some cases when a base pointer is not strictly needed, it is generated; // anyway when offsets from the frame pointer to access local variables become; // so large that the offset can't be encoded in the immediate fields of loads; // or stores.; //; // The frame pointer might be chosen to be r7 or r11, depending on the target; // architecture and operating system. See ARMSubtarget::getFramePointerReg for; // details.; //; // Outgoing function arguments must be at the bottom of the stack frame when; // calling another function. If we do not have variable-sized stack objects, we; // can allocate a ""reserved call frame"" area at the bottom of the local; // variable area, large enough for all outgoing calls. If we do have VLAs, then; // the stack pointer ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp:3304,variab,variables,3304,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,1,['variab'],['variables']
Modifiability,"vectors which are insignificant for; the trajectory description in the expansion will have their; corresponding coefficients \f$a_{m_i}\f$ close to zero for all the; prototypes. On one hand, a reduction of the dimensionality is then obtained by; omitting these least significant vectors in the subsequent analysis. On the other hand, in the analysis of real data, these least; significant variables(?) can be used for the pattern; recognition problem of extracting the valid combinations of; coordinates describing a true trajectory from the set of all possible; wrong combinations. The program described here performs this principal components analysis; on a sample of data provided by the user. It computes the covariance; matrix, its eigenvalues ands corresponding eigenvectors and exhibits; the behavior of the principal components \f$a_{m_i}\f$, thus providing; to the user all the means of understanding their data. ## Principal Components Method; Let's consider a sample of \f$M\f$ prototypes each being characterized by; \f$P\f$ variables \f$x_0, x_1, \ldots, x_{P-1}\f$. Each prototype is a point, or a; column vector, in a \f$P\f$-dimensional *Pattern space*.; \f[; \mathbf{x} = \left[\begin{array}{c}; x_0\\x_1\\\vdots\\x_{P-1}\end{array}\right]\,,; \f]; where each \f$x_n\f$ represents the particular value associated with the; \f$n\f$-dimension. Those \f$P\f$ variables are the quantities accessible to the; experimentalist, but are not necessarily the most significant for the; classification purpose. The *Principal Components Method* consists of applying a; *linear* transformation to the original variables. This; transformation is described by an orthogonal matrix and is equivalent; to a rotation of the original pattern space into a new set of; coordinate vectors, which hopefully provide easier feature; identification and dimensionality reduction. Let's define the covariance matrix:; \f[; \mathsf{C} = \left\langle\mathbf{y}\mathbf{y}^T\right\rangle; \quad\mbox{where}\quad; \m",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:3483,variab,variables,3483,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,1,['variab'],['variables']
Modifiability,"ver resulting from loss of use,; data or profits, whether in an action of contract, negligence or other; tortious action, arising out of or in connection with the use or performance; of this software.; */; /*. NOTE ON X3D CODING STYLE:. Don't think I usually code in the gerberized fashion that X3D demonstrates.; X3D was written for speed at any cost. My goal was to write the fastest 3D; object viewer that I could, period. Regular programs ought to be written; with different goals in mind such as:. 1) A program has excellent documentation that ANYONE can read.; 2) A program when released has no strange ""features"" or bugs.; 3) A program is robust and handles ALL extreme and unusual cases.; 4) A program is written in phases and modules with hard tests for each one.; 5) A program is written for any user who doesn't need special knowledge; to use the program.; 6) A program has well defined user requirements and functional specifications.; 7) A program is written with regard to future expansion and integreation; with other systems (portability). When programming following these additional principles make programs easier; to maintain. A) Choose variable names that accurately describes what the variable does/is.; B) Write comments to inform someone faced with the task of modifying your code.; C) Avoid excessive comments. Write the code so that it says what it does.; D) Follow a strict one-in, one-out flow of control structues except in the; case of fatal error conditions.; E) Avoid using global variables.; F) Do not cause side effects to variables that were not parameters to a; function.; G) Have a single function perform a single purpose.; H) Select a single indentation style and stick with it.; I) Use a consistent naming convention. The following principles help me when I try optimizing code:. a) If optimizing, use a profiler to determine which sections of code most of; the time is spent in. Spend most of your effort in the most used sections.; Don't bother optimizing a pr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:2010,portab,portability,2010,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['portab'],['portability']
Modifiability,"verhead and like with filters it is currently the only possible approach when using PyROOT. Previously, when showing the different ways an RDataFrame can be created, we showed a constructor that takes a; number of entries as a parameter. In the following example we show how to combine such an ""empty"" RDataFrame with Define(); transformations to create a dataset on the fly. We then save the generated data on disk using the Snapshot() action.; ~~~{.cpp}; RDataFrame d(100); // an RDF that will generate 100 entries (currently empty); int x = -1;; auto d_with_columns = d.Define(""x"", [&x] { return ++x; }); .Define(""xx"", [&x] { return x*x; });; d_with_columns.Snapshot(""myNewTree"", ""newfile.root"");; ~~~; This example is slightly more advanced than what we have seen so far. First, it makes use of lambda captures (a; simple way to make external variables available inside the body of C++ lambdas) to act on the same variable `x` from; both Define() transformations. Second, we have *stored* the transformed dataframe in a variable. This is always; possible, since at each point of the transformation chain users can store the status of the dataframe for further use (more; on this [below](#callgraphs)). You can read more about defining new columns [here](#custom-columns). \image html RDF_Graph.png ""A graph composed of two branches, one starting with a filter and one with a define. The end point of a branch is always an action."". ### Running on a range of entries; It is sometimes necessary to limit the processing of the dataset to a range of entries. For this reason, the RDataFrame; offers the concept of ranges as a node of the RDataFrame chain of transformations; this means that filters, columns and; actions can be concatenated to and intermixed with Range()s. If a range is specified after a filter, the range will act; exclusively on the entries passing the filter -- it will not even count the other entries! The same goes for a Range(); hanging from another Range(). Here are some co",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:23218,variab,variable,23218,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['variab'],['variable']
Modifiability,"was felt to be a worthwhile waste. The size of the exterior nodes (leaf nodes) does not need to be related to; the size of the interior nodes at all. Since leaf nodes contain only; keys, they may be as large or small as we like independent of the size; of the interior nodes. For no particular reason other than it seems like; a good idea, we will allocate 2*(ORDER+1) keys in each leaf node, and they; will be numbered and indexed from 0 to 2*ORDER+1. It does have the advantage; of keeping the size of the leaf and interior arrays the same, so that if we; find allocation and de-allocation of these arrays expensive, we can modify; their allocation to use a garbage ring, or something. Both of these numbers will be run-time constants associated with each tree; (each tree at run-time can be of a different order). The variable ""order""; is the order of the tree, and the inclusive upper limit on the indices of; the keys in the interior nodes. The variable ""order2"" is the inclusive; upper limit on the indices of the leaf nodes, and is designed; ~~~ {.cpp}; (1) to keep the sizes of the two kinds of nodes the same;; (2) to keep the expressions involving the arrays of keys looking; somewhat the same: lower limit upper limit; for inner nodes: 1 order; for leaf nodes: 0 order2; Remember that index 0 of the inner nodes is special.; ~~~; Currently, order2 = 2*(order+1).; ~~~ {.cpp}; Picture: (also see Knuth Vol 3 pg 478). +--+--+--+--+--+--...; | | | | | |; parent--->| | | |; | | | |; +*-+*-+*-+--+--+--...; | | |; +----+ | +-----+; | +-----+ |; V | V; +----------+ | +----------+; | | | | |; this->| | | | |<--sib; +----------+ | +----------+; V; data; ~~~; It is conceptually VERY convenient to think of the data as being the; very first element of the sib node. Any primitive that tells sib to; perform some action on n nodes should include this 'hidden' element.; For InnerNodes, the hidden element has (physical) index 0 in the array,; and in LeafNodes, the hidden element has (virtual) in",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:5250,variab,variable,5250,core/cont/src/TBtree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx,1,['variab'],['variable']
Modifiability,"win32. Proxy classes provide thread-safe interface to global objects. For example: TGWin32VirtualXProxy (to gVirtualX). Proxy object creates callback object and posts a windows message to; ""processing thread"". When windows message is received callback; (""real method"") is executed. For example:; gVirtualX->ClearWindow(). - callback object created containing pointer to function; corresponding TGWin32::ClearWindow() method; - message to ""processing thread"" (main thread) is posted; - TGWin32::ClearWindow() method is executed inside main thread; - thread containing gVirtualX proxy object waits for reply; from main thread that TGWin32::ClearWindow() is completed. Howto create proxy class:. 1. Naming.; name of proxy = TGWin32 + the name of ""virtual base class"" + Proxy. e.g. TGWin32VirtualXProxy = TGWin32 + VirtualX + Proxy. 2. Definition of global object; As example check definition and implementation of; gVirtualX global object. 3. Class definition.; proxy class must be inherited from ""virtual base class"" and; TGWin32ProxyBase class. For example:. class TGWin32VirtualX : public TVirtualX , public TGWin32ProxyBase. 4. Constructors, destructor, extra methods.; - constructors and destructor of proxy class do nothing; - proxy class must contain two extra static methods; RealObject(), ProxyObject(). Each of them return pointer to object; of virtual base class. For example:; static TVirtualX *RealObject();; static TVirtualX *ProxyObject();. 5. Implementation; TGWin32ProxyDefs.h file contains a set of macros which very; simplify implementation.; - RETURN_PROXY_OBJECT macro implements ProxyObject() method, e.g.; RETURN_PROXY_OBJECT(VirtualX); - the names of other macros say about itself. For example:; VOID_METHOD_ARG0(VirtualX,SetFillAttributes,1); void TGWin32VirtualXProxy::SetFillAttributes(). RETURN_METHOD_ARG0_CONST(VirtualX,Visual_t,GetVisual); Visual_t TGWin32VirtualXProxy::GetVisual() const. RETURN_METHOD_ARG2(VirtualX,Int_t,OpenPixmap,UInt_t,w,UInt_t,h); Int_t TGWin32Virt",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32ProxyBase.cxx:1441,inherit,inherited,1441,graf2d/win32gdk/src/TGWin32ProxyBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32ProxyBase.cxx,1,['inherit'],['inherited']
Modifiability,"wing formats are supported, eg in TClassTree::Draw; 1. `Draw(""ClassA"")`; - Draw inheritance tree for ClassA; - Show all classes referenced by ClassA; 2. `Draw(""*ClassB"")`; - Draw inheritance tree for ClassB; and all the classes deriving from ClassB; 3. `Draw("">ClassC"")`; - Draw inheritance tree for ClassC; - Show classes referencing ClassC; 4. `Draw(""ClassD<"")`; - Draw inheritance tree for ClassD; - Show classes referenced by ClassD; - Show all classes referencing ClassD; 5. `Draw(""Cla*"")`; - Draw inheritance tree for all classes with name starting with ""Cla""; - Show classes referenced by these classes; 6. `Draw(""ClassA:ClassB<"")`; - Draw inheritance tree for ClassA; - Show all classes referenced by ClassA; - Draw inheritance tree for ClassB; - Show classes referenced by ClassB; - Show all classes referencing ClassB. Example: `Draw(""TTree<"")`; - Draw inheritance tree for the Root class TTree; - Show all classes referenced by TTree; - Show all classes using TTree. By default, only direct inheritance is drawn.; Use TClassTree::ShowLinks(option) to show additional references; - option = ""H"" to show links to embedded classes; - option = ""M"" to show multiple inheritance; - option = ""R"" to show pointers to other classes from data members; - option = ""C"" to show classes used by the code(implementation) of a class. The following picture is produced directly by:; ~~~ {.cpp}; TClassTree ct(""ct"",""*TH1""); ~~~; It shows all the classes derived from the base class TH1. \image html gpad_classtree1.png. The TClassTree class uses the services of the class TPaveClass to; show the class names. By clicking with the right mouse button in; one TPaveClass object, one can invoke the following functions of TClassTree:; - ShowLinks(option) with by default option = ""HMR""; - Draw(classes). By default the class drawn is the one being pointed; - ShowClassesUsedBy(classes) (by default the pointed class); - ShowClassesUsing(classes) (by default the pointed class). The following picture has been ge",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:1614,inherit,inheritance,1614,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,1,['inherit'],['inheritance']
Modifiability,"with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' with 'gaus2D'.................OK; // Test 12: 'Histogram 2D' with 'gaus2D'..........................OK; // Test 13: 'TGraph 2D' with 'gaus2D'.............................OK; // Test 14: 'TGraphErrors 2DGE' with 'gaus2D'.....................OK; // Test 15: 'THnSparse 2D' with 'gaus2D'..........................OK; // Test Linear fits; // Test 16: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 17: 'Histogram 1D' with 'Polynomial'......................OK; // Test 18: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 19: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 20: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 21: 'Histogram 2D Variable' with 'Poly2D'.................OK; // Test 22: 'Histogram 2D' with 'Poly2D'..........................OK; // Test 23: 'TGraph 2D' with 'Poly2D'.............................OK; // Test 24: 'TGraphErrors 2DGE' with 'Poly2D'.....................OK; // Test 25: 'THnSparse 2D' with 'Poly2D'..........................OK; // Test unbinned fits; // Test 26: 'tree' with 'gausn'...................................OK; // Test 27: 'tree' with 'gaus2Dn'.................................OK; // Test 28: 'tree' with 'gausND'..................................OK; // ****************************************************************************; // stressHistoFit: Real Time = 37.49 seconds Cpu Time = 37.24 seconds; // ROOTMARKS = 2663.8 ROOT version: 5.27/01 trunk@32822; // ****************************************************************************; //; // //; //*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:2710,Variab,Variable,2710,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Variab'],['Variable']
Modifiability,"with the; /// directive. A OMPCanonicalLoop must not appear in the AST unless associated; /// with a OMPLoopBasedDirective. In an imperfectly nested loop nest, the; /// OMPCanonicalLoop may also be wrapped in a CompoundStmt:; ///; /// [...]; /// ` OMPCanonicalLoop; /// `- ForStmt/CXXForRangeStmt; /// `- CompoundStmt; /// |- Leading in-between code (if any); /// |- OMPCanonicalLoop; /// | `- ForStmt/CXXForRangeStmt; /// | `- ...; /// `- Trailing in-between code (if any); ///; /// The leading/trailing in-between code must not itself be a OMPCanonicalLoop; /// to avoid confusion which loop belongs to the nesting.; ///; /// There are three different kinds of iteration variables for different; /// purposes:; /// * Loop user variable: The user-accessible variable with different value for; /// each iteration.; /// * Loop iteration variable: The variable used to identify a loop iteration;; /// for range-based for-statement, this is the hidden iterator '__begin'. For; /// other loops, it is identical to the loop user variable. Must be a; /// random-access iterator, pointer or integer type.; /// * Logical iteration counter: Normalized loop counter starting at 0 and; /// incrementing by one at each iteration. Allows abstracting over the type; /// of the loop iteration variable and is always an unsigned integer type; /// appropriate to represent the range of the loop iteration variable. Its; /// value corresponds to the logical iteration number in the OpenMP; /// specification.; ///; /// This AST node provides two captured statements:; /// * The distance function which computes the number of iterations.; /// * The loop user variable function that computes the loop user variable when; /// given a logical iteration number.; ///; /// These captured statements provide the link between C/C++ semantics and the; /// logical iteration counters used by the OpenMPIRBuilder which is; /// language-agnostic and therefore does not know e.g. how to advance a; /// random-access iterator. The Op",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:2652,variab,variable,2652,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['variab'],['variable']
Modifiability,"work Computing Devices, Inc.; *; * Permission to use, copy, modify, and distribute this software and its; * documentation for any purpose and without fee is hereby granted, provided; * that the above copyright notice appear in all copies and that both that; * copyright notice and this permission notice appear in supporting; * documentation, and that the name of Network Computing Devices may not be; * used in advertising or publicity pertaining to distribution of the software; * without specific, written prior permission. Network Computing Devices makes; * no representations about the suitability of this software for any purpose.; * It is provided ``as is'' without express or implied warranty.; *; * NETWORK COMPUTING DEVICES DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS; * SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS,; * IN NO EVENT SHALL NETWORK COMPUTING DEVICES BE LIABLE FOR ANY SPECIAL,; * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM; * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE; * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR; * PERFORMANCE OF THIS SOFTWARE.; *; * Author: Jim Fulton; * Network Computing Devices, Inc.; *; * Simple if statement processor; *; * This module can be used to evaluate string representations of C language; * if constructs. It accepts the following grammar:; *; * EXPRESSION := VALUE; * | VALUE BINOP EXPRESSION; * | VALUE '?' EXPRESSION ':' EXPRESSION; *; * VALUE := '(' EXPRESSION ')'; * | '!' VALUE; * | '-' VALUE; * | '~' VALUE; * | 'defined' '(' variable ')'; * | 'defined' variable; * | # variable '(' variable-list ')'; * | variable; * | number; *; * BINOP := '*' | '/' | '%'; * | '+' | '-'; * | '<<' | '>>'; * | '<' | '>' | '<=' | '>='; * | '==' | '!='; * | '&' | '^' | '|'; * | '&&' | '||'; *; * The normal C order of precedence is supported.; *; *; * External Entry Points:; *; * ParseIfExpression parse a string for #if; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/ifparser.c:1790,variab,variable,1790,misc/rmkdepend/ifparser.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/ifparser.c,5,['variab'],"['variable', 'variable-list']"
Modifiability,"ximation, the values of \f$\mathbf{P}_j\f$. We call these values; \f$\mathbf{P}^\prime_j, j = 1, \ldots, M\f$.; 4. Determine from \f$\mathbf{x}\f$ a set of at least five relevant; coordinates \f$\mathbf{x}^\prime\f$, using contrains, *or; alternative:*; 5. Perform a Principal Component Analysis (using TPrincipal), and use; to get a linear transformation \f$\mathbf{x} \rightarrow \mathbf{x}^\prime\f$, so that; \f$\mathbf{x}^\prime\f$ are constrained and linear independent.; 6. Perform a Principal Component Analysis on; \f$Q_i = P_i / P^\prime_i\, i = 1, \ldots, 5\f$, to get linear; indenpendent (among themselves, but not independent of \f$\mathbf{x}\f$) quantities; \f$\mathbf{Q}^\prime\f$; 7. For each component \f$Q^\prime_i\f$ make a multidimensional fit,; using \f$\mathbf{x}^\prime\f$ as the variables, thus determining a set of; coefficients \f$\mathbf{c}_i\f$. To process data, using this parameterisation, do; 1. Test wether the observation \f$\mathbf{x}\f$ within the domain of; the parameterization, using the result from the Principal Component; Analysis.; 2. Determine \f$\mathbf{P}^\prime\f$ as before.; 3. Determine \f$\mathbf{x}^\prime\f$ as before.; 4. Use the result of the fit to determine \f$\mathbf{Q}^\prime\f$.; 5. Transform back to \f$\mathbf{P}\f$ from \f$\mathbf{Q}^\prime\f$, using; the result from the Principal Component Analysis. ## Testing the parameterization; The class also provides functionality for testing the, over the; training sample, found parameterization (TMultiDimFit::Fit). This is done by passing; the class a test sample of \f$ M_t\f$ tuples of the form; \f$(\mathbf{x}_{t,j},D_{t,j}, E_{t,j})\f$, where \f$\mathbf{x}_{t,j}\f$ are the independent; variables, \f$ D_{t,j}\f$ the known, dependent quantity, and \f$ E_{t,j}\f$ is; the square error in \f$ D_{t,j}\f$ (TMultiDimFit::AddTestRow). The parameterization is then evaluated at every \f$\mathbf{x}_t\f$ in the; test sample, and; \f[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mat",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:15854,parameteriz,parameterization,15854,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['parameteriz'],['parameterization']
Modifiability,"y() invocation: this is a; shorthand that automatically generates tags 0 to N-1 (in this case 0 and 1). \note Currently, VariationsFor() and RResultMap are in the `ROOT::RDF::Experimental` namespace, to indicate that these; interfaces might still evolve and improve based on user feedback. We expect that some aspects of the related; programming model will be streamlined in future versions. \note Currently, the results of a Snapshot(), Report() or Display() call cannot be varied (i.e. it is not possible to; call \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" on them. These limitations will be lifted in future releases. See the Vary() method for more information and [this tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html) ; for an example usage of Vary and \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" in the analysis. \anchor rnode; ### RDataFrame objects as function arguments and return values; RDataFrame variables/nodes are relatively cheap to copy and it's possible to both pass them to (or move them into); functions and to return them from functions. However, in general each dataframe node will have a different C++ type,; which includes all available compile-time information about what that node does. One way to cope with this complication; is to use template functions and/or C++14 auto return types:; ~~~{.cpp}; template <typename RDF>; auto ApplySomeFilters(RDF df); {; return df.Filter(""x > 0"").Filter([](int y) { return y < 0; }, {""y""});; }; ~~~. A possibly simpler, C++11-compatible alternative is to take advantage of the fact that any dataframe node can be; converted (implicitly or via an explicit cast) to the common type ROOT::RDF::RNode:; ~~~{.cpp}; // a function that conditionally adds a Range to an RDataFrame node.; RNode MaybeAddRange(RNode df, bool mustAddRange); {; return mustAddRange ? df.Range(1) : df;; }; // use as :; ROOT::RDataFrame df(10);; auto maybeRangedDF = MaybeAddRange(df, true);; ~~~. The co",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:60234,variab,variables,60234,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['variab'],['variables']
Modifiability,"yle sheet, JavaScript, help page</a></h3>. <p>The documentation pages share a common set of javascript and CSS files. They; are generated automatically when running <a href=""#THtml:MakeAll"">MakeAll()</a>;; they can be generated on; demand by calling <a href=""#THtml:CreateAuxiliaryFiles"">CreateAuxiliaryFiles()</a>.</p>. <h3><a name=""charts"">VII. Class Charts</a></h3>; THtml can generate a number of graphical representations for a class, which; are displayed as a tabbed set of imaged on-top of the class description.; It can show the inheritance, inherited and hidden members, directly and; indirectly included files, and library dependencies. These graphs are generated using the <a href=""http://www.graphviz.org/"">Graphviz</a>; package. You can install it from <a href=""http://www.graphviz.org"">http://www.graphviz.org</a>.; You can either put it into your $PATH, or tell THtml where to find it by calling; <a href=""#THtml:SetDotDir"">SetDotDir()</a>. <h3><a name=""confvar"">VIII. Configuration variables</a></h3>. <p>Here is a list of all configuration variables that are known to THtml.; You can set them in your .rootrc file, see; <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>.</p>. <pre>; Root.Html.OutputDir (default: htmldoc); Root.Html.SourceDir (default: .:src/:include/); Root.Html.Author (default: // Author:) - start tag for authors; Root.Html.LastUpdate (default: // @(#)) - start tag for last update; Root.Html.Copyright (default: * Copyright) - start tag for copyright notice; Root.Html.Description (default: //____________________ ) - start tag for class descr; Root.Html.HomePage (default: ) - URL to the user defined home page; Root.Html.Header (default: ) - location of user defined header; Root.Html.Footer (default: ) - location of user defined footer; Root.Html.Root (default: ) - URL of Root's class documentation; Root.Html.SearchEngine (default: ) - link to the search engine; Root.Html.Search (default: ) - link to search by replacing ""%s"" with user input; Ro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:20924,Config,Configuration,20924,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,2,"['Config', 'variab']","['Configuration', 'variables']"
Modifiability,"you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file `hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; ///; /// ~~~{.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~{.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:5407,variab,variable,5407,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['variab'],['variable']
Modifiability,"ypes are inferred automatically. The string must be; valid C++ and it is just-in-time compiled. The process has a small runtime overhead and like with filters it is currently the only possible approach when using PyROOT. Previously, when showing the different ways an RDataFrame can be created, we showed a constructor that takes a; number of entries as a parameter. In the following example we show how to combine such an ""empty"" RDataFrame with Define(); transformations to create a dataset on the fly. We then save the generated data on disk using the Snapshot() action.; ~~~{.cpp}; RDataFrame d(100); // an RDF that will generate 100 entries (currently empty); int x = -1;; auto d_with_columns = d.Define(""x"", [&x] { return ++x; }); .Define(""xx"", [&x] { return x*x; });; d_with_columns.Snapshot(""myNewTree"", ""newfile.root"");; ~~~; This example is slightly more advanced than what we have seen so far. First, it makes use of lambda captures (a; simple way to make external variables available inside the body of C++ lambdas) to act on the same variable `x` from; both Define() transformations. Second, we have *stored* the transformed dataframe in a variable. This is always; possible, since at each point of the transformation chain users can store the status of the dataframe for further use (more; on this [below](#callgraphs)). You can read more about defining new columns [here](#custom-columns). \image html RDF_Graph.png ""A graph composed of two branches, one starting with a filter and one with a define. The end point of a branch is always an action."". ### Running on a range of entries; It is sometimes necessary to limit the processing of the dataset to a range of entries. For this reason, the RDataFrame; offers the concept of ranges as a node of the RDataFrame chain of transformations; this means that filters, columns and; actions can be concatenated to and intermixed with Range()s. If a range is specified after a filter, the range will act; exclusively on the entries passing th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:23041,variab,variables,23041,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"ze length to supply real and; /// imaginary coefficients.; /// - destVector-pointer to the vector of dest data, its length should be; /// size except for direct FOURIER, FOUR-WALSH, FOUR-HAAR. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example - script Transform.c:; ///; /// \image html spectrumtransform_transform_image002.jpg Fig. 1 Original gamma-ray spectrum; /// \image html spectrumtransform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform; ///; /// #### Script:; /// Example to illustrate Transform function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1440,enhance,enhancement,1440,hist/spectrum/src/TSpectrumTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx,1,['enhance'],['enhancement']
Modifiability,"zed to \top. A blocks live-in values take the meet of the lattice; /// value for every predecessors live-outs, except for the entry block, where; /// all live-ins are \bot. The usual dataflow propagation occurs: the transfer; /// function for a block assigns an expression for a DebugVariable to be ""True""; /// if a DBG_VALUE in the block specifies it; ""False"" if the location is; /// clobbered; or the live-in value if it is unaffected by the block. We; /// visit each block in reverse post order until a fixedpoint is reached. The; /// solution produced is maximal.; ///; /// Intuitively, we start by assuming that every expression / variable location; /// is at least ""True"", and then propagate ""False"" from the entry block and any; /// clobbers until there are no more changes to make. This gives us an accurate; /// solution because all incorrect locations will have a ""False"" propagated into; /// them. It also gives us a solution that copes well with loops by assuming; /// that variable locations are live-through every loop, and then removing those; /// that are not through dataflow.; ///; /// Within LiveDebugValues: each variable location is represented by a; /// VarLoc object that identifies the source variable, the set of; /// machine-locations that currently describe it (a single location for; /// DBG_VALUE or multiple for DBG_VALUE_LIST), and the DBG_VALUE inst that; /// specifies the location. Each VarLoc is indexed in the (function-scope) \p; /// VarLocMap, giving each VarLoc a set of unique indexes, each of which; /// corresponds to one of the VarLoc's machine-locations and can be used to; /// lookup the VarLoc in the VarLocMap. Rather than operate directly on machine; /// locations, the dataflow analysis in this pass identifies locations by their; /// indices in the VarLocMap, meaning all the variable locations in a block can; /// be described by a sparse vector of VarLocMap indicies.; ///; /// All the storage for the dataflow analysis is local to the ExtendRanges;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:4201,variab,variable,4201,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"{Q}^\prime\f$; 7. For each component \f$Q^\prime_i\f$ make a multidimensional fit,; using \f$\mathbf{x}^\prime\f$ as the variables, thus determining a set of; coefficients \f$\mathbf{c}_i\f$. To process data, using this parameterisation, do; 1. Test wether the observation \f$\mathbf{x}\f$ within the domain of; the parameterization, using the result from the Principal Component; Analysis.; 2. Determine \f$\mathbf{P}^\prime\f$ as before.; 3. Determine \f$\mathbf{x}^\prime\f$ as before.; 4. Use the result of the fit to determine \f$\mathbf{Q}^\prime\f$.; 5. Transform back to \f$\mathbf{P}\f$ from \f$\mathbf{Q}^\prime\f$, using; the result from the Principal Component Analysis. ## Testing the parameterization; The class also provides functionality for testing the, over the; training sample, found parameterization (TMultiDimFit::Fit). This is done by passing; the class a test sample of \f$ M_t\f$ tuples of the form; \f$(\mathbf{x}_{t,j},D_{t,j}, E_{t,j})\f$, where \f$\mathbf{x}_{t,j}\f$ are the independent; variables, \f$ D_{t,j}\f$ the known, dependent quantity, and \f$ E_{t,j}\f$ is; the square error in \f$ D_{t,j}\f$ (TMultiDimFit::AddTestRow). The parameterization is then evaluated at every \f$\mathbf{x}_t\f$ in the; test sample, and; \f[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mathbf{x}_{t,j}\right)\right)^2; \f]; is evaluated. The relative error over the test sample; \f[; R_t = \frac{S_t}{\sum_{j=1}^{M_t} D_{t,j}^2}; \f]; should not be to low or high compared to \f$ R\f$ from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representative of; the problem. A large difference in the reduced \f$ \chi^2\f$ over the two; samples indicate an over fit, and the maximum number of terms in the; parameterisation should be reduced. It's possible to use [4] to further improve the fit, using the test sample. Christian Holm. ## Bibliography; - <a name=""bevington""></a> Philip ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:16556,variab,variables,16556,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variables']
Modifiability,"{_s{\cal P}}_{\rm n}(y_e)~=~N_{\rm n} ~. \tag{4}; \f]. - For any event:. \f[; \sum_{l=1}^{{\rm N}_{\rm s}} {_s{\cal P}}_l(y_e) ~=~1 ~. \tag{5}; \f]. That is to say that, summing up the \f${\rm N}_{\rm s}\f$ \f$\hbox {$_s$}{\cal P}lots\f$,; one recovers the data sample distribution in \f$x\f$, and summing up the number of events; entering in a \f$\hbox{$_s$}{\cal P}lot\f$ for a given species, one recovers the yield of the; species, as provided by the fit.; The property 4 is implemented in the TSPlot class as a check. - the sum of the statistical uncertainties per bin. \f[; \sigma[N_{\rm n}\ _s\tilde{\rm M}_{\rm n}(x) {\delta x}]~=~\sqrt{\sum_{e \subset {\delta x}} ({_s{\cal P}}_{\rm n})^2} ~. \tag{6}; \f]. reproduces the statistical uncertainty on the yield \f$N_{\rm n}\f$, as provided by the fit:; \f$\sigma[N_{\rm n}]\equiv\sqrt{\hbox{ V}_{{\rm n}{\rm n}}}\f$ .; Because of that and since the determination of the yields is optimal; when obtained using a Likelihood fit, one can conclude that the \f$\hbox{$_s$}{\cal P}lot\f$; technique is itself an optimal method to reconstruct distributions of control variables. ### Different steps followed by TSPlot. 1. A maximum Likelihood fit is performed to obtain the yields \f$N_i\f$; of the various species.The fit relies on discriminating variables \f$y\f$; uncorrelated with a control variable \f$x\f$:; the later is therefore totally absent from the fit. 2. The weights \f${_s{\cal P}}\f$ are calculated using Eq.; (2); where the covariance matrix is taken from Minuit. 3. Histograms of \f$x\f$ are filled by weighting the events with \f${_s{\cal P}}\f$ . 4. Error bars per bin are given by Eq. (6). The \f$\hbox {$_s$}{\cal P}lots\f$ reproduce the true distributions of the species; in the control variable \f$x\f$, within the above defined statistical uncertainties. ### Illustrations. To illustrate the technique, one considers an example derived from the analysis where; \f$\hbox {$_s$}{\cal P}lots\f$; have been first used (charmless B",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:5596,variab,variables,5596,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variables']
Modifiability,"| No |; // Hybrid | Yes | Partial | Yes |; //; // ""Module"" spends LDS memory to save cycles. ""Table"" spends cycles and global; // memory to save LDS. ""Kernel"" is as fast as kernel allocation but only works; // for variables that are known reachable from a single kernel. ""Hybrid"" picks; // between all three. When forced to choose between LDS and cycles we minimise; // LDS use.; // The ""module"" lowering implemented here finds LDS variables which are used by; // non-kernel functions and creates a new struct with a field for each of those; // LDS variables. Variables that are only used from kernels are excluded.; //; // The ""table"" lowering implemented here has three components.; // First kernels are assigned a unique integer identifier which is available in; // functions it calls through the intrinsic amdgcn_lds_kernel_id. The integer; // is passed through a specific SGPR, thus works with indirect calls.; // Second, each kernel allocates LDS variables independent of other kernels and; // writes the addresses it chose for each variable into an array in consistent; // order. If the kernel does not allocate a given variable, it writes undef to; // the corresponding array location. These arrays are written to a constant; // table in the order matching the kernel unique integer identifier.; // Third, uses from non-kernel functions are replaced with a table lookup using; // the intrinsic function to find the address of the variable.; //; // ""Kernel"" lowering is only applicable for variables that are unambiguously; // reachable from exactly one kernel. For those cases, accesses to the variable; // can be lowered to ConstantExpr address of a struct instance specific to that; // one kernel. This is zero cost in space and in compute. It will raise a fatal; // error on any variable that might be reachable from multiple kernels and is; // thus most easily used as part of the hybrid lowering strategy.; //; // Hybrid lowering is a mixture of the above. It uses the zero cost kernel; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:4431,variab,variables,4431,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"}; /// TChain c;; /// // DO NOT DO THIS; /// // c.Add(""myfile.root/treename"");; /// // DO THIS INSTEAD; /// c.Add(""myfile.root?#treename"");; /// ~~~; /// - Wildcard treatment is triggered by any of the special characters:; /// <b>[]*?</b> which may be used in the file name or subdirectory name,; /// eg. specifying ""xxx*.root"" adds all files starting with xxx in the; /// current file system directory and ""*/*.root"" adds all the files in the; /// current subdirectories (but not in the subsubdirectories).; ///; /// The second format accepted for \p name may have the form of a URL, e.g.:; ///; /// ~~~ {.cpp}; /// root://machine/path/file_name[?[query][#tree_name]]; /// or root://machine/path/file_name; /// or root://machine/path/file_name.root[.oext]/tree_name; /// or root://machine/path/file_name.root[.oext]/tree_name?query; /// ~~~; ///; /// Note the following:; /// - The optional ""query"" token is to be interpreted by the remote server.; /// - Wildcards may be supported in URLs, depending on the protocol plugin and; /// the remote server.; /// - \p http or \p https URLs can contain a query identifier without; /// \p tree_name, but generally URLs can not be written with them because of; /// ambiguity with the wildcard character. (Also see the documentation for; /// TChain::AddFile, which does not support wildcards but allows the URL name; /// to contain a query).; /// - The rules for tagging the name of the tree in the file are the same as; /// in the format above.; ///; /// <h4>Details of the nentries parameter</h4>; /// Depending on the value of the parameter, the number of entries in the file; /// is retrieved differently:; /// - If <tt>nentries <= 0</tt>, the file is connected and the tree header read; /// in memory to get the number of entries.; /// - If <tt>nentries > 0</tt>, the file is not connected, \p nentries is; /// assumed to be the number of entries in the file. In this case, no check is; /// made that the file exists and that the corresponding tree exist",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:2693,plugin,plugin,2693,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['plugin'],['plugin']
Performance," %4 = bitcast i8* %call1 to i32*; /// ; 3 = MemoryDef(2); /// store i32 5, i32* %2, align 4; /// ; 4 = MemoryDef(3); /// store i32 7, i32* %4, align 4; /// ; MemoryUse(3); /// %7 = load i32* %2, align 4; /// ; MemoryUse(4); /// %8 = load i32* %4, align 4; /// %add = add nsw i32 %7, %8; /// ret i32 %add; /// }; ///; /// Given this form, all the stores that could ever effect the load at %8 can be; /// gotten by using the MemoryUse associated with it, and walking from use to; /// def until you hit the top of the function.; ///; /// Each def also has a list of users associated with it, so you can walk from; /// both def to users, and users to defs. Note that we disambiguate MemoryUses,; /// but not the RHS of MemoryDefs. You can see this above at %7, which would; /// otherwise be a MemoryUse(4). Being disambiguated means that for a given; /// store, all the MemoryUses on its use lists are may-aliases of that store; /// (but the MemoryDefs on its use list may not be).; ///; /// MemoryDefs are not disambiguated because it would require multiple reaching; /// definitions, which would require multiple phis, and multiple memoryaccesses; /// per instruction.; ///; /// In addition to the def/use graph described above, MemoryDefs also contain; /// an ""optimized"" definition use. The ""optimized"" use points to some def; /// reachable through the memory def chain. The optimized def *may* (but is; /// not required to) alias the original MemoryDef, but no def *closer* to the; /// source def may alias it. As the name implies, the purpose of the optimized; /// use is to allow caching of clobber searches for memory defs. The optimized; /// def may be nullptr, in which case clients must walk the defining access; /// chain.; ///; /// When iterating the uses of a MemoryDef, both defining uses and optimized; /// uses will be encountered. If only one type is needed, the client must; /// filter the use walk.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSA.h:2835,optimiz,optimized,2835,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSA.h,6,['optimiz'],['optimized']
Performance," (a combination of Simplex + Migrad); - Minimize; - Scan; - Seek. - Minuit2 (class ROOT::Minuit2::Minuit2Minimizer); - Migrad (default); - Simplex; - Minimize; - Fumili (Fumili2); - Scan. - Fumili (class TFumiliMinimizer). - GSLMultiMin (class ROOT::Math::GSLMinimizer) available when ROOT is built with `mathmore` support; - BFGS2 (Default); - BFGS; - ConjugateFR; - ConjugatePR; - SteepestDescent. - GSLMultiFit (class ROOT::Math::GSLNLMinimizer) available when ROOT is built `mathmore` support. - GSLSimAn (class ROOT::Math::GSLSimAnMinimizer) available when ROOT is built with `mathmore` support. - Genetic (class ROOT::Math::GeneticMinimizer). - RMinimizer (class ROOT::Math::RMinimizer) available when ROOT is built with `r` support; - BFGS (default); - L-BFGS-S; - Nelder-Mead; - CG; - and more methods, see the Details in the documentation of the function `optimix` of the [optmix R package](https://cran.r-project.org/web/packages/optimx/optimx.pdf). The Minimizer class provides the interface to perform the minimization including. In addition to provide the API for function minimization (via ROOT::Math::Minimizer::Minimize) the Minimizer class provides:; - the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional generic interface; ROOT::Math::IBaseFunctionMultiDim. If the function provides gradient calculation (e.g. implementing the ROOT::Math::IGradientFunctionMultiDim interface); the gradient will be used by the Minimizer class, when needed. There are convenient classes for the users to wrap their own functions in this required interface for minimization.; These are the `ROOT::Math::Functor` class and the `ROOT::Math::GradFunctor` class for wrapping functions providing both evaluation and gradient. Some methods, like Fumili, Fumili2 and GSLMultiFit are; specialized method for least-square and also likelihood minimizations. They require then that the given function implements in addition;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:2041,perform,perform,2041,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['perform'],['perform']
Performance," * Test 20 : File-resident output: merge ...................... OK * * //; // * Test 21 : File-resident output: merge w/ submergers ........ OK * * //; // * Test 22 : File-resident output: create dataset ............. OK * * //; // * Test 23 : File-resident output: multi trees ................ OK * * //; // * Test 24 : TTree friends (and TPacketizerFile) .............. OK * * //; // * Test 25 : TTree friends, same file ......................... OK * * //; // * Test 26 : Handling output via file ......................... OK * * //; // * Test 27 : Simple: selector by object ....................... OK * * //; // * Test 28 : H1 dataset: selector by object ................... OK * * //; // * Test 29 : Chain with TTree in subdirs ...................... OK * * //; // * * All registered tests have been passed :-) * * //; // * ****************************************************************** * //; // * * //; // * The application redirects the processing logs to a log file which is * //; // * normally deleted at the end of a successful run; if the test fails * //; // * the caller is asked if she/he wants to keep the log file; if the * //; // * specifies a log file path of her/his choice, the log file is never * //; // * deleted. * //; // * * //; // * SKIPPED means that the test cannot be run. * //; // * * //; // * New tests can be easily added by providing a function performing the * //; // * test and a name for the test; see examples below. * //; // * * //; // * It is also possible to trigger the automatic PROOF valgrind setup by * //; // * means of the env GETPROOF_VALGRIND. * //; // * E.g. to run the master in valgrind do * //; // * * //; // * $ export GETPROOF_VALGRIND=""valgrind=master"" * //; // * or * //; // * $ export GETPROOF_VALGRIND=""valgrind=workers"" * //; // * * //; // * before running stressProof. The syntax is the same as for standard * //; // * PROOF valgrind runs. * //; // * * //; // ************************************************************************* //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:4533,perform,performing,4533,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['perform'],['performing']
Performance," *************************************************************************/; /**************************************************************************. This source is based on Xclass95, a Win95-looking GUI toolkit.; Copyright (C) 1996, 1997 David Barth, Ricky Ralston, Hector Peraza. Xclass95 is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; /** \class TGButton; \ingroup guiwidgets. A button abstract base class. It defines general button behaviour. */; /** \class TGTextButton; \ingroup guiwidgets. Yield an action as soon as it is clicked. This buttons usually provides fast access to; frequently used or critical commands. It may appear alone or placed in a group. The action it performs can be inscribed with a meaningful tooltip; set by `SetToolTipText(const char* text, Long_t delayms=400). The text button has a label indicating the action to be taken when; the button is pressed. The text can be a hot string (""&Exit"") that; defines the label ""Exit"" and keyboard mnemonics Alt+E for button; selection. A button label can be changed by SetText(new_label). Selecting a text or picture button will generate the event:; - kC_COMMAND, kCM_BUTTON, button id, user data.; */; /** \class TGPictureButton; \ingroup guiwidgets. Yield an action as soon as it is clicked. This buttons usually provides fast access to; frequently used or critical commands. It may appear alone or placed in a group. The action it performs can be inscribed with a meaningful tooltip; set by `SetToolTipText(const char* text, Long_t delayms=400). The text button has a label indicating the action to be taken when; the button is pressed. The text can be a hot string (""&Exit"") that; defines the label ""Exit"" and keyboard mnemonics Alt+E for button; selecti",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButton.cxx:1334,perform,performs,1334,gui/gui/src/TGButton.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButton.cxx,1,['perform'],['performs']
Performance," *; * USES; * libAfterBase - AfterStep basic functionality library. That Includes; * Hash tables, file search methods, message output, generic types.; * However effort has been made to allow for standalone configuration as; * well. If libAfterBase is not found at compilation time - libAfterImage; * will use extract from libAfterBase included with libAfterImage.; *; * SEE ALSO; * Examples; * API Reference; *; * TODO; * Implement support for Targa and PCX image format and maybe some other; * formats as well.; *; * Implement complete support for I18N internationalization.; *; * Implement color<->pixel conversion for all colordepths.; *; * AUTHOR; * Sasha Vasko <sasha at aftercode dot net>; *********/; /****h* libAfterImage/Examples; * EXAMPLE; * ASView - image loading from the file and displaying in window.; * ASScale - image loading from file and scaling to arbitrary size.; * ASTile - image loading from file, tiling and tinting to arbitrary; * size and color.; * ASMerge - imgae loading and merging with another image.; * ASGrad - mutlipoint gradient drawing.; * ASFlip - image loading from file and rotation.; * ASText - trexturized semitransparent antialised text drawing.; *; * SEE ALSO; * API Reference; ******/; /****h* libAfterImage/API Reference; * CHILDREN; * Headers :; * ascmap.h asfont.h asimage.h asvisual.h blender.h export.h; * import.h transform.h ximage.h; * Structures :; * ColorPair; * ASScanline; * ASVisual; * ASImage; * ASImageManager; * ASImageBevel; * ASImageDecoder; * ASImageOutput; * ASImageLayer; * ASGradient; * ASFontManager; * ASFont; * ASGlyph; * ASGlyphRange; * ASColormap; * ASImageExportParams; * ASVectorPalette; *; * Functions :; * ASScanline handling:; * 	 prepare_scanline(), free_scanline(); *; * ASVisual initialization :; * 	 query_screen_visual(), setup_truecolor_visual(),; * 	 setup_pseudo_visual(), setup_as_colormap(),; * create_asvisual(), create_asvisual_for_id(),; * 	 destroy_asvisual(); *; * ASVisual encoding/decoding :; * 	 visual2visua",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h:6105,load,loading,6105,graf2d/asimage/src/libAfterImage/afterimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h,1,['load'],['loading']
Performance," / 4 | yes? |; // +----------+-----+-----+-------+---------+------------+---------+----------+; // | 2 | 0 | 0 | 4 | 12 / 8 | 2 | 6 / 8 | yes |; // +----------+-----+-----+-------+---------+------------+---------+----------+; // | 2 | 0 | 0 | 2 | 6 / 4 | 2 | 6 / 8 | no |; // +----------+-----+-----+-------+---------+------------+---------+----------+; // | 1 | 0 | 1 | 2 | 6 / 2 | 1 | 3 / 2 | yes |; // +----------+-----+-----+-------+---------+------------+---------+----------+; //; // Some cases are of questionable benefit, like the one marked with ""yes?""; // above: fewer intrinsics and fewer vaddr and fewer total transfers between SP; // and TX, but higher vdata. We start by erring on the side of converting these; // to MSAA_LOAD.; //; // clang-format off; //; // This pass will combine intrinsics such as (not neccessarily consecutive):; // call float @llvm.amdgcn.image.load.2dmsaa.f32.i32(i32 1, i32 %s, i32 %t, i32 0, <8 x i32> %rsrc, i32 0, i32 0); // call float @llvm.amdgcn.image.load.2dmsaa.f32.i32(i32 1, i32 %s, i32 %t, i32 1, <8 x i32> %rsrc, i32 0, i32 0); // call float @llvm.amdgcn.image.load.2dmsaa.f32.i32(i32 1, i32 %s, i32 %t, i32 2, <8 x i32> %rsrc, i32 0, i32 0); // call float @llvm.amdgcn.image.load.2dmsaa.f32.i32(i32 1, i32 %s, i32 %t, i32 3, <8 x i32> %rsrc, i32 0, i32 0); // ==>; // call <4 x float> @llvm.amdgcn.image.msaa.load.2dmsaa.v4f32.i32(i32 1, i32 %s, i32 %t, i32 0, <8 x i32> %rsrc, i32 0, i32 0); //; // clang-format on; //; // Future improvements:; //; // - We may occasionally not want to do the combine if it increases the maximum; // register pressure.; //; // - Ensure clausing when multiple MSAA_LOAD are generated.; //; // Note: Even though the image_msaa_load intrinsic already exists on gfx10, this; // combine only applies to gfx11, due to a limitation in gfx10: the gfx10; // IMAGE_MSAA_LOAD only works correctly with single-channel texture formats, and; // we don't know the format at compile time.; //===-----------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUImageIntrinsicOptimizer.cpp:2316,load,load,2316,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUImageIntrinsicOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUImageIntrinsicOptimizer.cpp,1,['load'],['load']
Performance," // 89 AB CD EF; // With groups of 4, this will become a single 2x2 matrix, and so on.; //; // The 2x2 transpose instruction works by transposing each of the 2x2; // matrices (or ""sub-matrices""), given a specific group size. For example,; // if the group size is 1 (i.e. each element is its own group), there; // will be four transposes of the four 2x2 matrices that form the 2x8.; // For example, with the inputs as above, the result will be:; // 0 8 2 A 4 C 6 E; // 1 9 3 B 5 D 7 F; // Now, this result can be tranposed again, but with the group size of 2:; // 08 19 4C 5D; // 2A 3B 6E 7F; // If we then transpose that result, but with the group size of 4, we get:; // 0819 2A3B; // 4C5D 6E7F; // If we concatenate these two rows, it will be; // 0 8 1 9 2 A 3 B 4 C 5 D 6 E 7 F; // which is the same as the ""deal"" [*] above.; //; // In general, a ""deal"" of individual elements is a series of 2x2 transposes,; // with changing group size. HVX has two instructions:; // Vdd = V6_vdealvdd Vu, Vv, Rt; // Vdd = V6_shufvdd Vu, Vv, Rt; // that perform exactly that. The register Rt controls which transposes are; // going to happen: a bit at position n (counting from 0) indicates that a; // transpose with a group size of 2^n will take place. If multiple bits are; // set, multiple transposes will happen: vdealvdd will perform them starting; // with the largest group size, vshuffvdd will do them in the reverse order.; //; // The main observation is that each 2x2 transpose corresponds to swapping; // columns of bits in the binary representation of the values.; //; // The numbers {3,2,1,0} and the log2 of the number of contiguous 1 bits; // in a given column. The * denote the columns that will be swapped.; // The transpose with the group size 2^n corresponds to swapping columns; // 3 (the highest log) and log2(n):; //; // 3 2 1 0 0 2 1 3 0 2 3 1; // * * * * * *; // 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; // 1 0 0 0 1 8 1 0 0 0 8 1 0 0 0 8 1 0 0 0; // 2 0 0 1 0 2 0 0 1 0 1 0 0 0 1 1 0 0 0 1;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp:2016,perform,perform,2016,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAGHVX.cpp,1,['perform'],['perform']
Performance," // It is an array of a variable number of tracks per event.; // Each element of the array is an object of class Track with the members:; // private:; // Float_t fPx; //X component of the momentum; // Float_t fPy; //Y component of the momentum; // Float_t fPz; //Z component of the momentum; // Float_t fRandom; //A random track quantity; // Float_t fMass2; //The mass square of this particle; // Float_t fBx; //X intercept at the vertex; // Float_t fBy; //Y intercept at the vertex; // Float_t fMeanCharge; //Mean charge deposition of all hits of this track; // Float_t fXfirst; //X coordinate of the first point; // Float_t fXlast; //X coordinate of the last point; // Float_t fYfirst; //Y coordinate of the first point; // Float_t fYlast; //Y coordinate of the last point; // Float_t fZfirst; //Z coordinate of the first point; // Float_t fZlast; //Z coordinate of the last point; // Double32_t fCharge; //Charge of this track; // Double32_t fVertex[3]; //Track vertex position; // Int_t fNpoint; //Number of points for this track; // Short_t fValid; //Validity criterion; // Int_t fNsp; //Number of points for this track with a special value; // Double32_t *fPointValue; //[fNsp] a special quantity for some point.; // TBits fTriggerBits; //Bits triggered by this track.; //; // An example of a batch program to use the Event/Track classes is given; // in this directory: MainEvent.; // Look also in the same directory at the following macros:; // - eventa.C an example how to read the tree; // - eventb.C how to read events conditionally; //; // During the processing of the event (optionally) also a large number; // of histograms can be filled. The creation and handling of the; // histograms is taken care of by the HistogramManager class.; //; // This version of the Event class is a simplified version suitable for; // use in a multi-threads environment as all Event objects are; // independent from each other.; //; ////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/EventMT.cxx:2962,multi-thread,multi-threads,2962,test/EventMT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/EventMT.cxx,1,['multi-thread'],['multi-threads']
Performance," /// The primary difference from normal SSA construction is that we cannot; /// _create_ PHI values that contain variable values. CodeGen has already; /// completed, and we can't alter it just to make debug-info complete. Thus:; /// we can identify function positions where we would like a PHI value for a; /// variable, but must search the MachineFunction to see whether such a PHI is; /// available. If no such PHI exists, the variable location must be dropped.; ///; /// To achieve this, we perform two kinds of analysis. First, we identify; /// every value defined by every instruction (ignoring those that only move; /// another value), then re-compute an SSA-form representation of the; /// MachineFunction, using value propagation to eliminate any un-necessary; /// PHI values. This gives us a map of every value computed in the function,; /// and its location within the register file / stack.; ///; /// Secondly, for each variable we perform the same analysis, where each debug; /// instruction is considered a def, and every instruction where the variable; /// is in lexical scope as a use. Value propagation is used again to eliminate; /// any un-necessary PHIs. This gives us a map of each variable to the value; /// it should have in a block.; ///; /// Once both are complete, we have two maps for each block:; /// * Variables to the values they should have,; /// * Values to the register / spill slot they are located in.; /// After which we can marry-up variable values with a location, and emit; /// DBG_VALUE instructions specifying those locations. Variable locations may; /// be dropped in this process due to the desired variable value not being; /// resident in any machine location, or because there is no PHI value in any; /// location that accurately represents the desired value. The building of; /// location lists for each block is left to DbgEntityHistoryCalculator.; ///; /// This pass is kept efficient because the size of the first SSA problem; /// is proportional to th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:1953,perform,perform,1953,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['perform'],['perform']
Performance," /// ensure we optimize functions prior to them being introduced into the call; /// graph by devirtualization or other technique, and thus ensures that; /// subsequent pair-wise interprocedural optimizations observe the optimized; /// form of these functions. The (potentially transitive) reference; /// reachability used by the reference graph is a conservative approximation; /// that still allows us to have independent regions of the graph.; ///; /// FIXME: There is one major drawback of the reference graph: in its naive; /// form it is quadratic because it contains a distinct edge for each; /// (potentially indirect) reference, even if are all through some common; /// global table of function pointers. This can be fixed in a number of ways; /// that essentially preserve enough of the normalization. While it isn't; /// expected to completely preclude the usability of this, it will need to be; /// addressed.; ///; ///; /// All of these issues are made substantially more complex in the face of; /// mutations to the call graph while optimization passes are being run. When; /// mutations to the call graph occur we want to achieve two different things:; ///; /// - We need to update the call graph in-flight and invalidate analyses; /// cached on entities in the graph. Because of the cache-based analysis; /// design of the pass manager, it is essential to have stable identities for; /// the elements of the IR that passes traverse, and to invalidate any; /// analyses cached on these elements as the mutations take place.; ///; /// - We want to preserve the incremental and post-order traversal of the; /// graph even as it is refined and mutated. This means we want optimization; /// to observe the most refined form of the call graph and to do so in; /// post-order.; ///; /// To address this, the CGSCC manager uses both worklists that can be expanded; /// by passes which transform the IR, and provides invalidation tests to skip; /// entries that become dead. This extra data is ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h:2983,optimiz,optimization,2983,interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,1,['optimiz'],['optimization']
Performance," /// identify aliasing loads and stores.; ///; /// To enforce aliasing between loads and stores, flag `AssumeNoAlias` must be; /// set to `false` by the constructor of LSUnit.; ///; /// Note that this class doesn't know about the existence of different memory; /// types for memory operations (example: write-through, write-combining, etc.).; /// Derived classes are responsible for implementing that extra knowledge, and; /// provide different sets of rules for loads and stores by overriding method; /// `isReady()`.; /// To emulate a write-combining memory type, rule 2. must be relaxed in a; /// derived class to enable the reordering of non-aliasing store operations.; ///; /// No assumptions are made by this class on the size of the store buffer. This; /// class doesn't know how to identify cases where store-to-load forwarding may; /// occur.; ///; /// LSUnit doesn't attempt to predict whether a load or store hits or misses; /// the L1 cache. To be more specific, LSUnit doesn't know anything about; /// cache hierarchy and memory types.; /// It only knows if an instruction ""mayLoad"" and/or ""mayStore"". For loads, the; /// scheduling model provides an ""optimistic"" load-to-use latency (which usually; /// matches the load-to-use latency for when there is a hit in the L1D).; /// Derived classes may expand this knowledge.; ///; /// Class MCInstrDesc in LLVM doesn't know about serializing operations, nor; /// memory-barrier like instructions.; /// LSUnit conservatively assumes that an instruction which `mayLoad` and has; /// `unmodeled side effects` behave like a ""soft"" load-barrier. That means, it; /// serializes loads without forcing a flush of the load queue.; /// Similarly, instructions that both `mayStore` and have `unmodeled side; /// effects` are treated like store barriers. A full memory; /// barrier is a 'mayLoad' and 'mayStore' instruction with unmodeled side; /// effects. This is obviously inaccurate, but this is the best that we can do; /// at the moment.; ///; /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h:1822,cache,cache,1822,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h,1,['cache'],['cache']
Performance," /// locations, using the VarLoc class.; ///; /// The canonical ""available expressions"" problem doesn't have expression; /// clobbering, instead when a variable is re-assigned, any expressions using; /// that variable get invalidated. LiveDebugValues can map onto ""available; /// expressions"" by having every register represented by a variable, which is; /// used in an expression that becomes available at a DBG_VALUE instruction.; /// When the register is clobbered, its variable is effectively reassigned, and; /// expressions computed from it become unavailable. A similar construct is; /// needed when a DebugVariable has its location re-specified, to invalidate; /// all other locations for that DebugVariable.; ///; /// Using the dataflow analysis to compute the available expressions, we create; /// a DBG_VALUE at the beginning of each block where the expression is; /// live-in. This propagates variable locations into every basic block where; /// the location can be determined, rather than only having DBG_VALUEs in blocks; /// where locations are specified due to an assignment or some optimization.; /// Movements of values between registers and spill slots are annotated with; /// DBG_VALUEs too to track variable values bewteen locations. All this allows; /// DbgEntityHistoryCalculator to focus on only the locations within individual; /// blocks, facilitating testing and improving modularity.; ///; /// We follow an optimisic dataflow approach, with this lattice:; ///; /// \verbatim; /// ┬ ""Unknown""; /// |; /// v; /// True; /// |; /// v; /// ⊥ False; /// \endverbatim With ""True"" signifying that the expression is available (and; /// thus a DebugVariable's location is the corresponding register), while; /// ""False"" signifies that the expression is unavailable. ""Unknown""s never; /// survive to the end of the analysis (see below).; ///; /// Formally, all DebugVariable locations that are live-out of a block are; /// initialized to \top. A blocks live-in values take the meet o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:2366,optimiz,optimization,2366,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['optimiz'],['optimization']
Performance," ///; /// ""macrofilename"" and optionally ""cutfilename"" are expected to point; /// to source file which will be included in by the generated skeletong.; /// Method of the same name as the file(minus the extension and path); /// will be called by the generated skeleton's Process method as follow:; /// ~~~{.cpp}; /// [if (cutfilename())] htemp->Fill(macrofilename());; /// ~~~; /// ""option"" can be used select some of the optional features during; /// the code generation. The possible options are:; /// - nohist : indicates that the generated ProcessFill should not; /// fill the histogram.; ///; /// 'maxUnrolling' controls how deep in the class hierarchy does the; /// system 'unroll' class that are not split. 'unrolling' a class; /// will allow direct access to its data members a class (this; /// emulates the behavior of TTreeFormula).; ///; /// The main features of this skeleton are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~{.cpp}; /// Double_t somepx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somepx will be updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the b",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1703,load,loading,1703,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['load'],['loading']
Performance," FIXME: In the absence of cache misses (i.e. L1I/L1D/iTLB/dTLB hits/misses),; // and load/store conflicts, the latency of a load is determined by the depth; // of the load pipeline. So, we could use field `LoadLatency` in the; // MCSchedModel to model that latency.; // Field `LoadLatency` often matches the so-called 'load-to-use' latency from; // L1D, and it usually already accounts for any extra latency due to data; // forwarding.; // When doing throughput analysis, `LoadLatency` is likely to; // be a better predictor of load latency than instruction latency. This is; // particularly true when simulating code with temporal/spatial locality of; // memory accesses.; // Using `LoadLatency` (instead of the instruction latency) is also expected; // to improve the load queue allocation for long latency instructions with; // folded memory operands (See PR39829).; //; // FIXME: On some processors, load/store operations are split into multiple; // uOps. For example, X86 AMD Jaguar natively supports 128-bit data types, but; // not 256-bit data types. So, a 256-bit load is effectively split into two; // 128-bit loads, and each split load consumes one 'LoadQueue' entry. For; // simplicity, this class optimistically assumes that a load instruction only; // consumes one entry in the LoadQueue. Similarly, store instructions only; // consume a single entry in the StoreQueue.; // In future, we should reassess the quality of this design, and consider; // alternative approaches that let instructions specify the number of; // load/store queue entries which they consume at dispatch stage (See; // PR39830).; //; // An instruction that both 'mayStore' and 'HasUnmodeledSideEffects' is; // conservatively treated as a store barrier. It forces older store to be; // executed before newer stores are issued.; //; // An instruction that both 'MayLoad' and 'HasUnmodeledSideEffects' is; // conservatively treated as a load barrier. It forces older loads to execute; // before newer loads are issued.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h:1268,load,load,1268,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h,11,"['Load', 'load', 'queue']","['LoadQueue', 'load', 'loads', 'queue']"
Performance," For example with Event.root, if; /// ~~~{.cpp}; /// Double_t somepx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somepx will be updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:2961,cache,cache,2961,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['cache'],['cache']
Performance," However, this code doesn't use exactly that formula; the formula it uses; // is something like the following, where T is the number of factors of 2 in; // K! (i.e. trailing zeros in the binary representation of K!), and ^ is; // exponentiation:; //; // BC(It, K) = (It * (It - 1) * ... * (It - K + 1)) / 2^T / (K! / 2^T); //; // This formula is trivially equivalent to the previous formula. However,; // this formula can be implemented much more efficiently. The trick is that; // K! / 2^T is odd, and exact division by an odd number *is* safe in modular; // arithmetic. To do exact division in modular arithmetic, all we have; // to do is multiply by the inverse. Therefore, this step can be done at; // width W.; //; // The next issue is how to safely do the division by 2^T. The way this; // is done is by doing the multiplication step at a width of at least W + T; // bits. This way, the bottom W+T bits of the product are accurate. Then,; // when we perform the division by 2^T (which is equivalent to a right shift; // by T), the bottom W bits are accurate. Extra bits are okay; they'll get; // truncated out after the division by 2^T.; //; // In comparison to just directly using the first formula, this technique; // is much more efficient; using the first formula requires W * K bits,; // but this formula less than W + K bits. Also, the first formula requires; // a division step, whereas this formula only requires multiplies and shifts.; //; // It doesn't matter whether the subtraction step is done in the calculation; // width or the input iteration count's width; if the subtraction overflows,; // the result must be zero anyway. We prefer here to do it in the width of; // the induction variable because it helps a lot for certain cases; CodeGen; // isn't smart enough to ignore the overflow, which leads to much less; // efficient code if the width of the subtraction is wider than the native; // register width.; //; // (It's possible to not widen at all by pulling out factors of 2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:1336,perform,perform,1336,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['perform'],['perform']
Performance," ID of the dispatch; /// packet being executed.; ///; /// Flat Scratch Init (enable_sgpr_flat_scratch_init):; /// Number of User SGPR registers: 2. This is 2 SGPRs.; ///; /// For CI/VI:; /// The first SGPR is a 32 bit byte offset from SH_MEM_HIDDEN_PRIVATE_BASE; /// to base of memory for scratch for this dispatch. This is the same offset; /// used in computing the Scratch Segment Buffer base address. The value of; /// Scratch Wave Offset must be added by the kernel code and moved to; /// SGPRn-4 for use as the FLAT SCRATCH BASE in flat memory instructions.; ///; /// The second SGPR is 32 bit byte size of a single work-item's scratch; /// memory usage. This is directly loaded from the dispatch packet Private; /// Segment Byte Size and rounded up to a multiple of DWORD.; ///; /// \todo [Does CP need to round this to >4 byte alignment?]; ///; /// The kernel code must move to SGPRn-3 for use as the FLAT SCRATCH SIZE in; /// flat memory instructions. Having CP load it once avoids loading it at; /// the beginning of every wavefront.; ///; /// For PI:; /// This is the 64 bit base address of the scratch backing memory for; /// allocated by CP for this dispatch.; ///; /// Private Segment Size (enable_sgpr_private_segment_size):; /// Number of User SGPR registers: 1. The 32 bit byte size of a single; /// work-item's scratch memory allocation. This is the value from the dispatch; /// packet. Private Segment Byte Size rounded up by CP to a multiple of DWORD.; ///; /// \todo [Does CP need to round this to >4 byte alignment?]; ///; /// Having CP load it once avoids loading it at the beginning of every; /// wavefront.; ///; /// \todo [This will not be used for CI/VI since it is the same value as; /// the second SGPR of Flat Scratch Init. However, it is need for PI which; /// changes meaning of Flat Scratchg Init..]; ///; /// Grid Work-Group Count X (enable_sgpr_grid_workgroup_count_x):; /// Number of User SGPR registers: 1. 32 bit count of the number of; /// work-groups in the X di",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDKernelCodeT.h:4354,load,load,4354,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDKernelCodeT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDKernelCodeT.h,2,['load'],"['load', 'loading']"
Performance," MayAlias. This uncertainty from alias analysis restricts LICM; // from proceeding further. In cases where alias analysis is uncertain we might; // use loop versioning as an alternative.; //; // Loop Versioning will create a version of the loop with aggressive aliasing; // assumptions in addition to the original with conservative (default) aliasing; // assumptions. The version of the loop making aggressive aliasing assumptions; // will have all the memory accesses marked as no-alias. These two versions of; // loop will be preceded by a memory runtime check. This runtime check consists; // of bound checks for all unique memory accessed in loop, and it ensures the; // lack of memory aliasing. The result of the runtime check determines which of; // the loop versions is executed: If the runtime check detects any memory; // aliasing, then the original loop is executed. Otherwise, the version with; // aggressive aliasing assumptions is used.; //; // Following are the top level steps:; //; // a) Perform LoopVersioningLICM's feasibility check.; // b) If loop is a candidate for versioning then create a memory bound check,; // by considering all the memory accesses in loop body.; // c) Clone original loop and set all memory accesses as no-alias in new loop.; // d) Set original loop & versioned loop as a branch target of the runtime check; // result.; //; // It transforms loop as shown below:; //; // +----------------+; // |Runtime Memcheck|; // +----------------+; // |; // +----------+----------------+----------+; // | |; // +---------+----------+ +-----------+----------+; // |Orig Loop Preheader | |Cloned Loop Preheader |; // +--------------------+ +----------------------+; // | |; // +--------------------+ +----------------------+; // |Orig Loop Body | |Cloned Loop Body |; // +--------------------+ +----------------------+; // | |; // +--------------------+ +----------------------+; // |Orig Loop Exit Block| |Cloned Loop Exit Block|; // +--------------------+ +-----------+-",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopVersioningLICM.cpp:1483,Perform,Perform,1483,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopVersioningLICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopVersioningLICM.cpp,1,['Perform'],['Perform']
Performance," NAME; * saturate_scanlines() - substitute saturation of bottom scanline with; * the saturation of top scanline;; * NAME; * value_scanlines() - substitute value of bottom scanline with; * the value of top scanline;; * NAME; * colorize_scanlines() - combine luminance of bottom scanline with hue; * and saturation of top scanline;; * NAME; * dissipate_scanlines()- randomly alpha-blend bottom and top scanlines,; * using alpha value of top scanline as a; * threshold for random values.; * SYNOPSIS; * void alphablend_scanlines( ASScanline *bottom, ASScanline *top, int );; * void allanon_scanlines ( ASScanline *bottom, ASScanline *top, int );; * void tint_scanlines ( ASScanline *bottom, ASScanline *top, int );; * void add_scanlines ( ASScanline *bottom, ASScanline *top, int );; * void sub_scanlines ( ASScanline *bottom, ASScanline *top, int );; * void diff_scanlines ( ASScanline *bottom, ASScanline *top, int );; * void darken_scanlines ( ASScanline *bottom, ASScanline *top, int );; * void lighten_scanlines ( ASScanline *bottom, ASScanline *top, int );; * void screen_scanlines ( ASScanline *bottom, ASScanline *top, int );; * void overlay_scanlines ( ASScanline *bottom, ASScanline *top, int );; * void hue_scanlines ( ASScanline *bottom, ASScanline *top, int );; * void saturate_scanlines ( ASScanline *bottom, ASScanline *top, int );; * void value_scanlines ( ASScanline *bottom, ASScanline *top, int );; * void colorize_scanlines ( ASScanline *bottom, ASScanline *top, int );; * void dissipate_scanlines ( ASScanline *bottom, ASScanline *top, int );; * INPUTS; * bottom - pointer to the ASScanline that will be overalayed; * top - pointer to ASScanline that will overlay bottom.; * DESCRIPTION; * This functions accept 2 scanlines as an arguments stored in; * ASScanline structures with data in 24.8 format. Merging operation is; * performed on these scanlines and result is stored in bottom; * ASScanline.; * The following are merging methods used in each function :; *; ****************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/blender.h:3380,perform,performed,3380,graf2d/asimage/src/libAfterImage/blender.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/blender.h,1,['perform'],['performed']
Performance," See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===---------------------------------------------------------------------===//; //; // This pass analyzes vector computations and removes unnecessary; // doubleword swaps (xxswapd instructions). This pass is performed; // only for little-endian VSX code generation.; //; // For this specific case, loads and stores of v4i32, v4f32, v2i64,; // and v2f64 vectors are inefficient. These are implemented using; // the lxvd2x and stxvd2x instructions, which invert the order of; // doublewords in a vector register. Thus code generation inserts; // an xxswapd after each such load, and prior to each such store.; //; // The extra xxswapd instructions reduce performance. The purpose; // of this pass is to reduce the number of xxswapd instructions; // required for correctness.; //; // The primary insight is that much code that operates on vectors; // does not care about the relative order of elements in a register,; // so long as the correct memory order is preserved. If we have a; // computation where all input values are provided by lxvd2x/xxswapd,; // all outputs are stored using xxswapd/lxvd2x, and all intermediate; // computations are lane-insensitive (independent of element order),; // then all the xxswapd instructions associated with the loads and; // stores may be removed without changing observable semantics.; //; // This pass uses standard equivalence class infrastructure to create; // maximal webs of computations fitting the above description. Each; // such web is then optimized by removing its unnecessary xxswapd; // instructions.; //; // There are some lane-sensitive operations for which we can still; // permit the optimization, provided we modify those operations; // accordingly. Such operations are identified as using ""special; // handling"" within this module.; //; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCVSXSwapRemoval.cpp:1544,load,loads,1544,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCVSXSwapRemoval.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCVSXSwapRemoval.cpp,3,"['load', 'optimiz']","['loads', 'optimization', 'optimized']"
Performance," TO | FROM; //; // map(s); // &s, &s, sizeof(S2), TARGET_PARAM | TO | FROM; //; // map(s.i); // &s, &(s.i), sizeof(int), TARGET_PARAM | TO | FROM; //; // map(s.s.f); // &s, &(s.s.f[0]), 50*sizeof(float), TARGET_PARAM | TO | FROM; //; // map(s.p); // &s, &(s.p), sizeof(double*), TARGET_PARAM | TO | FROM; //; // map(to: s.p[:22]); // &s, &(s.p), sizeof(double*), TARGET_PARAM (*); // &s, &(s.p), sizeof(double*), MEMBER_OF(1) (**); // &(s.p), &(s.p[0]), 22*sizeof(double),; // MEMBER_OF(1) | PTR_AND_OBJ | TO (***); // (*) alloc space for struct members, only this is a target parameter; // (**) map the pointer (nothing to be mapped in this example) (the compiler; // optimizes this entry out, same in the examples below); // (***) map the pointee (map: to); //; // map(to: s.ref); // &s, &(s.ref), sizeof(int*), TARGET_PARAM (*); // &s, &(s.ref), sizeof(int), MEMBER_OF(1) | PTR_AND_OBJ | TO (***); // (*) alloc space for struct members, only this is a target parameter; // (**) map the pointer (nothing to be mapped in this example) (the compiler; // optimizes this entry out, same in the examples below); // (***) map the pointee (map: to); //; // map(s.ps); // &s, &(s.ps), sizeof(S2*), TARGET_PARAM | TO | FROM; //; // map(from: s.ps->s.i); // &s, &(s.ps), sizeof(S2*), TARGET_PARAM; // &s, &(s.ps), sizeof(S2*), MEMBER_OF(1); // &(s.ps), &(s.ps->s.i), sizeof(int), MEMBER_OF(1) | PTR_AND_OBJ | FROM; //; // map(to: s.ps->ps); // &s, &(s.ps), sizeof(S2*), TARGET_PARAM; // &s, &(s.ps), sizeof(S2*), MEMBER_OF(1); // &(s.ps), &(s.ps->ps), sizeof(S2*), MEMBER_OF(1) | PTR_AND_OBJ | TO; //; // map(s.ps->ps->ps); // &s, &(s.ps), sizeof(S2*), TARGET_PARAM; // &s, &(s.ps), sizeof(S2*), MEMBER_OF(1); // &(s.ps), &(s.ps->ps), sizeof(S2*), MEMBER_OF(1) | PTR_AND_OBJ; // &(s.ps->ps), &(s.ps->ps->ps), sizeof(S2*), PTR_AND_OBJ | TO | FROM; //; // map(to: s.ps->ps->s.f[:22]); // &s, &(s.ps), sizeof(S2*), TARGET_PARAM; // &s, &(s.ps), sizeof(S2*), MEMBER_OF(1); // &(s.ps), &(s.ps->ps), sizeof(S2*), ME",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:2324,optimiz,optimizes,2324,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['optimiz'],['optimizes']
Performance," TTree or TChain inputs, Snapshot will try to write out all top-level branches. For other; /// types of inputs, all columns returned by GetColumnNames() will be written out. If friend trees or chains are; /// present, by default all friend top-level branches that have names that do not collide with; /// names of branches in the main TTree/TChain will be written out. Since v6.24, Snapshot will also write out; /// friend branches with the same names of branches in the main TTree/TChain with names of the form; /// `<friendname>_<branchname>` in order to differentiate them from the branches in the main tree/chain.; ///; /// ### Writing to a sub-directory; ///; /// Snapshot supports writing the TTree in a sub-directory inside the TFile. It is sufficient to specify the path to; /// the TTree as part of the TTree name, e.g. `df.Snapshot(""subdir/t"", ""f.root"")` write TTree `t` in the; /// sub-directory `subdir` of file `f.root` (creating file and sub-directory as needed).; ///; /// \attention In multi-thread runs (i.e. when EnableImplicitMT() has been called) threads will loop over clusters of; /// entries in an undefined order, so Snapshot will produce outputs in which (clusters of) entries will be shuffled with; /// respect to the input TTree. Using such ""shuffled"" TTrees as friends of the original trees would result in wrong; /// associations between entries in the main TTree and entries in the ""shuffled"" friend. Since v6.22, ROOT will; /// error out if such a ""shuffled"" TTree is used in a friendship.; ///; /// \note In case no events are written out (e.g. because no event passes all filters) the behavior of Snapshot in; /// single-thread and multi-thread runs is different: in single-thread runs, Snapshot will write out a TTree with; /// the specified name and zero entries; in multi-thread runs, no TTree object will be written out to disk.; ///; /// \note Snapshot will refuse to process columns with names of the form `#columnname`. These are special columns; /// made avai",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2032,multi-thread,multi-thread,2032,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['multi-thread'],['multi-thread']
Performance," TTreeCache is detrimental for performance?; Yes, some corner cases. For example, when reading only a small fraction of all; entries such that not all branch buffers are read. \anchor description; ## General Description; This class acts as a file cache, registering automatically the baskets from; the branches being processed via direct manipulation of TTrees or with tools; such as TTree::Draw, TTree::Process, TSelector, TTreeReader and RDataFrame; when in the learning phase. The learning phase is by default 100 entries.; It can be changed via TTreeCache::SetLearnEntries. The usage of a TTreeCache can considerably improve the runtime performance at; the price of a modest investment in memory, in particular when the TTree is; accessed remotely, e.g. via a high latency network. For each TTree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize method; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:3298,cache,cache,3298,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['cache'],['cache']
Performance," \class TGTextButton; \ingroup guiwidgets. Yield an action as soon as it is clicked. This buttons usually provides fast access to; frequently used or critical commands. It may appear alone or placed in a group. The action it performs can be inscribed with a meaningful tooltip; set by `SetToolTipText(const char* text, Long_t delayms=400). The text button has a label indicating the action to be taken when; the button is pressed. The text can be a hot string (""&Exit"") that; defines the label ""Exit"" and keyboard mnemonics Alt+E for button; selection. A button label can be changed by SetText(new_label). Selecting a text or picture button will generate the event:; - kC_COMMAND, kCM_BUTTON, button id, user data.; */; /** \class TGPictureButton; \ingroup guiwidgets. Yield an action as soon as it is clicked. This buttons usually provides fast access to; frequently used or critical commands. It may appear alone or placed in a group. The action it performs can be inscribed with a meaningful tooltip; set by `SetToolTipText(const char* text, Long_t delayms=400). The text button has a label indicating the action to be taken when; the button is pressed. The text can be a hot string (""&Exit"") that; defines the label ""Exit"" and keyboard mnemonics Alt+E for button; selection. A button label can be changed by SetText(new_label). Selecting a text or picture button will generate the event:; - kC_COMMAND, kCM_BUTTON, button id, user data.; */; /** \class TGCheckButton; \ingroup guiwidgets. Selects different options. Like text buttons, they have text or hot string as a label. Selecting a check button will generate the event:; - kC_COMMAND, kCM_CHECKBUTTON, button id, user data. If a command string has been specified (via SetCommand()) then this; command string will be executed via the interpreter whenever a; button is selected. A command string can contain the macros:. - $MSG -- kC_COMMAND, kCMCHECKBUTTON packed message; (use GET_MSG() and GET_SUBMSG() to unpack); - $PARM1 -- button id; - ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButton.cxx:2060,perform,performs,2060,gui/gui/src/TGButton.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButton.cxx,1,['perform'],['performs']
Performance," a stack, with a pointer to the top; of the stack kept in thread-local storage. objc_exception_try_enter pushes a catch buffer onto the EH stack.; objc_exception_try_exit pops the given catch buffer, which is; required to be the top of the EH stack.; objc_exception_throw pops the top of the EH stack, writes the; thrown exception into the appropriate field, and longjmps; to the setjmp buffer. It crashes the process (with a printf; and an abort()) if there are no catch buffers on the stack.; objc_exception_extract just reads the exception pointer out of the; catch buffer. There's no reason an implementation couldn't use a light-weight; setjmp here --- something like __builtin_setjmp, but API-compatible; with the heavyweight setjmp. This will be more important if we ever; want to implement correct ObjC/C++ exception interactions for the; fragile ABI. Note that for this use of setjmp/longjmp to be correct in the presence of; optimization, we use inline assembly on the set of local variables to force; flushing locals to memory immediately before any protected calls and to; inhibit optimizing locals across the setjmp->catch edge. The basic framework for a @try-catch-finally is as follows:; {; objc_exception_data d;; id _rethrow = null;; bool _call_try_exit = true;. objc_exception_try_enter(&d);; if (!setjmp(d.jmp_buf)) {; ... try body ...; } else {; // exception path; id _caught = objc_exception_extract(&d);. // enter new try scope for handlers; if (!setjmp(d.jmp_buf)) {; ... match exception and execute catch blocks ... // fell off end, rethrow.; _rethrow = _caught;; ... jump-through-finally to finally_rethrow ...; } else {; // exception in catch block; _rethrow = objc_exception_extract(&d);; _call_try_exit = false;; ... jump-through-finally to finally_rethrow ...; }; }; ... jump-through-finally to finally_end ... finally:; if (_call_try_exit); objc_exception_try_exit(&d);. ... finally block ....; ... dispatch to finally destination ... finally_rethrow:; objc_exception_th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:1199,optimiz,optimization,1199,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,2,['optimiz'],"['optimization', 'optimizing']"
Performance," a time, we can generate; /// multiple machine basic blocks for one IR level basic block.; /// This is how we handle bit tests and switches.; ///; /// 2. At the MI level, tail calls are represented via a special return; /// MIInst called ""tcreturn"". Thus if we know the basic block in which we; /// wish to insert the stack protector check, we get the correct behavior; /// by always inserting the stack protector check right before the return; /// statement. This is a ""magical transformation"" since no matter where; /// the stack protector check intrinsic is, we always insert the stack; /// protector check code at the end of the BB.; ///; /// Given the aforementioned constraints, the following solution was devised:; ///; /// 1. On platforms that do not support ISel stack protector check; /// generation, allow for the normal IR level stack protector check; /// generation to continue.; ///; /// 2. On platforms that do support ISel stack protector check; /// generation:; ///; /// a. Use the IR level stack protector pass to decide if a stack; /// protector is required/which BB we insert the stack protector check; /// in by reusing the logic already therein.; ///; /// b. After we finish selecting the basic block, we produce the validation; /// code with one of these techniques:; /// 1) with a call to a guard check function; /// 2) with inlined instrumentation; ///; /// 1) We insert a call to the check function before the terminator.; ///; /// 2) We first find a splice point in the parent basic block; /// before the terminator and then splice the terminator of said basic; /// block into the success basic block. Then we code-gen a new tail for; /// the parent basic block consisting of the two loads, the comparison,; /// and finally two branches to the success/failure basic blocks. We; /// conclude by code-gening the failure basic block if we have not; /// code-gened it already (all stack protector checks we generate in; /// the same function, use the same failure basic block).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenCommonISel.h:4557,load,loads,4557,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenCommonISel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenCommonISel.h,1,['load'],['loads']
Performance," actions in the above snippets. When the column type is not a common one such as `int`, `double`, `char` or `float` it is nonetheless good practice to; specify it as a template parameter to the action itself, like this:; ~~~{.cpp}; df.Histo1D(""b1""); // OK, the type of ""b1"" is deduced at runtime; df.Min<MyNumber_t>(""myObject""); // OK, ""myObject"" is deduced to be of type `MyNumber_t`; ~~~. Deducing types at runtime requires the just-in-time compilation of the relevant actions, which has a small runtime; overhead, so specifying the type of the columns as template parameters to the action is good practice when performance is a goal. When strings are passed as expressions to Filter() or Define(), fundamental types are passed as constants. This avoids certaincommon mistakes such as typing `x = 0` rather than `x == 0`:. ~~~{.cpp}; // this throws an error (note the typo); df.Define(""x"", ""0"").Filter(""x = 0"");; ~~~. \anchor generic-actions; ### User-defined custom actions; RDataFrame strives to offer a comprehensive set of standard actions that can be performed on each event. At the same; time, it allows users to inject their own action code to perform arbitrarily complex data reductions. #### Implementing custom actions with Book(). Through the Book() method, users can implement a custom action and have access to the same features; that built-in RDataFrame actions have, e.g. hooks to events related to the start, end and execution of the; event loop, or the possibility to return a lazy RResultPtr to an arbitrary type of result:. ~~~{.cpp}; #include <ROOT/RDataFrame.hxx>; #include <memory>. class MyCounter : public ROOT::Detail::RDF::RActionImpl<MyCounter> {; std::shared_ptr<int> fFinalResult = std::make_shared<int>(0);; std::vector<int> fPerThreadResults;. public:; // We use a public type alias to advertise the type of the result of this action; using Result_t = int;. MyCounter(unsigned int nSlots) : fPerThreadResults(nSlots) {}. // Called before the event loop to retrieve the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:67179,perform,performed,67179,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['perform'],['performed']
Performance," also the line; /// tables, ranges, ...) is derived from that set of root DIEs.; ///; /// The root DIEs are identified because they contain relocations that; /// points to code section(the low_pc for a function, the location for; /// a variable). These relocations are gathered as a very first step; /// when we start processing a object file by AddressesMap.; ///; /// The overall linking process looks like this:; ///; /// parrallel_for_each(ObjectFile) {; /// for_each (Compile Unit) {; /// 1. Load Clang modules.; /// }; ///; /// parrallel_for_each(Compile Unit) {; /// 1. Load input DWARF for Compile Unit.; /// 2. Report warnings for Clang modules.; /// 3. Analyze live DIEs and type names(if ODR deduplication is requested).; /// 4. Clone DIEs(Generate output DIEs and resulting DWARF tables).; /// The result is in an OutDebugInfoBytes, which is an ELF file; /// containing DWARF tables corresponding to the current compile unit.; /// 5. Cleanup Input and Output DIEs.; /// }; ///; /// Deallocate loaded Object file.; /// }; ///; /// if (ODR deduplication is requested); /// Generate an artificial compilation unit (""Type Table"": used to partially; /// generate DIEs at the clone stage).; ///; /// for_each (ObjectFile) {; /// for_each (Compile Unit) {; /// 1. Set offsets to Compile Units DWARF tables.; /// 2. Sort offsets/attributes/patches to have a predictable result.; /// 3. Patch size/offsets fields.; /// 4. Generate index tables.; /// 5. Move DWARF tables of compile units into the resulting file.; /// }; /// }; ///; /// Every compile unit is processed separately, visited only once; /// (except case inter-CU references exist), and used data is freed; /// after the compile unit is processed. The resulting file is glued together; /// from the generated debug tables which correspond to separate compile units.; ///; /// Handling inter-CU references: inter-CU references are hard to process; /// using only one pass. f.e. if CU1 references CU100 and CU100 references; /// CU1, we ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Parallel/DWARFLinker.h:1465,load,loaded,1465,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Parallel/DWARFLinker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Parallel/DWARFLinker.h,1,['load'],['loaded']
Performance," and \a B. Returns 1 if the length of the string in \a A is less than; /// the maximum, otherwise, returns 0.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// int _mm_cmpestrs(__m128i A, int LA, __m128i B, int LB, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VPCMPESTRI / PCMPESTRI </c>; /// instruction.; ///; /// \param A; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LA; /// An integer that specifies the length of the string in \a A.; /// \param B; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LB; /// An integer that specifies the length of the string in \a B.; /// \param M; /// An 8-bit immediate operand specifying whether the characters are bytes or; /// words and the type of comparison to perform. \n; /// Bits [1:0]: Determine source data format. \n; /// 00: 16 unsigned bytes \n; /// 01: 8 unsigned words \n; /// 10: 16 signed bytes \n; /// 11: 8 signed words \n; /// Bits [3:2]: Determine comparison type and aggregation method. \n; /// 00: Subset: Each character in \a B is compared for equality with all; /// the characters in \a A. \n; /// 01: Ranges: Each character in \a B is compared to \a A. The comparison; /// basis is greater than or equal for even-indexed elements in \a A,; /// and less than or equal for odd-indexed elements in \a A. \n; /// 10: Match: Compare each pair of corresponding characters in \a A and; /// \a B for equality. \n; /// 11: Substring: Search \a B for substring matches of \a A. \n; /// Bits [5:4]: Determine whether to perform a one's complement in the bit; /// mask of the comparison results. \n; /// 00: No effect. \n; /// 01: Negate the bit mask. \n; /// 10: No effect. \n; /// 11: Negate the bit mask only for bits with an index less than or equal; /// to the size of \a A or \a B. \n; /// \returns Returns 1 if the length of the string in \a A is less than the; /// maximum, otherwise, returns 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:1776,perform,perform,1776,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,1,['perform'],['perform']
Performance," assumes that the latency of a load opcode; // matches the instruction latency.; //; // FIXME: In the absence of cache misses (i.e. L1I/L1D/iTLB/dTLB hits/misses),; // and load/store conflicts, the latency of a load is determined by the depth; // of the load pipeline. So, we could use field `LoadLatency` in the; // MCSchedModel to model that latency.; // Field `LoadLatency` often matches the so-called 'load-to-use' latency from; // L1D, and it usually already accounts for any extra latency due to data; // forwarding.; // When doing throughput analysis, `LoadLatency` is likely to; // be a better predictor of load latency than instruction latency. This is; // particularly true when simulating code with temporal/spatial locality of; // memory accesses.; // Using `LoadLatency` (instead of the instruction latency) is also expected; // to improve the load queue allocation for long latency instructions with; // folded memory operands (See PR39829).; //; // FIXME: On some processors, load/store operations are split into multiple; // uOps. For example, X86 AMD Jaguar natively supports 128-bit data types, but; // not 256-bit data types. So, a 256-bit load is effectively split into two; // 128-bit loads, and each split load consumes one 'LoadQueue' entry. For; // simplicity, this class optimistically assumes that a load instruction only; // consumes one entry in the LoadQueue. Similarly, store instructions only; // consume a single entry in the StoreQueue.; // In future, we should reassess the quality of this design, and consider; // alternative approaches that let instructions specify the number of; // load/store queue entries which they consume at dispatch stage (See; // PR39830).; //; // An instruction that both 'mayStore' and 'HasUnmodeledSideEffects' is; // conservatively treated as a store barrier. It forces older store to be; // executed before newer stores are issued.; //; // An instruction that both 'MayLoad' and 'HasUnmodeledSideEffects' is; // conservatively treated ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h:1100,load,load,1100,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h,1,['load'],['load']
Performance," automatically reaped; you must call waitpid() or; * handle SIGCHLD yourself, or the child will become a zombie.; * %G_SPAWN_LEAVE_DESCRIPTORS_OPEN means that the parent's open file; * descriptors will be inherited by the child; otherwise all; * descriptors except stdin/stdout/stderr will be closed before; * calling exec() in the child. %G_SPAWN_SEARCH_PATH means that; * <literal>argv[0]</literal> need not be an absolute path, it; * will be looked for in the user's PATH. %G_SPAWN_STDOUT_TO_DEV_NULL; * means that the child's standad output will be discarded, instead; * of going to the same location as the parent's standard output.; * %G_SPAWN_STDERR_TO_DEV_NULL means that the child's standard error; * will be discarded. %G_SPAWN_CHILD_INHERITS_STDIN means that; * the child will inherit the parent's standard input (by default,; * the child's standard input is attached to /dev/null).; *; * @child_setup and @user_data are a function and user data to be; * called in the child after GLib has performed all the setup it plans; * to perform (including creating pipes, closing file descriptors,; * etc.) but before calling exec(). That is, @child_setup is called; * just before calling exec() in the child. Obviously actions taken in; * this function will only affect the child, not the parent. ; *; * If non-NULL, @child_pid will be filled with the child's process; * ID. You can use the process ID to send signals to the child, or; * to waitpid() if you specified the %G_SPAWN_DO_NOT_REAP_CHILD flag.; *; * If non-NULL, the @standard_input, @standard_output, @standard_error; * locations will be filled with file descriptors for writing to the child's; * standard input or reading from its standard output or standard error.; * The caller of g_spawn_async_with_pipes() must close these file descriptors; * when they are no longer in use. If these parameters are NULL, the; * corresponding pipe won't be created.; *; * @error can be NULL to ignore errors, or non-NULL to report errors.; * If an",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:2645,perform,performed,2645,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,2,['perform'],"['perform', 'performed']"
Performance," be encoded as immediate operands of the; // instructions.; //; // See kernel/bpf/verifier.c:convert_ctx_access function in the; // Linux kernel source tree for details.; //; // (b) Pointers to context parameters of BPF programs must not be; // modified before access.; //; // During BPF program verification a tag PTR_TO_CTX is tracked for; // register values. In case if register with such tag is modified; // BPF program is not allowed to read or write memory using this; // register. See kernel/bpf/verifier.c:check_mem_access function; // in the Linux kernel source tree for details.; //; // The following sequence of the IR instructions:; //; // %x = getelementptr %ptr, %constant_offset; // %y = load %x; //; // Is translated as a single machine instruction:; //; // LDW %ptr, %constant_offset; //; // In order for cases (a) and (b) to work the sequence %x-%y above has; // to be preserved by the IR passes.; //; // However, several optimization passes might sink `load` instruction; // or hoist `getelementptr` instruction so that the instructions are; // no longer in sequence. Examples of such passes are:; // SimplifyCFGPass, InstCombinePass, GVNPass.; // After such modification the verifier would reject the BPF program.; //; // To avoid this issue the patterns like (load/store (getelementptr ...)); // are replaced by calls to BPF specific intrinsic functions:; // - llvm.bpf.getelementptr.and.load; // - llvm.bpf.getelementptr.and.store; //; // These calls are lowered back to (load/store (getelementptr ...)); // by BPFCheckAndAdjustIR pass right before the translation from IR to; // machine instructions.; //; // The transformation is split into the following steps:; // - When IR is generated from AST the calls to intrinsic function; // llvm.preserve.static.offset are inserted.; // - BPFPreserveStaticOffsetPass is executed as early as possible; // with AllowPatial set to true, this handles marked GEP chains; // with constant offsets.; // - BPFPreserveStaticOffsetPass is exec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFPreserveStaticOffset.cpp:2119,optimiz,optimization,2119,interpreter/llvm-project/llvm/lib/Target/BPF/BPFPreserveStaticOffset.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFPreserveStaticOffset.cpp,2,"['load', 'optimiz']","['load', 'optimization']"
Performance," before summing the negative log probabilities.; * <tr><td> **codegen** <td> **Experimental** - Generates and compiles minimal C++ code for the NLL on-the-fly and wraps it in the returned RooAbsReal.; * Also generates and compiles the code for the gradient using Automatic Differentiation (AD) with [Clad](https://github.com/vgvassilev/clad).; * This analytic gradient is passed to the minimizer, which can result in significant speedups for many-parameter fits,; * even compared to the **cpu** backend. However, if one of the RooAbsArg objects in the model does not support the code generation,; * this backend can't be used.; * <tr><td> **codegen_no_grad** <td> **Experimental** - Same as **codegen**, but doesn't generate and compile the gradient code and use the regular numerical differentiation instead.; * This is expected to be slower, but useful for debugging problems with the analytic gradient.; * </table>; * <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization (on by default); * <tr><td> `SplitRange(bool flag)` <td> Use separate fit ranges in a simultaneous fit. Actual range name for each subsample is assumed to; * be `rangeName_indexState`, where `indexState` is the state of the master index category of the simultaneous fit.; * Using `Range(""range""), SplitRange()` as switches, different ranges could be set like this:; * ```; * myVariable.setRange(""range_pi0"", 135, 210);; * myVariable.setRange(""range_gamma"", 50, 210);; * ```; * <tr><td> `Constrain(const RooArgSet&pars)` <td> For p.d.f.s that contain internal parameter constraint terms (that is usually product PDFs, where one; * term of the product depends on parameters but not on the observable(s),), only apply constraints to the given subset of parameters.; * <tr><td> `ExternalConstraints(const RooArgSet& )` <td> Include given external constraints to likelihood by multiplying them with the original likelihood.; * <tr><td> `GlobalObservables(const RooArgSet&)` <td> Define the set of normalization ob",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:5673,Optimiz,Optimize,5673,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,"['Optimiz', 'optimiz']","['Optimize', 'optimization']"
Performance," bit mask is zero and the length of the; /// string in \a B is the maximum, otherwise, returns 0.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// int _mm_cmpestra(__m128i A, int LA, __m128i B, int LB, const int M);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VPCMPESTRI / PCMPESTRI </c>; /// instruction.; ///; /// \param A; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LA; /// An integer that specifies the length of the string in \a A.; /// \param B; /// A 128-bit integer vector containing one of the source operands to be; /// compared.; /// \param LB; /// An integer that specifies the length of the string in \a B.; /// \param M; /// An 8-bit immediate operand specifying whether the characters are bytes or; /// words and the type of comparison to perform. \n; /// Bits [1:0]: Determine source data format. \n; /// 00: 16 unsigned bytes \n; /// 01: 8 unsigned words \n; /// 10: 16 signed bytes \n; /// 11: 8 signed words \n; /// Bits [3:2]: Determine comparison type and aggregation method. \n; /// 00: Subset: Each character in \a B is compared for equality with all; /// the characters in \a A. \n; /// 01: Ranges: Each character in \a B is compared to \a A. The comparison; /// basis is greater than or equal for even-indexed elements in \a A,; /// and less than or equal for odd-indexed elements in \a A. \n; /// 10: Match: Compare each pair of corresponding characters in \a A and; /// \a B for equality. \n; /// 11: Substring: Search \a B for substring matches of \a A. \n; /// Bits [5:4]: Determine whether to perform a one's complement on the bit; /// mask of the comparison results. \n; /// 00: No effect. \n; /// 01: Negate the bit mask. \n; /// 10: No effect. \n; /// 11: Negate the bit mask only for bits with an index less than or equal; /// to the size of \a A or \a B.; /// \returns Returns 1 if the bit mask is zero and the length of the string in; /// \a B is the maximum, otherwise, returns 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:1791,perform,perform,1791,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,1,['perform'],['perform']
Performance," box and tessellation vertexes) are in local or master (world frame).; `fLocalMaster` is a standard 4x4 translation matrix (OpenGL column major ordering); for placing the object into the 3D master frame. If `fLocalFrame` is kFALSE, `fLocalMaster` should contain an identity matrix. This; is set by default, and can be reset using `SetLocalMasterIdentity()` function. Logical & Physical Objects.; There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local; reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the `fID` logical ID member of; TBuffer3D. If repeated addition of the same `fID` is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable; performance gains in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method. ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different `fLocalMaster` placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the `fLocalMaster` transform and the; `fColor` and `fTransparency` attributes, which can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx:5171,cache,cached,5171,core/base/src/TBuffer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx,1,['cache'],['cached']
Performance," cd llvm-project/build; // > ninja LLJITWithRemoteDebugging llvm-jitlink-executor; // > cp ../llvm/test/Examples/OrcV2Examples/Inputs/argc_sub1_elf.ll .; // > bin/LLJITWithRemoteDebugging --wait-for-debugger argc_sub1_elf.ll; // Found out-of-process executor: bin/llvm-jitlink-executor; // Launched executor in subprocess: 65535; // Attach a debugger and press any key to continue.; //; //; // [Terminal 2] Attach a debugger to the child process:; //; // (lldb) log enable lldb jit; // (lldb) settings set plugin.jit-loader.gdb.enable on; // (lldb) settings set target.source-map Inputs/ \; // /path/to/llvm-project/llvm/test/Examples/OrcV2Examples/Inputs/; // (lldb) attach -p 65535; // JITLoaderGDB::SetJITBreakpoint looking for JIT register hook; // JITLoaderGDB::SetJITBreakpoint setting JIT breakpoint; // Process 65535 stopped; // (lldb) b sub1; // Breakpoint 1: no locations (pending).; // WARNING: Unable to resolve breakpoint to any actual locations.; // (lldb) c; // Process 65535 resuming; //; //; // [Terminal 1] Press a key to start code generation and execution:; //; // Parsed input IR code from: argc_sub1_elf.ll; // Initialized LLJIT for remote executor; // Running: argc_sub1_elf.ll; //; //; // [Terminal 2] Breakpoint hits; we change the argc value from 1 to 42:; //; // (lldb) JITLoaderGDB::JITDebugBreakpointHit hit JIT breakpoint; // JITLoaderGDB::ReadJITDescriptorImpl registering JIT entry at 0x106b34000; // 1 location added to breakpoint 1; // Process 65535 stopped; // * thread #1, queue = 'com.apple.main-thread', stop reason = breakpoint 1.1; // frame #0: JIT(0x106b34000)`sub1(x=1) at argc_sub1.c:1:28; // -> 1 	int sub1(int x) { return x - 1; }; // 2 	int main(int argc, char **argv) { return sub1(argc); }; // (lldb) p x; // (int) $0 = 1; // (lldb) expr x = 42; // (int) $1 = 42; // (lldb) c; //; //; // [Terminal 1] Example output reflects the modified value:; //; // Exit code: 41; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp:2500,queue,queue,2500,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp,1,['queue'],['queue']
Performance," compresion algorithm, e.g. -f206; \param -fk Sets the target file to contain the baskets with the same compression; as the input files (unless -O is specified). Compresses the meta data; using the compression level specified in the first input or the; compression setting after fk (for example 206 when using -fk206); \param -ff The compression level used is the one specified in the first input; \param -k Skip corrupt or non-existent files, do not exit; \param -O Re-optimize basket size when merging TTree; \param -T Do not merge Trees; \param -v Explicitly set the verbosity level: 0 request no output, 99 is the default; \param -j Parallelise the execution in `J` processes. If the number of processes is not specified, use the system maximum.; \param -dbg Enable verbosity. If -j was specified, do not not delete partial files stored inside working directory.; \param -d Carry out the partial multiprocess execution in the specified directory; \param -n Open at most `N` files at once (use 0 to request to use the system maximum); \param -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to disable).; \param -experimental-io-features `<feature>` Enables the corresponding experimental feature for output trees. \see ROOT::Experimental::EIOFeatures; \return hadd returns a status code: 0 if OK, -1 otherwise. For example assume 3 files f1, f2, f3 containing histograms hn and Trees Tn; - f1 with h1 h2 h3 T1; - f2 with h1 h4 T1 T2; - f3 with h5; the result of; ```; hadd -f x.root f1.root f2.root f3.root; ```; will be a file x.root with h1 h2 h3 h4 h5 T1 T2; where; - h1 will be the sum of the 2 histograms in f1 and f2; - T1 will be the merge of the Trees in f1 and f2. The files may contain sub-directories. If the source files contains histograms and Trees, one can skip; the Trees with; ```; hadd -T targetfile source1 source2 ...; ```. Wildcarding and indirect files are also supported; ```; hadd result.root myfil*.root; ```; will merge all files in myfil*.ro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/src/hadd.cxx:1667,cache,cachesize,1667,main/src/hadd.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/src/hadd.cxx,2,['cache'],"['cache', 'cachesize']"
Performance," continue to append data to an existing list, use ""+"" in front; /// of the list name;; /// ~~~ {.cpp}; /// tree.Draw("">>+yplus"",""y>0""); /// ~~~; /// will not reset yplus, but will enter the selected entries at the end; /// of the existing list.; ///; /// ### Using a TEventList, TEntryList or TEntryListArray as Input; ///; /// Once a TEventList or a TEntryList object has been generated, it can be used as input; /// for TTree::Draw. Use TTree::SetEventList or TTree::SetEntryList to set the; /// current event list; ///; /// Example 1:; /// ~~~ {.cpp}; /// TEventList *elist = (TEventList*)gDirectory->Get(""yplus"");; /// tree->SetEventList(elist);; /// tree->Draw(""py"");; /// ~~~; /// Example 2:; /// ~~~ {.cpp}; /// TEntryList *elist = (TEntryList*)gDirectory->Get(""yplus"");; /// tree->SetEntryList(elist);; /// tree->Draw(""py"");; /// ~~~; /// If a TEventList object is used as input, a new TEntryList object is created; /// inside the SetEventList function. In case of a TChain, all tree headers are loaded; /// for this transformation. This new object is owned by the chain and is deleted; /// with it, unless the user extracts it by calling GetEntryList() function.; /// See also comments to SetEventList() function of TTree and TChain.; ///; /// If arrays are used in the selection criteria and TEntryListArray is not used,; /// all the entries that have at least one element of the array that satisfy the selection; /// are entered in the list.; ///; /// Example:; /// ~~~ {.cpp}; /// tree.Draw("">>pyplus"",""fTracks.fPy>0"");; /// tree->SetEventList(pyplus);; /// tree->Draw(""fTracks.fPy"");; /// ~~~; /// will draw the fPy of ALL tracks in event with at least one track with; /// a positive fPy.; ///; /// To select only the elements that did match the original selection; /// use TEventList::SetReapplyCut or TEntryList::SetReapplyCut.; ///; /// Example:; /// ~~~ {.cpp}; /// tree.Draw("">>pyplus"",""fTracks.fPy>0"");; /// pyplus->SetReapplyCut(true);; /// tree->SetEventList(pyplus);; /// tree->D",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:24297,load,loaded,24297,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['load'],['loaded']
Performance," currently; consumed input in bits. The Z_TREES option behaves as Z_BLOCK does, but it also returns when the; end of each deflate block header is reached, before any actual data in that; block is decoded. This allows the caller to determine the length of the; deflate block header for later use in random access within a deflate block.; 256 is added to the value of strm->data_type when inflate() returns; immediately after reaching the end of the deflate block header. inflate() should normally be called until it returns Z_STREAM_END or an; error. However if all decompression is to be performed in a single step (a; single call of inflate), the parameter flush should be set to Z_FINISH. In; this case all pending input is processed and all pending output is flushed;; avail_out must be large enough to hold all of the uncompressed data for the; operation to complete. (The size of the uncompressed data may have been; saved by the compressor for this purpose.) The use of Z_FINISH is not; required to perform an inflation in one step. However it may be used to; inform inflate that a faster approach can be used for the single inflate(); call. Z_FINISH also informs inflate to not maintain a sliding window if the; stream completes, which reduces inflate's memory footprint. If the stream; does not complete, either because not all of the stream is provided or not; enough output space is provided, then a sliding window will be allocated and; inflate() can be called again to continue the operation as if Z_NO_FLUSH had; been used. In this implementation, inflate() always flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the effects of the flush parameter in this implementation are; on the return value of inflate() as noted below, when inflate() returns early; when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed af",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3892,perform,perform,3892,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['perform'],['perform']
Performance," dimensions) and their crossings; /// - ability to identify peaks close; /// to the edges of the spectrum region; /// - resolution, decomposition of; /// doublets and multiplets. The algorithm should be able to recognise close; /// positioned peaks.; ///; /// #### References:; ///; /// [1] M.A. Mariscotti: A method for; /// identification of peaks in the presence of background and its application to; /// spectrum analysis. NIM 50 (1967), 309-320.; ///; /// [2] M.Morhac, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo.:Identification; /// of peaks in multidimensional coincidence gamma-ray spectra. NIM, A443 (2000); /// 108-125.; ///; /// [3] Z.K. Silagadze, A new algorithm for automatic photo-peak searches. NIM A 376 (1996), 451.; ///; /// ### Example of peak searching method; ///; /// SearchHighRes function provides users with the possibility; /// to vary the input parameters and with the access to the output deconvolved data; /// in the destination spectrum. Based on the output data one can tune the; /// parameters.; ///; /// #### Example 1 - script Search3.c:; ///; /// \image html spectrum3_searching_image001.jpg Fig. 1 Three-dimensional spectrum with 5 peaks (sigma=2, threshold=5%, 3 iterations steps in the deconvolution); /// \image html spectrum3_searching_image003.jpg Fig. 2 Spectrum from Fig. 1 after background elimination and deconvolution; ///; /// #### Script:; ///; /// Example to illustrate high resolution peak searching function (class TSpectrum3).; /// To execute this example, do:; ///; /// `root > .x Search3.C`; ///; /// ~~~ {.cpp}; /// void Search3() {; /// Int_t i, j, k, nfound;; /// Int_t nbinsx = 32;; /// Int_t nbinsy = 32;; /// Int_t nbinsz = 32;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Int_t zmin = 0;; /// Int_t zmax = nbinsz;; /// Double_t*** source = new Double_t**[nbinsx];; /// Double_t*** dest = new Double_t**[nbinsx];; /// for(i=0;i<nbinsx;i++){; /// source[i]=new Double_t*[nbinsy];; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:3160,tune,tune,3160,hist/spectrum/src/TSpectrum3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx,1,['tune'],['tune']
Performance," do take into account only register usage and hiding; // low latency instructions; //; // Third the block order is chosen, there we try to hide high latencies; // and keep register usage low.; //; // After the third step, a pass is done to improve the hiding of low; // latencies.; //; // Actually when talking about 'low latency' or 'high latency' it includes; // both the latency to get the cache (or global mem) data go to the register,; // and the bandwidth limitations.; // Increasing the number of active wavefronts helps hide the former, but it; // doesn't solve the latter, thus why even if wavefront count is high, we have; // to try have as many instructions hiding high latencies as possible.; // The OpenCL doc says for example latency of 400 cycles for a global mem; // access, which is hidden by 10 instructions if the wavefront count is 10.; // Some figures taken from AMD docs:; // Both texture and constant L1 caches are 4-way associative with 64 bytes; // lines.; // Constant cache is shared with 4 CUs.; // For texture sampling, the address generation unit receives 4 texture; // addresses per cycle, thus we could expect texture sampling latency to be; // equivalent to 4 instructions in the very best case (a VGPR is 64 work items,; // instructions in a wavefront group are executed every 4 cycles),; // or 16 instructions if the other wavefronts associated to the 3 other VALUs; // of the CU do texture sampling too. (Don't take these figures too seriously,; // as I'm not 100% sure of the computation); // Data exports should get similar latency.; // For constant loading, the cache is shader with 4 CUs.; // The doc says ""a throughput of 16B/cycle for each of the 4 Compute Unit""; // I guess if the other CU don't read the cache, it can go up to 64B/cycle.; // It means a simple s_buffer_load should take one instruction to hide, as; // well as a s_buffer_loadx2 and potentially a s_buffer_loadx8 if on the same; // cache line.; //; // As of today the driver doesn't preload th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:3965,cache,cache,3965,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,1,['cache'],['cache']
